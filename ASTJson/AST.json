{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "qq"
                    },
                    "init": null
                },
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "ww"
                    },
                    "init": null
                },
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "ee"
                    },
                    "init": null
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "rr"
                    },
                    "init": null
                },
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "tt"
                    },
                    "init": null
                },
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "asf"
                    },
                    "init": null
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "qwe"
                    },
                    "init": null
                },
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "asdgq"
                    },
                    "init": null
                },
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "test1"
                    },
                    "init": null
                }
            ],
            "kind": "var"
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "fA"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "a1"
                },
                {
                    "type": "Identifier",
                    "name": "a2"
                }
            ],
            "defaults": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "LogicalExpression",
                            "operator": "&&",
                            "left": {
                                "type": "BinaryExpression",
                                "operator": "!=",
                                "left": {
                                    "type": "Identifier",
                                    "name": "a1"
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": null,
                                    "raw": "null"
                                }
                            },
                            "right": {
                                "type": "BinaryExpression",
                                "operator": "!=",
                                "left": {
                                    "type": "Identifier",
                                    "name": "a2"
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": null,
                                    "raw": "null"
                                }
                            }
                        },
                        "consequent": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "alert"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "both are null",
                                                "raw": "\"both are null\""
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "alternate": null
                    }
                ]
            },
            "generator": false,
            "expression": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "fB"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "b1"
                },
                {
                    "type": "Identifier",
                    "name": "b2"
                }
            ],
            "defaults": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "LogicalExpression",
                            "operator": "||",
                            "left": {
                                "type": "BinaryExpression",
                                "operator": "!=",
                                "left": {
                                    "type": "Identifier",
                                    "name": "b1"
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": null,
                                    "raw": "null"
                                }
                            },
                            "right": {
                                "type": "BinaryExpression",
                                "operator": "!=",
                                "left": {
                                    "type": "Identifier",
                                    "name": "b2"
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": null,
                                    "raw": "null"
                                }
                            }
                        },
                        "consequent": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "alert"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "at least 1 null",
                                                "raw": "\"at least 1 null\""
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "alternate": null
                    }
                ]
            },
            "generator": false,
            "expression": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "fC"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "c1"
                },
                {
                    "type": "Identifier",
                    "name": "c2"
                }
            ],
            "defaults": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "BinaryExpression",
                            "operator": "!=",
                            "left": {
                                "type": "Identifier",
                                "name": "c1"
                            },
                            "right": {
                                "type": "Literal",
                                "value": null,
                                "raw": "null"
                            }
                        },
                        "consequent": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "alert"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "c1 null",
                                                "raw": "\"c1 null\""
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "alternate": {
                            "type": "IfStatement",
                            "test": {
                                "type": "BinaryExpression",
                                "operator": "!=",
                                "left": {
                                    "type": "Identifier",
                                    "name": "c2"
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": null,
                                    "raw": "null"
                                }
                            },
                            "consequent": {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "alert"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Literal",
                                                    "value": "c2 null",
                                                    "raw": "\"c2 null\""
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "alternate": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "alert"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "no null",
                                            "raw": "\"no null\""
                                        }
                                    ]
                                }
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "fD"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "d1"
                },
                {
                    "type": "Identifier",
                    "name": "d2"
                }
            ],
            "defaults": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "sum"
                                },
                                "init": {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0"
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "LogicalExpression",
                            "operator": "&&",
                            "left": {
                                "type": "BinaryExpression",
                                "operator": "!=",
                                "left": {
                                    "type": "Identifier",
                                    "name": "d1"
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": null,
                                    "raw": "null"
                                }
                            },
                            "right": {
                                "type": "BinaryExpression",
                                "operator": "!=",
                                "left": {
                                    "type": "Identifier",
                                    "name": "d2"
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": null,
                                    "raw": "null"
                                }
                            }
                        },
                        "consequent": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "sum"
                                        },
                                        "right": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "d1"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "d2"
                                            }
                                        }
                                    }
                                }
                            ]
                        },
                        "alternate": null
                    }
                ]
            },
            "generator": false,
            "expression": false
        }
    ]
}
