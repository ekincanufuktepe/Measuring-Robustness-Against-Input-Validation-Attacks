digraph {
rankdir="TD"
BB_entry75[shape=none,label=""];
BB_entry75 -> BB1077 [tailport=s, headport=n, headlabel="    1077"]
BB1077 [shape=record label="{2787: constant[undefined,v1]|2788: vardecl['tuples']|2789: vardecl['state']|2790: vardecl['promise']|2791: vardecl['deferred']}" ] 
BB1077 -> BB1078 [tailport=s, headport=n, headlabel="      1078"]
BB1078 [shape=record label="{2792: read-variable['Array',v3,-]|2793: read-variable['Array',v5,-]|2794: constant[\"resolve\",v6]|2795: constant[\"done\",v7]|2796: read-variable['jQuery',v10,-]|2797: read-property[v10,'Callbacks',-]|2798: \<variable-non-null-undef\>['jQuery']|2799: constant[\"once memory\",v11]}" ] 
BB1078 -> BB1079 [tailport=s, headport=n, headlabel="      1079"]
BB1078 -> BB1099 [tailport=s, headport=n, color=gray, headlabel="      1099"]
BB1079 [shape=record label="{2800: call[v10,'Callbacks',v11,v8]}" ] 
BB1079 -> BB1080 [tailport=s, headport=n, headlabel="      1080"]
BB1079 -> BB1099 [tailport=s, headport=n, color=gray]
BB1080 [shape=record label="{2801: constant[\"resolved\",v12]}" ] 
BB1080 -> BB1081 [tailport=s, headport=n, headlabel="      1081"]
BB1081 [shape=record label="{2802: construct[-,v5,v6,v7,v8,v12,v4]}" ] 
BB1081 -> BB1082 [tailport=s, headport=n, headlabel="      1082"]
BB1081 -> BB1099 [tailport=s, headport=n, color=gray]
BB1082 [shape=record label="{2803: read-variable['Array',v14,-]|2804: constant[\"reject\",v15]|2805: constant[\"fail\",v16]|2806: read-variable['jQuery',v19,-]|2807: read-property[v19,'Callbacks',-]|2808: \<variable-non-null-undef\>['jQuery']|2809: constant[\"once memory\",v20]}" ] 
BB1082 -> BB1083 [tailport=s, headport=n, headlabel="      1083"]
BB1082 -> BB1099 [tailport=s, headport=n, color=gray]
BB1083 [shape=record label="{2810: call[v19,'Callbacks',v20,v17]}" ] 
BB1083 -> BB1084 [tailport=s, headport=n, headlabel="      1084"]
BB1083 -> BB1099 [tailport=s, headport=n, color=gray]
BB1084 [shape=record label="{2811: constant[\"rejected\",v21]}" ] 
BB1084 -> BB1085 [tailport=s, headport=n, headlabel="      1085"]
BB1085 [shape=record label="{2812: construct[-,v14,v15,v16,v17,v21,v13]}" ] 
BB1085 -> BB1086 [tailport=s, headport=n, headlabel="      1086"]
BB1085 -> BB1099 [tailport=s, headport=n, color=gray]
BB1086 [shape=record label="{2813: read-variable['Array',v23,-]|2814: constant[\"notify\",v24]|2815: constant[\"progress\",v25]|2816: read-variable['jQuery',v28,-]|2817: read-property[v28,'Callbacks',-]|2818: \<variable-non-null-undef\>['jQuery']|2819: constant[\"memory\",v29]}" ] 
BB1086 -> BB1087 [tailport=s, headport=n, headlabel="      1087"]
BB1086 -> BB1099 [tailport=s, headport=n, color=gray]
BB1087 [shape=record label="{2820: call[v28,'Callbacks',v29,v26]}" ] 
BB1087 -> BB1088 [tailport=s, headport=n, headlabel="      1088"]
BB1087 -> BB1099 [tailport=s, headport=n, color=gray]
BB1088 [shape=record label="{2821: construct[-,v23,v24,v25,v26,v22]}" ] 
BB1088 -> BB1089 [tailport=s, headport=n, headlabel="      1089"]
BB1088 -> BB1099 [tailport=s, headport=n, color=gray]
BB1089 [shape=record label="{2822: construct[-,v3,v4,v13,v22,v2]}" ] 
BB1089 -> BB1090 [tailport=s, headport=n, headlabel="      1090"]
BB1089 -> BB1099 [tailport=s, headport=n, color=gray]
BB1090 [shape=record label="{2823: write-variable[v2,'tuples']*|2824: constant[\"pending\",v30]|2825: write-variable[v30,'state']*|2826: new[v31]|2827: function-expr[function(),v32]|2828: write-property[v31,'state',v32]|2829: function-expr[function(),v33]|2830: write-property[v31,'always',v33]|2831: function-expr[function(),v34]|2832: write-property[v31,'then',v34]|2833: function-expr[function(obj),v35]|2834: write-property[v31,'promise',v35]|2835: write-variable[v31,'promise']*|2836: new[v36]|2837: write-variable[v36,'deferred']*|2838: read-variable['promise',v38,-]|2839: read-variable['promise',v39,-]|2840: read-property[v39,'then',v37]|2841: \<variable-non-null-undef\>['promise']|2842: write-property[v38,'pipe',v37]|2843: \<variable-non-null-undef\>['promise']*|2844: read-variable['jQuery',v41,-]|2845: read-property[v41,'each',-]|2846: \<variable-non-null-undef\>['jQuery']|2847: read-variable['tuples',v42,-]|2848: function-expr[function(i,tuple),v43]}" ] 
BB1090 -> BB1091 [tailport=s, headport=n, headlabel="      1091"]
BB1090 -> BB1099 [tailport=s, headport=n, color=gray]
BB1091 [shape=record label="{2849: call[v41,'each',v42,v43,-]*}" ] 
BB1091 -> BB1092 [tailport=s, headport=n, headlabel="      1092"]
BB1091 -> BB1099 [tailport=s, headport=n, color=gray]
BB1092 [shape=record label="{2850: read-variable['promise',v45,-]|2851: read-property[v45,'promise',-]|2852: \<variable-non-null-undef\>['promise']|2853: read-variable['deferred',v46,-]}" ] 
BB1092 -> BB1093 [tailport=s, headport=n, headlabel="      1093"]
BB1092 -> BB1099 [tailport=s, headport=n, color=gray]
BB1093 [shape=record label="{2854: call[v45,'promise',v46,-]*}" ] 
BB1093 -> BB1094 [tailport=s, headport=n, headlabel="      1094"]
BB1093 -> BB1099 [tailport=s, headport=n, color=gray]
BB1094 [shape=record label="{2855: read-variable['func',v47,-]|2856: if[v47](true-block:1095,false-block:1097)}" ] 
BB1094 -> BB1095 [tailport=s, headport=n, headlabel="      1095"]
BB1094 -> BB1097 [tailport=s, headport=n, headlabel="      1097"]
BB1094 -> BB1099 [tailport=s, headport=n, color=gray]
BB1095 [shape=record label="{2857: read-variable['func',v49,-]|2858: read-property[v49,'call',-]|2859: \<variable-non-null-undef\>['func']|2860: read-variable['deferred',v50,-]|2861: read-variable['deferred',v51,-]}" ] 
BB1095 -> BB1096 [tailport=s, headport=n, headlabel="      1096"]
BB1095 -> BB1099 [tailport=s, headport=n, color=gray]
BB1096 [shape=record label="{2862: call[v49,'call',v50,v51,-]*}" ] 
BB1096 -> BB1097 [tailport=s, headport=n]
BB1096 -> BB1099 [tailport=s, headport=n, color=gray]
BB1097 [shape=record label="{2863: read-variable['deferred',v1,-]}" ] 
BB1097 -> BB1098 [tailport=s, headport=n, headlabel="      1098"]
BB1097 -> BB1099 [tailport=s, headport=n, color=gray]
BB1098 [shape=record label="{2864: return[v1]}" ] 
BB1099 [shape=record label="{2865: exceptional-return}" ] 
}
