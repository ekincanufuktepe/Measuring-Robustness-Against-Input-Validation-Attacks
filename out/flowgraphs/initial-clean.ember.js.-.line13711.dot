digraph {
rankdir="TD"
BB_entry621[shape=none,label=""];
BB_entry621 -> BB7490 [tailport=s, headport=n, headlabel="    7490"]
BB7490 [shape=record label="{26164: constant[undefined,v1]|26165: vardecl['Ember']|26166: vardecl['EmberError']|26167: function-decl[function K ( ),-]|26168: function-decl[function consoleMethod ( name ),-]|26169: function-decl[function assertPolyfill ( test message ),-]}" ] 
BB7490 -> BB7491 [tailport=s, headport=n, headlabel="      7491"]
BB7491 [shape=record label="{26170: read-variable['__dependency1__',v3,-]|26171: read-property[v3,'default',v2]|26172: \<variable-non-null-undef\>['__dependency1__']|26173: write-variable[v2,'Ember']*|26174: read-variable['__dependency2__',v5,-]|26175: read-property[v5,'default',v4]|26176: \<variable-non-null-undef\>['__dependency2__']|26177: write-variable[v4,'EmberError']*|26178: read-variable['__exports__',v7,-]|26179: new[v6]|26180: read-variable['consoleMethod',v10,v9]|26181: constant[\"log\",v11]}" ] 
BB7491 -> BB7492 [tailport=s, headport=n, headlabel="      7492"]
BB7491 -> BB7520 [tailport=s, headport=n, color=gray, headlabel="      7520"]
BB7492 [shape=record label="{26182: call-consoleMethod [v9,v10,v11,v8]}" ] 
BB7492 -> BB7493 [tailport=s, headport=n, headlabel="      7493"]
BB7492 -> BB7520 [tailport=s, headport=n, color=gray]
BB7493 [shape=record label="{26183: if[v8](true-block:7495,false-block:7494)}" ] 
BB7493 -> BB7495 [tailport=s, headport=n, headlabel="      7495"]
BB7493 -> BB7494 [tailport=s, headport=n, headlabel="      7494"]
BB7494 [shape=record label="{26184: read-variable['K',v8,-]}" ] 
BB7494 -> BB7495 [tailport=s, headport=n]
BB7494 -> BB7520 [tailport=s, headport=n, color=gray]
BB7495 [shape=record label="{26185: write-property[v6,'log',v8]|26186: read-variable['consoleMethod',v11,v10]|26187: constant[\"warn\",v12]}" ] 
BB7495 -> BB7496 [tailport=s, headport=n, headlabel="      7496"]
BB7495 -> BB7520 [tailport=s, headport=n, color=gray]
BB7496 [shape=record label="{26188: call-consoleMethod [v10,v11,v12,v9]}" ] 
BB7496 -> BB7497 [tailport=s, headport=n, headlabel="      7497"]
BB7496 -> BB7520 [tailport=s, headport=n, color=gray]
BB7497 [shape=record label="{26189: if[v9](true-block:7499,false-block:7498)}" ] 
BB7497 -> BB7499 [tailport=s, headport=n, headlabel="      7499"]
BB7497 -> BB7498 [tailport=s, headport=n, headlabel="      7498"]
BB7498 [shape=record label="{26190: read-variable['K',v9,-]}" ] 
BB7498 -> BB7499 [tailport=s, headport=n]
BB7498 -> BB7520 [tailport=s, headport=n, color=gray]
BB7499 [shape=record label="{26191: write-property[v6,'warn',v9]|26192: read-variable['consoleMethod',v12,v11]|26193: constant[\"error\",v13]}" ] 
BB7499 -> BB7500 [tailport=s, headport=n, headlabel="      7500"]
BB7499 -> BB7520 [tailport=s, headport=n, color=gray]
BB7500 [shape=record label="{26194: call-consoleMethod [v11,v12,v13,v10]}" ] 
BB7500 -> BB7501 [tailport=s, headport=n, headlabel="      7501"]
BB7500 -> BB7520 [tailport=s, headport=n, color=gray]
BB7501 [shape=record label="{26195: if[v10](true-block:7503,false-block:7502)}" ] 
BB7501 -> BB7503 [tailport=s, headport=n, headlabel="      7503"]
BB7501 -> BB7502 [tailport=s, headport=n, headlabel="      7502"]
BB7502 [shape=record label="{26196: read-variable['K',v10,-]}" ] 
BB7502 -> BB7503 [tailport=s, headport=n]
BB7502 -> BB7520 [tailport=s, headport=n, color=gray]
BB7503 [shape=record label="{26197: write-property[v6,'error',v10]|26198: read-variable['consoleMethod',v13,v12]|26199: constant[\"info\",v14]}" ] 
BB7503 -> BB7504 [tailport=s, headport=n, headlabel="      7504"]
BB7503 -> BB7520 [tailport=s, headport=n, color=gray]
BB7504 [shape=record label="{26200: call-consoleMethod [v12,v13,v14,v11]}" ] 
BB7504 -> BB7505 [tailport=s, headport=n, headlabel="      7505"]
BB7504 -> BB7520 [tailport=s, headport=n, color=gray]
BB7505 [shape=record label="{26201: if[v11](true-block:7507,false-block:7506)}" ] 
BB7505 -> BB7507 [tailport=s, headport=n, headlabel="      7507"]
BB7505 -> BB7506 [tailport=s, headport=n, headlabel="      7506"]
BB7506 [shape=record label="{26202: read-variable['K',v11,-]}" ] 
BB7506 -> BB7507 [tailport=s, headport=n]
BB7506 -> BB7520 [tailport=s, headport=n, color=gray]
BB7507 [shape=record label="{26203: write-property[v6,'info',v11]|26204: read-variable['consoleMethod',v14,v13]|26205: constant[\"debug\",v15]}" ] 
BB7507 -> BB7508 [tailport=s, headport=n, headlabel="      7508"]
BB7507 -> BB7520 [tailport=s, headport=n, color=gray]
BB7508 [shape=record label="{26206: call-consoleMethod [v13,v14,v15,v12]}" ] 
BB7508 -> BB7509 [tailport=s, headport=n, headlabel="      7509"]
BB7508 -> BB7520 [tailport=s, headport=n, color=gray]
BB7509 [shape=record label="{26207: if[v12](true-block:7514,false-block:7510)}" ] 
BB7509 -> BB7514 [tailport=s, headport=n, headlabel="      7514"]
BB7509 -> BB7510 [tailport=s, headport=n, headlabel="      7510"]
BB7510 [shape=record label="{26208: read-variable['consoleMethod',v14,v13]|26209: constant[\"info\",v15]}" ] 
BB7510 -> BB7511 [tailport=s, headport=n, headlabel="      7511"]
BB7510 -> BB7520 [tailport=s, headport=n, color=gray]
BB7511 [shape=record label="{26210: call-consoleMethod [v13,v14,v15,v12]}" ] 
BB7511 -> BB7512 [tailport=s, headport=n, headlabel="      7512"]
BB7511 -> BB7520 [tailport=s, headport=n, color=gray]
BB7512 [shape=record label="{26211: if[v12](true-block:7514,false-block:7513)}" ] 
BB7512 -> BB7514 [tailport=s, headport=n]
BB7512 -> BB7513 [tailport=s, headport=n, headlabel="      7513"]
BB7513 [shape=record label="{26212: read-variable['K',v12,-]}" ] 
BB7513 -> BB7514 [tailport=s, headport=n]
BB7513 -> BB7520 [tailport=s, headport=n, color=gray]
BB7514 [shape=record label="{26213: write-property[v6,'debug',v12]|26214: read-variable['consoleMethod',v15,v14]|26215: constant[\"assert\",v16]}" ] 
BB7514 -> BB7515 [tailport=s, headport=n, headlabel="      7515"]
BB7514 -> BB7520 [tailport=s, headport=n, color=gray]
BB7515 [shape=record label="{26216: call-consoleMethod [v14,v15,v16,v13]}" ] 
BB7515 -> BB7516 [tailport=s, headport=n, headlabel="      7516"]
BB7515 -> BB7520 [tailport=s, headport=n, color=gray]
BB7516 [shape=record label="{26217: if[v13](true-block:7518,false-block:7517)}" ] 
BB7516 -> BB7518 [tailport=s, headport=n, headlabel="      7518"]
BB7516 -> BB7517 [tailport=s, headport=n, headlabel="      7517"]
BB7517 [shape=record label="{26218: read-variable['assertPolyfill',v13,-]}" ] 
BB7517 -> BB7518 [tailport=s, headport=n]
BB7517 -> BB7520 [tailport=s, headport=n, color=gray]
BB7518 [shape=record label="{26219: write-property[v6,'assert',v13]|26220: write-property[v7,'default',v6]|26221: \<variable-non-null-undef\>['__exports__']*}" ] 
BB7518 -> BB7519 [tailport=s, headport=n, headlabel="      7519"]
BB7518 -> BB7520 [tailport=s, headport=n, color=gray]
BB7519 [shape=record label="{26222: return[v1]}" ] 
BB7520 [shape=record label="{26223: exceptional-return}" ] 
//#$~ 13861
}
