digraph {
rankdir="TD"
BB_entry204[shape=none,label=""];
BB_entry204 -> BB2816 [tailport=s, headport=n, headlabel="    2816"]
BB2816 [shape=record label="{9877: constant[undefined,v1]|9878: vardecl['key']}" ] 
BB2816 -> BB2817 [tailport=s, headport=n, headlabel="      2817"]
BB2817 [shape=record label="{9879: constant[\"production\",v3]|9880: constant[\"development\",v4]|9881: !==[v3,v4,v2]|9882: if[v2](true-block:2818,false-block:2819)}" ] 
BB2817 -> BB2818 [tailport=s, headport=n, headlabel="      2818"]
BB2817 -> BB2819 [tailport=s, headport=n, headlabel="      2819"]
BB2817 -> BB2844 [tailport=s, headport=n, color=gray, headlabel="      2844"]
BB2818 [shape=record label="{9883: read-variable['invariant',v6,v5]|9884: read-variable['one',v7,-]|9885: if[v7](true-block:2820,false-block:2823)}" ] 
BB2818 -> BB2823 [tailport=s, headport=n, headlabel="      2823"]
BB2818 -> BB2820 [tailport=s, headport=n, headlabel="      2820"]
BB2818 -> BB2844 [tailport=s, headport=n, color=gray]
BB2819 [shape=record label="{9886: read-variable['invariant',v6,v5]|9887: read-variable['one',v7,-]|9888: if[v7](true-block:2825,false-block:2828)}" ] 
BB2819 -> BB2828 [tailport=s, headport=n, headlabel="      2828"]
BB2819 -> BB2825 [tailport=s, headport=n, headlabel="      2825"]
BB2819 -> BB2844 [tailport=s, headport=n, color=gray]
BB2820 [shape=record label="{9889: read-variable['two',v7,-]|9890: if[v7](true-block:2821,false-block:2823)}" ] 
BB2820 -> BB2823 [tailport=s, headport=n]
BB2820 -> BB2821 [tailport=s, headport=n, headlabel="      2821"]
BB2820 -> BB2844 [tailport=s, headport=n, color=gray]
BB2821 [shape=record label="{9891: typeof['one',v8]|9892: constant[\"object\",v9]|9893: ===[v8,v9,v7]|9894: if[v7](true-block:2822,false-block:2823)}" ] 
BB2821 -> BB2823 [tailport=s, headport=n]
BB2821 -> BB2822 [tailport=s, headport=n, headlabel="      2822"]
BB2821 -> BB2844 [tailport=s, headport=n, color=gray]
BB2822 [shape=record label="{9895: typeof['two',v10]|9896: constant[\"object\",v11]|9897: ===[v10,v11,v7]}" ] 
BB2822 -> BB2823 [tailport=s, headport=n]
BB2822 -> BB2844 [tailport=s, headport=n, color=gray]
BB2823 [shape=record label="{9898: constant[\"mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.\",v8]}" ] 
BB2823 -> BB2824 [tailport=s, headport=n, headlabel="      2824"]
BB2824 [shape=record label="{9899: call-invariant [v5,v6,v7,v8,-]}" ] 
BB2824 -> BB2829 [tailport=s, headport=n, headlabel="      2829"]
BB2824 -> BB2844 [tailport=s, headport=n, color=gray]
BB2825 [shape=record label="{9900: read-variable['two',v7,-]|9901: if[v7](true-block:2826,false-block:2828)}" ] 
BB2825 -> BB2828 [tailport=s, headport=n]
BB2825 -> BB2826 [tailport=s, headport=n, headlabel="      2826"]
BB2825 -> BB2844 [tailport=s, headport=n, color=gray]
BB2826 [shape=record label="{9902: typeof['one',v8]|9903: constant[\"object\",v9]|9904: ===[v8,v9,v7]|9905: if[v7](true-block:2827,false-block:2828)}" ] 
BB2826 -> BB2828 [tailport=s, headport=n]
BB2826 -> BB2827 [tailport=s, headport=n, headlabel="      2827"]
BB2826 -> BB2844 [tailport=s, headport=n, color=gray]
BB2827 [shape=record label="{9906: typeof['two',v10]|9907: constant[\"object\",v11]|9908: ===[v10,v11,v7]}" ] 
BB2827 -> BB2828 [tailport=s, headport=n]
BB2827 -> BB2844 [tailport=s, headport=n, color=gray]
BB2828 [shape=record label="{9909: call-invariant [v5,v6,v7,-]}" ] 
BB2828 -> BB2829 [tailport=s, headport=n]
BB2828 -> BB2844 [tailport=s, headport=n, color=gray]
BB2829 [shape=record label="{9910: read-variable['two',v6,-]}" ] 
BB2829 -> BB2830 [tailport=s, headport=n, headlabel="      2830"]
BB2829 -> BB2844 [tailport=s, headport=n, color=gray]
BB2830 [shape=record label="{9911: begin-for-in[v6,v7]}" ] 
BB2830 -> BB2831 [tailport=s, headport=n, headlabel="      2831"]
BB2830 -> BB2844 [tailport=s, headport=n, color=gray]
BB2831 [shape=record label="{9912: has-next[v7,v8]|9913: if[v8](true-block:2832,false-block:2842)}" ] 
BB2831 -> BB2832 [tailport=s, headport=n, headlabel="      2832"]
BB2831 -> BB2842 [tailport=s, headport=n, headlabel="      2842"]
BB2832 [shape=record label="{9914: next-property[v7,v9]|9915: write-variable[v9,'key']|9916: read-variable['two',v12,-]|9917: read-property[v12,'hasOwnProperty',-]|9918: \<variable-non-null-undef\>['two']|9919: read-variable['key',v13,-]}" ] 
BB2832 -> BB2833 [tailport=s, headport=n, headlabel="      2833"]
BB2832 -> BB2844 [tailport=s, headport=n, color=gray]
BB2833 [shape=record label="{9920: call-two.hasOwnProperty [v12,'hasOwnProperty',v13,v10]}" ] 
BB2833 -> BB2834 [tailport=s, headport=n, headlabel="      2834"]
BB2833 -> BB2844 [tailport=s, headport=n, color=gray]
BB2834 [shape=record label="{9921: if[v10](true-block:2835,false-block:2841)}" ] 
BB2834 -> BB2835 [tailport=s, headport=n, headlabel="      2835"]
BB2834 -> BB2841 [tailport=s, headport=n, headlabel="      2841"]
BB2835 [shape=record label="{9922: constant[\"production\",v15]|9923: constant[\"development\",v16]|9924: !==[v15,v16,v14]|9925: if[v14](true-block:2836,false-block:2837)}" ] 
BB2835 -> BB2836 [tailport=s, headport=n, headlabel="      2836"]
BB2835 -> BB2837 [tailport=s, headport=n, headlabel="      2837"]
BB2835 -> BB2844 [tailport=s, headport=n, color=gray]
BB2836 [shape=record label="{9926: read-variable['invariant',v18,v17]|9927: read-variable['one',v22,-]|9928: read-variable['key',v23,-]|9929: read-property[v22,v23,v20]|9930: \<variable-non-null-undef\>['one']|9931: read-variable['undefined',v21,-]|9932: ===[v20,v21,v19]|9933: constant[\"mergeIntoWithNoDuplicateKeys(): \",v31]|9934: constant[\"Tried to merge two objects with the same key: `%s`. This conflict \",v32]|9935: +[v31,v32,v29]|9936: constant[\"may be due to a mixin; in particular, this may be caused by two \",v30]|9937: +[v29,v30,v27]|9938: constant[\"getInitialState() or getDefaultProps() methods returning objects \",v28]|9939: +[v27,v28,v25]|9940: constant[\"with clashing keys.\",v26]|9941: +[v25,v26,v24]|9942: read-variable['key',v33,-]}" ] 
BB2836 -> BB2838 [tailport=s, headport=n, headlabel="      2838"]
BB2836 -> BB2844 [tailport=s, headport=n, color=gray]
BB2837 [shape=record label="{9943: read-variable['invariant',v18,v17]|9944: read-variable['one',v22,-]|9945: read-variable['key',v23,-]|9946: read-property[v22,v23,v20]|9947: \<variable-non-null-undef\>['one']|9948: read-variable['undefined',v21,-]|9949: ===[v20,v21,v19]}" ] 
BB2837 -> BB2839 [tailport=s, headport=n, headlabel="      2839"]
BB2837 -> BB2844 [tailport=s, headport=n, color=gray]
BB2838 [shape=record label="{9950: call-invariant [v17,v18,v19,v24,v33,-]}" ] 
BB2838 -> BB2840 [tailport=s, headport=n, headlabel="      2840"]
BB2838 -> BB2844 [tailport=s, headport=n, color=gray]
BB2839 [shape=record label="{9951: call-invariant [v17,v18,v19,-]}" ] 
BB2839 -> BB2840 [tailport=s, headport=n]
BB2839 -> BB2844 [tailport=s, headport=n, color=gray]
BB2840 [shape=record label="{9952: read-variable['one',v18,-]|9953: read-variable['key',v19,-]|9954: read-variable['two',v20,-]|9955: read-variable['key',v21,-]|9956: read-property[v20,v21,v17]|9957: \<variable-non-null-undef\>['two']|9958: write-property[v18,v19,v17]|9959: \<variable-non-null-undef\>['one']*}" ] 
BB2840 -> BB2841 [tailport=s, headport=n]
BB2840 -> BB2844 [tailport=s, headport=n, color=gray]
BB2841 [shape=record label="{9960: end-for-in(begin-node:9911)}" ] 
BB2841 -> BB2831 [tailport=s, headport=n]
BB2842 [shape=record label="{9961: read-variable['one',v1,-]}" ] 
BB2842 -> BB2843 [tailport=s, headport=n, headlabel="      2843"]
BB2842 -> BB2844 [tailport=s, headport=n, color=gray]
BB2843 [shape=record label="{9962: return[v1]}" ] 
BB2844 [shape=record label="{9963: exceptional-return}" ] 
//#$~ 5585
}
