digraph {
rankdir="TD"
BB_entry21[shape=none,label=""];
BB_entry21 -> BB456 [tailport=s, headport=n, headlabel="    456"]
BB456 [shape=record label="{1149: constant[undefined,v1]|1150: function-decl[function EventEmitter ( ),-]|1151: vardecl['proto']|1152: vardecl['exports']|1153: vardecl['originalGlobalValue']|1154: function-decl[function indexOfListener ( listeners listener ),-]|1155: function-decl[function alias ( name ),-]}" ] 
BB456 -> BB457 [tailport=s, headport=n, headlabel="      457"]
BB457 [shape=record label="{1156: read-variable['EventEmitter',v3,-]|1157: read-property[v3,'prototype',v2]|1158: \<variable-non-null-undef\>['EventEmitter']|1159: write-variable[v2,'proto']*|1160: read-variable['this',v4,-]|1161: write-variable[v4,'exports']*|1162: read-variable['exports',v6,-]|1163: read-property[v6,'EventEmitter',v5]|1164: \<variable-non-null-undef\>['exports']|1165: write-variable[v5,'originalGlobalValue']*|1166: read-variable['proto',v8,-]|1167: function-expr[function getListeners ( evt ),v7]|1168: write-property[v8,'getListeners',v7]|1169: \<variable-non-null-undef\>['proto']*|1170: read-variable['proto',v10,-]|1171: function-expr[function flattenListeners ( listeners ),v9]|1172: write-property[v10,'flattenListeners',v9]|1173: \<variable-non-null-undef\>['proto']*|1174: read-variable['proto',v12,-]|1175: function-expr[function getListenersAsObject ( evt ),v11]|1176: write-property[v12,'getListenersAsObject',v11]|1177: \<variable-non-null-undef\>['proto']*|1178: read-variable['proto',v14,-]|1179: function-expr[function addListener ( evt listener ),v13]|1180: write-property[v14,'addListener',v13]|1181: \<variable-non-null-undef\>['proto']*|1182: read-variable['proto',v16,-]|1183: read-variable['alias',v18,v17]|1184: constant[\"addListener\",v19]}" ] 
BB457 -> BB458 [tailport=s, headport=n, headlabel="      458"]
BB457 -> BB480 [tailport=s, headport=n, color=gray, headlabel="      480"]
BB458 [shape=record label="{1185: call-alias [v17,v18,v19,v15]}" ] 
BB458 -> BB459 [tailport=s, headport=n, headlabel="      459"]
BB458 -> BB480 [tailport=s, headport=n, color=gray]
BB459 [shape=record label="{1186: write-property[v16,'on',v15]|1187: \<variable-non-null-undef\>['proto']*|1188: read-variable['proto',v21,-]|1189: function-expr[function addOnceListener ( evt listener ),v20]|1190: write-property[v21,'addOnceListener',v20]|1191: \<variable-non-null-undef\>['proto']*|1192: read-variable['proto',v23,-]|1193: read-variable['alias',v25,v24]|1194: constant[\"addOnceListener\",v26]}" ] 
BB459 -> BB460 [tailport=s, headport=n, headlabel="      460"]
BB459 -> BB480 [tailport=s, headport=n, color=gray]
BB460 [shape=record label="{1195: call-alias [v24,v25,v26,v22]}" ] 
BB460 -> BB461 [tailport=s, headport=n, headlabel="      461"]
BB460 -> BB480 [tailport=s, headport=n, color=gray]
BB461 [shape=record label="{1196: write-property[v23,'once',v22]|1197: \<variable-non-null-undef\>['proto']*|1198: read-variable['proto',v28,-]|1199: function-expr[function defineEvent ( evt ),v27]|1200: write-property[v28,'defineEvent',v27]|1201: \<variable-non-null-undef\>['proto']*|1202: read-variable['proto',v30,-]|1203: function-expr[function defineEvents ( evts ),v29]|1204: write-property[v30,'defineEvents',v29]|1205: \<variable-non-null-undef\>['proto']*|1206: read-variable['proto',v32,-]|1207: function-expr[function removeListener ( evt listener ),v31]|1208: write-property[v32,'removeListener',v31]|1209: \<variable-non-null-undef\>['proto']*|1210: read-variable['proto',v34,-]|1211: read-variable['alias',v36,v35]|1212: constant[\"removeListener\",v37]}" ] 
BB461 -> BB462 [tailport=s, headport=n, headlabel="      462"]
BB461 -> BB480 [tailport=s, headport=n, color=gray]
BB462 [shape=record label="{1213: call-alias [v35,v36,v37,v33]}" ] 
BB462 -> BB463 [tailport=s, headport=n, headlabel="      463"]
BB462 -> BB480 [tailport=s, headport=n, color=gray]
BB463 [shape=record label="{1214: write-property[v34,'off',v33]|1215: \<variable-non-null-undef\>['proto']*|1216: read-variable['proto',v39,-]|1217: function-expr[function addListeners ( evt listeners ),v38]|1218: write-property[v39,'addListeners',v38]|1219: \<variable-non-null-undef\>['proto']*|1220: read-variable['proto',v41,-]|1221: function-expr[function removeListeners ( evt listeners ),v40]|1222: write-property[v41,'removeListeners',v40]|1223: \<variable-non-null-undef\>['proto']*|1224: read-variable['proto',v43,-]|1225: function-expr[function manipulateListeners ( remove evt listeners ),v42]|1226: write-property[v43,'manipulateListeners',v42]|1227: \<variable-non-null-undef\>['proto']*|1228: read-variable['proto',v45,-]|1229: function-expr[function removeEvent ( evt ),v44]|1230: write-property[v45,'removeEvent',v44]|1231: \<variable-non-null-undef\>['proto']*|1232: read-variable['proto',v47,-]|1233: read-variable['alias',v49,v48]|1234: constant[\"removeEvent\",v50]}" ] 
BB463 -> BB464 [tailport=s, headport=n, headlabel="      464"]
BB463 -> BB480 [tailport=s, headport=n, color=gray]
BB464 [shape=record label="{1235: call-alias [v48,v49,v50,v46]}" ] 
BB464 -> BB465 [tailport=s, headport=n, headlabel="      465"]
BB464 -> BB480 [tailport=s, headport=n, color=gray]
BB465 [shape=record label="{1236: write-property[v47,'removeAllListeners',v46]|1237: \<variable-non-null-undef\>['proto']*|1238: read-variable['proto',v52,-]|1239: function-expr[function emitEvent ( evt args ),v51]|1240: write-property[v52,'emitEvent',v51]|1241: \<variable-non-null-undef\>['proto']*|1242: read-variable['proto',v54,-]|1243: read-variable['alias',v56,v55]|1244: constant[\"emitEvent\",v57]}" ] 
BB465 -> BB466 [tailport=s, headport=n, headlabel="      466"]
BB465 -> BB480 [tailport=s, headport=n, color=gray]
BB466 [shape=record label="{1245: call-alias [v55,v56,v57,v53]}" ] 
BB466 -> BB467 [tailport=s, headport=n, headlabel="      467"]
BB466 -> BB480 [tailport=s, headport=n, color=gray]
BB467 [shape=record label="{1246: write-property[v54,'trigger',v53]|1247: \<variable-non-null-undef\>['proto']*|1248: read-variable['proto',v59,-]|1249: function-expr[function emit ( evt ),v58]|1250: write-property[v59,'emit',v58]|1251: \<variable-non-null-undef\>['proto']*|1252: read-variable['proto',v61,-]|1253: function-expr[function setOnceReturnValue ( value ),v60]|1254: write-property[v61,'setOnceReturnValue',v60]|1255: \<variable-non-null-undef\>['proto']*|1256: read-variable['proto',v63,-]|1257: function-expr[function _getOnceReturnValue ( ),v62]|1258: write-property[v63,'_getOnceReturnValue',v62]|1259: \<variable-non-null-undef\>['proto']*|1260: read-variable['proto',v65,-]|1261: function-expr[function _getEvents ( ),v64]|1262: write-property[v65,'_getEvents',v64]|1263: \<variable-non-null-undef\>['proto']*|1264: read-variable['EventEmitter',v67,-]|1265: function-expr[function noConflict ( ),v66]|1266: write-property[v67,'noConflict',v66]|1267: \<variable-non-null-undef\>['EventEmitter']*|1268: typeof['define',v69]|1269: constant[\"function\",v70]|1270: ===[v69,v70,v68]|1271: if[v68](true-block:468,false-block:469)}" ] 
BB467 -> BB469 [tailport=s, headport=n, headlabel="      469"]
BB467 -> BB468 [tailport=s, headport=n, headlabel="      468"]
BB467 -> BB480 [tailport=s, headport=n, color=gray]
BB468 [shape=record label="{1272: read-variable['define',v71,-]|1273: read-property[v71,'amd',v68]|1274: \<variable-non-null-undef\>['define']}" ] 
BB468 -> BB469 [tailport=s, headport=n]
BB468 -> BB480 [tailport=s, headport=n, color=gray]
BB469 [shape=record label="{1275: if[v68](true-block:470,false-block:471)}" ] 
BB469 -> BB470 [tailport=s, headport=n, headlabel="      470"]
BB469 -> BB471 [tailport=s, headport=n, headlabel="      471"]
BB470 [shape=record label="{1276: read-variable['define',v72,v71]|1277: constant[\"eventEmitter/EventEmitter\",v73]|1278: read-variable['Array',v75,-]}" ] 
BB470 -> BB472 [tailport=s, headport=n, headlabel="      472"]
BB470 -> BB480 [tailport=s, headport=n, color=gray]
BB471 [shape=record label="{1279: typeof['module',v72]|1280: constant[\"object\",v73]|1281: ===[v72,v73,v71]|1282: if[v71](true-block:475,false-block:476)}" ] 
BB471 -> BB476 [tailport=s, headport=n, headlabel="      476"]
BB471 -> BB475 [tailport=s, headport=n, headlabel="      475"]
BB471 -> BB480 [tailport=s, headport=n, color=gray]
BB472 [shape=record label="{1283: construct [-,v75,v74]}" ] 
BB472 -> BB473 [tailport=s, headport=n, headlabel="      473"]
BB472 -> BB480 [tailport=s, headport=n, color=gray]
BB473 [shape=record label="{1284: function-expr[function ( ),v76]}" ] 
BB473 -> BB474 [tailport=s, headport=n, headlabel="      474"]
BB474 [shape=record label="{1285: call-define [v71,v72,v73,v74,v76,-]*}" ] 
BB474 -> BB479 [tailport=s, headport=n, headlabel="      479"]
BB474 -> BB480 [tailport=s, headport=n, color=gray]
BB475 [shape=record label="{1286: read-variable['module',v74,-]|1287: read-property[v74,'exports',v71]|1288: \<variable-non-null-undef\>['module']}" ] 
BB475 -> BB476 [tailport=s, headport=n]
BB475 -> BB480 [tailport=s, headport=n, color=gray]
BB476 [shape=record label="{1289: if[v71](true-block:477,false-block:478)}" ] 
BB476 -> BB477 [tailport=s, headport=n, headlabel="      477"]
BB476 -> BB478 [tailport=s, headport=n, headlabel="      478"]
BB477 [shape=record label="{1290: read-variable['module',v75,-]|1291: read-variable['EventEmitter',v74,-]|1292: write-property[v75,'exports',v74]|1293: \<variable-non-null-undef\>['module']*}" ] 
BB477 -> BB479 [tailport=s, headport=n]
BB477 -> BB480 [tailport=s, headport=n, color=gray]
BB478 [shape=record label="{1294: read-variable['exports',v75,-]|1295: read-variable['EventEmitter',v74,-]|1296: write-property[v75,'EventEmitter',v74]|1297: \<variable-non-null-undef\>['exports']*}" ] 
BB478 -> BB479 [tailport=s, headport=n]
BB478 -> BB480 [tailport=s, headport=n, color=gray]
BB479 [shape=record label="{1298: return[v1]}" ] 
BB480 [shape=record label="{1299: exceptional-return}" ] 
//#$~ 703
}
