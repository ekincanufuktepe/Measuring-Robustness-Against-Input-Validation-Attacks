digraph {
rankdir="TD"
BB_entry241[shape=none,label=""];
BB_entry241 -> BB2907 [tailport=s, headport=n, headlabel="    2907"]
BB2907 [shape=record label="{6986: constant[undefined,v1]|6987: function-decl[function runInvokeQueue ( queue ),-]}" ] 
BB2907 -> BB2908 [tailport=s, headport=n, headlabel="      2908"]
BB2908 [shape=record label="{6988: read-variable['loadedModules',v4,-]|6989: read-property[v4,'get',-]|6990: \<variable-non-null-undef\>['loadedModules']|6991: read-variable['module',v5,-]}" ] 
BB2908 -> BB2909 [tailport=s, headport=n, headlabel="      2909"]
BB2908 -> BB2961 [tailport=s, headport=n, color=gray, headlabel="      2961"]
BB2909 [shape=record label="{6992: call-loadedModules.get [v4,'get',v5,v2]}" ] 
BB2909 -> BB2910 [tailport=s, headport=n, headlabel="      2910"]
BB2909 -> BB2961 [tailport=s, headport=n, color=gray]
BB2910 [shape=record label="{6993: if[v2](true-block:2911,false-block:2912)}" ] 
BB2910 -> BB2911 [tailport=s, headport=n, headlabel="      2911"]
BB2910 -> BB2912 [tailport=s, headport=n, headlabel="      2912"]
BB2911 [shape=record label="{6994: constant[undefined,v1]}" ] 
BB2911 -> BB2960 [tailport=s, headport=n, headlabel="      2960"]
BB2912 [shape=record label="{6995: read-variable['loadedModules',v7,-]|6996: read-property[v7,'put',-]|6997: \<variable-non-null-undef\>['loadedModules']|6998: read-variable['module',v8,-]|6999: constant[true,v9]}" ] 
BB2912 -> BB2913 [tailport=s, headport=n, headlabel="      2913"]
BB2912 -> BB2961 [tailport=s, headport=n, color=gray]
BB2913 [shape=record label="{7000: call-loadedModules.put [v7,'put',v8,v9,-]*}" ] 
BB2913 -> BB2914 [tailport=s, headport=n, headlabel="      2914"]
BB2913 -> BB2961 [tailport=s, headport=n, color=gray]
BB2914 [shape=record label="{7001: read-variable['isString',v12,v11]|7002: read-variable['module',v13,-]}" ] 
BB2914 -> BB2915 [tailport=s, headport=n, headlabel="      2915"]
BB2914 -> BB2942 [tailport=s, headport=n, color=gray, headlabel="      2942"]
BB2915 [shape=record label="{7003: call-isString [v11,v12,v13,v10]}" ] 
BB2915 -> BB2916 [tailport=s, headport=n, headlabel="      2916"]
BB2915 -> BB2942 [tailport=s, headport=n, color=gray]
BB2916 [shape=record label="{7004: if[v10](true-block:2917,false-block:2918)}" ] 
BB2916 -> BB2917 [tailport=s, headport=n, headlabel="      2917"]
BB2916 -> BB2918 [tailport=s, headport=n, headlabel="      2918"]
BB2917 [shape=record label="{7005: read-variable['angularModule',v16,v15]|7006: read-variable['module',v17,-]}" ] 
BB2917 -> BB2919 [tailport=s, headport=n, headlabel="      2919"]
BB2917 -> BB2942 [tailport=s, headport=n, color=gray]
BB2918 [shape=record label="{7007: read-variable['isFunction',v16,v15]|7008: read-variable['module',v17,-]}" ] 
BB2918 -> BB2929 [tailport=s, headport=n, headlabel="      2929"]
BB2918 -> BB2942 [tailport=s, headport=n, color=gray]
BB2919 [shape=record label="{7009: call-angularModule [v15,v16,v17,v14]}" ] 
BB2919 -> BB2920 [tailport=s, headport=n, headlabel="      2920"]
BB2919 -> BB2942 [tailport=s, headport=n, color=gray]
BB2920 [shape=record label="{7010: write-variable[v14,'moduleFn']*|7011: read-variable['runBlocks',v22,-]|7012: read-property[v22,'concat',-]|7013: \<variable-non-null-undef\>['runBlocks']|7014: read-variable['loadModules',v25,v24]|7015: read-variable['moduleFn',v27,-]|7016: read-property[v27,'requires',v26]|7017: \<variable-non-null-undef\>['moduleFn']}" ] 
BB2920 -> BB2921 [tailport=s, headport=n, headlabel="      2921"]
BB2920 -> BB2942 [tailport=s, headport=n, color=gray]
BB2921 [shape=record label="{7018: call-loadModules [v24,v25,v26,v23]}" ] 
BB2921 -> BB2922 [tailport=s, headport=n, headlabel="      2922"]
BB2921 -> BB2942 [tailport=s, headport=n, color=gray]
BB2922 [shape=record label="{7019: call-runBlocks.concat [v22,'concat',v23,v20]}" ] 
BB2922 -> BB2923 [tailport=s, headport=n, headlabel="      2923"]
BB2922 -> BB2942 [tailport=s, headport=n, color=gray]
BB2923 [shape=record label="{7020: read-property[v20,'concat',-]|7021: read-variable['moduleFn',v29,-]|7022: read-property[v29,'_runBlocks',v28]|7023: \<variable-non-null-undef\>['moduleFn']}" ] 
BB2923 -> BB2924 [tailport=s, headport=n, headlabel="      2924"]
BB2923 -> BB2942 [tailport=s, headport=n, color=gray]
BB2924 [shape=record label="{7024: call-null [v20,'concat',v28,v18]}" ] 
BB2924 -> BB2925 [tailport=s, headport=n, headlabel="      2925"]
BB2924 -> BB2942 [tailport=s, headport=n, color=gray]
BB2925 [shape=record label="{7025: write-variable[v18,'runBlocks']*|7026: read-variable['runInvokeQueue',v31,v30]|7027: read-variable['moduleFn',v33,-]|7028: read-property[v33,'_invokeQueue',v32]|7029: \<variable-non-null-undef\>['moduleFn']}" ] 
BB2925 -> BB2926 [tailport=s, headport=n, headlabel="      2926"]
BB2925 -> BB2942 [tailport=s, headport=n, color=gray]
BB2926 [shape=record label="{7030: call-runInvokeQueue [v30,v31,v32,-]*}" ] 
BB2926 -> BB2927 [tailport=s, headport=n, headlabel="      2927"]
BB2926 -> BB2942 [tailport=s, headport=n, color=gray]
BB2927 [shape=record label="{7031: read-variable['runInvokeQueue',v35,v34]|7032: read-variable['moduleFn',v37,-]|7033: read-property[v37,'_configBlocks',v36]|7034: \<variable-non-null-undef\>['moduleFn']}" ] 
BB2927 -> BB2928 [tailport=s, headport=n, headlabel="      2928"]
BB2927 -> BB2942 [tailport=s, headport=n, color=gray]
BB2928 [shape=record label="{7035: call-runInvokeQueue [v34,v35,v36,-]*}" ] 
BB2928 -> BB2960 [tailport=s, headport=n]
BB2928 -> BB2942 [tailport=s, headport=n, color=gray]
BB2929 [shape=record label="{7036: call-isFunction [v15,v16,v17,v14]}" ] 
BB2929 -> BB2930 [tailport=s, headport=n, headlabel="      2930"]
BB2929 -> BB2942 [tailport=s, headport=n, color=gray]
BB2930 [shape=record label="{7037: if[v14](true-block:2931,false-block:2932)}" ] 
BB2930 -> BB2931 [tailport=s, headport=n, headlabel="      2931"]
BB2930 -> BB2932 [tailport=s, headport=n, headlabel="      2932"]
BB2931 [shape=record label="{7038: read-variable['runBlocks',v19,-]|7039: read-property[v19,'push',-]|7040: \<variable-non-null-undef\>['runBlocks']|7041: read-variable['providerInjector',v22,-]|7042: read-property[v22,'invoke',-]|7043: \<variable-non-null-undef\>['providerInjector']|7044: read-variable['module',v23,-]}" ] 
BB2931 -> BB2933 [tailport=s, headport=n, headlabel="      2933"]
BB2931 -> BB2942 [tailport=s, headport=n, color=gray]
BB2932 [shape=record label="{7045: read-variable['isArray',v20,v19]|7046: read-variable['module',v21,-]}" ] 
BB2932 -> BB2935 [tailport=s, headport=n, headlabel="      2935"]
BB2932 -> BB2942 [tailport=s, headport=n, color=gray]
BB2933 [shape=record label="{7047: call-providerInjector.invoke [v22,'invoke',v23,v20]}" ] 
BB2933 -> BB2934 [tailport=s, headport=n, headlabel="      2934"]
BB2933 -> BB2942 [tailport=s, headport=n, color=gray]
BB2934 [shape=record label="{7048: call-runBlocks.push [v19,'push',v20,-]*}" ] 
BB2934 -> BB2960 [tailport=s, headport=n]
BB2934 -> BB2942 [tailport=s, headport=n, color=gray]
BB2935 [shape=record label="{7049: call-isArray [v19,v20,v21,v18]}" ] 
BB2935 -> BB2936 [tailport=s, headport=n, headlabel="      2936"]
BB2935 -> BB2942 [tailport=s, headport=n, color=gray]
BB2936 [shape=record label="{7050: if[v18](true-block:2937,false-block:2938)}" ] 
BB2936 -> BB2937 [tailport=s, headport=n, headlabel="      2937"]
BB2936 -> BB2938 [tailport=s, headport=n, headlabel="      2938"]
BB2937 [shape=record label="{7051: read-variable['runBlocks',v23,-]|7052: read-property[v23,'push',-]|7053: \<variable-non-null-undef\>['runBlocks']|7054: read-variable['providerInjector',v26,-]|7055: read-property[v26,'invoke',-]|7056: \<variable-non-null-undef\>['providerInjector']|7057: read-variable['module',v27,-]}" ] 
BB2937 -> BB2939 [tailport=s, headport=n, headlabel="      2939"]
BB2937 -> BB2942 [tailport=s, headport=n, color=gray]
BB2938 [shape=record label="{7058: read-variable['assertArgFn',v23,v22]|7059: read-variable['module',v24,-]|7060: constant[\"module\",v25]}" ] 
BB2938 -> BB2941 [tailport=s, headport=n, headlabel="      2941"]
BB2938 -> BB2942 [tailport=s, headport=n, color=gray]
BB2939 [shape=record label="{7061: call-providerInjector.invoke [v26,'invoke',v27,v24]}" ] 
BB2939 -> BB2940 [tailport=s, headport=n, headlabel="      2940"]
BB2939 -> BB2942 [tailport=s, headport=n, color=gray]
BB2940 [shape=record label="{7062: call-runBlocks.push [v23,'push',v24,-]*}" ] 
BB2940 -> BB2960 [tailport=s, headport=n]
BB2940 -> BB2942 [tailport=s, headport=n, color=gray]
BB2941 [shape=record label="{7063: call-assertArgFn [v22,v23,v24,v25,-]*}" ] 
BB2941 -> BB2960 [tailport=s, headport=n]
BB2941 -> BB2942 [tailport=s, headport=n, color=gray]
BB2942 [shape=record label="{7064: catch[e,v10]|7065: begin-with[v10]}" ] 
BB2942 -> BB2943 [tailport=s, headport=n, headlabel="      2943"]
BB2942 -> BB2961 [tailport=s, headport=n, color=gray]
BB2943 [shape=record label="{7066: read-variable['isArray',v14,v13]|7067: read-variable['module',v15,v11]}" ] 
BB2943 -> BB2945 [tailport=s, headport=n, headlabel="      2945"]
BB2943 -> BB2944 [tailport=s, headport=n, color=gray, headlabel="      2944"]
BB2944 [shape=record label="{7068: end-with}" ] 
BB2944 -> BB2961 [tailport=s, headport=n]
BB2945 [shape=record label="{7069: call-isArray [v13,v14,v15,v12]}" ] 
BB2945 -> BB2946 [tailport=s, headport=n, headlabel="      2946"]
BB2945 -> BB2944 [tailport=s, headport=n, color=gray]
BB2946 [shape=record label="{7070: if[v12](true-block:2947,false-block:2948)}" ] 
BB2946 -> BB2947 [tailport=s, headport=n, headlabel="      2947"]
BB2946 -> BB2948 [tailport=s, headport=n, headlabel="      2948"]
BB2947 [shape=record label="{7071: read-variable['module',v17,v11]|7072: read-variable['module',v21,v11]|7073: read-property[v21,'length',v19]|7074: \<variable-non-null-undef\>['module']|7075: constant[1.0,v20]|7076: -[v19,v20,v18]|7077: read-property[v17,v18,v16]|7078: \<variable-non-null-undef\>['module']|7079: write-variable[v16,'module']*}" ] 
BB2947 -> BB2948 [tailport=s, headport=n]
BB2947 -> BB2944 [tailport=s, headport=n, color=gray]
BB2948 [shape=record label="{7080: read-variable['e',v17,v11]|7081: read-property[v17,'message',v16]|7082: \<variable-non-null-undef\>['e']|7083: if[v16](true-block:2949,false-block:2953)}" ] 
BB2948 -> BB2953 [tailport=s, headport=n, headlabel="      2953"]
BB2948 -> BB2949 [tailport=s, headport=n, headlabel="      2949"]
BB2948 -> BB2944 [tailport=s, headport=n, color=gray]
BB2949 [shape=record label="{7084: read-variable['e',v18,v11]|7085: read-property[v18,'stack',v16]|7086: \<variable-non-null-undef\>['e']|7087: if[v16](true-block:2950,false-block:2953)}" ] 
BB2949 -> BB2953 [tailport=s, headport=n]
BB2949 -> BB2950 [tailport=s, headport=n, headlabel="      2950"]
BB2949 -> BB2944 [tailport=s, headport=n, color=gray]
BB2950 [shape=record label="{7088: read-variable['e',v23,-]|7089: read-property[v23,'stack',v22]|7090: \<variable-non-null-undef\>['e']|7091: read-property[v22,'indexOf',-]|7092: \<property-non-null-undef\>[v23,'stack']|7093: read-variable['e',v25,v11]|7094: read-property[v25,'message',v24]|7095: \<variable-non-null-undef\>['e']}" ] 
BB2950 -> BB2951 [tailport=s, headport=n, headlabel="      2951"]
BB2950 -> BB2944 [tailport=s, headport=n, color=gray]
BB2951 [shape=record label="{7096: call-e.stack.indexOf [v22,'indexOf',v24,v19]}" ] 
BB2951 -> BB2952 [tailport=s, headport=n, headlabel="      2952"]
BB2951 -> BB2944 [tailport=s, headport=n, color=gray]
BB2952 [shape=record label="{7097: constant[-1.0,v20]|7098: ==[v19,v20,v16]}" ] 
BB2952 -> BB2953 [tailport=s, headport=n]
BB2952 -> BB2944 [tailport=s, headport=n, color=gray]
BB2953 [shape=record label="{7099: if[v16](true-block:2954,false-block:2955)}" ] 
BB2953 -> BB2954 [tailport=s, headport=n, headlabel="      2954"]
BB2953 -> BB2955 [tailport=s, headport=n, headlabel="      2955"]
BB2954 [shape=record label="{7100: read-variable['e',v23,v11]|7101: read-property[v23,'message',v21]|7102: \<variable-non-null-undef\>['e']|7103: constant[\"\\n\",v22]|7104: +[v21,v22,v19]|7105: read-variable['e',v24,v11]|7106: read-property[v24,'stack',v20]|7107: \<variable-non-null-undef\>['e']|7108: +[v19,v20,v18]|7109: write-variable[v18,'e']*}" ] 
BB2954 -> BB2955 [tailport=s, headport=n]
BB2954 -> BB2944 [tailport=s, headport=n, color=gray]
BB2955 [shape=record label="{7110: read-variable['$injectorMinErr',v20,v19]|7111: constant[\"modulerr\",v21]|7112: constant[\"Failed to instantiate module \\\{0\\\} due to:\\n\\\{1\\\}\",v22]|7113: read-variable['module',v23,v11]|7114: read-variable['e',v25,v11]|7115: read-property[v25,'stack',v24]|7116: \<variable-non-null-undef\>['e']|7117: if[v24](true-block:2958,false-block:2956)}" ] 
BB2955 -> BB2958 [tailport=s, headport=n, headlabel="      2958"]
BB2955 -> BB2956 [tailport=s, headport=n, headlabel="      2956"]
BB2955 -> BB2944 [tailport=s, headport=n, color=gray]
BB2956 [shape=record label="{7118: read-variable['e',v25,v11]|7119: read-property[v25,'message',v24]|7120: \<variable-non-null-undef\>['e']|7121: if[v24](true-block:2958,false-block:2957)}" ] 
BB2956 -> BB2958 [tailport=s, headport=n]
BB2956 -> BB2957 [tailport=s, headport=n, headlabel="      2957"]
BB2956 -> BB2944 [tailport=s, headport=n, color=gray]
BB2957 [shape=record label="{7122: read-variable['e',v24,v11]}" ] 
BB2957 -> BB2958 [tailport=s, headport=n]
BB2957 -> BB2944 [tailport=s, headport=n, color=gray]
BB2958 [shape=record label="{7123: call-$injectorMinErr [v19,v20,v21,v22,v23,v24,v18]}" ] 
BB2958 -> BB2959 [tailport=s, headport=n, headlabel="      2959"]
BB2958 -> BB2944 [tailport=s, headport=n, color=gray]
BB2959 [shape=record label="{7124: throw[v18]*|7125: end-with}" ] 
BB2959 -> BB2960 [tailport=s, headport=n]
BB2959 -> BB2944 [tailport=s, headport=n, color=gray]
BB2960 [shape=record label="{7126: return[v1]}" ] 
BB2961 [shape=record label="{7127: exceptional-return}" ] 
//#$~ 4388
}
