digraph {
rankdir="TD"
BB_entry26[shape=none,label=""];
BB_entry26 -> BB382 [tailport=s, headport=n, headlabel="    382"]
BB382 [shape=record label="{1195: constant[undefined,v1]|1196: vardecl['val']|1197: vardecl['changed']|1198: vardecl['old']|1199: vardecl['attr']}" ] 
BB382 -> BB383 [tailport=s, headport=n, headlabel="      383"]
BB383 [shape=record label="{1200: read-variable['diff',v3,-]|1201: ![v3,v2]|1202: if[v2](true-block:384,false-block:390)}" ] 
BB383 -> BB384 [tailport=s, headport=n, headlabel="      384"]
BB383 -> BB390 [tailport=s, headport=n, headlabel="      390"]
BB383 -> BB405 [tailport=s, headport=n, color=gray, headlabel="      405"]
BB384 [shape=record label="{1203: read-variable['this',v6,-]|1204: read-property[v6,'hasChanged',-]}" ] 
BB384 -> BB385 [tailport=s, headport=n, headlabel="      385"]
BB384 -> BB405 [tailport=s, headport=n, color=gray]
BB385 [shape=record label="{1205: call-this.hasChanged [v6,'hasChanged',v4]}" ] 
BB385 -> BB386 [tailport=s, headport=n, headlabel="      386"]
BB385 -> BB405 [tailport=s, headport=n, color=gray]
BB386 [shape=record label="{1206: if[v4](true-block:387,false-block:388)}" ] 
BB386 -> BB387 [tailport=s, headport=n, headlabel="      387"]
BB386 -> BB388 [tailport=s, headport=n, headlabel="      388"]
BB387 [shape=record label="{1207: read-variable['_',v8,-]|1208: read-property[v8,'clone',-]|1209: \<variable-non-null-undef\>['_']|1210: read-variable['this',v10,-]|1211: read-property[v10,'changed',v9]}" ] 
BB387 -> BB389 [tailport=s, headport=n, headlabel="      389"]
BB387 -> BB405 [tailport=s, headport=n, color=gray]
BB388 [shape=record label="{1212: constant[false,v1]}" ] 
BB388 -> BB404 [tailport=s, headport=n, headlabel="      404"]
BB389 [shape=record label="{1213: call-_.clone [v8,'clone',v9,v1]}" ] 
BB389 -> BB404 [tailport=s, headport=n]
BB389 -> BB405 [tailport=s, headport=n, color=gray]
BB390 [shape=record label="{1214: constant[false,v4]|1215: write-variable[v4,'changed']*|1216: read-variable['this',v7,-]|1217: read-property[v7,'_changing',v6]|1218: if[v6](true-block:391,false-block:392)}" ] 
BB390 -> BB391 [tailport=s, headport=n, headlabel="      391"]
BB390 -> BB392 [tailport=s, headport=n, headlabel="      392"]
BB390 -> BB405 [tailport=s, headport=n, color=gray]
BB391 [shape=record label="{1219: read-variable['this',v8,-]|1220: read-property[v8,'_previousAttributes',v5]}" ] 
BB391 -> BB393 [tailport=s, headport=n, headlabel="      393"]
BB391 -> BB405 [tailport=s, headport=n, color=gray]
BB392 [shape=record label="{1221: read-variable['this',v8,-]|1222: read-property[v8,'attributes',v5]}" ] 
BB392 -> BB393 [tailport=s, headport=n]
BB392 -> BB405 [tailport=s, headport=n, color=gray]
BB393 [shape=record label="{1223: write-variable[v5,'old']*|1224: read-variable['diff',v9,-]}" ] 
BB393 -> BB394 [tailport=s, headport=n, headlabel="      394"]
BB393 -> BB405 [tailport=s, headport=n, color=gray]
BB394 [shape=record label="{1225: begin-for-in[v9,v10]}" ] 
BB394 -> BB395 [tailport=s, headport=n, headlabel="      395"]
BB394 -> BB405 [tailport=s, headport=n, color=gray]
BB395 [shape=record label="{1226: has-next[v10,v11]|1227: if[v11](true-block:396,false-block:403)}" ] 
BB395 -> BB396 [tailport=s, headport=n, headlabel="      396"]
BB395 -> BB403 [tailport=s, headport=n, headlabel="      403"]
BB396 [shape=record label="{1228: next-property[v10,v12]|1229: write-variable[v12,'attr']|1230: read-variable['_',v15,-]|1231: read-property[v15,'isEqual',-]|1232: \<variable-non-null-undef\>['_']|1233: read-variable['old',v17,-]|1234: read-variable['attr',v18,-]|1235: read-property[v17,v18,v16]|1236: \<variable-non-null-undef\>['old']|1237: read-variable['diff',v20,-]|1238: read-variable['attr',v21,-]|1239: read-property[v20,v21,v19]|1240: \<variable-non-null-undef\>['diff']|1241: write-variable[v19,'val']}" ] 
BB396 -> BB397 [tailport=s, headport=n, headlabel="      397"]
BB396 -> BB405 [tailport=s, headport=n, color=gray]
BB397 [shape=record label="{1242: call-_.isEqual [v15,'isEqual',v16,v19,v13]}" ] 
BB397 -> BB398 [tailport=s, headport=n, headlabel="      398"]
BB397 -> BB405 [tailport=s, headport=n, color=gray]
BB398 [shape=record label="{1243: if[v13](true-block:402,false-block:399)}" ] 
BB398 -> BB402 [tailport=s, headport=n, headlabel="      402"]
BB398 -> BB399 [tailport=s, headport=n, headlabel="      399"]
BB399 [shape=record label="{1244: read-variable['changed',v23,-]|1245: if[v23](true-block:401,false-block:400)}" ] 
BB399 -> BB401 [tailport=s, headport=n, headlabel="      401"]
BB399 -> BB400 [tailport=s, headport=n, headlabel="      400"]
BB399 -> BB405 [tailport=s, headport=n, color=gray]
BB400 [shape=record label="{1246: new[v23]|1247: write-variable[v23,'changed']}" ] 
BB400 -> BB401 [tailport=s, headport=n]
BB401 [shape=record label="{1248: read-variable['attr',v24,-]|1249: read-variable['val',v22,-]|1250: write-property[v23,v24,v22]*}" ] 
BB401 -> BB402 [tailport=s, headport=n]
BB401 -> BB405 [tailport=s, headport=n, color=gray]
BB402 [shape=record label="{1251: end-for-in(begin-node:1225)}" ] 
BB402 -> BB395 [tailport=s, headport=n]
BB403 [shape=record label="{1252: read-variable['changed',v1,-]}" ] 
BB403 -> BB404 [tailport=s, headport=n]
BB403 -> BB405 [tailport=s, headport=n, color=gray]
BB404 [shape=record label="{1253: return[v1]}" ] 
BB405 [shape=record label="{1254: exceptional-return}" ] 
//#$~ 412
}
