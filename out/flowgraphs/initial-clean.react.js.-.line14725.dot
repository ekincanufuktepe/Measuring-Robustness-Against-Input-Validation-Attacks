digraph {
rankdir="TD"
BB_entry616[shape=none,label=""];
BB_entry616 -> BB8394 [tailport=s, headport=n, headlabel="    8394"]
BB8394 [shape=record label="{27798: constant[undefined,v1]|27799: vardecl['internalInstance']|27800: vardecl['element']|27801: vardecl['props']}" ] 
BB8394 -> BB8395 [tailport=s, headport=n, headlabel="      8395"]
BB8395 [shape=record label="{27802: read-variable['getInternalInstanceReadyForUpdate',v4,v3]|27803: read-variable['publicInstance',v5,-]|27804: constant[\"setProps\",v6]}" ] 
BB8395 -> BB8396 [tailport=s, headport=n, headlabel="      8396"]
BB8395 -> BB8413 [tailport=s, headport=n, color=gray, headlabel="      8413"]
BB8396 [shape=record label="{27805: call-getInternalInstanceReadyForUpdate [v3,v4,v5,v6,v2]}" ] 
BB8396 -> BB8397 [tailport=s, headport=n, headlabel="      8397"]
BB8396 -> BB8413 [tailport=s, headport=n, color=gray]
BB8397 [shape=record label="{27806: write-variable[v2,'internalInstance']*|27807: read-variable['internalInstance',v8,-]|27808: ![v8,v7]|27809: if[v7](true-block:8398,false-block:8399)}" ] 
BB8397 -> BB8398 [tailport=s, headport=n, headlabel="      8398"]
BB8397 -> BB8399 [tailport=s, headport=n, headlabel="      8399"]
BB8397 -> BB8413 [tailport=s, headport=n, color=gray]
BB8398 [shape=record label="{27810: constant[undefined,v1]}" ] 
BB8398 -> BB8412 [tailport=s, headport=n, headlabel="      8412"]
BB8399 [shape=record label="{27811: constant[\"production\",v10]|27812: constant[\"development\",v11]|27813: !==[v10,v11,v9]|27814: if[v9](true-block:8400,false-block:8401)}" ] 
BB8399 -> BB8400 [tailport=s, headport=n, headlabel="      8400"]
BB8399 -> BB8401 [tailport=s, headport=n, headlabel="      8401"]
BB8399 -> BB8413 [tailport=s, headport=n, color=gray]
BB8400 [shape=record label="{27815: read-variable['invariant',v13,v12]|27816: read-variable['internalInstance',v15,-]|27817: read-property[v15,'_isTopLevel',v14]|27818: \<variable-non-null-undef\>['internalInstance']|27819: constant[\"setProps(...): You called `setProps` on a \",v23]|27820: constant[\"component with a parent. This is an anti-pattern since props will \",v24]|27821: +[v23,v24,v21]|27822: constant[\"get reactively updated when rendered. Instead, change the owner's \",v22]|27823: +[v21,v22,v19]|27824: constant[\"`render` method to pass the correct value as props to the component \",v20]|27825: +[v19,v20,v17]|27826: constant[\"where it is created.\",v18]|27827: +[v17,v18,v16]}" ] 
BB8400 -> BB8402 [tailport=s, headport=n, headlabel="      8402"]
BB8400 -> BB8413 [tailport=s, headport=n, color=gray]
BB8401 [shape=record label="{27828: read-variable['invariant',v13,v12]|27829: read-variable['internalInstance',v15,-]|27830: read-property[v15,'_isTopLevel',v14]|27831: \<variable-non-null-undef\>['internalInstance']}" ] 
BB8401 -> BB8403 [tailport=s, headport=n, headlabel="      8403"]
BB8401 -> BB8413 [tailport=s, headport=n, color=gray]
BB8402 [shape=record label="{27832: call-invariant [v12,v13,v14,v16,-]}" ] 
BB8402 -> BB8404 [tailport=s, headport=n, headlabel="      8404"]
BB8402 -> BB8413 [tailport=s, headport=n, color=gray]
BB8403 [shape=record label="{27833: call-invariant [v12,v13,v14,-]}" ] 
BB8403 -> BB8404 [tailport=s, headport=n]
BB8403 -> BB8413 [tailport=s, headport=n, color=gray]
BB8404 [shape=record label="{27834: read-variable['internalInstance',v13,-]|27835: read-property[v13,'_pendingElement',v12]|27836: \<variable-non-null-undef\>['internalInstance']|27837: if[v12](true-block:8406,false-block:8405)}" ] 
BB8404 -> BB8406 [tailport=s, headport=n, headlabel="      8406"]
BB8404 -> BB8405 [tailport=s, headport=n, headlabel="      8405"]
BB8404 -> BB8413 [tailport=s, headport=n, color=gray]
BB8405 [shape=record label="{27838: read-variable['internalInstance',v13,-]|27839: read-property[v13,'_currentElement',v12]|27840: \<variable-non-null-undef\>['internalInstance']}" ] 
BB8405 -> BB8406 [tailport=s, headport=n]
BB8405 -> BB8413 [tailport=s, headport=n, color=gray]
BB8406 [shape=record label="{27841: write-variable[v12,'element']*|27842: read-variable['assign',v15,v14]|27843: new[v16]|27844: read-variable['element',v18,-]|27845: read-property[v18,'props',v17]|27846: \<variable-non-null-undef\>['element']|27847: read-variable['partialProps',v19,-]}" ] 
BB8406 -> BB8407 [tailport=s, headport=n, headlabel="      8407"]
BB8406 -> BB8413 [tailport=s, headport=n, color=gray]
BB8407 [shape=record label="{27848: call-assign [v14,v15,v16,v17,v19,v13]}" ] 
BB8407 -> BB8408 [tailport=s, headport=n, headlabel="      8408"]
BB8407 -> BB8413 [tailport=s, headport=n, color=gray]
BB8408 [shape=record label="{27849: write-variable[v13,'props']*|27850: read-variable['internalInstance',v21,-]|27851: read-variable['ReactElement',v23,-]|27852: read-property[v23,'cloneAndReplaceProps',-]|27853: \<variable-non-null-undef\>['ReactElement']|27854: read-variable['element',v24,-]|27855: read-variable['props',v25,-]}" ] 
BB8408 -> BB8409 [tailport=s, headport=n, headlabel="      8409"]
BB8408 -> BB8413 [tailport=s, headport=n, color=gray]
BB8409 [shape=record label="{27856: call-ReactElement.cloneAndReplaceProps [v23,'cloneAndReplaceProps',v24,v25,v20]}" ] 
BB8409 -> BB8410 [tailport=s, headport=n, headlabel="      8410"]
BB8409 -> BB8413 [tailport=s, headport=n, color=gray]
BB8410 [shape=record label="{27857: write-property[v21,'_pendingElement',v20]|27858: \<variable-non-null-undef\>['internalInstance']*|27859: read-variable['enqueueUpdate',v27,v26]|27860: read-variable['internalInstance',v28,-]}" ] 
BB8410 -> BB8411 [tailport=s, headport=n, headlabel="      8411"]
BB8410 -> BB8413 [tailport=s, headport=n, color=gray]
BB8411 [shape=record label="{27861: call-enqueueUpdate [v26,v27,v28,-]*}" ] 
BB8411 -> BB8412 [tailport=s, headport=n]
BB8411 -> BB8413 [tailport=s, headport=n, color=gray]
BB8412 [shape=record label="{27862: return[v1]}" ] 
BB8413 [shape=record label="{27863: exceptional-return}" ] 
//#$~ 14754
}
