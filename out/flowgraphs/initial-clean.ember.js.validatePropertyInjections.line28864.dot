digraph {
rankdir="TD"
BB_entry1332[shape=none,label=""];
BB_entry1332 -> BB15661 [tailport=s, headport=n, headlabel="    15661"]
BB15661 [shape=record label="{53819: constant[undefined,v1]|53820: vardecl['proto']|53821: vardecl['descs']|53822: vardecl['types']|53823: vardecl['key']|53824: vardecl['desc']|53825: vardecl['validator']|53826: vardecl['i']|53827: vardecl['l']}" ] 
BB15661 -> BB15662 [tailport=s, headport=n, headlabel="      15662"]
BB15662 [shape=record label="{53828: read-variable['factory',v4,-]|53829: read-property[v4,'proto',-]|53830: \<variable-non-null-undef\>['factory']}" ] 
BB15662 -> BB15663 [tailport=s, headport=n, headlabel="      15663"]
BB15662 -> BB15688 [tailport=s, headport=n, color=gray, headlabel="      15688"]
BB15663 [shape=record label="{53831: call-factory.proto [v4,'proto',v2]}" ] 
BB15663 -> BB15664 [tailport=s, headport=n, headlabel="      15664"]
BB15663 -> BB15688 [tailport=s, headport=n, color=gray]
BB15664 [shape=record label="{53832: write-variable[v2,'proto']*|53833: read-variable['meta',v8,v7]|53834: read-variable['proto',v9,-]}" ] 
BB15664 -> BB15665 [tailport=s, headport=n, headlabel="      15665"]
BB15664 -> BB15688 [tailport=s, headport=n, color=gray]
BB15665 [shape=record label="{53835: call-meta [v7,v8,v9,v6]}" ] 
BB15665 -> BB15666 [tailport=s, headport=n, headlabel="      15666"]
BB15665 -> BB15688 [tailport=s, headport=n, color=gray]
BB15666 [shape=record label="{53836: read-property[v6,'descs',v5]|53837: write-variable[v5,'descs']*|53838: read-variable['Array',v11,-]}" ] 
BB15666 -> BB15667 [tailport=s, headport=n, headlabel="      15667"]
BB15666 -> BB15688 [tailport=s, headport=n, color=gray]
BB15667 [shape=record label="{53839: construct [-,v11,v10]}" ] 
BB15667 -> BB15668 [tailport=s, headport=n, headlabel="      15668"]
BB15667 -> BB15688 [tailport=s, headport=n, color=gray]
BB15668 [shape=record label="{53840: write-variable[v10,'types']*|53841: read-variable['descs',v13,-]}" ] 
BB15668 -> BB15669 [tailport=s, headport=n, headlabel="      15669"]
BB15668 -> BB15688 [tailport=s, headport=n, color=gray]
BB15669 [shape=record label="{53842: begin-for-in[v13,v14]}" ] 
BB15669 -> BB15670 [tailport=s, headport=n, headlabel="      15670"]
BB15669 -> BB15688 [tailport=s, headport=n, color=gray]
BB15670 [shape=record label="{53843: has-next[v14,v15]|53844: if[v15](true-block:15671,false-block:15679)}" ] 
BB15670 -> BB15671 [tailport=s, headport=n, headlabel="      15671"]
BB15670 -> BB15679 [tailport=s, headport=n, headlabel="      15679"]
BB15671 [shape=record label="{53845: next-property[v14,v16]|53846: write-variable[v16,'key']|53847: read-variable['descs',v18,-]|53848: read-variable['key',v19,-]|53849: read-property[v18,v19,v17]|53850: \<variable-non-null-undef\>['descs']|53851: write-variable[v17,'desc']*|53852: read-variable['desc',v21,-]|53853: read-variable['InjectedProperty',v22,-]|53854: instanceof[v21,v22,v20]|53855: if[v20](true-block:15672,false-block:15675)}" ] 
BB15671 -> BB15675 [tailport=s, headport=n, headlabel="      15675"]
BB15671 -> BB15672 [tailport=s, headport=n, headlabel="      15672"]
BB15671 -> BB15688 [tailport=s, headport=n, color=gray]
BB15672 [shape=record label="{53856: read-variable['indexOf',v26,v25]|53857: read-variable['types',v27,-]|53858: read-variable['desc',v29,-]|53859: read-property[v29,'type',v28]|53860: \<variable-non-null-undef\>['desc']}" ] 
BB15672 -> BB15673 [tailport=s, headport=n, headlabel="      15673"]
BB15672 -> BB15688 [tailport=s, headport=n, color=gray]
BB15673 [shape=record label="{53861: call-indexOf [v25,v26,v27,v28,v23]}" ] 
BB15673 -> BB15674 [tailport=s, headport=n, headlabel="      15674"]
BB15673 -> BB15688 [tailport=s, headport=n, color=gray]
BB15674 [shape=record label="{53862: constant[-1.0,v24]|53863: ===[v23,v24,v20]}" ] 
BB15674 -> BB15675 [tailport=s, headport=n]
BB15674 -> BB15688 [tailport=s, headport=n, color=gray]
BB15675 [shape=record label="{53864: if[v20](true-block:15676,false-block:15678)}" ] 
BB15675 -> BB15676 [tailport=s, headport=n, headlabel="      15676"]
BB15675 -> BB15678 [tailport=s, headport=n, headlabel="      15678"]
BB15676 [shape=record label="{53865: read-variable['types',v24,-]|53866: read-property[v24,'push',-]|53867: \<variable-non-null-undef\>['types']|53868: read-variable['desc',v26,-]|53869: read-property[v26,'type',v25]|53870: \<variable-non-null-undef\>['desc']}" ] 
BB15676 -> BB15677 [tailport=s, headport=n, headlabel="      15677"]
BB15676 -> BB15688 [tailport=s, headport=n, color=gray]
BB15677 [shape=record label="{53871: call-types.push [v24,'push',v25,-]*}" ] 
BB15677 -> BB15678 [tailport=s, headport=n]
BB15677 -> BB15688 [tailport=s, headport=n, color=gray]
BB15678 [shape=record label="{53872: end-for-in(begin-node:53842)}" ] 
BB15678 -> BB15670 [tailport=s, headport=n]
BB15679 [shape=record label="{53873: read-variable['types',v18,-]|53874: read-property[v18,'length',v17]|53875: \<variable-non-null-undef\>['types']|53876: if[v17](true-block:15680,false-block:15686)}" ] 
BB15679 -> BB15680 [tailport=s, headport=n, headlabel="      15680"]
BB15679 -> BB15686 [tailport=s, headport=n, headlabel="      15686"]
BB15679 -> BB15688 [tailport=s, headport=n, color=gray]
BB15680 [shape=record label="{53877: constant[0.0,v20]|53878: write-variable[v20,'i']|53879: read-variable['types',v22,-]|53880: read-property[v22,'length',v21]|53881: \<variable-non-null-undef\>['types']|53882: write-variable[v21,'l']}" ] 
BB15680 -> BB15681 [tailport=s, headport=n, headlabel="      15681"]
BB15680 -> BB15688 [tailport=s, headport=n, color=gray]
BB15681 [shape=record label="{53883: read-variable['i',v23,-]|53884: read-variable['l',v24,-]|53885: \<[v23,v24,v19]|53886: if[v19](true-block:15682,false-block:15686)}" ] 
BB15681 -> BB15682 [tailport=s, headport=n, headlabel="      15682"]
BB15681 -> BB15686 [tailport=s, headport=n]
BB15681 -> BB15688 [tailport=s, headport=n, color=gray]
BB15682 [shape=record label="{53887: read-variable['typeValidators',v26,-]|53888: read-variable['types',v28,-]|53889: read-variable['i',v29,-]|53890: read-property[v28,v29,v27]|53891: \<variable-non-null-undef\>['types']|53892: read-property[v26,v27,v25]|53893: \<variable-non-null-undef\>['typeValidators']|53894: write-variable[v25,'validator']*|53895: typeof['validator',v31]|53896: constant[\"function\",v32]|53897: ===[v31,v32,v30]|53898: if[v30](true-block:15683,false-block:15685)}" ] 
BB15682 -> BB15683 [tailport=s, headport=n, headlabel="      15683"]
BB15682 -> BB15685 [tailport=s, headport=n, headlabel="      15685"]
BB15682 -> BB15688 [tailport=s, headport=n, color=gray]
BB15683 [shape=record label="{53899: read-variable['validator',v34,v33]|53900: read-variable['factory',v35,-]}" ] 
BB15683 -> BB15684 [tailport=s, headport=n, headlabel="      15684"]
BB15683 -> BB15688 [tailport=s, headport=n, color=gray]
BB15684 [shape=record label="{53901: call-validator [v33,v34,v35,-]*}" ] 
BB15684 -> BB15685 [tailport=s, headport=n]
BB15684 -> BB15688 [tailport=s, headport=n, color=gray]
BB15685 [shape=record label="{53902: constant[1.0,v33]|53903: read-variable['i',v34,-]|53904: +[v34,v35]|53905: +[v35,v33,v36]|53906: write-variable[v36,'i']}" ] 
BB15685 -> BB15681 [tailport=s, headport=n]
BB15685 -> BB15688 [tailport=s, headport=n, color=gray]
BB15686 [shape=record label="{53907: constant[true,v1]}" ] 
BB15686 -> BB15687 [tailport=s, headport=n, headlabel="      15687"]
BB15687 [shape=record label="{53908: return[v1]}" ] 
BB15688 [shape=record label="{53909: exceptional-return}" ] 
//#$~ 28887
}
