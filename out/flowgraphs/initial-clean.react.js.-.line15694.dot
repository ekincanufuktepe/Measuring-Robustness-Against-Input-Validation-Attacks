digraph {
rankdir="TD"
BB_entry645[shape=none,label=""];
BB_entry645 -> BB8754 [tailport=s, headport=n, headlabel="    8754"]
BB8754 [shape=record label="{29091: constant[undefined,v1]|29092: vardecl['dispatchConfig']|29093: vardecl['EventConstructor']|29094: vardecl['event']}" ] 
BB8754 -> BB8755 [tailport=s, headport=n, headlabel="      8755"]
BB8755 [shape=record label="{29095: read-variable['topLevelEventsToDispatchConfig',v3,-]|29096: read-variable['topLevelType',v4,-]|29097: read-property[v3,v4,v2]|29098: \<variable-non-null-undef\>['topLevelEventsToDispatchConfig']|29099: write-variable[v2,'dispatchConfig']*|29100: read-variable['dispatchConfig',v6,-]|29101: ![v6,v5]|29102: if[v5](true-block:8756,false-block:8757)}" ] 
BB8755 -> BB8756 [tailport=s, headport=n, headlabel="      8756"]
BB8755 -> BB8757 [tailport=s, headport=n, headlabel="      8757"]
BB8755 -> BB8818 [tailport=s, headport=n, color=gray, headlabel="      8818"]
BB8756 [shape=record label="{29103: constant[null,v1]}" ] 
BB8756 -> BB8817 [tailport=s, headport=n, headlabel="      8817"]
BB8757 [shape=record label="{29104: read-variable['topLevelType',v7,-]|29105: read-variable['topLevelTypes',v10,-]|29106: read-property[v10,'topInput',v8]|29107: \<variable-non-null-undef\>['topLevelTypes']|29108: ==[v7,v8,v9]|29109: if[v9](true-block:8763,false-block:8759)}" ] 
BB8757 -> BB8763 [tailport=s, headport=n, headlabel="      8763"]
BB8757 -> BB8759 [tailport=s, headport=n, headlabel="      8759"]
BB8757 -> BB8818 [tailport=s, headport=n, color=gray]
BB8758 [shape=record label="{29110: constant[\"production\",v11]|29111: constant[\"development\",v12]|29112: !==[v11,v12,v10]|29113: if[v10](true-block:8808,false-block:8809)}" ] 
BB8758 -> BB8808 [tailport=s, headport=n, headlabel="      8808"]
BB8758 -> BB8809 [tailport=s, headport=n, headlabel="      8809"]
BB8758 -> BB8818 [tailport=s, headport=n, color=gray]
BB8759 [shape=record label="{29114: read-variable['topLevelTypes',v11,-]|29115: read-property[v11,'topLoad',v8]|29116: \<variable-non-null-undef\>['topLevelTypes']|29117: ==[v7,v8,v9]|29118: if[v9](true-block:8763,false-block:8760)}" ] 
BB8759 -> BB8763 [tailport=s, headport=n]
BB8759 -> BB8760 [tailport=s, headport=n, headlabel="      8760"]
BB8759 -> BB8818 [tailport=s, headport=n, color=gray]
BB8760 [shape=record label="{29119: read-variable['topLevelTypes',v12,-]|29120: read-property[v12,'topError',v8]|29121: \<variable-non-null-undef\>['topLevelTypes']|29122: ==[v7,v8,v9]|29123: if[v9](true-block:8763,false-block:8761)}" ] 
BB8760 -> BB8763 [tailport=s, headport=n]
BB8760 -> BB8761 [tailport=s, headport=n, headlabel="      8761"]
BB8760 -> BB8818 [tailport=s, headport=n, color=gray]
BB8761 [shape=record label="{29124: read-variable['topLevelTypes',v13,-]|29125: read-property[v13,'topReset',v8]|29126: \<variable-non-null-undef\>['topLevelTypes']|29127: ==[v7,v8,v9]|29128: if[v9](true-block:8763,false-block:8762)}" ] 
BB8761 -> BB8763 [tailport=s, headport=n]
BB8761 -> BB8762 [tailport=s, headport=n, headlabel="      8762"]
BB8761 -> BB8818 [tailport=s, headport=n, color=gray]
BB8762 [shape=record label="{29129: read-variable['topLevelTypes',v14,-]|29130: read-property[v14,'topSubmit',v8]|29131: \<variable-non-null-undef\>['topLevelTypes']|29132: ==[v7,v8,v9]|29133: if[v9](true-block:8763,false-block:8764)}" ] 
BB8762 -> BB8763 [tailport=s, headport=n]
BB8762 -> BB8764 [tailport=s, headport=n, headlabel="      8764"]
BB8762 -> BB8818 [tailport=s, headport=n, color=gray]
BB8763 [shape=record label="{29134: read-variable['SyntheticEvent',v15,-]|29135: write-variable[v15,'EventConstructor']*}" ] 
BB8763 -> BB8758 [tailport=s, headport=n, headlabel="      8758"]
BB8763 -> BB8818 [tailport=s, headport=n, color=gray]
BB8764 [shape=record label="{29136: read-variable['topLevelTypes',v16,-]|29137: read-property[v16,'topKeyPress',v8]|29138: \<variable-non-null-undef\>['topLevelTypes']|29139: ==[v7,v8,v9]|29140: if[v9](true-block:8765,false-block:8766)}" ] 
BB8764 -> BB8765 [tailport=s, headport=n, headlabel="      8765"]
BB8764 -> BB8766 [tailport=s, headport=n, headlabel="      8766"]
BB8764 -> BB8818 [tailport=s, headport=n, color=gray]
BB8765 [shape=record label="{29141: read-variable['getEventCharCode',v21,v20]|29142: read-variable['nativeEvent',v22,-]}" ] 
BB8765 -> BB8767 [tailport=s, headport=n, headlabel="      8767"]
BB8765 -> BB8818 [tailport=s, headport=n, color=gray]
BB8766 [shape=record label="{29143: read-variable['topLevelTypes',v23,-]|29144: read-property[v23,'topKeyDown',v8]|29145: \<variable-non-null-undef\>['topLevelTypes']|29146: ==[v7,v8,v9]|29147: if[v9](true-block:8771,false-block:8770)}" ] 
BB8766 -> BB8771 [tailport=s, headport=n, headlabel="      8771"]
BB8766 -> BB8770 [tailport=s, headport=n, headlabel="      8770"]
BB8766 -> BB8818 [tailport=s, headport=n, color=gray]
BB8767 [shape=record label="{29148: call-getEventCharCode [v20,v21,v22,v18]}" ] 
BB8767 -> BB8768 [tailport=s, headport=n, headlabel="      8768"]
BB8767 -> BB8818 [tailport=s, headport=n, color=gray]
BB8768 [shape=record label="{29149: constant[0.0,v19]|29150: ===[v18,v19,v17]|29151: if[v17](true-block:8769,false-block:8771)}" ] 
BB8768 -> BB8769 [tailport=s, headport=n, headlabel="      8769"]
BB8768 -> BB8771 [tailport=s, headport=n]
BB8768 -> BB8818 [tailport=s, headport=n, color=gray]
BB8769 [shape=record label="{29152: constant[null,v1]}" ] 
BB8769 -> BB8817 [tailport=s, headport=n]
BB8770 [shape=record label="{29153: read-variable['topLevelTypes',v24,-]|29154: read-property[v24,'topKeyUp',v8]|29155: \<variable-non-null-undef\>['topLevelTypes']|29156: ==[v7,v8,v9]|29157: if[v9](true-block:8771,false-block:8772)}" ] 
BB8770 -> BB8771 [tailport=s, headport=n]
BB8770 -> BB8772 [tailport=s, headport=n, headlabel="      8772"]
BB8770 -> BB8818 [tailport=s, headport=n, color=gray]
BB8771 [shape=record label="{29158: read-variable['SyntheticKeyboardEvent',v25,-]|29159: write-variable[v25,'EventConstructor']*}" ] 
BB8771 -> BB8758 [tailport=s, headport=n]
BB8771 -> BB8818 [tailport=s, headport=n, color=gray]
BB8772 [shape=record label="{29160: read-variable['topLevelTypes',v26,-]|29161: read-property[v26,'topBlur',v8]|29162: \<variable-non-null-undef\>['topLevelTypes']|29163: ==[v7,v8,v9]|29164: if[v9](true-block:8774,false-block:8773)}" ] 
BB8772 -> BB8774 [tailport=s, headport=n, headlabel="      8774"]
BB8772 -> BB8773 [tailport=s, headport=n, headlabel="      8773"]
BB8772 -> BB8818 [tailport=s, headport=n, color=gray]
BB8773 [shape=record label="{29165: read-variable['topLevelTypes',v27,-]|29166: read-property[v27,'topFocus',v8]|29167: \<variable-non-null-undef\>['topLevelTypes']|29168: ==[v7,v8,v9]|29169: if[v9](true-block:8774,false-block:8775)}" ] 
BB8773 -> BB8774 [tailport=s, headport=n]
BB8773 -> BB8775 [tailport=s, headport=n, headlabel="      8775"]
BB8773 -> BB8818 [tailport=s, headport=n, color=gray]
BB8774 [shape=record label="{29170: read-variable['SyntheticFocusEvent',v28,-]|29171: write-variable[v28,'EventConstructor']*}" ] 
BB8774 -> BB8758 [tailport=s, headport=n]
BB8774 -> BB8818 [tailport=s, headport=n, color=gray]
BB8775 [shape=record label="{29172: read-variable['topLevelTypes',v29,-]|29173: read-property[v29,'topClick',v8]|29174: \<variable-non-null-undef\>['topLevelTypes']|29175: ==[v7,v8,v9]|29176: if[v9](true-block:8776,false-block:8777)}" ] 
BB8775 -> BB8776 [tailport=s, headport=n, headlabel="      8776"]
BB8775 -> BB8777 [tailport=s, headport=n, headlabel="      8777"]
BB8775 -> BB8818 [tailport=s, headport=n, color=gray]
BB8776 [shape=record label="{29177: read-variable['nativeEvent',v33,-]|29178: read-property[v33,'button',v31]|29179: \<variable-non-null-undef\>['nativeEvent']|29180: constant[2.0,v32]|29181: ===[v31,v32,v30]|29182: if[v30](true-block:8778,false-block:8785)}" ] 
BB8776 -> BB8778 [tailport=s, headport=n, headlabel="      8778"]
BB8776 -> BB8785 [tailport=s, headport=n, headlabel="      8785"]
BB8776 -> BB8818 [tailport=s, headport=n, color=gray]
BB8777 [shape=record label="{29183: read-variable['topLevelTypes',v34,-]|29184: read-property[v34,'topContextMenu',v8]|29185: \<variable-non-null-undef\>['topLevelTypes']|29186: ==[v7,v8,v9]|29187: if[v9](true-block:8785,false-block:8779)}" ] 
BB8777 -> BB8785 [tailport=s, headport=n]
BB8777 -> BB8779 [tailport=s, headport=n, headlabel="      8779"]
BB8777 -> BB8818 [tailport=s, headport=n, color=gray]
BB8778 [shape=record label="{29188: constant[null,v1]}" ] 
BB8778 -> BB8817 [tailport=s, headport=n]
BB8779 [shape=record label="{29189: read-variable['topLevelTypes',v35,-]|29190: read-property[v35,'topDoubleClick',v8]|29191: \<variable-non-null-undef\>['topLevelTypes']|29192: ==[v7,v8,v9]|29193: if[v9](true-block:8785,false-block:8780)}" ] 
BB8779 -> BB8785 [tailport=s, headport=n]
BB8779 -> BB8780 [tailport=s, headport=n, headlabel="      8780"]
BB8779 -> BB8818 [tailport=s, headport=n, color=gray]
BB8780 [shape=record label="{29194: read-variable['topLevelTypes',v36,-]|29195: read-property[v36,'topMouseDown',v8]|29196: \<variable-non-null-undef\>['topLevelTypes']|29197: ==[v7,v8,v9]|29198: if[v9](true-block:8785,false-block:8781)}" ] 
BB8780 -> BB8785 [tailport=s, headport=n]
BB8780 -> BB8781 [tailport=s, headport=n, headlabel="      8781"]
BB8780 -> BB8818 [tailport=s, headport=n, color=gray]
BB8781 [shape=record label="{29199: read-variable['topLevelTypes',v37,-]|29200: read-property[v37,'topMouseMove',v8]|29201: \<variable-non-null-undef\>['topLevelTypes']|29202: ==[v7,v8,v9]|29203: if[v9](true-block:8785,false-block:8782)}" ] 
BB8781 -> BB8785 [tailport=s, headport=n]
BB8781 -> BB8782 [tailport=s, headport=n, headlabel="      8782"]
BB8781 -> BB8818 [tailport=s, headport=n, color=gray]
BB8782 [shape=record label="{29204: read-variable['topLevelTypes',v38,-]|29205: read-property[v38,'topMouseOut',v8]|29206: \<variable-non-null-undef\>['topLevelTypes']|29207: ==[v7,v8,v9]|29208: if[v9](true-block:8785,false-block:8783)}" ] 
BB8782 -> BB8785 [tailport=s, headport=n]
BB8782 -> BB8783 [tailport=s, headport=n, headlabel="      8783"]
BB8782 -> BB8818 [tailport=s, headport=n, color=gray]
BB8783 [shape=record label="{29209: read-variable['topLevelTypes',v39,-]|29210: read-property[v39,'topMouseOver',v8]|29211: \<variable-non-null-undef\>['topLevelTypes']|29212: ==[v7,v8,v9]|29213: if[v9](true-block:8785,false-block:8784)}" ] 
BB8783 -> BB8785 [tailport=s, headport=n]
BB8783 -> BB8784 [tailport=s, headport=n, headlabel="      8784"]
BB8783 -> BB8818 [tailport=s, headport=n, color=gray]
BB8784 [shape=record label="{29214: read-variable['topLevelTypes',v40,-]|29215: read-property[v40,'topMouseUp',v8]|29216: \<variable-non-null-undef\>['topLevelTypes']|29217: ==[v7,v8,v9]|29218: if[v9](true-block:8785,false-block:8786)}" ] 
BB8784 -> BB8785 [tailport=s, headport=n]
BB8784 -> BB8786 [tailport=s, headport=n, headlabel="      8786"]
BB8784 -> BB8818 [tailport=s, headport=n, color=gray]
BB8785 [shape=record label="{29219: read-variable['SyntheticMouseEvent',v41,-]|29220: write-variable[v41,'EventConstructor']*}" ] 
BB8785 -> BB8758 [tailport=s, headport=n]
BB8785 -> BB8818 [tailport=s, headport=n, color=gray]
BB8786 [shape=record label="{29221: read-variable['topLevelTypes',v42,-]|29222: read-property[v42,'topDrag',v8]|29223: \<variable-non-null-undef\>['topLevelTypes']|29224: ==[v7,v8,v9]|29225: if[v9](true-block:8794,false-block:8787)}" ] 
BB8786 -> BB8794 [tailport=s, headport=n, headlabel="      8794"]
BB8786 -> BB8787 [tailport=s, headport=n, headlabel="      8787"]
BB8786 -> BB8818 [tailport=s, headport=n, color=gray]
BB8787 [shape=record label="{29226: read-variable['topLevelTypes',v43,-]|29227: read-property[v43,'topDragEnd',v8]|29228: \<variable-non-null-undef\>['topLevelTypes']|29229: ==[v7,v8,v9]|29230: if[v9](true-block:8794,false-block:8788)}" ] 
BB8787 -> BB8794 [tailport=s, headport=n]
BB8787 -> BB8788 [tailport=s, headport=n, headlabel="      8788"]
BB8787 -> BB8818 [tailport=s, headport=n, color=gray]
BB8788 [shape=record label="{29231: read-variable['topLevelTypes',v44,-]|29232: read-property[v44,'topDragEnter',v8]|29233: \<variable-non-null-undef\>['topLevelTypes']|29234: ==[v7,v8,v9]|29235: if[v9](true-block:8794,false-block:8789)}" ] 
BB8788 -> BB8794 [tailport=s, headport=n]
BB8788 -> BB8789 [tailport=s, headport=n, headlabel="      8789"]
BB8788 -> BB8818 [tailport=s, headport=n, color=gray]
BB8789 [shape=record label="{29236: read-variable['topLevelTypes',v45,-]|29237: read-property[v45,'topDragExit',v8]|29238: \<variable-non-null-undef\>['topLevelTypes']|29239: ==[v7,v8,v9]|29240: if[v9](true-block:8794,false-block:8790)}" ] 
BB8789 -> BB8794 [tailport=s, headport=n]
BB8789 -> BB8790 [tailport=s, headport=n, headlabel="      8790"]
BB8789 -> BB8818 [tailport=s, headport=n, color=gray]
BB8790 [shape=record label="{29241: read-variable['topLevelTypes',v46,-]|29242: read-property[v46,'topDragLeave',v8]|29243: \<variable-non-null-undef\>['topLevelTypes']|29244: ==[v7,v8,v9]|29245: if[v9](true-block:8794,false-block:8791)}" ] 
BB8790 -> BB8794 [tailport=s, headport=n]
BB8790 -> BB8791 [tailport=s, headport=n, headlabel="      8791"]
BB8790 -> BB8818 [tailport=s, headport=n, color=gray]
BB8791 [shape=record label="{29246: read-variable['topLevelTypes',v47,-]|29247: read-property[v47,'topDragOver',v8]|29248: \<variable-non-null-undef\>['topLevelTypes']|29249: ==[v7,v8,v9]|29250: if[v9](true-block:8794,false-block:8792)}" ] 
BB8791 -> BB8794 [tailport=s, headport=n]
BB8791 -> BB8792 [tailport=s, headport=n, headlabel="      8792"]
BB8791 -> BB8818 [tailport=s, headport=n, color=gray]
BB8792 [shape=record label="{29251: read-variable['topLevelTypes',v48,-]|29252: read-property[v48,'topDragStart',v8]|29253: \<variable-non-null-undef\>['topLevelTypes']|29254: ==[v7,v8,v9]|29255: if[v9](true-block:8794,false-block:8793)}" ] 
BB8792 -> BB8794 [tailport=s, headport=n]
BB8792 -> BB8793 [tailport=s, headport=n, headlabel="      8793"]
BB8792 -> BB8818 [tailport=s, headport=n, color=gray]
BB8793 [shape=record label="{29256: read-variable['topLevelTypes',v49,-]|29257: read-property[v49,'topDrop',v8]|29258: \<variable-non-null-undef\>['topLevelTypes']|29259: ==[v7,v8,v9]|29260: if[v9](true-block:8794,false-block:8795)}" ] 
BB8793 -> BB8794 [tailport=s, headport=n]
BB8793 -> BB8795 [tailport=s, headport=n, headlabel="      8795"]
BB8793 -> BB8818 [tailport=s, headport=n, color=gray]
BB8794 [shape=record label="{29261: read-variable['SyntheticDragEvent',v50,-]|29262: write-variable[v50,'EventConstructor']*}" ] 
BB8794 -> BB8758 [tailport=s, headport=n]
BB8794 -> BB8818 [tailport=s, headport=n, color=gray]
BB8795 [shape=record label="{29263: read-variable['topLevelTypes',v51,-]|29264: read-property[v51,'topTouchCancel',v8]|29265: \<variable-non-null-undef\>['topLevelTypes']|29266: ==[v7,v8,v9]|29267: if[v9](true-block:8799,false-block:8796)}" ] 
BB8795 -> BB8799 [tailport=s, headport=n, headlabel="      8799"]
BB8795 -> BB8796 [tailport=s, headport=n, headlabel="      8796"]
BB8795 -> BB8818 [tailport=s, headport=n, color=gray]
BB8796 [shape=record label="{29268: read-variable['topLevelTypes',v52,-]|29269: read-property[v52,'topTouchEnd',v8]|29270: \<variable-non-null-undef\>['topLevelTypes']|29271: ==[v7,v8,v9]|29272: if[v9](true-block:8799,false-block:8797)}" ] 
BB8796 -> BB8799 [tailport=s, headport=n]
BB8796 -> BB8797 [tailport=s, headport=n, headlabel="      8797"]
BB8796 -> BB8818 [tailport=s, headport=n, color=gray]
BB8797 [shape=record label="{29273: read-variable['topLevelTypes',v53,-]|29274: read-property[v53,'topTouchMove',v8]|29275: \<variable-non-null-undef\>['topLevelTypes']|29276: ==[v7,v8,v9]|29277: if[v9](true-block:8799,false-block:8798)}" ] 
BB8797 -> BB8799 [tailport=s, headport=n]
BB8797 -> BB8798 [tailport=s, headport=n, headlabel="      8798"]
BB8797 -> BB8818 [tailport=s, headport=n, color=gray]
BB8798 [shape=record label="{29278: read-variable['topLevelTypes',v54,-]|29279: read-property[v54,'topTouchStart',v8]|29280: \<variable-non-null-undef\>['topLevelTypes']|29281: ==[v7,v8,v9]|29282: if[v9](true-block:8799,false-block:8800)}" ] 
BB8798 -> BB8799 [tailport=s, headport=n]
BB8798 -> BB8800 [tailport=s, headport=n, headlabel="      8800"]
BB8798 -> BB8818 [tailport=s, headport=n, color=gray]
BB8799 [shape=record label="{29283: read-variable['SyntheticTouchEvent',v55,-]|29284: write-variable[v55,'EventConstructor']*}" ] 
BB8799 -> BB8758 [tailport=s, headport=n]
BB8799 -> BB8818 [tailport=s, headport=n, color=gray]
BB8800 [shape=record label="{29285: read-variable['topLevelTypes',v56,-]|29286: read-property[v56,'topScroll',v8]|29287: \<variable-non-null-undef\>['topLevelTypes']|29288: ==[v7,v8,v9]|29289: if[v9](true-block:8801,false-block:8802)}" ] 
BB8800 -> BB8801 [tailport=s, headport=n, headlabel="      8801"]
BB8800 -> BB8802 [tailport=s, headport=n, headlabel="      8802"]
BB8800 -> BB8818 [tailport=s, headport=n, color=gray]
BB8801 [shape=record label="{29290: read-variable['SyntheticUIEvent',v57,-]|29291: write-variable[v57,'EventConstructor']*}" ] 
BB8801 -> BB8758 [tailport=s, headport=n]
BB8801 -> BB8818 [tailport=s, headport=n, color=gray]
BB8802 [shape=record label="{29292: read-variable['topLevelTypes',v58,-]|29293: read-property[v58,'topWheel',v8]|29294: \<variable-non-null-undef\>['topLevelTypes']|29295: ==[v7,v8,v9]|29296: if[v9](true-block:8803,false-block:8804)}" ] 
BB8802 -> BB8803 [tailport=s, headport=n, headlabel="      8803"]
BB8802 -> BB8804 [tailport=s, headport=n, headlabel="      8804"]
BB8802 -> BB8818 [tailport=s, headport=n, color=gray]
BB8803 [shape=record label="{29297: read-variable['SyntheticWheelEvent',v59,-]|29298: write-variable[v59,'EventConstructor']*}" ] 
BB8803 -> BB8758 [tailport=s, headport=n]
BB8803 -> BB8818 [tailport=s, headport=n, color=gray]
BB8804 [shape=record label="{29299: read-variable['topLevelTypes',v60,-]|29300: read-property[v60,'topCopy',v8]|29301: \<variable-non-null-undef\>['topLevelTypes']|29302: ==[v7,v8,v9]|29303: if[v9](true-block:8807,false-block:8805)}" ] 
BB8804 -> BB8807 [tailport=s, headport=n, headlabel="      8807"]
BB8804 -> BB8805 [tailport=s, headport=n, headlabel="      8805"]
BB8804 -> BB8818 [tailport=s, headport=n, color=gray]
BB8805 [shape=record label="{29304: read-variable['topLevelTypes',v61,-]|29305: read-property[v61,'topCut',v8]|29306: \<variable-non-null-undef\>['topLevelTypes']|29307: ==[v7,v8,v9]|29308: if[v9](true-block:8807,false-block:8806)}" ] 
BB8805 -> BB8807 [tailport=s, headport=n]
BB8805 -> BB8806 [tailport=s, headport=n, headlabel="      8806"]
BB8805 -> BB8818 [tailport=s, headport=n, color=gray]
BB8806 [shape=record label="{29309: read-variable['topLevelTypes',v62,-]|29310: read-property[v62,'topPaste',v8]|29311: \<variable-non-null-undef\>['topLevelTypes']|29312: ==[v7,v8,v9]|29313: if[v9](true-block:8807,false-block:8758)}" ] 
BB8806 -> BB8807 [tailport=s, headport=n]
BB8806 -> BB8758 [tailport=s, headport=n]
BB8806 -> BB8818 [tailport=s, headport=n, color=gray]
BB8807 [shape=record label="{29314: read-variable['SyntheticClipboardEvent',v63,-]|29315: write-variable[v63,'EventConstructor']*}" ] 
BB8807 -> BB8758 [tailport=s, headport=n]
BB8807 -> BB8818 [tailport=s, headport=n, color=gray]
BB8808 [shape=record label="{29316: read-variable['invariant',v14,v13]|29317: read-variable['EventConstructor',v15,-]|29318: constant[\"SimpleEventPlugin: Unhandled event type, `%s`.\",v16]|29319: read-variable['topLevelType',v17,-]}" ] 
BB8808 -> BB8810 [tailport=s, headport=n, headlabel="      8810"]
BB8808 -> BB8818 [tailport=s, headport=n, color=gray]
BB8809 [shape=record label="{29320: read-variable['invariant',v14,v13]|29321: read-variable['EventConstructor',v15,-]}" ] 
BB8809 -> BB8811 [tailport=s, headport=n, headlabel="      8811"]
BB8809 -> BB8818 [tailport=s, headport=n, color=gray]
BB8810 [shape=record label="{29322: call-invariant [v13,v14,v15,v16,v17,-]}" ] 
BB8810 -> BB8812 [tailport=s, headport=n, headlabel="      8812"]
BB8810 -> BB8818 [tailport=s, headport=n, color=gray]
BB8811 [shape=record label="{29323: call-invariant [v13,v14,v15,-]}" ] 
BB8811 -> BB8812 [tailport=s, headport=n]
BB8811 -> BB8818 [tailport=s, headport=n, color=gray]
BB8812 [shape=record label="{29324: read-variable['EventConstructor',v15,-]|29325: read-property[v15,'getPooled',-]|29326: \<variable-non-null-undef\>['EventConstructor']|29327: read-variable['dispatchConfig',v16,-]|29328: read-variable['topLevelTargetID',v17,-]|29329: read-variable['nativeEvent',v18,-]}" ] 
BB8812 -> BB8813 [tailport=s, headport=n, headlabel="      8813"]
BB8812 -> BB8818 [tailport=s, headport=n, color=gray]
BB8813 [shape=record label="{29330: call-EventConstructor.getPooled [v15,'getPooled',v16,v17,v18,v13]}" ] 
BB8813 -> BB8814 [tailport=s, headport=n, headlabel="      8814"]
BB8813 -> BB8818 [tailport=s, headport=n, color=gray]
BB8814 [shape=record label="{29331: write-variable[v13,'event']*|29332: read-variable['EventPropagators',v20,-]|29333: read-property[v20,'accumulateTwoPhaseDispatches',-]|29334: \<variable-non-null-undef\>['EventPropagators']|29335: read-variable['event',v21,-]}" ] 
BB8814 -> BB8815 [tailport=s, headport=n, headlabel="      8815"]
BB8814 -> BB8818 [tailport=s, headport=n, color=gray]
BB8815 [shape=record label="{29336: call-EventPropagators.accumulateTwoPhaseDispatches [v20,'accumulateTwoPhaseDispatches',v21,-]*}" ] 
BB8815 -> BB8816 [tailport=s, headport=n, headlabel="      8816"]
BB8815 -> BB8818 [tailport=s, headport=n, color=gray]
BB8816 [shape=record label="{29337: read-variable['event',v1,-]}" ] 
BB8816 -> BB8817 [tailport=s, headport=n]
BB8816 -> BB8818 [tailport=s, headport=n, color=gray]
BB8817 [shape=record label="{29338: return[v1]}" ] 
BB8818 [shape=record label="{29339: exceptional-return}" ] 
//#$~ 15785
}
