digraph {
rankdir="TD"
BB_entry144[shape=none,label=""];
BB_entry144 -> BB1458 [tailport=s, headport=n, headlabel="    1458"]
BB1458 [shape=record label="{5599: constant[undefined,v1]|5600: vardecl['isRotated']|5601: vardecl['innerWidth']|5602: vardecl['valueWidth']|5603: vardecl['valueOffset']}" ] 
BB1458 -> BB1459 [tailport=s, headport=n, headlabel="      1459"]
BB1459 [shape=record label="{5604: read-variable['this',v5,-]|5605: read-property[v5,'xLabelRotation',v3]|5606: constant[0.0,v4]|5607: \>[v3,v4,v2]|5608: write-variable[v2,'isRotated']*|5609: read-variable['this',v9,-]|5610: read-property[v9,'width',v7]|5611: read-variable['this',v12,-]|5612: read-property[v12,'xScalePaddingLeft',v10]|5613: read-variable['this',v13,-]|5614: read-property[v13,'xScalePaddingRight',v11]|5615: +[v10,v11,v8]|5616: -[v7,v8,v6]|5617: write-variable[v6,'innerWidth']*|5618: read-variable['innerWidth',v15,-]|5619: read-variable['Math',v18,-]|5620: read-property[v18,'max',-]|5621: \<variable-non-null-undef\>['Math']|5622: read-variable['this',v22,-]|5623: read-property[v22,'valuesCount',v20]|5624: read-variable['this',v24,-]|5625: read-property[v24,'offsetGridLines',v23]|5626: if[v23](true-block:1460,false-block:1461)}" ] 
BB1459 -> BB1460 [tailport=s, headport=n, headlabel="      1460"]
BB1459 -> BB1461 [tailport=s, headport=n, headlabel="      1461"]
BB1459 -> BB1469 [tailport=s, headport=n, color=gray, headlabel="      1469"]
BB1460 [shape=record label="{5627: constant[0.0,v21]}" ] 
BB1460 -> BB1462 [tailport=s, headport=n, headlabel="      1462"]
BB1461 [shape=record label="{5628: constant[1.0,v21]}" ] 
BB1461 -> BB1462 [tailport=s, headport=n]
BB1462 [shape=record label="{5629: -[v20,v21,v19]|5630: constant[1.0,v25]}" ] 
BB1462 -> BB1463 [tailport=s, headport=n, headlabel="      1463"]
BB1462 -> BB1469 [tailport=s, headport=n, color=gray]
BB1463 [shape=record label="{5631: call-Math.max [v18,'max',v19,v25,v16]}" ] 
BB1463 -> BB1464 [tailport=s, headport=n, headlabel="      1464"]
BB1463 -> BB1469 [tailport=s, headport=n, color=gray]
BB1464 [shape=record label="{5632: /[v15,v16,v14]|5633: write-variable[v14,'valueWidth']*|5634: read-variable['valueWidth',v29,-]|5635: read-variable['index',v30,-]|5636: *[v29,v30,v27]|5637: read-variable['this',v31,-]|5638: read-property[v31,'xScalePaddingLeft',v28]|5639: +[v27,v28,v26]|5640: write-variable[v26,'valueOffset']*|5641: read-variable['this',v33,-]|5642: read-property[v33,'offsetGridLines',v32]|5643: if[v32](true-block:1465,false-block:1466)}" ] 
BB1464 -> BB1465 [tailport=s, headport=n, headlabel="      1465"]
BB1464 -> BB1466 [tailport=s, headport=n, headlabel="      1466"]
BB1464 -> BB1469 [tailport=s, headport=n, color=gray]
BB1465 [shape=record label="{5644: read-variable['valueOffset',v35,-]|5645: read-variable['valueWidth',v37,-]|5646: constant[2.0,v38]|5647: /[v37,v38,v36]|5648: +[v35,v36,v34]|5649: write-variable[v34,'valueOffset']*}" ] 
BB1465 -> BB1466 [tailport=s, headport=n]
BB1465 -> BB1469 [tailport=s, headport=n, color=gray]
BB1466 [shape=record label="{5650: read-variable['Math',v35,-]|5651: read-property[v35,'round',-]|5652: \<variable-non-null-undef\>['Math']|5653: read-variable['valueOffset',v36,-]}" ] 
BB1466 -> BB1467 [tailport=s, headport=n, headlabel="      1467"]
BB1466 -> BB1469 [tailport=s, headport=n, color=gray]
BB1467 [shape=record label="{5654: call-Math.round [v35,'round',v36,v1]}" ] 
BB1467 -> BB1468 [tailport=s, headport=n, headlabel="      1468"]
BB1467 -> BB1469 [tailport=s, headport=n, color=gray]
BB1468 [shape=record label="{5655: return[v1]}" ] 
BB1469 [shape=record label="{5656: exceptional-return}" ] 
//#$~ 1603
}
