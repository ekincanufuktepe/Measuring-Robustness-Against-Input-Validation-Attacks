digraph {
rankdir="TD"
BB_entry527[shape=none,label=""];
BB_entry527 -> BB6822 [tailport=s, headport=n, headlabel="    6822"]
BB6822 [shape=record label="{19058: constant[undefined,v1]|19059: vardecl['cache']|19060: vardecl['outerCache']|19061: vardecl['node']|19062: vardecl['diff']|19063: vardecl['nodeIndex']|19064: vardecl['start']|19065: vardecl['dir']|19066: vardecl['parent']|19067: vardecl['name']|19068: vardecl['useCache']}" ] 
BB6822 -> BB6823 [tailport=s, headport=n, headlabel="      6823"]
BB6823 [shape=record label="{19069: read-variable['simple',v4,-]|19070: read-variable['forward',v5,-]|19071: !==[v4,v5,v3]|19072: if[v3](true-block:6824,false-block:6825)}" ] 
BB6823 -> BB6824 [tailport=s, headport=n, headlabel="      6824"]
BB6823 -> BB6825 [tailport=s, headport=n, headlabel="      6825"]
BB6823 -> BB6916 [tailport=s, headport=n, color=gray, headlabel="      6916"]
BB6824 [shape=record label="{19073: constant[\"nextSibling\",v2]}" ] 
BB6824 -> BB6826 [tailport=s, headport=n, headlabel="      6826"]
BB6825 [shape=record label="{19074: constant[\"previousSibling\",v2]}" ] 
BB6825 -> BB6826 [tailport=s, headport=n]
BB6826 [shape=record label="{19075: write-variable[v2,'dir']*|19076: read-variable['elem',v7,-]|19077: read-property[v7,'parentNode',v6]|19078: \<variable-non-null-undef\>['elem']|19079: write-variable[v6,'parent']*|19080: read-variable['ofType',v8,-]|19081: if[v8](true-block:6827,false-block:6829)}" ] 
BB6826 -> BB6829 [tailport=s, headport=n, headlabel="      6829"]
BB6826 -> BB6827 [tailport=s, headport=n, headlabel="      6827"]
BB6826 -> BB6916 [tailport=s, headport=n, color=gray]
BB6827 [shape=record label="{19082: read-variable['elem',v11,-]|19083: read-property[v11,'nodeName',v10]|19084: \<variable-non-null-undef\>['elem']|19085: read-property[v10,'toLowerCase',-]|19086: \<property-non-null-undef\>[v11,'nodeName']}" ] 
BB6827 -> BB6828 [tailport=s, headport=n, headlabel="      6828"]
BB6827 -> BB6916 [tailport=s, headport=n, color=gray]
BB6828 [shape=record label="{19087: call-elem.nodeName.toLowerCase [v10,'toLowerCase',v8]}" ] 
BB6828 -> BB6829 [tailport=s, headport=n]
BB6828 -> BB6916 [tailport=s, headport=n, color=gray]
BB6829 [shape=record label="{19088: write-variable[v8,'name']*|19089: read-variable['xml',v10,-]|19090: ![v10,v9]|19091: if[v9](true-block:6830,false-block:6831)}" ] 
BB6829 -> BB6831 [tailport=s, headport=n, headlabel="      6831"]
BB6829 -> BB6830 [tailport=s, headport=n, headlabel="      6830"]
BB6829 -> BB6916 [tailport=s, headport=n, color=gray]
BB6830 [shape=record label="{19092: read-variable['ofType',v11,-]|19093: ![v11,v9]}" ] 
BB6830 -> BB6831 [tailport=s, headport=n]
BB6830 -> BB6916 [tailport=s, headport=n, color=gray]
BB6831 [shape=record label="{19094: write-variable[v9,'useCache']*|19095: read-variable['parent',v11,-]|19096: if[v11](true-block:6832,false-block:6915)}" ] 
BB6831 -> BB6832 [tailport=s, headport=n, headlabel="      6832"]
BB6831 -> BB6915 [tailport=s, headport=n, headlabel="      6915"]
BB6831 -> BB6916 [tailport=s, headport=n, color=gray]
BB6832 [shape=record label="{19097: read-variable['simple',v12,-]|19098: if[v12](true-block:6833,false-block:6848)}" ] 
BB6832 -> BB6833 [tailport=s, headport=n, headlabel="      6833"]
BB6832 -> BB6848 [tailport=s, headport=n, headlabel="      6848"]
BB6832 -> BB6916 [tailport=s, headport=n, color=gray]
BB6833 [shape=record label="{19099: read-variable['dir',v13,-]|19100: if[v13](true-block:6834,false-block:6835)}" ] 
BB6833 -> BB6834 [tailport=s, headport=n, headlabel="      6834"]
BB6833 -> BB6835 [tailport=s, headport=n, headlabel="      6835"]
BB6833 -> BB6916 [tailport=s, headport=n, color=gray]
BB6834 [shape=record label="{19101: read-variable['elem',v14,-]|19102: write-variable[v14,'node']*}" ] 
BB6834 -> BB6836 [tailport=s, headport=n, headlabel="      6836"]
BB6834 -> BB6916 [tailport=s, headport=n, color=gray]
BB6835 [shape=record label="{19103: constant[true,v1]}" ] 
BB6835 -> BB6915 [tailport=s, headport=n]
BB6836 [shape=record label="{19104: read-variable['node',v16,-]|19105: read-variable['dir',v17,-]|19106: read-property[v16,v17,v15]|19107: \<variable-non-null-undef\>['node']|19108: write-variable[v15,'node']|19109: if[v15](true-block:6837,false-block:6838)}" ] 
BB6836 -> BB6837 [tailport=s, headport=n, headlabel="      6837"]
BB6836 -> BB6838 [tailport=s, headport=n, headlabel="      6838"]
BB6836 -> BB6916 [tailport=s, headport=n, color=gray]
BB6837 [shape=record label="{19110: read-variable['ofType',v19,-]|19111: if[v19](true-block:6839,false-block:6840)}" ] 
BB6837 -> BB6839 [tailport=s, headport=n, headlabel="      6839"]
BB6837 -> BB6840 [tailport=s, headport=n, headlabel="      6840"]
BB6837 -> BB6916 [tailport=s, headport=n, color=gray]
BB6838 [shape=record label="{19112: read-variable['type',v19,-]|19113: constant[\"only\",v20]|19114: ===[v19,v20,v18]|19115: if[v18](true-block:6845,false-block:6847)}" ] 
BB6838 -> BB6847 [tailport=s, headport=n, headlabel="      6847"]
BB6838 -> BB6845 [tailport=s, headport=n, headlabel="      6845"]
BB6838 -> BB6916 [tailport=s, headport=n, color=gray]
BB6839 [shape=record label="{19116: read-variable['node',v24,-]|19117: read-property[v24,'nodeName',v23]|19118: \<variable-non-null-undef\>['node']|19119: read-property[v23,'toLowerCase',-]|19120: \<property-non-null-undef\>[v24,'nodeName']}" ] 
BB6839 -> BB6841 [tailport=s, headport=n, headlabel="      6841"]
BB6839 -> BB6916 [tailport=s, headport=n, color=gray]
BB6840 [shape=record label="{19121: read-variable['node',v22,-]|19122: read-property[v22,'nodeType',v20]|19123: \<variable-non-null-undef\>['node']|19124: constant[1.0,v21]|19125: ===[v20,v21,v18]}" ] 
BB6840 -> BB6843 [tailport=s, headport=n, headlabel="      6843"]
BB6840 -> BB6916 [tailport=s, headport=n, color=gray]
BB6841 [shape=record label="{19126: call-node.nodeName.toLowerCase [v23,'toLowerCase',v20]}" ] 
BB6841 -> BB6842 [tailport=s, headport=n, headlabel="      6842"]
BB6841 -> BB6916 [tailport=s, headport=n, color=gray]
BB6842 [shape=record label="{19127: read-variable['name',v21,-]|19128: ===[v20,v21,v18]}" ] 
BB6842 -> BB6843 [tailport=s, headport=n]
BB6842 -> BB6916 [tailport=s, headport=n, color=gray]
BB6843 [shape=record label="{19129: if[v18](true-block:6844,false-block:6836)}" ] 
BB6843 -> BB6844 [tailport=s, headport=n, headlabel="      6844"]
BB6843 -> BB6836 [tailport=s, headport=n]
BB6844 [shape=record label="{19130: constant[false,v1]}" ] 
BB6844 -> BB6915 [tailport=s, headport=n]
BB6845 [shape=record label="{19131: read-variable['start',v21,-]|19132: ![v21,v18]|19133: if[v18](true-block:6846,false-block:6847)}" ] 
BB6845 -> BB6847 [tailport=s, headport=n]
BB6845 -> BB6846 [tailport=s, headport=n, headlabel="      6846"]
BB6845 -> BB6916 [tailport=s, headport=n, color=gray]
BB6846 [shape=record label="{19134: constant[\"nextSibling\",v18]}" ] 
BB6846 -> BB6847 [tailport=s, headport=n]
BB6847 [shape=record label="{19135: write-variable[v18,'dir']|19136: write-variable[v18,'start']*}" ] 
BB6847 -> BB6833 [tailport=s, headport=n]
BB6848 [shape=record label="{19137: read-variable['Array',v14,-]|19138: read-variable['forward',v16,-]|19139: if[v16](true-block:6849,false-block:6850)}" ] 
BB6848 -> BB6849 [tailport=s, headport=n, headlabel="      6849"]
BB6848 -> BB6850 [tailport=s, headport=n, headlabel="      6850"]
BB6848 -> BB6916 [tailport=s, headport=n, color=gray]
BB6849 [shape=record label="{19140: read-variable['parent',v17,-]|19141: read-property[v17,'firstChild',v15]|19142: \<variable-non-null-undef\>['parent']}" ] 
BB6849 -> BB6851 [tailport=s, headport=n, headlabel="      6851"]
BB6849 -> BB6916 [tailport=s, headport=n, color=gray]
BB6850 [shape=record label="{19143: read-variable['parent',v17,-]|19144: read-property[v17,'lastChild',v15]|19145: \<variable-non-null-undef\>['parent']}" ] 
BB6850 -> BB6851 [tailport=s, headport=n]
BB6850 -> BB6916 [tailport=s, headport=n, color=gray]
BB6851 [shape=record label="{19146: construct [-,v14,v15,v13]}" ] 
BB6851 -> BB6852 [tailport=s, headport=n, headlabel="      6852"]
BB6851 -> BB6916 [tailport=s, headport=n, color=gray]
BB6852 [shape=record label="{19147: write-variable[v13,'start']*|19148: read-variable['forward',v17,-]|19149: if[v17](true-block:6853,false-block:6854)}" ] 
BB6852 -> BB6854 [tailport=s, headport=n, headlabel="      6854"]
BB6852 -> BB6853 [tailport=s, headport=n, headlabel="      6853"]
BB6852 -> BB6916 [tailport=s, headport=n, color=gray]
BB6853 [shape=record label="{19150: read-variable['useCache',v17,-]}" ] 
BB6853 -> BB6854 [tailport=s, headport=n]
BB6853 -> BB6916 [tailport=s, headport=n, color=gray]
BB6854 [shape=record label="{19151: if[v17](true-block:6855,false-block:6856)}" ] 
BB6854 -> BB6855 [tailport=s, headport=n, headlabel="      6855"]
BB6854 -> BB6856 [tailport=s, headport=n, headlabel="      6856"]
BB6855 [shape=record label="{19152: read-variable['parent',v19,-]|19153: read-variable['expando',v20,-]|19154: read-property[v19,v20,v18]|19155: \<variable-non-null-undef\>['parent']|19156: if[v18](true-block:6858,false-block:6857)}" ] 
BB6855 -> BB6858 [tailport=s, headport=n, headlabel="      6858"]
BB6855 -> BB6857 [tailport=s, headport=n, headlabel="      6857"]
BB6855 -> BB6916 [tailport=s, headport=n, color=gray]
BB6856 [shape=record label="{19157: read-variable['useCache',v18,-]|19158: if[v18](true-block:6883,false-block:6887)}" ] 
BB6856 -> BB6887 [tailport=s, headport=n, headlabel="      6887"]
BB6856 -> BB6883 [tailport=s, headport=n, headlabel="      6883"]
BB6856 -> BB6916 [tailport=s, headport=n, color=gray]
BB6857 [shape=record label="{19159: read-variable['parent',v19,-]|19160: read-variable['expando',v20,-]|19161: new[v18]|19162: write-property[v19,v20,v18]|19163: \<variable-non-null-undef\>['parent']}" ] 
BB6857 -> BB6858 [tailport=s, headport=n]
BB6857 -> BB6916 [tailport=s, headport=n, color=gray]
BB6858 [shape=record label="{19164: write-variable[v18,'outerCache']*|19165: read-variable['outerCache',v20,-]|19166: read-variable['type',v21,-]|19167: read-property[v20,v21,v19]|19168: \<variable-non-null-undef\>['outerCache']|19169: if[v19](true-block:6861,false-block:6859)}" ] 
BB6858 -> BB6861 [tailport=s, headport=n, headlabel="      6861"]
BB6858 -> BB6859 [tailport=s, headport=n, headlabel="      6859"]
BB6858 -> BB6916 [tailport=s, headport=n, color=gray]
BB6859 [shape=record label="{19170: read-variable['Array',v20,-]}" ] 
BB6859 -> BB6860 [tailport=s, headport=n, headlabel="      6860"]
BB6859 -> BB6916 [tailport=s, headport=n, color=gray]
BB6860 [shape=record label="{19171: construct [-,v20,v19]}" ] 
BB6860 -> BB6861 [tailport=s, headport=n]
BB6860 -> BB6916 [tailport=s, headport=n, color=gray]
BB6861 [shape=record label="{19172: write-variable[v19,'cache']*|19173: read-variable['cache',v23,-]|19174: constant[0.0,v24]|19175: read-property[v23,v24,v21]|19176: \<variable-non-null-undef\>['cache']|19177: read-variable['dirruns',v22,-]|19178: ===[v21,v22,v20]|19179: if[v20](true-block:6862,false-block:6863)}" ] 
BB6861 -> BB6863 [tailport=s, headport=n, headlabel="      6863"]
BB6861 -> BB6862 [tailport=s, headport=n, headlabel="      6862"]
BB6861 -> BB6916 [tailport=s, headport=n, color=gray]
BB6862 [shape=record label="{19180: read-variable['cache',v25,-]|19181: constant[1.0,v26]|19182: read-property[v25,v26,v20]|19183: \<variable-non-null-undef\>['cache']}" ] 
BB6862 -> BB6863 [tailport=s, headport=n]
BB6862 -> BB6916 [tailport=s, headport=n, color=gray]
BB6863 [shape=record label="{19184: write-variable[v20,'nodeIndex']*|19185: read-variable['cache',v28,-]|19186: constant[0.0,v29]|19187: read-property[v28,v29,v26]|19188: \<variable-non-null-undef\>['cache']|19189: read-variable['dirruns',v27,-]|19190: ===[v26,v27,v25]|19191: if[v25](true-block:6864,false-block:6865)}" ] 
BB6863 -> BB6865 [tailport=s, headport=n, headlabel="      6865"]
BB6863 -> BB6864 [tailport=s, headport=n, headlabel="      6864"]
BB6863 -> BB6916 [tailport=s, headport=n, color=gray]
BB6864 [shape=record label="{19192: read-variable['cache',v30,-]|19193: constant[2.0,v31]|19194: read-property[v30,v31,v25]|19195: \<variable-non-null-undef\>['cache']}" ] 
BB6864 -> BB6865 [tailport=s, headport=n]
BB6864 -> BB6916 [tailport=s, headport=n, color=gray]
BB6865 [shape=record label="{19196: write-variable[v25,'diff']*|19197: read-variable['nodeIndex',v30,-]|19198: if[v30](true-block:6866,false-block:6867)}" ] 
BB6865 -> BB6867 [tailport=s, headport=n, headlabel="      6867"]
BB6865 -> BB6866 [tailport=s, headport=n, headlabel="      6866"]
BB6865 -> BB6916 [tailport=s, headport=n, color=gray]
BB6866 [shape=record label="{19199: read-variable['parent',v32,-]|19200: read-property[v32,'childNodes',v31]|19201: \<variable-non-null-undef\>['parent']|19202: read-variable['nodeIndex',v33,-]|19203: read-property[v31,v33,v30]|19204: \<property-non-null-undef\>[v32,'childNodes']}" ] 
BB6866 -> BB6867 [tailport=s, headport=n]
BB6866 -> BB6916 [tailport=s, headport=n, color=gray]
BB6867 [shape=record label="{19205: write-variable[v30,'node']*}" ] 
BB6867 -> BB6868 [tailport=s, headport=n, headlabel="      6868"]
BB6868 [shape=record label="{19206: constant[1.0,v32]|19207: read-variable['nodeIndex',v33,-]|19208: +[v33,v34]|19209: +[v34,v32,v31]|19210: write-variable[v31,'nodeIndex']|19211: if[v31](true-block:6869,false-block:6871)}" ] 
BB6868 -> BB6871 [tailport=s, headport=n, headlabel="      6871"]
BB6868 -> BB6869 [tailport=s, headport=n, headlabel="      6869"]
BB6868 -> BB6916 [tailport=s, headport=n, color=gray]
BB6869 [shape=record label="{19212: read-variable['node',v31,-]|19213: if[v31](true-block:6870,false-block:6871)}" ] 
BB6869 -> BB6871 [tailport=s, headport=n]
BB6869 -> BB6870 [tailport=s, headport=n, headlabel="      6870"]
BB6869 -> BB6916 [tailport=s, headport=n, color=gray]
BB6870 [shape=record label="{19214: read-variable['node',v35,-]|19215: read-variable['dir',v36,-]|19216: read-property[v35,v36,v31]|19217: \<variable-non-null-undef\>['node']}" ] 
BB6870 -> BB6871 [tailport=s, headport=n]
BB6870 -> BB6916 [tailport=s, headport=n, color=gray]
BB6871 [shape=record label="{19218: if[v31](true-block:6875,false-block:6872)}" ] 
BB6871 -> BB6875 [tailport=s, headport=n, headlabel="      6875"]
BB6871 -> BB6872 [tailport=s, headport=n, headlabel="      6872"]
BB6872 [shape=record label="{19219: constant[0.0,v31]|19220: write-variable[v31,'nodeIndex']|19221: write-variable[v31,'diff']|19222: if[v31](true-block:6875,false-block:6873)}" ] 
BB6872 -> BB6875 [tailport=s, headport=n]
BB6872 -> BB6873 [tailport=s, headport=n, headlabel="      6873"]
BB6873 [shape=record label="{19223: read-variable['start',v33,-]|19224: read-property[v33,'pop',-]|19225: \<variable-non-null-undef\>['start']}" ] 
BB6873 -> BB6874 [tailport=s, headport=n, headlabel="      6874"]
BB6873 -> BB6916 [tailport=s, headport=n, color=gray]
BB6874 [shape=record label="{19226: call-start.pop [v33,'pop',v31]}" ] 
BB6874 -> BB6875 [tailport=s, headport=n]
BB6874 -> BB6916 [tailport=s, headport=n, color=gray]
BB6875 [shape=record label="{19227: write-variable[v31,'node']|19228: if[v31](true-block:6876,false-block:6912)}" ] 
BB6875 -> BB6876 [tailport=s, headport=n, headlabel="      6876"]
BB6875 -> BB6912 [tailport=s, headport=n, headlabel="      6912"]
BB6876 [shape=record label="{19229: read-variable['node',v35,-]|19230: read-property[v35,'nodeType',v33]|19231: \<variable-non-null-undef\>['node']|19232: constant[1.0,v34]|19233: ===[v33,v34,v32]|19234: if[v32](true-block:6877,false-block:6879)}" ] 
BB6876 -> BB6879 [tailport=s, headport=n, headlabel="      6879"]
BB6876 -> BB6877 [tailport=s, headport=n, headlabel="      6877"]
BB6876 -> BB6916 [tailport=s, headport=n, color=gray]
BB6877 [shape=record label="{19235: constant[1.0,v36]|19236: read-variable['diff',v37,-]|19237: +[v37,v38]|19238: +[v38,v36,v32]|19239: write-variable[v32,'diff']|19240: if[v32](true-block:6878,false-block:6879)}" ] 
BB6877 -> BB6879 [tailport=s, headport=n]
BB6877 -> BB6878 [tailport=s, headport=n, headlabel="      6878"]
BB6877 -> BB6916 [tailport=s, headport=n, color=gray]
BB6878 [shape=record label="{19241: read-variable['node',v39,-]|19242: read-variable['elem',v40,-]|19243: ===[v39,v40,v32]}" ] 
BB6878 -> BB6879 [tailport=s, headport=n]
BB6878 -> BB6916 [tailport=s, headport=n, color=gray]
BB6879 [shape=record label="{19244: if[v32](true-block:6880,false-block:6868)}" ] 
BB6879 -> BB6880 [tailport=s, headport=n, headlabel="      6880"]
BB6879 -> BB6868 [tailport=s, headport=n]
BB6880 [shape=record label="{19245: read-variable['outerCache',v37,-]|19246: read-variable['type',v38,-]|19247: read-variable['Array',v39,-]|19248: read-variable['dirruns',v40,-]|19249: read-variable['nodeIndex',v41,-]|19250: read-variable['diff',v42,-]}" ] 
BB6880 -> BB6881 [tailport=s, headport=n, headlabel="      6881"]
BB6880 -> BB6916 [tailport=s, headport=n, color=gray]
BB6881 [shape=record label="{19251: construct [-,v39,v40,v41,v42,v36]}" ] 
BB6881 -> BB6882 [tailport=s, headport=n, headlabel="      6882"]
BB6881 -> BB6916 [tailport=s, headport=n, color=gray]
BB6882 [shape=record label="{19252: write-property[v37,v38,v36]|19253: \<variable-non-null-undef\>['outerCache']*}" ] 
BB6882 -> BB6912 [tailport=s, headport=n]
BB6882 -> BB6916 [tailport=s, headport=n, color=gray]
BB6883 [shape=record label="{19254: read-variable['elem',v20,-]|19255: read-variable['expando',v21,-]|19256: read-property[v20,v21,v19]|19257: \<variable-non-null-undef\>['elem']|19258: if[v19](true-block:6885,false-block:6884)}" ] 
BB6883 -> BB6885 [tailport=s, headport=n, headlabel="      6885"]
BB6883 -> BB6884 [tailport=s, headport=n, headlabel="      6884"]
BB6883 -> BB6916 [tailport=s, headport=n, color=gray]
BB6884 [shape=record label="{19259: read-variable['elem',v20,-]|19260: read-variable['expando',v21,-]|19261: new[v19]|19262: write-property[v20,v21,v19]|19263: \<variable-non-null-undef\>['elem']}" ] 
BB6884 -> BB6885 [tailport=s, headport=n]
BB6884 -> BB6916 [tailport=s, headport=n, color=gray]
BB6885 [shape=record label="{19264: read-variable['type',v20,-]|19265: read-property[v19,v20,v18]|19266: write-variable[v18,'cache']|19267: if[v18](true-block:6886,false-block:6887)}" ] 
BB6885 -> BB6887 [tailport=s, headport=n]
BB6885 -> BB6886 [tailport=s, headport=n, headlabel="      6886"]
BB6885 -> BB6916 [tailport=s, headport=n, color=gray]
BB6886 [shape=record label="{19268: read-variable['cache',v23,-]|19269: constant[0.0,v24]|19270: read-property[v23,v24,v21]|19271: \<variable-non-null-undef\>['cache']|19272: read-variable['dirruns',v22,-]|19273: ===[v21,v22,v18]}" ] 
BB6886 -> BB6887 [tailport=s, headport=n]
BB6886 -> BB6916 [tailport=s, headport=n, color=gray]
BB6887 [shape=record label="{19274: if[v18](true-block:6888,false-block:6889)}" ] 
BB6887 -> BB6888 [tailport=s, headport=n, headlabel="      6888"]
BB6887 -> BB6889 [tailport=s, headport=n, headlabel="      6889"]
BB6888 [shape=record label="{19275: read-variable['cache',v20,-]|19276: constant[1.0,v21]|19277: read-property[v20,v21,v19]|19278: \<variable-non-null-undef\>['cache']|19279: write-variable[v19,'diff']*}" ] 
BB6888 -> BB6912 [tailport=s, headport=n]
BB6888 -> BB6916 [tailport=s, headport=n, color=gray]
BB6889 [shape=record label="{19280: constant[1.0,v20]|19281: read-variable['nodeIndex',v21,-]|19282: +[v21,v22]|19283: +[v22,v20,v19]|19284: write-variable[v19,'nodeIndex']|19285: if[v19](true-block:6890,false-block:6892)}" ] 
BB6889 -> BB6892 [tailport=s, headport=n, headlabel="      6892"]
BB6889 -> BB6890 [tailport=s, headport=n, headlabel="      6890"]
BB6889 -> BB6916 [tailport=s, headport=n, color=gray]
BB6890 [shape=record label="{19286: read-variable['node',v19,-]|19287: if[v19](true-block:6891,false-block:6892)}" ] 
BB6890 -> BB6892 [tailport=s, headport=n]
BB6890 -> BB6891 [tailport=s, headport=n, headlabel="      6891"]
BB6890 -> BB6916 [tailport=s, headport=n, color=gray]
BB6891 [shape=record label="{19288: read-variable['node',v23,-]|19289: read-variable['dir',v24,-]|19290: read-property[v23,v24,v19]|19291: \<variable-non-null-undef\>['node']}" ] 
BB6891 -> BB6892 [tailport=s, headport=n]
BB6891 -> BB6916 [tailport=s, headport=n, color=gray]
BB6892 [shape=record label="{19292: if[v19](true-block:6896,false-block:6893)}" ] 
BB6892 -> BB6896 [tailport=s, headport=n, headlabel="      6896"]
BB6892 -> BB6893 [tailport=s, headport=n, headlabel="      6893"]
BB6893 [shape=record label="{19293: constant[0.0,v19]|19294: write-variable[v19,'nodeIndex']|19295: write-variable[v19,'diff']|19296: if[v19](true-block:6896,false-block:6894)}" ] 
BB6893 -> BB6896 [tailport=s, headport=n]
BB6893 -> BB6894 [tailport=s, headport=n, headlabel="      6894"]
BB6894 [shape=record label="{19297: read-variable['start',v21,-]|19298: read-property[v21,'pop',-]|19299: \<variable-non-null-undef\>['start']}" ] 
BB6894 -> BB6895 [tailport=s, headport=n, headlabel="      6895"]
BB6894 -> BB6916 [tailport=s, headport=n, color=gray]
BB6895 [shape=record label="{19300: call-start.pop [v21,'pop',v19]}" ] 
BB6895 -> BB6896 [tailport=s, headport=n]
BB6895 -> BB6916 [tailport=s, headport=n, color=gray]
BB6896 [shape=record label="{19301: write-variable[v19,'node']|19302: if[v19](true-block:6897,false-block:6912)}" ] 
BB6896 -> BB6897 [tailport=s, headport=n, headlabel="      6897"]
BB6896 -> BB6912 [tailport=s, headport=n]
BB6897 [shape=record label="{19303: read-variable['ofType',v21,-]|19304: if[v21](true-block:6898,false-block:6899)}" ] 
BB6897 -> BB6898 [tailport=s, headport=n, headlabel="      6898"]
BB6897 -> BB6899 [tailport=s, headport=n, headlabel="      6899"]
BB6897 -> BB6916 [tailport=s, headport=n, color=gray]
BB6898 [shape=record label="{19305: read-variable['node',v26,-]|19306: read-property[v26,'nodeName',v25]|19307: \<variable-non-null-undef\>['node']|19308: read-property[v25,'toLowerCase',-]|19309: \<property-non-null-undef\>[v26,'nodeName']}" ] 
BB6898 -> BB6900 [tailport=s, headport=n, headlabel="      6900"]
BB6898 -> BB6916 [tailport=s, headport=n, color=gray]
BB6899 [shape=record label="{19310: read-variable['node',v24,-]|19311: read-property[v24,'nodeType',v22]|19312: \<variable-non-null-undef\>['node']|19313: constant[1.0,v23]|19314: ===[v22,v23,v20]}" ] 
BB6899 -> BB6902 [tailport=s, headport=n, headlabel="      6902"]
BB6899 -> BB6916 [tailport=s, headport=n, color=gray]
BB6900 [shape=record label="{19315: call-node.nodeName.toLowerCase [v25,'toLowerCase',v22]}" ] 
BB6900 -> BB6901 [tailport=s, headport=n, headlabel="      6901"]
BB6900 -> BB6916 [tailport=s, headport=n, color=gray]
BB6901 [shape=record label="{19316: read-variable['name',v23,-]|19317: ===[v22,v23,v20]}" ] 
BB6901 -> BB6902 [tailport=s, headport=n]
BB6901 -> BB6916 [tailport=s, headport=n, color=gray]
BB6902 [shape=record label="{19318: if[v20](true-block:6903,false-block:6904)}" ] 
BB6902 -> BB6904 [tailport=s, headport=n, headlabel="      6904"]
BB6902 -> BB6903 [tailport=s, headport=n, headlabel="      6903"]
BB6903 [shape=record label="{19319: constant[1.0,v22]|19320: read-variable['diff',v23,-]|19321: +[v23,v24]|19322: +[v24,v22,v20]|19323: write-variable[v20,'diff']}" ] 
BB6903 -> BB6904 [tailport=s, headport=n]
BB6903 -> BB6916 [tailport=s, headport=n, color=gray]
BB6904 [shape=record label="{19324: if[v20](true-block:6905,false-block:6889)}" ] 
BB6904 -> BB6905 [tailport=s, headport=n, headlabel="      6905"]
BB6904 -> BB6889 [tailport=s, headport=n]
BB6905 [shape=record label="{19325: read-variable['useCache',v22,-]|19326: if[v22](true-block:6906,false-block:6911)}" ] 
BB6905 -> BB6906 [tailport=s, headport=n, headlabel="      6906"]
BB6905 -> BB6911 [tailport=s, headport=n, headlabel="      6911"]
BB6905 -> BB6916 [tailport=s, headport=n, color=gray]
BB6906 [shape=record label="{19327: read-variable['node',v26,-]|19328: read-variable['expando',v27,-]|19329: read-property[v26,v27,v24]|19330: \<variable-non-null-undef\>['node']|19331: if[v24](true-block:6908,false-block:6907)}" ] 
BB6906 -> BB6908 [tailport=s, headport=n, headlabel="      6908"]
BB6906 -> BB6907 [tailport=s, headport=n, headlabel="      6907"]
BB6906 -> BB6916 [tailport=s, headport=n, color=gray]
BB6907 [shape=record label="{19332: read-variable['node',v26,-]|19333: read-variable['expando',v27,-]|19334: new[v24]|19335: write-property[v26,v27,v24]|19336: \<variable-non-null-undef\>['node']}" ] 
BB6907 -> BB6908 [tailport=s, headport=n]
BB6907 -> BB6916 [tailport=s, headport=n, color=gray]
BB6908 [shape=record label="{19337: read-variable['type',v25,-]|19338: read-variable['Array',v26,-]|19339: read-variable['dirruns',v27,-]|19340: read-variable['diff',v28,-]}" ] 
BB6908 -> BB6909 [tailport=s, headport=n, headlabel="      6909"]
BB6908 -> BB6916 [tailport=s, headport=n, color=gray]
BB6909 [shape=record label="{19341: construct [-,v26,v27,v28,v23]}" ] 
BB6909 -> BB6910 [tailport=s, headport=n, headlabel="      6910"]
BB6909 -> BB6916 [tailport=s, headport=n, color=gray]
BB6910 [shape=record label="{19342: write-property[v24,v25,v23]*}" ] 
BB6910 -> BB6911 [tailport=s, headport=n]
BB6910 -> BB6916 [tailport=s, headport=n, color=gray]
BB6911 [shape=record label="{19343: read-variable['node',v24,-]|19344: read-variable['elem',v25,-]|19345: ===[v24,v25,v23]|19346: if[v23](true-block:6912,false-block:6889)}" ] 
BB6911 -> BB6912 [tailport=s, headport=n]
BB6911 -> BB6889 [tailport=s, headport=n]
BB6911 -> BB6916 [tailport=s, headport=n, color=gray]
BB6912 [shape=record label="{19347: read-variable['diff',v19,-]|19348: read-variable['last',v20,-]|19349: -[v19,v20,v18]|19350: write-variable[v18,'diff']*|19351: read-variable['diff',v21,-]|19352: read-variable['first',v22,-]|19353: ===[v21,v22,v1]|19354: if[v1](true-block:6915,false-block:6913)}" ] 
BB6912 -> BB6915 [tailport=s, headport=n]
BB6912 -> BB6913 [tailport=s, headport=n, headlabel="      6913"]
BB6912 -> BB6916 [tailport=s, headport=n, color=gray]
BB6913 [shape=record label="{19355: read-variable['diff',v23,-]|19356: read-variable['first',v24,-]|19357: %[v23,v24,v21]|19358: constant[0.0,v22]|19359: ===[v21,v22,v1]|19360: if[v1](true-block:6914,false-block:6915)}" ] 
BB6913 -> BB6915 [tailport=s, headport=n]
BB6913 -> BB6914 [tailport=s, headport=n, headlabel="      6914"]
BB6913 -> BB6916 [tailport=s, headport=n, color=gray]
BB6914 [shape=record label="{19361: read-variable['diff',v27,-]|19362: read-variable['first',v28,-]|19363: /[v27,v28,v25]|19364: constant[0.0,v26]|19365: \>=[v25,v26,v1]}" ] 
BB6914 -> BB6915 [tailport=s, headport=n]
BB6914 -> BB6916 [tailport=s, headport=n, color=gray]
BB6915 [shape=record label="{19366: return[v1]}" ] 
BB6916 [shape=record label="{19367: exceptional-return}" ] 
//#$~ 5483
}
