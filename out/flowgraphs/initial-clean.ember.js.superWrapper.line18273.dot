digraph {
rankdir="TD"
BB_entry868[shape=none,label=""];
BB_entry868 -> BB10125 [tailport=s, headport=n, headlabel="    10125"]
BB10125 [shape=record label="{34630: constant[undefined,v1]|34631: vardecl['ret']|34632: vardecl['sup']|34633: vardecl['length']|34634: vardecl['args']|34635: vardecl['i']}" ] 
BB10125 -> BB10126 [tailport=s, headport=n, headlabel="      10126"]
BB10126 [shape=record label="{34636: read-variable['this',v2,-]|34637: if[v2](true-block:10127,false-block:10128)}" ] 
BB10126 -> BB10128 [tailport=s, headport=n, headlabel="      10128"]
BB10126 -> BB10127 [tailport=s, headport=n, headlabel="      10127"]
BB10126 -> BB10154 [tailport=s, headport=n, color=gray, headlabel="      10154"]
BB10127 [shape=record label="{34638: read-variable['this',v3,-]|34639: read-property[v3,'__nextSuper',v2]}" ] 
BB10127 -> BB10128 [tailport=s, headport=n]
BB10127 -> BB10154 [tailport=s, headport=n, color=gray]
BB10128 [shape=record label="{34640: write-variable[v2,'sup']*|34641: read-variable['arguments',v4,-]|34642: read-property[v4,'length',v3]|34643: \<variable-non-null-undef\>['arguments']|34644: write-variable[v3,'length']*|34645: read-variable['this',v5,-]|34646: if[v5](true-block:10129,false-block:10130)}" ] 
BB10128 -> BB10129 [tailport=s, headport=n, headlabel="      10129"]
BB10128 -> BB10130 [tailport=s, headport=n, headlabel="      10130"]
BB10128 -> BB10154 [tailport=s, headport=n, color=gray]
BB10129 [shape=record label="{34647: read-variable['this',v7,-]|34648: read-variable['superFunc',v6,-]|34649: write-property[v7,'__nextSuper',v6]*}" ] 
BB10129 -> BB10130 [tailport=s, headport=n]
BB10129 -> BB10154 [tailport=s, headport=n, color=gray]
BB10130 [shape=record label="{34650: read-variable['length',v7,-]|34651: constant[0.0,v8]|34652: ===[v7,v8,v6]|34653: if[v6](true-block:10131,false-block:10132)}" ] 
BB10130 -> BB10131 [tailport=s, headport=n, headlabel="      10131"]
BB10130 -> BB10132 [tailport=s, headport=n, headlabel="      10132"]
BB10130 -> BB10154 [tailport=s, headport=n, color=gray]
BB10131 [shape=record label="{34654: read-variable['func',v11,-]|34655: read-property[v11,'call',-]|34656: \<variable-non-null-undef\>['func']|34657: read-variable['this',v12,-]}" ] 
BB10131 -> BB10133 [tailport=s, headport=n, headlabel="      10133"]
BB10131 -> BB10154 [tailport=s, headport=n, color=gray]
BB10132 [shape=record label="{34658: read-variable['length',v10,-]|34659: constant[1.0,v11]|34660: ===[v10,v11,v9]|34661: if[v9](true-block:10135,false-block:10136)}" ] 
BB10132 -> BB10135 [tailport=s, headport=n, headlabel="      10135"]
BB10132 -> BB10136 [tailport=s, headport=n, headlabel="      10136"]
BB10132 -> BB10154 [tailport=s, headport=n, color=gray]
BB10133 [shape=record label="{34662: call-func.call [v11,'call',v12,v9]}" ] 
BB10133 -> BB10134 [tailport=s, headport=n, headlabel="      10134"]
BB10133 -> BB10154 [tailport=s, headport=n, color=gray]
BB10134 [shape=record label="{34663: write-variable[v9,'ret']*}" ] 
BB10134 -> BB10150 [tailport=s, headport=n, headlabel="      10150"]
BB10135 [shape=record label="{34664: read-variable['func',v14,-]|34665: read-property[v14,'call',-]|34666: \<variable-non-null-undef\>['func']|34667: read-variable['this',v15,-]|34668: read-variable['arguments',v17,-]|34669: constant[0.0,v18]|34670: read-property[v17,v18,v16]|34671: \<variable-non-null-undef\>['arguments']}" ] 
BB10135 -> BB10137 [tailport=s, headport=n, headlabel="      10137"]
BB10135 -> BB10154 [tailport=s, headport=n, color=gray]
BB10136 [shape=record label="{34672: read-variable['length',v13,-]|34673: constant[2.0,v14]|34674: ===[v13,v14,v12]|34675: if[v12](true-block:10139,false-block:10140)}" ] 
BB10136 -> BB10139 [tailport=s, headport=n, headlabel="      10139"]
BB10136 -> BB10140 [tailport=s, headport=n, headlabel="      10140"]
BB10136 -> BB10154 [tailport=s, headport=n, color=gray]
BB10137 [shape=record label="{34676: call-func.call [v14,'call',v15,v16,v12]}" ] 
BB10137 -> BB10138 [tailport=s, headport=n, headlabel="      10138"]
BB10137 -> BB10154 [tailport=s, headport=n, color=gray]
BB10138 [shape=record label="{34677: write-variable[v12,'ret']*}" ] 
BB10138 -> BB10150 [tailport=s, headport=n]
BB10139 [shape=record label="{34678: read-variable['func',v17,-]|34679: read-property[v17,'call',-]|34680: \<variable-non-null-undef\>['func']|34681: read-variable['this',v18,-]|34682: read-variable['arguments',v20,-]|34683: constant[0.0,v21]|34684: read-property[v20,v21,v19]|34685: \<variable-non-null-undef\>['arguments']|34686: read-variable['arguments',v23,-]|34687: constant[1.0,v24]|34688: read-property[v23,v24,v22]|34689: \<variable-non-null-undef\>['arguments']}" ] 
BB10139 -> BB10141 [tailport=s, headport=n, headlabel="      10141"]
BB10139 -> BB10154 [tailport=s, headport=n, color=gray]
BB10140 [shape=record label="{34690: read-variable['Array',v16,-]|34691: read-variable['length',v17,-]}" ] 
BB10140 -> BB10143 [tailport=s, headport=n, headlabel="      10143"]
BB10140 -> BB10154 [tailport=s, headport=n, color=gray]
BB10141 [shape=record label="{34692: call-func.call [v17,'call',v18,v19,v22,v15]}" ] 
BB10141 -> BB10142 [tailport=s, headport=n, headlabel="      10142"]
BB10141 -> BB10154 [tailport=s, headport=n, color=gray]
BB10142 [shape=record label="{34693: write-variable[v15,'ret']*}" ] 
BB10142 -> BB10150 [tailport=s, headport=n]
BB10143 [shape=record label="{34694: construct [-,v16,v17,v15]}" ] 
BB10143 -> BB10144 [tailport=s, headport=n, headlabel="      10144"]
BB10143 -> BB10154 [tailport=s, headport=n, color=gray]
BB10144 [shape=record label="{34695: write-variable[v15,'args']*|34696: constant[0.0,v19]|34697: write-variable[v19,'i']*}" ] 
BB10144 -> BB10145 [tailport=s, headport=n, headlabel="      10145"]
BB10145 [shape=record label="{34698: read-variable['i',v20,-]|34699: read-variable['length',v21,-]|34700: \<[v20,v21,v18]|34701: if[v18](true-block:10146,false-block:10147)}" ] 
BB10145 -> BB10146 [tailport=s, headport=n, headlabel="      10146"]
BB10145 -> BB10147 [tailport=s, headport=n, headlabel="      10147"]
BB10145 -> BB10154 [tailport=s, headport=n, color=gray]
BB10146 [shape=record label="{34702: read-variable['args',v23,-]|34703: read-variable['i',v24,-]|34704: read-variable['arguments',v25,-]|34705: read-variable['i',v26,-]|34706: read-property[v25,v26,v22]|34707: \<variable-non-null-undef\>['arguments']|34708: write-property[v23,v24,v22]|34709: \<variable-non-null-undef\>['args']*|34710: constant[1.0,v27]|34711: read-variable['i',v28,-]|34712: +[v28,v29]|34713: +[v29,v27,v30]|34714: write-variable[v30,'i']}" ] 
BB10146 -> BB10145 [tailport=s, headport=n]
BB10146 -> BB10154 [tailport=s, headport=n, color=gray]
BB10147 [shape=record label="{34715: read-variable['apply',v24,v23]|34716: read-variable['this',v25,-]|34717: read-variable['func',v26,-]|34718: read-variable['args',v27,-]}" ] 
BB10147 -> BB10148 [tailport=s, headport=n, headlabel="      10148"]
BB10147 -> BB10154 [tailport=s, headport=n, color=gray]
BB10148 [shape=record label="{34719: call-apply [v23,v24,v25,v26,v27,v22]}" ] 
BB10148 -> BB10149 [tailport=s, headport=n, headlabel="      10149"]
BB10148 -> BB10154 [tailport=s, headport=n, color=gray]
BB10149 [shape=record label="{34720: write-variable[v22,'ret']*}" ] 
BB10149 -> BB10150 [tailport=s, headport=n]
BB10150 [shape=record label="{34721: read-variable['this',v9,-]|34722: if[v9](true-block:10151,false-block:10152)}" ] 
BB10150 -> BB10151 [tailport=s, headport=n, headlabel="      10151"]
BB10150 -> BB10152 [tailport=s, headport=n, headlabel="      10152"]
BB10150 -> BB10154 [tailport=s, headport=n, color=gray]
BB10151 [shape=record label="{34723: read-variable['this',v11,-]|34724: read-variable['sup',v10,-]|34725: write-property[v11,'__nextSuper',v10]*}" ] 
BB10151 -> BB10152 [tailport=s, headport=n]
BB10151 -> BB10154 [tailport=s, headport=n, color=gray]
BB10152 [shape=record label="{34726: read-variable['ret',v1,-]}" ] 
BB10152 -> BB10153 [tailport=s, headport=n, headlabel="      10153"]
BB10152 -> BB10154 [tailport=s, headport=n, color=gray]
BB10153 [shape=record label="{34727: return[v1]}" ] 
BB10154 [shape=record label="{34728: exceptional-return}" ] 
//#$~ 18300
}
