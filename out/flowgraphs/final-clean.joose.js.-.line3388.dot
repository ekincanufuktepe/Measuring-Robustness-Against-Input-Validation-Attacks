digraph {
rankdir="TD"
BB_entry319[shape=none,label=""];
BB_entry319 -> BB2934 [tailport=s, headport=n, headlabel="    2934"]
BB2934 [shape=record label="{8731: constant[undefined,v1]|8732: vardecl['self']|8733: vardecl['props']|8734: vardecl['eq']}" ] 
BB2934 -> BB2935 [tailport=s, headport=n, headlabel="      2935"]
BB2935 [shape=record label="{8735: read-variable['this',v2,-]|8736: write-variable[v2,'self']*|8737: read-variable['self',v5,-]|8738: read-property[v5,'getProps',-]|8739: \<variable-non-null-undef\>['self']}" ] 
BB2935 -> BB2936 [tailport=s, headport=n, headlabel="      2936"]
BB2935 -> BB2948 [tailport=s, headport=n, color=gray, headlabel="      2948"]
BB2936 [shape=record label="{8740: call-self.getProps [v5,'getProps',v3]}" ] 
BB2936 -> BB2937 [tailport=s, headport=n, headlabel="      2937"]
BB2936 -> BB2948 [tailport=s, headport=n, color=gray]
BB2937 [shape=record label="{8741: write-variable[v3,'props']*|8742: read-variable['props',v7,-]|8743: ![v7,v6]|8744: if[v6](true-block:2940,false-block:2938)}" ] 
BB2937 -> BB2940 [tailport=s, headport=n, headlabel="      2940"]
BB2937 -> BB2938 [tailport=s, headport=n, headlabel="      2938"]
BB2937 -> BB2948 [tailport=s, headport=n, color=gray]
BB2938 [shape=record label="{8745: read-variable['props',v9,-]|8746: read-property[v9,'values',v7]|8747: \<variable-non-null-undef\>['props']|8748: read-variable['undefined',v8,-]|8749: ===[v7,v8,v6]|8750: if[v6](true-block:2940,false-block:2939)}" ] 
BB2938 -> BB2940 [tailport=s, headport=n]
BB2938 -> BB2939 [tailport=s, headport=n, headlabel="      2939"]
BB2938 -> BB2948 [tailport=s, headport=n, color=gray]
BB2939 [shape=record label="{8751: read-variable['props',v10,-]|8752: read-property[v10,'values',v8]|8753: \<variable-non-null-undef\>['props']|8754: read-variable['Array',v9,-]|8755: instanceof[v8,v9,v7]|8756: ![v7,v6]}" ] 
BB2939 -> BB2940 [tailport=s, headport=n]
BB2939 -> BB2948 [tailport=s, headport=n, color=gray]
BB2940 [shape=record label="{8757: if[v6](true-block:2941,false-block:2942)}" ] 
BB2940 -> BB2941 [tailport=s, headport=n, headlabel="      2941"]
BB2940 -> BB2942 [tailport=s, headport=n, headlabel="      2942"]
BB2941 [shape=record label="{8758: constant[\"Enum Type needs Array of values in 'values' property of Type declaration\",v7]|8759: throw[v7]*}" ] 
BB2941 -> BB2942 [tailport=s, headport=n]
BB2941 -> BB2948 [tailport=s, headport=n, color=gray]
BB2942 [shape=record label="{8760: function-expr[function ( vv ),v7]|8761: write-variable[v7,'eq']*|8762: read-variable['Joose',v14,-]|8763: read-property[v14,'A',v13]|8764: \<variable-non-null-undef\>['Joose']|8765: read-property[v13,'grep',-]|8766: \<property-non-null-undef\>[v14,'A']|8767: read-variable['props',v16,-]|8768: read-property[v16,'values',v15]|8769: \<variable-non-null-undef\>['props']|8770: read-variable['eq',v17,-]}" ] 
BB2942 -> BB2943 [tailport=s, headport=n, headlabel="      2943"]
BB2942 -> BB2948 [tailport=s, headport=n, color=gray]
BB2943 [shape=record label="{8771: call-Joose.A.grep [v13,'grep',v15,v17,v11]}" ] 
BB2943 -> BB2944 [tailport=s, headport=n, headlabel="      2944"]
BB2943 -> BB2948 [tailport=s, headport=n, color=gray]
BB2944 [shape=record label="{8772: read-property[v11,'length',v9]|8773: constant[0.0,v10]|8774: !=[v9,v10,v8]|8775: if[v8](true-block:2945,false-block:2946)}" ] 
BB2944 -> BB2945 [tailport=s, headport=n, headlabel="      2945"]
BB2944 -> BB2946 [tailport=s, headport=n, headlabel="      2946"]
BB2944 -> BB2948 [tailport=s, headport=n, color=gray]
BB2945 [shape=record label="{8776: constant[true,v1]}" ] 
BB2945 -> BB2947 [tailport=s, headport=n, headlabel="      2947"]
BB2946 [shape=record label="{8777: constant[false,v1]}" ] 
BB2946 -> BB2947 [tailport=s, headport=n]
BB2947 [shape=record label="{8778: return[v1]}" ] 
BB2948 [shape=record label="{8779: exceptional-return}" ] 
//#$~ 3401
}
