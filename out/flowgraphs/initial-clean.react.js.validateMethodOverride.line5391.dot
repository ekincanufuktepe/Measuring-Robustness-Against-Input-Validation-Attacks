digraph {
rankdir="TD"
BB_entry201[shape=none,label=""];
BB_entry201 -> BB2689 [tailport=s, headport=n, headlabel="    2689"]
BB2689 [shape=record label="{9428: constant[undefined,v1]|9429: vardecl['specPolicy']}" ] 
BB2689 -> BB2690 [tailport=s, headport=n, headlabel="      2690"]
BB2690 [shape=record label="{9430: read-variable['ReactClassInterface',v5,-]|9431: read-property[v5,'hasOwnProperty',-]|9432: \<variable-non-null-undef\>['ReactClassInterface']|9433: read-variable['name',v6,-]}" ] 
BB2690 -> BB2691 [tailport=s, headport=n, headlabel="      2691"]
BB2690 -> BB2715 [tailport=s, headport=n, color=gray, headlabel="      2715"]
BB2691 [shape=record label="{9434: call-ReactClassInterface.hasOwnProperty [v5,'hasOwnProperty',v6,v3]}" ] 
BB2691 -> BB2692 [tailport=s, headport=n, headlabel="      2692"]
BB2691 -> BB2715 [tailport=s, headport=n, color=gray]
BB2692 [shape=record label="{9435: if[v3](true-block:2693,false-block:2694)}" ] 
BB2692 -> BB2693 [tailport=s, headport=n, headlabel="      2693"]
BB2692 -> BB2694 [tailport=s, headport=n, headlabel="      2694"]
BB2693 [shape=record label="{9436: read-variable['ReactClassInterface',v7,-]|9437: read-variable['name',v8,-]|9438: read-property[v7,v8,v2]|9439: \<variable-non-null-undef\>['ReactClassInterface']}" ] 
BB2693 -> BB2695 [tailport=s, headport=n, headlabel="      2695"]
BB2693 -> BB2715 [tailport=s, headport=n, color=gray]
BB2694 [shape=record label="{9440: constant[null,v2]}" ] 
BB2694 -> BB2695 [tailport=s, headport=n]
BB2695 [shape=record label="{9441: write-variable[v2,'specPolicy']*|9442: read-variable['ReactClassMixin',v9,-]|9443: read-property[v9,'hasOwnProperty',-]|9444: \<variable-non-null-undef\>['ReactClassMixin']|9445: read-variable['name',v10,-]}" ] 
BB2695 -> BB2696 [tailport=s, headport=n, headlabel="      2696"]
BB2695 -> BB2715 [tailport=s, headport=n, color=gray]
BB2696 [shape=record label="{9446: call-ReactClassMixin.hasOwnProperty [v9,'hasOwnProperty',v10,v7]}" ] 
BB2696 -> BB2697 [tailport=s, headport=n, headlabel="      2697"]
BB2696 -> BB2715 [tailport=s, headport=n, color=gray]
BB2697 [shape=record label="{9447: if[v7](true-block:2698,false-block:2703)}" ] 
BB2697 -> BB2698 [tailport=s, headport=n, headlabel="      2698"]
BB2697 -> BB2703 [tailport=s, headport=n, headlabel="      2703"]
BB2698 [shape=record label="{9448: constant[\"production\",v12]|9449: constant[\"development\",v13]|9450: !==[v12,v13,v11]|9451: if[v11](true-block:2699,false-block:2700)}" ] 
BB2698 -> BB2699 [tailport=s, headport=n, headlabel="      2699"]
BB2698 -> BB2700 [tailport=s, headport=n, headlabel="      2700"]
BB2698 -> BB2715 [tailport=s, headport=n, color=gray]
BB2699 [shape=record label="{9452: read-variable['invariant',v15,v14]|9453: read-variable['specPolicy',v17,-]|9454: read-variable['SpecPolicy',v19,-]|9455: read-property[v19,'OVERRIDE_BASE',v18]|9456: \<variable-non-null-undef\>['SpecPolicy']|9457: ===[v17,v18,v16]|9458: constant[\"ReactClassInterface: You are attempting to override \",v23]|9459: constant[\"`%s` from your class specification. Ensure that your method names \",v24]|9460: +[v23,v24,v21]|9461: constant[\"do not overlap with React methods.\",v22]|9462: +[v21,v22,v20]|9463: read-variable['name',v25,-]}" ] 
BB2699 -> BB2701 [tailport=s, headport=n, headlabel="      2701"]
BB2699 -> BB2715 [tailport=s, headport=n, color=gray]
BB2700 [shape=record label="{9464: read-variable['invariant',v15,v14]|9465: read-variable['specPolicy',v17,-]|9466: read-variable['SpecPolicy',v19,-]|9467: read-property[v19,'OVERRIDE_BASE',v18]|9468: \<variable-non-null-undef\>['SpecPolicy']|9469: ===[v17,v18,v16]}" ] 
BB2700 -> BB2702 [tailport=s, headport=n, headlabel="      2702"]
BB2700 -> BB2715 [tailport=s, headport=n, color=gray]
BB2701 [shape=record label="{9470: call-invariant [v14,v15,v16,v20,v25,-]}" ] 
BB2701 -> BB2703 [tailport=s, headport=n]
BB2701 -> BB2715 [tailport=s, headport=n, color=gray]
BB2702 [shape=record label="{9471: call-invariant [v14,v15,v16,-]}" ] 
BB2702 -> BB2703 [tailport=s, headport=n]
BB2702 -> BB2715 [tailport=s, headport=n, color=gray]
BB2703 [shape=record label="{9472: read-variable['proto',v13,-]|9473: read-property[v13,'hasOwnProperty',-]|9474: \<variable-non-null-undef\>['proto']|9475: read-variable['name',v14,-]}" ] 
BB2703 -> BB2704 [tailport=s, headport=n, headlabel="      2704"]
BB2703 -> BB2715 [tailport=s, headport=n, color=gray]
BB2704 [shape=record label="{9476: call-proto.hasOwnProperty [v13,'hasOwnProperty',v14,v11]}" ] 
BB2704 -> BB2705 [tailport=s, headport=n, headlabel="      2705"]
BB2704 -> BB2715 [tailport=s, headport=n, color=gray]
BB2705 [shape=record label="{9477: if[v11](true-block:2706,false-block:2714)}" ] 
BB2705 -> BB2706 [tailport=s, headport=n, headlabel="      2706"]
BB2705 -> BB2714 [tailport=s, headport=n, headlabel="      2714"]
BB2706 [shape=record label="{9478: constant[\"production\",v16]|9479: constant[\"development\",v17]|9480: !==[v16,v17,v15]|9481: if[v15](true-block:2707,false-block:2708)}" ] 
BB2706 -> BB2707 [tailport=s, headport=n, headlabel="      2707"]
BB2706 -> BB2708 [tailport=s, headport=n, headlabel="      2708"]
BB2706 -> BB2715 [tailport=s, headport=n, color=gray]
BB2707 [shape=record label="{9482: read-variable['invariant',v19,v18]|9483: read-variable['specPolicy',v21,-]|9484: read-variable['SpecPolicy',v23,-]|9485: read-property[v23,'DEFINE_MANY',v22]|9486: \<variable-non-null-undef\>['SpecPolicy']|9487: ===[v21,v22,v20]|9488: if[v20](true-block:2710,false-block:2709)}" ] 
BB2707 -> BB2710 [tailport=s, headport=n, headlabel="      2710"]
BB2707 -> BB2709 [tailport=s, headport=n, headlabel="      2709"]
BB2707 -> BB2715 [tailport=s, headport=n, color=gray]
BB2708 [shape=record label="{9489: read-variable['invariant',v19,v18]|9490: read-variable['specPolicy',v21,-]|9491: read-variable['SpecPolicy',v23,-]|9492: read-property[v23,'DEFINE_MANY',v22]|9493: \<variable-non-null-undef\>['SpecPolicy']|9494: ===[v21,v22,v20]|9495: if[v20](true-block:2713,false-block:2712)}" ] 
BB2708 -> BB2713 [tailport=s, headport=n, headlabel="      2713"]
BB2708 -> BB2712 [tailport=s, headport=n, headlabel="      2712"]
BB2708 -> BB2715 [tailport=s, headport=n, color=gray]
BB2709 [shape=record label="{9496: read-variable['specPolicy',v21,-]|9497: read-variable['SpecPolicy',v23,-]|9498: read-property[v23,'DEFINE_MANY_MERGED',v22]|9499: \<variable-non-null-undef\>['SpecPolicy']|9500: ===[v21,v22,v20]}" ] 
BB2709 -> BB2710 [tailport=s, headport=n]
BB2709 -> BB2715 [tailport=s, headport=n, color=gray]
BB2710 [shape=record label="{9501: constant[\"ReactClassInterface: You are attempting to define \",v24]|9502: constant[\"`%s` on your component more than once. This conflict may be due \",v25]|9503: +[v24,v25,v22]|9504: constant[\"to a mixin.\",v23]|9505: +[v22,v23,v21]|9506: read-variable['name',v26,-]}" ] 
BB2710 -> BB2711 [tailport=s, headport=n, headlabel="      2711"]
BB2710 -> BB2715 [tailport=s, headport=n, color=gray]
BB2711 [shape=record label="{9507: call-invariant [v18,v19,v20,v21,v26,-]}" ] 
BB2711 -> BB2714 [tailport=s, headport=n]
BB2711 -> BB2715 [tailport=s, headport=n, color=gray]
BB2712 [shape=record label="{9508: read-variable['specPolicy',v21,-]|9509: read-variable['SpecPolicy',v23,-]|9510: read-property[v23,'DEFINE_MANY_MERGED',v22]|9511: \<variable-non-null-undef\>['SpecPolicy']|9512: ===[v21,v22,v20]}" ] 
BB2712 -> BB2713 [tailport=s, headport=n]
BB2712 -> BB2715 [tailport=s, headport=n, color=gray]
BB2713 [shape=record label="{9513: call-invariant [v18,v19,v20,-]}" ] 
BB2713 -> BB2714 [tailport=s, headport=n]
BB2713 -> BB2715 [tailport=s, headport=n, color=gray]
BB2714 [shape=record label="{9514: return[v1]}" ] 
BB2715 [shape=record label="{9515: exceptional-return}" ] 
//#$~ 5417
}
