digraph {
rankdir="TD"
BB_entry13[shape=none,label=""];
BB_entry13 -> BB135 [tailport=s, headport=n, headlabel="    135"]
BB135 [shape=record label="{469: constant[undefined,v1]|470: vardecl['self']|471: vardecl['match']|472: vardecl['rest']|473: vardecl['range']|474: vardecl['code']}" ] 
BB135 -> BB136 [tailport=s, headport=n, headlabel="      136"]
BB136 [shape=record label="{475: read-variable['this',v2,-]|476: write-variable[v2,'self']*|477: read-variable['interpolate',v3,-]|478: if[v3](true-block:137,false-block:164)}" ] 
BB136 -> BB137 [tailport=s, headport=n, headlabel="      137"]
BB136 -> BB164 [tailport=s, headport=n, headlabel="      164"]
BB136 -> BB176 [tailport=s, headport=n, color=gray, headlabel="      176"]
BB137 [shape=record label="{479: read-variable['RegExp',v7,-]|480: constant[\"(\\\\\\\\)?([#!])\\\{((?:.|\\\\n)*)$\",v8]}" ] 
BB137 -> BB138 [tailport=s, headport=n, headlabel="      138"]
BB137 -> BB176 [tailport=s, headport=n, color=gray]
BB138 [shape=record label="{481: construct [-,v7,v8,v6]}" ] 
BB138 -> BB139 [tailport=s, headport=n, headlabel="      139"]
BB138 -> BB176 [tailport=s, headport=n, color=gray]
BB139 [shape=record label="{482: read-property[v6,'exec',-]|483: read-variable['str',v9,-]}" ] 
BB139 -> BB140 [tailport=s, headport=n, headlabel="      140"]
BB139 -> BB176 [tailport=s, headport=n, color=gray]
BB140 [shape=record label="{484: call-null [v6,'exec',v9,v4]}" ] 
BB140 -> BB141 [tailport=s, headport=n, headlabel="      141"]
BB140 -> BB176 [tailport=s, headport=n, color=gray]
BB141 [shape=record label="{485: write-variable[v4,'match']*|486: read-variable['match',v10,-]|487: if[v10](true-block:142,false-block:164)}" ] 
BB141 -> BB142 [tailport=s, headport=n, headlabel="      142"]
BB141 -> BB164 [tailport=s, headport=n]
BB141 -> BB176 [tailport=s, headport=n, color=gray]
BB142 [shape=record label="{488: read-variable['this',v12,-]|489: read-property[v12,'buffer',-]|490: read-variable['str',v15,-]|491: read-property[v15,'substr',-]|492: \<variable-non-null-undef\>['str']|493: constant[0.0,v16]|494: read-variable['match',v18,-]|495: read-property[v18,'index',v17]|496: \<variable-non-null-undef\>['match']}" ] 
BB142 -> BB143 [tailport=s, headport=n, headlabel="      143"]
BB142 -> BB176 [tailport=s, headport=n, color=gray]
BB143 [shape=record label="{497: call-str.substr [v15,'substr',v16,v17,v13]}" ] 
BB143 -> BB144 [tailport=s, headport=n, headlabel="      144"]
BB143 -> BB176 [tailport=s, headport=n, color=gray]
BB144 [shape=record label="{498: constant[false,v19]}" ] 
BB144 -> BB145 [tailport=s, headport=n, headlabel="      145"]
BB145 [shape=record label="{499: call-this.buffer [v12,'buffer',v13,v19,-]*}" ] 
BB145 -> BB146 [tailport=s, headport=n, headlabel="      146"]
BB145 -> BB176 [tailport=s, headport=n, color=gray]
BB146 [shape=record label="{500: read-variable['match',v21,-]|501: constant[1.0,v22]|502: read-property[v21,v22,v20]|503: \<variable-non-null-undef\>['match']|504: if[v20](true-block:147,false-block:148)}" ] 
BB146 -> BB147 [tailport=s, headport=n, headlabel="      147"]
BB146 -> BB148 [tailport=s, headport=n, headlabel="      148"]
BB146 -> BB176 [tailport=s, headport=n, color=gray]
BB147 [shape=record label="{505: read-variable['this',v24,-]|506: read-property[v24,'buffer',-]|507: read-variable['match',v28,-]|508: constant[2.0,v29]|509: read-property[v28,v29,v26]|510: \<variable-non-null-undef\>['match']|511: constant[\"\\\{\",v27]|512: +[v26,v27,v25]|513: constant[false,v30]}" ] 
BB147 -> BB149 [tailport=s, headport=n, headlabel="      149"]
BB147 -> BB176 [tailport=s, headport=n, color=gray]
BB148 [shape=record label="{514: read-variable['match',v24,-]|515: constant[3.0,v25]|516: read-property[v24,v25,v23]|517: \<variable-non-null-undef\>['match']|518: write-variable[v23,'rest']*|519: read-variable['parseJSExpression',v28,v27]|520: read-variable['rest',v29,-]}" ] 
BB148 -> BB153 [tailport=s, headport=n, headlabel="      153"]
BB148 -> BB176 [tailport=s, headport=n, color=gray]
BB149 [shape=record label="{521: call-this.buffer [v24,'buffer',v25,v30,-]*}" ] 
BB149 -> BB150 [tailport=s, headport=n, headlabel="      150"]
BB149 -> BB176 [tailport=s, headport=n, color=gray]
BB150 [shape=record label="{522: read-variable['this',v32,-]|523: read-property[v32,'buffer',-]|524: read-variable['match',v34,-]|525: constant[3.0,v35]|526: read-property[v34,v35,v33]|527: \<variable-non-null-undef\>['match']|528: constant[true,v36]}" ] 
BB150 -> BB151 [tailport=s, headport=n, headlabel="      151"]
BB150 -> BB176 [tailport=s, headport=n, color=gray]
BB151 [shape=record label="{529: call-this.buffer [v32,'buffer',v33,v36,-]*}" ] 
BB151 -> BB152 [tailport=s, headport=n, headlabel="      152"]
BB151 -> BB176 [tailport=s, headport=n, color=gray]
BB152 [shape=record label="{530: constant[undefined,v1]}" ] 
BB152 -> BB175 [tailport=s, headport=n, headlabel="      175"]
BB153 [shape=record label="{531: call-parseJSExpression [v27,v28,v29,v26]}" ] 
BB153 -> BB154 [tailport=s, headport=n, headlabel="      154"]
BB153 -> BB176 [tailport=s, headport=n, color=gray]
BB154 [shape=record label="{532: write-variable[v26,'range']*|533: constant[\"!\",v38]|534: read-variable['match',v40,-]|535: constant[2.0,v41]|536: read-property[v40,v41,v39]|537: \<variable-non-null-undef\>['match']|538: ==[v38,v39,v37]|539: if[v37](true-block:155,false-block:156)}" ] 
BB154 -> BB155 [tailport=s, headport=n, headlabel="      155"]
BB154 -> BB156 [tailport=s, headport=n, headlabel="      156"]
BB154 -> BB176 [tailport=s, headport=n, color=gray]
BB155 [shape=record label="{540: constant[\"\",v35]}" ] 
BB155 -> BB157 [tailport=s, headport=n, headlabel="      157"]
BB156 [shape=record label="{541: constant[\"jade.escape\",v35]}" ] 
BB156 -> BB157 [tailport=s, headport=n]
BB157 [shape=record label="{542: constant[\"((jade_interp = \",v36]|543: +[v35,v36,v33]|544: read-variable['range',v42,-]|545: read-property[v42,'src',v34]|546: \<variable-non-null-undef\>['range']|547: +[v33,v34,v31]|548: constant[\") == null ? '' : jade_interp)\",v32]|549: +[v31,v32,v30]|550: write-variable[v30,'code']*|551: read-variable['this',v44,-]|552: read-property[v44,'bufferExpression',-]|553: read-variable['code',v45,-]}" ] 
BB157 -> BB158 [tailport=s, headport=n, headlabel="      158"]
BB157 -> BB176 [tailport=s, headport=n, color=gray]
BB158 [shape=record label="{554: call-this.bufferExpression [v44,'bufferExpression',v45,-]*}" ] 
BB158 -> BB159 [tailport=s, headport=n, headlabel="      159"]
BB158 -> BB176 [tailport=s, headport=n, color=gray]
BB159 [shape=record label="{555: read-variable['this',v47,-]|556: read-property[v47,'buffer',-]|557: read-variable['rest',v50,-]|558: read-property[v50,'substr',-]|559: \<variable-non-null-undef\>['rest']|560: read-variable['range',v54,-]|561: read-property[v54,'end',v52]|562: \<variable-non-null-undef\>['range']|563: constant[1.0,v53]|564: +[v52,v53,v51]}" ] 
BB159 -> BB160 [tailport=s, headport=n, headlabel="      160"]
BB159 -> BB176 [tailport=s, headport=n, color=gray]
BB160 [shape=record label="{565: call-rest.substr [v50,'substr',v51,v48]}" ] 
BB160 -> BB161 [tailport=s, headport=n, headlabel="      161"]
BB160 -> BB176 [tailport=s, headport=n, color=gray]
BB161 [shape=record label="{566: constant[true,v55]}" ] 
BB161 -> BB162 [tailport=s, headport=n, headlabel="      162"]
BB162 [shape=record label="{567: call-this.buffer [v47,'buffer',v48,v55,-]*}" ] 
BB162 -> BB163 [tailport=s, headport=n, headlabel="      163"]
BB162 -> BB176 [tailport=s, headport=n, color=gray]
BB163 [shape=record label="{568: constant[undefined,v1]}" ] 
BB163 -> BB175 [tailport=s, headport=n]
BB164 [shape=record label="{569: read-variable['utils',v6,-]|570: read-property[v6,'stringify',-]|571: \<variable-non-null-undef\>['utils']|572: read-variable['str',v7,-]}" ] 
BB164 -> BB165 [tailport=s, headport=n, headlabel="      165"]
BB164 -> BB176 [tailport=s, headport=n, color=gray]
BB165 [shape=record label="{573: call-utils.stringify [v6,'stringify',v7,v4]}" ] 
BB165 -> BB166 [tailport=s, headport=n, headlabel="      166"]
BB165 -> BB176 [tailport=s, headport=n, color=gray]
BB166 [shape=record label="{574: write-variable[v4,'str']*|575: read-variable['str',v10,-]|576: read-property[v10,'substr',-]|577: \<variable-non-null-undef\>['str']|578: constant[1.0,v11]|579: read-variable['str',v15,-]|580: read-property[v15,'length',v13]|581: \<variable-non-null-undef\>['str']|582: constant[2.0,v14]|583: -[v13,v14,v12]}" ] 
BB166 -> BB167 [tailport=s, headport=n, headlabel="      167"]
BB166 -> BB176 [tailport=s, headport=n, color=gray]
BB167 [shape=record label="{584: call-str.substr [v10,'substr',v11,v12,v8]}" ] 
BB167 -> BB168 [tailport=s, headport=n, headlabel="      168"]
BB167 -> BB176 [tailport=s, headport=n, color=gray]
BB168 [shape=record label="{585: write-variable[v8,'str']*|586: read-variable['this',v19,-]|587: read-property[v19,'lastBufferedIdx',v17]|588: read-variable['this',v21,-]|589: read-property[v21,'buf',v20]|590: read-property[v20,'length',v18]|591: \<property-non-null-undef\>[v21,'buf']|592: ==[v17,v18,v16]|593: if[v16](true-block:169,false-block:170)}" ] 
BB168 -> BB169 [tailport=s, headport=n, headlabel="      169"]
BB168 -> BB170 [tailport=s, headport=n, headlabel="      170"]
BB168 -> BB176 [tailport=s, headport=n, color=gray]
BB169 [shape=record label="{594: read-variable['this',v25,-]|595: read-property[v25,'lastBufferedType',v23]|596: constant[\"code\",v24]|597: ===[v23,v24,v22]|598: if[v22](true-block:171,false-block:172)}" ] 
BB169 -> BB171 [tailport=s, headport=n, headlabel="      171"]
BB169 -> BB172 [tailport=s, headport=n, headlabel="      172"]
BB169 -> BB176 [tailport=s, headport=n, color=gray]
BB170 [shape=record label="{599: read-variable['this',v24,-]|600: read-property[v24,'buf',v23]|601: read-property[v23,'push',-]|602: \<property-non-null-undef\>[v24,'buf']|603: constant[\"buf.push(\\\"\",v28]|604: read-variable['str',v29,-]|605: +[v28,v29,v26]|606: constant[\"\\\");\",v27]|607: +[v26,v27,v25]}" ] 
BB170 -> BB173 [tailport=s, headport=n, headlabel="      173"]
BB170 -> BB176 [tailport=s, headport=n, color=gray]
BB171 [shape=record label="{608: read-variable['this',v28,-]|609: read-property[v28,'lastBuffered',v27]|610: constant[\" + \\\"\",v29]|611: +[v27,v29,v26]|612: write-property[v28,'lastBuffered',v26]*}" ] 
BB171 -> BB172 [tailport=s, headport=n]
BB171 -> BB176 [tailport=s, headport=n, color=gray]
BB172 [shape=record label="{613: read-variable['this',v27,-]|614: constant[\"text\",v26]|615: write-property[v27,'lastBufferedType',v26]*|616: read-variable['this',v30,-]|617: read-property[v30,'lastBuffered',v29]|618: read-variable['str',v31,-]|619: +[v29,v31,v28]|620: write-property[v30,'lastBuffered',v28]*|621: read-variable['this',v35,-]|622: read-property[v35,'buf',v33]|623: read-variable['this',v38,-]|624: read-property[v38,'lastBufferedIdx',v36]|625: constant[1.0,v37]|626: -[v36,v37,v34]|627: constant[\"buf.push(\",v43]|628: read-variable['this',v45,-]|629: read-property[v45,'bufferStartChar',v44]|630: +[v43,v44,v41]|631: read-variable['this',v46,-]|632: read-property[v46,'lastBuffered',v42]|633: +[v41,v42,v39]|634: constant[\"\\\");\",v40]|635: +[v39,v40,v32]|636: write-property[v33,v34,v32]|637: \<property-non-null-undef\>[v35,'buf']*}" ] 
BB172 -> BB175 [tailport=s, headport=n]
BB172 -> BB176 [tailport=s, headport=n, color=gray]
BB173 [shape=record label="{638: call-this.buf.push [v23,'push',v25,-]*}" ] 
BB173 -> BB174 [tailport=s, headport=n, headlabel="      174"]
BB173 -> BB176 [tailport=s, headport=n, color=gray]
BB174 [shape=record label="{639: read-variable['this',v31,-]|640: constant[\"text\",v30]|641: write-property[v31,'lastBufferedType',v30]*|642: read-variable['this',v33,-]|643: constant[\"\\\"\",v32]|644: write-property[v33,'bufferStartChar',v32]*|645: read-variable['this',v35,-]|646: read-variable['str',v34,-]|647: write-property[v35,'lastBuffered',v34]*|648: read-variable['this',v37,-]|649: read-variable['this',v39,-]|650: read-property[v39,'buf',v38]|651: read-property[v38,'length',v36]|652: \<property-non-null-undef\>[v39,'buf']|653: write-property[v37,'lastBufferedIdx',v36]*}" ] 
BB174 -> BB175 [tailport=s, headport=n]
BB174 -> BB176 [tailport=s, headport=n, color=gray]
BB175 [shape=record label="{654: return[v1]}" ] 
BB176 [shape=record label="{655: exceptional-return}" ] 
//#$~ 142
}
