digraph {
rankdir="TD"
BB_entry572[shape=none,label=""];
BB_entry572 -> BB7503 [tailport=s, headport=n, headlabel="    7503"]
BB7503 [shape=record label="{20911: constant[undefined,v1]|20912: vardecl['checkContext']|20913: vardecl['matcher']|20914: vardecl['j']|20915: vardecl['len']|20916: vardecl['leadingRelative']|20917: vardecl['implicitRelative']|20918: vardecl['i']|20919: vardecl['matchContext']|20920: vardecl['matchAnyContext']|20921: vardecl['matchers']}" ] 
BB7503 -> BB7504 [tailport=s, headport=n, headlabel="      7504"]
BB7504 [shape=record label="{20922: read-variable['tokens',v3,-]|20923: read-property[v3,'length',v2]|20924: \<variable-non-null-undef\>['tokens']|20925: write-variable[v2,'len']*|20926: read-variable['Expr',v6,-]|20927: read-property[v6,'relative',v5]|20928: \<variable-non-null-undef\>['Expr']|20929: read-variable['tokens',v9,-]|20930: constant[0.0,v10]|20931: read-property[v9,v10,v8]|20932: \<variable-non-null-undef\>['tokens']|20933: read-property[v8,'type',v7]|20934: \<property-non-null-undef\>[v9,v10]|20935: read-property[v5,v7,v4]|20936: \<property-non-null-undef\>[v6,'relative']|20937: write-variable[v4,'leadingRelative']*|20938: read-variable['leadingRelative',v11,-]|20939: if[v11](true-block:7506,false-block:7505)}" ] 
BB7504 -> BB7506 [tailport=s, headport=n, headlabel="      7506"]
BB7504 -> BB7505 [tailport=s, headport=n, headlabel="      7505"]
BB7504 -> BB7564 [tailport=s, headport=n, color=gray, headlabel="      7564"]
BB7505 [shape=record label="{20940: read-variable['Expr',v13,-]|20941: read-property[v13,'relative',v12]|20942: \<variable-non-null-undef\>['Expr']|20943: read-property[v12,' ',v11]|20944: \<property-non-null-undef\>[v13,'relative']}" ] 
BB7505 -> BB7506 [tailport=s, headport=n]
BB7505 -> BB7564 [tailport=s, headport=n, color=gray]
BB7506 [shape=record label="{20945: write-variable[v11,'implicitRelative']*|20946: read-variable['leadingRelative',v13,-]|20947: if[v13](true-block:7507,false-block:7508)}" ] 
BB7506 -> BB7507 [tailport=s, headport=n, headlabel="      7507"]
BB7506 -> BB7508 [tailport=s, headport=n, headlabel="      7508"]
BB7506 -> BB7564 [tailport=s, headport=n, color=gray]
BB7507 [shape=record label="{20948: constant[1.0,v12]}" ] 
BB7507 -> BB7509 [tailport=s, headport=n, headlabel="      7509"]
BB7508 [shape=record label="{20949: constant[0.0,v12]}" ] 
BB7508 -> BB7509 [tailport=s, headport=n]
BB7509 [shape=record label="{20950: write-variable[v12,'i']*|20951: read-variable['addCombinator',v16,v15]|20952: function-expr[function ( elem ),v17]|20953: read-variable['implicitRelative',v18,-]|20954: constant[true,v19]}" ] 
BB7509 -> BB7510 [tailport=s, headport=n, headlabel="      7510"]
BB7509 -> BB7564 [tailport=s, headport=n, color=gray]
BB7510 [shape=record label="{20955: call-addCombinator [v15,v16,v17,v18,v19,v14]}" ] 
BB7510 -> BB7511 [tailport=s, headport=n, headlabel="      7511"]
BB7510 -> BB7564 [tailport=s, headport=n, color=gray]
BB7511 [shape=record label="{20956: write-variable[v14,'matchContext']*|20957: read-variable['addCombinator',v22,v21]|20958: function-expr[function ( elem ),v23]|20959: read-variable['implicitRelative',v24,-]|20960: constant[true,v25]}" ] 
BB7511 -> BB7512 [tailport=s, headport=n, headlabel="      7512"]
BB7511 -> BB7564 [tailport=s, headport=n, color=gray]
BB7512 [shape=record label="{20961: call-addCombinator [v21,v22,v23,v24,v25,v20]}" ] 
BB7512 -> BB7513 [tailport=s, headport=n, headlabel="      7513"]
BB7512 -> BB7564 [tailport=s, headport=n, color=gray]
BB7513 [shape=record label="{20962: write-variable[v20,'matchAnyContext']*|20963: read-variable['Array',v27,-]|20964: function-expr[function ( elem context xml ),v28]}" ] 
BB7513 -> BB7514 [tailport=s, headport=n, headlabel="      7514"]
BB7513 -> BB7564 [tailport=s, headport=n, color=gray]
BB7514 [shape=record label="{20965: construct [-,v27,v28,v26]}" ] 
BB7514 -> BB7515 [tailport=s, headport=n, headlabel="      7515"]
BB7514 -> BB7564 [tailport=s, headport=n, color=gray]
BB7515 [shape=record label="{20966: write-variable[v26,'matchers']*}" ] 
BB7515 -> BB7516 [tailport=s, headport=n, headlabel="      7516"]
BB7516 [shape=record label="{20967: read-variable['i',v30,-]|20968: read-variable['len',v31,-]|20969: \<[v30,v31,v29]|20970: if[v29](true-block:7517,false-block:7518)}" ] 
BB7516 -> BB7517 [tailport=s, headport=n, headlabel="      7517"]
BB7516 -> BB7518 [tailport=s, headport=n, headlabel="      7518"]
BB7516 -> BB7564 [tailport=s, headport=n, color=gray]
BB7517 [shape=record label="{20971: read-variable['Expr',v34,-]|20972: read-property[v34,'relative',v33]|20973: \<variable-non-null-undef\>['Expr']|20974: read-variable['tokens',v37,-]|20975: read-variable['i',v38,-]|20976: read-property[v37,v38,v36]|20977: \<variable-non-null-undef\>['tokens']|20978: read-property[v36,'type',v35]|20979: \<property-non-null-undef\>[v37,v38]|20980: read-property[v33,v35,v32]|20981: \<property-non-null-undef\>[v34,'relative']|20982: write-variable[v32,'matcher']|20983: if[v32](true-block:7519,false-block:7520)}" ] 
BB7517 -> BB7519 [tailport=s, headport=n, headlabel="      7519"]
BB7517 -> BB7520 [tailport=s, headport=n, headlabel="      7520"]
BB7517 -> BB7564 [tailport=s, headport=n, color=gray]
BB7518 [shape=record label="{20984: read-variable['elementMatcher',v33,v32]|20985: read-variable['matchers',v34,-]}" ] 
BB7518 -> BB7562 [tailport=s, headport=n, headlabel="      7562"]
BB7518 -> BB7564 [tailport=s, headport=n, color=gray]
BB7519 [shape=record label="{20986: read-variable['Array',v40,-]|20987: read-variable['addCombinator',v43,v42]|20988: read-variable['elementMatcher',v46,v45]|20989: read-variable['matchers',v47,-]}" ] 
BB7519 -> BB7521 [tailport=s, headport=n, headlabel="      7521"]
BB7519 -> BB7564 [tailport=s, headport=n, color=gray]
BB7520 [shape=record label="{20990: read-variable['Expr',v43,-]|20991: read-property[v43,'filter',v42]|20992: \<variable-non-null-undef\>['Expr']|20993: read-variable['tokens',v46,-]|20994: read-variable['i',v47,-]|20995: read-property[v46,v47,v45]|20996: \<variable-non-null-undef\>['tokens']|20997: read-property[v45,'type',v44]|20998: \<property-non-null-undef\>[v46,v47]|20999: read-property[v42,v44,v41]|21000: \<property-non-null-undef\>[v43,'filter']|21001: read-property[v41,'apply',-]|21002: \<property-non-null-undef\>[v42,v44]|21003: constant[null,v48]|21004: read-variable['tokens',v51,-]|21005: read-variable['i',v52,-]|21006: read-property[v51,v52,v50]|21007: \<variable-non-null-undef\>['tokens']|21008: read-property[v50,'matches',v49]|21009: \<property-non-null-undef\>[v51,v52]}" ] 
BB7520 -> BB7526 [tailport=s, headport=n, headlabel="      7526"]
BB7520 -> BB7564 [tailport=s, headport=n, color=gray]
BB7521 [shape=record label="{21010: call-elementMatcher [v45,v46,v47,v44]}" ] 
BB7521 -> BB7522 [tailport=s, headport=n, headlabel="      7522"]
BB7521 -> BB7564 [tailport=s, headport=n, color=gray]
BB7522 [shape=record label="{21011: read-variable['matcher',v48,-]}" ] 
BB7522 -> BB7523 [tailport=s, headport=n, headlabel="      7523"]
BB7522 -> BB7564 [tailport=s, headport=n, color=gray]
BB7523 [shape=record label="{21012: call-addCombinator [v42,v43,v44,v48,v41]}" ] 
BB7523 -> BB7524 [tailport=s, headport=n, headlabel="      7524"]
BB7523 -> BB7564 [tailport=s, headport=n, color=gray]
BB7524 [shape=record label="{21013: construct [-,v40,v41,v39]}" ] 
BB7524 -> BB7525 [tailport=s, headport=n, headlabel="      7525"]
BB7524 -> BB7564 [tailport=s, headport=n, color=gray]
BB7525 [shape=record label="{21014: write-variable[v39,'matchers']*}" ] 
BB7525 -> BB7561 [tailport=s, headport=n, headlabel="      7561"]
BB7526 [shape=record label="{21015: call-null [v41,'apply',v48,v49,v39]}" ] 
BB7526 -> BB7527 [tailport=s, headport=n, headlabel="      7527"]
BB7526 -> BB7564 [tailport=s, headport=n, color=gray]
BB7527 [shape=record label="{21016: write-variable[v39,'matcher']*|21017: read-variable['matcher',v54,-]|21018: read-variable['expando',v55,-]|21019: read-property[v54,v55,v53]|21020: \<variable-non-null-undef\>['matcher']|21021: if[v53](true-block:7528,false-block:7559)}" ] 
BB7527 -> BB7528 [tailport=s, headport=n, headlabel="      7528"]
BB7527 -> BB7559 [tailport=s, headport=n, headlabel="      7559"]
BB7527 -> BB7564 [tailport=s, headport=n, color=gray]
BB7528 [shape=record label="{21022: constant[1.0,v57]|21023: read-variable['i',v58,-]|21024: +[v58,v59]|21025: +[v59,v57,v56]|21026: write-variable[v56,'i']|21027: write-variable[v56,'j']*}" ] 
BB7528 -> BB7529 [tailport=s, headport=n, headlabel="      7529"]
BB7528 -> BB7564 [tailport=s, headport=n, color=gray]
BB7529 [shape=record label="{21028: read-variable['j',v61,-]|21029: read-variable['len',v62,-]|21030: \<[v61,v62,v60]|21031: if[v60](true-block:7530,false-block:7531)}" ] 
BB7529 -> BB7530 [tailport=s, headport=n, headlabel="      7530"]
BB7529 -> BB7531 [tailport=s, headport=n, headlabel="      7531"]
BB7529 -> BB7564 [tailport=s, headport=n, color=gray]
BB7530 [shape=record label="{21032: read-variable['Expr',v65,-]|21033: read-property[v65,'relative',v64]|21034: \<variable-non-null-undef\>['Expr']|21035: read-variable['tokens',v68,-]|21036: read-variable['j',v69,-]|21037: read-property[v68,v69,v67]|21038: \<variable-non-null-undef\>['tokens']|21039: read-property[v67,'type',v66]|21040: \<property-non-null-undef\>[v68,v69]|21041: read-property[v64,v66,v63]|21042: \<property-non-null-undef\>[v65,'relative']|21043: if[v63](true-block:7531,false-block:7532)}" ] 
BB7530 -> BB7531 [tailport=s, headport=n]
BB7530 -> BB7532 [tailport=s, headport=n, headlabel="      7532"]
BB7530 -> BB7564 [tailport=s, headport=n, color=gray]
BB7531 [shape=record label="{21044: read-variable['setMatcher',v64,v63]|21045: read-variable['i',v66,-]|21046: constant[1.0,v67]|21047: \>[v66,v67,v65]|21048: if[v65](true-block:7533,false-block:7535)}" ] 
BB7531 -> BB7535 [tailport=s, headport=n, headlabel="      7535"]
BB7531 -> BB7533 [tailport=s, headport=n, headlabel="      7533"]
BB7531 -> BB7564 [tailport=s, headport=n, color=gray]
BB7532 [shape=record label="{21049: constant[1.0,v70]|21050: read-variable['j',v71,-]|21051: +[v71,v72]|21052: +[v72,v70,v73]|21053: write-variable[v73,'j']}" ] 
BB7532 -> BB7529 [tailport=s, headport=n]
BB7532 -> BB7564 [tailport=s, headport=n, color=gray]
BB7533 [shape=record label="{21054: read-variable['elementMatcher',v69,v68]|21055: read-variable['matchers',v70,-]}" ] 
BB7533 -> BB7534 [tailport=s, headport=n, headlabel="      7534"]
BB7533 -> BB7564 [tailport=s, headport=n, color=gray]
BB7534 [shape=record label="{21056: call-elementMatcher [v68,v69,v70,v65]}" ] 
BB7534 -> BB7535 [tailport=s, headport=n]
BB7534 -> BB7564 [tailport=s, headport=n, color=gray]
BB7535 [shape=record label="{21057: read-variable['i',v69,-]|21058: constant[1.0,v70]|21059: \>[v69,v70,v68]|21060: if[v68](true-block:7536,false-block:7546)}" ] 
BB7535 -> BB7546 [tailport=s, headport=n, headlabel="      7546"]
BB7535 -> BB7536 [tailport=s, headport=n, headlabel="      7536"]
BB7535 -> BB7564 [tailport=s, headport=n, color=gray]
BB7536 [shape=record label="{21061: read-variable['toSelector',v74,v73]|21062: read-variable['tokens',v79,-]|21063: read-property[v79,'slice',-]|21064: \<variable-non-null-undef\>['tokens']|21065: constant[0.0,v80]|21066: read-variable['i',v82,-]|21067: constant[1.0,v83]|21068: -[v82,v83,v81]}" ] 
BB7536 -> BB7537 [tailport=s, headport=n, headlabel="      7537"]
BB7536 -> BB7564 [tailport=s, headport=n, color=gray]
BB7537 [shape=record label="{21069: call-tokens.slice [v79,'slice',v80,v81,v77]}" ] 
BB7537 -> BB7538 [tailport=s, headport=n, headlabel="      7538"]
BB7537 -> BB7564 [tailport=s, headport=n, color=gray]
BB7538 [shape=record label="{21070: read-property[v77,'concat',-]|21071: new[v84]|21072: read-variable['tokens',v90,-]|21073: read-variable['i',v92,-]|21074: constant[2.0,v93]|21075: -[v92,v93,v91]|21076: read-property[v90,v91,v89]|21077: \<variable-non-null-undef\>['tokens']|21078: read-property[v89,'type',v87]|21079: \<property-non-null-undef\>[v90,v91]|21080: constant[\" \",v88]|21081: ===[v87,v88,v86]|21082: if[v86](true-block:7539,false-block:7540)}" ] 
BB7538 -> BB7539 [tailport=s, headport=n, headlabel="      7539"]
BB7538 -> BB7540 [tailport=s, headport=n, headlabel="      7540"]
BB7538 -> BB7564 [tailport=s, headport=n, color=gray]
BB7539 [shape=record label="{21083: constant[\"*\",v85]}" ] 
BB7539 -> BB7541 [tailport=s, headport=n, headlabel="      7541"]
BB7540 [shape=record label="{21084: constant[\"\",v85]}" ] 
BB7540 -> BB7541 [tailport=s, headport=n]
BB7541 [shape=record label="{21085: write-property[v84,'value',v85]}" ] 
BB7541 -> BB7542 [tailport=s, headport=n, headlabel="      7542"]
BB7541 -> BB7564 [tailport=s, headport=n, color=gray]
BB7542 [shape=record label="{21086: call-null [v77,'concat',v84,v75]}" ] 
BB7542 -> BB7543 [tailport=s, headport=n, headlabel="      7543"]
BB7542 -> BB7564 [tailport=s, headport=n, color=gray]
BB7543 [shape=record label="{21087: call-toSelector [v73,v74,v75,v72]}" ] 
BB7543 -> BB7544 [tailport=s, headport=n, headlabel="      7544"]
BB7543 -> BB7564 [tailport=s, headport=n, color=gray]
BB7544 [shape=record label="{21088: read-property[v72,'replace',-]|21089: read-variable['rtrim',v94,-]|21090: constant[\"$1\",v95]}" ] 
BB7544 -> BB7545 [tailport=s, headport=n, headlabel="      7545"]
BB7544 -> BB7564 [tailport=s, headport=n, color=gray]
BB7545 [shape=record label="{21091: call-null [v72,'replace',v94,v95,v68]}" ] 
BB7545 -> BB7546 [tailport=s, headport=n]
BB7545 -> BB7564 [tailport=s, headport=n, color=gray]
BB7546 [shape=record label="{21092: read-variable['matcher',v71,-]|21093: read-variable['i',v73,-]|21094: read-variable['j',v74,-]|21095: \<[v73,v74,v72]|21096: if[v72](true-block:7547,false-block:7550)}" ] 
BB7546 -> BB7550 [tailport=s, headport=n, headlabel="      7550"]
BB7546 -> BB7547 [tailport=s, headport=n, headlabel="      7547"]
BB7546 -> BB7564 [tailport=s, headport=n, color=gray]
BB7547 [shape=record label="{21097: read-variable['matcherFromTokens',v76,v75]|21098: read-variable['tokens',v79,-]|21099: read-property[v79,'slice',-]|21100: \<variable-non-null-undef\>['tokens']|21101: read-variable['i',v80,-]|21102: read-variable['j',v81,-]}" ] 
BB7547 -> BB7548 [tailport=s, headport=n, headlabel="      7548"]
BB7547 -> BB7564 [tailport=s, headport=n, color=gray]
BB7548 [shape=record label="{21103: call-tokens.slice [v79,'slice',v80,v81,v77]}" ] 
BB7548 -> BB7549 [tailport=s, headport=n, headlabel="      7549"]
BB7548 -> BB7564 [tailport=s, headport=n, color=gray]
BB7549 [shape=record label="{21104: call-matcherFromTokens [v75,v76,v77,v72]}" ] 
BB7549 -> BB7550 [tailport=s, headport=n]
BB7549 -> BB7564 [tailport=s, headport=n, color=gray]
BB7550 [shape=record label="{21105: read-variable['j',v76,-]|21106: read-variable['len',v77,-]|21107: \<[v76,v77,v75]|21108: if[v75](true-block:7551,false-block:7555)}" ] 
BB7550 -> BB7555 [tailport=s, headport=n, headlabel="      7555"]
BB7550 -> BB7551 [tailport=s, headport=n, headlabel="      7551"]
BB7550 -> BB7564 [tailport=s, headport=n, color=gray]
BB7551 [shape=record label="{21109: read-variable['matcherFromTokens',v79,v78]|21110: read-variable['tokens',v82,-]|21111: read-property[v82,'slice',-]|21112: \<variable-non-null-undef\>['tokens']|21113: read-variable['j',v83,-]}" ] 
BB7551 -> BB7552 [tailport=s, headport=n, headlabel="      7552"]
BB7551 -> BB7564 [tailport=s, headport=n, color=gray]
BB7552 [shape=record label="{21114: call-tokens.slice [v82,'slice',v83,v80]}" ] 
BB7552 -> BB7553 [tailport=s, headport=n, headlabel="      7553"]
BB7552 -> BB7564 [tailport=s, headport=n, color=gray]
BB7553 [shape=record label="{21115: write-variable[v80,'tokens']}" ] 
BB7553 -> BB7554 [tailport=s, headport=n, headlabel="      7554"]
BB7554 [shape=record label="{21116: call-matcherFromTokens [v78,v79,v80,v75]}" ] 
BB7554 -> BB7555 [tailport=s, headport=n]
BB7554 -> BB7564 [tailport=s, headport=n, color=gray]
BB7555 [shape=record label="{21117: read-variable['j',v79,-]|21118: read-variable['len',v80,-]|21119: \<[v79,v80,v78]|21120: if[v78](true-block:7556,false-block:7558)}" ] 
BB7555 -> BB7558 [tailport=s, headport=n, headlabel="      7558"]
BB7555 -> BB7556 [tailport=s, headport=n, headlabel="      7556"]
BB7555 -> BB7564 [tailport=s, headport=n, color=gray]
BB7556 [shape=record label="{21121: read-variable['toSelector',v82,v81]|21122: read-variable['tokens',v83,-]}" ] 
BB7556 -> BB7557 [tailport=s, headport=n, headlabel="      7557"]
BB7556 -> BB7564 [tailport=s, headport=n, color=gray]
BB7557 [shape=record label="{21123: call-toSelector [v81,v82,v83,v78]}" ] 
BB7557 -> BB7558 [tailport=s, headport=n]
BB7557 -> BB7564 [tailport=s, headport=n, color=gray]
BB7558 [shape=record label="{21124: call-setMatcher [v63,v64,v65,v68,v71,v72,v75,v78,v1]}" ] 
BB7558 -> BB7563 [tailport=s, headport=n, headlabel="      7563"]
BB7558 -> BB7564 [tailport=s, headport=n, color=gray]
BB7559 [shape=record label="{21125: read-variable['matchers',v57,-]|21126: read-property[v57,'push',-]|21127: \<variable-non-null-undef\>['matchers']|21128: read-variable['matcher',v58,-]}" ] 
BB7559 -> BB7560 [tailport=s, headport=n, headlabel="      7560"]
BB7559 -> BB7564 [tailport=s, headport=n, color=gray]
BB7560 [shape=record label="{21129: call-matchers.push [v57,'push',v58,-]*}" ] 
BB7560 -> BB7561 [tailport=s, headport=n]
BB7560 -> BB7564 [tailport=s, headport=n, color=gray]
BB7561 [shape=record label="{21130: constant[1.0,v39]|21131: read-variable['i',v40,-]|21132: +[v40,v41]|21133: +[v41,v39,v42]|21134: write-variable[v42,'i']}" ] 
BB7561 -> BB7516 [tailport=s, headport=n]
BB7561 -> BB7564 [tailport=s, headport=n, color=gray]
BB7562 [shape=record label="{21135: call-elementMatcher [v32,v33,v34,v1]}" ] 
BB7562 -> BB7563 [tailport=s, headport=n]
BB7562 -> BB7564 [tailport=s, headport=n, color=gray]
BB7563 [shape=record label="{21136: return[v1]}" ] 
BB7564 [shape=record label="{21137: exceptional-return}" ] 
//#$~ 5990
}
