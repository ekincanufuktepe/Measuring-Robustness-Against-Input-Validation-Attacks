digraph {
rankdir="TD"
BB_entry869[shape=none,label=""];
BB_entry869 -> BB10159 [tailport=s, headport=n, headlabel="    10159"]
BB10159 [shape=record label="{34764: constant[undefined,v1]|34765: vardecl['modulePath']|34766: vardecl['type']}" ] 
BB10159 -> BB10160 [tailport=s, headport=n, headlabel="      10160"]
BB10160 [shape=record label="{34767: typeof['EmberArray',v3]|34768: constant[\"undefined\",v4]|34769: ===[v3,v4,v2]|34770: if[v2](true-block:10161,false-block:10165)}" ] 
BB10160 -> BB10161 [tailport=s, headport=n, headlabel="      10161"]
BB10160 -> BB10165 [tailport=s, headport=n, headlabel="      10165"]
BB10160 -> BB10189 [tailport=s, headport=n, color=gray, headlabel="      10189"]
BB10161 [shape=record label="{34771: constant[\"ember-runtime/mixins/array\",v5]|34772: write-variable[v5,'modulePath']*|34773: read-variable['Ember',v9,-]|34774: read-property[v9,'__loader',v8]|34775: \<variable-non-null-undef\>['Ember']|34776: read-property[v8,'registry',v7]|34777: \<property-non-null-undef\>[v9,'__loader']|34778: read-variable['modulePath',v10,-]|34779: read-property[v7,v10,v6]|34780: \<property-non-null-undef\>[v8,'registry']|34781: if[v6](true-block:10162,false-block:10165)}" ] 
BB10161 -> BB10162 [tailport=s, headport=n, headlabel="      10162"]
BB10161 -> BB10165 [tailport=s, headport=n]
BB10161 -> BB10189 [tailport=s, headport=n, color=gray]
BB10162 [shape=record label="{34782: read-variable['Ember',v15,-]|34783: read-property[v15,'__loader',v14]|34784: \<variable-non-null-undef\>['Ember']|34785: read-property[v14,'require',-]|34786: \<property-non-null-undef\>[v15,'__loader']|34787: read-variable['modulePath',v16,-]}" ] 
BB10162 -> BB10163 [tailport=s, headport=n, headlabel="      10163"]
BB10162 -> BB10189 [tailport=s, headport=n, color=gray]
BB10163 [shape=record label="{34788: call-Ember.__loader.require [v14,'require',v16,v12]}" ] 
BB10163 -> BB10164 [tailport=s, headport=n, headlabel="      10164"]
BB10163 -> BB10189 [tailport=s, headport=n, color=gray]
BB10164 [shape=record label="{34789: read-property[v12,'default',v11]|34790: write-variable[v11,'EmberArray']*}" ] 
BB10164 -> BB10165 [tailport=s, headport=n]
BB10164 -> BB10189 [tailport=s, headport=n, color=gray]
BB10165 [shape=record label="{34791: read-variable['obj',v6,-]|34792: ![v6,v5]|34793: if[v5](true-block:10167,false-block:10166)}" ] 
BB10165 -> BB10167 [tailport=s, headport=n, headlabel="      10167"]
BB10165 -> BB10166 [tailport=s, headport=n, headlabel="      10166"]
BB10165 -> BB10189 [tailport=s, headport=n, color=gray]
BB10166 [shape=record label="{34794: read-variable['obj',v6,-]|34795: read-property[v6,'setInterval',v5]|34796: \<variable-non-null-undef\>['obj']}" ] 
BB10166 -> BB10167 [tailport=s, headport=n]
BB10166 -> BB10189 [tailport=s, headport=n, color=gray]
BB10167 [shape=record label="{34797: if[v5](true-block:10168,false-block:10169)}" ] 
BB10167 -> BB10168 [tailport=s, headport=n, headlabel="      10168"]
BB10167 -> BB10169 [tailport=s, headport=n, headlabel="      10169"]
BB10168 [shape=record label="{34798: constant[false,v1]}" ] 
BB10168 -> BB10188 [tailport=s, headport=n, headlabel="      10188"]
BB10169 [shape=record label="{34799: read-variable['Array',v7,-]|34800: read-property[v7,'isArray',v6]|34801: \<variable-non-null-undef\>['Array']|34802: if[v6](true-block:10170,false-block:10172)}" ] 
BB10169 -> BB10172 [tailport=s, headport=n, headlabel="      10172"]
BB10169 -> BB10170 [tailport=s, headport=n, headlabel="      10170"]
BB10169 -> BB10189 [tailport=s, headport=n, color=gray]
BB10170 [shape=record label="{34803: read-variable['Array',v9,-]|34804: read-property[v9,'isArray',-]|34805: \<variable-non-null-undef\>['Array']|34806: read-variable['obj',v10,-]}" ] 
BB10170 -> BB10171 [tailport=s, headport=n, headlabel="      10171"]
BB10170 -> BB10189 [tailport=s, headport=n, color=gray]
BB10171 [shape=record label="{34807: call-Array.isArray [v9,'isArray',v10,v6]}" ] 
BB10171 -> BB10172 [tailport=s, headport=n]
BB10171 -> BB10189 [tailport=s, headport=n, color=gray]
BB10172 [shape=record label="{34808: if[v6](true-block:10173,false-block:10174)}" ] 
BB10172 -> BB10173 [tailport=s, headport=n, headlabel="      10173"]
BB10172 -> BB10174 [tailport=s, headport=n, headlabel="      10174"]
BB10173 [shape=record label="{34809: constant[true,v1]}" ] 
BB10173 -> BB10188 [tailport=s, headport=n]
BB10174 [shape=record label="{34810: read-variable['EmberArray',v8,-]|34811: if[v8](true-block:10175,false-block:10177)}" ] 
BB10174 -> BB10177 [tailport=s, headport=n, headlabel="      10177"]
BB10174 -> BB10175 [tailport=s, headport=n, headlabel="      10175"]
BB10174 -> BB10189 [tailport=s, headport=n, color=gray]
BB10175 [shape=record label="{34812: read-variable['EmberArray',v10,-]|34813: read-property[v10,'detect',-]|34814: \<variable-non-null-undef\>['EmberArray']|34815: read-variable['obj',v11,-]}" ] 
BB10175 -> BB10176 [tailport=s, headport=n, headlabel="      10176"]
BB10175 -> BB10189 [tailport=s, headport=n, color=gray]
BB10176 [shape=record label="{34816: call-EmberArray.detect [v10,'detect',v11,v8]}" ] 
BB10176 -> BB10177 [tailport=s, headport=n]
BB10176 -> BB10189 [tailport=s, headport=n, color=gray]
BB10177 [shape=record label="{34817: if[v8](true-block:10178,false-block:10179)}" ] 
BB10177 -> BB10178 [tailport=s, headport=n, headlabel="      10178"]
BB10177 -> BB10179 [tailport=s, headport=n, headlabel="      10179"]
BB10178 [shape=record label="{34818: constant[true,v1]}" ] 
BB10178 -> BB10188 [tailport=s, headport=n]
BB10179 [shape=record label="{34819: read-variable['typeOf',v11,v10]|34820: read-variable['obj',v12,-]}" ] 
BB10179 -> BB10180 [tailport=s, headport=n, headlabel="      10180"]
BB10179 -> BB10189 [tailport=s, headport=n, color=gray]
BB10180 [shape=record label="{34821: call-typeOf [v10,v11,v12,v9]}" ] 
BB10180 -> BB10181 [tailport=s, headport=n, headlabel="      10181"]
BB10180 -> BB10189 [tailport=s, headport=n, color=gray]
BB10181 [shape=record label="{34822: write-variable[v9,'type']*|34823: constant[\"array\",v14]|34824: read-variable['type',v15,-]|34825: ===[v14,v15,v13]|34826: if[v13](true-block:10182,false-block:10183)}" ] 
BB10181 -> BB10182 [tailport=s, headport=n, headlabel="      10182"]
BB10181 -> BB10183 [tailport=s, headport=n, headlabel="      10183"]
BB10181 -> BB10189 [tailport=s, headport=n, color=gray]
BB10182 [shape=record label="{34827: constant[true,v1]}" ] 
BB10182 -> BB10188 [tailport=s, headport=n]
BB10183 [shape=record label="{34828: read-variable['obj',v19,-]|34829: read-property[v19,'length',v17]|34830: \<variable-non-null-undef\>['obj']|34831: read-variable['undefined',v18,-]|34832: !==[v17,v18,v16]|34833: if[v16](true-block:10184,false-block:10185)}" ] 
BB10183 -> BB10185 [tailport=s, headport=n, headlabel="      10185"]
BB10183 -> BB10184 [tailport=s, headport=n, headlabel="      10184"]
BB10183 -> BB10189 [tailport=s, headport=n, color=gray]
BB10184 [shape=record label="{34834: constant[\"object\",v20]|34835: read-variable['type',v21,-]|34836: ===[v20,v21,v16]}" ] 
BB10184 -> BB10185 [tailport=s, headport=n]
BB10184 -> BB10189 [tailport=s, headport=n, color=gray]
BB10185 [shape=record label="{34837: if[v16](true-block:10186,false-block:10187)}" ] 
BB10185 -> BB10186 [tailport=s, headport=n, headlabel="      10186"]
BB10185 -> BB10187 [tailport=s, headport=n, headlabel="      10187"]
BB10186 [shape=record label="{34838: constant[true,v1]}" ] 
BB10186 -> BB10188 [tailport=s, headport=n]
BB10187 [shape=record label="{34839: constant[false,v1]}" ] 
BB10187 -> BB10188 [tailport=s, headport=n]
BB10188 [shape=record label="{34840: return[v1]}" ] 
BB10189 [shape=record label="{34841: exceptional-return}" ] 
//#$~ 18355
}
