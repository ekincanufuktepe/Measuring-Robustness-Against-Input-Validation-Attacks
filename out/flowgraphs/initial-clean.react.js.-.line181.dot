digraph {
rankdir="TD"
BB_entry11[shape=none,label=""];
BB_entry11 -> BB335 [tailport=s, headport=n, headlabel="    335"]
BB335 [shape=record label="{1062: constant[undefined,v1]|1063: vardecl['EventConstants']|1064: vardecl['EventPropagators']|1065: vardecl['ExecutionEnvironment']|1066: vardecl['FallbackCompositionState']|1067: vardecl['SyntheticCompositionEvent']|1068: vardecl['SyntheticInputEvent']|1069: vardecl['keyOf']|1070: vardecl['END_KEYCODES']|1071: vardecl['START_KEYCODE']|1072: vardecl['canUseCompositionEvent']|1073: vardecl['documentMode']|1074: vardecl['canUseTextInputEvent']|1075: vardecl['useFallbackCompositionData']|1076: function-decl[function isPresto ( ),-]|1077: vardecl['SPACEBAR_CODE']|1078: vardecl['SPACEBAR_CHAR']|1079: vardecl['topLevelTypes']|1080: vardecl['eventTypes']|1081: vardecl['hasSpaceKeypress']|1082: function-decl[function isKeypressCommand ( nativeEvent ),-]|1083: function-decl[function getCompositionEventType ( topLevelType ),-]|1084: function-decl[function isFallbackCompositionStart ( topLevelType nativeEvent ),-]|1085: function-decl[function isFallbackCompositionEnd ( topLevelType nativeEvent ),-]|1086: function-decl[function getDataFromCustomEvent ( nativeEvent ),-]|1087: vardecl['currentComposition']|1088: function-decl[function extractCompositionEvent ( topLevelType topLevelTarget topLevelTargetID nativeEvent ),-]|1089: function-decl[function getNativeBeforeInputChars ( topLevelType nativeEvent ),-]|1090: function-decl[function getFallbackBeforeInputChars ( topLevelType nativeEvent ),-]|1091: function-decl[function extractBeforeInputEvent ( topLevelType topLevelTarget topLevelTargetID nativeEvent ),-]|1092: vardecl['BeforeInputEventPlugin']}" ] 
BB335 -> BB336 [tailport=s, headport=n, headlabel="      336"]
BB336 [shape=record label="{1093: read-variable['_dereq_',v4,v3]|1094: constant[15.0,v5]}" ] 
BB336 -> BB337 [tailport=s, headport=n, headlabel="      337"]
BB336 -> BB397 [tailport=s, headport=n, color=gray, headlabel="      397"]
BB337 [shape=record label="{1095: call-_dereq_ [v3,v4,v5,v2]}" ] 
BB337 -> BB338 [tailport=s, headport=n, headlabel="      338"]
BB337 -> BB397 [tailport=s, headport=n, color=gray]
BB338 [shape=record label="{1096: write-variable[v2,'EventConstants']*|1097: read-variable['_dereq_',v8,v7]|1098: constant[20.0,v9]}" ] 
BB338 -> BB339 [tailport=s, headport=n, headlabel="      339"]
BB338 -> BB397 [tailport=s, headport=n, color=gray]
BB339 [shape=record label="{1099: call-_dereq_ [v7,v8,v9,v6]}" ] 
BB339 -> BB340 [tailport=s, headport=n, headlabel="      340"]
BB339 -> BB397 [tailport=s, headport=n, color=gray]
BB340 [shape=record label="{1100: write-variable[v6,'EventPropagators']*|1101: read-variable['_dereq_',v12,v11]|1102: constant[21.0,v13]}" ] 
BB340 -> BB341 [tailport=s, headport=n, headlabel="      341"]
BB340 -> BB397 [tailport=s, headport=n, color=gray]
BB341 [shape=record label="{1103: call-_dereq_ [v11,v12,v13,v10]}" ] 
BB341 -> BB342 [tailport=s, headport=n, headlabel="      342"]
BB341 -> BB397 [tailport=s, headport=n, color=gray]
BB342 [shape=record label="{1104: write-variable[v10,'ExecutionEnvironment']*|1105: read-variable['_dereq_',v16,v15]|1106: constant[22.0,v17]}" ] 
BB342 -> BB343 [tailport=s, headport=n, headlabel="      343"]
BB342 -> BB397 [tailport=s, headport=n, color=gray]
BB343 [shape=record label="{1107: call-_dereq_ [v15,v16,v17,v14]}" ] 
BB343 -> BB344 [tailport=s, headport=n, headlabel="      344"]
BB343 -> BB397 [tailport=s, headport=n, color=gray]
BB344 [shape=record label="{1108: write-variable[v14,'FallbackCompositionState']*|1109: read-variable['_dereq_',v20,v19]|1110: constant[93.0,v21]}" ] 
BB344 -> BB345 [tailport=s, headport=n, headlabel="      345"]
BB344 -> BB397 [tailport=s, headport=n, color=gray]
BB345 [shape=record label="{1111: call-_dereq_ [v19,v20,v21,v18]}" ] 
BB345 -> BB346 [tailport=s, headport=n, headlabel="      346"]
BB345 -> BB397 [tailport=s, headport=n, color=gray]
BB346 [shape=record label="{1112: write-variable[v18,'SyntheticCompositionEvent']*|1113: read-variable['_dereq_',v24,v23]|1114: constant[97.0,v25]}" ] 
BB346 -> BB347 [tailport=s, headport=n, headlabel="      347"]
BB346 -> BB397 [tailport=s, headport=n, color=gray]
BB347 [shape=record label="{1115: call-_dereq_ [v23,v24,v25,v22]}" ] 
BB347 -> BB348 [tailport=s, headport=n, headlabel="      348"]
BB347 -> BB397 [tailport=s, headport=n, color=gray]
BB348 [shape=record label="{1116: write-variable[v22,'SyntheticInputEvent']*|1117: read-variable['_dereq_',v28,v27]|1118: constant[141.0,v29]}" ] 
BB348 -> BB349 [tailport=s, headport=n, headlabel="      349"]
BB348 -> BB397 [tailport=s, headport=n, color=gray]
BB349 [shape=record label="{1119: call-_dereq_ [v27,v28,v29,v26]}" ] 
BB349 -> BB350 [tailport=s, headport=n, headlabel="      350"]
BB349 -> BB397 [tailport=s, headport=n, color=gray]
BB350 [shape=record label="{1120: write-variable[v26,'keyOf']*|1121: read-variable['Array',v31,-]|1122: constant[9.0,v32]|1123: constant[13.0,v33]|1124: constant[27.0,v34]|1125: constant[32.0,v35]}" ] 
BB350 -> BB351 [tailport=s, headport=n, headlabel="      351"]
BB350 -> BB397 [tailport=s, headport=n, color=gray]
BB351 [shape=record label="{1126: construct [-,v31,v32,v33,v34,v35,v30]}" ] 
BB351 -> BB352 [tailport=s, headport=n, headlabel="      352"]
BB351 -> BB397 [tailport=s, headport=n, color=gray]
BB352 [shape=record label="{1127: write-variable[v30,'END_KEYCODES']*|1128: constant[229.0,v36]|1129: write-variable[v36,'START_KEYCODE']*|1130: read-variable['ExecutionEnvironment',v38,-]|1131: read-property[v38,'canUseDOM',v37]|1132: \<variable-non-null-undef\>['ExecutionEnvironment']|1133: if[v37](true-block:353,false-block:354)}" ] 
BB352 -> BB354 [tailport=s, headport=n, headlabel="      354"]
BB352 -> BB353 [tailport=s, headport=n, headlabel="      353"]
BB352 -> BB397 [tailport=s, headport=n, color=gray]
BB353 [shape=record label="{1134: constant[\"CompositionEvent\",v39]|1135: read-variable['window',v40,-]|1136: in[v39,v40,v37]}" ] 
BB353 -> BB354 [tailport=s, headport=n]
BB353 -> BB397 [tailport=s, headport=n, color=gray]
BB354 [shape=record label="{1137: write-variable[v37,'canUseCompositionEvent']*|1138: constant[null,v39]|1139: write-variable[v39,'documentMode']*|1140: read-variable['ExecutionEnvironment',v41,-]|1141: read-property[v41,'canUseDOM',v40]|1142: \<variable-non-null-undef\>['ExecutionEnvironment']|1143: if[v40](true-block:355,false-block:356)}" ] 
BB354 -> BB356 [tailport=s, headport=n, headlabel="      356"]
BB354 -> BB355 [tailport=s, headport=n, headlabel="      355"]
BB354 -> BB397 [tailport=s, headport=n, color=gray]
BB355 [shape=record label="{1144: constant[\"documentMode\",v42]|1145: read-variable['document',v43,-]|1146: in[v42,v43,v40]}" ] 
BB355 -> BB356 [tailport=s, headport=n]
BB355 -> BB397 [tailport=s, headport=n, color=gray]
BB356 [shape=record label="{1147: if[v40](true-block:357,false-block:358)}" ] 
BB356 -> BB357 [tailport=s, headport=n, headlabel="      357"]
BB356 -> BB358 [tailport=s, headport=n, headlabel="      358"]
BB357 [shape=record label="{1148: read-variable['document',v43,-]|1149: read-property[v43,'documentMode',v42]|1150: \<variable-non-null-undef\>['document']|1151: write-variable[v42,'documentMode']*}" ] 
BB357 -> BB358 [tailport=s, headport=n]
BB357 -> BB397 [tailport=s, headport=n, color=gray]
BB358 [shape=record label="{1152: read-variable['ExecutionEnvironment',v43,-]|1153: read-property[v43,'canUseDOM',v42]|1154: \<variable-non-null-undef\>['ExecutionEnvironment']|1155: if[v42](true-block:359,false-block:364)}" ] 
BB358 -> BB364 [tailport=s, headport=n, headlabel="      364"]
BB358 -> BB359 [tailport=s, headport=n, headlabel="      359"]
BB358 -> BB397 [tailport=s, headport=n, color=gray]
BB359 [shape=record label="{1156: constant[\"TextEvent\",v44]|1157: read-variable['window',v45,-]|1158: in[v44,v45,v42]|1159: if[v42](true-block:360,false-block:364)}" ] 
BB359 -> BB364 [tailport=s, headport=n]
BB359 -> BB360 [tailport=s, headport=n, headlabel="      360"]
BB359 -> BB397 [tailport=s, headport=n, color=gray]
BB360 [shape=record label="{1160: read-variable['documentMode',v46,-]|1161: ![v46,v42]|1162: if[v42](true-block:361,false-block:364)}" ] 
BB360 -> BB364 [tailport=s, headport=n]
BB360 -> BB361 [tailport=s, headport=n, headlabel="      361"]
BB360 -> BB397 [tailport=s, headport=n, color=gray]
BB361 [shape=record label="{1163: read-variable['isPresto',v49,v48]}" ] 
BB361 -> BB362 [tailport=s, headport=n, headlabel="      362"]
BB361 -> BB397 [tailport=s, headport=n, color=gray]
BB362 [shape=record label="{1164: call-isPresto [v48,v49,v47]}" ] 
BB362 -> BB363 [tailport=s, headport=n, headlabel="      363"]
BB362 -> BB397 [tailport=s, headport=n, color=gray]
BB363 [shape=record label="{1165: ![v47,v42]}" ] 
BB363 -> BB364 [tailport=s, headport=n]
BB363 -> BB397 [tailport=s, headport=n, color=gray]
BB364 [shape=record label="{1166: write-variable[v42,'canUseTextInputEvent']*|1167: read-variable['ExecutionEnvironment',v45,-]|1168: read-property[v45,'canUseDOM',v44]|1169: \<variable-non-null-undef\>['ExecutionEnvironment']|1170: if[v44](true-block:365,false-block:369)}" ] 
BB364 -> BB369 [tailport=s, headport=n, headlabel="      369"]
BB364 -> BB365 [tailport=s, headport=n, headlabel="      365"]
BB364 -> BB397 [tailport=s, headport=n, color=gray]
BB365 [shape=record label="{1171: read-variable['canUseCompositionEvent',v46,-]|1172: ![v46,v44]|1173: if[v44](true-block:369,false-block:366)}" ] 
BB365 -> BB369 [tailport=s, headport=n]
BB365 -> BB366 [tailport=s, headport=n, headlabel="      366"]
BB365 -> BB397 [tailport=s, headport=n, color=gray]
BB366 [shape=record label="{1174: read-variable['documentMode',v44,-]|1175: if[v44](true-block:367,false-block:369)}" ] 
BB366 -> BB369 [tailport=s, headport=n]
BB366 -> BB367 [tailport=s, headport=n, headlabel="      367"]
BB366 -> BB397 [tailport=s, headport=n, color=gray]
BB367 [shape=record label="{1176: read-variable['documentMode',v46,-]|1177: constant[8.0,v47]|1178: \>[v46,v47,v44]|1179: if[v44](true-block:368,false-block:369)}" ] 
BB367 -> BB369 [tailport=s, headport=n]
BB367 -> BB368 [tailport=s, headport=n, headlabel="      368"]
BB367 -> BB397 [tailport=s, headport=n, color=gray]
BB368 [shape=record label="{1180: read-variable['documentMode',v48,-]|1181: constant[11.0,v49]|1182: \<=[v48,v49,v44]}" ] 
BB368 -> BB369 [tailport=s, headport=n]
BB368 -> BB397 [tailport=s, headport=n, color=gray]
BB369 [shape=record label="{1183: write-variable[v44,'useFallbackCompositionData']*|1184: constant[32.0,v46]|1185: write-variable[v46,'SPACEBAR_CODE']*|1186: read-variable['String',v49,-]|1187: read-property[v49,'fromCharCode',-]|1188: \<variable-non-null-undef\>['String']|1189: read-variable['SPACEBAR_CODE',v50,-]}" ] 
BB369 -> BB370 [tailport=s, headport=n, headlabel="      370"]
BB369 -> BB397 [tailport=s, headport=n, color=gray]
BB370 [shape=record label="{1190: call-String.fromCharCode [v49,'fromCharCode',v50,v47]}" ] 
BB370 -> BB371 [tailport=s, headport=n, headlabel="      371"]
BB370 -> BB397 [tailport=s, headport=n, color=gray]
BB371 [shape=record label="{1191: write-variable[v47,'SPACEBAR_CHAR']*|1192: read-variable['EventConstants',v52,-]|1193: read-property[v52,'topLevelTypes',v51]|1194: \<variable-non-null-undef\>['EventConstants']|1195: write-variable[v51,'topLevelTypes']*|1196: new[v53]|1197: new[v54]|1198: new[v55]|1199: read-variable['keyOf',v58,v57]|1200: new[v59]|1201: constant[null,v60]|1202: write-property[v59,'onBeforeInput',v60]}" ] 
BB371 -> BB372 [tailport=s, headport=n, headlabel="      372"]
BB371 -> BB397 [tailport=s, headport=n, color=gray]
BB372 [shape=record label="{1203: call-keyOf [v57,v58,v59,v56]}" ] 
BB372 -> BB373 [tailport=s, headport=n, headlabel="      373"]
BB372 -> BB397 [tailport=s, headport=n, color=gray]
BB373 [shape=record label="{1204: write-property[v55,'bubbled',v56]|1205: read-variable['keyOf',v63,v62]|1206: new[v64]|1207: constant[null,v65]|1208: write-property[v64,'onBeforeInputCapture',v65]}" ] 
BB373 -> BB374 [tailport=s, headport=n, headlabel="      374"]
BB373 -> BB397 [tailport=s, headport=n, color=gray]
BB374 [shape=record label="{1209: call-keyOf [v62,v63,v64,v61]}" ] 
BB374 -> BB375 [tailport=s, headport=n, headlabel="      375"]
BB374 -> BB397 [tailport=s, headport=n, color=gray]
BB375 [shape=record label="{1210: write-property[v55,'captured',v61]|1211: write-property[v54,'phasedRegistrationNames',v55]|1212: read-variable['Array',v67,-]|1213: read-variable['topLevelTypes',v69,-]|1214: read-property[v69,'topCompositionEnd',v68]|1215: \<variable-non-null-undef\>['topLevelTypes']|1216: read-variable['topLevelTypes',v71,-]|1217: read-property[v71,'topKeyPress',v70]|1218: \<variable-non-null-undef\>['topLevelTypes']|1219: read-variable['topLevelTypes',v73,-]|1220: read-property[v73,'topTextInput',v72]|1221: \<variable-non-null-undef\>['topLevelTypes']|1222: read-variable['topLevelTypes',v75,-]|1223: read-property[v75,'topPaste',v74]|1224: \<variable-non-null-undef\>['topLevelTypes']}" ] 
BB375 -> BB376 [tailport=s, headport=n, headlabel="      376"]
BB375 -> BB397 [tailport=s, headport=n, color=gray]
BB376 [shape=record label="{1225: construct [-,v67,v68,v70,v72,v74,v66]}" ] 
BB376 -> BB377 [tailport=s, headport=n, headlabel="      377"]
BB376 -> BB397 [tailport=s, headport=n, color=gray]
BB377 [shape=record label="{1226: write-property[v54,'dependencies',v66]|1227: write-property[v53,'beforeInput',v54]|1228: new[v76]|1229: new[v77]|1230: read-variable['keyOf',v80,v79]|1231: new[v81]|1232: constant[null,v82]|1233: write-property[v81,'onCompositionEnd',v82]}" ] 
BB377 -> BB378 [tailport=s, headport=n, headlabel="      378"]
BB377 -> BB397 [tailport=s, headport=n, color=gray]
BB378 [shape=record label="{1234: call-keyOf [v79,v80,v81,v78]}" ] 
BB378 -> BB379 [tailport=s, headport=n, headlabel="      379"]
BB378 -> BB397 [tailport=s, headport=n, color=gray]
BB379 [shape=record label="{1235: write-property[v77,'bubbled',v78]|1236: read-variable['keyOf',v85,v84]|1237: new[v86]|1238: constant[null,v87]|1239: write-property[v86,'onCompositionEndCapture',v87]}" ] 
BB379 -> BB380 [tailport=s, headport=n, headlabel="      380"]
BB379 -> BB397 [tailport=s, headport=n, color=gray]
BB380 [shape=record label="{1240: call-keyOf [v84,v85,v86,v83]}" ] 
BB380 -> BB381 [tailport=s, headport=n, headlabel="      381"]
BB380 -> BB397 [tailport=s, headport=n, color=gray]
BB381 [shape=record label="{1241: write-property[v77,'captured',v83]|1242: write-property[v76,'phasedRegistrationNames',v77]|1243: read-variable['Array',v89,-]|1244: read-variable['topLevelTypes',v91,-]|1245: read-property[v91,'topBlur',v90]|1246: \<variable-non-null-undef\>['topLevelTypes']|1247: read-variable['topLevelTypes',v93,-]|1248: read-property[v93,'topCompositionEnd',v92]|1249: \<variable-non-null-undef\>['topLevelTypes']|1250: read-variable['topLevelTypes',v95,-]|1251: read-property[v95,'topKeyDown',v94]|1252: \<variable-non-null-undef\>['topLevelTypes']|1253: read-variable['topLevelTypes',v97,-]|1254: read-property[v97,'topKeyPress',v96]|1255: \<variable-non-null-undef\>['topLevelTypes']|1256: read-variable['topLevelTypes',v99,-]|1257: read-property[v99,'topKeyUp',v98]|1258: \<variable-non-null-undef\>['topLevelTypes']|1259: read-variable['topLevelTypes',v101,-]|1260: read-property[v101,'topMouseDown',v100]|1261: \<variable-non-null-undef\>['topLevelTypes']}" ] 
BB381 -> BB382 [tailport=s, headport=n, headlabel="      382"]
BB381 -> BB397 [tailport=s, headport=n, color=gray]
BB382 [shape=record label="{1262: construct [-,v89,v90,v92,v94,v96,v98,v100,v88]}" ] 
BB382 -> BB383 [tailport=s, headport=n, headlabel="      383"]
BB382 -> BB397 [tailport=s, headport=n, color=gray]
BB383 [shape=record label="{1263: write-property[v76,'dependencies',v88]|1264: write-property[v53,'compositionEnd',v76]|1265: new[v102]|1266: new[v103]|1267: read-variable['keyOf',v106,v105]|1268: new[v107]|1269: constant[null,v108]|1270: write-property[v107,'onCompositionStart',v108]}" ] 
BB383 -> BB384 [tailport=s, headport=n, headlabel="      384"]
BB383 -> BB397 [tailport=s, headport=n, color=gray]
BB384 [shape=record label="{1271: call-keyOf [v105,v106,v107,v104]}" ] 
BB384 -> BB385 [tailport=s, headport=n, headlabel="      385"]
BB384 -> BB397 [tailport=s, headport=n, color=gray]
BB385 [shape=record label="{1272: write-property[v103,'bubbled',v104]|1273: read-variable['keyOf',v111,v110]|1274: new[v112]|1275: constant[null,v113]|1276: write-property[v112,'onCompositionStartCapture',v113]}" ] 
BB385 -> BB386 [tailport=s, headport=n, headlabel="      386"]
BB385 -> BB397 [tailport=s, headport=n, color=gray]
BB386 [shape=record label="{1277: call-keyOf [v110,v111,v112,v109]}" ] 
BB386 -> BB387 [tailport=s, headport=n, headlabel="      387"]
BB386 -> BB397 [tailport=s, headport=n, color=gray]
BB387 [shape=record label="{1278: write-property[v103,'captured',v109]|1279: write-property[v102,'phasedRegistrationNames',v103]|1280: read-variable['Array',v115,-]|1281: read-variable['topLevelTypes',v117,-]|1282: read-property[v117,'topBlur',v116]|1283: \<variable-non-null-undef\>['topLevelTypes']|1284: read-variable['topLevelTypes',v119,-]|1285: read-property[v119,'topCompositionStart',v118]|1286: \<variable-non-null-undef\>['topLevelTypes']|1287: read-variable['topLevelTypes',v121,-]|1288: read-property[v121,'topKeyDown',v120]|1289: \<variable-non-null-undef\>['topLevelTypes']|1290: read-variable['topLevelTypes',v123,-]|1291: read-property[v123,'topKeyPress',v122]|1292: \<variable-non-null-undef\>['topLevelTypes']|1293: read-variable['topLevelTypes',v125,-]|1294: read-property[v125,'topKeyUp',v124]|1295: \<variable-non-null-undef\>['topLevelTypes']|1296: read-variable['topLevelTypes',v127,-]|1297: read-property[v127,'topMouseDown',v126]|1298: \<variable-non-null-undef\>['topLevelTypes']}" ] 
BB387 -> BB388 [tailport=s, headport=n, headlabel="      388"]
BB387 -> BB397 [tailport=s, headport=n, color=gray]
BB388 [shape=record label="{1299: construct [-,v115,v116,v118,v120,v122,v124,v126,v114]}" ] 
BB388 -> BB389 [tailport=s, headport=n, headlabel="      389"]
BB388 -> BB397 [tailport=s, headport=n, color=gray]
BB389 [shape=record label="{1300: write-property[v102,'dependencies',v114]|1301: write-property[v53,'compositionStart',v102]|1302: new[v128]|1303: new[v129]|1304: read-variable['keyOf',v132,v131]|1305: new[v133]|1306: constant[null,v134]|1307: write-property[v133,'onCompositionUpdate',v134]}" ] 
BB389 -> BB390 [tailport=s, headport=n, headlabel="      390"]
BB389 -> BB397 [tailport=s, headport=n, color=gray]
BB390 [shape=record label="{1308: call-keyOf [v131,v132,v133,v130]}" ] 
BB390 -> BB391 [tailport=s, headport=n, headlabel="      391"]
BB390 -> BB397 [tailport=s, headport=n, color=gray]
BB391 [shape=record label="{1309: write-property[v129,'bubbled',v130]|1310: read-variable['keyOf',v137,v136]|1311: new[v138]|1312: constant[null,v139]|1313: write-property[v138,'onCompositionUpdateCapture',v139]}" ] 
BB391 -> BB392 [tailport=s, headport=n, headlabel="      392"]
BB391 -> BB397 [tailport=s, headport=n, color=gray]
BB392 [shape=record label="{1314: call-keyOf [v136,v137,v138,v135]}" ] 
BB392 -> BB393 [tailport=s, headport=n, headlabel="      393"]
BB392 -> BB397 [tailport=s, headport=n, color=gray]
BB393 [shape=record label="{1315: write-property[v129,'captured',v135]|1316: write-property[v128,'phasedRegistrationNames',v129]|1317: read-variable['Array',v141,-]|1318: read-variable['topLevelTypes',v143,-]|1319: read-property[v143,'topBlur',v142]|1320: \<variable-non-null-undef\>['topLevelTypes']|1321: read-variable['topLevelTypes',v145,-]|1322: read-property[v145,'topCompositionUpdate',v144]|1323: \<variable-non-null-undef\>['topLevelTypes']|1324: read-variable['topLevelTypes',v147,-]|1325: read-property[v147,'topKeyDown',v146]|1326: \<variable-non-null-undef\>['topLevelTypes']|1327: read-variable['topLevelTypes',v149,-]|1328: read-property[v149,'topKeyPress',v148]|1329: \<variable-non-null-undef\>['topLevelTypes']|1330: read-variable['topLevelTypes',v151,-]|1331: read-property[v151,'topKeyUp',v150]|1332: \<variable-non-null-undef\>['topLevelTypes']|1333: read-variable['topLevelTypes',v153,-]|1334: read-property[v153,'topMouseDown',v152]|1335: \<variable-non-null-undef\>['topLevelTypes']}" ] 
BB393 -> BB394 [tailport=s, headport=n, headlabel="      394"]
BB393 -> BB397 [tailport=s, headport=n, color=gray]
BB394 [shape=record label="{1336: construct [-,v141,v142,v144,v146,v148,v150,v152,v140]}" ] 
BB394 -> BB395 [tailport=s, headport=n, headlabel="      395"]
BB394 -> BB397 [tailport=s, headport=n, color=gray]
BB395 [shape=record label="{1337: write-property[v128,'dependencies',v140]|1338: write-property[v53,'compositionUpdate',v128]|1339: write-variable[v53,'eventTypes']*|1340: constant[false,v154]|1341: write-variable[v154,'hasSpaceKeypress']*|1342: constant[null,v155]|1343: write-variable[v155,'currentComposition']*|1344: new[v156]|1345: read-variable['eventTypes',v157,-]|1346: write-property[v156,'eventTypes',v157]|1347: function-expr[function ( topLevelType topLevelTarget topLevelTargetID nativeEvent ),v158]|1348: write-property[v156,'extractEvents',v158]|1349: write-variable[v156,'BeforeInputEventPlugin']*|1350: read-variable['module',v160,-]|1351: read-variable['BeforeInputEventPlugin',v159,-]|1352: write-property[v160,'exports',v159]|1353: \<variable-non-null-undef\>['module']*}" ] 
BB395 -> BB396 [tailport=s, headport=n, headlabel="      396"]
BB395 -> BB397 [tailport=s, headport=n, color=gray]
BB396 [shape=record label="{1354: return[v1]}" ] 
BB397 [shape=record label="{1355: exceptional-return}" ] 
//#$~ 674
}
