digraph {
rankdir="TD"
BB_entry269[shape=none,label=""];
BB_entry269 -> BB4570 [tailport=s, headport=n, headlabel="    4570"]
BB4570 [shape=record label="{14228: constant[undefined,v1]|14229: vardecl['globals']|14230: vardecl['ast']|14231: vardecl['declareFunction']|14232: vardecl['groupedGlobals']}" ] 
BB4570 -> BB4571 [tailport=s, headport=n, headlabel="      4571"]
BB4571 [shape=record label="{14233: read-variable['Array',v3,-]}" ] 
BB4571 -> BB4572 [tailport=s, headport=n, headlabel="      4572"]
BB4571 -> BB4597 [tailport=s, headport=n, color=gray, headlabel="      4597"]
BB4572 [shape=record label="{14234: construct [-,v3,v2]}" ] 
BB4572 -> BB4573 [tailport=s, headport=n, headlabel="      4573"]
BB4572 -> BB4597 [tailport=s, headport=n, color=gray]
BB4573 [shape=record label="{14235: write-variable[v2,'globals']*|14236: typeof['source',v6]|14237: constant[\"string\",v7]|14238: ===[v6,v7,v5]|14239: if[v5](true-block:4574,false-block:4575)}" ] 
BB4573 -> BB4574 [tailport=s, headport=n, headlabel="      4574"]
BB4573 -> BB4575 [tailport=s, headport=n, headlabel="      4575"]
BB4573 -> BB4597 [tailport=s, headport=n, color=gray]
BB4574 [shape=record label="{14240: read-variable['acorn',v9,-]|14241: read-property[v9,'parse',-]|14242: \<variable-non-null-undef\>['acorn']|14243: read-variable['source',v10,-]|14244: new[v11]|14245: constant[6.0,v12]|14246: write-property[v11,'ecmaVersion',v12]|14247: constant[true,v13]|14248: write-property[v11,'allowReturnOutsideFunction',v13]}" ] 
BB4574 -> BB4576 [tailport=s, headport=n, headlabel="      4576"]
BB4574 -> BB4597 [tailport=s, headport=n, color=gray]
BB4575 [shape=record label="{14249: read-variable['source',v4,-]}" ] 
BB4575 -> BB4577 [tailport=s, headport=n, headlabel="      4577"]
BB4575 -> BB4597 [tailport=s, headport=n, color=gray]
BB4576 [shape=record label="{14250: call-acorn.parse [v9,'parse',v10,v11,v4]}" ] 
BB4576 -> BB4577 [tailport=s, headport=n]
BB4576 -> BB4597 [tailport=s, headport=n, color=gray]
BB4577 [shape=record label="{14251: write-variable[v4,'ast']*|14252: read-variable['ast',v9,-]|14253: if[v9](true-block:4578,false-block:4580)}" ] 
BB4577 -> BB4580 [tailport=s, headport=n, headlabel="      4580"]
BB4577 -> BB4578 [tailport=s, headport=n, headlabel="      4578"]
BB4577 -> BB4597 [tailport=s, headport=n, color=gray]
BB4578 [shape=record label="{14254: typeof['ast',v10]|14255: constant[\"object\",v11]|14256: ===[v10,v11,v9]|14257: if[v9](true-block:4579,false-block:4580)}" ] 
BB4578 -> BB4580 [tailport=s, headport=n]
BB4578 -> BB4579 [tailport=s, headport=n, headlabel="      4579"]
BB4578 -> BB4597 [tailport=s, headport=n, color=gray]
BB4579 [shape=record label="{14258: read-variable['ast',v14,-]|14259: read-property[v14,'type',v12]|14260: \<variable-non-null-undef\>['ast']|14261: constant[\"Program\",v13]|14262: ===[v12,v13,v9]}" ] 
BB4579 -> BB4580 [tailport=s, headport=n]
BB4579 -> BB4597 [tailport=s, headport=n, color=gray]
BB4580 [shape=record label="{14263: ![v9,v8]|14264: if[v8](true-block:4581,false-block:4584)}" ] 
BB4580 -> BB4581 [tailport=s, headport=n, headlabel="      4581"]
BB4580 -> BB4584 [tailport=s, headport=n, headlabel="      4584"]
BB4580 -> BB4597 [tailport=s, headport=n, color=gray]
BB4581 [shape=record label="{14265: read-variable['TypeError',v11,-]|14266: constant[\"Source must be either a string of JavaScript or an acorn AST\",v12]}" ] 
BB4581 -> BB4582 [tailport=s, headport=n, headlabel="      4582"]
BB4581 -> BB4597 [tailport=s, headport=n, color=gray]
BB4582 [shape=record label="{14267: construct [-,v11,v12,v10]}" ] 
BB4582 -> BB4583 [tailport=s, headport=n, headlabel="      4583"]
BB4582 -> BB4597 [tailport=s, headport=n, color=gray]
BB4583 [shape=record label="{14268: throw[v10]*}" ] 
BB4583 -> BB4584 [tailport=s, headport=n]
BB4583 -> BB4597 [tailport=s, headport=n, color=gray]
BB4584 [shape=record label="{14269: function-expr[function ( node ),v10]|14270: write-variable[v10,'declareFunction']*|14271: read-variable['walk',v12,-]|14272: read-property[v12,'ancestor',-]|14273: \<variable-non-null-undef\>['walk']|14274: read-variable['ast',v13,-]|14275: new[v14]|14276: function-expr[function ( node parents ),v15]|14277: write-property[v14,'VariableDeclaration',v15]|14278: function-expr[function ( node parents ),v16]|14279: write-property[v14,'FunctionDeclaration',v16]|14280: read-variable['declareFunction',v17,-]|14281: write-property[v14,'Function',v17]|14282: function-expr[function ( node ),v18]|14283: write-property[v14,'TryStatement',v18]}" ] 
BB4584 -> BB4585 [tailport=s, headport=n, headlabel="      4585"]
BB4584 -> BB4597 [tailport=s, headport=n, color=gray]
BB4585 [shape=record label="{14284: call-walk.ancestor [v12,'ancestor',v13,v14,-]*}" ] 
BB4585 -> BB4586 [tailport=s, headport=n, headlabel="      4586"]
BB4585 -> BB4597 [tailport=s, headport=n, color=gray]
BB4586 [shape=record label="{14285: read-variable['walk',v20,-]|14286: read-property[v20,'ancestor',-]|14287: \<variable-non-null-undef\>['walk']|14288: read-variable['ast',v21,-]|14289: new[v22]|14290: function-expr[function ( node parents ),v23]|14291: write-property[v22,'Identifier',v23]|14292: function-expr[function ( node parents ),v24]|14293: write-property[v22,'ThisExpression',v24]}" ] 
BB4586 -> BB4587 [tailport=s, headport=n, headlabel="      4587"]
BB4586 -> BB4597 [tailport=s, headport=n, color=gray]
BB4587 [shape=record label="{14294: call-walk.ancestor [v20,'ancestor',v21,v22,-]*}" ] 
BB4587 -> BB4588 [tailport=s, headport=n, headlabel="      4588"]
BB4587 -> BB4597 [tailport=s, headport=n, color=gray]
BB4588 [shape=record label="{14295: new[v25]|14296: write-variable[v25,'groupedGlobals']*|14297: read-variable['globals',v27,-]|14298: read-property[v27,'forEach',-]|14299: \<variable-non-null-undef\>['globals']|14300: function-expr[function ( node ),v28]}" ] 
BB4588 -> BB4589 [tailport=s, headport=n, headlabel="      4589"]
BB4588 -> BB4597 [tailport=s, headport=n, color=gray]
BB4589 [shape=record label="{14301: call-globals.forEach [v27,'forEach',v28,-]*}" ] 
BB4589 -> BB4590 [tailport=s, headport=n, headlabel="      4590"]
BB4589 -> BB4597 [tailport=s, headport=n, color=gray]
BB4590 [shape=record label="{14302: read-variable['Object',v34,-]|14303: read-property[v34,'keys',-]|14304: \<variable-non-null-undef\>['Object']|14305: read-variable['groupedGlobals',v35,-]}" ] 
BB4590 -> BB4591 [tailport=s, headport=n, headlabel="      4591"]
BB4590 -> BB4597 [tailport=s, headport=n, color=gray]
BB4591 [shape=record label="{14306: call-Object.keys [v34,'keys',v35,v32]}" ] 
BB4591 -> BB4592 [tailport=s, headport=n, headlabel="      4592"]
BB4591 -> BB4597 [tailport=s, headport=n, color=gray]
BB4592 [shape=record label="{14307: read-property[v32,'sort',-]}" ] 
BB4592 -> BB4593 [tailport=s, headport=n, headlabel="      4593"]
BB4592 -> BB4597 [tailport=s, headport=n, color=gray]
BB4593 [shape=record label="{14308: call-null [v32,'sort',v30]}" ] 
BB4593 -> BB4594 [tailport=s, headport=n, headlabel="      4594"]
BB4593 -> BB4597 [tailport=s, headport=n, color=gray]
BB4594 [shape=record label="{14309: read-property[v30,'map',-]|14310: function-expr[function ( name ),v36]}" ] 
BB4594 -> BB4595 [tailport=s, headport=n, headlabel="      4595"]
BB4594 -> BB4597 [tailport=s, headport=n, color=gray]
BB4595 [shape=record label="{14311: call-null [v30,'map',v36,v1]}" ] 
BB4595 -> BB4596 [tailport=s, headport=n, headlabel="      4596"]
BB4595 -> BB4597 [tailport=s, headport=n, color=gray]
BB4596 [shape=record label="{14312: return[v1]}" ] 
BB4597 [shape=record label="{14313: exceptional-return}" ] 
//#$~ 4551
}
