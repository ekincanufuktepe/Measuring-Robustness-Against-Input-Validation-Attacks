digraph {
rankdir="TD"
BB_entry781[shape=none,label=""];
BB_entry781 -> BB10350 [tailport=s, headport=n, headlabel="    10350"]
BB10350 [shape=record label="{34160: constant[undefined,v1]|34161: vardecl['ret']|34162: vardecl['key']}" ] 
BB10350 -> BB10351 [tailport=s, headport=n, headlabel="      10351"]
BB10351 [shape=record label="{34163: new[v2]|34164: write-variable[v2,'ret']*|34165: constant[\"production\",v4]|34166: constant[\"development\",v5]|34167: !==[v4,v5,v3]|34168: if[v3](true-block:10352,false-block:10353)}" ] 
BB10351 -> BB10352 [tailport=s, headport=n, headlabel="      10352"]
BB10351 -> BB10353 [tailport=s, headport=n, headlabel="      10353"]
BB10351 -> BB10373 [tailport=s, headport=n, color=gray, headlabel="      10373"]
BB10352 [shape=record label="{34169: read-variable['invariant',v7,v6]|34170: read-variable['obj',v9,-]|34171: read-variable['Object',v10,-]|34172: instanceof[v9,v10,v8]|34173: if[v8](true-block:10354,false-block:10357)}" ] 
BB10352 -> BB10357 [tailport=s, headport=n, headlabel="      10357"]
BB10352 -> BB10354 [tailport=s, headport=n, headlabel="      10354"]
BB10352 -> BB10373 [tailport=s, headport=n, color=gray]
BB10353 [shape=record label="{34174: read-variable['invariant',v7,v6]|34175: read-variable['obj',v9,-]|34176: read-variable['Object',v10,-]|34177: instanceof[v9,v10,v8]|34178: if[v8](true-block:10359,false-block:10362)}" ] 
BB10353 -> BB10362 [tailport=s, headport=n, headlabel="      10362"]
BB10353 -> BB10359 [tailport=s, headport=n, headlabel="      10359"]
BB10353 -> BB10373 [tailport=s, headport=n, color=gray]
BB10354 [shape=record label="{34179: read-variable['Array',v13,-]|34180: read-property[v13,'isArray',-]|34181: \<variable-non-null-undef\>['Array']|34182: read-variable['obj',v14,-]}" ] 
BB10354 -> BB10355 [tailport=s, headport=n, headlabel="      10355"]
BB10354 -> BB10373 [tailport=s, headport=n, color=gray]
BB10355 [shape=record label="{34183: call-Array.isArray [v13,'isArray',v14,v11]}" ] 
BB10355 -> BB10356 [tailport=s, headport=n, headlabel="      10356"]
BB10355 -> BB10373 [tailport=s, headport=n, color=gray]
BB10356 [shape=record label="{34184: ![v11,v8]}" ] 
BB10356 -> BB10357 [tailport=s, headport=n]
BB10356 -> BB10373 [tailport=s, headport=n, color=gray]
BB10357 [shape=record label="{34185: constant[\"keyMirror(...): Argument must be an object.\",v11]}" ] 
BB10357 -> BB10358 [tailport=s, headport=n, headlabel="      10358"]
BB10358 [shape=record label="{34186: call-invariant [v6,v7,v8,v11,-]}" ] 
BB10358 -> BB10363 [tailport=s, headport=n, headlabel="      10363"]
BB10358 -> BB10373 [tailport=s, headport=n, color=gray]
BB10359 [shape=record label="{34187: read-variable['Array',v13,-]|34188: read-property[v13,'isArray',-]|34189: \<variable-non-null-undef\>['Array']|34190: read-variable['obj',v14,-]}" ] 
BB10359 -> BB10360 [tailport=s, headport=n, headlabel="      10360"]
BB10359 -> BB10373 [tailport=s, headport=n, color=gray]
BB10360 [shape=record label="{34191: call-Array.isArray [v13,'isArray',v14,v11]}" ] 
BB10360 -> BB10361 [tailport=s, headport=n, headlabel="      10361"]
BB10360 -> BB10373 [tailport=s, headport=n, color=gray]
BB10361 [shape=record label="{34192: ![v11,v8]}" ] 
BB10361 -> BB10362 [tailport=s, headport=n]
BB10361 -> BB10373 [tailport=s, headport=n, color=gray]
BB10362 [shape=record label="{34193: call-invariant [v6,v7,v8,-]}" ] 
BB10362 -> BB10363 [tailport=s, headport=n]
BB10362 -> BB10373 [tailport=s, headport=n, color=gray]
BB10363 [shape=record label="{34194: read-variable['obj',v7,-]}" ] 
BB10363 -> BB10364 [tailport=s, headport=n, headlabel="      10364"]
BB10363 -> BB10373 [tailport=s, headport=n, color=gray]
BB10364 [shape=record label="{34195: begin-for-in[v7,v8]}" ] 
BB10364 -> BB10365 [tailport=s, headport=n, headlabel="      10365"]
BB10364 -> BB10373 [tailport=s, headport=n, color=gray]
BB10365 [shape=record label="{34196: has-next[v8,v9]|34197: if[v9](true-block:10366,false-block:10371)}" ] 
BB10365 -> BB10366 [tailport=s, headport=n, headlabel="      10366"]
BB10365 -> BB10371 [tailport=s, headport=n, headlabel="      10371"]
BB10366 [shape=record label="{34198: next-property[v8,v10]|34199: write-variable[v10,'key']|34200: read-variable['obj',v14,-]|34201: read-property[v14,'hasOwnProperty',-]|34202: \<variable-non-null-undef\>['obj']|34203: read-variable['key',v15,-]}" ] 
BB10366 -> BB10367 [tailport=s, headport=n, headlabel="      10367"]
BB10366 -> BB10373 [tailport=s, headport=n, color=gray]
BB10367 [shape=record label="{34204: call-obj.hasOwnProperty [v14,'hasOwnProperty',v15,v12]}" ] 
BB10367 -> BB10368 [tailport=s, headport=n, headlabel="      10368"]
BB10367 -> BB10373 [tailport=s, headport=n, color=gray]
BB10368 [shape=record label="{34205: ![v12,v11]|34206: if[v11](true-block:10370,false-block:10369)}" ] 
BB10368 -> BB10370 [tailport=s, headport=n, headlabel="      10370"]
BB10368 -> BB10369 [tailport=s, headport=n, headlabel="      10369"]
BB10368 -> BB10373 [tailport=s, headport=n, color=gray]
BB10369 [shape=record label="{34207: read-variable['ret',v17,-]|34208: read-variable['key',v18,-]|34209: read-variable['key',v16,-]|34210: write-property[v17,v18,v16]|34211: \<variable-non-null-undef\>['ret']*}" ] 
BB10369 -> BB10370 [tailport=s, headport=n]
BB10369 -> BB10373 [tailport=s, headport=n, color=gray]
BB10370 [shape=record label="{34212: end-for-in(begin-node:34195)}" ] 
BB10370 -> BB10365 [tailport=s, headport=n]
BB10371 [shape=record label="{34213: read-variable['ret',v1,-]}" ] 
BB10371 -> BB10372 [tailport=s, headport=n, headlabel="      10372"]
BB10371 -> BB10373 [tailport=s, headport=n, color=gray]
BB10372 [shape=record label="{34214: return[v1]}" ] 
BB10373 [shape=record label="{34215: exceptional-return}" ] 
//#$~ 18653
}
