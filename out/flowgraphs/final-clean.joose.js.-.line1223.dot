digraph {
rankdir="TD"
BB_entry129[shape=none,label=""];
BB_entry129 -> BB1072 [tailport=s, headport=n, headlabel="    1072"]
BB1072 [shape=record label="{3241: constant[undefined,v1]|3242: vardecl['meta']|3243: vardecl['name']|3244: vardecl['props']|3245: vardecl['setterName']|3246: vardecl['isa']|3247: vardecl['func']|3248: vardecl['checkerFunc']}" ] 
BB1072 -> BB1073 [tailport=s, headport=n, headlabel="      1073"]
BB1073 [shape=record label="{3249: read-variable['classObject',v3,-]|3250: read-property[v3,'meta',v2]|3251: \<variable-non-null-undef\>['classObject']|3252: write-variable[v2,'meta']*|3253: read-variable['this',v6,-]|3254: read-property[v6,'getName',-]}" ] 
BB1073 -> BB1074 [tailport=s, headport=n, headlabel="      1074"]
BB1073 -> BB1093 [tailport=s, headport=n, color=gray, headlabel="      1093"]
BB1074 [shape=record label="{3255: call-this.getName [v6,'getName',v4]}" ] 
BB1074 -> BB1075 [tailport=s, headport=n, headlabel="      1075"]
BB1074 -> BB1093 [tailport=s, headport=n, color=gray]
BB1075 [shape=record label="{3256: write-variable[v4,'name']*|3257: read-variable['this',v9,-]|3258: read-property[v9,'getProps',-]}" ] 
BB1075 -> BB1076 [tailport=s, headport=n, headlabel="      1076"]
BB1075 -> BB1093 [tailport=s, headport=n, color=gray]
BB1076 [shape=record label="{3259: call-this.getProps [v9,'getProps',v7]}" ] 
BB1076 -> BB1077 [tailport=s, headport=n, headlabel="      1077"]
BB1076 -> BB1093 [tailport=s, headport=n, color=gray]
BB1077 [shape=record label="{3260: write-variable[v7,'props']*|3261: read-variable['this',v12,-]|3262: read-property[v12,'setterName',-]}" ] 
BB1077 -> BB1078 [tailport=s, headport=n, headlabel="      1078"]
BB1077 -> BB1093 [tailport=s, headport=n, color=gray]
BB1078 [shape=record label="{3263: call-this.setterName [v12,'setterName',v10]}" ] 
BB1078 -> BB1079 [tailport=s, headport=n, headlabel="      1079"]
BB1078 -> BB1093 [tailport=s, headport=n, color=gray]
BB1079 [shape=record label="{3264: write-variable[v10,'setterName']*|3265: read-variable['meta',v15,-]|3266: read-property[v15,'can',-]|3267: \<variable-non-null-undef\>['meta']|3268: read-variable['setterName',v16,-]}" ] 
BB1079 -> BB1080 [tailport=s, headport=n, headlabel="      1080"]
BB1079 -> BB1093 [tailport=s, headport=n, color=gray]
BB1080 [shape=record label="{3269: call-meta.can [v15,'can',v16,v13]}" ] 
BB1080 -> BB1081 [tailport=s, headport=n, headlabel="      1081"]
BB1080 -> BB1093 [tailport=s, headport=n, color=gray]
BB1081 [shape=record label="{3270: if[v13](true-block:1082,false-block:1083)}" ] 
BB1081 -> BB1082 [tailport=s, headport=n, headlabel="      1082"]
BB1081 -> BB1083 [tailport=s, headport=n, headlabel="      1083"]
BB1082 [shape=record label="{3271: constant[undefined,v1]}" ] 
BB1082 -> BB1092 [tailport=s, headport=n, headlabel="      1092"]
BB1083 [shape=record label="{3272: read-variable['this',v19,-]|3273: read-property[v19,'getIsa',-]}" ] 
BB1083 -> BB1084 [tailport=s, headport=n, headlabel="      1084"]
BB1083 -> BB1093 [tailport=s, headport=n, color=gray]
BB1084 [shape=record label="{3274: call-this.getIsa [v19,'getIsa',v17]}" ] 
BB1084 -> BB1085 [tailport=s, headport=n, headlabel="      1085"]
BB1084 -> BB1093 [tailport=s, headport=n, color=gray]
BB1085 [shape=record label="{3275: write-variable[v17,'isa']*|3276: read-variable['isa',v20,-]|3277: if[v20](true-block:1086,false-block:1087)}" ] 
BB1085 -> BB1086 [tailport=s, headport=n, headlabel="      1086"]
BB1085 -> BB1087 [tailport=s, headport=n, headlabel="      1087"]
BB1085 -> BB1093 [tailport=s, headport=n, color=gray]
BB1086 [shape=record label="{3278: read-variable['Joose',v24,-]|3279: read-property[v24,'TypeChecker',v23]|3280: \<variable-non-null-undef\>['Joose']|3281: read-property[v23,'makeTypeChecker',-]|3282: \<property-non-null-undef\>[v24,'TypeChecker']|3283: read-variable['isa',v25,-]|3284: read-variable['props',v26,-]|3285: constant[\"attribute\",v27]|3286: read-variable['name',v28,-]}" ] 
BB1086 -> BB1088 [tailport=s, headport=n, headlabel="      1088"]
BB1086 -> BB1093 [tailport=s, headport=n, color=gray]
BB1087 [shape=record label="{3287: function-expr[function setter ( value ),v21]|3288: write-variable[v21,'func']*}" ] 
BB1087 -> BB1090 [tailport=s, headport=n, headlabel="      1090"]
BB1088 [shape=record label="{3289: call-Joose.TypeChecker.makeTypeChecker [v23,'makeTypeChecker',v25,v26,v27,v28,v21]}" ] 
BB1088 -> BB1089 [tailport=s, headport=n, headlabel="      1089"]
BB1088 -> BB1093 [tailport=s, headport=n, color=gray]
BB1089 [shape=record label="{3290: write-variable[v21,'checkerFunc']*|3291: function-expr[function setterWithIsaCheck ( value errorHandler ),v29]|3292: write-variable[v29,'func']*}" ] 
BB1089 -> BB1090 [tailport=s, headport=n]
BB1090 [shape=record label="{3293: read-variable['meta',v22,-]|3294: read-property[v22,'addMethod',-]|3295: \<variable-non-null-undef\>['meta']|3296: read-variable['setterName',v23,-]|3297: read-variable['func',v24,-]}" ] 
BB1090 -> BB1091 [tailport=s, headport=n, headlabel="      1091"]
BB1090 -> BB1093 [tailport=s, headport=n, color=gray]
BB1091 [shape=record label="{3298: call-meta.addMethod [v22,'addMethod',v23,v24,-]*}" ] 
BB1091 -> BB1092 [tailport=s, headport=n]
BB1091 -> BB1093 [tailport=s, headport=n, color=gray]
BB1092 [shape=record label="{3299: return[v1]}" ] 
BB1093 [shape=record label="{3300: exceptional-return}" ] 
//#$~ 1253
}
