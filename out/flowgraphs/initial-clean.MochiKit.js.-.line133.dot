digraph {
rankdir="TD"
BB_entry13[shape=none,label=""];
BB_entry13 -> BB509 [tailport=s, headport=n, headlabel="    509"]
BB509 [shape=record label="{4989: constant[undefined,v1]|4990: vardecl['i']|4991: vardecl['o']|4992: vardecl['k']|4993: vardecl['v']}" ] 
BB509 -> BB510 [tailport=s, headport=n, headlabel="      510"]
BB510 [shape=record label="{4994: read-variable['_20',v3,-]|4995: constant[null,v4]|4996: ===[v3,v4,v2]|4997: if[v2](true-block:512,false-block:511)}" ] 
BB510 -> BB512 [tailport=s, headport=n, headlabel="      512"]
BB510 -> BB511 [tailport=s, headport=n, headlabel="      511"]
BB510 -> BB532 [tailport=s, headport=n, color=gray, headlabel="      532"]
BB511 [shape=record label="{4998: read-variable['_20',v3,-]|4999: read-variable['undefined',v4,-]|5000: ===[v3,v4,v2]}" ] 
BB511 -> BB512 [tailport=s, headport=n]
BB511 -> BB532 [tailport=s, headport=n, color=gray]
BB512 [shape=record label="{5001: if[v2](true-block:513,false-block:514)}" ] 
BB512 -> BB513 [tailport=s, headport=n, headlabel="      513"]
BB512 -> BB514 [tailport=s, headport=n, headlabel="      514"]
BB513 [shape=record label="{5002: new[v3]|5003: write-variable[v3,'_20']*}" ] 
BB513 -> BB514 [tailport=s, headport=n]
BB514 [shape=record label="{5004: constant[1.0,v4]|5005: write-variable[v4,'i']*}" ] 
BB514 -> BB515 [tailport=s, headport=n, headlabel="      515"]
BB515 [shape=record label="{5006: read-variable['i',v5,-]|5007: read-variable['arguments',v7,-]|5008: read-property[v7,'length',v6]|5009: \<variable-non-null-undef\>['arguments']|5010: \<[v5,v6,v3]|5011: if[v3](true-block:516,false-block:517)}" ] 
BB515 -> BB516 [tailport=s, headport=n, headlabel="      516"]
BB515 -> BB517 [tailport=s, headport=n, headlabel="      517"]
BB515 -> BB532 [tailport=s, headport=n, color=gray]
BB516 [shape=record label="{5012: read-variable['arguments',v9,-]|5013: read-variable['i',v10,-]|5014: read-property[v9,v10,v8]|5015: \<variable-non-null-undef\>['arguments']|5016: write-variable[v8,'o']*|5017: typeof['o',v12]|5018: constant[\"undefined\",v13]|5019: !=[v12,v13,v11]|5020: if[v11](true-block:518,false-block:519)}" ] 
BB516 -> BB519 [tailport=s, headport=n, headlabel="      519"]
BB516 -> BB518 [tailport=s, headport=n, headlabel="      518"]
BB516 -> BB532 [tailport=s, headport=n, color=gray]
BB517 [shape=record label="{5021: read-variable['_20',v1,-]}" ] 
BB517 -> BB531 [tailport=s, headport=n, headlabel="      531"]
BB517 -> BB532 [tailport=s, headport=n, color=gray]
BB518 [shape=record label="{5022: read-variable['o',v14,-]|5023: constant[null,v15]|5024: !==[v14,v15,v11]}" ] 
BB518 -> BB519 [tailport=s, headport=n]
BB518 -> BB532 [tailport=s, headport=n, color=gray]
BB519 [shape=record label="{5025: if[v11](true-block:520,false-block:530)}" ] 
BB519 -> BB520 [tailport=s, headport=n, headlabel="      520"]
BB519 -> BB530 [tailport=s, headport=n, headlabel="      530"]
BB520 [shape=record label="{5026: read-variable['o',v15,-]}" ] 
BB520 -> BB521 [tailport=s, headport=n, headlabel="      521"]
BB520 -> BB532 [tailport=s, headport=n, color=gray]
BB521 [shape=record label="{5027: begin-for-in[v15,v16]}" ] 
BB521 -> BB522 [tailport=s, headport=n, headlabel="      522"]
BB521 -> BB532 [tailport=s, headport=n, color=gray]
BB522 [shape=record label="{5028: has-next[v16,v17]|5029: if[v17](true-block:523,false-block:530)}" ] 
BB522 -> BB523 [tailport=s, headport=n, headlabel="      523"]
BB522 -> BB530 [tailport=s, headport=n]
BB523 [shape=record label="{5030: next-property[v16,v18]|5031: write-variable[v18,'k']|5032: read-variable['o',v20,-]|5033: read-variable['k',v21,-]|5034: read-property[v20,v21,v19]|5035: \<variable-non-null-undef\>['o']|5036: write-variable[v19,'v']*|5037: read-variable['_20',v26,-]|5038: read-variable['k',v27,-]|5039: read-property[v26,v27,v25]|5040: \<variable-non-null-undef\>['_20']|5041: typeof[v25,v23]|5042: constant[\"object\",v24]|5043: ==[v23,v24,v22]|5044: if[v22](true-block:524,false-block:525)}" ] 
BB523 -> BB525 [tailport=s, headport=n, headlabel="      525"]
BB523 -> BB524 [tailport=s, headport=n, headlabel="      524"]
BB523 -> BB532 [tailport=s, headport=n, color=gray]
BB524 [shape=record label="{5045: typeof['v',v28]|5046: constant[\"object\",v29]|5047: ==[v28,v29,v22]}" ] 
BB524 -> BB525 [tailport=s, headport=n]
BB524 -> BB532 [tailport=s, headport=n, color=gray]
BB525 [shape=record label="{5048: if[v22](true-block:526,false-block:527)}" ] 
BB525 -> BB526 [tailport=s, headport=n, headlabel="      526"]
BB525 -> BB527 [tailport=s, headport=n, headlabel="      527"]
BB526 [shape=record label="{5049: read-variable['arguments',v29,-]|5050: read-property[v29,'callee',-]|5051: \<variable-non-null-undef\>['arguments']|5052: read-variable['_20',v31,-]|5053: read-variable['k',v32,-]|5054: read-property[v31,v32,v30]|5055: \<variable-non-null-undef\>['_20']|5056: read-variable['v',v33,-]}" ] 
BB526 -> BB528 [tailport=s, headport=n, headlabel="      528"]
BB526 -> BB532 [tailport=s, headport=n, color=gray]
BB527 [shape=record label="{5057: read-variable['_20',v29,-]|5058: read-variable['k',v30,-]|5059: read-variable['v',v28,-]|5060: write-property[v29,v30,v28]|5061: \<variable-non-null-undef\>['_20']*}" ] 
BB527 -> BB529 [tailport=s, headport=n, headlabel="      529"]
BB527 -> BB532 [tailport=s, headport=n, color=gray]
BB528 [shape=record label="{5062: call-arguments.callee [v29,'callee',v30,v33,-]*}" ] 
BB528 -> BB529 [tailport=s, headport=n]
BB528 -> BB532 [tailport=s, headport=n, color=gray]
BB529 [shape=record label="{5063: end-for-in(begin-node:5027)}" ] 
BB529 -> BB522 [tailport=s, headport=n]
BB530 [shape=record label="{5064: constant[1.0,v14]|5065: read-variable['i',v15,-]|5066: +[v15,v16]|5067: +[v16,v14,v17]|5068: write-variable[v17,'i']}" ] 
BB530 -> BB515 [tailport=s, headport=n]
BB530 -> BB532 [tailport=s, headport=n, color=gray]
BB531 [shape=record label="{5069: return[v1]}" ] 
BB532 [shape=record label="{5070: exceptional-return}" ] 
//#$~ 150
}
