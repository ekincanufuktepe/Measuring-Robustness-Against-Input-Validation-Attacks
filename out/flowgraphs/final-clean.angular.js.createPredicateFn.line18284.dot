digraph {
rankdir="TD"
BB_entry960[shape=none,label=""];
BB_entry960 -> BB12373 [tailport=s, headport=n, headlabel="    12373"]
BB12373 [shape=record label="{32398: constant[undefined,v1]|32399: vardecl['shouldMatchPrimitives']|32400: vardecl['predicateFn']}" ] 
BB12373 -> BB12374 [tailport=s, headport=n, headlabel="      12374"]
BB12374 [shape=record label="{32401: read-variable['isObject',v4,v3]|32402: read-variable['expression',v5,-]}" ] 
BB12374 -> BB12375 [tailport=s, headport=n, headlabel="      12375"]
BB12374 -> BB12386 [tailport=s, headport=n, color=gray, headlabel="      12386"]
BB12375 [shape=record label="{32403: call-isObject [v3,v4,v5,v2]}" ] 
BB12375 -> BB12376 [tailport=s, headport=n, headlabel="      12376"]
BB12375 -> BB12386 [tailport=s, headport=n, color=gray]
BB12376 [shape=record label="{32404: if[v2](true-block:12377,false-block:12378)}" ] 
BB12376 -> BB12378 [tailport=s, headport=n, headlabel="      12378"]
BB12376 -> BB12377 [tailport=s, headport=n, headlabel="      12377"]
BB12377 [shape=record label="{32405: constant[\"$\",v6]|32406: read-variable['expression',v7,-]|32407: in[v6,v7,v2]}" ] 
BB12377 -> BB12378 [tailport=s, headport=n]
BB12377 -> BB12386 [tailport=s, headport=n, color=gray]
BB12378 [shape=record label="{32408: write-variable[v2,'shouldMatchPrimitives']*|32409: read-variable['comparator',v7,-]|32410: constant[true,v8]|32411: ===[v7,v8,v6]|32412: if[v6](true-block:12379,false-block:12380)}" ] 
BB12378 -> BB12379 [tailport=s, headport=n, headlabel="      12379"]
BB12378 -> BB12380 [tailport=s, headport=n, headlabel="      12380"]
BB12378 -> BB12386 [tailport=s, headport=n, color=gray]
BB12379 [shape=record label="{32413: read-variable['equals',v9,-]|32414: write-variable[v9,'comparator']*}" ] 
BB12379 -> BB12384 [tailport=s, headport=n, headlabel="      12384"]
BB12379 -> BB12386 [tailport=s, headport=n, color=gray]
BB12380 [shape=record label="{32415: read-variable['isFunction',v12,v11]|32416: read-variable['comparator',v13,-]}" ] 
BB12380 -> BB12381 [tailport=s, headport=n, headlabel="      12381"]
BB12380 -> BB12386 [tailport=s, headport=n, color=gray]
BB12381 [shape=record label="{32417: call-isFunction [v11,v12,v13,v10]}" ] 
BB12381 -> BB12382 [tailport=s, headport=n, headlabel="      12382"]
BB12381 -> BB12386 [tailport=s, headport=n, color=gray]
BB12382 [shape=record label="{32418: ![v10,v9]|32419: if[v9](true-block:12383,false-block:12384)}" ] 
BB12382 -> BB12383 [tailport=s, headport=n, headlabel="      12383"]
BB12382 -> BB12384 [tailport=s, headport=n]
BB12382 -> BB12386 [tailport=s, headport=n, color=gray]
BB12383 [shape=record label="{32420: function-expr[function ( actual expected ),v14]|32421: write-variable[v14,'comparator']*}" ] 
BB12383 -> BB12384 [tailport=s, headport=n]
BB12384 [shape=record label="{32422: function-expr[function ( item ),v9]|32423: write-variable[v9,'predicateFn']*|32424: read-variable['predicateFn',v1,-]}" ] 
BB12384 -> BB12385 [tailport=s, headport=n, headlabel="      12385"]
BB12384 -> BB12386 [tailport=s, headport=n, color=gray]
BB12385 [shape=record label="{32425: return[v1]}" ] 
BB12386 [shape=record label="{32426: exceptional-return}" ] 
//#$~ 18318
}
