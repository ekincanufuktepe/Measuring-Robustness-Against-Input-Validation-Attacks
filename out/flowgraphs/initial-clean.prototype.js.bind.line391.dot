digraph {
rankdir="TD"
BB_entry43[shape=none,label=""];
BB_entry43 -> BB605 [tailport=s, headport=n, headlabel="    605"]
BB605 [shape=record label="{2075: constant[undefined,v1]|2076: vardecl['nop']|2077: vardecl['__method']|2078: vardecl['args']|2079: vardecl['bound']}" ] 
BB605 -> BB606 [tailport=s, headport=n, headlabel="      606"]
BB606 [shape=record label="{2080: read-variable['arguments',v5,-]|2081: read-property[v5,'length',v3]|2082: \<variable-non-null-undef\>['arguments']|2083: constant[2.0,v4]|2084: \<[v3,v4,v2]|2085: if[v2](true-block:607,false-block:609)}" ] 
BB606 -> BB609 [tailport=s, headport=n, headlabel="      609"]
BB606 -> BB607 [tailport=s, headport=n, headlabel="      607"]
BB606 -> BB623 [tailport=s, headport=n, color=gray, headlabel="      623"]
BB607 [shape=record label="{2086: read-variable['Object',v7,-]|2087: read-property[v7,'isUndefined',-]|2088: \<variable-non-null-undef\>['Object']|2089: read-variable['arguments',v9,-]|2090: constant[0.0,v10]|2091: read-property[v9,v10,v8]|2092: \<variable-non-null-undef\>['arguments']}" ] 
BB607 -> BB608 [tailport=s, headport=n, headlabel="      608"]
BB607 -> BB623 [tailport=s, headport=n, color=gray]
BB608 [shape=record label="{2093: call-Object.isUndefined [v7,'isUndefined',v8,v2]}" ] 
BB608 -> BB609 [tailport=s, headport=n]
BB608 -> BB623 [tailport=s, headport=n, color=gray]
BB609 [shape=record label="{2094: if[v2](true-block:610,false-block:611)}" ] 
BB609 -> BB610 [tailport=s, headport=n, headlabel="      610"]
BB609 -> BB611 [tailport=s, headport=n, headlabel="      611"]
BB610 [shape=record label="{2095: read-variable['this',v1,-]}" ] 
BB610 -> BB622 [tailport=s, headport=n, headlabel="      622"]
BB610 -> BB623 [tailport=s, headport=n, color=gray]
BB611 [shape=record label="{2096: read-variable['Object',v9,-]|2097: read-property[v9,'isFunction',-]|2098: \<variable-non-null-undef\>['Object']|2099: read-variable['this',v10,-]}" ] 
BB611 -> BB612 [tailport=s, headport=n, headlabel="      612"]
BB611 -> BB623 [tailport=s, headport=n, color=gray]
BB612 [shape=record label="{2100: call-Object.isFunction [v9,'isFunction',v10,v7]}" ] 
BB612 -> BB613 [tailport=s, headport=n, headlabel="      613"]
BB612 -> BB623 [tailport=s, headport=n, color=gray]
BB613 [shape=record label="{2101: ![v7,v6]|2102: if[v6](true-block:614,false-block:617)}" ] 
BB613 -> BB614 [tailport=s, headport=n, headlabel="      614"]
BB613 -> BB617 [tailport=s, headport=n, headlabel="      617"]
BB613 -> BB623 [tailport=s, headport=n, color=gray]
BB614 [shape=record label="{2103: read-variable['TypeError',v12,-]|2104: constant[\"The object is not callable.\",v13]}" ] 
BB614 -> BB615 [tailport=s, headport=n, headlabel="      615"]
BB614 -> BB623 [tailport=s, headport=n, color=gray]
BB615 [shape=record label="{2105: construct [-,v12,v13,v11]}" ] 
BB615 -> BB616 [tailport=s, headport=n, headlabel="      616"]
BB615 -> BB623 [tailport=s, headport=n, color=gray]
BB616 [shape=record label="{2106: throw[v11]*}" ] 
BB616 -> BB617 [tailport=s, headport=n]
BB616 -> BB623 [tailport=s, headport=n, color=gray]
BB617 [shape=record label="{2107: function-expr[function ( ),v11]|2108: write-variable[v11,'nop']*|2109: read-variable['this',v12,-]|2110: write-variable[v12,'__method']*|2111: read-variable['slice',v15,-]|2112: read-property[v15,'call',-]|2113: \<variable-non-null-undef\>['slice']|2114: read-variable['arguments',v16,-]|2115: constant[1.0,v17]}" ] 
BB617 -> BB618 [tailport=s, headport=n, headlabel="      618"]
BB617 -> BB623 [tailport=s, headport=n, color=gray]
BB618 [shape=record label="{2116: call-slice.call [v15,'call',v16,v17,v13]}" ] 
BB618 -> BB619 [tailport=s, headport=n, headlabel="      619"]
BB618 -> BB623 [tailport=s, headport=n, color=gray]
BB619 [shape=record label="{2117: write-variable[v13,'args']*|2118: function-expr[function ( ),v18]|2119: write-variable[v18,'bound']*|2120: read-variable['nop',v20,-]|2121: read-variable['this',v21,-]|2122: read-property[v21,'prototype',v19]|2123: write-property[v20,'prototype',v19]|2124: \<variable-non-null-undef\>['nop']*|2125: read-variable['bound',v23,-]|2126: read-variable['nop',v24,-]}" ] 
BB619 -> BB620 [tailport=s, headport=n, headlabel="      620"]
BB619 -> BB623 [tailport=s, headport=n, color=gray]
BB620 [shape=record label="{2127: construct [-,v24,v22]}" ] 
BB620 -> BB621 [tailport=s, headport=n, headlabel="      621"]
BB620 -> BB623 [tailport=s, headport=n, color=gray]
BB621 [shape=record label="{2128: write-property[v23,'prototype',v22]|2129: \<variable-non-null-undef\>['bound']*|2130: read-variable['bound',v1,-]}" ] 
BB621 -> BB622 [tailport=s, headport=n]
BB621 -> BB623 [tailport=s, headport=n, color=gray]
BB622 [shape=record label="{2131: return[v1]}" ] 
BB623 [shape=record label="{2132: exceptional-return}" ] 
//#$~ 410
}
