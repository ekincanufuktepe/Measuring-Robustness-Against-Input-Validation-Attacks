digraph {
rankdir="TD"
BB_entry694[shape=none,label=""];
BB_entry694 -> BB9829 [tailport=s, headport=n, headlabel="    9829"]
BB9829 [shape=record label="{28960: constant[undefined,v1]|28961: vardecl['value']|28962: vardecl['cStartIdx']|28963: vardecl['cEndIdx']}" ] 
BB9829 -> BB9830 [tailport=s, headport=n, headlabel="      9830"]
BB9830 [shape=record label="{28964: read-variable['config',v4,-]|28965: read-property[v4,'useCommentedJson',v3]|28966: \<variable-non-null-undef\>['config']|28967: ![v3,v2]|28968: if[v2](true-block:9831,false-block:9833)}" ] 
BB9830 -> BB9831 [tailport=s, headport=n, headlabel="      9831"]
BB9830 -> BB9833 [tailport=s, headport=n, headlabel="      9833"]
BB9830 -> BB9847 [tailport=s, headport=n, color=gray, headlabel="      9847"]
BB9831 [shape=record label="{28969: read-variable['console',v6,-]|28970: read-property[v6,'warn',-]|28971: \<variable-non-null-undef\>['console']|28972: constant[\"Consider using the standard mimetype:application/json.\",v14]|28973: constant[\" json-commenting can introduce security issues. To\",v15]|28974: +[v14,v15,v12]|28975: constant[\" decrease the chances of hijacking, use the standard the 'json' handler and\",v13]|28976: +[v12,v13,v10]|28977: constant[\" prefix your json with: \\\{\\\}&&\\n\",v11]|28978: +[v10,v11,v8]|28979: constant[\"Use djConfig.useCommentedJson=true to turn off this message.\",v9]|28980: +[v8,v9,v7]}" ] 
BB9831 -> BB9832 [tailport=s, headport=n, headlabel="      9832"]
BB9831 -> BB9847 [tailport=s, headport=n, color=gray]
BB9832 [shape=record label="{28981: call-console.warn [v6,'warn',v7,-]*}" ] 
BB9832 -> BB9833 [tailport=s, headport=n]
BB9832 -> BB9847 [tailport=s, headport=n, color=gray]
BB9833 [shape=record label="{28982: read-variable['xhr',v6,-]|28983: read-property[v6,'responseText',v5]|28984: \<variable-non-null-undef\>['xhr']|28985: write-variable[v5,'value']*|28986: read-variable['value',v9,-]|28987: read-property[v9,'indexOf',-]|28988: \<variable-non-null-undef\>['value']|28989: constant[\"/*\",v10]}" ] 
BB9833 -> BB9834 [tailport=s, headport=n, headlabel="      9834"]
BB9833 -> BB9847 [tailport=s, headport=n, color=gray]
BB9834 [shape=record label="{28990: call-value.indexOf [v9,'indexOf',v10,v7]}" ] 
BB9834 -> BB9835 [tailport=s, headport=n, headlabel="      9835"]
BB9834 -> BB9847 [tailport=s, headport=n, color=gray]
BB9835 [shape=record label="{28991: write-variable[v7,'cStartIdx']*|28992: read-variable['value',v13,-]|28993: read-property[v13,'lastIndexOf',-]|28994: \<variable-non-null-undef\>['value']|28995: constant[\"*/\",v14]}" ] 
BB9835 -> BB9836 [tailport=s, headport=n, headlabel="      9836"]
BB9835 -> BB9847 [tailport=s, headport=n, color=gray]
BB9836 [shape=record label="{28996: call-value.lastIndexOf [v13,'lastIndexOf',v14,v11]}" ] 
BB9836 -> BB9837 [tailport=s, headport=n, headlabel="      9837"]
BB9836 -> BB9847 [tailport=s, headport=n, color=gray]
BB9837 [shape=record label="{28997: write-variable[v11,'cEndIdx']*|28998: read-variable['cStartIdx',v16,-]|28999: constant[-1.0,v17]|29000: ==[v16,v17,v15]|29001: if[v15](true-block:9839,false-block:9838)}" ] 
BB9837 -> BB9839 [tailport=s, headport=n, headlabel="      9839"]
BB9837 -> BB9838 [tailport=s, headport=n, headlabel="      9838"]
BB9837 -> BB9847 [tailport=s, headport=n, color=gray]
BB9838 [shape=record label="{29002: read-variable['cEndIdx',v16,-]|29003: constant[-1.0,v17]|29004: ==[v16,v17,v15]}" ] 
BB9838 -> BB9839 [tailport=s, headport=n]
BB9838 -> BB9847 [tailport=s, headport=n, color=gray]
BB9839 [shape=record label="{29005: if[v15](true-block:9840,false-block:9843)}" ] 
BB9839 -> BB9840 [tailport=s, headport=n, headlabel="      9840"]
BB9839 -> BB9843 [tailport=s, headport=n, headlabel="      9843"]
BB9840 [shape=record label="{29006: read-variable['Error',v17,-]|29007: constant[\"JSON was not comment filtered\",v18]}" ] 
BB9840 -> BB9841 [tailport=s, headport=n, headlabel="      9841"]
BB9840 -> BB9847 [tailport=s, headport=n, color=gray]
BB9841 [shape=record label="{29008: construct [-,v17,v18,v16]}" ] 
BB9841 -> BB9842 [tailport=s, headport=n, headlabel="      9842"]
BB9841 -> BB9847 [tailport=s, headport=n, color=gray]
BB9842 [shape=record label="{29009: throw[v16]*}" ] 
BB9842 -> BB9843 [tailport=s, headport=n]
BB9842 -> BB9847 [tailport=s, headport=n, color=gray]
BB9843 [shape=record label="{29010: read-variable['json',v17,-]|29011: read-property[v17,'fromJson',-]|29012: \<variable-non-null-undef\>['json']|29013: read-variable['value',v20,-]|29014: read-property[v20,'substring',-]|29015: \<variable-non-null-undef\>['value']|29016: read-variable['cStartIdx',v22,-]|29017: constant[2.0,v23]|29018: +[v22,v23,v21]|29019: read-variable['cEndIdx',v24,-]}" ] 
BB9843 -> BB9844 [tailport=s, headport=n, headlabel="      9844"]
BB9843 -> BB9847 [tailport=s, headport=n, color=gray]
BB9844 [shape=record label="{29020: call-value.substring [v20,'substring',v21,v24,v18]}" ] 
BB9844 -> BB9845 [tailport=s, headport=n, headlabel="      9845"]
BB9844 -> BB9847 [tailport=s, headport=n, color=gray]
BB9845 [shape=record label="{29021: call-json.fromJson [v17,'fromJson',v18,v1]}" ] 
BB9845 -> BB9846 [tailport=s, headport=n, headlabel="      9846"]
BB9845 -> BB9847 [tailport=s, headport=n, color=gray]
BB9846 [shape=record label="{29022: return[v1]}" ] 
BB9847 [shape=record label="{29023: exceptional-return}" ] 
//#$~ 13701
}
