digraph {
rankdir="TD"
BB_entry398[shape=none,label=""];
BB_entry398 -> BB7491 [tailport=s, headport=n, headlabel="    7491"]
BB7491 [shape=record label="{21946: constant[undefined,v1]|21947: vardecl['block']}" ] 
BB7491 -> BB7492 [tailport=s, headport=n, headlabel="      7492"]
BB7492 [shape=record label="{21948: read-variable['node',v3,-]|21949: read-variable['Array',v4,-]}" ] 
BB7492 -> BB7493 [tailport=s, headport=n, headlabel="      7493"]
BB7492 -> BB7536 [tailport=s, headport=n, color=gray, headlabel="      7536"]
BB7493 [shape=record label="{21950: construct [-,v4,v2]}" ] 
BB7493 -> BB7494 [tailport=s, headport=n, headlabel="      7494"]
BB7493 -> BB7536 [tailport=s, headport=n, color=gray]
BB7494 [shape=record label="{21951: write-property[v3,'blocks',v2]|21952: \<variable-non-null-undef\>['node']*}" ] 
BB7494 -> BB7495 [tailport=s, headport=n, headlabel="      7495"]
BB7494 -> BB7536 [tailport=s, headport=n, color=gray]
BB7495 [shape=record label="{21953: read-variable['tokType',v6,-]|21954: read-variable['_for',v7,-]|21955: ===[v6,v7,v5]|21956: if[v5](true-block:7496,false-block:7497)}" ] 
BB7495 -> BB7496 [tailport=s, headport=n, headlabel="      7496"]
BB7495 -> BB7497 [tailport=s, headport=n, headlabel="      7497"]
BB7495 -> BB7536 [tailport=s, headport=n, color=gray]
BB7496 [shape=record label="{21957: read-variable['startNode',v10,v9]}" ] 
BB7496 -> BB7498 [tailport=s, headport=n, headlabel="      7498"]
BB7496 -> BB7536 [tailport=s, headport=n, color=gray]
BB7497 [shape=record label="{21958: read-variable['node',v9,-]|21959: read-variable['eat',v12,v11]|21960: read-variable['_if',v13,-]}" ] 
BB7497 -> BB7522 [tailport=s, headport=n, headlabel="      7522"]
BB7497 -> BB7536 [tailport=s, headport=n, color=gray]
BB7498 [shape=record label="{21961: call-startNode [v9,v10,v8]}" ] 
BB7498 -> BB7499 [tailport=s, headport=n, headlabel="      7499"]
BB7498 -> BB7536 [tailport=s, headport=n, color=gray]
BB7499 [shape=record label="{21962: write-variable[v8,'block']*|21963: read-variable['next',v12,v11]}" ] 
BB7499 -> BB7500 [tailport=s, headport=n, headlabel="      7500"]
BB7499 -> BB7536 [tailport=s, headport=n, color=gray]
BB7500 [shape=record label="{21964: call-next [v11,v12,-]*}" ] 
BB7500 -> BB7501 [tailport=s, headport=n, headlabel="      7501"]
BB7500 -> BB7536 [tailport=s, headport=n, color=gray]
BB7501 [shape=record label="{21965: read-variable['expect',v14,v13]|21966: read-variable['_parenL',v15,-]}" ] 
BB7501 -> BB7502 [tailport=s, headport=n, headlabel="      7502"]
BB7501 -> BB7536 [tailport=s, headport=n, color=gray]
BB7502 [shape=record label="{21967: call-expect [v13,v14,v15,-]*}" ] 
BB7502 -> BB7503 [tailport=s, headport=n, headlabel="      7503"]
BB7502 -> BB7536 [tailport=s, headport=n, color=gray]
BB7503 [shape=record label="{21968: read-variable['block',v17,-]|21969: read-variable['toAssignable',v19,v18]|21970: read-variable['parseExprAtom',v22,v21]}" ] 
BB7503 -> BB7504 [tailport=s, headport=n, headlabel="      7504"]
BB7503 -> BB7536 [tailport=s, headport=n, color=gray]
BB7504 [shape=record label="{21971: call-parseExprAtom [v21,v22,v20]}" ] 
BB7504 -> BB7505 [tailport=s, headport=n, headlabel="      7505"]
BB7504 -> BB7536 [tailport=s, headport=n, color=gray]
BB7505 [shape=record label="{21972: call-toAssignable [v18,v19,v20,v16]}" ] 
BB7505 -> BB7506 [tailport=s, headport=n, headlabel="      7506"]
BB7505 -> BB7536 [tailport=s, headport=n, color=gray]
BB7506 [shape=record label="{21973: write-property[v17,'left',v16]|21974: \<variable-non-null-undef\>['block']*|21975: read-variable['checkLVal',v24,v23]|21976: read-variable['block',v26,-]|21977: read-property[v26,'left',v25]|21978: \<variable-non-null-undef\>['block']|21979: constant[true,v27]}" ] 
BB7506 -> BB7507 [tailport=s, headport=n, headlabel="      7507"]
BB7506 -> BB7536 [tailport=s, headport=n, color=gray]
BB7507 [shape=record label="{21980: call-checkLVal [v23,v24,v25,v27,-]*}" ] 
BB7507 -> BB7508 [tailport=s, headport=n, headlabel="      7508"]
BB7507 -> BB7536 [tailport=s, headport=n, color=gray]
BB7508 [shape=record label="{21981: read-variable['tokType',v29,-]|21982: read-variable['_name',v30,-]|21983: !==[v29,v30,v28]|21984: if[v28](true-block:7510,false-block:7509)}" ] 
BB7508 -> BB7510 [tailport=s, headport=n, headlabel="      7510"]
BB7508 -> BB7509 [tailport=s, headport=n, headlabel="      7509"]
BB7508 -> BB7536 [tailport=s, headport=n, color=gray]
BB7509 [shape=record label="{21985: read-variable['tokVal',v29,-]|21986: constant[\"of\",v30]|21987: !==[v29,v30,v28]}" ] 
BB7509 -> BB7510 [tailport=s, headport=n]
BB7509 -> BB7536 [tailport=s, headport=n, color=gray]
BB7510 [shape=record label="{21988: if[v28](true-block:7511,false-block:7513)}" ] 
BB7510 -> BB7511 [tailport=s, headport=n, headlabel="      7511"]
BB7510 -> BB7513 [tailport=s, headport=n, headlabel="      7513"]
BB7511 [shape=record label="{21989: read-variable['unexpected',v30,v29]}" ] 
BB7511 -> BB7512 [tailport=s, headport=n, headlabel="      7512"]
BB7511 -> BB7536 [tailport=s, headport=n, color=gray]
BB7512 [shape=record label="{21990: call-unexpected [v29,v30,-]*}" ] 
BB7512 -> BB7513 [tailport=s, headport=n]
BB7512 -> BB7536 [tailport=s, headport=n, color=gray]
BB7513 [shape=record label="{21991: read-variable['next',v30,v29]}" ] 
BB7513 -> BB7514 [tailport=s, headport=n, headlabel="      7514"]
BB7513 -> BB7536 [tailport=s, headport=n, color=gray]
BB7514 [shape=record label="{21992: call-next [v29,v30,-]*}" ] 
BB7514 -> BB7515 [tailport=s, headport=n, headlabel="      7515"]
BB7514 -> BB7536 [tailport=s, headport=n, color=gray]
BB7515 [shape=record label="{21993: read-variable['block',v32,-]|21994: constant[true,v31]|21995: write-property[v32,'of',v31]|21996: \<variable-non-null-undef\>['block']*|21997: read-variable['block',v34,-]|21998: read-variable['parseExpression',v36,v35]}" ] 
BB7515 -> BB7516 [tailport=s, headport=n, headlabel="      7516"]
BB7515 -> BB7536 [tailport=s, headport=n, color=gray]
BB7516 [shape=record label="{21999: call-parseExpression [v35,v36,v33]}" ] 
BB7516 -> BB7517 [tailport=s, headport=n, headlabel="      7517"]
BB7516 -> BB7536 [tailport=s, headport=n, color=gray]
BB7517 [shape=record label="{22000: write-property[v34,'right',v33]|22001: \<variable-non-null-undef\>['block']*|22002: read-variable['expect',v38,v37]|22003: read-variable['_parenR',v39,-]}" ] 
BB7517 -> BB7518 [tailport=s, headport=n, headlabel="      7518"]
BB7517 -> BB7536 [tailport=s, headport=n, color=gray]
BB7518 [shape=record label="{22004: call-expect [v37,v38,v39,-]*}" ] 
BB7518 -> BB7519 [tailport=s, headport=n, headlabel="      7519"]
BB7518 -> BB7536 [tailport=s, headport=n, color=gray]
BB7519 [shape=record label="{22005: read-variable['node',v42,-]|22006: read-property[v42,'blocks',v41]|22007: \<variable-non-null-undef\>['node']|22008: read-property[v41,'push',-]|22009: \<property-non-null-undef\>[v42,'blocks']|22010: read-variable['finishNode',v45,v44]|22011: read-variable['block',v46,-]|22012: constant[\"ComprehensionBlock\",v47]}" ] 
BB7519 -> BB7520 [tailport=s, headport=n, headlabel="      7520"]
BB7519 -> BB7536 [tailport=s, headport=n, color=gray]
BB7520 [shape=record label="{22013: call-finishNode [v44,v45,v46,v47,v43]}" ] 
BB7520 -> BB7521 [tailport=s, headport=n, headlabel="      7521"]
BB7520 -> BB7536 [tailport=s, headport=n, color=gray]
BB7521 [shape=record label="{22014: call-node.blocks.push [v41,'push',v43,-]*}" ] 
BB7521 -> BB7495 [tailport=s, headport=n]
BB7521 -> BB7536 [tailport=s, headport=n, color=gray]
BB7522 [shape=record label="{22015: call-eat [v11,v12,v13,v10]}" ] 
BB7522 -> BB7523 [tailport=s, headport=n, headlabel="      7523"]
BB7522 -> BB7536 [tailport=s, headport=n, color=gray]
BB7523 [shape=record label="{22016: if[v10](true-block:7524,false-block:7525)}" ] 
BB7523 -> BB7524 [tailport=s, headport=n, headlabel="      7524"]
BB7523 -> BB7525 [tailport=s, headport=n, headlabel="      7525"]
BB7524 [shape=record label="{22017: read-variable['parseParenExpression',v15,v14]}" ] 
BB7524 -> BB7526 [tailport=s, headport=n, headlabel="      7526"]
BB7524 -> BB7536 [tailport=s, headport=n, color=gray]
BB7525 [shape=record label="{22018: constant[null,v8]}" ] 
BB7525 -> BB7527 [tailport=s, headport=n, headlabel="      7527"]
BB7526 [shape=record label="{22019: call-parseParenExpression [v14,v15,v8]}" ] 
BB7526 -> BB7527 [tailport=s, headport=n]
BB7526 -> BB7536 [tailport=s, headport=n, color=gray]
BB7527 [shape=record label="{22020: write-property[v9,'filter',v8]|22021: \<variable-non-null-undef\>['node']*|22022: read-variable['node',v15,-]|22023: read-variable['parseExpression',v17,v16]}" ] 
BB7527 -> BB7528 [tailport=s, headport=n, headlabel="      7528"]
BB7527 -> BB7536 [tailport=s, headport=n, color=gray]
BB7528 [shape=record label="{22024: call-parseExpression [v16,v17,v14]}" ] 
BB7528 -> BB7529 [tailport=s, headport=n, headlabel="      7529"]
BB7528 -> BB7536 [tailport=s, headport=n, color=gray]
BB7529 [shape=record label="{22025: write-property[v15,'body',v14]|22026: \<variable-non-null-undef\>['node']*|22027: read-variable['expect',v19,v18]|22028: read-variable['isGenerator',v21,-]|22029: if[v21](true-block:7530,false-block:7531)}" ] 
BB7529 -> BB7530 [tailport=s, headport=n, headlabel="      7530"]
BB7529 -> BB7531 [tailport=s, headport=n, headlabel="      7531"]
BB7529 -> BB7536 [tailport=s, headport=n, color=gray]
BB7530 [shape=record label="{22030: read-variable['_parenR',v20,-]}" ] 
BB7530 -> BB7532 [tailport=s, headport=n, headlabel="      7532"]
BB7530 -> BB7536 [tailport=s, headport=n, color=gray]
BB7531 [shape=record label="{22031: read-variable['_bracketR',v20,-]}" ] 
BB7531 -> BB7532 [tailport=s, headport=n]
BB7531 -> BB7536 [tailport=s, headport=n, color=gray]
BB7532 [shape=record label="{22032: call-expect [v18,v19,v20,-]*}" ] 
BB7532 -> BB7533 [tailport=s, headport=n, headlabel="      7533"]
BB7532 -> BB7536 [tailport=s, headport=n, color=gray]
BB7533 [shape=record label="{22033: read-variable['node',v23,-]|22034: read-variable['isGenerator',v22,-]|22035: write-property[v23,'generator',v22]|22036: \<variable-non-null-undef\>['node']*|22037: read-variable['finishNode',v25,v24]|22038: read-variable['node',v26,-]|22039: constant[\"ComprehensionExpression\",v27]}" ] 
BB7533 -> BB7534 [tailport=s, headport=n, headlabel="      7534"]
BB7533 -> BB7536 [tailport=s, headport=n, color=gray]
BB7534 [shape=record label="{22040: call-finishNode [v24,v25,v26,v27,v1]}" ] 
BB7534 -> BB7535 [tailport=s, headport=n, headlabel="      7535"]
BB7534 -> BB7536 [tailport=s, headport=n, color=gray]
BB7535 [shape=record label="{22041: return[v1]}" ] 
BB7536 [shape=record label="{22042: exceptional-return}" ] 
//#$~ 7111
}
