digraph {
rankdir="TD"
BB_entry489[shape=none,label=""];
BB_entry489 -> BB7018 [tailport=s, headport=n, headlabel="    7018"]
BB7018 [shape=record label="{23653: constant[undefined,v1]|23654: vardecl['reactRootID']|23655: vardecl['component']}" ] 
BB7018 -> BB7019 [tailport=s, headport=n, headlabel="      7019"]
BB7019 [shape=record label="{23656: constant[\"production\",v3]|23657: constant[\"development\",v4]|23658: !==[v3,v4,v2]|23659: if[v2](true-block:7020,false-block:7021)}" ] 
BB7019 -> BB7020 [tailport=s, headport=n, headlabel="      7020"]
BB7019 -> BB7021 [tailport=s, headport=n, headlabel="      7021"]
BB7019 -> BB7043 [tailport=s, headport=n, color=gray, headlabel="      7043"]
BB7020 [shape=record label="{23660: read-variable['warning',v6,v5]|23661: read-variable['ReactCurrentOwner',v10,-]|23662: read-property[v10,'current',v8]|23663: \<variable-non-null-undef\>['ReactCurrentOwner']|23664: constant[null,v9]|23665: ==[v8,v9,v7]|23666: constant[\"unmountComponentAtNode(): Render methods should be a pure function of \",v16]|23667: constant[\"props and state; triggering nested component updates from render is \",v17]|23668: +[v16,v17,v14]|23669: constant[\"not allowed. If necessary, trigger nested updates in \",v15]|23670: +[v14,v15,v12]|23671: constant[\"componentDidUpdate.\",v13]|23672: +[v12,v13,v11]}" ] 
BB7020 -> BB7022 [tailport=s, headport=n, headlabel="      7022"]
BB7020 -> BB7043 [tailport=s, headport=n, color=gray]
BB7021 [shape=record label="{23673: constant[null,-]}" ] 
BB7021 -> BB7023 [tailport=s, headport=n, headlabel="      7023"]
BB7022 [shape=record label="{23674: call-warning [v5,v6,v7,v11,-]}" ] 
BB7022 -> BB7023 [tailport=s, headport=n]
BB7022 -> BB7043 [tailport=s, headport=n, color=gray]
BB7023 [shape=record label="{23675: constant[\"production\",v6]|23676: constant[\"development\",v7]|23677: !==[v6,v7,v5]|23678: if[v5](true-block:7024,false-block:7025)}" ] 
BB7023 -> BB7024 [tailport=s, headport=n, headlabel="      7024"]
BB7023 -> BB7025 [tailport=s, headport=n, headlabel="      7025"]
BB7023 -> BB7043 [tailport=s, headport=n, color=gray]
BB7024 [shape=record label="{23679: read-variable['invariant',v9,v8]|23680: read-variable['container',v10,-]|23681: if[v10](true-block:7026,false-block:7028)}" ] 
BB7024 -> BB7028 [tailport=s, headport=n, headlabel="      7028"]
BB7024 -> BB7026 [tailport=s, headport=n, headlabel="      7026"]
BB7024 -> BB7043 [tailport=s, headport=n, color=gray]
BB7025 [shape=record label="{23682: read-variable['invariant',v9,v8]|23683: read-variable['container',v10,-]|23684: if[v10](true-block:7030,false-block:7032)}" ] 
BB7025 -> BB7032 [tailport=s, headport=n, headlabel="      7032"]
BB7025 -> BB7030 [tailport=s, headport=n, headlabel="      7030"]
BB7025 -> BB7043 [tailport=s, headport=n, color=gray]
BB7026 [shape=record label="{23685: read-variable['container',v13,-]|23686: read-property[v13,'nodeType',v11]|23687: \<variable-non-null-undef\>['container']|23688: read-variable['ELEMENT_NODE_TYPE',v12,-]|23689: ===[v11,v12,v10]|23690: if[v10](true-block:7028,false-block:7027)}" ] 
BB7026 -> BB7028 [tailport=s, headport=n]
BB7026 -> BB7027 [tailport=s, headport=n, headlabel="      7027"]
BB7026 -> BB7043 [tailport=s, headport=n, color=gray]
BB7027 [shape=record label="{23691: read-variable['container',v13,-]|23692: read-property[v13,'nodeType',v11]|23693: \<variable-non-null-undef\>['container']|23694: read-variable['DOC_NODE_TYPE',v12,-]|23695: ===[v11,v12,v10]}" ] 
BB7027 -> BB7028 [tailport=s, headport=n]
BB7027 -> BB7043 [tailport=s, headport=n, color=gray]
BB7028 [shape=record label="{23696: constant[\"unmountComponentAtNode(...): Target container is not a DOM element.\",v11]}" ] 
BB7028 -> BB7029 [tailport=s, headport=n, headlabel="      7029"]
BB7029 [shape=record label="{23697: call-invariant [v8,v9,v10,v11,-]}" ] 
BB7029 -> BB7033 [tailport=s, headport=n, headlabel="      7033"]
BB7029 -> BB7043 [tailport=s, headport=n, color=gray]
BB7030 [shape=record label="{23698: read-variable['container',v13,-]|23699: read-property[v13,'nodeType',v11]|23700: \<variable-non-null-undef\>['container']|23701: read-variable['ELEMENT_NODE_TYPE',v12,-]|23702: ===[v11,v12,v10]|23703: if[v10](true-block:7032,false-block:7031)}" ] 
BB7030 -> BB7032 [tailport=s, headport=n]
BB7030 -> BB7031 [tailport=s, headport=n, headlabel="      7031"]
BB7030 -> BB7043 [tailport=s, headport=n, color=gray]
BB7031 [shape=record label="{23704: read-variable['container',v13,-]|23705: read-property[v13,'nodeType',v11]|23706: \<variable-non-null-undef\>['container']|23707: read-variable['DOC_NODE_TYPE',v12,-]|23708: ===[v11,v12,v10]}" ] 
BB7031 -> BB7032 [tailport=s, headport=n]
BB7031 -> BB7043 [tailport=s, headport=n, color=gray]
BB7032 [shape=record label="{23709: call-invariant [v8,v9,v10,-]}" ] 
BB7032 -> BB7033 [tailport=s, headport=n]
BB7032 -> BB7043 [tailport=s, headport=n, color=gray]
BB7033 [shape=record label="{23710: read-variable['getReactRootID',v10,v9]|23711: read-variable['container',v11,-]}" ] 
BB7033 -> BB7034 [tailport=s, headport=n, headlabel="      7034"]
BB7033 -> BB7043 [tailport=s, headport=n, color=gray]
BB7034 [shape=record label="{23712: call-getReactRootID [v9,v10,v11,v8]}" ] 
BB7034 -> BB7035 [tailport=s, headport=n, headlabel="      7035"]
BB7034 -> BB7043 [tailport=s, headport=n, color=gray]
BB7035 [shape=record label="{23713: write-variable[v8,'reactRootID']*|23714: read-variable['instancesByReactRootID',v13,-]|23715: read-variable['reactRootID',v14,-]|23716: read-property[v13,v14,v12]|23717: \<variable-non-null-undef\>['instancesByReactRootID']|23718: write-variable[v12,'component']*|23719: read-variable['component',v16,-]|23720: ![v16,v15]|23721: if[v15](true-block:7036,false-block:7037)}" ] 
BB7035 -> BB7036 [tailport=s, headport=n, headlabel="      7036"]
BB7035 -> BB7037 [tailport=s, headport=n, headlabel="      7037"]
BB7035 -> BB7043 [tailport=s, headport=n, color=gray]
BB7036 [shape=record label="{23722: constant[false,v1]}" ] 
BB7036 -> BB7042 [tailport=s, headport=n, headlabel="      7042"]
BB7037 [shape=record label="{23723: read-variable['ReactMount',v18,-]|23724: read-property[v18,'unmountComponentFromNode',-]|23725: \<variable-non-null-undef\>['ReactMount']|23726: read-variable['component',v19,-]|23727: read-variable['container',v20,-]}" ] 
BB7037 -> BB7038 [tailport=s, headport=n, headlabel="      7038"]
BB7037 -> BB7043 [tailport=s, headport=n, color=gray]
BB7038 [shape=record label="{23728: call-ReactMount.unmountComponentFromNode [v18,'unmountComponentFromNode',v19,v20,-]*}" ] 
BB7038 -> BB7039 [tailport=s, headport=n, headlabel="      7039"]
BB7038 -> BB7043 [tailport=s, headport=n, color=gray]
BB7039 [shape=record label="{23729: read-variable['instancesByReactRootID',v22,-]|23730: read-variable['reactRootID',v23,-]|23731: delete-property[v22,v23,v21]*|23732: read-variable['containersByReactRootID',v25,-]|23733: read-variable['reactRootID',v26,-]|23734: delete-property[v25,v26,v24]*|23735: constant[\"production\",v28]|23736: constant[\"development\",v29]|23737: !==[v28,v29,v27]|23738: if[v27](true-block:7040,false-block:7041)}" ] 
BB7039 -> BB7040 [tailport=s, headport=n, headlabel="      7040"]
BB7039 -> BB7041 [tailport=s, headport=n, headlabel="      7041"]
BB7039 -> BB7043 [tailport=s, headport=n, color=gray]
BB7040 [shape=record label="{23739: read-variable['rootElementsByReactRootID',v31,-]|23740: read-variable['reactRootID',v32,-]|23741: delete-property[v31,v32,v30]*}" ] 
BB7040 -> BB7041 [tailport=s, headport=n]
BB7040 -> BB7043 [tailport=s, headport=n, color=gray]
BB7041 [shape=record label="{23742: constant[true,v1]}" ] 
BB7041 -> BB7042 [tailport=s, headport=n]
BB7042 [shape=record label="{23743: return[v1]}" ] 
BB7043 [shape=record label="{23744: exceptional-return}" ] 
//#$~ 12353
}
