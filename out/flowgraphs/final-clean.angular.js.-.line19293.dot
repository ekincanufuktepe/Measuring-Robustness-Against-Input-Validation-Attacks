digraph {
rankdir="TD"
BB_entry999[shape=none,label=""];
BB_entry999 -> BB12984 [tailport=s, headport=n, headlabel="    12984"]
BB12984 [shape=record label="{33980: constant[undefined,v1]|33981: vardecl['descending']|33982: vardecl['get']|33983: vardecl['key']}" ] 
BB12984 -> BB12985 [tailport=s, headport=n, headlabel="      12985"]
BB12985 [shape=record label="{33984: constant[1.0,v2]|33985: write-variable[v2,'descending']*|33986: read-variable['identity',v3,-]|33987: write-variable[v3,'get']*|33988: read-variable['isFunction',v6,v5]|33989: read-variable['predicate',v7,-]}" ] 
BB12985 -> BB12986 [tailport=s, headport=n, headlabel="      12986"]
BB12985 -> BB13016 [tailport=s, headport=n, color=gray, headlabel="      13016"]
BB12986 [shape=record label="{33990: call-isFunction [v5,v6,v7,v4]}" ] 
BB12986 -> BB12987 [tailport=s, headport=n, headlabel="      12987"]
BB12986 -> BB13016 [tailport=s, headport=n, color=gray]
BB12987 [shape=record label="{33991: if[v4](true-block:12988,false-block:12989)}" ] 
BB12987 -> BB12988 [tailport=s, headport=n, headlabel="      12988"]
BB12987 -> BB12989 [tailport=s, headport=n, headlabel="      12989"]
BB12988 [shape=record label="{33992: read-variable['predicate',v8,-]|33993: write-variable[v8,'get']*}" ] 
BB12988 -> BB13014 [tailport=s, headport=n, headlabel="      13014"]
BB12988 -> BB13016 [tailport=s, headport=n, color=gray]
BB12989 [shape=record label="{33994: read-variable['isString',v10,v9]|33995: read-variable['predicate',v11,-]}" ] 
BB12989 -> BB12990 [tailport=s, headport=n, headlabel="      12990"]
BB12989 -> BB13016 [tailport=s, headport=n, color=gray]
BB12990 [shape=record label="{33996: call-isString [v9,v10,v11,v8]}" ] 
BB12990 -> BB12991 [tailport=s, headport=n, headlabel="      12991"]
BB12990 -> BB13016 [tailport=s, headport=n, color=gray]
BB12991 [shape=record label="{33997: if[v8](true-block:12992,false-block:13014)}" ] 
BB12991 -> BB12992 [tailport=s, headport=n, headlabel="      12992"]
BB12991 -> BB13014 [tailport=s, headport=n]
BB12992 [shape=record label="{33998: read-variable['predicate',v16,-]|33999: read-property[v16,'charAt',-]|34000: \<variable-non-null-undef\>['predicate']|34001: constant[0.0,v17]}" ] 
BB12992 -> BB12993 [tailport=s, headport=n, headlabel="      12993"]
BB12992 -> BB13016 [tailport=s, headport=n, color=gray]
BB12993 [shape=record label="{34002: call-predicate.charAt [v16,'charAt',v17,v13]}" ] 
BB12993 -> BB12994 [tailport=s, headport=n, headlabel="      12994"]
BB12993 -> BB13016 [tailport=s, headport=n, color=gray]
BB12994 [shape=record label="{34003: constant[\"+\",v14]|34004: ==[v13,v14,v12]|34005: if[v12](true-block:12998,false-block:12995)}" ] 
BB12994 -> BB12998 [tailport=s, headport=n, headlabel="      12998"]
BB12994 -> BB12995 [tailport=s, headport=n, headlabel="      12995"]
BB12994 -> BB13016 [tailport=s, headport=n, color=gray]
BB12995 [shape=record label="{34006: read-variable['predicate',v16,-]|34007: read-property[v16,'charAt',-]|34008: \<variable-non-null-undef\>['predicate']|34009: constant[0.0,v17]}" ] 
BB12995 -> BB12996 [tailport=s, headport=n, headlabel="      12996"]
BB12995 -> BB13016 [tailport=s, headport=n, color=gray]
BB12996 [shape=record label="{34010: call-predicate.charAt [v16,'charAt',v17,v13]}" ] 
BB12996 -> BB12997 [tailport=s, headport=n, headlabel="      12997"]
BB12996 -> BB13016 [tailport=s, headport=n, color=gray]
BB12997 [shape=record label="{34011: constant[\"-\",v14]|34012: ==[v13,v14,v12]}" ] 
BB12997 -> BB12998 [tailport=s, headport=n]
BB12997 -> BB13016 [tailport=s, headport=n, color=gray]
BB12998 [shape=record label="{34013: if[v12](true-block:12999,false-block:13007)}" ] 
BB12998 -> BB12999 [tailport=s, headport=n, headlabel="      12999"]
BB12998 -> BB13007 [tailport=s, headport=n, headlabel="      13007"]
BB12999 [shape=record label="{34014: read-variable['predicate',v18,-]|34015: read-property[v18,'charAt',-]|34016: \<variable-non-null-undef\>['predicate']|34017: constant[0.0,v19]}" ] 
BB12999 -> BB13000 [tailport=s, headport=n, headlabel="      13000"]
BB12999 -> BB13016 [tailport=s, headport=n, color=gray]
BB13000 [shape=record label="{34018: call-predicate.charAt [v18,'charAt',v19,v15]}" ] 
BB13000 -> BB13001 [tailport=s, headport=n, headlabel="      13001"]
BB13000 -> BB13016 [tailport=s, headport=n, color=gray]
BB13001 [shape=record label="{34019: constant[\"-\",v16]|34020: ==[v15,v16,v14]|34021: if[v14](true-block:13002,false-block:13003)}" ] 
BB13001 -> BB13002 [tailport=s, headport=n, headlabel="      13002"]
BB13001 -> BB13003 [tailport=s, headport=n, headlabel="      13003"]
BB13001 -> BB13016 [tailport=s, headport=n, color=gray]
BB13002 [shape=record label="{34022: constant[-1.0,v13]}" ] 
BB13002 -> BB13004 [tailport=s, headport=n, headlabel="      13004"]
BB13003 [shape=record label="{34023: constant[1.0,v13]}" ] 
BB13003 -> BB13004 [tailport=s, headport=n]
BB13004 [shape=record label="{34024: write-variable[v13,'descending']*|34025: read-variable['predicate',v22,-]|34026: read-property[v22,'substring',-]|34027: \<variable-non-null-undef\>['predicate']|34028: constant[1.0,v23]}" ] 
BB13004 -> BB13005 [tailport=s, headport=n, headlabel="      13005"]
BB13004 -> BB13016 [tailport=s, headport=n, color=gray]
BB13005 [shape=record label="{34029: call-predicate.substring [v22,'substring',v23,v20]}" ] 
BB13005 -> BB13006 [tailport=s, headport=n, headlabel="      13006"]
BB13005 -> BB13016 [tailport=s, headport=n, color=gray]
BB13006 [shape=record label="{34030: write-variable[v20,'predicate']*}" ] 
BB13006 -> BB13007 [tailport=s, headport=n]
BB13007 [shape=record label="{34031: read-variable['predicate',v14,-]|34032: constant[\"\",v15]|34033: !==[v14,v15,v13]|34034: if[v13](true-block:13008,false-block:13014)}" ] 
BB13007 -> BB13008 [tailport=s, headport=n, headlabel="      13008"]
BB13007 -> BB13014 [tailport=s, headport=n]
BB13007 -> BB13016 [tailport=s, headport=n, color=gray]
BB13008 [shape=record label="{34035: read-variable['$parse',v18,v17]|34036: read-variable['predicate',v19,-]}" ] 
BB13008 -> BB13009 [tailport=s, headport=n, headlabel="      13009"]
BB13008 -> BB13016 [tailport=s, headport=n, color=gray]
BB13009 [shape=record label="{34037: call-$parse [v17,v18,v19,v16]}" ] 
BB13009 -> BB13010 [tailport=s, headport=n, headlabel="      13010"]
BB13009 -> BB13016 [tailport=s, headport=n, color=gray]
BB13010 [shape=record label="{34038: write-variable[v16,'get']*|34039: read-variable['get',v21,-]|34040: read-property[v21,'constant',v20]|34041: \<variable-non-null-undef\>['get']|34042: if[v20](true-block:13011,false-block:13014)}" ] 
BB13010 -> BB13011 [tailport=s, headport=n, headlabel="      13011"]
BB13010 -> BB13014 [tailport=s, headport=n]
BB13010 -> BB13016 [tailport=s, headport=n, color=gray]
BB13011 [shape=record label="{34043: read-variable['get',v24,v23]}" ] 
BB13011 -> BB13012 [tailport=s, headport=n, headlabel="      13012"]
BB13011 -> BB13016 [tailport=s, headport=n, color=gray]
BB13012 [shape=record label="{34044: call-get [v23,v24,v22]}" ] 
BB13012 -> BB13013 [tailport=s, headport=n, headlabel="      13013"]
BB13012 -> BB13016 [tailport=s, headport=n, color=gray]
BB13013 [shape=record label="{34045: write-variable[v22,'key']*|34046: function-expr[function ( value ),v25]|34047: write-variable[v25,'get']*}" ] 
BB13013 -> BB13014 [tailport=s, headport=n]
BB13014 [shape=record label="{34048: new[v1]|34049: read-variable['get',v8,-]|34050: write-property[v1,'get',v8]|34051: read-variable['descending',v10,-]|34052: read-variable['reverseOrder',v11,-]|34053: *[v10,v11,v9]|34054: write-property[v1,'descending',v9]}" ] 
BB13014 -> BB13015 [tailport=s, headport=n, headlabel="      13015"]
BB13014 -> BB13016 [tailport=s, headport=n, color=gray]
BB13015 [shape=record label="{34055: return[v1]}" ] 
BB13016 [shape=record label="{34056: exceptional-return}" ] 
//#$~ 19311
}
