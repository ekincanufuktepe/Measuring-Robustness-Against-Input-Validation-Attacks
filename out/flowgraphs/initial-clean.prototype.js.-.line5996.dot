digraph {
rankdir="TD"
BB_entry577[shape=none,label=""];
BB_entry577 -> BB7565 [tailport=s, headport=n, headlabel="    7565"]
BB7565 [shape=record label="{21138: constant[undefined,v1]|21139: vardecl['elem']|21140: vardecl['j']|21141: vardecl['matcher']|21142: vardecl['matchedCount']|21143: vardecl['i']|21144: vardecl['unmatched']|21145: vardecl['setMatched']|21146: vardecl['contextBackup']|21147: vardecl['elems']|21148: vardecl['dirrunsUnique']|21149: vardecl['len']}" ] 
BB7565 -> BB7566 [tailport=s, headport=n, headlabel="      7566"]
BB7566 [shape=record label="{21150: constant[0.0,v2]|21151: write-variable[v2,'matchedCount']*|21152: constant[\"0\",v3]|21153: write-variable[v3,'i']*|21154: read-variable['seed',v4,-]|21155: if[v4](true-block:7567,false-block:7569)}" ] 
BB7566 -> BB7569 [tailport=s, headport=n, headlabel="      7569"]
BB7566 -> BB7567 [tailport=s, headport=n, headlabel="      7567"]
BB7566 -> BB7641 [tailport=s, headport=n, color=gray, headlabel="      7641"]
BB7567 [shape=record label="{21156: read-variable['Array',v5,-]}" ] 
BB7567 -> BB7568 [tailport=s, headport=n, headlabel="      7568"]
BB7567 -> BB7641 [tailport=s, headport=n, color=gray]
BB7568 [shape=record label="{21157: construct [-,v5,v4]}" ] 
BB7568 -> BB7569 [tailport=s, headport=n]
BB7568 -> BB7641 [tailport=s, headport=n, color=gray]
BB7569 [shape=record label="{21158: write-variable[v4,'unmatched']*|21159: read-variable['Array',v6,-]}" ] 
BB7569 -> BB7570 [tailport=s, headport=n, headlabel="      7570"]
BB7569 -> BB7641 [tailport=s, headport=n, color=gray]
BB7570 [shape=record label="{21160: construct [-,v6,v5]}" ] 
BB7570 -> BB7571 [tailport=s, headport=n, headlabel="      7571"]
BB7570 -> BB7641 [tailport=s, headport=n, color=gray]
BB7571 [shape=record label="{21161: write-variable[v5,'setMatched']*|21162: read-variable['outermostContext',v7,-]|21163: write-variable[v7,'contextBackup']*|21164: read-variable['seed',v8,-]|21165: if[v8](true-block:7575,false-block:7572)}" ] 
BB7571 -> BB7575 [tailport=s, headport=n, headlabel="      7575"]
BB7571 -> BB7572 [tailport=s, headport=n, headlabel="      7572"]
BB7571 -> BB7641 [tailport=s, headport=n, color=gray]
BB7572 [shape=record label="{21166: read-variable['byElement',v8,-]|21167: if[v8](true-block:7573,false-block:7575)}" ] 
BB7572 -> BB7575 [tailport=s, headport=n]
BB7572 -> BB7573 [tailport=s, headport=n, headlabel="      7573"]
BB7572 -> BB7641 [tailport=s, headport=n, color=gray]
BB7573 [shape=record label="{21168: read-variable['Expr',v11,-]|21169: read-property[v11,'find',v10]|21170: \<variable-non-null-undef\>['Expr']|21171: read-property[v10,'TAG',-]|21172: \<property-non-null-undef\>[v11,'find']|21173: constant[\"*\",v12]|21174: read-variable['outermost',v13,-]}" ] 
BB7573 -> BB7574 [tailport=s, headport=n, headlabel="      7574"]
BB7573 -> BB7641 [tailport=s, headport=n, color=gray]
BB7574 [shape=record label="{21175: call-null [v10,'TAG',v12,v13,v8]}" ] 
BB7574 -> BB7575 [tailport=s, headport=n]
BB7574 -> BB7641 [tailport=s, headport=n, color=gray]
BB7575 [shape=record label="{21176: write-variable[v8,'elems']*|21177: read-variable['dirruns',v10,-]|21178: read-variable['contextBackup',v13,-]|21179: constant[null,v14]|21180: ==[v13,v14,v12]|21181: if[v12](true-block:7576,false-block:7577)}" ] 
BB7575 -> BB7576 [tailport=s, headport=n, headlabel="      7576"]
BB7575 -> BB7577 [tailport=s, headport=n, headlabel="      7577"]
BB7575 -> BB7641 [tailport=s, headport=n, color=gray]
BB7576 [shape=record label="{21182: constant[1.0,v11]}" ] 
BB7576 -> BB7581 [tailport=s, headport=n, headlabel="      7581"]
BB7577 [shape=record label="{21183: read-variable['Math',v16,-]|21184: read-property[v16,'random',-]|21185: \<variable-non-null-undef\>['Math']}" ] 
BB7577 -> BB7578 [tailport=s, headport=n, headlabel="      7578"]
BB7577 -> BB7641 [tailport=s, headport=n, color=gray]
BB7578 [shape=record label="{21186: call-Math.random [v16,'random',v11]}" ] 
BB7578 -> BB7579 [tailport=s, headport=n, headlabel="      7579"]
BB7578 -> BB7641 [tailport=s, headport=n, color=gray]
BB7579 [shape=record label="{21187: if[v11](true-block:7581,false-block:7580)}" ] 
BB7579 -> BB7581 [tailport=s, headport=n]
BB7579 -> BB7580 [tailport=s, headport=n, headlabel="      7580"]
BB7580 [shape=record label="{21188: constant[0.1,v11]}" ] 
BB7580 -> BB7581 [tailport=s, headport=n]
BB7581 [shape=record label="{21189: +[v10,v11,v9]|21190: write-variable[v9,'dirruns']|21191: write-variable[v9,'dirrunsUnique']*|21192: read-variable['elems',v16,-]|21193: read-property[v16,'length',v15]|21194: \<variable-non-null-undef\>['elems']|21195: write-variable[v15,'len']*|21196: read-variable['outermost',v17,-]|21197: if[v17](true-block:7582,false-block:7585)}" ] 
BB7581 -> BB7582 [tailport=s, headport=n, headlabel="      7582"]
BB7581 -> BB7585 [tailport=s, headport=n, headlabel="      7585"]
BB7581 -> BB7641 [tailport=s, headport=n, color=gray]
BB7582 [shape=record label="{21198: read-variable['context',v19,-]|21199: read-variable['document',v20,-]|21200: !==[v19,v20,v18]|21201: if[v18](true-block:7583,false-block:7584)}" ] 
BB7582 -> BB7584 [tailport=s, headport=n, headlabel="      7584"]
BB7582 -> BB7583 [tailport=s, headport=n, headlabel="      7583"]
BB7582 -> BB7641 [tailport=s, headport=n, color=gray]
BB7583 [shape=record label="{21202: read-variable['context',v18,-]}" ] 
BB7583 -> BB7584 [tailport=s, headport=n]
BB7583 -> BB7641 [tailport=s, headport=n, color=gray]
BB7584 [shape=record label="{21203: write-variable[v18,'outermostContext']*}" ] 
BB7584 -> BB7585 [tailport=s, headport=n]
BB7585 [shape=record label="{21204: read-variable['i',v19,-]|21205: read-variable['len',v20,-]|21206: !==[v19,v20,v18]|21207: if[v18](true-block:7586,false-block:7587)}" ] 
BB7585 -> BB7587 [tailport=s, headport=n, headlabel="      7587"]
BB7585 -> BB7586 [tailport=s, headport=n, headlabel="      7586"]
BB7585 -> BB7641 [tailport=s, headport=n, color=gray]
BB7586 [shape=record label="{21208: read-variable['elems',v23,-]|21209: read-variable['i',v24,-]|21210: read-property[v23,v24,v21]|21211: \<variable-non-null-undef\>['elems']|21212: write-variable[v21,'elem']|21213: constant[null,v22]|21214: !=[v21,v22,v18]}" ] 
BB7586 -> BB7587 [tailport=s, headport=n]
BB7586 -> BB7641 [tailport=s, headport=n, color=gray]
BB7587 [shape=record label="{21215: if[v18](true-block:7588,false-block:7589)}" ] 
BB7587 -> BB7588 [tailport=s, headport=n, headlabel="      7588"]
BB7587 -> BB7589 [tailport=s, headport=n, headlabel="      7589"]
BB7588 [shape=record label="{21216: read-variable['byElement',v21,-]|21217: if[v21](true-block:7590,false-block:7591)}" ] 
BB7588 -> BB7591 [tailport=s, headport=n, headlabel="      7591"]
BB7588 -> BB7590 [tailport=s, headport=n, headlabel="      7590"]
BB7588 -> BB7641 [tailport=s, headport=n, color=gray]
BB7589 [shape=record label="{21218: read-variable['matchedCount',v22,-]|21219: read-variable['i',v23,-]|21220: +[v22,v23,v21]|21221: write-variable[v21,'matchedCount']*|21222: read-variable['bySet',v24,-]|21223: if[v24](true-block:7610,false-block:7611)}" ] 
BB7589 -> BB7611 [tailport=s, headport=n, headlabel="      7611"]
BB7589 -> BB7610 [tailport=s, headport=n, headlabel="      7610"]
BB7589 -> BB7641 [tailport=s, headport=n, color=gray]
BB7590 [shape=record label="{21224: read-variable['elem',v21,-]}" ] 
BB7590 -> BB7591 [tailport=s, headport=n]
BB7590 -> BB7641 [tailport=s, headport=n, color=gray]
BB7591 [shape=record label="{21225: if[v21](true-block:7592,false-block:7601)}" ] 
BB7591 -> BB7592 [tailport=s, headport=n, headlabel="      7592"]
BB7591 -> BB7601 [tailport=s, headport=n, headlabel="      7601"]
BB7592 [shape=record label="{21226: constant[0.0,v22]|21227: write-variable[v22,'j']*}" ] 
BB7592 -> BB7593 [tailport=s, headport=n, headlabel="      7593"]
BB7593 [shape=record label="{21228: read-variable['elementMatchers',v24,-]|21229: constant[1.0,v26]|21230: read-variable['j',v27,-]|21231: +[v27,v25]|21232: +[v25,v26,v28]|21233: write-variable[v28,'j']|21234: read-property[v24,v25,v23]|21235: \<variable-non-null-undef\>['elementMatchers']|21236: write-variable[v23,'matcher']|21237: if[v23](true-block:7594,false-block:7595)}" ] 
BB7593 -> BB7594 [tailport=s, headport=n, headlabel="      7594"]
BB7593 -> BB7595 [tailport=s, headport=n, headlabel="      7595"]
BB7593 -> BB7641 [tailport=s, headport=n, color=gray]
BB7594 [shape=record label="{21238: read-variable['matcher',v31,v30]|21239: read-variable['elem',v32,-]|21240: read-variable['context',v33,-]|21241: read-variable['xml',v34,-]}" ] 
BB7594 -> BB7596 [tailport=s, headport=n, headlabel="      7596"]
BB7594 -> BB7641 [tailport=s, headport=n, color=gray]
BB7595 [shape=record label="{21242: read-variable['outermost',v29,-]|21243: if[v29](true-block:7600,false-block:7601)}" ] 
BB7595 -> BB7600 [tailport=s, headport=n, headlabel="      7600"]
BB7595 -> BB7601 [tailport=s, headport=n]
BB7595 -> BB7641 [tailport=s, headport=n, color=gray]
BB7596 [shape=record label="{21244: call-matcher [v30,v31,v32,v33,v34,v29]}" ] 
BB7596 -> BB7597 [tailport=s, headport=n, headlabel="      7597"]
BB7596 -> BB7641 [tailport=s, headport=n, color=gray]
BB7597 [shape=record label="{21245: if[v29](true-block:7598,false-block:7593)}" ] 
BB7597 -> BB7598 [tailport=s, headport=n, headlabel="      7598"]
BB7597 -> BB7593 [tailport=s, headport=n]
BB7598 [shape=record label="{21246: read-variable['results',v36,-]|21247: read-property[v36,'push',-]|21248: \<variable-non-null-undef\>['results']|21249: read-variable['elem',v37,-]}" ] 
BB7598 -> BB7599 [tailport=s, headport=n, headlabel="      7599"]
BB7598 -> BB7641 [tailport=s, headport=n, color=gray]
BB7599 [shape=record label="{21250: call-results.push [v36,'push',v37,-]*}" ] 
BB7599 -> BB7595 [tailport=s, headport=n]
BB7599 -> BB7641 [tailport=s, headport=n, color=gray]
BB7600 [shape=record label="{21251: read-variable['dirrunsUnique',v30,-]|21252: write-variable[v30,'dirruns']*}" ] 
BB7600 -> BB7601 [tailport=s, headport=n]
BB7600 -> BB7641 [tailport=s, headport=n, color=gray]
BB7601 [shape=record label="{21253: read-variable['bySet',v22,-]|21254: if[v22](true-block:7602,false-block:7609)}" ] 
BB7601 -> BB7602 [tailport=s, headport=n, headlabel="      7602"]
BB7601 -> BB7609 [tailport=s, headport=n, headlabel="      7609"]
BB7601 -> BB7641 [tailport=s, headport=n, color=gray]
BB7602 [shape=record label="{21255: read-variable['matcher',v24,-]|21256: ![v24,v23]|21257: if[v23](true-block:7603,false-block:7604)}" ] 
BB7602 -> BB7604 [tailport=s, headport=n, headlabel="      7604"]
BB7602 -> BB7603 [tailport=s, headport=n, headlabel="      7603"]
BB7602 -> BB7641 [tailport=s, headport=n, color=gray]
BB7603 [shape=record label="{21258: read-variable['elem',v23,-]}" ] 
BB7603 -> BB7604 [tailport=s, headport=n]
BB7603 -> BB7641 [tailport=s, headport=n, color=gray]
BB7604 [shape=record label="{21259: write-variable[v23,'elem']|21260: if[v23](true-block:7605,false-block:7606)}" ] 
BB7604 -> BB7605 [tailport=s, headport=n, headlabel="      7605"]
BB7604 -> BB7606 [tailport=s, headport=n, headlabel="      7606"]
BB7605 [shape=record label="{21261: constant[1.0,v25]|21262: read-variable['matchedCount',v26,-]|21263: +[v26,v27]|21264: -[v27,v25,v28]|21265: write-variable[v28,'matchedCount']*}" ] 
BB7605 -> BB7606 [tailport=s, headport=n]
BB7605 -> BB7641 [tailport=s, headport=n, color=gray]
BB7606 [shape=record label="{21266: read-variable['seed',v25,-]|21267: if[v25](true-block:7607,false-block:7609)}" ] 
BB7606 -> BB7607 [tailport=s, headport=n, headlabel="      7607"]
BB7606 -> BB7609 [tailport=s, headport=n]
BB7606 -> BB7641 [tailport=s, headport=n, color=gray]
BB7607 [shape=record label="{21268: read-variable['unmatched',v27,-]|21269: read-property[v27,'push',-]|21270: \<variable-non-null-undef\>['unmatched']|21271: read-variable['elem',v28,-]}" ] 
BB7607 -> BB7608 [tailport=s, headport=n, headlabel="      7608"]
BB7607 -> BB7641 [tailport=s, headport=n, color=gray]
BB7608 [shape=record label="{21272: call-unmatched.push [v27,'push',v28,-]*}" ] 
BB7608 -> BB7609 [tailport=s, headport=n]
BB7608 -> BB7641 [tailport=s, headport=n, color=gray]
BB7609 [shape=record label="{21273: constant[1.0,v23]|21274: read-variable['i',v24,-]|21275: +[v24,v25]|21276: +[v25,v23,v26]|21277: write-variable[v26,'i']}" ] 
BB7609 -> BB7585 [tailport=s, headport=n]
BB7609 -> BB7641 [tailport=s, headport=n, color=gray]
BB7610 [shape=record label="{21278: read-variable['i',v25,-]|21279: read-variable['matchedCount',v26,-]|21280: !==[v25,v26,v24]}" ] 
BB7610 -> BB7611 [tailport=s, headport=n]
BB7610 -> BB7641 [tailport=s, headport=n, color=gray]
BB7611 [shape=record label="{21281: if[v24](true-block:7612,false-block:7637)}" ] 
BB7611 -> BB7612 [tailport=s, headport=n, headlabel="      7612"]
BB7611 -> BB7637 [tailport=s, headport=n, headlabel="      7637"]
BB7612 [shape=record label="{21282: constant[0.0,v25]|21283: write-variable[v25,'j']*}" ] 
BB7612 -> BB7613 [tailport=s, headport=n, headlabel="      7613"]
BB7613 [shape=record label="{21284: read-variable['setMatchers',v27,-]|21285: constant[1.0,v29]|21286: read-variable['j',v30,-]|21287: +[v30,v28]|21288: +[v28,v29,v31]|21289: write-variable[v31,'j']|21290: read-property[v27,v28,v26]|21291: \<variable-non-null-undef\>['setMatchers']|21292: write-variable[v26,'matcher']|21293: if[v26](true-block:7614,false-block:7615)}" ] 
BB7613 -> BB7614 [tailport=s, headport=n, headlabel="      7614"]
BB7613 -> BB7615 [tailport=s, headport=n, headlabel="      7615"]
BB7613 -> BB7641 [tailport=s, headport=n, color=gray]
BB7614 [shape=record label="{21294: read-variable['matcher',v33,v32]|21295: read-variable['unmatched',v34,-]|21296: read-variable['setMatched',v35,-]|21297: read-variable['context',v36,-]|21298: read-variable['xml',v37,-]}" ] 
BB7614 -> BB7616 [tailport=s, headport=n, headlabel="      7616"]
BB7614 -> BB7641 [tailport=s, headport=n, color=gray]
BB7615 [shape=record label="{21299: read-variable['seed',v32,-]|21300: if[v32](true-block:7617,false-block:7628)}" ] 
BB7615 -> BB7617 [tailport=s, headport=n, headlabel="      7617"]
BB7615 -> BB7628 [tailport=s, headport=n, headlabel="      7628"]
BB7615 -> BB7641 [tailport=s, headport=n, color=gray]
BB7616 [shape=record label="{21301: call-matcher [v32,v33,v34,v35,v36,v37,-]*}" ] 
BB7616 -> BB7613 [tailport=s, headport=n]
BB7616 -> BB7641 [tailport=s, headport=n, color=gray]
BB7617 [shape=record label="{21302: read-variable['matchedCount',v34,-]|21303: constant[0.0,v35]|21304: \>[v34,v35,v33]|21305: if[v33](true-block:7618,false-block:7625)}" ] 
BB7617 -> BB7618 [tailport=s, headport=n, headlabel="      7618"]
BB7617 -> BB7625 [tailport=s, headport=n, headlabel="      7625"]
BB7617 -> BB7641 [tailport=s, headport=n, color=gray]
BB7618 [shape=record label="{21306: constant[1.0,v37]|21307: read-variable['i',v38,-]|21308: +[v38,v36]|21309: -[v36,v37,v39]|21310: write-variable[v39,'i']|21311: if[v36](true-block:7619,false-block:7625)}" ] 
BB7618 -> BB7619 [tailport=s, headport=n, headlabel="      7619"]
BB7618 -> BB7625 [tailport=s, headport=n]
BB7618 -> BB7641 [tailport=s, headport=n, color=gray]
BB7619 [shape=record label="{21312: read-variable['unmatched',v42,-]|21313: read-variable['i',v43,-]|21314: read-property[v42,v43,v41]|21315: \<variable-non-null-undef\>['unmatched']|21316: if[v41](true-block:7621,false-block:7620)}" ] 
BB7619 -> BB7621 [tailport=s, headport=n, headlabel="      7621"]
BB7619 -> BB7620 [tailport=s, headport=n, headlabel="      7620"]
BB7619 -> BB7641 [tailport=s, headport=n, color=gray]
BB7620 [shape=record label="{21317: read-variable['setMatched',v42,-]|21318: read-variable['i',v43,-]|21319: read-property[v42,v43,v41]|21320: \<variable-non-null-undef\>['setMatched']}" ] 
BB7620 -> BB7621 [tailport=s, headport=n]
BB7620 -> BB7641 [tailport=s, headport=n, color=gray]
BB7621 [shape=record label="{21321: ![v41,v40]|21322: if[v40](true-block:7622,false-block:7618)}" ] 
BB7621 -> BB7622 [tailport=s, headport=n, headlabel="      7622"]
BB7621 -> BB7618 [tailport=s, headport=n]
BB7621 -> BB7641 [tailport=s, headport=n, color=gray]
BB7622 [shape=record label="{21323: read-variable['setMatched',v43,-]|21324: read-variable['i',v44,-]|21325: read-variable['pop',v46,-]|21326: read-property[v46,'call',-]|21327: \<variable-non-null-undef\>['pop']|21328: read-variable['results',v47,-]}" ] 
BB7622 -> BB7623 [tailport=s, headport=n, headlabel="      7623"]
BB7622 -> BB7641 [tailport=s, headport=n, color=gray]
BB7623 [shape=record label="{21329: call-pop.call [v46,'call',v47,v42]}" ] 
BB7623 -> BB7624 [tailport=s, headport=n, headlabel="      7624"]
BB7623 -> BB7641 [tailport=s, headport=n, color=gray]
BB7624 [shape=record label="{21330: write-property[v43,v44,v42]|21331: \<variable-non-null-undef\>['setMatched']*}" ] 
BB7624 -> BB7618 [tailport=s, headport=n]
BB7624 -> BB7641 [tailport=s, headport=n, color=gray]
BB7625 [shape=record label="{21332: read-variable['condense',v38,v37]|21333: read-variable['setMatched',v39,-]}" ] 
BB7625 -> BB7626 [tailport=s, headport=n, headlabel="      7626"]
BB7625 -> BB7641 [tailport=s, headport=n, color=gray]
BB7626 [shape=record label="{21334: call-condense [v37,v38,v39,v36]}" ] 
BB7626 -> BB7627 [tailport=s, headport=n, headlabel="      7627"]
BB7626 -> BB7641 [tailport=s, headport=n, color=gray]
BB7627 [shape=record label="{21335: write-variable[v36,'setMatched']*}" ] 
BB7627 -> BB7628 [tailport=s, headport=n]
BB7628 [shape=record label="{21336: read-variable['push',v34,-]|21337: read-property[v34,'apply',-]|21338: \<variable-non-null-undef\>['push']|21339: read-variable['results',v35,-]|21340: read-variable['setMatched',v36,-]}" ] 
BB7628 -> BB7629 [tailport=s, headport=n, headlabel="      7629"]
BB7628 -> BB7641 [tailport=s, headport=n, color=gray]
BB7629 [shape=record label="{21341: call-push.apply [v34,'apply',v35,v36,-]*}" ] 
BB7629 -> BB7630 [tailport=s, headport=n, headlabel="      7630"]
BB7629 -> BB7641 [tailport=s, headport=n, color=gray]
BB7630 [shape=record label="{21342: read-variable['outermost',v37,-]|21343: if[v37](true-block:7631,false-block:7634)}" ] 
BB7630 -> BB7634 [tailport=s, headport=n, headlabel="      7634"]
BB7630 -> BB7631 [tailport=s, headport=n, headlabel="      7631"]
BB7630 -> BB7641 [tailport=s, headport=n, color=gray]
BB7631 [shape=record label="{21344: read-variable['seed',v38,-]|21345: ![v38,v37]|21346: if[v37](true-block:7632,false-block:7634)}" ] 
BB7631 -> BB7634 [tailport=s, headport=n]
BB7631 -> BB7632 [tailport=s, headport=n, headlabel="      7632"]
BB7631 -> BB7641 [tailport=s, headport=n, color=gray]
BB7632 [shape=record label="{21347: read-variable['setMatched',v41,-]|21348: read-property[v41,'length',v39]|21349: \<variable-non-null-undef\>['setMatched']|21350: constant[0.0,v40]|21351: \>[v39,v40,v37]|21352: if[v37](true-block:7633,false-block:7634)}" ] 
BB7632 -> BB7634 [tailport=s, headport=n]
BB7632 -> BB7633 [tailport=s, headport=n, headlabel="      7633"]
BB7632 -> BB7641 [tailport=s, headport=n, color=gray]
BB7633 [shape=record label="{21353: read-variable['matchedCount',v44,-]|21354: read-variable['setMatchers',v46,-]|21355: read-property[v46,'length',v45]|21356: \<variable-non-null-undef\>['setMatchers']|21357: +[v44,v45,v42]|21358: constant[1.0,v43]|21359: \>[v42,v43,v37]}" ] 
BB7633 -> BB7634 [tailport=s, headport=n]
BB7633 -> BB7641 [tailport=s, headport=n, color=gray]
BB7634 [shape=record label="{21360: if[v37](true-block:7635,false-block:7637)}" ] 
BB7634 -> BB7635 [tailport=s, headport=n, headlabel="      7635"]
BB7634 -> BB7637 [tailport=s, headport=n]
BB7635 [shape=record label="{21361: read-variable['Sizzle',v39,-]|21362: read-property[v39,'uniqueSort',-]|21363: \<variable-non-null-undef\>['Sizzle']|21364: read-variable['results',v40,-]}" ] 
BB7635 -> BB7636 [tailport=s, headport=n, headlabel="      7636"]
BB7635 -> BB7641 [tailport=s, headport=n, color=gray]
BB7636 [shape=record label="{21365: call-Sizzle.uniqueSort [v39,'uniqueSort',v40,-]*}" ] 
BB7636 -> BB7637 [tailport=s, headport=n]
BB7636 -> BB7641 [tailport=s, headport=n, color=gray]
BB7637 [shape=record label="{21366: read-variable['outermost',v25,-]|21367: if[v25](true-block:7638,false-block:7639)}" ] 
BB7637 -> BB7638 [tailport=s, headport=n, headlabel="      7638"]
BB7637 -> BB7639 [tailport=s, headport=n, headlabel="      7639"]
BB7637 -> BB7641 [tailport=s, headport=n, color=gray]
BB7638 [shape=record label="{21368: read-variable['dirrunsUnique',v26,-]|21369: write-variable[v26,'dirruns']*|21370: read-variable['contextBackup',v27,-]|21371: write-variable[v27,'outermostContext']*}" ] 
BB7638 -> BB7639 [tailport=s, headport=n]
BB7638 -> BB7641 [tailport=s, headport=n, color=gray]
BB7639 [shape=record label="{21372: read-variable['unmatched',v1,-]}" ] 
BB7639 -> BB7640 [tailport=s, headport=n, headlabel="      7640"]
BB7639 -> BB7641 [tailport=s, headport=n, color=gray]
BB7640 [shape=record label="{21373: return[v1]}" ] 
BB7641 [shape=record label="{21374: exceptional-return}" ] 
//#$~ 6069
}
