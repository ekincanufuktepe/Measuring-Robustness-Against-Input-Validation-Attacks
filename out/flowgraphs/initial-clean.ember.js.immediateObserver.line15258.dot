digraph {
rankdir="TD"
BB_entry708[shape=none,label=""];
BB_entry708 -> BB8467 [tailport=s, headport=n, headlabel="    8467"]
BB8467 [shape=record label="{29069: constant[undefined,v1]|29070: vardecl['i']|29071: vardecl['l']|29072: vardecl['arg']}" ] 
BB8467 -> BB8468 [tailport=s, headport=n, headlabel="      8468"]
BB8468 [shape=record label="{29073: constant[0.0,v3]|29074: write-variable[v3,'i']*|29075: read-variable['arguments',v5,-]|29076: read-property[v5,'length',v4]|29077: \<variable-non-null-undef\>['arguments']|29078: write-variable[v4,'l']*}" ] 
BB8468 -> BB8469 [tailport=s, headport=n, headlabel="      8469"]
BB8468 -> BB8479 [tailport=s, headport=n, color=gray, headlabel="      8479"]
BB8469 [shape=record label="{29079: read-variable['i',v6,-]|29080: read-variable['l',v7,-]|29081: \<[v6,v7,v2]|29082: if[v2](true-block:8470,false-block:8471)}" ] 
BB8469 -> BB8470 [tailport=s, headport=n, headlabel="      8470"]
BB8469 -> BB8471 [tailport=s, headport=n, headlabel="      8471"]
BB8469 -> BB8479 [tailport=s, headport=n, color=gray]
BB8470 [shape=record label="{29083: read-variable['arguments',v9,-]|29084: read-variable['i',v10,-]|29085: read-property[v9,v10,v8]|29086: \<variable-non-null-undef\>['arguments']|29087: write-variable[v8,'arg']*|29088: read-variable['Ember',v12,-]|29089: read-property[v12,'assert',-]|29090: \<variable-non-null-undef\>['Ember']|29091: constant[\"Immediate observers must observe internal properties only, not properties on other objects.\",v13]|29092: typeof['arg',v15]|29093: constant[\"string\",v16]|29094: !==[v15,v16,v14]|29095: if[v14](true-block:8475,false-block:8472)}" ] 
BB8470 -> BB8475 [tailport=s, headport=n, headlabel="      8475"]
BB8470 -> BB8472 [tailport=s, headport=n, headlabel="      8472"]
BB8470 -> BB8479 [tailport=s, headport=n, color=gray]
BB8471 [shape=record label="{29096: read-variable['observer',v9,-]|29097: read-property[v9,'apply',-]|29098: \<variable-non-null-undef\>['observer']|29099: read-variable['this',v10,-]|29100: read-variable['arguments',v11,-]}" ] 
BB8471 -> BB8477 [tailport=s, headport=n, headlabel="      8477"]
BB8471 -> BB8479 [tailport=s, headport=n, color=gray]
BB8472 [shape=record label="{29101: read-variable['arg',v18,-]|29102: read-property[v18,'indexOf',-]|29103: \<variable-non-null-undef\>['arg']|29104: constant[\".\",v19]}" ] 
BB8472 -> BB8473 [tailport=s, headport=n, headlabel="      8473"]
BB8472 -> BB8479 [tailport=s, headport=n, color=gray]
BB8473 [shape=record label="{29105: call-arg.indexOf [v18,'indexOf',v19,v15]}" ] 
BB8473 -> BB8474 [tailport=s, headport=n, headlabel="      8474"]
BB8473 -> BB8479 [tailport=s, headport=n, color=gray]
BB8474 [shape=record label="{29106: constant[-1.0,v16]|29107: ===[v15,v16,v14]}" ] 
BB8474 -> BB8475 [tailport=s, headport=n]
BB8474 -> BB8479 [tailport=s, headport=n, color=gray]
BB8475 [shape=record label="{29108: call-Ember.assert [v12,'assert',v13,v14,-]*}" ] 
BB8475 -> BB8476 [tailport=s, headport=n, headlabel="      8476"]
BB8475 -> BB8479 [tailport=s, headport=n, color=gray]
BB8476 [shape=record label="{29109: constant[1.0,v15]|29110: read-variable['i',v16,-]|29111: +[v16,v17]|29112: +[v17,v15,v18]|29113: write-variable[v18,'i']}" ] 
BB8476 -> BB8469 [tailport=s, headport=n]
BB8476 -> BB8479 [tailport=s, headport=n, color=gray]
BB8477 [shape=record label="{29114: call-observer.apply [v9,'apply',v10,v11,v1]}" ] 
BB8477 -> BB8478 [tailport=s, headport=n, headlabel="      8478"]
BB8477 -> BB8479 [tailport=s, headport=n, color=gray]
BB8478 [shape=record label="{29115: return[v1]}" ] 
BB8479 [shape=record label="{29116: exceptional-return}" ] 
//#$~ 15265
}
