digraph {
rankdir="TD"
BB_entry49[shape=none,label=""];
BB_entry49 -> BB653 [tailport=s, headport=n, headlabel="    653"]
BB653 [shape=record label="{2297: constant[undefined,v1]|2298: vardecl['identifier']|2299: vardecl['regexp']|2300: vardecl['value']|2301: vardecl['_ref1']}" ] 
BB653 -> BB654 [tailport=s, headport=n, headlabel="      654"]
BB654 [shape=record label="{2302: read-variable['this',v4,-]|2303: read-variable['this',v7,-]|2304: read-property[v7,'view',v6]|2305: read-property[v6,'binders',v5]|2306: \<property-non-null-undef\>[v7,'view']|2307: read-variable['this',v9,-]|2308: read-property[v9,'type',v8]|2309: read-property[v5,v8,v3]|2310: \<property-non-null-undef\>[v6,'binders']|2311: write-property[v4,'binder',v3]|2312: ![v3,v2]|2313: if[v2](true-block:655,false-block:683)}" ] 
BB654 -> BB655 [tailport=s, headport=n, headlabel="      655"]
BB654 -> BB683 [tailport=s, headport=n, headlabel="      683"]
BB654 -> BB688 [tailport=s, headport=n, color=gray, headlabel="      688"]
BB655 [shape=record label="{2314: read-variable['this',v12,-]|2315: read-property[v12,'view',v11]|2316: read-property[v11,'binders',v10]|2317: \<property-non-null-undef\>[v12,'view']|2318: write-variable[v10,'_ref1']*|2319: read-variable['_ref1',v14,-]}" ] 
BB655 -> BB656 [tailport=s, headport=n, headlabel="      656"]
BB655 -> BB688 [tailport=s, headport=n, color=gray]
BB656 [shape=record label="{2320: begin-for-in[v14,v15]}" ] 
BB656 -> BB657 [tailport=s, headport=n, headlabel="      657"]
BB656 -> BB688 [tailport=s, headport=n, color=gray]
BB657 [shape=record label="{2321: has-next[v15,v16]|2322: if[v16](true-block:658,false-block:683)}" ] 
BB657 -> BB658 [tailport=s, headport=n, headlabel="      658"]
BB657 -> BB683 [tailport=s, headport=n]
BB658 [shape=record label="{2323: next-property[v15,v17]|2324: write-variable[v17,'identifier']|2325: read-variable['_ref1',v19,-]|2326: read-variable['identifier',v20,-]|2327: read-property[v19,v20,v18]|2328: \<variable-non-null-undef\>['_ref1']|2329: write-variable[v18,'value']*|2330: read-variable['identifier',v22,-]|2331: constant[\"*\",v23]|2332: !==[v22,v23,v21]|2333: if[v21](true-block:659,false-block:662)}" ] 
BB658 -> BB662 [tailport=s, headport=n, headlabel="      662"]
BB658 -> BB659 [tailport=s, headport=n, headlabel="      659"]
BB658 -> BB688 [tailport=s, headport=n, color=gray]
BB659 [shape=record label="{2334: read-variable['identifier',v27,-]|2335: read-property[v27,'indexOf',-]|2336: \<variable-non-null-undef\>['identifier']|2337: constant[\"*\",v28]}" ] 
BB659 -> BB660 [tailport=s, headport=n, headlabel="      660"]
BB659 -> BB688 [tailport=s, headport=n, color=gray]
BB660 [shape=record label="{2338: call-identifier.indexOf [v27,'indexOf',v28,v24]}" ] 
BB660 -> BB661 [tailport=s, headport=n, headlabel="      661"]
BB660 -> BB688 [tailport=s, headport=n, color=gray]
BB661 [shape=record label="{2339: constant[-1.0,v25]|2340: !==[v24,v25,v21]}" ] 
BB661 -> BB662 [tailport=s, headport=n]
BB661 -> BB688 [tailport=s, headport=n, color=gray]
BB662 [shape=record label="{2341: if[v21](true-block:663,false-block:682)}" ] 
BB662 -> BB663 [tailport=s, headport=n, headlabel="      663"]
BB662 -> BB682 [tailport=s, headport=n, headlabel="      682"]
BB663 [shape=record label="{2342: read-variable['RegExp',v25,-]|2343: constant[\"^\",v29]|2344: read-variable['identifier',v32,-]|2345: read-property[v32,'replace',-]|2346: \<variable-non-null-undef\>['identifier']|2347: read-variable['RegExp',v34,-]|2348: constant[\"\\\\*\",v35]|2349: constant[\"g\",v36]}" ] 
BB663 -> BB664 [tailport=s, headport=n, headlabel="      664"]
BB663 -> BB688 [tailport=s, headport=n, color=gray]
BB664 [shape=record label="{2350: construct [-,v34,v35,v36,v33]}" ] 
BB664 -> BB665 [tailport=s, headport=n, headlabel="      665"]
BB664 -> BB688 [tailport=s, headport=n, color=gray]
BB665 [shape=record label="{2351: constant[\".+\",v37]}" ] 
BB665 -> BB666 [tailport=s, headport=n, headlabel="      666"]
BB666 [shape=record label="{2352: call-identifier.replace [v32,'replace',v33,v37,v30]}" ] 
BB666 -> BB667 [tailport=s, headport=n, headlabel="      667"]
BB666 -> BB688 [tailport=s, headport=n, color=gray]
BB667 [shape=record label="{2353: +[v29,v30,v27]|2354: constant[\"$\",v28]|2355: +[v27,v28,v26]}" ] 
BB667 -> BB668 [tailport=s, headport=n, headlabel="      668"]
BB667 -> BB688 [tailport=s, headport=n, color=gray]
BB668 [shape=record label="{2356: construct [-,v25,v26,v24]}" ] 
BB668 -> BB669 [tailport=s, headport=n, headlabel="      669"]
BB668 -> BB688 [tailport=s, headport=n, color=gray]
BB669 [shape=record label="{2357: write-variable[v24,'regexp']*|2358: read-variable['regexp',v40,-]|2359: read-property[v40,'test',-]|2360: \<variable-non-null-undef\>['regexp']|2361: read-variable['this',v42,-]|2362: read-property[v42,'type',v41]}" ] 
BB669 -> BB670 [tailport=s, headport=n, headlabel="      670"]
BB669 -> BB688 [tailport=s, headport=n, color=gray]
BB670 [shape=record label="{2363: call-regexp.test [v40,'test',v41,v38]}" ] 
BB670 -> BB671 [tailport=s, headport=n, headlabel="      671"]
BB670 -> BB688 [tailport=s, headport=n, color=gray]
BB671 [shape=record label="{2364: if[v38](true-block:672,false-block:682)}" ] 
BB671 -> BB672 [tailport=s, headport=n, headlabel="      672"]
BB671 -> BB682 [tailport=s, headport=n]
BB672 [shape=record label="{2365: read-variable['this',v44,-]|2366: read-variable['value',v43,-]|2367: write-property[v44,'binder',v43]*|2368: read-variable['this',v46,-]|2369: read-variable['RegExp',v49,-]|2370: constant[\"^\",v53]|2371: read-variable['identifier',v56,-]|2372: read-property[v56,'replace',-]|2373: \<variable-non-null-undef\>['identifier']|2374: read-variable['RegExp',v58,-]|2375: constant[\"\\\\*\",v59]|2376: constant[\"g\",v60]}" ] 
BB672 -> BB673 [tailport=s, headport=n, headlabel="      673"]
BB672 -> BB688 [tailport=s, headport=n, color=gray]
BB673 [shape=record label="{2377: construct [-,v58,v59,v60,v57]}" ] 
BB673 -> BB674 [tailport=s, headport=n, headlabel="      674"]
BB673 -> BB688 [tailport=s, headport=n, color=gray]
BB674 [shape=record label="{2378: constant[\"(.+)\",v61]}" ] 
BB674 -> BB675 [tailport=s, headport=n, headlabel="      675"]
BB675 [shape=record label="{2379: call-identifier.replace [v56,'replace',v57,v61,v54]}" ] 
BB675 -> BB676 [tailport=s, headport=n, headlabel="      676"]
BB675 -> BB688 [tailport=s, headport=n, color=gray]
BB676 [shape=record label="{2380: +[v53,v54,v51]|2381: constant[\"$\",v52]|2382: +[v51,v52,v50]}" ] 
BB676 -> BB677 [tailport=s, headport=n, headlabel="      677"]
BB676 -> BB688 [tailport=s, headport=n, color=gray]
BB677 [shape=record label="{2383: construct [-,v49,v50,v48]}" ] 
BB677 -> BB678 [tailport=s, headport=n, headlabel="      678"]
BB677 -> BB688 [tailport=s, headport=n, color=gray]
BB678 [shape=record label="{2384: read-property[v48,'exec',-]|2385: read-variable['this',v63,-]|2386: read-property[v63,'type',v62]}" ] 
BB678 -> BB679 [tailport=s, headport=n, headlabel="      679"]
BB678 -> BB688 [tailport=s, headport=n, color=gray]
BB679 [shape=record label="{2387: call-null [v48,'exec',v62,v45]}" ] 
BB679 -> BB680 [tailport=s, headport=n, headlabel="      680"]
BB679 -> BB688 [tailport=s, headport=n, color=gray]
BB680 [shape=record label="{2388: write-property[v46,'args',v45]*|2389: read-variable['this',v66,-]|2390: read-property[v66,'args',v65]|2391: read-property[v65,'shift',-]|2392: \<property-non-null-undef\>[v66,'args']}" ] 
BB680 -> BB681 [tailport=s, headport=n, headlabel="      681"]
BB680 -> BB688 [tailport=s, headport=n, color=gray]
BB681 [shape=record label="{2393: call-this.args.shift [v65,'shift',-]*}" ] 
BB681 -> BB682 [tailport=s, headport=n]
BB681 -> BB688 [tailport=s, headport=n, color=gray]
BB682 [shape=record label="{2394: end-for-in(begin-node:2320)}" ] 
BB682 -> BB657 [tailport=s, headport=n]
BB683 [shape=record label="{2395: read-variable['this',v11,-]|2396: read-property[v11,'binder',v10]|2397: if[v10](true-block:685,false-block:684)}" ] 
BB683 -> BB685 [tailport=s, headport=n, headlabel="      685"]
BB683 -> BB684 [tailport=s, headport=n, headlabel="      684"]
BB683 -> BB688 [tailport=s, headport=n, color=gray]
BB684 [shape=record label="{2398: read-variable['this',v12,-]|2399: read-variable['this',v15,-]|2400: read-property[v15,'view',v14]|2401: read-property[v14,'binders',v13]|2402: \<property-non-null-undef\>[v15,'view']|2403: read-property[v13,'*',v11]|2404: \<property-non-null-undef\>[v14,'binders']|2405: write-property[v12,'binder',v11]}" ] 
BB684 -> BB685 [tailport=s, headport=n]
BB684 -> BB688 [tailport=s, headport=n, color=gray]
BB685 [shape=record label="{2406: read-variable['this',v14,-]|2407: read-property[v14,'binder',v12]|2408: read-variable['Function',v13,-]|2409: instanceof[v12,v13,v11]|2410: if[v11](true-block:686,false-block:687)}" ] 
BB685 -> BB686 [tailport=s, headport=n, headlabel="      686"]
BB685 -> BB687 [tailport=s, headport=n, headlabel="      687"]
BB685 -> BB688 [tailport=s, headport=n, color=gray]
BB686 [shape=record label="{2411: read-variable['this',v15,-]|2412: new[v1]|2413: read-variable['this',v17,-]|2414: read-property[v17,'binder',v16]|2415: write-property[v1,'routine',v16]|2416: write-property[v15,'binder',v1]}" ] 
BB686 -> BB687 [tailport=s, headport=n]
BB686 -> BB688 [tailport=s, headport=n, color=gray]
BB687 [shape=record label="{2417: return[v1]}" ] 
BB688 [shape=record label="{2418: exceptional-return}" ] 
//#$~ 571
}
