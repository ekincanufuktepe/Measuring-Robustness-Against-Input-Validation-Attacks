digraph {
rankdir="TD"
BB_entry154[shape=none,label=""];
BB_entry154 -> BB2090 [tailport=s, headport=n, headlabel="    2090"]
BB2090 [shape=record label="{5620: constant[undefined,v1]|5621: vardecl['arrayProto']|5622: vardecl['slice']|5623: vardecl['_each']|5624: function-decl[function each ( iterator context ),-]|5625: function-decl[function clear ( ),-]|5626: function-decl[function first ( ),-]|5627: function-decl[function last ( ),-]|5628: function-decl[function compact ( ),-]|5629: function-decl[function flatten ( ),-]|5630: function-decl[function without ( ),-]|5631: function-decl[function reverse ( inline ),-]|5632: function-decl[function uniq ( sorted ),-]|5633: function-decl[function intersect ( array ),-]|5634: function-decl[function clone ( ),-]|5635: function-decl[function size ( ),-]|5636: function-decl[function inspect ( ),-]|5637: function-decl[function indexOf ( item i ),-]|5638: function-decl[function lastIndexOf ( item i ),-]|5639: function-decl[function concat ( _ ),-]|5640: function-decl[function wrapNative ( method ),-]|5641: function-decl[function map ( iterator ),-]|5642: function-decl[function filter ( iterator ),-]|5643: function-decl[function some ( iterator ),-]|5644: vardecl['some']|5645: function-decl[function every ( iterator ),-]|5646: vardecl['every']|5647: vardecl['_reduce']|5648: function-decl[function inject ( memo iterator ),-]|5649: vardecl['inject']|5650: vardecl['CONCAT_ARGUMENTS_BUGGY']}" ] 
BB2090 -> BB2091 [tailport=s, headport=n, headlabel="      2091"]
BB2091 [shape=record label="{5651: read-variable['Array',v3,-]|5652: read-property[v3,'prototype',v2]|5653: \<variable-non-null-undef\>['Array']|5654: write-variable[v2,'arrayProto']*|5655: read-variable['arrayProto',v5,-]|5656: read-property[v5,'slice',v4]|5657: \<variable-non-null-undef\>['arrayProto']|5658: write-variable[v4,'slice']*|5659: read-variable['arrayProto',v7,-]|5660: read-property[v7,'forEach',v6]|5661: \<variable-non-null-undef\>['arrayProto']|5662: write-variable[v6,'_each']*|5663: read-variable['_each',v9,-]|5664: ![v9,v8]|5665: if[v8](true-block:2092,false-block:2093)}" ] 
BB2091 -> BB2092 [tailport=s, headport=n, headlabel="      2092"]
BB2091 -> BB2093 [tailport=s, headport=n, headlabel="      2093"]
BB2091 -> BB2124 [tailport=s, headport=n, color=gray, headlabel="      2124"]
BB2092 [shape=record label="{5666: read-variable['each',v10,-]|5667: write-variable[v10,'_each']*}" ] 
BB2092 -> BB2093 [tailport=s, headport=n]
BB2092 -> BB2124 [tailport=s, headport=n, color=gray]
BB2093 [shape=record label="{5668: read-variable['arrayProto',v11,-]|5669: read-property[v11,'map',v10]|5670: \<variable-non-null-undef\>['arrayProto']|5671: if[v10](true-block:2094,false-block:2097)}" ] 
BB2093 -> BB2094 [tailport=s, headport=n, headlabel="      2094"]
BB2093 -> BB2097 [tailport=s, headport=n, headlabel="      2097"]
BB2093 -> BB2124 [tailport=s, headport=n, color=gray]
BB2094 [shape=record label="{5672: read-variable['wrapNative',v14,v13]|5673: read-variable['Array',v17,-]|5674: read-property[v17,'prototype',v16]|5675: \<variable-non-null-undef\>['Array']|5676: read-property[v16,'map',v15]|5677: \<property-non-null-undef\>[v17,'prototype']}" ] 
BB2094 -> BB2095 [tailport=s, headport=n, headlabel="      2095"]
BB2094 -> BB2124 [tailport=s, headport=n, color=gray]
BB2095 [shape=record label="{5678: call-wrapNative [v13,v14,v15,v12]}" ] 
BB2095 -> BB2096 [tailport=s, headport=n, headlabel="      2096"]
BB2095 -> BB2124 [tailport=s, headport=n, color=gray]
BB2096 [shape=record label="{5679: write-variable[v12,'map']*}" ] 
BB2096 -> BB2097 [tailport=s, headport=n]
BB2097 [shape=record label="{5680: read-variable['arrayProto',v13,-]|5681: read-property[v13,'filter',v12]|5682: \<variable-non-null-undef\>['arrayProto']|5683: if[v12](true-block:2098,false-block:2099)}" ] 
BB2097 -> BB2098 [tailport=s, headport=n, headlabel="      2098"]
BB2097 -> BB2099 [tailport=s, headport=n, headlabel="      2099"]
BB2097 -> BB2124 [tailport=s, headport=n, color=gray]
BB2098 [shape=record label="{5684: read-variable['Array',v16,-]|5685: read-property[v16,'prototype',v15]|5686: \<variable-non-null-undef\>['Array']|5687: read-property[v15,'filter',v14]|5688: \<property-non-null-undef\>[v16,'prototype']|5689: write-variable[v14,'filter']*}" ] 
BB2098 -> BB2099 [tailport=s, headport=n]
BB2098 -> BB2124 [tailport=s, headport=n, color=gray]
BB2099 [shape=record label="{5690: read-variable['arrayProto',v15,-]|5691: read-property[v15,'some',v14]|5692: \<variable-non-null-undef\>['arrayProto']|5693: if[v14](true-block:2100,false-block:2103)}" ] 
BB2099 -> BB2100 [tailport=s, headport=n, headlabel="      2100"]
BB2099 -> BB2103 [tailport=s, headport=n, headlabel="      2103"]
BB2099 -> BB2124 [tailport=s, headport=n, color=gray]
BB2100 [shape=record label="{5694: read-variable['wrapNative',v18,v17]|5695: read-variable['Array',v21,-]|5696: read-property[v21,'prototype',v20]|5697: \<variable-non-null-undef\>['Array']|5698: read-property[v20,'some',v19]|5699: \<property-non-null-undef\>[v21,'prototype']}" ] 
BB2100 -> BB2101 [tailport=s, headport=n, headlabel="      2101"]
BB2100 -> BB2124 [tailport=s, headport=n, color=gray]
BB2101 [shape=record label="{5700: call-wrapNative [v17,v18,v19,v16]}" ] 
BB2101 -> BB2102 [tailport=s, headport=n, headlabel="      2102"]
BB2101 -> BB2124 [tailport=s, headport=n, color=gray]
BB2102 [shape=record label="{5701: write-variable[v16,'some']*}" ] 
BB2102 -> BB2103 [tailport=s, headport=n]
BB2103 [shape=record label="{5702: read-variable['arrayProto',v17,-]|5703: read-property[v17,'every',v16]|5704: \<variable-non-null-undef\>['arrayProto']|5705: if[v16](true-block:2104,false-block:2107)}" ] 
BB2103 -> BB2104 [tailport=s, headport=n, headlabel="      2104"]
BB2103 -> BB2107 [tailport=s, headport=n, headlabel="      2107"]
BB2103 -> BB2124 [tailport=s, headport=n, color=gray]
BB2104 [shape=record label="{5706: read-variable['wrapNative',v20,v19]|5707: read-variable['Array',v23,-]|5708: read-property[v23,'prototype',v22]|5709: \<variable-non-null-undef\>['Array']|5710: read-property[v22,'every',v21]|5711: \<property-non-null-undef\>[v23,'prototype']}" ] 
BB2104 -> BB2105 [tailport=s, headport=n, headlabel="      2105"]
BB2104 -> BB2124 [tailport=s, headport=n, color=gray]
BB2105 [shape=record label="{5712: call-wrapNative [v19,v20,v21,v18]}" ] 
BB2105 -> BB2106 [tailport=s, headport=n, headlabel="      2106"]
BB2105 -> BB2124 [tailport=s, headport=n, color=gray]
BB2106 [shape=record label="{5713: write-variable[v18,'every']*}" ] 
BB2106 -> BB2107 [tailport=s, headport=n]
BB2107 [shape=record label="{5714: read-variable['arrayProto',v19,-]|5715: read-property[v19,'reduce',v18]|5716: \<variable-non-null-undef\>['arrayProto']|5717: write-variable[v18,'_reduce']*|5718: read-variable['arrayProto',v22,-]|5719: read-property[v22,'reduce',v21]|5720: \<variable-non-null-undef\>['arrayProto']|5721: ![v21,v20]|5722: if[v20](true-block:2108,false-block:2109)}" ] 
BB2107 -> BB2108 [tailport=s, headport=n, headlabel="      2108"]
BB2107 -> BB2109 [tailport=s, headport=n, headlabel="      2109"]
BB2107 -> BB2124 [tailport=s, headport=n, color=gray]
BB2108 [shape=record label="{5723: read-variable['Enumerable',v24,-]|5724: read-property[v24,'inject',v23]|5725: \<variable-non-null-undef\>['Enumerable']|5726: write-variable[v23,'inject']*}" ] 
BB2108 -> BB2109 [tailport=s, headport=n]
BB2108 -> BB2124 [tailport=s, headport=n, color=gray]
BB2109 [shape=record label="{5727: read-variable['Object',v24,-]|5728: read-property[v24,'extend',-]|5729: \<variable-non-null-undef\>['Object']|5730: read-variable['arrayProto',v25,-]|5731: read-variable['Enumerable',v26,-]}" ] 
BB2109 -> BB2110 [tailport=s, headport=n, headlabel="      2110"]
BB2109 -> BB2124 [tailport=s, headport=n, color=gray]
BB2110 [shape=record label="{5732: call-Object.extend [v24,'extend',v25,v26,-]*}" ] 
BB2110 -> BB2111 [tailport=s, headport=n, headlabel="      2111"]
BB2110 -> BB2124 [tailport=s, headport=n, color=gray]
BB2111 [shape=record label="{5733: read-variable['arrayProto',v29,-]|5734: read-property[v29,'_reverse',v28]|5735: \<variable-non-null-undef\>['arrayProto']|5736: ![v28,v27]|5737: if[v27](true-block:2112,false-block:2113)}" ] 
BB2111 -> BB2112 [tailport=s, headport=n, headlabel="      2112"]
BB2111 -> BB2113 [tailport=s, headport=n, headlabel="      2113"]
BB2111 -> BB2124 [tailport=s, headport=n, color=gray]
BB2112 [shape=record label="{5738: read-variable['arrayProto',v31,-]|5739: read-variable['arrayProto',v32,-]|5740: read-property[v32,'reverse',v30]|5741: \<variable-non-null-undef\>['arrayProto']|5742: write-property[v31,'_reverse',v30]|5743: \<variable-non-null-undef\>['arrayProto']*}" ] 
BB2112 -> BB2113 [tailport=s, headport=n]
BB2112 -> BB2124 [tailport=s, headport=n, color=gray]
BB2113 [shape=record label="{5744: read-variable['Object',v31,-]|5745: read-property[v31,'extend',-]|5746: \<variable-non-null-undef\>['Object']|5747: read-variable['arrayProto',v32,-]|5748: new[v33]|5749: read-variable['_each',v34,-]|5750: write-property[v33,'_each',v34]|5751: read-variable['map',v35,-]|5752: write-property[v33,'map',v35]|5753: read-variable['map',v36,-]|5754: write-property[v33,'collect',v36]|5755: read-variable['filter',v37,-]|5756: write-property[v33,'select',v37]|5757: read-variable['filter',v38,-]|5758: write-property[v33,'filter',v38]|5759: read-variable['filter',v39,-]|5760: write-property[v33,'findAll',v39]|5761: read-variable['some',v40,-]|5762: write-property[v33,'some',v40]|5763: read-variable['some',v41,-]|5764: write-property[v33,'any',v41]|5765: read-variable['every',v42,-]|5766: write-property[v33,'every',v42]|5767: read-variable['every',v43,-]|5768: write-property[v33,'all',v43]|5769: read-variable['inject',v44,-]|5770: write-property[v33,'inject',v44]|5771: read-variable['clear',v45,-]|5772: write-property[v33,'clear',v45]|5773: read-variable['first',v46,-]|5774: write-property[v33,'first',v46]|5775: read-variable['last',v47,-]|5776: write-property[v33,'last',v47]|5777: read-variable['compact',v48,-]|5778: write-property[v33,'compact',v48]|5779: read-variable['flatten',v49,-]|5780: write-property[v33,'flatten',v49]|5781: read-variable['without',v50,-]|5782: write-property[v33,'without',v50]|5783: read-variable['reverse',v51,-]|5784: write-property[v33,'reverse',v51]|5785: read-variable['uniq',v52,-]|5786: write-property[v33,'uniq',v52]|5787: read-variable['intersect',v53,-]|5788: write-property[v33,'intersect',v53]|5789: read-variable['clone',v54,-]|5790: write-property[v33,'clone',v54]|5791: read-variable['clone',v55,-]|5792: write-property[v33,'toArray',v55]|5793: read-variable['size',v56,-]|5794: write-property[v33,'size',v56]|5795: read-variable['inspect',v57,-]|5796: write-property[v33,'inspect',v57]}" ] 
BB2113 -> BB2114 [tailport=s, headport=n, headlabel="      2114"]
BB2113 -> BB2124 [tailport=s, headport=n, color=gray]
BB2114 [shape=record label="{5797: call-Object.extend [v31,'extend',v32,v33,-]*}" ] 
BB2114 -> BB2115 [tailport=s, headport=n, headlabel="      2115"]
BB2114 -> BB2124 [tailport=s, headport=n, color=gray]
BB2115 [shape=record label="{5798: function-expr[function ( ),v59]|5799: constant[1.0,v60]|5800: constant[2.0,v61]}" ] 
BB2115 -> BB2116 [tailport=s, headport=n, headlabel="      2116"]
BB2116 [shape=record label="{5801: call-null [-,v59,v60,v61,v58]}" ] 
BB2116 -> BB2117 [tailport=s, headport=n, headlabel="      2117"]
BB2116 -> BB2124 [tailport=s, headport=n, color=gray]
BB2117 [shape=record label="{5802: write-variable[v58,'CONCAT_ARGUMENTS_BUGGY']*|5803: read-variable['CONCAT_ARGUMENTS_BUGGY',v62,-]|5804: if[v62](true-block:2118,false-block:2119)}" ] 
BB2117 -> BB2118 [tailport=s, headport=n, headlabel="      2118"]
BB2117 -> BB2119 [tailport=s, headport=n, headlabel="      2119"]
BB2117 -> BB2124 [tailport=s, headport=n, color=gray]
BB2118 [shape=record label="{5805: read-variable['arrayProto',v64,-]|5806: read-variable['concat',v63,-]|5807: write-property[v64,'concat',v63]|5808: \<variable-non-null-undef\>['arrayProto']*}" ] 
BB2118 -> BB2119 [tailport=s, headport=n]
BB2118 -> BB2124 [tailport=s, headport=n, color=gray]
BB2119 [shape=record label="{5809: read-variable['arrayProto',v65,-]|5810: read-property[v65,'indexOf',v64]|5811: \<variable-non-null-undef\>['arrayProto']|5812: ![v64,v63]|5813: if[v63](true-block:2120,false-block:2121)}" ] 
BB2119 -> BB2120 [tailport=s, headport=n, headlabel="      2120"]
BB2119 -> BB2121 [tailport=s, headport=n, headlabel="      2121"]
BB2119 -> BB2124 [tailport=s, headport=n, color=gray]
BB2120 [shape=record label="{5814: read-variable['arrayProto',v67,-]|5815: read-variable['indexOf',v66,-]|5816: write-property[v67,'indexOf',v66]|5817: \<variable-non-null-undef\>['arrayProto']*}" ] 
BB2120 -> BB2121 [tailport=s, headport=n]
BB2120 -> BB2124 [tailport=s, headport=n, color=gray]
BB2121 [shape=record label="{5818: read-variable['arrayProto',v68,-]|5819: read-property[v68,'lastIndexOf',v67]|5820: \<variable-non-null-undef\>['arrayProto']|5821: ![v67,v66]|5822: if[v66](true-block:2122,false-block:2123)}" ] 
BB2121 -> BB2122 [tailport=s, headport=n, headlabel="      2122"]
BB2121 -> BB2123 [tailport=s, headport=n, headlabel="      2123"]
BB2121 -> BB2124 [tailport=s, headport=n, color=gray]
BB2122 [shape=record label="{5823: read-variable['arrayProto',v70,-]|5824: read-variable['lastIndexOf',v69,-]|5825: write-property[v70,'lastIndexOf',v69]|5826: \<variable-non-null-undef\>['arrayProto']*}" ] 
BB2122 -> BB2123 [tailport=s, headport=n]
BB2122 -> BB2124 [tailport=s, headport=n, color=gray]
BB2123 [shape=record label="{5827: return[v1]}" ] 
BB2124 [shape=record label="{5828: exceptional-return}" ] 
//#$~ 1410
}
