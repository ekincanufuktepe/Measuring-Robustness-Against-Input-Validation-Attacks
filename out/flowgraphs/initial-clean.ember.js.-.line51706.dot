digraph {
rankdir="TD"
BB_entry2546[shape=none,label=""];
BB_entry2546 -> BB28837 [tailport=s, headport=n, headlabel="    28837"]
BB28837 [shape=record label="{95910: constant[undefined,v1]|95911: vardecl['length']|95912: vardecl['results']|95913: vardecl['i']}" ] 
BB28837 -> BB28838 [tailport=s, headport=n, headlabel="      28838"]
BB28838 [shape=record label="{95914: read-variable['isFunction',v5,v4]|95915: read-variable['mapFn',v6,-]}" ] 
BB28838 -> BB28839 [tailport=s, headport=n, headlabel="      28839"]
BB28838 -> BB28854 [tailport=s, headport=n, color=gray, headlabel="      28854"]
BB28839 [shape=record label="{95916: call-isFunction [v4,v5,v6,v3]}" ] 
BB28839 -> BB28840 [tailport=s, headport=n, headlabel="      28840"]
BB28839 -> BB28854 [tailport=s, headport=n, color=gray]
BB28840 [shape=record label="{95917: ![v3,v2]|95918: if[v2](true-block:28841,false-block:28844)}" ] 
BB28840 -> BB28841 [tailport=s, headport=n, headlabel="      28841"]
BB28840 -> BB28844 [tailport=s, headport=n, headlabel="      28844"]
BB28840 -> BB28854 [tailport=s, headport=n, color=gray]
BB28841 [shape=record label="{95919: read-variable['TypeError',v8,-]|95920: constant[\"You must pass a function as map's second argument.\",v9]}" ] 
BB28841 -> BB28842 [tailport=s, headport=n, headlabel="      28842"]
BB28841 -> BB28854 [tailport=s, headport=n, color=gray]
BB28842 [shape=record label="{95921: construct [-,v8,v9,v7]}" ] 
BB28842 -> BB28843 [tailport=s, headport=n, headlabel="      28843"]
BB28842 -> BB28854 [tailport=s, headport=n, color=gray]
BB28843 [shape=record label="{95922: throw[v7]*}" ] 
BB28843 -> BB28844 [tailport=s, headport=n]
BB28843 -> BB28854 [tailport=s, headport=n, color=gray]
BB28844 [shape=record label="{95923: read-variable['values',v8,-]|95924: read-property[v8,'length',v7]|95925: \<variable-non-null-undef\>['values']|95926: write-variable[v7,'length']*|95927: read-variable['Array',v10,-]|95928: read-variable['length',v11,-]}" ] 
BB28844 -> BB28845 [tailport=s, headport=n, headlabel="      28845"]
BB28844 -> BB28854 [tailport=s, headport=n, color=gray]
BB28845 [shape=record label="{95929: construct [-,v10,v11,v9]}" ] 
BB28845 -> BB28846 [tailport=s, headport=n, headlabel="      28846"]
BB28845 -> BB28854 [tailport=s, headport=n, color=gray]
BB28846 [shape=record label="{95930: write-variable[v9,'results']*|95931: constant[0.0,v13]|95932: write-variable[v13,'i']*}" ] 
BB28846 -> BB28847 [tailport=s, headport=n, headlabel="      28847"]
BB28847 [shape=record label="{95933: read-variable['i',v14,-]|95934: read-variable['length',v15,-]|95935: \<[v14,v15,v12]|95936: if[v12](true-block:28848,false-block:28849)}" ] 
BB28847 -> BB28848 [tailport=s, headport=n, headlabel="      28848"]
BB28847 -> BB28849 [tailport=s, headport=n, headlabel="      28849"]
BB28847 -> BB28854 [tailport=s, headport=n, color=gray]
BB28848 [shape=record label="{95937: read-variable['results',v17,-]|95938: read-variable['i',v18,-]|95939: read-variable['mapFn',v20,v19]|95940: read-variable['values',v22,-]|95941: read-variable['i',v23,-]|95942: read-property[v22,v23,v21]|95943: \<variable-non-null-undef\>['values']}" ] 
BB28848 -> BB28850 [tailport=s, headport=n, headlabel="      28850"]
BB28848 -> BB28854 [tailport=s, headport=n, color=gray]
BB28849 [shape=record label="{95944: read-variable['Promise',v17,-]|95945: read-property[v17,'all',-]|95946: \<variable-non-null-undef\>['Promise']|95947: read-variable['results',v18,-]|95948: read-variable['label',v19,-]}" ] 
BB28849 -> BB28852 [tailport=s, headport=n, headlabel="      28852"]
BB28849 -> BB28854 [tailport=s, headport=n, color=gray]
BB28850 [shape=record label="{95949: call-mapFn [v19,v20,v21,v16]}" ] 
BB28850 -> BB28851 [tailport=s, headport=n, headlabel="      28851"]
BB28850 -> BB28854 [tailport=s, headport=n, color=gray]
BB28851 [shape=record label="{95950: write-property[v17,v18,v16]|95951: \<variable-non-null-undef\>['results']*|95952: constant[1.0,v24]|95953: read-variable['i',v25,-]|95954: +[v25,v26]|95955: +[v26,v24,v27]|95956: write-variable[v27,'i']}" ] 
BB28851 -> BB28847 [tailport=s, headport=n]
BB28851 -> BB28854 [tailport=s, headport=n, color=gray]
BB28852 [shape=record label="{95957: call-Promise.all [v17,'all',v18,v19,v1]}" ] 
BB28852 -> BB28853 [tailport=s, headport=n, headlabel="      28853"]
BB28852 -> BB28854 [tailport=s, headport=n, color=gray]
BB28853 [shape=record label="{95958: return[v1]}" ] 
BB28854 [shape=record label="{95959: exceptional-return}" ] 
//#$~ 51718
}
