digraph {
rankdir="TD"
BB_entry67[shape=none,label=""];
BB_entry67 -> BB1271 [tailport=s, headport=n, headlabel="    1271"]
BB1271 [shape=record label="{3504: constant[undefined,v1]|3505: vardecl['NATIVE_JSON_PARSE_SUPPORT']|3506: function-decl[function prepareReplacement ( replacement ),-]|3507: function-decl[function isNonEmptyRegExp ( regexp ),-]|3508: function-decl[function gsub ( pattern replacement ),-]|3509: function-decl[function sub ( pattern replacement count ),-]|3510: function-decl[function scan ( pattern iterator ),-]|3511: function-decl[function truncate ( length truncation ),-]|3512: function-decl[function strip ( ),-]|3513: function-decl[function stripTags ( ),-]|3514: function-decl[function stripScripts ( ),-]|3515: function-decl[function extractScripts ( ),-]|3516: function-decl[function evalScripts ( ),-]|3517: function-decl[function escapeHTML ( ),-]|3518: function-decl[function unescapeHTML ( ),-]|3519: function-decl[function toQueryParams ( separator ),-]|3520: function-decl[function toArray ( ),-]|3521: function-decl[function succ ( ),-]|3522: function-decl[function times ( count ),-]|3523: function-decl[function camelize ( ),-]|3524: function-decl[function capitalize ( ),-]|3525: function-decl[function underscore ( ),-]|3526: function-decl[function dasherize ( ),-]|3527: function-decl[function inspect ( useDoubleQuotes ),-]|3528: function-decl[function unfilterJSON ( filter ),-]|3529: function-decl[function isJSON ( ),-]|3530: function-decl[function evalJSON ( sanitize ),-]|3531: function-decl[function parseJSON ( ),-]|3532: function-decl[function include ( pattern ),-]|3533: function-decl[function startsWith ( pattern position ),-]|3534: function-decl[function endsWith ( pattern position ),-]|3535: function-decl[function empty ( ),-]|3536: function-decl[function blank ( ),-]|3537: function-decl[function interpolate ( object pattern ),-]}" ] 
BB1271 -> BB1272 [tailport=s, headport=n, headlabel="      1272"]
BB1272 [shape=record label="{3538: read-variable['window',v3,-]|3539: read-property[v3,'JSON',v2]|3540: \<variable-non-null-undef\>['window']|3541: if[v2](true-block:1273,false-block:1277)}" ] 
BB1272 -> BB1277 [tailport=s, headport=n, headlabel="      1277"]
BB1272 -> BB1273 [tailport=s, headport=n, headlabel="      1273"]
BB1272 -> BB1288 [tailport=s, headport=n, color=gray, headlabel="      1288"]
BB1273 [shape=record label="{3542: read-variable['JSON',v7,-]|3543: read-property[v7,'parse',v6]|3544: \<variable-non-null-undef\>['JSON']|3545: typeof[v6,v4]|3546: constant[\"function\",v5]|3547: ===[v4,v5,v2]|3548: if[v2](true-block:1274,false-block:1277)}" ] 
BB1273 -> BB1277 [tailport=s, headport=n]
BB1273 -> BB1274 [tailport=s, headport=n, headlabel="      1274"]
BB1273 -> BB1288 [tailport=s, headport=n, color=gray]
BB1274 [shape=record label="{3549: read-variable['JSON',v10,-]|3550: read-property[v10,'parse',-]|3551: \<variable-non-null-undef\>['JSON']|3552: constant[\"\\\{\\\"test\\\": true\\\}\",v11]}" ] 
BB1274 -> BB1275 [tailport=s, headport=n, headlabel="      1275"]
BB1274 -> BB1288 [tailport=s, headport=n, color=gray]
BB1275 [shape=record label="{3553: call-JSON.parse [v10,'parse',v11,v8]}" ] 
BB1275 -> BB1276 [tailport=s, headport=n, headlabel="      1276"]
BB1275 -> BB1288 [tailport=s, headport=n, color=gray]
BB1276 [shape=record label="{3554: read-property[v8,'test',v2]}" ] 
BB1276 -> BB1277 [tailport=s, headport=n]
BB1276 -> BB1288 [tailport=s, headport=n, color=gray]
BB1277 [shape=record label="{3555: write-variable[v2,'NATIVE_JSON_PARSE_SUPPORT']*|3556: new[v1]|3557: read-variable['gsub',v4,-]|3558: write-property[v1,'gsub',v4]|3559: read-variable['sub',v5,-]|3560: write-property[v1,'sub',v5]|3561: read-variable['scan',v6,-]|3562: write-property[v1,'scan',v6]|3563: read-variable['truncate',v7,-]|3564: write-property[v1,'truncate',v7]|3565: read-variable['String',v10,-]|3566: read-property[v10,'prototype',v9]|3567: \<variable-non-null-undef\>['String']|3568: read-property[v9,'trim',v8]|3569: \<property-non-null-undef\>[v10,'prototype']|3570: if[v8](true-block:1279,false-block:1278)}" ] 
BB1277 -> BB1279 [tailport=s, headport=n, headlabel="      1279"]
BB1277 -> BB1278 [tailport=s, headport=n, headlabel="      1278"]
BB1277 -> BB1288 [tailport=s, headport=n, color=gray]
BB1278 [shape=record label="{3571: read-variable['strip',v8,-]}" ] 
BB1278 -> BB1279 [tailport=s, headport=n]
BB1278 -> BB1288 [tailport=s, headport=n, color=gray]
BB1279 [shape=record label="{3572: write-property[v1,'strip',v8]|3573: read-variable['stripTags',v9,-]|3574: write-property[v1,'stripTags',v9]|3575: read-variable['stripScripts',v10,-]|3576: write-property[v1,'stripScripts',v10]|3577: read-variable['extractScripts',v11,-]|3578: write-property[v1,'extractScripts',v11]|3579: read-variable['evalScripts',v12,-]|3580: write-property[v1,'evalScripts',v12]|3581: read-variable['escapeHTML',v13,-]|3582: write-property[v1,'escapeHTML',v13]|3583: read-variable['unescapeHTML',v14,-]|3584: write-property[v1,'unescapeHTML',v14]|3585: read-variable['toQueryParams',v15,-]|3586: write-property[v1,'toQueryParams',v15]|3587: read-variable['toQueryParams',v16,-]|3588: write-property[v1,'parseQuery',v16]|3589: read-variable['toArray',v17,-]|3590: write-property[v1,'toArray',v17]|3591: read-variable['succ',v18,-]|3592: write-property[v1,'succ',v18]|3593: read-variable['times',v19,-]|3594: write-property[v1,'times',v19]|3595: read-variable['camelize',v20,-]|3596: write-property[v1,'camelize',v20]|3597: read-variable['capitalize',v21,-]|3598: write-property[v1,'capitalize',v21]|3599: read-variable['underscore',v22,-]|3600: write-property[v1,'underscore',v22]|3601: read-variable['dasherize',v23,-]|3602: write-property[v1,'dasherize',v23]|3603: read-variable['inspect',v24,-]|3604: write-property[v1,'inspect',v24]|3605: read-variable['unfilterJSON',v25,-]|3606: write-property[v1,'unfilterJSON',v25]|3607: read-variable['isJSON',v26,-]|3608: write-property[v1,'isJSON',v26]|3609: read-variable['NATIVE_JSON_PARSE_SUPPORT',v28,-]|3610: if[v28](true-block:1280,false-block:1281)}" ] 
BB1279 -> BB1280 [tailport=s, headport=n, headlabel="      1280"]
BB1279 -> BB1281 [tailport=s, headport=n, headlabel="      1281"]
BB1279 -> BB1288 [tailport=s, headport=n, color=gray]
BB1280 [shape=record label="{3611: read-variable['parseJSON',v27,-]}" ] 
BB1280 -> BB1282 [tailport=s, headport=n, headlabel="      1282"]
BB1280 -> BB1288 [tailport=s, headport=n, color=gray]
BB1281 [shape=record label="{3612: read-variable['evalJSON',v27,-]}" ] 
BB1281 -> BB1282 [tailport=s, headport=n]
BB1281 -> BB1288 [tailport=s, headport=n, color=gray]
BB1282 [shape=record label="{3613: write-property[v1,'evalJSON',v27]|3614: read-variable['include',v29,-]|3615: write-property[v1,'include',v29]|3616: read-variable['String',v32,-]|3617: read-property[v32,'prototype',v31]|3618: \<variable-non-null-undef\>['String']|3619: read-property[v31,'startsWith',v30]|3620: \<property-non-null-undef\>[v32,'prototype']|3621: if[v30](true-block:1284,false-block:1283)}" ] 
BB1282 -> BB1284 [tailport=s, headport=n, headlabel="      1284"]
BB1282 -> BB1283 [tailport=s, headport=n, headlabel="      1283"]
BB1282 -> BB1288 [tailport=s, headport=n, color=gray]
BB1283 [shape=record label="{3622: read-variable['startsWith',v30,-]}" ] 
BB1283 -> BB1284 [tailport=s, headport=n]
BB1283 -> BB1288 [tailport=s, headport=n, color=gray]
BB1284 [shape=record label="{3623: write-property[v1,'startsWith',v30]|3624: read-variable['String',v33,-]|3625: read-property[v33,'prototype',v32]|3626: \<variable-non-null-undef\>['String']|3627: read-property[v32,'endsWith',v31]|3628: \<property-non-null-undef\>[v33,'prototype']|3629: if[v31](true-block:1286,false-block:1285)}" ] 
BB1284 -> BB1286 [tailport=s, headport=n, headlabel="      1286"]
BB1284 -> BB1285 [tailport=s, headport=n, headlabel="      1285"]
BB1284 -> BB1288 [tailport=s, headport=n, color=gray]
BB1285 [shape=record label="{3630: read-variable['endsWith',v31,-]}" ] 
BB1285 -> BB1286 [tailport=s, headport=n]
BB1285 -> BB1288 [tailport=s, headport=n, color=gray]
BB1286 [shape=record label="{3631: write-property[v1,'endsWith',v31]|3632: read-variable['empty',v32,-]|3633: write-property[v1,'empty',v32]|3634: read-variable['blank',v33,-]|3635: write-property[v1,'blank',v33]|3636: read-variable['interpolate',v34,-]|3637: write-property[v1,'interpolate',v34]}" ] 
BB1286 -> BB1287 [tailport=s, headport=n, headlabel="      1287"]
BB1286 -> BB1288 [tailport=s, headport=n, color=gray]
BB1287 [shape=record label="{3638: return[v1]}" ] 
BB1288 [shape=record label="{3639: exceptional-return}" ] 
//#$~ 814
}
