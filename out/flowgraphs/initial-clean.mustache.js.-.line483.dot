digraph {
rankdir="TD"
BB_entry27[shape=none,label=""];
BB_entry27 -> BB412 [tailport=s, headport=n, headlabel="    412"]
BB412 [shape=record label="{1173: constant[undefined,v1]|1174: vardecl['self']|1175: vardecl['buffer']|1176: vardecl['value']|1177: function-decl[function subRender ( template ),-]|1178: vardecl['j']|1179: vardecl['valueLength']}" ] 
BB412 -> BB413 [tailport=s, headport=n, headlabel="      413"]
BB413 [shape=record label="{1180: read-variable['this',v2,-]|1181: write-variable[v2,'self']*|1182: constant[\"\",v3]|1183: write-variable[v3,'buffer']*|1184: read-variable['context',v6,-]|1185: read-property[v6,'lookup',-]|1186: \<variable-non-null-undef\>['context']|1187: read-variable['token',v8,-]|1188: constant[1.0,v9]|1189: read-property[v8,v9,v7]|1190: \<variable-non-null-undef\>['token']}" ] 
BB413 -> BB414 [tailport=s, headport=n, headlabel="      414"]
BB413 -> BB454 [tailport=s, headport=n, color=gray, headlabel="      454"]
BB414 [shape=record label="{1191: call-context.lookup [v6,'lookup',v7,v4]}" ] 
BB414 -> BB415 [tailport=s, headport=n, headlabel="      415"]
BB414 -> BB454 [tailport=s, headport=n, color=gray]
BB415 [shape=record label="{1192: write-variable[v4,'value']*|1193: read-variable['value',v11,-]|1194: ![v11,v10]|1195: if[v10](true-block:416,false-block:417)}" ] 
BB415 -> BB416 [tailport=s, headport=n, headlabel="      416"]
BB415 -> BB417 [tailport=s, headport=n, headlabel="      417"]
BB415 -> BB454 [tailport=s, headport=n, color=gray]
BB416 [shape=record label="{1196: constant[undefined,v1]}" ] 
BB416 -> BB453 [tailport=s, headport=n, headlabel="      453"]
BB417 [shape=record label="{1197: read-variable['isArray',v14,v13]|1198: read-variable['value',v15,-]}" ] 
BB417 -> BB418 [tailport=s, headport=n, headlabel="      418"]
BB417 -> BB454 [tailport=s, headport=n, color=gray]
BB418 [shape=record label="{1199: call-isArray [v13,v14,v15,v12]}" ] 
BB418 -> BB419 [tailport=s, headport=n, headlabel="      419"]
BB418 -> BB454 [tailport=s, headport=n, color=gray]
BB419 [shape=record label="{1200: if[v12](true-block:420,false-block:421)}" ] 
BB419 -> BB420 [tailport=s, headport=n, headlabel="      420"]
BB419 -> BB421 [tailport=s, headport=n, headlabel="      421"]
BB420 [shape=record label="{1201: constant[0.0,v17]|1202: write-variable[v17,'j']*|1203: read-variable['value',v19,-]|1204: read-property[v19,'length',v18]|1205: \<variable-non-null-undef\>['value']|1206: write-variable[v18,'valueLength']*}" ] 
BB420 -> BB422 [tailport=s, headport=n, headlabel="      422"]
BB420 -> BB454 [tailport=s, headport=n, color=gray]
BB421 [shape=record label="{1207: typeof['value',v17]|1208: constant[\"object\",v18]|1209: ===[v17,v18,v16]|1210: if[v16](true-block:430,false-block:428)}" ] 
BB421 -> BB430 [tailport=s, headport=n, headlabel="      430"]
BB421 -> BB428 [tailport=s, headport=n, headlabel="      428"]
BB421 -> BB454 [tailport=s, headport=n, color=gray]
BB422 [shape=record label="{1211: read-variable['j',v20,-]|1212: read-variable['valueLength',v21,-]|1213: \<[v20,v21,v16]|1214: if[v16](true-block:423,false-block:452)}" ] 
BB422 -> BB423 [tailport=s, headport=n, headlabel="      423"]
BB422 -> BB452 [tailport=s, headport=n, headlabel="      452"]
BB422 -> BB454 [tailport=s, headport=n, color=gray]
BB423 [shape=record label="{1215: read-variable['buffer',v23,-]|1216: read-variable['this',v26,-]|1217: read-property[v26,'renderTokens',-]|1218: read-variable['token',v28,-]|1219: constant[4.0,v29]|1220: read-property[v28,v29,v27]|1221: \<variable-non-null-undef\>['token']|1222: read-variable['context',v32,-]|1223: read-property[v32,'push',-]|1224: \<variable-non-null-undef\>['context']|1225: read-variable['value',v34,-]|1226: read-variable['j',v35,-]|1227: read-property[v34,v35,v33]|1228: \<variable-non-null-undef\>['value']}" ] 
BB423 -> BB424 [tailport=s, headport=n, headlabel="      424"]
BB423 -> BB454 [tailport=s, headport=n, color=gray]
BB424 [shape=record label="{1229: call-context.push [v32,'push',v33,v30]}" ] 
BB424 -> BB425 [tailport=s, headport=n, headlabel="      425"]
BB424 -> BB454 [tailport=s, headport=n, color=gray]
BB425 [shape=record label="{1230: read-variable['partials',v36,-]|1231: read-variable['originalTemplate',v37,-]}" ] 
BB425 -> BB426 [tailport=s, headport=n, headlabel="      426"]
BB425 -> BB454 [tailport=s, headport=n, color=gray]
BB426 [shape=record label="{1232: call-this.renderTokens [v26,'renderTokens',v27,v30,v36,v37,v24]}" ] 
BB426 -> BB427 [tailport=s, headport=n, headlabel="      427"]
BB426 -> BB454 [tailport=s, headport=n, color=gray]
BB427 [shape=record label="{1233: +[v23,v24,v22]|1234: write-variable[v22,'buffer']*|1235: constant[1.0,v38]|1236: read-variable['j',v39,-]|1237: +[v39,v40]|1238: +[v40,v38,v41]|1239: write-variable[v41,'j']}" ] 
BB427 -> BB422 [tailport=s, headport=n]
BB427 -> BB454 [tailport=s, headport=n, color=gray]
BB428 [shape=record label="{1240: typeof['value',v17]|1241: constant[\"string\",v18]|1242: ===[v17,v18,v16]|1243: if[v16](true-block:430,false-block:429)}" ] 
BB428 -> BB430 [tailport=s, headport=n]
BB428 -> BB429 [tailport=s, headport=n, headlabel="      429"]
BB428 -> BB454 [tailport=s, headport=n, color=gray]
BB429 [shape=record label="{1244: typeof['value',v17]|1245: constant[\"number\",v18]|1246: ===[v17,v18,v16]}" ] 
BB429 -> BB430 [tailport=s, headport=n]
BB429 -> BB454 [tailport=s, headport=n, color=gray]
BB430 [shape=record label="{1247: if[v16](true-block:431,false-block:432)}" ] 
BB430 -> BB431 [tailport=s, headport=n, headlabel="      431"]
BB430 -> BB432 [tailport=s, headport=n, headlabel="      432"]
BB431 [shape=record label="{1248: read-variable['buffer',v18,-]|1249: read-variable['this',v21,-]|1250: read-property[v21,'renderTokens',-]|1251: read-variable['token',v23,-]|1252: constant[4.0,v24]|1253: read-property[v23,v24,v22]|1254: \<variable-non-null-undef\>['token']|1255: read-variable['context',v27,-]|1256: read-property[v27,'push',-]|1257: \<variable-non-null-undef\>['context']|1258: read-variable['value',v28,-]}" ] 
BB431 -> BB433 [tailport=s, headport=n, headlabel="      433"]
BB431 -> BB454 [tailport=s, headport=n, color=gray]
BB432 [shape=record label="{1259: read-variable['isFunction',v19,v18]|1260: read-variable['value',v20,-]}" ] 
BB432 -> BB437 [tailport=s, headport=n, headlabel="      437"]
BB432 -> BB454 [tailport=s, headport=n, color=gray]
BB433 [shape=record label="{1261: call-context.push [v27,'push',v28,v25]}" ] 
BB433 -> BB434 [tailport=s, headport=n, headlabel="      434"]
BB433 -> BB454 [tailport=s, headport=n, color=gray]
BB434 [shape=record label="{1262: read-variable['partials',v29,-]|1263: read-variable['originalTemplate',v30,-]}" ] 
BB434 -> BB435 [tailport=s, headport=n, headlabel="      435"]
BB434 -> BB454 [tailport=s, headport=n, color=gray]
BB435 [shape=record label="{1264: call-this.renderTokens [v21,'renderTokens',v22,v25,v29,v30,v19]}" ] 
BB435 -> BB436 [tailport=s, headport=n, headlabel="      436"]
BB435 -> BB454 [tailport=s, headport=n, color=gray]
BB436 [shape=record label="{1265: +[v18,v19,v17]|1266: write-variable[v17,'buffer']*}" ] 
BB436 -> BB452 [tailport=s, headport=n]
BB436 -> BB454 [tailport=s, headport=n, color=gray]
BB437 [shape=record label="{1267: call-isFunction [v18,v19,v20,v17]}" ] 
BB437 -> BB438 [tailport=s, headport=n, headlabel="      438"]
BB437 -> BB454 [tailport=s, headport=n, color=gray]
BB438 [shape=record label="{1268: if[v17](true-block:439,false-block:440)}" ] 
BB438 -> BB439 [tailport=s, headport=n, headlabel="      439"]
BB438 -> BB440 [tailport=s, headport=n, headlabel="      440"]
BB439 [shape=record label="{1269: typeof['originalTemplate',v22]|1270: constant[\"string\",v23]|1271: !==[v22,v23,v21]|1272: if[v21](true-block:441,false-block:444)}" ] 
BB439 -> BB441 [tailport=s, headport=n, headlabel="      441"]
BB439 -> BB444 [tailport=s, headport=n, headlabel="      444"]
BB439 -> BB454 [tailport=s, headport=n, color=gray]
BB440 [shape=record label="{1273: read-variable['buffer',v22,-]|1274: read-variable['this',v25,-]|1275: read-property[v25,'renderTokens',-]|1276: read-variable['token',v27,-]|1277: constant[4.0,v28]|1278: read-property[v27,v28,v26]|1279: \<variable-non-null-undef\>['token']|1280: read-variable['context',v29,-]|1281: read-variable['partials',v30,-]|1282: read-variable['originalTemplate',v31,-]}" ] 
BB440 -> BB450 [tailport=s, headport=n, headlabel="      450"]
BB440 -> BB454 [tailport=s, headport=n, color=gray]
BB441 [shape=record label="{1283: read-variable['Error',v25,-]|1284: constant[\"Cannot use higher-order sections without the original template\",v26]}" ] 
BB441 -> BB442 [tailport=s, headport=n, headlabel="      442"]
BB441 -> BB454 [tailport=s, headport=n, color=gray]
BB442 [shape=record label="{1285: construct [-,v25,v26,v24]}" ] 
BB442 -> BB443 [tailport=s, headport=n, headlabel="      443"]
BB442 -> BB454 [tailport=s, headport=n, color=gray]
BB443 [shape=record label="{1286: throw[v24]*}" ] 
BB443 -> BB444 [tailport=s, headport=n]
BB443 -> BB454 [tailport=s, headport=n, color=gray]
BB444 [shape=record label="{1287: read-variable['value',v26,-]|1288: read-property[v26,'call',-]|1289: \<variable-non-null-undef\>['value']|1290: read-variable['context',v28,-]|1291: read-property[v28,'view',v27]|1292: \<variable-non-null-undef\>['context']|1293: read-variable['originalTemplate',v31,-]|1294: read-property[v31,'slice',-]|1295: \<variable-non-null-undef\>['originalTemplate']|1296: read-variable['token',v33,-]|1297: constant[3.0,v34]|1298: read-property[v33,v34,v32]|1299: \<variable-non-null-undef\>['token']|1300: read-variable['token',v36,-]|1301: constant[5.0,v37]|1302: read-property[v36,v37,v35]|1303: \<variable-non-null-undef\>['token']}" ] 
BB444 -> BB445 [tailport=s, headport=n, headlabel="      445"]
BB444 -> BB454 [tailport=s, headport=n, color=gray]
BB445 [shape=record label="{1304: call-originalTemplate.slice [v31,'slice',v32,v35,v29]}" ] 
BB445 -> BB446 [tailport=s, headport=n, headlabel="      446"]
BB445 -> BB454 [tailport=s, headport=n, color=gray]
BB446 [shape=record label="{1305: read-variable['subRender',v38,-]}" ] 
BB446 -> BB447 [tailport=s, headport=n, headlabel="      447"]
BB446 -> BB454 [tailport=s, headport=n, color=gray]
BB447 [shape=record label="{1306: call-value.call [v26,'call',v27,v29,v38,v24]}" ] 
BB447 -> BB448 [tailport=s, headport=n, headlabel="      448"]
BB447 -> BB454 [tailport=s, headport=n, color=gray]
BB448 [shape=record label="{1307: write-variable[v24,'value']*|1308: read-variable['value',v40,-]|1309: constant[null,v41]|1310: !=[v40,v41,v39]|1311: if[v39](true-block:449,false-block:452)}" ] 
BB448 -> BB449 [tailport=s, headport=n, headlabel="      449"]
BB448 -> BB452 [tailport=s, headport=n]
BB448 -> BB454 [tailport=s, headport=n, color=gray]
BB449 [shape=record label="{1312: read-variable['buffer',v43,-]|1313: read-variable['value',v44,-]|1314: +[v43,v44,v42]|1315: write-variable[v42,'buffer']*}" ] 
BB449 -> BB452 [tailport=s, headport=n]
BB449 -> BB454 [tailport=s, headport=n, color=gray]
BB450 [shape=record label="{1316: call-this.renderTokens [v25,'renderTokens',v26,v29,v30,v31,v23]}" ] 
BB450 -> BB451 [tailport=s, headport=n, headlabel="      451"]
BB450 -> BB454 [tailport=s, headport=n, color=gray]
BB451 [shape=record label="{1317: +[v22,v23,v21]|1318: write-variable[v21,'buffer']*}" ] 
BB451 -> BB452 [tailport=s, headport=n]
BB451 -> BB454 [tailport=s, headport=n, color=gray]
BB452 [shape=record label="{1319: read-variable['buffer',v1,-]}" ] 
BB452 -> BB453 [tailport=s, headport=n]
BB452 -> BB454 [tailport=s, headport=n, color=gray]
BB453 [shape=record label="{1320: return[v1]}" ] 
BB454 [shape=record label="{1321: exceptional-return}" ] 
//#$~ 514
}
