digraph {
rankdir="TD"
BB_entry292[shape=none,label=""];
BB_entry292 -> BB2652 [tailport=s, headport=n, headlabel="    2652"]
BB2652 [shape=record label="{7935: constant[undefined,v1]|7936: vardecl['newvalue']|7937: vardecl['typeCheck']}" ] 
BB2652 -> BB2653 [tailport=s, headport=n, headlabel="      2653"]
BB2653 [shape=record label="{7938: read-variable['props',v6,v2]|7939: read-property[v6,'nullable',v4]|7940: \<variable-non-null-undef\>['props']|7941: constant[true,v5]|7942: ===[v4,v5,v3]|7943: if[v3](true-block:2654,false-block:2655)}" ] 
BB2653 -> BB2655 [tailport=s, headport=n, headlabel="      2655"]
BB2653 -> BB2654 [tailport=s, headport=n, headlabel="      2654"]
BB2653 -> BB2685 [tailport=s, headport=n, color=gray, headlabel="      2685"]
BB2654 [shape=record label="{7944: read-variable['value',v7,v2]|7945: read-variable['undefined',v8,v2]|7946: ==[v7,v8,v3]}" ] 
BB2654 -> BB2655 [tailport=s, headport=n]
BB2654 -> BB2685 [tailport=s, headport=n, color=gray]
BB2655 [shape=record label="{7947: if[v3](true-block:2684,false-block:2656)}" ] 
BB2655 -> BB2684 [tailport=s, headport=n, headlabel="      2684"]
BB2655 -> BB2656 [tailport=s, headport=n, headlabel="      2656"]
BB2656 [shape=record label="{7948: read-variable['isType',v7,v2]|7949: if[v7](true-block:2657,false-block:2658)}" ] 
BB2656 -> BB2657 [tailport=s, headport=n, headlabel="      2657"]
BB2656 -> BB2658 [tailport=s, headport=n, headlabel="      2658"]
BB2656 -> BB2685 [tailport=s, headport=n, color=gray]
BB2657 [shape=record label="{7950: constant[null,v8]|7951: write-variable[v8,'newvalue']*|7952: read-variable['props',v10,v2]|7953: read-property[v10,'coerce',v9]|7954: \<variable-non-null-undef\>['props']|7955: if[v9](true-block:2659,false-block:2662)}" ] 
BB2657 -> BB2659 [tailport=s, headport=n, headlabel="      2659"]
BB2657 -> BB2662 [tailport=s, headport=n, headlabel="      2662"]
BB2657 -> BB2685 [tailport=s, headport=n, color=gray]
BB2658 [shape=record label="{7956: read-variable['value',v9,v2]|7957: ![v9,v8]|7958: if[v8](true-block:2669,false-block:2668)}" ] 
BB2658 -> BB2669 [tailport=s, headport=n, headlabel="      2669"]
BB2658 -> BB2668 [tailport=s, headport=n, headlabel="      2668"]
BB2658 -> BB2685 [tailport=s, headport=n, color=gray]
BB2659 [shape=record label="{7959: read-variable['isa',v13,-]|7960: read-property[v13,'coerce',-]|7961: \<variable-non-null-undef\>['isa']|7962: read-variable['value',v14,v2]}" ] 
BB2659 -> BB2660 [tailport=s, headport=n, headlabel="      2660"]
BB2659 -> BB2685 [tailport=s, headport=n, color=gray]
BB2660 [shape=record label="{7963: call-isa.coerce [v13,'coerce',v14,v11]}" ] 
BB2660 -> BB2661 [tailport=s, headport=n, headlabel="      2661"]
BB2660 -> BB2685 [tailport=s, headport=n, color=gray]
BB2661 [shape=record label="{7964: write-variable[v11,'newvalue']*}" ] 
BB2661 -> BB2662 [tailport=s, headport=n]
BB2662 [shape=record label="{7965: read-variable['newvalue',v12,v2]|7966: constant[null,v13]|7967: ==[v12,v13,v11]|7968: if[v11](true-block:2663,false-block:2664)}" ] 
BB2662 -> BB2664 [tailport=s, headport=n, headlabel="      2664"]
BB2662 -> BB2663 [tailport=s, headport=n, headlabel="      2663"]
BB2662 -> BB2685 [tailport=s, headport=n, color=gray]
BB2663 [shape=record label="{7969: read-variable['props',v16,v2]|7970: read-property[v16,'nullable',v14]|7971: \<variable-non-null-undef\>['props']|7972: constant[true,v15]|7973: !==[v14,v15,v11]}" ] 
BB2663 -> BB2664 [tailport=s, headport=n]
BB2663 -> BB2685 [tailport=s, headport=n, color=gray]
BB2664 [shape=record label="{7974: if[v11](true-block:2665,false-block:2666)}" ] 
BB2664 -> BB2665 [tailport=s, headport=n, headlabel="      2665"]
BB2664 -> BB2666 [tailport=s, headport=n, headlabel="      2666"]
BB2665 [shape=record label="{7975: read-variable['isa',v15,-]|7976: read-property[v15,'validate',-]|7977: \<variable-non-null-undef\>['isa']|7978: read-variable['value',v16,v2]}" ] 
BB2665 -> BB2667 [tailport=s, headport=n, headlabel="      2667"]
BB2665 -> BB2685 [tailport=s, headport=n, color=gray]
BB2666 [shape=record label="{7979: read-variable['newvalue',v14,v2]|7980: write-variable[v14,'value']*}" ] 
BB2666 -> BB2684 [tailport=s, headport=n]
BB2666 -> BB2685 [tailport=s, headport=n, color=gray]
BB2667 [shape=record label="{7981: call-isa.validate [v15,'validate',v16,-]*}" ] 
BB2667 -> BB2684 [tailport=s, headport=n]
BB2667 -> BB2685 [tailport=s, headport=n, color=gray]
BB2668 [shape=record label="{7982: read-variable['value',v10,v2]|7983: read-property[v10,'meta',v9]|7984: \<variable-non-null-undef\>['value']|7985: ![v9,v8]}" ] 
BB2668 -> BB2669 [tailport=s, headport=n]
BB2668 -> BB2685 [tailport=s, headport=n, color=gray]
BB2669 [shape=record label="{7986: if[v8](true-block:2670,false-block:2673)}" ] 
BB2669 -> BB2670 [tailport=s, headport=n, headlabel="      2670"]
BB2669 -> BB2673 [tailport=s, headport=n, headlabel="      2673"]
BB2670 [shape=record label="{7987: read-variable['ReferenceError',v10,-]|7988: constant[\"The \",v18]|7989: read-variable['thing',v19,v2]|7990: +[v18,v19,v16]|7991: constant[\" \",v17]|7992: +[v16,v17,v14]|7993: read-variable['name',v15,v2]|7994: +[v14,v15,v12]|7995: constant[\" only accepts values that have a meta object.\",v13]|7996: +[v12,v13,v11]}" ] 
BB2670 -> BB2671 [tailport=s, headport=n, headlabel="      2671"]
BB2670 -> BB2685 [tailport=s, headport=n, color=gray]
BB2671 [shape=record label="{7997: construct [-,v10,v11,v9]}" ] 
BB2671 -> BB2672 [tailport=s, headport=n, headlabel="      2672"]
BB2671 -> BB2685 [tailport=s, headport=n, color=gray]
BB2672 [shape=record label="{7998: throw[v9]*}" ] 
BB2672 -> BB2673 [tailport=s, headport=n]
BB2672 -> BB2685 [tailport=s, headport=n, color=gray]
BB2673 [shape=record label="{7999: read-variable['isRole',v10,v2]|8000: if[v10](true-block:2674,false-block:2675)}" ] 
BB2673 -> BB2674 [tailport=s, headport=n, headlabel="      2674"]
BB2673 -> BB2675 [tailport=s, headport=n, headlabel="      2675"]
BB2673 -> BB2685 [tailport=s, headport=n, color=gray]
BB2674 [shape=record label="{8001: read-variable['value',v13,-]|8002: read-property[v13,'meta',v12]|8003: \<variable-non-null-undef\>['value']|8004: read-property[v12,'does',-]|8005: \<property-non-null-undef\>[v13,'meta']|8006: read-variable['isa',v14,v2]}" ] 
BB2674 -> BB2676 [tailport=s, headport=n, headlabel="      2676"]
BB2674 -> BB2685 [tailport=s, headport=n, color=gray]
BB2675 [shape=record label="{8007: read-variable['value',v13,-]|8008: read-property[v13,'meta',v12]|8009: \<variable-non-null-undef\>['value']|8010: read-property[v12,'isa',-]|8011: \<property-non-null-undef\>[v13,'meta']|8012: read-variable['isa',v14,v2]}" ] 
BB2675 -> BB2677 [tailport=s, headport=n, headlabel="      2677"]
BB2675 -> BB2685 [tailport=s, headport=n, color=gray]
BB2676 [shape=record label="{8013: call-value.meta.does [v12,'does',v14,v9]}" ] 
BB2676 -> BB2678 [tailport=s, headport=n, headlabel="      2678"]
BB2676 -> BB2685 [tailport=s, headport=n, color=gray]
BB2677 [shape=record label="{8014: call-value.meta.isa [v12,'isa',v14,v9]}" ] 
BB2677 -> BB2678 [tailport=s, headport=n]
BB2677 -> BB2685 [tailport=s, headport=n, color=gray]
BB2678 [shape=record label="{8015: write-variable[v9,'typeCheck']*|8016: read-variable['typeCheck',v12,v2]|8017: ![v12,v11]|8018: if[v11](true-block:2679,false-block:2684)}" ] 
BB2678 -> BB2679 [tailport=s, headport=n, headlabel="      2679"]
BB2678 -> BB2684 [tailport=s, headport=n]
BB2678 -> BB2685 [tailport=s, headport=n, color=gray]
BB2679 [shape=record label="{8019: read-variable['ReferenceError',v14,-]|8020: constant[\"The \",v26]|8021: read-variable['thing',v27,v2]|8022: +[v26,v27,v24]|8023: constant[\" \",v25]|8024: +[v24,v25,v22]|8025: read-variable['name',v23,v2]|8026: +[v22,v23,v20]|8027: constant[\" only accepts values that are objects of type \",v21]|8028: +[v20,v21,v18]|8029: read-variable['isa',v30,-]|8030: read-property[v30,'meta',v29]|8031: \<variable-non-null-undef\>['isa']|8032: read-property[v29,'className',-]|8033: \<property-non-null-undef\>[v30,'meta']}" ] 
BB2679 -> BB2680 [tailport=s, headport=n, headlabel="      2680"]
BB2679 -> BB2685 [tailport=s, headport=n, color=gray]
BB2680 [shape=record label="{8034: call-isa.meta.className [v29,'className',v19]}" ] 
BB2680 -> BB2681 [tailport=s, headport=n, headlabel="      2681"]
BB2680 -> BB2685 [tailport=s, headport=n, color=gray]
BB2681 [shape=record label="{8035: +[v18,v19,v16]|8036: constant[\".\",v17]|8037: +[v16,v17,v15]}" ] 
BB2681 -> BB2682 [tailport=s, headport=n, headlabel="      2682"]
BB2681 -> BB2685 [tailport=s, headport=n, color=gray]
BB2682 [shape=record label="{8038: construct [-,v14,v15,v13]}" ] 
BB2682 -> BB2683 [tailport=s, headport=n, headlabel="      2683"]
BB2682 -> BB2685 [tailport=s, headport=n, color=gray]
BB2683 [shape=record label="{8039: throw[v13]*}" ] 
BB2683 -> BB2684 [tailport=s, headport=n]
BB2683 -> BB2685 [tailport=s, headport=n, color=gray]
BB2684 [shape=record label="{8040: read-variable['value',v1,v2]}" ] 
BB2684 -> BB2692 [tailport=s, headport=n, headlabel="      2692"]
BB2684 -> BB2693 [tailport=s, headport=n, color=gray, headlabel="      2693"]
BB2685 [shape=record label="{8041: catch[e,v3]|8042: begin-with[v3]}" ] 
BB2685 -> BB2686 [tailport=s, headport=n, headlabel="      2686"]
BB2685 -> BB2693 [tailport=s, headport=n, color=gray]
BB2686 [shape=record label="{8043: read-variable['errorHandler',v5,v4]|8044: if[v5](true-block:2688,false-block:2689)}" ] 
BB2686 -> BB2688 [tailport=s, headport=n, headlabel="      2688"]
BB2686 -> BB2689 [tailport=s, headport=n, headlabel="      2689"]
BB2686 -> BB2687 [tailport=s, headport=n, color=gray, headlabel="      2687"]
BB2687 [shape=record label="{8045: end-with}" ] 
BB2687 -> BB2693 [tailport=s, headport=n]
BB2688 [shape=record label="{8046: read-variable['errorHandler',v7,-]|8047: read-property[v7,'call',-]|8048: \<variable-non-null-undef\>['errorHandler']|8049: read-variable['this',v8,-]|8050: read-variable['e',v9,v4]|8051: read-variable['isa',v10,v4]}" ] 
BB2688 -> BB2690 [tailport=s, headport=n, headlabel="      2690"]
BB2688 -> BB2687 [tailport=s, headport=n, color=gray]
BB2689 [shape=record label="{8052: read-variable['e',v6,v4]|8053: throw[v6]*}" ] 
BB2689 -> BB2691 [tailport=s, headport=n, headlabel="      2691"]
BB2689 -> BB2687 [tailport=s, headport=n, color=gray]
BB2690 [shape=record label="{8054: call-errorHandler.call [v7,'call',v8,v9,v10,-]*}" ] 
BB2690 -> BB2691 [tailport=s, headport=n]
BB2690 -> BB2687 [tailport=s, headport=n, color=gray]
BB2691 [shape=record label="{8055: end-with}" ] 
BB2691 -> BB2684 [tailport=s, headport=n]
BB2692 [shape=record label="{8056: return[v1]}" ] 
BB2693 [shape=record label="{8057: exceptional-return}" ] 
//#$~ 3128
}
