digraph {
rankdir="TD"
BB_entry39[shape=none,label=""];
BB_entry39 -> BB455 [tailport=s, headport=n, headlabel="    455"]
BB455 [shape=record label="{1534: constant[undefined,v1]|1535: vardecl['attribute']|1536: vardecl['attributes']|1537: vardecl['binder']|1538: vardecl['bindingRegExp']|1539: vardecl['block']|1540: vardecl['identifier']|1541: vardecl['regexp']|1542: vardecl['type']|1543: vardecl['value']|1544: vardecl['_i']|1545: vardecl['_j']|1546: vardecl['_len']|1547: vardecl['_len1']|1548: vardecl['_ref1']|1549: vardecl['_ref2']|1550: vardecl['_ref3']}" ] 
BB455 -> BB456 [tailport=s, headport=n, headlabel="      456"]
BB456 [shape=record label="{1551: read-variable['this',v4,-]|1552: read-property[v4,'bindingRegExp',-]}" ] 
BB456 -> BB457 [tailport=s, headport=n, headlabel="      457"]
BB456 -> BB518 [tailport=s, headport=n, color=gray, headlabel="      518"]
BB457 [shape=record label="{1553: call-this.bindingRegExp [v4,'bindingRegExp',v2]}" ] 
BB457 -> BB458 [tailport=s, headport=n, headlabel="      458"]
BB457 -> BB518 [tailport=s, headport=n, color=gray]
BB458 [shape=record label="{1554: write-variable[v2,'bindingRegExp']*|1555: read-variable['node',v8,-]|1556: read-property[v8,'nodeName',v6]|1557: \<variable-non-null-undef\>['node']|1558: constant[\"SCRIPT\",v7]|1559: ===[v6,v7,v5]|1560: if[v5](true-block:460,false-block:459)}" ] 
BB458 -> BB460 [tailport=s, headport=n, headlabel="      460"]
BB458 -> BB459 [tailport=s, headport=n, headlabel="      459"]
BB458 -> BB518 [tailport=s, headport=n, color=gray]
BB459 [shape=record label="{1561: read-variable['node',v8,-]|1562: read-property[v8,'nodeName',v6]|1563: \<variable-non-null-undef\>['node']|1564: constant[\"STYLE\",v7]|1565: ===[v6,v7,v5]}" ] 
BB459 -> BB460 [tailport=s, headport=n]
BB459 -> BB518 [tailport=s, headport=n, color=gray]
BB460 [shape=record label="{1566: write-variable[v5,'block']*|1567: read-variable['node',v7,-]|1568: read-property[v7,'attributes',v6]|1569: \<variable-non-null-undef\>['node']|1570: write-variable[v6,'_ref1']*|1571: constant[0.0,v9]|1572: write-variable[v9,'_i']|1573: read-variable['_ref1',v11,-]|1574: read-property[v11,'length',v10]|1575: \<variable-non-null-undef\>['_ref1']|1576: write-variable[v10,'_len']}" ] 
BB460 -> BB461 [tailport=s, headport=n, headlabel="      461"]
BB460 -> BB518 [tailport=s, headport=n, color=gray]
BB461 [shape=record label="{1577: read-variable['_i',v12,-]|1578: read-variable['_len',v13,-]|1579: \<[v12,v13,v8]|1580: if[v8](true-block:462,false-block:463)}" ] 
BB461 -> BB462 [tailport=s, headport=n, headlabel="      462"]
BB461 -> BB463 [tailport=s, headport=n, headlabel="      463"]
BB461 -> BB518 [tailport=s, headport=n, color=gray]
BB462 [shape=record label="{1581: read-variable['_ref1',v15,-]|1582: read-variable['_i',v16,-]|1583: read-property[v15,v16,v14]|1584: \<variable-non-null-undef\>['_ref1']|1585: write-variable[v14,'attribute']*|1586: read-variable['bindingRegExp',v19,-]|1587: read-property[v19,'test',-]|1588: \<variable-non-null-undef\>['bindingRegExp']|1589: read-variable['attribute',v21,-]|1590: read-property[v21,'name',v20]|1591: \<variable-non-null-undef\>['attribute']}" ] 
BB462 -> BB464 [tailport=s, headport=n, headlabel="      464"]
BB462 -> BB518 [tailport=s, headport=n, color=gray]
BB463 [shape=record label="{1592: read-variable['attributes',v14,-]|1593: if[v14](true-block:496,false-block:495)}" ] 
BB463 -> BB496 [tailport=s, headport=n, headlabel="      496"]
BB463 -> BB495 [tailport=s, headport=n, headlabel="      495"]
BB463 -> BB518 [tailport=s, headport=n, color=gray]
BB464 [shape=record label="{1594: call-bindingRegExp.test [v19,'test',v20,v17]}" ] 
BB464 -> BB465 [tailport=s, headport=n, headlabel="      465"]
BB464 -> BB518 [tailport=s, headport=n, color=gray]
BB465 [shape=record label="{1595: if[v17](true-block:466,false-block:494)}" ] 
BB465 -> BB466 [tailport=s, headport=n, headlabel="      466"]
BB465 -> BB494 [tailport=s, headport=n, headlabel="      494"]
BB466 [shape=record label="{1596: read-variable['attribute',v25,-]|1597: read-property[v25,'name',v24]|1598: \<variable-non-null-undef\>['attribute']|1599: read-property[v24,'replace',-]|1600: \<property-non-null-undef\>[v25,'name']|1601: read-variable['bindingRegExp',v26,-]|1602: constant[\"\",v27]}" ] 
BB466 -> BB467 [tailport=s, headport=n, headlabel="      467"]
BB466 -> BB518 [tailport=s, headport=n, color=gray]
BB467 [shape=record label="{1603: call-attribute.name.replace [v24,'replace',v26,v27,v22]}" ] 
BB467 -> BB468 [tailport=s, headport=n, headlabel="      468"]
BB467 -> BB518 [tailport=s, headport=n, color=gray]
BB468 [shape=record label="{1604: write-variable[v22,'type']*|1605: read-variable['this',v31,-]|1606: read-property[v31,'binders',v30]|1607: read-variable['type',v32,-]|1608: read-property[v30,v32,v29]|1609: \<property-non-null-undef\>[v31,'binders']|1610: write-variable[v29,'binder']|1611: ![v29,v28]|1612: if[v28](true-block:469,false-block:488)}" ] 
BB468 -> BB469 [tailport=s, headport=n, headlabel="      469"]
BB468 -> BB488 [tailport=s, headport=n, headlabel="      488"]
BB468 -> BB518 [tailport=s, headport=n, color=gray]
BB469 [shape=record label="{1613: read-variable['this',v34,-]|1614: read-property[v34,'binders',v33]|1615: write-variable[v33,'_ref2']*|1616: read-variable['_ref2',v36,-]}" ] 
BB469 -> BB470 [tailport=s, headport=n, headlabel="      470"]
BB469 -> BB518 [tailport=s, headport=n, color=gray]
BB470 [shape=record label="{1617: begin-for-in[v36,v37]}" ] 
BB470 -> BB471 [tailport=s, headport=n, headlabel="      471"]
BB470 -> BB518 [tailport=s, headport=n, color=gray]
BB471 [shape=record label="{1618: has-next[v37,v38]|1619: if[v38](true-block:472,false-block:488)}" ] 
BB471 -> BB472 [tailport=s, headport=n, headlabel="      472"]
BB471 -> BB488 [tailport=s, headport=n]
BB472 [shape=record label="{1620: next-property[v37,v39]|1621: write-variable[v39,'identifier']|1622: read-variable['_ref2',v41,-]|1623: read-variable['identifier',v42,-]|1624: read-property[v41,v42,v40]|1625: \<variable-non-null-undef\>['_ref2']|1626: write-variable[v40,'value']*|1627: read-variable['identifier',v44,-]|1628: constant[\"*\",v45]|1629: !==[v44,v45,v43]|1630: if[v43](true-block:473,false-block:476)}" ] 
BB472 -> BB476 [tailport=s, headport=n, headlabel="      476"]
BB472 -> BB473 [tailport=s, headport=n, headlabel="      473"]
BB472 -> BB518 [tailport=s, headport=n, color=gray]
BB473 [shape=record label="{1631: read-variable['identifier',v49,-]|1632: read-property[v49,'indexOf',-]|1633: \<variable-non-null-undef\>['identifier']|1634: constant[\"*\",v50]}" ] 
BB473 -> BB474 [tailport=s, headport=n, headlabel="      474"]
BB473 -> BB518 [tailport=s, headport=n, color=gray]
BB474 [shape=record label="{1635: call-identifier.indexOf [v49,'indexOf',v50,v46]}" ] 
BB474 -> BB475 [tailport=s, headport=n, headlabel="      475"]
BB474 -> BB518 [tailport=s, headport=n, color=gray]
BB475 [shape=record label="{1636: constant[-1.0,v47]|1637: !==[v46,v47,v43]}" ] 
BB475 -> BB476 [tailport=s, headport=n]
BB475 -> BB518 [tailport=s, headport=n, color=gray]
BB476 [shape=record label="{1638: if[v43](true-block:477,false-block:487)}" ] 
BB476 -> BB477 [tailport=s, headport=n, headlabel="      477"]
BB476 -> BB487 [tailport=s, headport=n, headlabel="      487"]
BB477 [shape=record label="{1639: read-variable['RegExp',v47,-]|1640: constant[\"^\",v51]|1641: read-variable['identifier',v54,-]|1642: read-property[v54,'replace',-]|1643: \<variable-non-null-undef\>['identifier']|1644: read-variable['RegExp',v56,-]|1645: constant[\"\\\\*\",v57]|1646: constant[\"g\",v58]}" ] 
BB477 -> BB478 [tailport=s, headport=n, headlabel="      478"]
BB477 -> BB518 [tailport=s, headport=n, color=gray]
BB478 [shape=record label="{1647: construct [-,v56,v57,v58,v55]}" ] 
BB478 -> BB479 [tailport=s, headport=n, headlabel="      479"]
BB478 -> BB518 [tailport=s, headport=n, color=gray]
BB479 [shape=record label="{1648: constant[\".+\",v59]}" ] 
BB479 -> BB480 [tailport=s, headport=n, headlabel="      480"]
BB480 [shape=record label="{1649: call-identifier.replace [v54,'replace',v55,v59,v52]}" ] 
BB480 -> BB481 [tailport=s, headport=n, headlabel="      481"]
BB480 -> BB518 [tailport=s, headport=n, color=gray]
BB481 [shape=record label="{1650: +[v51,v52,v49]|1651: constant[\"$\",v50]|1652: +[v49,v50,v48]}" ] 
BB481 -> BB482 [tailport=s, headport=n, headlabel="      482"]
BB481 -> BB518 [tailport=s, headport=n, color=gray]
BB482 [shape=record label="{1653: construct [-,v47,v48,v46]}" ] 
BB482 -> BB483 [tailport=s, headport=n, headlabel="      483"]
BB482 -> BB518 [tailport=s, headport=n, color=gray]
BB483 [shape=record label="{1654: write-variable[v46,'regexp']*|1655: read-variable['regexp',v62,-]|1656: read-property[v62,'test',-]|1657: \<variable-non-null-undef\>['regexp']|1658: read-variable['type',v63,-]}" ] 
BB483 -> BB484 [tailport=s, headport=n, headlabel="      484"]
BB483 -> BB518 [tailport=s, headport=n, color=gray]
BB484 [shape=record label="{1659: call-regexp.test [v62,'test',v63,v60]}" ] 
BB484 -> BB485 [tailport=s, headport=n, headlabel="      485"]
BB484 -> BB518 [tailport=s, headport=n, color=gray]
BB485 [shape=record label="{1660: if[v60](true-block:486,false-block:487)}" ] 
BB485 -> BB486 [tailport=s, headport=n, headlabel="      486"]
BB485 -> BB487 [tailport=s, headport=n]
BB486 [shape=record label="{1661: read-variable['value',v64,-]|1662: write-variable[v64,'binder']*}" ] 
BB486 -> BB487 [tailport=s, headport=n]
BB486 -> BB518 [tailport=s, headport=n, color=gray]
BB487 [shape=record label="{1663: end-for-in(begin-node:1617)}" ] 
BB487 -> BB471 [tailport=s, headport=n]
BB488 [shape=record label="{1664: read-variable['binder',v33,-]|1665: if[v33](true-block:490,false-block:489)}" ] 
BB488 -> BB490 [tailport=s, headport=n, headlabel="      490"]
BB488 -> BB489 [tailport=s, headport=n, headlabel="      489"]
BB488 -> BB518 [tailport=s, headport=n, color=gray]
BB489 [shape=record label="{1666: read-variable['this',v36,-]|1667: read-property[v36,'binders',v35]|1668: read-property[v35,'*',v34]|1669: \<property-non-null-undef\>[v36,'binders']|1670: write-variable[v34,'binder']}" ] 
BB489 -> BB490 [tailport=s, headport=n]
BB489 -> BB518 [tailport=s, headport=n, color=gray]
BB490 [shape=record label="{1671: read-variable['binder',v35,-]|1672: read-property[v35,'block',v34]|1673: \<variable-non-null-undef\>['binder']|1674: if[v34](true-block:491,false-block:494)}" ] 
BB490 -> BB491 [tailport=s, headport=n, headlabel="      491"]
BB490 -> BB494 [tailport=s, headport=n]
BB490 -> BB518 [tailport=s, headport=n, color=gray]
BB491 [shape=record label="{1675: constant[true,v36]|1676: write-variable[v36,'block']*|1677: read-variable['Array',v38,-]|1678: read-variable['attribute',v39,-]}" ] 
BB491 -> BB492 [tailport=s, headport=n, headlabel="      492"]
BB491 -> BB518 [tailport=s, headport=n, color=gray]
BB492 [shape=record label="{1679: construct [-,v38,v39,v37]}" ] 
BB492 -> BB493 [tailport=s, headport=n, headlabel="      493"]
BB492 -> BB518 [tailport=s, headport=n, color=gray]
BB493 [shape=record label="{1680: write-variable[v37,'attributes']*}" ] 
BB493 -> BB494 [tailport=s, headport=n]
BB494 [shape=record label="{1681: constant[1.0,v22]|1682: read-variable['_i',v23,-]|1683: +[v23,v24]|1684: +[v24,v22,v25]|1685: write-variable[v25,'_i']}" ] 
BB494 -> BB461 [tailport=s, headport=n]
BB494 -> BB518 [tailport=s, headport=n, color=gray]
BB495 [shape=record label="{1686: read-variable['node',v15,-]|1687: read-property[v15,'attributes',v14]|1688: \<variable-non-null-undef\>['node']}" ] 
BB495 -> BB496 [tailport=s, headport=n]
BB495 -> BB518 [tailport=s, headport=n, color=gray]
BB496 [shape=record label="{1689: write-variable[v14,'_ref3']*|1690: constant[0.0,v16]|1691: write-variable[v16,'_j']|1692: read-variable['_ref3',v18,-]|1693: read-property[v18,'length',v17]|1694: \<variable-non-null-undef\>['_ref3']|1695: write-variable[v17,'_len1']}" ] 
BB496 -> BB497 [tailport=s, headport=n, headlabel="      497"]
BB496 -> BB518 [tailport=s, headport=n, color=gray]
BB497 [shape=record label="{1696: read-variable['_j',v19,-]|1697: read-variable['_len1',v20,-]|1698: \<[v19,v20,v15]|1699: if[v15](true-block:498,false-block:499)}" ] 
BB497 -> BB498 [tailport=s, headport=n, headlabel="      498"]
BB497 -> BB499 [tailport=s, headport=n, headlabel="      499"]
BB497 -> BB518 [tailport=s, headport=n, color=gray]
BB498 [shape=record label="{1700: read-variable['_ref3',v22,-]|1701: read-variable['_j',v23,-]|1702: read-property[v22,v23,v21]|1703: \<variable-non-null-undef\>['_ref3']|1704: write-variable[v21,'attribute']*|1705: read-variable['bindingRegExp',v26,-]|1706: read-property[v26,'test',-]|1707: \<variable-non-null-undef\>['bindingRegExp']|1708: read-variable['attribute',v28,-]|1709: read-property[v28,'name',v27]|1710: \<variable-non-null-undef\>['attribute']}" ] 
BB498 -> BB500 [tailport=s, headport=n, headlabel="      500"]
BB498 -> BB518 [tailport=s, headport=n, color=gray]
BB499 [shape=record label="{1711: read-variable['block',v22,-]|1712: ![v22,v21]|1713: if[v21](true-block:507,false-block:516)}" ] 
BB499 -> BB507 [tailport=s, headport=n, headlabel="      507"]
BB499 -> BB516 [tailport=s, headport=n, headlabel="      516"]
BB499 -> BB518 [tailport=s, headport=n, color=gray]
BB500 [shape=record label="{1714: call-bindingRegExp.test [v26,'test',v27,v24]}" ] 
BB500 -> BB501 [tailport=s, headport=n, headlabel="      501"]
BB500 -> BB518 [tailport=s, headport=n, color=gray]
BB501 [shape=record label="{1715: if[v24](true-block:502,false-block:506)}" ] 
BB501 -> BB502 [tailport=s, headport=n, headlabel="      502"]
BB501 -> BB506 [tailport=s, headport=n, headlabel="      506"]
BB502 [shape=record label="{1716: read-variable['attribute',v32,-]|1717: read-property[v32,'name',v31]|1718: \<variable-non-null-undef\>['attribute']|1719: read-property[v31,'replace',-]|1720: \<property-non-null-undef\>[v32,'name']|1721: read-variable['bindingRegExp',v33,-]|1722: constant[\"\",v34]}" ] 
BB502 -> BB503 [tailport=s, headport=n, headlabel="      503"]
BB502 -> BB518 [tailport=s, headport=n, color=gray]
BB503 [shape=record label="{1723: call-attribute.name.replace [v31,'replace',v33,v34,v29]}" ] 
BB503 -> BB504 [tailport=s, headport=n, headlabel="      504"]
BB503 -> BB518 [tailport=s, headport=n, color=gray]
BB504 [shape=record label="{1724: write-variable[v29,'type']*|1725: read-variable['this',v36,-]|1726: read-property[v36,'buildBinding',-]|1727: constant[\"Binding\",v37]|1728: read-variable['node',v38,-]|1729: read-variable['type',v39,-]|1730: read-variable['attribute',v41,-]|1731: read-property[v41,'value',v40]|1732: \<variable-non-null-undef\>['attribute']}" ] 
BB504 -> BB505 [tailport=s, headport=n, headlabel="      505"]
BB504 -> BB518 [tailport=s, headport=n, color=gray]
BB505 [shape=record label="{1733: call-this.buildBinding [v36,'buildBinding',v37,v38,v39,v40,-]*}" ] 
BB505 -> BB506 [tailport=s, headport=n]
BB505 -> BB518 [tailport=s, headport=n, color=gray]
BB506 [shape=record label="{1734: constant[1.0,v29]|1735: read-variable['_j',v30,-]|1736: +[v30,v31]|1737: +[v31,v29,v32]|1738: write-variable[v32,'_j']}" ] 
BB506 -> BB497 [tailport=s, headport=n]
BB506 -> BB518 [tailport=s, headport=n, color=gray]
BB507 [shape=record label="{1739: read-variable['node',v26,-]|1740: read-property[v26,'nodeName',v25]|1741: \<variable-non-null-undef\>['node']|1742: read-property[v25,'toLowerCase',-]|1743: \<property-non-null-undef\>[v26,'nodeName']}" ] 
BB507 -> BB508 [tailport=s, headport=n, headlabel="      508"]
BB507 -> BB518 [tailport=s, headport=n, color=gray]
BB508 [shape=record label="{1744: call-node.nodeName.toLowerCase [v25,'toLowerCase',v23]}" ] 
BB508 -> BB509 [tailport=s, headport=n, headlabel="      509"]
BB508 -> BB518 [tailport=s, headport=n, color=gray]
BB509 [shape=record label="{1745: write-variable[v23,'type']*|1746: read-variable['this',v29,-]|1747: read-property[v29,'components',v28]|1748: read-variable['type',v30,-]|1749: read-property[v28,v30,v27]|1750: \<property-non-null-undef\>[v29,'components']|1751: if[v27](true-block:510,false-block:511)}" ] 
BB509 -> BB511 [tailport=s, headport=n, headlabel="      511"]
BB509 -> BB510 [tailport=s, headport=n, headlabel="      510"]
BB509 -> BB518 [tailport=s, headport=n, color=gray]
BB510 [shape=record label="{1752: read-variable['node',v32,-]|1753: read-property[v32,'_bound',v31]|1754: \<variable-non-null-undef\>['node']|1755: ![v31,v27]}" ] 
BB510 -> BB511 [tailport=s, headport=n]
BB510 -> BB518 [tailport=s, headport=n, color=gray]
BB511 [shape=record label="{1756: if[v27](true-block:512,false-block:516)}" ] 
BB511 -> BB512 [tailport=s, headport=n, headlabel="      512"]
BB511 -> BB516 [tailport=s, headport=n]
BB512 [shape=record label="{1757: read-variable['this',v33,-]|1758: read-property[v33,'bindings',v32]|1759: read-property[v32,'push',-]|1760: \<property-non-null-undef\>[v33,'bindings']|1761: read-variable['Rivets',v36,-]|1762: read-property[v36,'ComponentBinding',-]|1763: \<variable-non-null-undef\>['Rivets']|1764: read-variable['this',v37,-]|1765: read-variable['node',v38,-]|1766: read-variable['type',v39,-]}" ] 
BB512 -> BB513 [tailport=s, headport=n, headlabel="      513"]
BB512 -> BB518 [tailport=s, headport=n, color=gray]
BB513 [shape=record label="{1767: construct [v36,'ComponentBinding',v37,v38,v39,v34]}" ] 
BB513 -> BB514 [tailport=s, headport=n, headlabel="      514"]
BB513 -> BB518 [tailport=s, headport=n, color=gray]
BB514 [shape=record label="{1768: call-this.bindings.push [v32,'push',v34,-]*}" ] 
BB514 -> BB515 [tailport=s, headport=n, headlabel="      515"]
BB514 -> BB518 [tailport=s, headport=n, color=gray]
BB515 [shape=record label="{1769: constant[true,v40]|1770: write-variable[v40,'block']*}" ] 
BB515 -> BB516 [tailport=s, headport=n]
BB516 [shape=record label="{1771: read-variable['block',v1,-]}" ] 
BB516 -> BB517 [tailport=s, headport=n, headlabel="      517"]
BB516 -> BB518 [tailport=s, headport=n, color=gray]
BB517 [shape=record label="{1772: return[v1]}" ] 
BB518 [shape=record label="{1773: exceptional-return}" ] 
//#$~ 441
}
