digraph {
rankdir="TD"
BB_entry124[shape=none,label=""];
BB_entry124 -> BB1522 [tailport=s, headport=n, headlabel="    1522"]
BB1522 [shape=record label="{4574: constant[undefined,v1]|4575: vardecl['data']|4576: vardecl['name']}" ] 
BB1522 -> BB1523 [tailport=s, headport=n, headlabel="      1523"]
BB1523 [shape=record label="{4577: new[v2]|4578: write-variable[v2,'data']*|4579: read-variable['obj',v4,-]}" ] 
BB1523 -> BB1524 [tailport=s, headport=n, headlabel="      1524"]
BB1523 -> BB1536 [tailport=s, headport=n, color=gray, headlabel="      1536"]
BB1524 [shape=record label="{4580: begin-for-in[v4,v5]}" ] 
BB1524 -> BB1525 [tailport=s, headport=n, headlabel="      1525"]
BB1524 -> BB1536 [tailport=s, headport=n, color=gray]
BB1525 [shape=record label="{4581: has-next[v5,v6]|4582: if[v6](true-block:1526,false-block:1533)}" ] 
BB1525 -> BB1526 [tailport=s, headport=n, headlabel="      1526"]
BB1525 -> BB1533 [tailport=s, headport=n, headlabel="      1533"]
BB1526 [shape=record label="{4583: next-property[v5,v7]|4584: write-variable[v7,'name']|4585: read-variable['rawRules',v9,-]|4586: read-variable['name',v10,-]|4587: read-property[v9,v10,v8]|4588: \<variable-non-null-undef\>['rawRules']|4589: if[v8](true-block:1527,false-block:1528)}" ] 
BB1526 -> BB1527 [tailport=s, headport=n, headlabel="      1527"]
BB1526 -> BB1528 [tailport=s, headport=n, headlabel="      1528"]
BB1526 -> BB1536 [tailport=s, headport=n, color=gray]
BB1527 [shape=record label="{4590: read-variable['data',v12,-]|4591: read-variable['name',v13,-]|4592: read-variable['obj',v14,-]|4593: read-variable['name',v15,-]|4594: read-property[v14,v15,v11]|4595: \<variable-non-null-undef\>['obj']|4596: write-property[v12,v13,v11]|4597: \<variable-non-null-undef\>['data']*}" ] 
BB1527 -> BB1530 [tailport=s, headport=n, headlabel="      1530"]
BB1527 -> BB1536 [tailport=s, headport=n, color=gray]
BB1528 [shape=record label="{4598: read-variable['warn',v12,v11]|4599: constant[\"cannot update validator '%s' doesn't exist yet\",v13]|4600: read-variable['name',v14,-]}" ] 
BB1528 -> BB1529 [tailport=s, headport=n, headlabel="      1529"]
BB1528 -> BB1536 [tailport=s, headport=n, color=gray]
BB1529 [shape=record label="{4601: call-warn [v11,v12,v13,v14,-]*}" ] 
BB1529 -> BB1530 [tailport=s, headport=n]
BB1529 -> BB1536 [tailport=s, headport=n, color=gray]
BB1530 [shape=record label="{4602: read-variable['builtRules',v12,-]|4603: read-variable['name',v13,-]|4604: read-property[v12,v13,v11]|4605: \<variable-non-null-undef\>['builtRules']|4606: if[v11](true-block:1531,false-block:1532)}" ] 
BB1530 -> BB1531 [tailport=s, headport=n, headlabel="      1531"]
BB1530 -> BB1532 [tailport=s, headport=n, headlabel="      1532"]
BB1530 -> BB1536 [tailport=s, headport=n, color=gray]
BB1531 [shape=record label="{4607: read-variable['builtRules',v15,-]|4608: read-variable['name',v16,-]|4609: delete-property[v15,v16,v14]*}" ] 
BB1531 -> BB1532 [tailport=s, headport=n]
BB1531 -> BB1536 [tailport=s, headport=n, color=gray]
BB1532 [shape=record label="{4610: end-for-in(begin-node:4580)}" ] 
BB1532 -> BB1525 [tailport=s, headport=n]
BB1533 [shape=record label="{4611: read-variable['$',v9,-]|4612: read-property[v9,'extend',-]|4613: \<variable-non-null-undef\>['$']|4614: constant[true,v10]|4615: read-variable['rawRules',v11,-]|4616: read-variable['data',v12,-]}" ] 
BB1533 -> BB1534 [tailport=s, headport=n, headlabel="      1534"]
BB1533 -> BB1536 [tailport=s, headport=n, color=gray]
BB1534 [shape=record label="{4617: call-$.extend [v9,'extend',v10,v11,v12,-]*}" ] 
BB1534 -> BB1535 [tailport=s, headport=n, headlabel="      1535"]
BB1534 -> BB1536 [tailport=s, headport=n, color=gray]
BB1535 [shape=record label="{4618: return[v1]}" ] 
BB1536 [shape=record label="{4619: exceptional-return}" ] 
//#$~ 1320
}
