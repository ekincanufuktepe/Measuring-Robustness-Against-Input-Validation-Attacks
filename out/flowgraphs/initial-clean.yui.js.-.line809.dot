digraph {
rankdir="TD"
BB_entry21[shape=none,label=""];
BB_entry21 -> BB593 [tailport=s, headport=n, headlabel="    593"]
BB593 [shape=record label="{2233: constant[undefined,v1]|2234: vardecl['Y']|2235: vardecl['mod']}" ] 
BB593 -> BB594 [tailport=s, headport=n, headlabel="      594"]
BB594 [shape=record label="{2236: read-variable['this',v2,-]|2237: write-variable[v2,'Y']*|2238: read-variable['Array',v4,-]|2239: constant[\"event-base\",v5]}" ] 
BB594 -> BB595 [tailport=s, headport=n, headlabel="      595"]
BB594 -> BB606 [tailport=s, headport=n, color=gray, headlabel="      606"]
BB595 [shape=record label="{2240: construct [-,v4,v5,v3]}" ] 
BB595 -> BB596 [tailport=s, headport=n, headlabel="      596"]
BB595 -> BB606 [tailport=s, headport=n, color=gray]
BB596 [shape=record label="{2241: write-variable[v3,'mod']*|2242: read-variable['Y',v10,-]|2243: read-property[v10,'Lang',v9]|2244: \<variable-non-null-undef\>['Y']|2245: read-property[v9,'isObject',-]|2246: \<property-non-null-undef\>[v10,'Lang']|2247: read-variable['until',v11,-]}" ] 
BB596 -> BB597 [tailport=s, headport=n, headlabel="      597"]
BB596 -> BB606 [tailport=s, headport=n, color=gray]
BB597 [shape=record label="{2248: call-Y.Lang.isObject [v9,'isObject',v11,v7]}" ] 
BB597 -> BB598 [tailport=s, headport=n, headlabel="      598"]
BB597 -> BB606 [tailport=s, headport=n, color=gray]
BB598 [shape=record label="{2249: if[v7](true-block:599,false-block:600)}" ] 
BB598 -> BB599 [tailport=s, headport=n, headlabel="      599"]
BB598 -> BB600 [tailport=s, headport=n, headlabel="      600"]
BB599 [shape=record label="{2250: read-variable['until',v6,-]}" ] 
BB599 -> BB601 [tailport=s, headport=n, headlabel="      601"]
BB599 -> BB606 [tailport=s, headport=n, color=gray]
BB600 [shape=record label="{2251: new[v6]|2252: read-variable['until',v12,-]|2253: write-property[v6,'event',v12]}" ] 
BB600 -> BB601 [tailport=s, headport=n]
BB600 -> BB606 [tailport=s, headport=n, color=gray]
BB601 [shape=record label="{2254: write-variable[v6,'until']*|2255: read-variable['until',v15,-]|2256: read-property[v15,'event',v13]|2257: \<variable-non-null-undef\>['until']|2258: constant[\"load\",v14]|2259: ===[v13,v14,v12]|2260: if[v12](true-block:602,false-block:604)}" ] 
BB601 -> BB602 [tailport=s, headport=n, headlabel="      602"]
BB601 -> BB604 [tailport=s, headport=n, headlabel="      604"]
BB601 -> BB606 [tailport=s, headport=n, color=gray]
BB602 [shape=record label="{2261: read-variable['mod',v17,-]|2262: read-property[v17,'push',-]|2263: \<variable-non-null-undef\>['mod']|2264: constant[\"event-synthetic\",v18]}" ] 
BB602 -> BB603 [tailport=s, headport=n, headlabel="      603"]
BB602 -> BB606 [tailport=s, headport=n, color=gray]
BB603 [shape=record label="{2265: call-mod.push [v17,'push',v18,-]*}" ] 
BB603 -> BB604 [tailport=s, headport=n]
BB603 -> BB606 [tailport=s, headport=n, color=gray]
BB604 [shape=record label="{2266: function-expr[function ( ),v1]}" ] 
BB604 -> BB605 [tailport=s, headport=n, headlabel="      605"]
BB605 [shape=record label="{2267: return[v1]}" ] 
BB606 [shape=record label="{2268: exceptional-return}" ] 
//#$~ 826
}
