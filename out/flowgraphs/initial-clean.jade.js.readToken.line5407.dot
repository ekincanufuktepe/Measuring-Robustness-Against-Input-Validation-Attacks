digraph {
rankdir="TD"
BB_entry315[shape=none,label=""];
BB_entry315 -> BB5244 [tailport=s, headport=n, headlabel="    5244"]
BB5244 [shape=record label="{16256: constant[undefined,v1]|16257: vardecl['code']|16258: vardecl['tok']|16259: vardecl['ch']}" ] 
BB5244 -> BB5245 [tailport=s, headport=n, headlabel="      5245"]
BB5245 [shape=record label="{16260: read-variable['forceRegexp',v3,-]|16261: ![v3,v2]|16262: if[v2](true-block:5246,false-block:5247)}" ] 
BB5245 -> BB5246 [tailport=s, headport=n, headlabel="      5246"]
BB5245 -> BB5247 [tailport=s, headport=n, headlabel="      5247"]
BB5245 -> BB5285 [tailport=s, headport=n, color=gray, headlabel="      5285"]
BB5246 [shape=record label="{16263: read-variable['tokPos',v4,-]|16264: write-variable[v4,'tokStart']*}" ] 
BB5246 -> BB5248 [tailport=s, headport=n, headlabel="      5248"]
BB5246 -> BB5285 [tailport=s, headport=n, color=gray]
BB5247 [shape=record label="{16265: read-variable['tokStart',v5,-]|16266: constant[1.0,v6]|16267: +[v5,v6,v4]|16268: write-variable[v4,'tokPos']*}" ] 
BB5247 -> BB5248 [tailport=s, headport=n]
BB5247 -> BB5285 [tailport=s, headport=n, color=gray]
BB5248 [shape=record label="{16269: read-variable['options',v5,-]|16270: read-property[v5,'locations',v4]|16271: \<variable-non-null-undef\>['options']|16272: if[v4](true-block:5249,false-block:5252)}" ] 
BB5248 -> BB5249 [tailport=s, headport=n, headlabel="      5249"]
BB5248 -> BB5252 [tailport=s, headport=n, headlabel="      5252"]
BB5248 -> BB5285 [tailport=s, headport=n, color=gray]
BB5249 [shape=record label="{16273: read-variable['Position',v7,-]}" ] 
BB5249 -> BB5250 [tailport=s, headport=n, headlabel="      5250"]
BB5249 -> BB5285 [tailport=s, headport=n, color=gray]
BB5250 [shape=record label="{16274: construct [-,v7,v6]}" ] 
BB5250 -> BB5251 [tailport=s, headport=n, headlabel="      5251"]
BB5250 -> BB5285 [tailport=s, headport=n, color=gray]
BB5251 [shape=record label="{16275: write-variable[v6,'tokStartLoc']*}" ] 
BB5251 -> BB5252 [tailport=s, headport=n]
BB5252 [shape=record label="{16276: read-variable['forceRegexp',v6,-]|16277: if[v6](true-block:5253,false-block:5255)}" ] 
BB5252 -> BB5253 [tailport=s, headport=n, headlabel="      5253"]
BB5252 -> BB5255 [tailport=s, headport=n, headlabel="      5255"]
BB5252 -> BB5285 [tailport=s, headport=n, color=gray]
BB5253 [shape=record label="{16278: read-variable['readRegexp',v8,v7]}" ] 
BB5253 -> BB5254 [tailport=s, headport=n, headlabel="      5254"]
BB5253 -> BB5285 [tailport=s, headport=n, color=gray]
BB5254 [shape=record label="{16279: call-readRegexp [v7,v8,v1]}" ] 
BB5254 -> BB5284 [tailport=s, headport=n, headlabel="      5284"]
BB5254 -> BB5285 [tailport=s, headport=n, color=gray]
BB5255 [shape=record label="{16280: read-variable['tokPos',v8,-]|16281: read-variable['inputLen',v9,-]|16282: \>=[v8,v9,v7]|16283: if[v7](true-block:5256,false-block:5258)}" ] 
BB5255 -> BB5256 [tailport=s, headport=n, headlabel="      5256"]
BB5255 -> BB5258 [tailport=s, headport=n, headlabel="      5258"]
BB5255 -> BB5285 [tailport=s, headport=n, color=gray]
BB5256 [shape=record label="{16284: read-variable['finishToken',v11,v10]|16285: read-variable['_eof',v12,-]}" ] 
BB5256 -> BB5257 [tailport=s, headport=n, headlabel="      5257"]
BB5256 -> BB5285 [tailport=s, headport=n, color=gray]
BB5257 [shape=record label="{16286: call-finishToken [v10,v11,v12,v1]}" ] 
BB5257 -> BB5284 [tailport=s, headport=n]
BB5257 -> BB5285 [tailport=s, headport=n, color=gray]
BB5258 [shape=record label="{16287: read-variable['input',v12,-]|16288: read-property[v12,'charCodeAt',-]|16289: \<variable-non-null-undef\>['input']|16290: read-variable['tokPos',v13,-]}" ] 
BB5258 -> BB5259 [tailport=s, headport=n, headlabel="      5259"]
BB5258 -> BB5285 [tailport=s, headport=n, color=gray]
BB5259 [shape=record label="{16291: call-input.charCodeAt [v12,'charCodeAt',v13,v10]}" ] 
BB5259 -> BB5260 [tailport=s, headport=n, headlabel="      5260"]
BB5259 -> BB5285 [tailport=s, headport=n, color=gray]
BB5260 [shape=record label="{16292: write-variable[v10,'code']*|16293: read-variable['inTemplate',v14,-]|16294: if[v14](true-block:5261,false-block:5263)}" ] 
BB5260 -> BB5261 [tailport=s, headport=n, headlabel="      5261"]
BB5260 -> BB5263 [tailport=s, headport=n, headlabel="      5263"]
BB5260 -> BB5285 [tailport=s, headport=n, color=gray]
BB5261 [shape=record label="{16295: read-variable['getTemplateToken',v16,v15]|16296: read-variable['code',v17,-]}" ] 
BB5261 -> BB5262 [tailport=s, headport=n, headlabel="      5262"]
BB5261 -> BB5285 [tailport=s, headport=n, color=gray]
BB5262 [shape=record label="{16297: call-getTemplateToken [v15,v16,v17,v1]}" ] 
BB5262 -> BB5284 [tailport=s, headport=n]
BB5262 -> BB5285 [tailport=s, headport=n, color=gray]
BB5263 [shape=record label="{16298: read-variable['isIdentifierStart',v17,v16]|16299: read-variable['code',v18,-]}" ] 
BB5263 -> BB5264 [tailport=s, headport=n, headlabel="      5264"]
BB5263 -> BB5285 [tailport=s, headport=n, color=gray]
BB5264 [shape=record label="{16300: call-isIdentifierStart [v16,v17,v18,v15]}" ] 
BB5264 -> BB5265 [tailport=s, headport=n, headlabel="      5265"]
BB5264 -> BB5285 [tailport=s, headport=n, color=gray]
BB5265 [shape=record label="{16301: if[v15](true-block:5267,false-block:5266)}" ] 
BB5265 -> BB5267 [tailport=s, headport=n, headlabel="      5267"]
BB5265 -> BB5266 [tailport=s, headport=n, headlabel="      5266"]
BB5266 [shape=record label="{16302: read-variable['code',v16,-]|16303: constant[92.0,v17]|16304: ===[v16,v17,v15]}" ] 
BB5266 -> BB5267 [tailport=s, headport=n]
BB5266 -> BB5285 [tailport=s, headport=n, color=gray]
BB5267 [shape=record label="{16305: if[v15](true-block:5268,false-block:5270)}" ] 
BB5267 -> BB5268 [tailport=s, headport=n, headlabel="      5268"]
BB5267 -> BB5270 [tailport=s, headport=n, headlabel="      5270"]
BB5268 [shape=record label="{16306: read-variable['readWord',v17,v16]}" ] 
BB5268 -> BB5269 [tailport=s, headport=n, headlabel="      5269"]
BB5268 -> BB5285 [tailport=s, headport=n, color=gray]
BB5269 [shape=record label="{16307: call-readWord [v16,v17,v1]}" ] 
BB5269 -> BB5284 [tailport=s, headport=n]
BB5269 -> BB5285 [tailport=s, headport=n, color=gray]
BB5270 [shape=record label="{16308: read-variable['getTokenFromCode',v18,v17]|16309: read-variable['code',v19,-]}" ] 
BB5270 -> BB5271 [tailport=s, headport=n, headlabel="      5271"]
BB5270 -> BB5285 [tailport=s, headport=n, color=gray]
BB5271 [shape=record label="{16310: call-getTokenFromCode [v17,v18,v19,v16]}" ] 
BB5271 -> BB5272 [tailport=s, headport=n, headlabel="      5272"]
BB5271 -> BB5285 [tailport=s, headport=n, color=gray]
BB5272 [shape=record label="{16311: write-variable[v16,'tok']*|16312: read-variable['tok',v21,-]|16313: constant[false,v22]|16314: ===[v21,v22,v20]|16315: if[v20](true-block:5273,false-block:5283)}" ] 
BB5272 -> BB5273 [tailport=s, headport=n, headlabel="      5273"]
BB5272 -> BB5283 [tailport=s, headport=n, headlabel="      5283"]
BB5272 -> BB5285 [tailport=s, headport=n, color=gray]
BB5273 [shape=record label="{16316: read-variable['String',v25,-]|16317: read-property[v25,'fromCharCode',-]|16318: \<variable-non-null-undef\>['String']|16319: read-variable['code',v26,-]}" ] 
BB5273 -> BB5274 [tailport=s, headport=n, headlabel="      5274"]
BB5273 -> BB5285 [tailport=s, headport=n, color=gray]
BB5274 [shape=record label="{16320: call-String.fromCharCode [v25,'fromCharCode',v26,v23]}" ] 
BB5274 -> BB5275 [tailport=s, headport=n, headlabel="      5275"]
BB5274 -> BB5285 [tailport=s, headport=n, color=gray]
BB5275 [shape=record label="{16321: write-variable[v23,'ch']*|16322: read-variable['ch',v28,-]|16323: constant[\"\\\\\",v29]|16324: ===[v28,v29,v27]|16325: if[v27](true-block:5278,false-block:5276)}" ] 
BB5275 -> BB5278 [tailport=s, headport=n, headlabel="      5278"]
BB5275 -> BB5276 [tailport=s, headport=n, headlabel="      5276"]
BB5275 -> BB5285 [tailport=s, headport=n, color=gray]
BB5276 [shape=record label="{16326: read-variable['nonASCIIidentifierStart',v29,-]|16327: read-property[v29,'test',-]|16328: \<variable-non-null-undef\>['nonASCIIidentifierStart']|16329: read-variable['ch',v30,-]}" ] 
BB5276 -> BB5277 [tailport=s, headport=n, headlabel="      5277"]
BB5276 -> BB5285 [tailport=s, headport=n, color=gray]
BB5277 [shape=record label="{16330: call-nonASCIIidentifierStart.test [v29,'test',v30,v27]}" ] 
BB5277 -> BB5278 [tailport=s, headport=n]
BB5277 -> BB5285 [tailport=s, headport=n, color=gray]
BB5278 [shape=record label="{16331: if[v27](true-block:5279,false-block:5281)}" ] 
BB5278 -> BB5279 [tailport=s, headport=n, headlabel="      5279"]
BB5278 -> BB5281 [tailport=s, headport=n, headlabel="      5281"]
BB5279 [shape=record label="{16332: read-variable['readWord',v29,v28]}" ] 
BB5279 -> BB5280 [tailport=s, headport=n, headlabel="      5280"]
BB5279 -> BB5285 [tailport=s, headport=n, color=gray]
BB5280 [shape=record label="{16333: call-readWord [v28,v29,v1]}" ] 
BB5280 -> BB5284 [tailport=s, headport=n]
BB5280 -> BB5285 [tailport=s, headport=n, color=gray]
BB5281 [shape=record label="{16334: read-variable['raise',v29,v28]|16335: read-variable['tokPos',v30,-]|16336: constant[\"Unexpected character '\",v34]|16337: read-variable['ch',v35,-]|16338: +[v34,v35,v32]|16339: constant[\"'\",v33]|16340: +[v32,v33,v31]}" ] 
BB5281 -> BB5282 [tailport=s, headport=n, headlabel="      5282"]
BB5281 -> BB5285 [tailport=s, headport=n, color=gray]
BB5282 [shape=record label="{16341: call-raise [v28,v29,v30,v31,-]*}" ] 
BB5282 -> BB5283 [tailport=s, headport=n]
BB5282 -> BB5285 [tailport=s, headport=n, color=gray]
BB5283 [shape=record label="{16342: read-variable['tok',v1,-]}" ] 
BB5283 -> BB5284 [tailport=s, headport=n]
BB5283 -> BB5285 [tailport=s, headport=n, color=gray]
BB5284 [shape=record label="{16343: return[v1]}" ] 
BB5285 [shape=record label="{16344: exceptional-return}" ] 
//#$~ 5431
}
