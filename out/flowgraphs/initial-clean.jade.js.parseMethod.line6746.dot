digraph {
rankdir="TD"
BB_entry386[shape=none,label=""];
BB_entry386 -> BB7025 [tailport=s, headport=n, headlabel="    7025"]
BB7025 [shape=record label="{20758: constant[undefined,v1]|20759: vardecl['node']|20760: vardecl['allowExpressionBody']}" ] 
BB7025 -> BB7026 [tailport=s, headport=n, headlabel="      7026"]
BB7026 [shape=record label="{20761: read-variable['startNode',v4,v3]}" ] 
BB7026 -> BB7027 [tailport=s, headport=n, headlabel="      7027"]
BB7026 -> BB7040 [tailport=s, headport=n, color=gray, headlabel="      7040"]
BB7027 [shape=record label="{20762: call-startNode [v3,v4,v2]}" ] 
BB7027 -> BB7028 [tailport=s, headport=n, headlabel="      7028"]
BB7027 -> BB7040 [tailport=s, headport=n, color=gray]
BB7028 [shape=record label="{20763: write-variable[v2,'node']*|20764: read-variable['initFunction',v6,v5]|20765: read-variable['node',v7,-]}" ] 
BB7028 -> BB7029 [tailport=s, headport=n, headlabel="      7029"]
BB7028 -> BB7040 [tailport=s, headport=n, color=gray]
BB7029 [shape=record label="{20766: call-initFunction [v5,v6,v7,-]*}" ] 
BB7029 -> BB7030 [tailport=s, headport=n, headlabel="      7030"]
BB7029 -> BB7040 [tailport=s, headport=n, color=gray]
BB7030 [shape=record label="{20767: read-variable['parseFunctionParams',v9,v8]|20768: read-variable['node',v10,-]}" ] 
BB7030 -> BB7031 [tailport=s, headport=n, headlabel="      7031"]
BB7030 -> BB7040 [tailport=s, headport=n, color=gray]
BB7031 [shape=record label="{20769: call-parseFunctionParams [v8,v9,v10,-]*}" ] 
BB7031 -> BB7032 [tailport=s, headport=n, headlabel="      7032"]
BB7031 -> BB7040 [tailport=s, headport=n, color=gray]
BB7032 [shape=record label="{20770: read-variable['options',v14,-]|20771: read-property[v14,'ecmaVersion',v12]|20772: \<variable-non-null-undef\>['options']|20773: constant[6.0,v13]|20774: \>=[v12,v13,v11]|20775: if[v11](true-block:7033,false-block:7034)}" ] 
BB7032 -> BB7033 [tailport=s, headport=n, headlabel="      7033"]
BB7032 -> BB7034 [tailport=s, headport=n, headlabel="      7034"]
BB7032 -> BB7040 [tailport=s, headport=n, color=gray]
BB7033 [shape=record label="{20776: read-variable['node',v16,-]|20777: read-variable['isGenerator',v15,-]|20778: write-property[v16,'generator',v15]|20779: \<variable-non-null-undef\>['node']*|20780: constant[true,v17]|20781: write-variable[v17,'allowExpressionBody']*}" ] 
BB7033 -> BB7035 [tailport=s, headport=n, headlabel="      7035"]
BB7033 -> BB7040 [tailport=s, headport=n, color=gray]
BB7034 [shape=record label="{20782: constant[false,v15]|20783: write-variable[v15,'allowExpressionBody']*}" ] 
BB7034 -> BB7035 [tailport=s, headport=n]
BB7035 [shape=record label="{20784: read-variable['parseFunctionBody',v16,v15]|20785: read-variable['node',v17,-]|20786: read-variable['allowExpressionBody',v18,-]}" ] 
BB7035 -> BB7036 [tailport=s, headport=n, headlabel="      7036"]
BB7035 -> BB7040 [tailport=s, headport=n, color=gray]
BB7036 [shape=record label="{20787: call-parseFunctionBody [v15,v16,v17,v18,-]*}" ] 
BB7036 -> BB7037 [tailport=s, headport=n, headlabel="      7037"]
BB7036 -> BB7040 [tailport=s, headport=n, color=gray]
BB7037 [shape=record label="{20788: read-variable['finishNode',v20,v19]|20789: read-variable['node',v21,-]|20790: constant[\"FunctionExpression\",v22]}" ] 
BB7037 -> BB7038 [tailport=s, headport=n, headlabel="      7038"]
BB7037 -> BB7040 [tailport=s, headport=n, color=gray]
BB7038 [shape=record label="{20791: call-finishNode [v19,v20,v21,v22,v1]}" ] 
BB7038 -> BB7039 [tailport=s, headport=n, headlabel="      7039"]
BB7038 -> BB7040 [tailport=s, headport=n, color=gray]
BB7039 [shape=record label="{20792: return[v1]}" ] 
BB7040 [shape=record label="{20793: exceptional-return}" ] 
//#$~ 6758
}
