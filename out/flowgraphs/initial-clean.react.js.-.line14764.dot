digraph {
rankdir="TD"
BB_entry617[shape=none,label=""];
BB_entry617 -> BB8414 [tailport=s, headport=n, headlabel="    8414"]
BB8414 [shape=record label="{27864: constant[undefined,v1]|27865: vardecl['internalInstance']|27866: vardecl['element']}" ] 
BB8414 -> BB8415 [tailport=s, headport=n, headlabel="      8415"]
BB8415 [shape=record label="{27867: read-variable['getInternalInstanceReadyForUpdate',v4,v3]|27868: read-variable['publicInstance',v5,-]|27869: constant[\"replaceProps\",v6]}" ] 
BB8415 -> BB8416 [tailport=s, headport=n, headlabel="      8416"]
BB8415 -> BB8431 [tailport=s, headport=n, color=gray, headlabel="      8431"]
BB8416 [shape=record label="{27870: call-getInternalInstanceReadyForUpdate [v3,v4,v5,v6,v2]}" ] 
BB8416 -> BB8417 [tailport=s, headport=n, headlabel="      8417"]
BB8416 -> BB8431 [tailport=s, headport=n, color=gray]
BB8417 [shape=record label="{27871: write-variable[v2,'internalInstance']*|27872: read-variable['internalInstance',v8,-]|27873: ![v8,v7]|27874: if[v7](true-block:8418,false-block:8419)}" ] 
BB8417 -> BB8418 [tailport=s, headport=n, headlabel="      8418"]
BB8417 -> BB8419 [tailport=s, headport=n, headlabel="      8419"]
BB8417 -> BB8431 [tailport=s, headport=n, color=gray]
BB8418 [shape=record label="{27875: constant[undefined,v1]}" ] 
BB8418 -> BB8430 [tailport=s, headport=n, headlabel="      8430"]
BB8419 [shape=record label="{27876: constant[\"production\",v10]|27877: constant[\"development\",v11]|27878: !==[v10,v11,v9]|27879: if[v9](true-block:8420,false-block:8421)}" ] 
BB8419 -> BB8420 [tailport=s, headport=n, headlabel="      8420"]
BB8419 -> BB8421 [tailport=s, headport=n, headlabel="      8421"]
BB8419 -> BB8431 [tailport=s, headport=n, color=gray]
BB8420 [shape=record label="{27880: read-variable['invariant',v13,v12]|27881: read-variable['internalInstance',v15,-]|27882: read-property[v15,'_isTopLevel',v14]|27883: \<variable-non-null-undef\>['internalInstance']|27884: constant[\"replaceProps(...): You called `replaceProps` on a \",v23]|27885: constant[\"component with a parent. This is an anti-pattern since props will \",v24]|27886: +[v23,v24,v21]|27887: constant[\"get reactively updated when rendered. Instead, change the owner's \",v22]|27888: +[v21,v22,v19]|27889: constant[\"`render` method to pass the correct value as props to the component \",v20]|27890: +[v19,v20,v17]|27891: constant[\"where it is created.\",v18]|27892: +[v17,v18,v16]}" ] 
BB8420 -> BB8422 [tailport=s, headport=n, headlabel="      8422"]
BB8420 -> BB8431 [tailport=s, headport=n, color=gray]
BB8421 [shape=record label="{27893: read-variable['invariant',v13,v12]|27894: read-variable['internalInstance',v15,-]|27895: read-property[v15,'_isTopLevel',v14]|27896: \<variable-non-null-undef\>['internalInstance']}" ] 
BB8421 -> BB8423 [tailport=s, headport=n, headlabel="      8423"]
BB8421 -> BB8431 [tailport=s, headport=n, color=gray]
BB8422 [shape=record label="{27897: call-invariant [v12,v13,v14,v16,-]}" ] 
BB8422 -> BB8424 [tailport=s, headport=n, headlabel="      8424"]
BB8422 -> BB8431 [tailport=s, headport=n, color=gray]
BB8423 [shape=record label="{27898: call-invariant [v12,v13,v14,-]}" ] 
BB8423 -> BB8424 [tailport=s, headport=n]
BB8423 -> BB8431 [tailport=s, headport=n, color=gray]
BB8424 [shape=record label="{27899: read-variable['internalInstance',v13,-]|27900: read-property[v13,'_pendingElement',v12]|27901: \<variable-non-null-undef\>['internalInstance']|27902: if[v12](true-block:8426,false-block:8425)}" ] 
BB8424 -> BB8426 [tailport=s, headport=n, headlabel="      8426"]
BB8424 -> BB8425 [tailport=s, headport=n, headlabel="      8425"]
BB8424 -> BB8431 [tailport=s, headport=n, color=gray]
BB8425 [shape=record label="{27903: read-variable['internalInstance',v13,-]|27904: read-property[v13,'_currentElement',v12]|27905: \<variable-non-null-undef\>['internalInstance']}" ] 
BB8425 -> BB8426 [tailport=s, headport=n]
BB8425 -> BB8431 [tailport=s, headport=n, color=gray]
BB8426 [shape=record label="{27906: write-variable[v12,'element']*|27907: read-variable['internalInstance',v14,-]|27908: read-variable['ReactElement',v16,-]|27909: read-property[v16,'cloneAndReplaceProps',-]|27910: \<variable-non-null-undef\>['ReactElement']|27911: read-variable['element',v17,-]|27912: read-variable['props',v18,-]}" ] 
BB8426 -> BB8427 [tailport=s, headport=n, headlabel="      8427"]
BB8426 -> BB8431 [tailport=s, headport=n, color=gray]
BB8427 [shape=record label="{27913: call-ReactElement.cloneAndReplaceProps [v16,'cloneAndReplaceProps',v17,v18,v13]}" ] 
BB8427 -> BB8428 [tailport=s, headport=n, headlabel="      8428"]
BB8427 -> BB8431 [tailport=s, headport=n, color=gray]
BB8428 [shape=record label="{27914: write-property[v14,'_pendingElement',v13]|27915: \<variable-non-null-undef\>['internalInstance']*|27916: read-variable['enqueueUpdate',v20,v19]|27917: read-variable['internalInstance',v21,-]}" ] 
BB8428 -> BB8429 [tailport=s, headport=n, headlabel="      8429"]
BB8428 -> BB8431 [tailport=s, headport=n, color=gray]
BB8429 [shape=record label="{27918: call-enqueueUpdate [v19,v20,v21,-]*}" ] 
BB8429 -> BB8430 [tailport=s, headport=n]
BB8429 -> BB8431 [tailport=s, headport=n, color=gray]
BB8430 [shape=record label="{27919: return[v1]}" ] 
BB8431 [shape=record label="{27920: exceptional-return}" ] 
//#$~ 14792
}
