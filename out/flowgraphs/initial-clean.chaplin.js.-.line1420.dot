digraph {
rankdir="TD"
BB_entry129[shape=none,label=""];
BB_entry129 -> BB1548 [tailport=s, headport=n, headlabel="    1548"]
BB1548 [shape=record label="{5124: constant[undefined,v1]|5125: vardecl['data']|5126: vardecl['source']}" ] 
BB1548 -> BB1549 [tailport=s, headport=n, headlabel="      1549"]
BB1549 [shape=record label="{5127: read-variable['this',v4,-]|5128: read-property[v4,'model',v3]|5129: if[v3](true-block:1550,false-block:1551)}" ] 
BB1549 -> BB1550 [tailport=s, headport=n, headlabel="      1550"]
BB1549 -> BB1551 [tailport=s, headport=n, headlabel="      1551"]
BB1549 -> BB1568 [tailport=s, headport=n, color=gray, headlabel="      1568"]
BB1550 [shape=record label="{5130: read-variable['utils',v6,-]|5131: read-property[v6,'serialize',-]|5132: \<variable-non-null-undef\>['utils']|5133: read-variable['this',v8,-]|5134: read-property[v8,'model',v7]}" ] 
BB1550 -> BB1552 [tailport=s, headport=n, headlabel="      1552"]
BB1550 -> BB1568 [tailport=s, headport=n, color=gray]
BB1551 [shape=record label="{5135: read-variable['this',v6,-]|5136: read-property[v6,'collection',v5]|5137: if[v5](true-block:1553,false-block:1554)}" ] 
BB1551 -> BB1553 [tailport=s, headport=n, headlabel="      1553"]
BB1551 -> BB1554 [tailport=s, headport=n, headlabel="      1554"]
BB1551 -> BB1568 [tailport=s, headport=n, color=gray]
BB1552 [shape=record label="{5138: call-utils.serialize [v6,'serialize',v7,v2]}" ] 
BB1552 -> BB1557 [tailport=s, headport=n, headlabel="      1557"]
BB1552 -> BB1568 [tailport=s, headport=n, color=gray]
BB1553 [shape=record label="{5139: new[v2]|5140: read-variable['utils',v9,-]|5141: read-property[v9,'serialize',-]|5142: \<variable-non-null-undef\>['utils']|5143: read-variable['this',v11,-]|5144: read-property[v11,'collection',v10]}" ] 
BB1553 -> BB1555 [tailport=s, headport=n, headlabel="      1555"]
BB1553 -> BB1568 [tailport=s, headport=n, color=gray]
BB1554 [shape=record label="{5145: new[v2]}" ] 
BB1554 -> BB1557 [tailport=s, headport=n]
BB1555 [shape=record label="{5146: call-utils.serialize [v9,'serialize',v10,v7]}" ] 
BB1555 -> BB1556 [tailport=s, headport=n, headlabel="      1556"]
BB1555 -> BB1568 [tailport=s, headport=n, color=gray]
BB1556 [shape=record label="{5147: write-property[v2,'items',v7]|5148: read-variable['this',v14,-]|5149: read-property[v14,'collection',v13]|5150: read-property[v13,'length',v12]|5151: \<property-non-null-undef\>[v14,'collection']|5152: write-property[v2,'length',v12]}" ] 
BB1556 -> BB1557 [tailport=s, headport=n]
BB1556 -> BB1568 [tailport=s, headport=n, color=gray]
BB1557 [shape=record label="{5153: write-variable[v2,'data']*|5154: read-variable['this',v6,-]|5155: read-property[v6,'model',v5]|5156: if[v5](true-block:1559,false-block:1558)}" ] 
BB1557 -> BB1559 [tailport=s, headport=n, headlabel="      1559"]
BB1557 -> BB1558 [tailport=s, headport=n, headlabel="      1558"]
BB1557 -> BB1568 [tailport=s, headport=n, color=gray]
BB1558 [shape=record label="{5157: read-variable['this',v6,-]|5158: read-property[v6,'collection',v5]}" ] 
BB1558 -> BB1559 [tailport=s, headport=n]
BB1558 -> BB1568 [tailport=s, headport=n, color=gray]
BB1559 [shape=record label="{5159: write-variable[v5,'source']*|5160: read-variable['source',v6,-]|5161: if[v6](true-block:1560,false-block:1566)}" ] 
BB1559 -> BB1560 [tailport=s, headport=n, headlabel="      1560"]
BB1559 -> BB1566 [tailport=s, headport=n, headlabel="      1566"]
BB1559 -> BB1568 [tailport=s, headport=n, color=gray]
BB1560 [shape=record label="{5162: read-variable['source',v11,-]|5163: read-property[v11,'isSynced',v10]|5164: \<variable-non-null-undef\>['source']|5165: typeof[v10,v8]|5166: constant[\"function\",v9]|5167: ===[v8,v9,v7]|5168: if[v7](true-block:1561,false-block:1562)}" ] 
BB1560 -> BB1562 [tailport=s, headport=n, headlabel="      1562"]
BB1560 -> BB1561 [tailport=s, headport=n, headlabel="      1561"]
BB1560 -> BB1568 [tailport=s, headport=n, color=gray]
BB1561 [shape=record label="{5169: constant[\"synced\",v13]|5170: read-variable['data',v14,-]|5171: in[v13,v14,v12]|5172: ![v12,v7]}" ] 
BB1561 -> BB1562 [tailport=s, headport=n]
BB1561 -> BB1568 [tailport=s, headport=n, color=gray]
BB1562 [shape=record label="{5173: if[v7](true-block:1563,false-block:1566)}" ] 
BB1562 -> BB1563 [tailport=s, headport=n, headlabel="      1563"]
BB1562 -> BB1566 [tailport=s, headport=n]
BB1563 [shape=record label="{5174: read-variable['data',v13,-]|5175: read-variable['source',v15,-]|5176: read-property[v15,'isSynced',-]|5177: \<variable-non-null-undef\>['source']}" ] 
BB1563 -> BB1564 [tailport=s, headport=n, headlabel="      1564"]
BB1563 -> BB1568 [tailport=s, headport=n, color=gray]
BB1564 [shape=record label="{5178: call-source.isSynced [v15,'isSynced',v12]}" ] 
BB1564 -> BB1565 [tailport=s, headport=n, headlabel="      1565"]
BB1564 -> BB1568 [tailport=s, headport=n, color=gray]
BB1565 [shape=record label="{5179: write-property[v13,'synced',v12]|5180: \<variable-non-null-undef\>['data']*}" ] 
BB1565 -> BB1566 [tailport=s, headport=n]
BB1565 -> BB1568 [tailport=s, headport=n, color=gray]
BB1566 [shape=record label="{5181: read-variable['data',v1,-]}" ] 
BB1566 -> BB1567 [tailport=s, headport=n, headlabel="      1567"]
BB1566 -> BB1568 [tailport=s, headport=n, color=gray]
BB1567 [shape=record label="{5182: return[v1]}" ] 
BB1568 [shape=record label="{5183: exceptional-return}" ] 
//#$~ 1432
}
