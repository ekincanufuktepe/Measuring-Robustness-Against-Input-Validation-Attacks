digraph {
rankdir="TD"
BB_entry66[shape=none,label=""];
BB_entry66 -> BB789 [tailport=s, headport=n, headlabel="    789"]
BB789 [shape=record label="{2320: constant[undefined,v1]|2321: vardecl['matchesMethod']|2322: function-decl[function match ( elem selector ),-]|2323: function-decl[function checkParent ( elem ),-]|2324: function-decl[function query ( elem selector ),-]|2325: function-decl[function matchChild ( elem selector ),-]|2326: vardecl['matchesSelector']|2327: vardecl['div']|2328: vardecl['supportsOrphans']}" ] 
BB789 -> BB790 [tailport=s, headport=n, headlabel="      790"]
BB790 [shape=record label="{2329: function-expr[function ( ),v3]}" ] 
BB790 -> BB791 [tailport=s, headport=n, headlabel="      791"]
BB791 [shape=record label="{2330: call-null [-,v3,v2]}" ] 
BB791 -> BB792 [tailport=s, headport=n, headlabel="      792"]
BB791 -> BB813 [tailport=s, headport=n, color=gray, headlabel="      813"]
BB792 [shape=record label="{2331: write-variable[v2,'matchesMethod']*|2332: read-variable['matchesMethod',v4,-]|2333: if[v4](true-block:793,false-block:794)}" ] 
BB792 -> BB793 [tailport=s, headport=n, headlabel="      793"]
BB792 -> BB794 [tailport=s, headport=n, headlabel="      794"]
BB792 -> BB813 [tailport=s, headport=n, color=gray]
BB793 [shape=record label="{2334: read-variable['document',v7,-]|2335: read-property[v7,'createElement',-]|2336: \<variable-non-null-undef\>['document']|2337: constant[\"div\",v8]}" ] 
BB793 -> BB795 [tailport=s, headport=n, headlabel="      795"]
BB793 -> BB813 [tailport=s, headport=n, color=gray]
BB794 [shape=record label="{2338: read-variable['query',v5,-]|2339: write-variable[v5,'matchesSelector']*}" ] 
BB794 -> BB802 [tailport=s, headport=n, headlabel="      802"]
BB794 -> BB813 [tailport=s, headport=n, color=gray]
BB795 [shape=record label="{2340: call-document.createElement [v7,'createElement',v8,v5]}" ] 
BB795 -> BB796 [tailport=s, headport=n, headlabel="      796"]
BB795 -> BB813 [tailport=s, headport=n, color=gray]
BB796 [shape=record label="{2341: write-variable[v5,'div']*|2342: read-variable['match',v11,v10]|2343: read-variable['div',v12,-]|2344: constant[\"div\",v13]}" ] 
BB796 -> BB797 [tailport=s, headport=n, headlabel="      797"]
BB796 -> BB813 [tailport=s, headport=n, color=gray]
BB797 [shape=record label="{2345: call-match [v10,v11,v12,v13,v9]}" ] 
BB797 -> BB798 [tailport=s, headport=n, headlabel="      798"]
BB797 -> BB813 [tailport=s, headport=n, color=gray]
BB798 [shape=record label="{2346: write-variable[v9,'supportsOrphans']*|2347: read-variable['supportsOrphans',v15,-]|2348: if[v15](true-block:799,false-block:800)}" ] 
BB798 -> BB799 [tailport=s, headport=n, headlabel="      799"]
BB798 -> BB800 [tailport=s, headport=n, headlabel="      800"]
BB798 -> BB813 [tailport=s, headport=n, color=gray]
BB799 [shape=record label="{2349: read-variable['match',v14,-]}" ] 
BB799 -> BB801 [tailport=s, headport=n, headlabel="      801"]
BB799 -> BB813 [tailport=s, headport=n, color=gray]
BB800 [shape=record label="{2350: read-variable['matchChild',v14,-]}" ] 
BB800 -> BB801 [tailport=s, headport=n]
BB800 -> BB813 [tailport=s, headport=n, color=gray]
BB801 [shape=record label="{2351: write-variable[v14,'matchesSelector']*}" ] 
BB801 -> BB802 [tailport=s, headport=n]
BB802 [shape=record label="{2352: typeof['define',v6]|2353: constant[\"function\",v7]|2354: ===[v6,v7,v5]|2355: if[v5](true-block:803,false-block:804)}" ] 
BB802 -> BB804 [tailport=s, headport=n, headlabel="      804"]
BB802 -> BB803 [tailport=s, headport=n, headlabel="      803"]
BB802 -> BB813 [tailport=s, headport=n, color=gray]
BB803 [shape=record label="{2356: read-variable['define',v8,-]|2357: read-property[v8,'amd',v5]|2358: \<variable-non-null-undef\>['define']}" ] 
BB803 -> BB804 [tailport=s, headport=n]
BB803 -> BB813 [tailport=s, headport=n, color=gray]
BB804 [shape=record label="{2359: if[v5](true-block:805,false-block:806)}" ] 
BB804 -> BB805 [tailport=s, headport=n, headlabel="      805"]
BB804 -> BB806 [tailport=s, headport=n, headlabel="      806"]
BB805 [shape=record label="{2360: read-variable['define',v9,v8]|2361: constant[\"matches-selector/matches-selector\",v10]|2362: read-variable['Array',v12,-]}" ] 
BB805 -> BB807 [tailport=s, headport=n, headlabel="      807"]
BB805 -> BB813 [tailport=s, headport=n, color=gray]
BB806 [shape=record label="{2363: typeof['exports',v9]|2364: constant[\"object\",v10]|2365: ===[v9,v10,v8]|2366: if[v8](true-block:810,false-block:811)}" ] 
BB806 -> BB810 [tailport=s, headport=n, headlabel="      810"]
BB806 -> BB811 [tailport=s, headport=n, headlabel="      811"]
BB806 -> BB813 [tailport=s, headport=n, color=gray]
BB807 [shape=record label="{2367: construct [-,v12,v11]}" ] 
BB807 -> BB808 [tailport=s, headport=n, headlabel="      808"]
BB807 -> BB813 [tailport=s, headport=n, color=gray]
BB808 [shape=record label="{2368: function-expr[function ( ),v13]}" ] 
BB808 -> BB809 [tailport=s, headport=n, headlabel="      809"]
BB809 [shape=record label="{2369: call-define [v8,v9,v10,v11,v13,-]*}" ] 
BB809 -> BB812 [tailport=s, headport=n, headlabel="      812"]
BB809 -> BB813 [tailport=s, headport=n, color=gray]
BB810 [shape=record label="{2370: read-variable['module',v12,-]|2371: read-variable['matchesSelector',v11,-]|2372: write-property[v12,'exports',v11]|2373: \<variable-non-null-undef\>['module']*}" ] 
BB810 -> BB812 [tailport=s, headport=n]
BB810 -> BB813 [tailport=s, headport=n, color=gray]
BB811 [shape=record label="{2374: read-variable['window',v12,-]|2375: read-variable['matchesSelector',v11,-]|2376: write-property[v12,'matchesSelector',v11]|2377: \<variable-non-null-undef\>['window']*}" ] 
BB811 -> BB812 [tailport=s, headport=n]
BB811 -> BB813 [tailport=s, headport=n, color=gray]
BB812 [shape=record label="{2378: return[v1]}" ] 
BB813 [shape=record label="{2379: exceptional-return}" ] 
//#$~ 1196
}
