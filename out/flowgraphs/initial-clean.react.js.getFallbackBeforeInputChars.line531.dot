digraph {
rankdir="TD"
BB_entry20[shape=none,label=""];
BB_entry20 -> BB280 [tailport=s, headport=n, headlabel="    280"]
BB280 [shape=record label="{932: constant[undefined,v1]|933: vardecl['chars']}" ] 
BB280 -> BB281 [tailport=s, headport=n, headlabel="      281"]
BB281 [shape=record label="{934: read-variable['currentComposition',v2,-]|935: if[v2](true-block:282,false-block:292)}" ] 
BB281 -> BB282 [tailport=s, headport=n, headlabel="      282"]
BB281 -> BB292 [tailport=s, headport=n, headlabel="      292"]
BB281 -> BB309 [tailport=s, headport=n, color=gray, headlabel="      309"]
BB282 [shape=record label="{936: read-variable['topLevelType',v4,-]|937: read-variable['topLevelTypes',v6,-]|938: read-property[v6,'topCompositionEnd',v5]|939: \<variable-non-null-undef\>['topLevelTypes']|940: ===[v4,v5,v3]|941: if[v3](true-block:285,false-block:283)}" ] 
BB282 -> BB285 [tailport=s, headport=n, headlabel="      285"]
BB282 -> BB283 [tailport=s, headport=n, headlabel="      283"]
BB282 -> BB309 [tailport=s, headport=n, color=gray]
BB283 [shape=record label="{942: read-variable['isFallbackCompositionEnd',v5,v4]|943: read-variable['topLevelType',v6,-]|944: read-variable['nativeEvent',v7,-]}" ] 
BB283 -> BB284 [tailport=s, headport=n, headlabel="      284"]
BB283 -> BB309 [tailport=s, headport=n, color=gray]
BB284 [shape=record label="{945: call-isFallbackCompositionEnd [v4,v5,v6,v7,v3]}" ] 
BB284 -> BB285 [tailport=s, headport=n]
BB284 -> BB309 [tailport=s, headport=n, color=gray]
BB285 [shape=record label="{946: if[v3](true-block:286,false-block:291)}" ] 
BB285 -> BB286 [tailport=s, headport=n, headlabel="      286"]
BB285 -> BB291 [tailport=s, headport=n, headlabel="      291"]
BB286 [shape=record label="{947: read-variable['currentComposition',v6,-]|948: read-property[v6,'getData',-]|949: \<variable-non-null-undef\>['currentComposition']}" ] 
BB286 -> BB287 [tailport=s, headport=n, headlabel="      287"]
BB286 -> BB309 [tailport=s, headport=n, color=gray]
BB287 [shape=record label="{950: call-currentComposition.getData [v6,'getData',v4]}" ] 
BB287 -> BB288 [tailport=s, headport=n, headlabel="      288"]
BB287 -> BB309 [tailport=s, headport=n, color=gray]
BB288 [shape=record label="{951: write-variable[v4,'chars']*|952: read-variable['FallbackCompositionState',v8,-]|953: read-property[v8,'release',-]|954: \<variable-non-null-undef\>['FallbackCompositionState']|955: read-variable['currentComposition',v9,-]}" ] 
BB288 -> BB289 [tailport=s, headport=n, headlabel="      289"]
BB288 -> BB309 [tailport=s, headport=n, color=gray]
BB289 [shape=record label="{956: call-FallbackCompositionState.release [v8,'release',v9,-]*}" ] 
BB289 -> BB290 [tailport=s, headport=n, headlabel="      290"]
BB289 -> BB309 [tailport=s, headport=n, color=gray]
BB290 [shape=record label="{957: constant[null,v10]|958: write-variable[v10,'currentComposition']*|959: read-variable['chars',v1,-]}" ] 
BB290 -> BB308 [tailport=s, headport=n, headlabel="      308"]
BB290 -> BB309 [tailport=s, headport=n, color=gray]
BB291 [shape=record label="{960: constant[null,v1]}" ] 
BB291 -> BB308 [tailport=s, headport=n]
BB292 [shape=record label="{961: read-variable['topLevelType',v3,-]|962: read-variable['topLevelTypes',v6,-]|963: read-property[v6,'topPaste',v4]|964: \<variable-non-null-undef\>['topLevelTypes']|965: ==[v3,v4,v5]|966: if[v5](true-block:293,false-block:294)}" ] 
BB292 -> BB293 [tailport=s, headport=n, headlabel="      293"]
BB292 -> BB294 [tailport=s, headport=n, headlabel="      294"]
BB292 -> BB309 [tailport=s, headport=n, color=gray]
BB293 [shape=record label="{967: constant[null,v1]}" ] 
BB293 -> BB308 [tailport=s, headport=n]
BB294 [shape=record label="{968: read-variable['topLevelTypes',v7,-]|969: read-property[v7,'topKeyPress',v4]|970: \<variable-non-null-undef\>['topLevelTypes']|971: ==[v3,v4,v5]|972: if[v5](true-block:295,false-block:296)}" ] 
BB294 -> BB295 [tailport=s, headport=n, headlabel="      295"]
BB294 -> BB296 [tailport=s, headport=n, headlabel="      296"]
BB294 -> BB309 [tailport=s, headport=n, color=gray]
BB295 [shape=record label="{973: read-variable['nativeEvent',v9,-]|974: read-property[v9,'which',v8]|975: \<variable-non-null-undef\>['nativeEvent']|976: if[v8](true-block:297,false-block:300)}" ] 
BB295 -> BB300 [tailport=s, headport=n, headlabel="      300"]
BB295 -> BB297 [tailport=s, headport=n, headlabel="      297"]
BB295 -> BB309 [tailport=s, headport=n, color=gray]
BB296 [shape=record label="{977: read-variable['topLevelTypes',v10,-]|978: read-property[v10,'topCompositionEnd',v4]|979: \<variable-non-null-undef\>['topLevelTypes']|980: ==[v3,v4,v5]|981: if[v5](true-block:304,false-block:307)}" ] 
BB296 -> BB304 [tailport=s, headport=n, headlabel="      304"]
BB296 -> BB307 [tailport=s, headport=n, headlabel="      307"]
BB296 -> BB309 [tailport=s, headport=n, color=gray]
BB297 [shape=record label="{982: read-variable['isKeypressCommand',v12,v11]|983: read-variable['nativeEvent',v13,-]}" ] 
BB297 -> BB298 [tailport=s, headport=n, headlabel="      298"]
BB297 -> BB309 [tailport=s, headport=n, color=gray]
BB298 [shape=record label="{984: call-isKeypressCommand [v11,v12,v13,v10]}" ] 
BB298 -> BB299 [tailport=s, headport=n, headlabel="      299"]
BB298 -> BB309 [tailport=s, headport=n, color=gray]
BB299 [shape=record label="{985: ![v10,v8]}" ] 
BB299 -> BB300 [tailport=s, headport=n]
BB299 -> BB309 [tailport=s, headport=n, color=gray]
BB300 [shape=record label="{986: if[v8](true-block:301,false-block:303)}" ] 
BB300 -> BB301 [tailport=s, headport=n, headlabel="      301"]
BB300 -> BB303 [tailport=s, headport=n, headlabel="      303"]
BB301 [shape=record label="{987: read-variable['String',v11,-]|988: read-property[v11,'fromCharCode',-]|989: \<variable-non-null-undef\>['String']|990: read-variable['nativeEvent',v13,-]|991: read-property[v13,'which',v12]|992: \<variable-non-null-undef\>['nativeEvent']}" ] 
BB301 -> BB302 [tailport=s, headport=n, headlabel="      302"]
BB301 -> BB309 [tailport=s, headport=n, color=gray]
BB302 [shape=record label="{993: call-String.fromCharCode [v11,'fromCharCode',v12,v1]}" ] 
BB302 -> BB308 [tailport=s, headport=n]
BB302 -> BB309 [tailport=s, headport=n, color=gray]
BB303 [shape=record label="{994: constant[null,v1]}" ] 
BB303 -> BB308 [tailport=s, headport=n]
BB304 [shape=record label="{995: read-variable['useFallbackCompositionData',v11,-]|996: if[v11](true-block:305,false-block:306)}" ] 
BB304 -> BB305 [tailport=s, headport=n, headlabel="      305"]
BB304 -> BB306 [tailport=s, headport=n, headlabel="      306"]
BB304 -> BB309 [tailport=s, headport=n, color=gray]
BB305 [shape=record label="{997: constant[null,v1]}" ] 
BB305 -> BB308 [tailport=s, headport=n]
BB306 [shape=record label="{998: read-variable['nativeEvent',v12,-]|999: read-property[v12,'data',v1]|1000: \<variable-non-null-undef\>['nativeEvent']}" ] 
BB306 -> BB308 [tailport=s, headport=n]
BB306 -> BB309 [tailport=s, headport=n, color=gray]
BB307 [shape=record label="{1001: constant[null,v1]}" ] 
BB307 -> BB308 [tailport=s, headport=n]
BB308 [shape=record label="{1002: return[v1]}" ] 
BB309 [shape=record label="{1003: exceptional-return}" ] 
//#$~ 576
}
