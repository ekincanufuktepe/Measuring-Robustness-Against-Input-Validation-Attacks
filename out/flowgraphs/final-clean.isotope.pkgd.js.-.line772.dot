digraph {
rankdir="TD"
BB_entry48[shape=none,label=""];
BB_entry48 -> BB664 [tailport=s, headport=n, headlabel="    664"]
BB664 [shape=record label="{1976: constant[undefined,v1]|1977: function-decl[function getStyleSize ( value ),-]|1978: function-decl[function noop ( ),-]|1979: vardecl['logError']|1980: vardecl['measurements']|1981: function-decl[function getZeroSize ( ),-]|1982: function-decl[function defineGetSize ( getStyleProperty ),-]}" ] 
BB664 -> BB665 [tailport=s, headport=n, headlabel="      665"]
BB665 [shape=record label="{1983: typeof['console',v4]|1984: constant[\"undefined\",v5]|1985: ===[v4,v5,v3]|1986: if[v3](true-block:666,false-block:667)}" ] 
BB665 -> BB666 [tailport=s, headport=n, headlabel="      666"]
BB665 -> BB667 [tailport=s, headport=n, headlabel="      667"]
BB665 -> BB686 [tailport=s, headport=n, color=gray, headlabel="      686"]
BB666 [shape=record label="{1987: read-variable['noop',v2,-]}" ] 
BB666 -> BB668 [tailport=s, headport=n, headlabel="      668"]
BB666 -> BB686 [tailport=s, headport=n, color=gray]
BB667 [shape=record label="{1988: function-expr[function ( message ),v2]}" ] 
BB667 -> BB668 [tailport=s, headport=n]
BB668 [shape=record label="{1989: write-variable[v2,'logError']*|1990: read-variable['Array',v7,-]|1991: constant[\"paddingLeft\",v8]|1992: constant[\"paddingRight\",v9]|1993: constant[\"paddingTop\",v10]|1994: constant[\"paddingBottom\",v11]|1995: constant[\"marginLeft\",v12]|1996: constant[\"marginRight\",v13]|1997: constant[\"marginTop\",v14]|1998: constant[\"marginBottom\",v15]|1999: constant[\"borderLeftWidth\",v16]|2000: constant[\"borderRightWidth\",v17]|2001: constant[\"borderTopWidth\",v18]|2002: constant[\"borderBottomWidth\",v19]}" ] 
BB668 -> BB669 [tailport=s, headport=n, headlabel="      669"]
BB668 -> BB686 [tailport=s, headport=n, color=gray]
BB669 [shape=record label="{2003: construct [-,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v6]}" ] 
BB669 -> BB670 [tailport=s, headport=n, headlabel="      670"]
BB669 -> BB686 [tailport=s, headport=n, color=gray]
BB670 [shape=record label="{2004: write-variable[v6,'measurements']*|2005: typeof['define',v21]|2006: constant[\"function\",v22]|2007: ===[v21,v22,v20]|2008: if[v20](true-block:671,false-block:672)}" ] 
BB670 -> BB672 [tailport=s, headport=n, headlabel="      672"]
BB670 -> BB671 [tailport=s, headport=n, headlabel="      671"]
BB670 -> BB686 [tailport=s, headport=n, color=gray]
BB671 [shape=record label="{2009: read-variable['define',v23,-]|2010: read-property[v23,'amd',v20]|2011: \<variable-non-null-undef\>['define']}" ] 
BB671 -> BB672 [tailport=s, headport=n]
BB671 -> BB686 [tailport=s, headport=n, color=gray]
BB672 [shape=record label="{2012: if[v20](true-block:673,false-block:674)}" ] 
BB672 -> BB673 [tailport=s, headport=n, headlabel="      673"]
BB672 -> BB674 [tailport=s, headport=n, headlabel="      674"]
BB673 [shape=record label="{2013: read-variable['define',v24,v23]|2014: constant[\"get-size/get-size\",v25]|2015: read-variable['Array',v27,-]|2016: constant[\"get-style-property/get-style-property\",v28]}" ] 
BB673 -> BB675 [tailport=s, headport=n, headlabel="      675"]
BB673 -> BB686 [tailport=s, headport=n, color=gray]
BB674 [shape=record label="{2017: typeof['exports',v24]|2018: constant[\"object\",v25]|2019: ===[v24,v25,v23]|2020: if[v23](true-block:678,false-block:679)}" ] 
BB674 -> BB678 [tailport=s, headport=n, headlabel="      678"]
BB674 -> BB679 [tailport=s, headport=n, headlabel="      679"]
BB674 -> BB686 [tailport=s, headport=n, color=gray]
BB675 [shape=record label="{2021: construct [-,v27,v28,v26]}" ] 
BB675 -> BB676 [tailport=s, headport=n, headlabel="      676"]
BB675 -> BB686 [tailport=s, headport=n, color=gray]
BB676 [shape=record label="{2022: read-variable['defineGetSize',v29,-]}" ] 
BB676 -> BB677 [tailport=s, headport=n, headlabel="      677"]
BB676 -> BB686 [tailport=s, headport=n, color=gray]
BB677 [shape=record label="{2023: call-define [v23,v24,v25,v26,v29,-]*}" ] 
BB677 -> BB685 [tailport=s, headport=n, headlabel="      685"]
BB677 -> BB686 [tailport=s, headport=n, color=gray]
BB678 [shape=record label="{2024: read-variable['module',v27,-]|2025: read-variable['defineGetSize',v29,v28]|2026: read-variable['require',v32,v31]|2027: constant[\"desandro-get-style-property\",v33]}" ] 
BB678 -> BB680 [tailport=s, headport=n, headlabel="      680"]
BB678 -> BB686 [tailport=s, headport=n, color=gray]
BB679 [shape=record label="{2028: read-variable['window',v27,-]|2029: read-variable['defineGetSize',v29,v28]|2030: read-variable['window',v31,-]|2031: read-property[v31,'getStyleProperty',v30]|2032: \<variable-non-null-undef\>['window']}" ] 
BB679 -> BB683 [tailport=s, headport=n, headlabel="      683"]
BB679 -> BB686 [tailport=s, headport=n, color=gray]
BB680 [shape=record label="{2033: call-require [v31,v32,v33,v30]}" ] 
BB680 -> BB681 [tailport=s, headport=n, headlabel="      681"]
BB680 -> BB686 [tailport=s, headport=n, color=gray]
BB681 [shape=record label="{2034: call-defineGetSize [v28,v29,v30,v26]}" ] 
BB681 -> BB682 [tailport=s, headport=n, headlabel="      682"]
BB681 -> BB686 [tailport=s, headport=n, color=gray]
BB682 [shape=record label="{2035: write-property[v27,'exports',v26]|2036: \<variable-non-null-undef\>['module']*}" ] 
BB682 -> BB685 [tailport=s, headport=n]
BB682 -> BB686 [tailport=s, headport=n, color=gray]
BB683 [shape=record label="{2037: call-defineGetSize [v28,v29,v30,v26]}" ] 
BB683 -> BB684 [tailport=s, headport=n, headlabel="      684"]
BB683 -> BB686 [tailport=s, headport=n, color=gray]
BB684 [shape=record label="{2038: write-property[v27,'getSize',v26]|2039: \<variable-non-null-undef\>['window']*}" ] 
BB684 -> BB685 [tailport=s, headport=n]
BB684 -> BB686 [tailport=s, headport=n, color=gray]
BB685 [shape=record label="{2040: return[v1]}" ] 
BB686 [shape=record label="{2041: exceptional-return}" ] 
//#$~ 1009
}
