digraph {
rankdir="TD"
BB_entry206[shape=none,label=""];
BB_entry206 -> BB2845 [tailport=s, headport=n, headlabel="    2845"]
BB2845 [shape=record label="{9964: constant[undefined,v1]|9965: vardecl['a']|9966: vardecl['b']|9967: vardecl['c']}" ] 
BB2845 -> BB2846 [tailport=s, headport=n, headlabel="      2846"]
BB2846 [shape=record label="{9968: read-variable['one',v4,-]|9969: read-property[v4,'apply',-]|9970: \<variable-non-null-undef\>['one']|9971: read-variable['this',v5,-]|9972: read-variable['arguments',v6,-]}" ] 
BB2846 -> BB2847 [tailport=s, headport=n, headlabel="      2847"]
BB2846 -> BB2860 [tailport=s, headport=n, color=gray, headlabel="      2860"]
BB2847 [shape=record label="{9973: call-one.apply [v4,'apply',v5,v6,v2]}" ] 
BB2847 -> BB2848 [tailport=s, headport=n, headlabel="      2848"]
BB2847 -> BB2860 [tailport=s, headport=n, color=gray]
BB2848 [shape=record label="{9974: write-variable[v2,'a']*|9975: read-variable['two',v9,-]|9976: read-property[v9,'apply',-]|9977: \<variable-non-null-undef\>['two']|9978: read-variable['this',v10,-]|9979: read-variable['arguments',v11,-]}" ] 
BB2848 -> BB2849 [tailport=s, headport=n, headlabel="      2849"]
BB2848 -> BB2860 [tailport=s, headport=n, color=gray]
BB2849 [shape=record label="{9980: call-two.apply [v9,'apply',v10,v11,v7]}" ] 
BB2849 -> BB2850 [tailport=s, headport=n, headlabel="      2850"]
BB2849 -> BB2860 [tailport=s, headport=n, color=gray]
BB2850 [shape=record label="{9981: write-variable[v7,'b']*|9982: read-variable['a',v13,-]|9983: constant[null,v14]|9984: ==[v13,v14,v12]|9985: if[v12](true-block:2851,false-block:2852)}" ] 
BB2850 -> BB2851 [tailport=s, headport=n, headlabel="      2851"]
BB2850 -> BB2852 [tailport=s, headport=n, headlabel="      2852"]
BB2850 -> BB2860 [tailport=s, headport=n, color=gray]
BB2851 [shape=record label="{9986: read-variable['b',v1,-]}" ] 
BB2851 -> BB2859 [tailport=s, headport=n, headlabel="      2859"]
BB2851 -> BB2860 [tailport=s, headport=n, color=gray]
BB2852 [shape=record label="{9987: read-variable['b',v16,-]|9988: constant[null,v17]|9989: ==[v16,v17,v15]|9990: if[v15](true-block:2853,false-block:2854)}" ] 
BB2852 -> BB2853 [tailport=s, headport=n, headlabel="      2853"]
BB2852 -> BB2854 [tailport=s, headport=n, headlabel="      2854"]
BB2852 -> BB2860 [tailport=s, headport=n, color=gray]
BB2853 [shape=record label="{9991: read-variable['a',v1,-]}" ] 
BB2853 -> BB2859 [tailport=s, headport=n]
BB2853 -> BB2860 [tailport=s, headport=n, color=gray]
BB2854 [shape=record label="{9992: new[v15]|9993: write-variable[v15,'c']*|9994: read-variable['mergeIntoWithNoDuplicateKeys',v17,v16]|9995: read-variable['c',v18,-]|9996: read-variable['a',v19,-]}" ] 
BB2854 -> BB2855 [tailport=s, headport=n, headlabel="      2855"]
BB2854 -> BB2860 [tailport=s, headport=n, color=gray]
BB2855 [shape=record label="{9997: call-mergeIntoWithNoDuplicateKeys [v16,v17,v18,v19,-]*}" ] 
BB2855 -> BB2856 [tailport=s, headport=n, headlabel="      2856"]
BB2855 -> BB2860 [tailport=s, headport=n, color=gray]
BB2856 [shape=record label="{9998: read-variable['mergeIntoWithNoDuplicateKeys',v21,v20]|9999: read-variable['c',v22,-]|10000: read-variable['b',v23,-]}" ] 
BB2856 -> BB2857 [tailport=s, headport=n, headlabel="      2857"]
BB2856 -> BB2860 [tailport=s, headport=n, color=gray]
BB2857 [shape=record label="{10001: call-mergeIntoWithNoDuplicateKeys [v20,v21,v22,v23,-]*}" ] 
BB2857 -> BB2858 [tailport=s, headport=n, headlabel="      2858"]
BB2857 -> BB2860 [tailport=s, headport=n, color=gray]
BB2858 [shape=record label="{10002: read-variable['c',v1,-]}" ] 
BB2858 -> BB2859 [tailport=s, headport=n]
BB2858 -> BB2860 [tailport=s, headport=n, color=gray]
BB2859 [shape=record label="{10003: return[v1]}" ] 
BB2860 [shape=record label="{10004: exceptional-return}" ] 
//#$~ 5608
}
