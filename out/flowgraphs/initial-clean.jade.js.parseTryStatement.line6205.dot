digraph {
rankdir="TD"
BB_entry358[shape=none,label=""];
BB_entry358 -> BB6278 [tailport=s, headport=n, headlabel="    6278"]
BB6278 [shape=record label="{18974: constant[undefined,v1]|18975: vardecl['clause']}" ] 
BB6278 -> BB6279 [tailport=s, headport=n, headlabel="      6279"]
BB6279 [shape=record label="{18976: read-variable['next',v3,v2]}" ] 
BB6279 -> BB6280 [tailport=s, headport=n, headlabel="      6280"]
BB6279 -> BB6319 [tailport=s, headport=n, color=gray, headlabel="      6319"]
BB6280 [shape=record label="{18977: call-next [v2,v3,-]*}" ] 
BB6280 -> BB6281 [tailport=s, headport=n, headlabel="      6281"]
BB6280 -> BB6319 [tailport=s, headport=n, color=gray]
BB6281 [shape=record label="{18978: read-variable['node',v5,-]|18979: read-variable['parseBlock',v7,v6]}" ] 
BB6281 -> BB6282 [tailport=s, headport=n, headlabel="      6282"]
BB6281 -> BB6319 [tailport=s, headport=n, color=gray]
BB6282 [shape=record label="{18980: call-parseBlock [v6,v7,v4]}" ] 
BB6282 -> BB6283 [tailport=s, headport=n, headlabel="      6283"]
BB6282 -> BB6319 [tailport=s, headport=n, color=gray]
BB6283 [shape=record label="{18981: write-property[v5,'block',v4]|18982: \<variable-non-null-undef\>['node']*|18983: read-variable['node',v9,-]|18984: constant[null,v8]|18985: write-property[v9,'handler',v8]|18986: \<variable-non-null-undef\>['node']*|18987: read-variable['tokType',v11,-]|18988: read-variable['_catch',v12,-]|18989: ===[v11,v12,v10]|18990: if[v10](true-block:6284,false-block:6305)}" ] 
BB6283 -> BB6284 [tailport=s, headport=n, headlabel="      6284"]
BB6283 -> BB6305 [tailport=s, headport=n, headlabel="      6305"]
BB6283 -> BB6319 [tailport=s, headport=n, color=gray]
BB6284 [shape=record label="{18991: read-variable['startNode',v15,v14]}" ] 
BB6284 -> BB6285 [tailport=s, headport=n, headlabel="      6285"]
BB6284 -> BB6319 [tailport=s, headport=n, color=gray]
BB6285 [shape=record label="{18992: call-startNode [v14,v15,v13]}" ] 
BB6285 -> BB6286 [tailport=s, headport=n, headlabel="      6286"]
BB6285 -> BB6319 [tailport=s, headport=n, color=gray]
BB6286 [shape=record label="{18993: write-variable[v13,'clause']*|18994: read-variable['next',v17,v16]}" ] 
BB6286 -> BB6287 [tailport=s, headport=n, headlabel="      6287"]
BB6286 -> BB6319 [tailport=s, headport=n, color=gray]
BB6287 [shape=record label="{18995: call-next [v16,v17,-]*}" ] 
BB6287 -> BB6288 [tailport=s, headport=n, headlabel="      6288"]
BB6287 -> BB6319 [tailport=s, headport=n, color=gray]
BB6288 [shape=record label="{18996: read-variable['expect',v19,v18]|18997: read-variable['_parenL',v20,-]}" ] 
BB6288 -> BB6289 [tailport=s, headport=n, headlabel="      6289"]
BB6288 -> BB6319 [tailport=s, headport=n, color=gray]
BB6289 [shape=record label="{18998: call-expect [v18,v19,v20,-]*}" ] 
BB6289 -> BB6290 [tailport=s, headport=n, headlabel="      6290"]
BB6289 -> BB6319 [tailport=s, headport=n, color=gray]
BB6290 [shape=record label="{18999: read-variable['clause',v22,-]|19000: read-variable['parseIdent',v24,v23]}" ] 
BB6290 -> BB6291 [tailport=s, headport=n, headlabel="      6291"]
BB6290 -> BB6319 [tailport=s, headport=n, color=gray]
BB6291 [shape=record label="{19001: call-parseIdent [v23,v24,v21]}" ] 
BB6291 -> BB6292 [tailport=s, headport=n, headlabel="      6292"]
BB6291 -> BB6319 [tailport=s, headport=n, color=gray]
BB6292 [shape=record label="{19002: write-property[v22,'param',v21]|19003: \<variable-non-null-undef\>['clause']*|19004: read-variable['strict',v25,-]|19005: if[v25](true-block:6293,false-block:6295)}" ] 
BB6292 -> BB6295 [tailport=s, headport=n, headlabel="      6295"]
BB6292 -> BB6293 [tailport=s, headport=n, headlabel="      6293"]
BB6292 -> BB6319 [tailport=s, headport=n, color=gray]
BB6293 [shape=record label="{19006: read-variable['isStrictBadIdWord',v27,v26]|19007: read-variable['clause',v30,-]|19008: read-property[v30,'param',v29]|19009: \<variable-non-null-undef\>['clause']|19010: read-property[v29,'name',v28]|19011: \<property-non-null-undef\>[v30,'param']}" ] 
BB6293 -> BB6294 [tailport=s, headport=n, headlabel="      6294"]
BB6293 -> BB6319 [tailport=s, headport=n, color=gray]
BB6294 [shape=record label="{19012: call-isStrictBadIdWord [v26,v27,v28,v25]}" ] 
BB6294 -> BB6295 [tailport=s, headport=n]
BB6294 -> BB6319 [tailport=s, headport=n, color=gray]
BB6295 [shape=record label="{19013: if[v25](true-block:6296,false-block:6298)}" ] 
BB6295 -> BB6296 [tailport=s, headport=n, headlabel="      6296"]
BB6295 -> BB6298 [tailport=s, headport=n, headlabel="      6298"]
BB6296 [shape=record label="{19014: read-variable['raise',v27,v26]|19015: read-variable['clause',v30,-]|19016: read-property[v30,'param',v29]|19017: \<variable-non-null-undef\>['clause']|19018: read-property[v29,'start',v28]|19019: \<property-non-null-undef\>[v30,'param']|19020: constant[\"Binding \",v34]|19021: read-variable['clause',v37,-]|19022: read-property[v37,'param',v36]|19023: \<variable-non-null-undef\>['clause']|19024: read-property[v36,'name',v35]|19025: \<property-non-null-undef\>[v37,'param']|19026: +[v34,v35,v32]|19027: constant[\" in strict mode\",v33]|19028: +[v32,v33,v31]}" ] 
BB6296 -> BB6297 [tailport=s, headport=n, headlabel="      6297"]
BB6296 -> BB6319 [tailport=s, headport=n, color=gray]
BB6297 [shape=record label="{19029: call-raise [v26,v27,v28,v31,-]*}" ] 
BB6297 -> BB6298 [tailport=s, headport=n]
BB6297 -> BB6319 [tailport=s, headport=n, color=gray]
BB6298 [shape=record label="{19030: read-variable['expect',v27,v26]|19031: read-variable['_parenR',v28,-]}" ] 
BB6298 -> BB6299 [tailport=s, headport=n, headlabel="      6299"]
BB6298 -> BB6319 [tailport=s, headport=n, color=gray]
BB6299 [shape=record label="{19032: call-expect [v26,v27,v28,-]*}" ] 
BB6299 -> BB6300 [tailport=s, headport=n, headlabel="      6300"]
BB6299 -> BB6319 [tailport=s, headport=n, color=gray]
BB6300 [shape=record label="{19033: read-variable['clause',v30,-]|19034: constant[null,v29]|19035: write-property[v30,'guard',v29]|19036: \<variable-non-null-undef\>['clause']*|19037: read-variable['clause',v32,-]|19038: read-variable['parseBlock',v34,v33]}" ] 
BB6300 -> BB6301 [tailport=s, headport=n, headlabel="      6301"]
BB6300 -> BB6319 [tailport=s, headport=n, color=gray]
BB6301 [shape=record label="{19039: call-parseBlock [v33,v34,v31]}" ] 
BB6301 -> BB6302 [tailport=s, headport=n, headlabel="      6302"]
BB6301 -> BB6319 [tailport=s, headport=n, color=gray]
BB6302 [shape=record label="{19040: write-property[v32,'body',v31]|19041: \<variable-non-null-undef\>['clause']*|19042: read-variable['node',v36,-]|19043: read-variable['finishNode',v38,v37]|19044: read-variable['clause',v39,-]|19045: constant[\"CatchClause\",v40]}" ] 
BB6302 -> BB6303 [tailport=s, headport=n, headlabel="      6303"]
BB6302 -> BB6319 [tailport=s, headport=n, color=gray]
BB6303 [shape=record label="{19046: call-finishNode [v37,v38,v39,v40,v35]}" ] 
BB6303 -> BB6304 [tailport=s, headport=n, headlabel="      6304"]
BB6303 -> BB6319 [tailport=s, headport=n, color=gray]
BB6304 [shape=record label="{19047: write-property[v36,'handler',v35]|19048: \<variable-non-null-undef\>['node']*}" ] 
BB6304 -> BB6305 [tailport=s, headport=n]
BB6304 -> BB6319 [tailport=s, headport=n, color=gray]
BB6305 [shape=record label="{19049: read-variable['node',v14,-]|19050: read-variable['empty',v13,-]|19051: write-property[v14,'guardedHandlers',v13]|19052: \<variable-non-null-undef\>['node']*|19053: read-variable['node',v16,-]|19054: read-variable['eat',v19,v18]|19055: read-variable['_finally',v20,-]}" ] 
BB6305 -> BB6306 [tailport=s, headport=n, headlabel="      6306"]
BB6305 -> BB6319 [tailport=s, headport=n, color=gray]
BB6306 [shape=record label="{19056: call-eat [v18,v19,v20,v17]}" ] 
BB6306 -> BB6307 [tailport=s, headport=n, headlabel="      6307"]
BB6306 -> BB6319 [tailport=s, headport=n, color=gray]
BB6307 [shape=record label="{19057: if[v17](true-block:6308,false-block:6309)}" ] 
BB6307 -> BB6308 [tailport=s, headport=n, headlabel="      6308"]
BB6307 -> BB6309 [tailport=s, headport=n, headlabel="      6309"]
BB6308 [shape=record label="{19058: read-variable['parseBlock',v22,v21]}" ] 
BB6308 -> BB6310 [tailport=s, headport=n, headlabel="      6310"]
BB6308 -> BB6319 [tailport=s, headport=n, color=gray]
BB6309 [shape=record label="{19059: constant[null,v15]}" ] 
BB6309 -> BB6311 [tailport=s, headport=n, headlabel="      6311"]
BB6310 [shape=record label="{19060: call-parseBlock [v21,v22,v15]}" ] 
BB6310 -> BB6311 [tailport=s, headport=n]
BB6310 -> BB6319 [tailport=s, headport=n, color=gray]
BB6311 [shape=record label="{19061: write-property[v16,'finalizer',v15]|19062: \<variable-non-null-undef\>['node']*|19063: read-variable['node',v23,-]|19064: read-property[v23,'handler',v22]|19065: \<variable-non-null-undef\>['node']|19066: ![v22,v21]|19067: if[v21](true-block:6312,false-block:6313)}" ] 
BB6311 -> BB6313 [tailport=s, headport=n, headlabel="      6313"]
BB6311 -> BB6312 [tailport=s, headport=n, headlabel="      6312"]
BB6311 -> BB6319 [tailport=s, headport=n, color=gray]
BB6312 [shape=record label="{19068: read-variable['node',v25,-]|19069: read-property[v25,'finalizer',v24]|19070: \<variable-non-null-undef\>['node']|19071: ![v24,v21]}" ] 
BB6312 -> BB6313 [tailport=s, headport=n]
BB6312 -> BB6319 [tailport=s, headport=n, color=gray]
BB6313 [shape=record label="{19072: if[v21](true-block:6314,false-block:6316)}" ] 
BB6313 -> BB6314 [tailport=s, headport=n, headlabel="      6314"]
BB6313 -> BB6316 [tailport=s, headport=n, headlabel="      6316"]
BB6314 [shape=record label="{19073: read-variable['raise',v25,v24]|19074: read-variable['node',v27,-]|19075: read-property[v27,'start',v26]|19076: \<variable-non-null-undef\>['node']|19077: constant[\"Missing catch or finally clause\",v28]}" ] 
BB6314 -> BB6315 [tailport=s, headport=n, headlabel="      6315"]
BB6314 -> BB6319 [tailport=s, headport=n, color=gray]
BB6315 [shape=record label="{19078: call-raise [v24,v25,v26,v28,-]*}" ] 
BB6315 -> BB6316 [tailport=s, headport=n]
BB6315 -> BB6319 [tailport=s, headport=n, color=gray]
BB6316 [shape=record label="{19079: read-variable['finishNode',v25,v24]|19080: read-variable['node',v26,-]|19081: constant[\"TryStatement\",v27]}" ] 
BB6316 -> BB6317 [tailport=s, headport=n, headlabel="      6317"]
BB6316 -> BB6319 [tailport=s, headport=n, color=gray]
BB6317 [shape=record label="{19082: call-finishNode [v24,v25,v26,v27,v1]}" ] 
BB6317 -> BB6318 [tailport=s, headport=n, headlabel="      6318"]
BB6317 -> BB6319 [tailport=s, headport=n, color=gray]
BB6318 [shape=record label="{19083: return[v1]}" ] 
BB6319 [shape=record label="{19084: exceptional-return}" ] 
//#$~ 6225
}
