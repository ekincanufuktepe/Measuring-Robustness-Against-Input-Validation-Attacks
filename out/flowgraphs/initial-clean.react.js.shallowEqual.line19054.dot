digraph {
rankdir="TD"
BB_entry804[shape=none,label=""];
BB_entry804 -> BB10565 [tailport=s, headport=n, headlabel="    10565"]
BB10565 [shape=record label="{34684: constant[undefined,v1]|34685: vardecl['key']}" ] 
BB10565 -> BB10566 [tailport=s, headport=n, headlabel="      10566"]
BB10566 [shape=record label="{34686: read-variable['objA',v3,-]|34687: read-variable['objB',v4,-]|34688: ===[v3,v4,v2]|34689: if[v2](true-block:10567,false-block:10568)}" ] 
BB10566 -> BB10567 [tailport=s, headport=n, headlabel="      10567"]
BB10566 -> BB10568 [tailport=s, headport=n, headlabel="      10568"]
BB10566 -> BB10595 [tailport=s, headport=n, color=gray, headlabel="      10595"]
BB10567 [shape=record label="{34690: constant[true,v1]}" ] 
BB10567 -> BB10594 [tailport=s, headport=n, headlabel="      10594"]
BB10568 [shape=record label="{34691: read-variable['objA',v6,-]}" ] 
BB10568 -> BB10569 [tailport=s, headport=n, headlabel="      10569"]
BB10568 -> BB10595 [tailport=s, headport=n, color=gray]
BB10569 [shape=record label="{34692: begin-for-in[v6,v7]}" ] 
BB10569 -> BB10570 [tailport=s, headport=n, headlabel="      10570"]
BB10569 -> BB10595 [tailport=s, headport=n, color=gray]
BB10570 [shape=record label="{34693: has-next[v7,v8]|34694: if[v8](true-block:10571,false-block:10581)}" ] 
BB10570 -> BB10571 [tailport=s, headport=n, headlabel="      10571"]
BB10570 -> BB10581 [tailport=s, headport=n, headlabel="      10581"]
BB10571 [shape=record label="{34695: next-property[v7,v9]|34696: write-variable[v9,'key']|34697: read-variable['objA',v12,-]|34698: read-property[v12,'hasOwnProperty',-]|34699: \<variable-non-null-undef\>['objA']|34700: read-variable['key',v13,-]}" ] 
BB10571 -> BB10572 [tailport=s, headport=n, headlabel="      10572"]
BB10571 -> BB10595 [tailport=s, headport=n, color=gray]
BB10572 [shape=record label="{34701: call-objA.hasOwnProperty [v12,'hasOwnProperty',v13,v10]}" ] 
BB10572 -> BB10573 [tailport=s, headport=n, headlabel="      10573"]
BB10572 -> BB10595 [tailport=s, headport=n, color=gray]
BB10573 [shape=record label="{34702: if[v10](true-block:10574,false-block:10578)}" ] 
BB10573 -> BB10578 [tailport=s, headport=n, headlabel="      10578"]
BB10573 -> BB10574 [tailport=s, headport=n, headlabel="      10574"]
BB10574 [shape=record label="{34703: read-variable['objB',v16,-]|34704: read-property[v16,'hasOwnProperty',-]|34705: \<variable-non-null-undef\>['objB']|34706: read-variable['key',v17,-]}" ] 
BB10574 -> BB10575 [tailport=s, headport=n, headlabel="      10575"]
BB10574 -> BB10595 [tailport=s, headport=n, color=gray]
BB10575 [shape=record label="{34707: call-objB.hasOwnProperty [v16,'hasOwnProperty',v17,v14]}" ] 
BB10575 -> BB10576 [tailport=s, headport=n, headlabel="      10576"]
BB10575 -> BB10595 [tailport=s, headport=n, color=gray]
BB10576 [shape=record label="{34708: ![v14,v10]|34709: if[v10](true-block:10578,false-block:10577)}" ] 
BB10576 -> BB10578 [tailport=s, headport=n]
BB10576 -> BB10577 [tailport=s, headport=n, headlabel="      10577"]
BB10576 -> BB10595 [tailport=s, headport=n, color=gray]
BB10577 [shape=record label="{34710: read-variable['objA',v16,-]|34711: read-variable['key',v17,-]|34712: read-property[v16,v17,v14]|34713: \<variable-non-null-undef\>['objA']|34714: read-variable['objB',v18,-]|34715: read-variable['key',v19,-]|34716: read-property[v18,v19,v15]|34717: \<variable-non-null-undef\>['objB']|34718: !==[v14,v15,v10]}" ] 
BB10577 -> BB10578 [tailport=s, headport=n]
BB10577 -> BB10595 [tailport=s, headport=n, color=gray]
BB10578 [shape=record label="{34719: if[v10](true-block:10579,false-block:10580)}" ] 
BB10578 -> BB10579 [tailport=s, headport=n, headlabel="      10579"]
BB10578 -> BB10580 [tailport=s, headport=n, headlabel="      10580"]
BB10579 [shape=record label="{34720: constant[false,v1]}" ] 
BB10579 -> BB10594 [tailport=s, headport=n]
BB10580 [shape=record label="{34721: end-for-in(begin-node:34692)}" ] 
BB10580 -> BB10570 [tailport=s, headport=n]
BB10581 [shape=record label="{34722: read-variable['objB',v11,-]}" ] 
BB10581 -> BB10582 [tailport=s, headport=n, headlabel="      10582"]
BB10581 -> BB10595 [tailport=s, headport=n, color=gray]
BB10582 [shape=record label="{34723: begin-for-in[v11,v12]}" ] 
BB10582 -> BB10583 [tailport=s, headport=n, headlabel="      10583"]
BB10582 -> BB10595 [tailport=s, headport=n, color=gray]
BB10583 [shape=record label="{34724: has-next[v12,v13]|34725: if[v13](true-block:10584,false-block:10593)}" ] 
BB10583 -> BB10584 [tailport=s, headport=n, headlabel="      10584"]
BB10583 -> BB10593 [tailport=s, headport=n, headlabel="      10593"]
BB10584 [shape=record label="{34726: next-property[v12,v14]|34727: write-variable[v14,'key']|34728: read-variable['objB',v17,-]|34729: read-property[v17,'hasOwnProperty',-]|34730: \<variable-non-null-undef\>['objB']|34731: read-variable['key',v18,-]}" ] 
BB10584 -> BB10585 [tailport=s, headport=n, headlabel="      10585"]
BB10584 -> BB10595 [tailport=s, headport=n, color=gray]
BB10585 [shape=record label="{34732: call-objB.hasOwnProperty [v17,'hasOwnProperty',v18,v15]}" ] 
BB10585 -> BB10586 [tailport=s, headport=n, headlabel="      10586"]
BB10585 -> BB10595 [tailport=s, headport=n, color=gray]
BB10586 [shape=record label="{34733: if[v15](true-block:10587,false-block:10590)}" ] 
BB10586 -> BB10590 [tailport=s, headport=n, headlabel="      10590"]
BB10586 -> BB10587 [tailport=s, headport=n, headlabel="      10587"]
BB10587 [shape=record label="{34734: read-variable['objA',v21,-]|34735: read-property[v21,'hasOwnProperty',-]|34736: \<variable-non-null-undef\>['objA']|34737: read-variable['key',v22,-]}" ] 
BB10587 -> BB10588 [tailport=s, headport=n, headlabel="      10588"]
BB10587 -> BB10595 [tailport=s, headport=n, color=gray]
BB10588 [shape=record label="{34738: call-objA.hasOwnProperty [v21,'hasOwnProperty',v22,v19]}" ] 
BB10588 -> BB10589 [tailport=s, headport=n, headlabel="      10589"]
BB10588 -> BB10595 [tailport=s, headport=n, color=gray]
BB10589 [shape=record label="{34739: ![v19,v15]}" ] 
BB10589 -> BB10590 [tailport=s, headport=n]
BB10589 -> BB10595 [tailport=s, headport=n, color=gray]
BB10590 [shape=record label="{34740: if[v15](true-block:10591,false-block:10592)}" ] 
BB10590 -> BB10591 [tailport=s, headport=n, headlabel="      10591"]
BB10590 -> BB10592 [tailport=s, headport=n, headlabel="      10592"]
BB10591 [shape=record label="{34741: constant[false,v1]}" ] 
BB10591 -> BB10594 [tailport=s, headport=n]
BB10592 [shape=record label="{34742: end-for-in(begin-node:34723)}" ] 
BB10592 -> BB10583 [tailport=s, headport=n]
BB10593 [shape=record label="{34743: constant[true,v1]}" ] 
BB10593 -> BB10594 [tailport=s, headport=n]
BB10594 [shape=record label="{34744: return[v1]}" ] 
BB10595 [shape=record label="{34745: exceptional-return}" ] 
//#$~ 19072
}
