digraph {
rankdir="TD"
BB_entry90[shape=none,label=""];
BB_entry90 -> BB1230 [tailport=s, headport=n, headlabel="    1230"]
BB1230 [shape=record label="{3244: constant[undefined,v1]|3245: vardecl['elem']|3246: vardecl['duplicates']|3247: vardecl['j']|3248: vardecl['i']}" ] 
BB1230 -> BB1231 [tailport=s, headport=n, headlabel="      1231"]
BB1231 [shape=record label="{3249: read-variable['Array',v3,-]}" ] 
BB1231 -> BB1232 [tailport=s, headport=n, headlabel="      1232"]
BB1231 -> BB1249 [tailport=s, headport=n, color=gray, headlabel="      1249"]
BB1232 [shape=record label="{3250: construct[-,v3,v2]}" ] 
BB1232 -> BB1233 [tailport=s, headport=n, headlabel="      1233"]
BB1232 -> BB1249 [tailport=s, headport=n, color=gray]
BB1233 [shape=record label="{3251: write-variable[v2,'duplicates']*|3252: constant[0.0,v4]|3253: write-variable[v4,'j']*|3254: constant[0.0,v5]|3255: write-variable[v5,'i']*|3256: read-variable['support',v8,-]|3257: read-property[v8,'detectDuplicates',v7]|3258: \<variable-non-null-undef\>['support']|3259: ![v7,v6]|3260: write-variable[v6,'hasDuplicate']*|3261: read-variable['support',v11,-]|3262: read-property[v11,'sortStable',v10]|3263: \<variable-non-null-undef\>['support']|3264: ![v10,v9]|3265: if[v9](true-block:1234,false-block:1236)}" ] 
BB1233 -> BB1236 [tailport=s, headport=n, headlabel="      1236"]
BB1233 -> BB1234 [tailport=s, headport=n, headlabel="      1234"]
BB1233 -> BB1249 [tailport=s, headport=n, color=gray]
BB1234 [shape=record label="{3266: read-variable['results',v13,-]|3267: read-property[v13,'slice',-]|3268: \<variable-non-null-undef\>['results']|3269: constant[0.0,v14]}" ] 
BB1234 -> BB1235 [tailport=s, headport=n, headlabel="      1235"]
BB1234 -> BB1249 [tailport=s, headport=n, color=gray]
BB1235 [shape=record label="{3270: call-0:0[v13,'slice',v14,v9]}" ] 
BB1235 -> BB1236 [tailport=s, headport=n]
BB1235 -> BB1249 [tailport=s, headport=n, color=gray]
BB1236 [shape=record label="{3271: write-variable[v9,'sortInput']*|3272: read-variable['results',v13,-]|3273: read-property[v13,'sort',-]|3274: \<variable-non-null-undef\>['results']|3275: read-variable['sortOrder',v14,-]}" ] 
BB1236 -> BB1237 [tailport=s, headport=n, headlabel="      1237"]
BB1236 -> BB1249 [tailport=s, headport=n, color=gray]
BB1237 [shape=record label="{3276: call-0:0[v13,'sort',v14,-]*}" ] 
BB1237 -> BB1238 [tailport=s, headport=n, headlabel="      1238"]
BB1237 -> BB1249 [tailport=s, headport=n, color=gray]
BB1238 [shape=record label="{3277: read-variable['hasDuplicate',v15,-]|3278: if[v15](true-block:1239,false-block:1247)}" ] 
BB1238 -> BB1239 [tailport=s, headport=n, headlabel="      1239"]
BB1238 -> BB1247 [tailport=s, headport=n, headlabel="      1247"]
BB1238 -> BB1249 [tailport=s, headport=n, color=gray]
BB1239 [shape=record label="{3279: read-variable['results',v17,-]|3280: constant[1.0,v19]|3281: read-variable['i',v20,-]|3282: +[v20,v18]|3283: +[v18,v19,v21]|3284: write-variable[v21,'i']|3285: read-property[v17,v18,v16]|3286: \<variable-non-null-undef\>['results']|3287: write-variable[v16,'elem']|3288: if[v16](true-block:1240,false-block:1244)}" ] 
BB1239 -> BB1240 [tailport=s, headport=n, headlabel="      1240"]
BB1239 -> BB1244 [tailport=s, headport=n, headlabel="      1244"]
BB1239 -> BB1249 [tailport=s, headport=n, color=gray]
BB1240 [shape=record label="{3289: read-variable['elem',v23,-]|3290: read-variable['results',v25,-]|3291: read-variable['i',v26,-]|3292: read-property[v25,v26,v24]|3293: \<variable-non-null-undef\>['results']|3294: ===[v23,v24,v22]|3295: if[v22](true-block:1241,false-block:1239)}" ] 
BB1240 -> BB1241 [tailport=s, headport=n, headlabel="      1241"]
BB1240 -> BB1239 [tailport=s, headport=n]
BB1240 -> BB1249 [tailport=s, headport=n, color=gray]
BB1241 [shape=record label="{3296: read-variable['duplicates',v29,-]|3297: read-property[v29,'push',-]|3298: \<variable-non-null-undef\>['duplicates']|3299: read-variable['i',v30,-]}" ] 
BB1241 -> BB1242 [tailport=s, headport=n, headlabel="      1242"]
BB1241 -> BB1249 [tailport=s, headport=n, color=gray]
BB1242 [shape=record label="{3300: call-0:0[v29,'push',v30,v27]}" ] 
BB1242 -> BB1243 [tailport=s, headport=n, headlabel="      1243"]
BB1242 -> BB1249 [tailport=s, headport=n, color=gray]
BB1243 [shape=record label="{3301: write-variable[v27,'j']*}" ] 
BB1243 -> BB1239 [tailport=s, headport=n]
BB1244 [shape=record label="{3302: constant[1.0,v23]|3303: read-variable['j',v24,-]|3304: +[v24,v22]|3305: -[v22,v23,v25]|3306: write-variable[v25,'j']|3307: if[v22](true-block:1245,false-block:1247)}" ] 
BB1244 -> BB1245 [tailport=s, headport=n, headlabel="      1245"]
BB1244 -> BB1247 [tailport=s, headport=n]
BB1244 -> BB1249 [tailport=s, headport=n, color=gray]
BB1245 [shape=record label="{3308: read-variable['results',v27,-]|3309: read-property[v27,'splice',-]|3310: \<variable-non-null-undef\>['results']|3311: read-variable['duplicates',v29,-]|3312: read-variable['j',v30,-]|3313: read-property[v29,v30,v28]|3314: \<variable-non-null-undef\>['duplicates']|3315: constant[1.0,v31]}" ] 
BB1245 -> BB1246 [tailport=s, headport=n, headlabel="      1246"]
BB1245 -> BB1249 [tailport=s, headport=n, color=gray]
BB1246 [shape=record label="{3316: call-0:0[v27,'splice',v28,v31,-]*}" ] 
BB1246 -> BB1244 [tailport=s, headport=n]
BB1246 -> BB1249 [tailport=s, headport=n, color=gray]
BB1247 [shape=record label="{3317: constant[null,v16]|3318: write-variable[v16,'sortInput']*|3319: read-variable['results',v1,-]}" ] 
BB1247 -> BB1248 [tailport=s, headport=n, headlabel="      1248"]
BB1247 -> BB1249 [tailport=s, headport=n, color=gray]
BB1248 [shape=record label="{3320: return[v1]}" ] 
BB1249 [shape=record label="{3321: exceptional-return}" ] 
}
