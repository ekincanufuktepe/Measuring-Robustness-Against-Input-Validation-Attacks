digraph {
rankdir="TD"
BB_entry101[shape=none,label=""];
BB_entry101 -> BB1651 [tailport=s, headport=n, headlabel="    1651"]
BB1651 [shape=record label="{5362: constant[undefined,v1]|5363: vardecl['key']}" ] 
BB1651 -> BB1652 [tailport=s, headport=n, headlabel="      1652"]
BB1652 [shape=record label="{5364: read-variable['obj',v3,-]}" ] 
BB1652 -> BB1653 [tailport=s, headport=n, headlabel="      1653"]
BB1652 -> BB1668 [tailport=s, headport=n, color=gray, headlabel="      1668"]
BB1653 [shape=record label="{5365: begin-for-in[v3,v4]}" ] 
BB1653 -> BB1654 [tailport=s, headport=n, headlabel="      1654"]
BB1653 -> BB1668 [tailport=s, headport=n, color=gray]
BB1654 [shape=record label="{5366: has-next[v4,v5]|5367: if[v5](true-block:1655,false-block:1666)}" ] 
BB1654 -> BB1655 [tailport=s, headport=n, headlabel="      1655"]
BB1654 -> BB1666 [tailport=s, headport=n, headlabel="      1666"]
BB1655 [shape=record label="{5368: next-property[v4,v6]|5369: write-variable[v6,'key']|5370: read-variable['proto',v7,-]|5371: if[v7](true-block:1658,false-block:1656)}" ] 
BB1655 -> BB1658 [tailport=s, headport=n, headlabel="      1658"]
BB1655 -> BB1656 [tailport=s, headport=n, headlabel="      1656"]
BB1655 -> BB1668 [tailport=s, headport=n, color=gray]
BB1656 [shape=record label="{5372: read-variable['owns',v9,v8]|5373: read-variable['obj',v10,-]|5374: read-variable['key',v11,-]}" ] 
BB1656 -> BB1657 [tailport=s, headport=n, headlabel="      1657"]
BB1656 -> BB1668 [tailport=s, headport=n, color=gray]
BB1657 [shape=record label="{5375: call-owns [v8,v9,v10,v11,v7]}" ] 
BB1657 -> BB1658 [tailport=s, headport=n]
BB1657 -> BB1668 [tailport=s, headport=n, color=gray]
BB1658 [shape=record label="{5376: if[v7](true-block:1659,false-block:1665)}" ] 
BB1658 -> BB1659 [tailport=s, headport=n, headlabel="      1659"]
BB1658 -> BB1665 [tailport=s, headport=n, headlabel="      1665"]
BB1659 [shape=record label="{5377: read-variable['fn',v10,-]|5378: read-property[v10,'call',-]|5379: \<variable-non-null-undef\>['fn']|5380: read-variable['thisObj',v11,-]|5381: if[v11](true-block:1661,false-block:1660)}" ] 
BB1659 -> BB1661 [tailport=s, headport=n, headlabel="      1661"]
BB1659 -> BB1660 [tailport=s, headport=n, headlabel="      1660"]
BB1659 -> BB1668 [tailport=s, headport=n, color=gray]
BB1660 [shape=record label="{5382: read-variable['Y',v11,-]}" ] 
BB1660 -> BB1661 [tailport=s, headport=n]
BB1660 -> BB1668 [tailport=s, headport=n, color=gray]
BB1661 [shape=record label="{5383: read-variable['obj',v13,-]|5384: read-variable['key',v14,-]|5385: read-property[v13,v14,v12]|5386: \<variable-non-null-undef\>['obj']|5387: read-variable['key',v15,-]|5388: read-variable['obj',v16,-]}" ] 
BB1661 -> BB1662 [tailport=s, headport=n, headlabel="      1662"]
BB1661 -> BB1668 [tailport=s, headport=n, color=gray]
BB1662 [shape=record label="{5389: call-fn.call [v10,'call',v11,v12,v15,v16,v8]}" ] 
BB1662 -> BB1663 [tailport=s, headport=n, headlabel="      1663"]
BB1662 -> BB1668 [tailport=s, headport=n, color=gray]
BB1663 [shape=record label="{5390: if[v8](true-block:1664,false-block:1665)}" ] 
BB1663 -> BB1664 [tailport=s, headport=n, headlabel="      1664"]
BB1663 -> BB1665 [tailport=s, headport=n]
BB1664 [shape=record label="{5391: constant[true,v1]}" ] 
BB1664 -> BB1667 [tailport=s, headport=n, headlabel="      1667"]
BB1665 [shape=record label="{5392: end-for-in(begin-node:5365)}" ] 
BB1665 -> BB1654 [tailport=s, headport=n]
BB1666 [shape=record label="{5393: constant[false,v1]}" ] 
BB1666 -> BB1667 [tailport=s, headport=n]
BB1667 [shape=record label="{5394: return[v1]}" ] 
BB1668 [shape=record label="{5395: exceptional-return}" ] 
//#$~ 2883
}
