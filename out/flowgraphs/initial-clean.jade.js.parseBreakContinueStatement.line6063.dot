digraph {
rankdir="TD"
BB_entry349[shape=none,label=""];
BB_entry349 -> BB6046 [tailport=s, headport=n, headlabel="    6046"]
BB6046 [shape=record label="{18473: constant[undefined,v1]|18474: vardecl['isBreak']|18475: vardecl['i']|18476: vardecl['lab']}" ] 
BB6046 -> BB6047 [tailport=s, headport=n, headlabel="      6047"]
BB6047 [shape=record label="{18477: read-variable['keyword',v3,-]|18478: constant[\"break\",v4]|18479: ==[v3,v4,v2]|18480: write-variable[v2,'isBreak']*|18481: read-variable['next',v6,v5]}" ] 
BB6047 -> BB6048 [tailport=s, headport=n, headlabel="      6048"]
BB6047 -> BB6084 [tailport=s, headport=n, color=gray, headlabel="      6084"]
BB6048 [shape=record label="{18482: call-next [v5,v6,-]*}" ] 
BB6048 -> BB6049 [tailport=s, headport=n, headlabel="      6049"]
BB6048 -> BB6084 [tailport=s, headport=n, color=gray]
BB6049 [shape=record label="{18483: read-variable['eat',v9,v8]|18484: read-variable['_semi',v10,-]}" ] 
BB6049 -> BB6050 [tailport=s, headport=n, headlabel="      6050"]
BB6049 -> BB6084 [tailport=s, headport=n, color=gray]
BB6050 [shape=record label="{18485: call-eat [v8,v9,v10,v7]}" ] 
BB6050 -> BB6051 [tailport=s, headport=n, headlabel="      6051"]
BB6050 -> BB6084 [tailport=s, headport=n, color=gray]
BB6051 [shape=record label="{18486: if[v7](true-block:6054,false-block:6052)}" ] 
BB6051 -> BB6054 [tailport=s, headport=n, headlabel="      6054"]
BB6051 -> BB6052 [tailport=s, headport=n, headlabel="      6052"]
BB6052 [shape=record label="{18487: read-variable['canInsertSemicolon',v9,v8]}" ] 
BB6052 -> BB6053 [tailport=s, headport=n, headlabel="      6053"]
BB6052 -> BB6084 [tailport=s, headport=n, color=gray]
BB6053 [shape=record label="{18488: call-canInsertSemicolon [v8,v9,v7]}" ] 
BB6053 -> BB6054 [tailport=s, headport=n]
BB6053 -> BB6084 [tailport=s, headport=n, color=gray]
BB6054 [shape=record label="{18489: if[v7](true-block:6055,false-block:6056)}" ] 
BB6054 -> BB6055 [tailport=s, headport=n, headlabel="      6055"]
BB6054 -> BB6056 [tailport=s, headport=n, headlabel="      6056"]
BB6055 [shape=record label="{18490: read-variable['node',v9,-]|18491: constant[null,v8]|18492: write-property[v9,'label',v8]|18493: \<variable-non-null-undef\>['node']*}" ] 
BB6055 -> BB6063 [tailport=s, headport=n, headlabel="      6063"]
BB6055 -> BB6084 [tailport=s, headport=n, color=gray]
BB6056 [shape=record label="{18494: read-variable['tokType',v9,-]|18495: read-variable['_name',v10,-]|18496: !==[v9,v10,v8]|18497: if[v8](true-block:6057,false-block:6058)}" ] 
BB6056 -> BB6057 [tailport=s, headport=n, headlabel="      6057"]
BB6056 -> BB6058 [tailport=s, headport=n, headlabel="      6058"]
BB6056 -> BB6084 [tailport=s, headport=n, color=gray]
BB6057 [shape=record label="{18498: read-variable['unexpected',v12,v11]}" ] 
BB6057 -> BB6059 [tailport=s, headport=n, headlabel="      6059"]
BB6057 -> BB6084 [tailport=s, headport=n, color=gray]
BB6058 [shape=record label="{18499: read-variable['node',v12,-]|18500: read-variable['parseIdent',v14,v13]}" ] 
BB6058 -> BB6060 [tailport=s, headport=n, headlabel="      6060"]
BB6058 -> BB6084 [tailport=s, headport=n, color=gray]
BB6059 [shape=record label="{18501: call-unexpected [v11,v12,-]*}" ] 
BB6059 -> BB6063 [tailport=s, headport=n]
BB6059 -> BB6084 [tailport=s, headport=n, color=gray]
BB6060 [shape=record label="{18502: call-parseIdent [v13,v14,v11]}" ] 
BB6060 -> BB6061 [tailport=s, headport=n, headlabel="      6061"]
BB6060 -> BB6084 [tailport=s, headport=n, color=gray]
BB6061 [shape=record label="{18503: write-property[v12,'label',v11]|18504: \<variable-non-null-undef\>['node']*|18505: read-variable['semicolon',v16,v15]}" ] 
BB6061 -> BB6062 [tailport=s, headport=n, headlabel="      6062"]
BB6061 -> BB6084 [tailport=s, headport=n, color=gray]
BB6062 [shape=record label="{18506: call-semicolon [v15,v16,-]*}" ] 
BB6062 -> BB6063 [tailport=s, headport=n]
BB6062 -> BB6084 [tailport=s, headport=n, color=gray]
BB6063 [shape=record label="{18507: constant[0.0,v9]|18508: write-variable[v9,'i']*}" ] 
BB6063 -> BB6064 [tailport=s, headport=n, headlabel="      6064"]
BB6064 [shape=record label="{18509: read-variable['i',v10,-]|18510: read-variable['labels',v12,-]|18511: read-property[v12,'length',v11]|18512: \<variable-non-null-undef\>['labels']|18513: \<[v10,v11,v8]|18514: if[v8](true-block:6065,false-block:6066)}" ] 
BB6064 -> BB6065 [tailport=s, headport=n, headlabel="      6065"]
BB6064 -> BB6066 [tailport=s, headport=n, headlabel="      6066"]
BB6064 -> BB6084 [tailport=s, headport=n, color=gray]
BB6065 [shape=record label="{18515: read-variable['labels',v14,-]|18516: read-variable['i',v15,-]|18517: read-property[v14,v15,v13]|18518: \<variable-non-null-undef\>['labels']|18519: write-variable[v13,'lab']*|18520: read-variable['node',v19,-]|18521: read-property[v19,'label',v17]|18522: \<variable-non-null-undef\>['node']|18523: constant[null,v18]|18524: ==[v17,v18,v16]|18525: if[v16](true-block:6068,false-block:6067)}" ] 
BB6065 -> BB6068 [tailport=s, headport=n, headlabel="      6068"]
BB6065 -> BB6067 [tailport=s, headport=n, headlabel="      6067"]
BB6065 -> BB6084 [tailport=s, headport=n, color=gray]
BB6066 [shape=record label="{18526: read-variable['i',v14,-]|18527: read-variable['labels',v16,-]|18528: read-property[v16,'length',v15]|18529: \<variable-non-null-undef\>['labels']|18530: ===[v14,v15,v13]|18531: if[v13](true-block:6077,false-block:6079)}" ] 
BB6066 -> BB6077 [tailport=s, headport=n, headlabel="      6077"]
BB6066 -> BB6079 [tailport=s, headport=n, headlabel="      6079"]
BB6066 -> BB6084 [tailport=s, headport=n, color=gray]
BB6067 [shape=record label="{18532: read-variable['lab',v19,-]|18533: read-property[v19,'name',v17]|18534: \<variable-non-null-undef\>['lab']|18535: read-variable['node',v21,-]|18536: read-property[v21,'label',v20]|18537: \<variable-non-null-undef\>['node']|18538: read-property[v20,'name',v18]|18539: \<property-non-null-undef\>[v21,'label']|18540: ===[v17,v18,v16]}" ] 
BB6067 -> BB6068 [tailport=s, headport=n]
BB6067 -> BB6084 [tailport=s, headport=n, color=gray]
BB6068 [shape=record label="{18541: if[v16](true-block:6069,false-block:6076)}" ] 
BB6068 -> BB6069 [tailport=s, headport=n, headlabel="      6069"]
BB6068 -> BB6076 [tailport=s, headport=n, headlabel="      6076"]
BB6069 [shape=record label="{18542: read-variable['lab',v20,-]|18543: read-property[v20,'kind',v18]|18544: \<variable-non-null-undef\>['lab']|18545: constant[null,v19]|18546: !=[v18,v19,v17]|18547: if[v17](true-block:6070,false-block:6072)}" ] 
BB6069 -> BB6072 [tailport=s, headport=n, headlabel="      6072"]
BB6069 -> BB6070 [tailport=s, headport=n, headlabel="      6070"]
BB6069 -> BB6084 [tailport=s, headport=n, color=gray]
BB6070 [shape=record label="{18548: read-variable['isBreak',v17,-]|18549: if[v17](true-block:6072,false-block:6071)}" ] 
BB6070 -> BB6072 [tailport=s, headport=n]
BB6070 -> BB6071 [tailport=s, headport=n, headlabel="      6071"]
BB6070 -> BB6084 [tailport=s, headport=n, color=gray]
BB6071 [shape=record label="{18550: read-variable['lab',v23,-]|18551: read-property[v23,'kind',v21]|18552: \<variable-non-null-undef\>['lab']|18553: constant[\"loop\",v22]|18554: ===[v21,v22,v17]}" ] 
BB6071 -> BB6072 [tailport=s, headport=n]
BB6071 -> BB6084 [tailport=s, headport=n, color=gray]
BB6072 [shape=record label="{18555: if[v17](true-block:6066,false-block:6073)}" ] 
BB6072 -> BB6066 [tailport=s, headport=n]
BB6072 -> BB6073 [tailport=s, headport=n, headlabel="      6073"]
BB6073 [shape=record label="{18556: read-variable['node',v22,-]|18557: read-property[v22,'label',v21]|18558: \<variable-non-null-undef\>['node']|18559: if[v21](true-block:6074,false-block:6075)}" ] 
BB6073 -> BB6075 [tailport=s, headport=n, headlabel="      6075"]
BB6073 -> BB6074 [tailport=s, headport=n, headlabel="      6074"]
BB6073 -> BB6084 [tailport=s, headport=n, color=gray]
BB6074 [shape=record label="{18560: read-variable['isBreak',v21,-]}" ] 
BB6074 -> BB6075 [tailport=s, headport=n]
BB6074 -> BB6084 [tailport=s, headport=n, color=gray]
BB6075 [shape=record label="{18561: if[v21](true-block:6066,false-block:6076)}" ] 
BB6075 -> BB6066 [tailport=s, headport=n]
BB6075 -> BB6076 [tailport=s, headport=n]
BB6076 [shape=record label="{18562: constant[1.0,v17]|18563: read-variable['i',v18,-]|18564: +[v18,v19]|18565: +[v19,v17,v20]|18566: write-variable[v20,'i']}" ] 
BB6076 -> BB6064 [tailport=s, headport=n]
BB6076 -> BB6084 [tailport=s, headport=n, color=gray]
BB6077 [shape=record label="{18567: read-variable['raise',v18,v17]|18568: read-variable['node',v20,-]|18569: read-property[v20,'start',v19]|18570: \<variable-non-null-undef\>['node']|18571: constant[\"Unsyntactic \",v22]|18572: read-variable['keyword',v23,-]|18573: +[v22,v23,v21]}" ] 
BB6077 -> BB6078 [tailport=s, headport=n, headlabel="      6078"]
BB6077 -> BB6084 [tailport=s, headport=n, color=gray]
BB6078 [shape=record label="{18574: call-raise [v17,v18,v19,v21,-]*}" ] 
BB6078 -> BB6079 [tailport=s, headport=n]
BB6078 -> BB6084 [tailport=s, headport=n, color=gray]
BB6079 [shape=record label="{18575: read-variable['finishNode',v18,v17]|18576: read-variable['node',v19,-]|18577: read-variable['isBreak',v21,-]|18578: if[v21](true-block:6080,false-block:6081)}" ] 
BB6079 -> BB6080 [tailport=s, headport=n, headlabel="      6080"]
BB6079 -> BB6081 [tailport=s, headport=n, headlabel="      6081"]
BB6079 -> BB6084 [tailport=s, headport=n, color=gray]
BB6080 [shape=record label="{18579: constant[\"BreakStatement\",v20]}" ] 
BB6080 -> BB6082 [tailport=s, headport=n, headlabel="      6082"]
BB6081 [shape=record label="{18580: constant[\"ContinueStatement\",v20]}" ] 
BB6081 -> BB6082 [tailport=s, headport=n]
BB6082 [shape=record label="{18581: call-finishNode [v17,v18,v19,v20,v1]}" ] 
BB6082 -> BB6083 [tailport=s, headport=n, headlabel="      6083"]
BB6082 -> BB6084 [tailport=s, headport=n, color=gray]
BB6083 [shape=record label="{18582: return[v1]}" ] 
BB6084 [shape=record label="{18583: exceptional-return}" ] 
//#$~ 6083
}
