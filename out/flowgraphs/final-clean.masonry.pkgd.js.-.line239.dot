digraph {
rankdir="TD"
BB_entry21[shape=none,label=""];
BB_entry21 -> BB444 [tailport=s, headport=n, headlabel="    444"]
BB444 [shape=record label="{1125: constant[undefined,v1]|1126: function-decl[function EventEmitter ( ),-]|1127: vardecl['proto']|1128: vardecl['exports']|1129: vardecl['originalGlobalValue']|1130: function-decl[function indexOfListener ( listeners listener ),-]|1131: function-decl[function alias ( name ),-]}" ] 
BB444 -> BB445 [tailport=s, headport=n, headlabel="      445"]
BB445 [shape=record label="{1132: read-variable['EventEmitter',v3,-]|1133: read-property[v3,'prototype',v2]|1134: \<variable-non-null-undef\>['EventEmitter']|1135: write-variable[v2,'proto']*|1136: read-variable['this',v4,-]|1137: write-variable[v4,'exports']*|1138: read-variable['exports',v6,-]|1139: read-property[v6,'EventEmitter',v5]|1140: \<variable-non-null-undef\>['exports']|1141: write-variable[v5,'originalGlobalValue']*|1142: read-variable['proto',v8,-]|1143: function-expr[function getListeners ( evt ),v7]|1144: write-property[v8,'getListeners',v7]|1145: \<variable-non-null-undef\>['proto']*|1146: read-variable['proto',v10,-]|1147: function-expr[function flattenListeners ( listeners ),v9]|1148: write-property[v10,'flattenListeners',v9]|1149: \<variable-non-null-undef\>['proto']*|1150: read-variable['proto',v12,-]|1151: function-expr[function getListenersAsObject ( evt ),v11]|1152: write-property[v12,'getListenersAsObject',v11]|1153: \<variable-non-null-undef\>['proto']*|1154: read-variable['proto',v14,-]|1155: function-expr[function addListener ( evt listener ),v13]|1156: write-property[v14,'addListener',v13]|1157: \<variable-non-null-undef\>['proto']*|1158: read-variable['proto',v16,-]|1159: read-variable['alias',v18,v17]|1160: constant[\"addListener\",v19]}" ] 
BB445 -> BB446 [tailport=s, headport=n, headlabel="      446"]
BB445 -> BB468 [tailport=s, headport=n, color=gray, headlabel="      468"]
BB446 [shape=record label="{1161: call-alias [v17,v18,v19,v15]}" ] 
BB446 -> BB447 [tailport=s, headport=n, headlabel="      447"]
BB446 -> BB468 [tailport=s, headport=n, color=gray]
BB447 [shape=record label="{1162: write-property[v16,'on',v15]|1163: \<variable-non-null-undef\>['proto']*|1164: read-variable['proto',v21,-]|1165: function-expr[function addOnceListener ( evt listener ),v20]|1166: write-property[v21,'addOnceListener',v20]|1167: \<variable-non-null-undef\>['proto']*|1168: read-variable['proto',v23,-]|1169: read-variable['alias',v25,v24]|1170: constant[\"addOnceListener\",v26]}" ] 
BB447 -> BB448 [tailport=s, headport=n, headlabel="      448"]
BB447 -> BB468 [tailport=s, headport=n, color=gray]
BB448 [shape=record label="{1171: call-alias [v24,v25,v26,v22]}" ] 
BB448 -> BB449 [tailport=s, headport=n, headlabel="      449"]
BB448 -> BB468 [tailport=s, headport=n, color=gray]
BB449 [shape=record label="{1172: write-property[v23,'once',v22]|1173: \<variable-non-null-undef\>['proto']*|1174: read-variable['proto',v28,-]|1175: function-expr[function defineEvent ( evt ),v27]|1176: write-property[v28,'defineEvent',v27]|1177: \<variable-non-null-undef\>['proto']*|1178: read-variable['proto',v30,-]|1179: function-expr[function defineEvents ( evts ),v29]|1180: write-property[v30,'defineEvents',v29]|1181: \<variable-non-null-undef\>['proto']*|1182: read-variable['proto',v32,-]|1183: function-expr[function removeListener ( evt listener ),v31]|1184: write-property[v32,'removeListener',v31]|1185: \<variable-non-null-undef\>['proto']*|1186: read-variable['proto',v34,-]|1187: read-variable['alias',v36,v35]|1188: constant[\"removeListener\",v37]}" ] 
BB449 -> BB450 [tailport=s, headport=n, headlabel="      450"]
BB449 -> BB468 [tailport=s, headport=n, color=gray]
BB450 [shape=record label="{1189: call-alias [v35,v36,v37,v33]}" ] 
BB450 -> BB451 [tailport=s, headport=n, headlabel="      451"]
BB450 -> BB468 [tailport=s, headport=n, color=gray]
BB451 [shape=record label="{1190: write-property[v34,'off',v33]|1191: \<variable-non-null-undef\>['proto']*|1192: read-variable['proto',v39,-]|1193: function-expr[function addListeners ( evt listeners ),v38]|1194: write-property[v39,'addListeners',v38]|1195: \<variable-non-null-undef\>['proto']*|1196: read-variable['proto',v41,-]|1197: function-expr[function removeListeners ( evt listeners ),v40]|1198: write-property[v41,'removeListeners',v40]|1199: \<variable-non-null-undef\>['proto']*|1200: read-variable['proto',v43,-]|1201: function-expr[function manipulateListeners ( remove evt listeners ),v42]|1202: write-property[v43,'manipulateListeners',v42]|1203: \<variable-non-null-undef\>['proto']*|1204: read-variable['proto',v45,-]|1205: function-expr[function removeEvent ( evt ),v44]|1206: write-property[v45,'removeEvent',v44]|1207: \<variable-non-null-undef\>['proto']*|1208: read-variable['proto',v47,-]|1209: read-variable['alias',v49,v48]|1210: constant[\"removeEvent\",v50]}" ] 
BB451 -> BB452 [tailport=s, headport=n, headlabel="      452"]
BB451 -> BB468 [tailport=s, headport=n, color=gray]
BB452 [shape=record label="{1211: call-alias [v48,v49,v50,v46]}" ] 
BB452 -> BB453 [tailport=s, headport=n, headlabel="      453"]
BB452 -> BB468 [tailport=s, headport=n, color=gray]
BB453 [shape=record label="{1212: write-property[v47,'removeAllListeners',v46]|1213: \<variable-non-null-undef\>['proto']*|1214: read-variable['proto',v52,-]|1215: function-expr[function emitEvent ( evt args ),v51]|1216: write-property[v52,'emitEvent',v51]|1217: \<variable-non-null-undef\>['proto']*|1218: read-variable['proto',v54,-]|1219: read-variable['alias',v56,v55]|1220: constant[\"emitEvent\",v57]}" ] 
BB453 -> BB454 [tailport=s, headport=n, headlabel="      454"]
BB453 -> BB468 [tailport=s, headport=n, color=gray]
BB454 [shape=record label="{1221: call-alias [v55,v56,v57,v53]}" ] 
BB454 -> BB455 [tailport=s, headport=n, headlabel="      455"]
BB454 -> BB468 [tailport=s, headport=n, color=gray]
BB455 [shape=record label="{1222: write-property[v54,'trigger',v53]|1223: \<variable-non-null-undef\>['proto']*|1224: read-variable['proto',v59,-]|1225: function-expr[function emit ( evt ),v58]|1226: write-property[v59,'emit',v58]|1227: \<variable-non-null-undef\>['proto']*|1228: read-variable['proto',v61,-]|1229: function-expr[function setOnceReturnValue ( value ),v60]|1230: write-property[v61,'setOnceReturnValue',v60]|1231: \<variable-non-null-undef\>['proto']*|1232: read-variable['proto',v63,-]|1233: function-expr[function _getOnceReturnValue ( ),v62]|1234: write-property[v63,'_getOnceReturnValue',v62]|1235: \<variable-non-null-undef\>['proto']*|1236: read-variable['proto',v65,-]|1237: function-expr[function _getEvents ( ),v64]|1238: write-property[v65,'_getEvents',v64]|1239: \<variable-non-null-undef\>['proto']*|1240: read-variable['EventEmitter',v67,-]|1241: function-expr[function noConflict ( ),v66]|1242: write-property[v67,'noConflict',v66]|1243: \<variable-non-null-undef\>['EventEmitter']*|1244: typeof['define',v69]|1245: constant[\"function\",v70]|1246: ===[v69,v70,v68]|1247: if[v68](true-block:456,false-block:457)}" ] 
BB455 -> BB457 [tailport=s, headport=n, headlabel="      457"]
BB455 -> BB456 [tailport=s, headport=n, headlabel="      456"]
BB455 -> BB468 [tailport=s, headport=n, color=gray]
BB456 [shape=record label="{1248: read-variable['define',v71,-]|1249: read-property[v71,'amd',v68]|1250: \<variable-non-null-undef\>['define']}" ] 
BB456 -> BB457 [tailport=s, headport=n]
BB456 -> BB468 [tailport=s, headport=n, color=gray]
BB457 [shape=record label="{1251: if[v68](true-block:458,false-block:459)}" ] 
BB457 -> BB458 [tailport=s, headport=n, headlabel="      458"]
BB457 -> BB459 [tailport=s, headport=n, headlabel="      459"]
BB458 [shape=record label="{1252: read-variable['define',v72,v71]|1253: constant[\"eventEmitter/EventEmitter\",v73]|1254: read-variable['Array',v75,-]}" ] 
BB458 -> BB460 [tailport=s, headport=n, headlabel="      460"]
BB458 -> BB468 [tailport=s, headport=n, color=gray]
BB459 [shape=record label="{1255: typeof['module',v72]|1256: constant[\"object\",v73]|1257: ===[v72,v73,v71]|1258: if[v71](true-block:463,false-block:464)}" ] 
BB459 -> BB464 [tailport=s, headport=n, headlabel="      464"]
BB459 -> BB463 [tailport=s, headport=n, headlabel="      463"]
BB459 -> BB468 [tailport=s, headport=n, color=gray]
BB460 [shape=record label="{1259: construct [-,v75,v74]}" ] 
BB460 -> BB461 [tailport=s, headport=n, headlabel="      461"]
BB460 -> BB468 [tailport=s, headport=n, color=gray]
BB461 [shape=record label="{1260: function-expr[function ( ),v76]}" ] 
BB461 -> BB462 [tailport=s, headport=n, headlabel="      462"]
BB462 [shape=record label="{1261: call-define [v71,v72,v73,v74,v76,-]*}" ] 
BB462 -> BB467 [tailport=s, headport=n, headlabel="      467"]
BB462 -> BB468 [tailport=s, headport=n, color=gray]
BB463 [shape=record label="{1262: read-variable['module',v74,-]|1263: read-property[v74,'exports',v71]|1264: \<variable-non-null-undef\>['module']}" ] 
BB463 -> BB464 [tailport=s, headport=n]
BB463 -> BB468 [tailport=s, headport=n, color=gray]
BB464 [shape=record label="{1265: if[v71](true-block:465,false-block:466)}" ] 
BB464 -> BB465 [tailport=s, headport=n, headlabel="      465"]
BB464 -> BB466 [tailport=s, headport=n, headlabel="      466"]
BB465 [shape=record label="{1266: read-variable['module',v75,-]|1267: read-variable['EventEmitter',v74,-]|1268: write-property[v75,'exports',v74]|1269: \<variable-non-null-undef\>['module']*}" ] 
BB465 -> BB467 [tailport=s, headport=n]
BB465 -> BB468 [tailport=s, headport=n, color=gray]
BB466 [shape=record label="{1270: read-variable['exports',v75,-]|1271: read-variable['EventEmitter',v74,-]|1272: write-property[v75,'EventEmitter',v74]|1273: \<variable-non-null-undef\>['exports']*}" ] 
BB466 -> BB467 [tailport=s, headport=n]
BB466 -> BB468 [tailport=s, headport=n, color=gray]
BB467 [shape=record label="{1274: return[v1]}" ] 
BB468 [shape=record label="{1275: exceptional-return}" ] 
//#$~ 701
}
