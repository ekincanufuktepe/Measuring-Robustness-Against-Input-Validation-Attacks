digraph {
rankdir="TD"
BB_entry65[shape=none,label=""];
BB_entry65 -> BB1003 [tailport=s, headport=n, headlabel="    1003"]
BB1003 [shape=record label="{3511: constant[undefined,v1]|3512: vardecl['invariant']|3513: function-decl[function checkMask ( value bitmask ),-]|3514: vardecl['DOMPropertyInjection']|3515: vardecl['defaultValueCache']|3516: vardecl['DOMProperty']}" ] 
BB1003 -> BB1004 [tailport=s, headport=n, headlabel="      1004"]
BB1004 [shape=record label="{3517: read-variable['_dereq_',v4,v3]|3518: constant[135.0,v5]}" ] 
BB1004 -> BB1005 [tailport=s, headport=n, headlabel="      1005"]
BB1004 -> BB1010 [tailport=s, headport=n, color=gray, headlabel="      1010"]
BB1005 [shape=record label="{3519: call-_dereq_ [v3,v4,v5,v2]}" ] 
BB1005 -> BB1006 [tailport=s, headport=n, headlabel="      1006"]
BB1005 -> BB1010 [tailport=s, headport=n, color=gray]
BB1006 [shape=record label="{3520: write-variable[v2,'invariant']*|3521: new[v6]|3522: constant[1.0,v7]|3523: write-property[v6,'MUST_USE_ATTRIBUTE',v7]|3524: constant[2.0,v8]|3525: write-property[v6,'MUST_USE_PROPERTY',v8]|3526: constant[4.0,v9]|3527: write-property[v6,'HAS_SIDE_EFFECTS',v9]|3528: constant[8.0,v10]|3529: write-property[v6,'HAS_BOOLEAN_VALUE',v10]|3530: constant[16.0,v11]|3531: write-property[v6,'HAS_NUMERIC_VALUE',v11]|3532: constant[32.0,v13]|3533: constant[16.0,v14]|3534: |[v13,v14,v12]|3535: write-property[v6,'HAS_POSITIVE_NUMERIC_VALUE',v12]|3536: constant[64.0,v15]|3537: write-property[v6,'HAS_OVERLOADED_BOOLEAN_VALUE',v15]|3538: function-expr[function ( domPropertyConfig ),v16]|3539: write-property[v6,'injectDOMPropertyConfig',v16]|3540: write-variable[v6,'DOMPropertyInjection']*|3541: new[v17]|3542: write-variable[v17,'defaultValueCache']*|3543: new[v18]|3544: constant[\"data-reactid\",v19]|3545: write-property[v18,'ID_ATTRIBUTE_NAME',v19]|3546: new[v20]|3547: write-property[v18,'isStandardName',v20]|3548: new[v21]|3549: write-property[v18,'getPossibleStandardName',v21]|3550: new[v22]|3551: write-property[v18,'getAttributeName',v22]|3552: new[v23]|3553: write-property[v18,'getPropertyName',v23]|3554: new[v24]|3555: write-property[v18,'getMutationMethod',v24]|3556: new[v25]|3557: write-property[v18,'mustUseAttribute',v25]|3558: new[v26]|3559: write-property[v18,'mustUseProperty',v26]|3560: new[v27]|3561: write-property[v18,'hasSideEffects',v27]|3562: new[v28]|3563: write-property[v18,'hasBooleanValue',v28]|3564: new[v29]|3565: write-property[v18,'hasNumericValue',v29]|3566: new[v30]|3567: write-property[v18,'hasPositiveNumericValue',v30]|3568: new[v31]|3569: write-property[v18,'hasOverloadedBooleanValue',v31]|3570: read-variable['Array',v33,-]}" ] 
BB1006 -> BB1007 [tailport=s, headport=n, headlabel="      1007"]
BB1006 -> BB1010 [tailport=s, headport=n, color=gray]
BB1007 [shape=record label="{3571: construct [-,v33,v32]}" ] 
BB1007 -> BB1008 [tailport=s, headport=n, headlabel="      1008"]
BB1007 -> BB1010 [tailport=s, headport=n, color=gray]
BB1008 [shape=record label="{3572: write-property[v18,'_isCustomAttributeFunctions',v32]|3573: function-expr[function ( attributeName ),v34]|3574: write-property[v18,'isCustomAttribute',v34]|3575: function-expr[function ( nodeName prop ),v35]|3576: write-property[v18,'getDefaultValueForProperty',v35]|3577: read-variable['DOMPropertyInjection',v36,-]|3578: write-property[v18,'injection',v36]|3579: write-variable[v18,'DOMProperty']*|3580: read-variable['module',v38,-]|3581: read-variable['DOMProperty',v37,-]|3582: write-property[v38,'exports',v37]|3583: \<variable-non-null-undef\>['module']*}" ] 
BB1008 -> BB1009 [tailport=s, headport=n, headlabel="      1009"]
BB1008 -> BB1010 [tailport=s, headport=n, color=gray]
BB1009 [shape=record label="{3584: return[v1]}" ] 
BB1010 [shape=record label="{3585: exceptional-return}" ] 
//#$~ 1917
}
