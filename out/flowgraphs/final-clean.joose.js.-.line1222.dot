digraph {
rankdir="TD"
BB_entry129[shape=none,label=""];
BB_entry129 -> BB1070 [tailport=s, headport=n, headlabel="    1070"]
BB1070 [shape=record label="{3238: constant[undefined,v1]|3239: vardecl['meta']|3240: vardecl['name']|3241: vardecl['props']|3242: vardecl['setterName']|3243: vardecl['isa']|3244: vardecl['func']|3245: vardecl['checkerFunc']}" ] 
BB1070 -> BB1071 [tailport=s, headport=n, headlabel="      1071"]
BB1071 [shape=record label="{3246: read-variable['classObject',v3,-]|3247: read-property[v3,'meta',v2]|3248: \<variable-non-null-undef\>['classObject']|3249: write-variable[v2,'meta']*|3250: read-variable['this',v6,-]|3251: read-property[v6,'getName',-]}" ] 
BB1071 -> BB1072 [tailport=s, headport=n, headlabel="      1072"]
BB1071 -> BB1091 [tailport=s, headport=n, color=gray, headlabel="      1091"]
BB1072 [shape=record label="{3252: call-this.getName [v6,'getName',v4]}" ] 
BB1072 -> BB1073 [tailport=s, headport=n, headlabel="      1073"]
BB1072 -> BB1091 [tailport=s, headport=n, color=gray]
BB1073 [shape=record label="{3253: write-variable[v4,'name']*|3254: read-variable['this',v9,-]|3255: read-property[v9,'getProps',-]}" ] 
BB1073 -> BB1074 [tailport=s, headport=n, headlabel="      1074"]
BB1073 -> BB1091 [tailport=s, headport=n, color=gray]
BB1074 [shape=record label="{3256: call-this.getProps [v9,'getProps',v7]}" ] 
BB1074 -> BB1075 [tailport=s, headport=n, headlabel="      1075"]
BB1074 -> BB1091 [tailport=s, headport=n, color=gray]
BB1075 [shape=record label="{3257: write-variable[v7,'props']*|3258: read-variable['this',v12,-]|3259: read-property[v12,'setterName',-]}" ] 
BB1075 -> BB1076 [tailport=s, headport=n, headlabel="      1076"]
BB1075 -> BB1091 [tailport=s, headport=n, color=gray]
BB1076 [shape=record label="{3260: call-this.setterName [v12,'setterName',v10]}" ] 
BB1076 -> BB1077 [tailport=s, headport=n, headlabel="      1077"]
BB1076 -> BB1091 [tailport=s, headport=n, color=gray]
BB1077 [shape=record label="{3261: write-variable[v10,'setterName']*|3262: read-variable['meta',v15,-]|3263: read-property[v15,'can',-]|3264: \<variable-non-null-undef\>['meta']|3265: read-variable['setterName',v16,-]}" ] 
BB1077 -> BB1078 [tailport=s, headport=n, headlabel="      1078"]
BB1077 -> BB1091 [tailport=s, headport=n, color=gray]
BB1078 [shape=record label="{3266: call-meta.can [v15,'can',v16,v13]}" ] 
BB1078 -> BB1079 [tailport=s, headport=n, headlabel="      1079"]
BB1078 -> BB1091 [tailport=s, headport=n, color=gray]
BB1079 [shape=record label="{3267: if[v13](true-block:1080,false-block:1081)}" ] 
BB1079 -> BB1080 [tailport=s, headport=n, headlabel="      1080"]
BB1079 -> BB1081 [tailport=s, headport=n, headlabel="      1081"]
BB1080 [shape=record label="{3268: constant[undefined,v1]}" ] 
BB1080 -> BB1090 [tailport=s, headport=n, headlabel="      1090"]
BB1081 [shape=record label="{3269: read-variable['this',v19,-]|3270: read-property[v19,'getIsa',-]}" ] 
BB1081 -> BB1082 [tailport=s, headport=n, headlabel="      1082"]
BB1081 -> BB1091 [tailport=s, headport=n, color=gray]
BB1082 [shape=record label="{3271: call-this.getIsa [v19,'getIsa',v17]}" ] 
BB1082 -> BB1083 [tailport=s, headport=n, headlabel="      1083"]
BB1082 -> BB1091 [tailport=s, headport=n, color=gray]
BB1083 [shape=record label="{3272: write-variable[v17,'isa']*|3273: read-variable['isa',v20,-]|3274: if[v20](true-block:1084,false-block:1085)}" ] 
BB1083 -> BB1084 [tailport=s, headport=n, headlabel="      1084"]
BB1083 -> BB1085 [tailport=s, headport=n, headlabel="      1085"]
BB1083 -> BB1091 [tailport=s, headport=n, color=gray]
BB1084 [shape=record label="{3275: read-variable['Joose',v24,-]|3276: read-property[v24,'TypeChecker',v23]|3277: \<variable-non-null-undef\>['Joose']|3278: read-property[v23,'makeTypeChecker',-]|3279: \<property-non-null-undef\>[v24,'TypeChecker']|3280: read-variable['isa',v25,-]|3281: read-variable['props',v26,-]|3282: constant[\"attribute\",v27]|3283: read-variable['name',v28,-]}" ] 
BB1084 -> BB1086 [tailport=s, headport=n, headlabel="      1086"]
BB1084 -> BB1091 [tailport=s, headport=n, color=gray]
BB1085 [shape=record label="{3284: function-expr[function setter ( value ),v21]|3285: write-variable[v21,'func']*}" ] 
BB1085 -> BB1088 [tailport=s, headport=n, headlabel="      1088"]
BB1086 [shape=record label="{3286: call-Joose.TypeChecker.makeTypeChecker [v23,'makeTypeChecker',v25,v26,v27,v28,v21]}" ] 
BB1086 -> BB1087 [tailport=s, headport=n, headlabel="      1087"]
BB1086 -> BB1091 [tailport=s, headport=n, color=gray]
BB1087 [shape=record label="{3287: write-variable[v21,'checkerFunc']*|3288: function-expr[function setterWithIsaCheck ( value errorHandler ),v29]|3289: write-variable[v29,'func']*}" ] 
BB1087 -> BB1088 [tailport=s, headport=n]
BB1088 [shape=record label="{3290: read-variable['meta',v22,-]|3291: read-property[v22,'addMethod',-]|3292: \<variable-non-null-undef\>['meta']|3293: read-variable['setterName',v23,-]|3294: read-variable['func',v24,-]}" ] 
BB1088 -> BB1089 [tailport=s, headport=n, headlabel="      1089"]
BB1088 -> BB1091 [tailport=s, headport=n, color=gray]
BB1089 [shape=record label="{3295: call-meta.addMethod [v22,'addMethod',v23,v24,-]*}" ] 
BB1089 -> BB1090 [tailport=s, headport=n]
BB1089 -> BB1091 [tailport=s, headport=n, color=gray]
BB1090 [shape=record label="{3296: return[v1]}" ] 
BB1091 [shape=record label="{3297: exceptional-return}" ] 
//#$~ 1252
}
