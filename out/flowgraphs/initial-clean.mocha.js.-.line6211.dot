digraph {
rankdir="TD"
BB_entry466[shape=none,label=""];
BB_entry466 -> BB5438 [tailport=s, headport=n, headlabel="    5438"]
BB5438 [shape=record label="{16476: constant[undefined,v1]|16477: vardecl['canonicalizedObj']|16478: vardecl['type']|16479: vardecl['prop']|16480: vardecl['withStack']}" ] 
BB5438 -> BB5439 [tailport=s, headport=n, headlabel="      5439"]
BB5439 [shape=record label="{16481: read-variable['exports',v4,-]|16482: read-property[v4,'type',-]|16483: \<variable-non-null-undef\>['exports']|16484: read-variable['value',v5,-]}" ] 
BB5439 -> BB5440 [tailport=s, headport=n, headlabel="      5440"]
BB5439 -> BB5480 [tailport=s, headport=n, color=gray, headlabel="      5480"]
BB5440 [shape=record label="{16485: call-exports.type [v4,'type',v5,v2]}" ] 
BB5440 -> BB5441 [tailport=s, headport=n, headlabel="      5441"]
BB5440 -> BB5480 [tailport=s, headport=n, color=gray]
BB5441 [shape=record label="{16486: write-variable[v2,'type']*|16487: function-expr[function withStack ( value fn ),v6]|16488: write-variable[v6,'withStack']*|16489: read-variable['stack',v7,-]|16490: if[v7](true-block:5444,false-block:5442)}" ] 
BB5441 -> BB5444 [tailport=s, headport=n, headlabel="      5444"]
BB5441 -> BB5442 [tailport=s, headport=n, headlabel="      5442"]
BB5441 -> BB5480 [tailport=s, headport=n, color=gray]
BB5442 [shape=record label="{16491: read-variable['Array',v8,-]}" ] 
BB5442 -> BB5443 [tailport=s, headport=n, headlabel="      5443"]
BB5442 -> BB5480 [tailport=s, headport=n, color=gray]
BB5443 [shape=record label="{16492: construct [-,v8,v7]}" ] 
BB5443 -> BB5444 [tailport=s, headport=n]
BB5443 -> BB5480 [tailport=s, headport=n, color=gray]
BB5444 [shape=record label="{16493: write-variable[v7,'stack']*|16494: read-variable['exports',v12,-]|16495: read-property[v12,'indexOf',-]|16496: \<variable-non-null-undef\>['exports']|16497: read-variable['stack',v13,-]|16498: read-variable['value',v14,-]}" ] 
BB5444 -> BB5445 [tailport=s, headport=n, headlabel="      5445"]
BB5444 -> BB5480 [tailport=s, headport=n, color=gray]
BB5445 [shape=record label="{16499: call-exports.indexOf [v12,'indexOf',v13,v14,v9]}" ] 
BB5445 -> BB5446 [tailport=s, headport=n, headlabel="      5446"]
BB5445 -> BB5480 [tailport=s, headport=n, color=gray]
BB5446 [shape=record label="{16500: constant[-1.0,v10]|16501: !==[v9,v10,v8]|16502: if[v8](true-block:5447,false-block:5448)}" ] 
BB5446 -> BB5447 [tailport=s, headport=n, headlabel="      5447"]
BB5446 -> BB5448 [tailport=s, headport=n, headlabel="      5448"]
BB5446 -> BB5480 [tailport=s, headport=n, color=gray]
BB5447 [shape=record label="{16503: constant[\"[Circular]\",v1]}" ] 
BB5447 -> BB5479 [tailport=s, headport=n, headlabel="      5479"]
BB5448 [shape=record label="{16504: read-variable['type',v15,-]|16505: constant[\"undefined\",v16]|16506: ==[v15,v16,v17]|16507: if[v17](true-block:5452,false-block:5450)}" ] 
BB5448 -> BB5452 [tailport=s, headport=n, headlabel="      5452"]
BB5448 -> BB5450 [tailport=s, headport=n, headlabel="      5450"]
BB5448 -> BB5480 [tailport=s, headport=n, color=gray]
BB5449 [shape=record label="{16508: read-variable['canonicalizedObj',v1,-]}" ] 
BB5449 -> BB5479 [tailport=s, headport=n]
BB5449 -> BB5480 [tailport=s, headport=n, color=gray]
BB5450 [shape=record label="{16509: constant[\"buffer\",v16]|16510: ==[v15,v16,v17]|16511: if[v17](true-block:5452,false-block:5451)}" ] 
BB5450 -> BB5452 [tailport=s, headport=n]
BB5450 -> BB5451 [tailport=s, headport=n, headlabel="      5451"]
BB5450 -> BB5480 [tailport=s, headport=n, color=gray]
BB5451 [shape=record label="{16512: constant[\"null\",v16]|16513: ==[v15,v16,v17]|16514: if[v17](true-block:5452,false-block:5453)}" ] 
BB5451 -> BB5452 [tailport=s, headport=n]
BB5451 -> BB5453 [tailport=s, headport=n, headlabel="      5453"]
BB5451 -> BB5480 [tailport=s, headport=n, color=gray]
BB5452 [shape=record label="{16515: read-variable['value',v18,-]|16516: write-variable[v18,'canonicalizedObj']*}" ] 
BB5452 -> BB5449 [tailport=s, headport=n, headlabel="      5449"]
BB5452 -> BB5480 [tailport=s, headport=n, color=gray]
BB5453 [shape=record label="{16517: constant[\"array\",v16]|16518: ==[v15,v16,v17]|16519: if[v17](true-block:5454,false-block:5455)}" ] 
BB5453 -> BB5454 [tailport=s, headport=n, headlabel="      5454"]
BB5453 -> BB5455 [tailport=s, headport=n, headlabel="      5455"]
BB5453 -> BB5480 [tailport=s, headport=n, color=gray]
BB5454 [shape=record label="{16520: read-variable['withStack',v20,v19]|16521: read-variable['value',v21,-]|16522: function-expr[function ( ),v22]}" ] 
BB5454 -> BB5456 [tailport=s, headport=n, headlabel="      5456"]
BB5454 -> BB5480 [tailport=s, headport=n, color=gray]
BB5455 [shape=record label="{16523: constant[\"function\",v16]|16524: ==[v15,v16,v17]|16525: if[v17](true-block:5457,false-block:5458)}" ] 
BB5455 -> BB5457 [tailport=s, headport=n, headlabel="      5457"]
BB5455 -> BB5458 [tailport=s, headport=n, headlabel="      5458"]
BB5455 -> BB5480 [tailport=s, headport=n, color=gray]
BB5456 [shape=record label="{16526: call-withStack [v19,v20,v21,v22,-]*}" ] 
BB5456 -> BB5449 [tailport=s, headport=n]
BB5456 -> BB5480 [tailport=s, headport=n, color=gray]
BB5457 [shape=record label="{16527: read-variable['value',v24,-]}" ] 
BB5457 -> BB5459 [tailport=s, headport=n, headlabel="      5459"]
BB5457 -> BB5480 [tailport=s, headport=n, color=gray]
BB5458 [shape=record label="{16528: constant[\"object\",v16]|16529: ==[v15,v16,v17]|16530: if[v17](true-block:5467,false-block:5468)}" ] 
BB5458 -> BB5467 [tailport=s, headport=n, headlabel="      5467"]
BB5458 -> BB5468 [tailport=s, headport=n, headlabel="      5468"]
BB5458 -> BB5480 [tailport=s, headport=n, color=gray]
BB5459 [shape=record label="{16531: begin-for-in[v24,v25]}" ] 
BB5459 -> BB5460 [tailport=s, headport=n, headlabel="      5460"]
BB5459 -> BB5480 [tailport=s, headport=n, color=gray]
BB5460 [shape=record label="{16532: has-next[v25,v26]|16533: if[v26](true-block:5461,false-block:5463)}" ] 
BB5460 -> BB5461 [tailport=s, headport=n, headlabel="      5461"]
BB5460 -> BB5463 [tailport=s, headport=n, headlabel="      5463"]
BB5461 [shape=record label="{16534: next-property[v25,v27]|16535: write-variable[v27,'prop']|16536: new[v28]|16537: write-variable[v28,'canonicalizedObj']*}" ] 
BB5461 -> BB5463 [tailport=s, headport=n]
BB5462 [shape=record label="{16538: end-for-in(begin-node:16531)}" ] 
BB5462 -> BB5460 [tailport=s, headport=n]
BB5463 [shape=record label="{16539: read-variable['canonicalizedObj',v29,-]|16540: ![v29,v28]|16541: if[v28](true-block:5464,false-block:5467)}" ] 
BB5463 -> BB5464 [tailport=s, headport=n, headlabel="      5464"]
BB5463 -> BB5467 [tailport=s, headport=n]
BB5463 -> BB5480 [tailport=s, headport=n, color=gray]
BB5464 [shape=record label="{16542: read-variable['emptyRepresentation',v32,v31]|16543: read-variable['value',v33,-]|16544: read-variable['type',v34,-]}" ] 
BB5464 -> BB5465 [tailport=s, headport=n, headlabel="      5465"]
BB5464 -> BB5480 [tailport=s, headport=n, color=gray]
BB5465 [shape=record label="{16545: call-emptyRepresentation [v31,v32,v33,v34,v30]}" ] 
BB5465 -> BB5466 [tailport=s, headport=n, headlabel="      5466"]
BB5465 -> BB5480 [tailport=s, headport=n, color=gray]
BB5466 [shape=record label="{16546: write-variable[v30,'canonicalizedObj']*}" ] 
BB5466 -> BB5449 [tailport=s, headport=n]
BB5467 [shape=record label="{16547: read-variable['canonicalizedObj',v30,-]|16548: if[v30](true-block:5470,false-block:5469)}" ] 
BB5467 -> BB5470 [tailport=s, headport=n, headlabel="      5470"]
BB5467 -> BB5469 [tailport=s, headport=n, headlabel="      5469"]
BB5467 -> BB5480 [tailport=s, headport=n, color=gray]
BB5468 [shape=record label="{16549: constant[\"date\",v16]|16550: ==[v15,v16,v17]|16551: if[v17](true-block:5475,false-block:5472)}" ] 
BB5468 -> BB5475 [tailport=s, headport=n, headlabel="      5475"]
BB5468 -> BB5472 [tailport=s, headport=n, headlabel="      5472"]
BB5468 -> BB5480 [tailport=s, headport=n, color=gray]
BB5469 [shape=record label="{16552: new[v30]}" ] 
BB5469 -> BB5470 [tailport=s, headport=n]
BB5470 [shape=record label="{16553: write-variable[v30,'canonicalizedObj']*|16554: read-variable['withStack',v32,v31]|16555: read-variable['value',v33,-]|16556: function-expr[function ( ),v34]}" ] 
BB5470 -> BB5471 [tailport=s, headport=n, headlabel="      5471"]
BB5470 -> BB5480 [tailport=s, headport=n, color=gray]
BB5471 [shape=record label="{16557: call-withStack [v31,v32,v33,v34,-]*}" ] 
BB5471 -> BB5449 [tailport=s, headport=n]
BB5471 -> BB5480 [tailport=s, headport=n, color=gray]
BB5472 [shape=record label="{16558: constant[\"number\",v16]|16559: ==[v15,v16,v17]|16560: if[v17](true-block:5475,false-block:5473)}" ] 
BB5472 -> BB5475 [tailport=s, headport=n]
BB5472 -> BB5473 [tailport=s, headport=n, headlabel="      5473"]
BB5472 -> BB5480 [tailport=s, headport=n, color=gray]
BB5473 [shape=record label="{16561: constant[\"regexp\",v16]|16562: ==[v15,v16,v17]|16563: if[v17](true-block:5475,false-block:5474)}" ] 
BB5473 -> BB5475 [tailport=s, headport=n]
BB5473 -> BB5474 [tailport=s, headport=n, headlabel="      5474"]
BB5473 -> BB5480 [tailport=s, headport=n, color=gray]
BB5474 [shape=record label="{16564: constant[\"boolean\",v16]|16565: ==[v15,v16,v17]|16566: if[v17](true-block:5475,false-block:5476)}" ] 
BB5474 -> BB5475 [tailport=s, headport=n]
BB5474 -> BB5476 [tailport=s, headport=n, headlabel="      5476"]
BB5474 -> BB5480 [tailport=s, headport=n, color=gray]
BB5475 [shape=record label="{16567: read-variable['value',v35,-]|16568: write-variable[v35,'canonicalizedObj']*}" ] 
BB5475 -> BB5449 [tailport=s, headport=n]
BB5475 -> BB5480 [tailport=s, headport=n, color=gray]
BB5476 [shape=record label="{16569: read-variable['value',v38,-]|16570: read-property[v38,'toString',-]|16571: \<variable-non-null-undef\>['value']}" ] 
BB5476 -> BB5477 [tailport=s, headport=n, headlabel="      5477"]
BB5476 -> BB5480 [tailport=s, headport=n, color=gray]
BB5477 [shape=record label="{16572: call-value.toString [v38,'toString',v36]}" ] 
BB5477 -> BB5478 [tailport=s, headport=n, headlabel="      5478"]
BB5477 -> BB5480 [tailport=s, headport=n, color=gray]
BB5478 [shape=record label="{16573: write-variable[v36,'canonicalizedObj']*}" ] 
BB5478 -> BB5449 [tailport=s, headport=n]
BB5479 [shape=record label="{16574: return[v1]}" ] 
BB5480 [shape=record label="{16575: exceptional-return}" ] 
//#$~ 6268
}
