digraph {
rankdir="TD"
BB_entry631[shape=none,label=""];
BB_entry631 -> BB8524 [tailport=s, headport=n, headlabel="    8524"]
BB8524 [shape=record label="{28195: constant[undefined,v1]|28196: vardecl['transaction']|28197: vardecl['queue']}" ] 
BB8524 -> BB8525 [tailport=s, headport=n, headlabel="      8525"]
BB8525 [shape=record label="{28198: read-variable['dirtyComponents',v3,-]|28199: read-property[v3,'length',v2]|28200: \<variable-non-null-undef\>['dirtyComponents']|28201: if[v2](true-block:8527,false-block:8526)}" ] 
BB8525 -> BB8527 [tailport=s, headport=n, headlabel="      8527"]
BB8525 -> BB8526 [tailport=s, headport=n, headlabel="      8526"]
BB8525 -> BB8543 [tailport=s, headport=n, color=gray, headlabel="      8543"]
BB8526 [shape=record label="{28202: read-variable['asapEnqueued',v2,-]}" ] 
BB8526 -> BB8527 [tailport=s, headport=n]
BB8526 -> BB8543 [tailport=s, headport=n, color=gray]
BB8527 [shape=record label="{28203: if[v2](true-block:8528,false-block:8542)}" ] 
BB8527 -> BB8528 [tailport=s, headport=n, headlabel="      8528"]
BB8527 -> BB8542 [tailport=s, headport=n, headlabel="      8542"]
BB8528 [shape=record label="{28204: read-variable['dirtyComponents',v4,-]|28205: read-property[v4,'length',v3]|28206: \<variable-non-null-undef\>['dirtyComponents']|28207: if[v3](true-block:8529,false-block:8535)}" ] 
BB8528 -> BB8529 [tailport=s, headport=n, headlabel="      8529"]
BB8528 -> BB8535 [tailport=s, headport=n, headlabel="      8535"]
BB8528 -> BB8543 [tailport=s, headport=n, color=gray]
BB8529 [shape=record label="{28208: read-variable['ReactUpdatesFlushTransaction',v7,-]|28209: read-property[v7,'getPooled',-]|28210: \<variable-non-null-undef\>['ReactUpdatesFlushTransaction']}" ] 
BB8529 -> BB8530 [tailport=s, headport=n, headlabel="      8530"]
BB8529 -> BB8543 [tailport=s, headport=n, color=gray]
BB8530 [shape=record label="{28211: call-ReactUpdatesFlushTransaction.getPooled [v7,'getPooled',v5]}" ] 
BB8530 -> BB8531 [tailport=s, headport=n, headlabel="      8531"]
BB8530 -> BB8543 [tailport=s, headport=n, color=gray]
BB8531 [shape=record label="{28212: write-variable[v5,'transaction']*|28213: read-variable['transaction',v9,-]|28214: read-property[v9,'perform',-]|28215: \<variable-non-null-undef\>['transaction']|28216: read-variable['runBatchedUpdates',v10,-]|28217: constant[null,v11]|28218: read-variable['transaction',v12,-]}" ] 
BB8531 -> BB8532 [tailport=s, headport=n, headlabel="      8532"]
BB8531 -> BB8543 [tailport=s, headport=n, color=gray]
BB8532 [shape=record label="{28219: call-transaction.perform [v9,'perform',v10,v11,v12,-]*}" ] 
BB8532 -> BB8533 [tailport=s, headport=n, headlabel="      8533"]
BB8532 -> BB8543 [tailport=s, headport=n, color=gray]
BB8533 [shape=record label="{28220: read-variable['ReactUpdatesFlushTransaction',v14,-]|28221: read-property[v14,'release',-]|28222: \<variable-non-null-undef\>['ReactUpdatesFlushTransaction']|28223: read-variable['transaction',v15,-]}" ] 
BB8533 -> BB8534 [tailport=s, headport=n, headlabel="      8534"]
BB8533 -> BB8543 [tailport=s, headport=n, color=gray]
BB8534 [shape=record label="{28224: call-ReactUpdatesFlushTransaction.release [v14,'release',v15,-]*}" ] 
BB8534 -> BB8535 [tailport=s, headport=n]
BB8534 -> BB8543 [tailport=s, headport=n, color=gray]
BB8535 [shape=record label="{28225: read-variable['asapEnqueued',v5,-]|28226: if[v5](true-block:8536,false-block:8525)}" ] 
BB8535 -> BB8536 [tailport=s, headport=n, headlabel="      8536"]
BB8535 -> BB8525 [tailport=s, headport=n]
BB8535 -> BB8543 [tailport=s, headport=n, color=gray]
BB8536 [shape=record label="{28227: constant[false,v6]|28228: write-variable[v6,'asapEnqueued']*|28229: read-variable['asapCallbackQueue',v7,-]|28230: write-variable[v7,'queue']*|28231: read-variable['CallbackQueue',v10,-]|28232: read-property[v10,'getPooled',-]|28233: \<variable-non-null-undef\>['CallbackQueue']}" ] 
BB8536 -> BB8537 [tailport=s, headport=n, headlabel="      8537"]
BB8536 -> BB8543 [tailport=s, headport=n, color=gray]
BB8537 [shape=record label="{28234: call-CallbackQueue.getPooled [v10,'getPooled',v8]}" ] 
BB8537 -> BB8538 [tailport=s, headport=n, headlabel="      8538"]
BB8537 -> BB8543 [tailport=s, headport=n, color=gray]
BB8538 [shape=record label="{28235: write-variable[v8,'asapCallbackQueue']*|28236: read-variable['queue',v12,-]|28237: read-property[v12,'notifyAll',-]|28238: \<variable-non-null-undef\>['queue']}" ] 
BB8538 -> BB8539 [tailport=s, headport=n, headlabel="      8539"]
BB8538 -> BB8543 [tailport=s, headport=n, color=gray]
BB8539 [shape=record label="{28239: call-queue.notifyAll [v12,'notifyAll',-]*}" ] 
BB8539 -> BB8540 [tailport=s, headport=n, headlabel="      8540"]
BB8539 -> BB8543 [tailport=s, headport=n, color=gray]
BB8540 [shape=record label="{28240: read-variable['CallbackQueue',v14,-]|28241: read-property[v14,'release',-]|28242: \<variable-non-null-undef\>['CallbackQueue']|28243: read-variable['queue',v15,-]}" ] 
BB8540 -> BB8541 [tailport=s, headport=n, headlabel="      8541"]
BB8540 -> BB8543 [tailport=s, headport=n, color=gray]
BB8541 [shape=record label="{28244: call-CallbackQueue.release [v14,'release',v15,-]*}" ] 
BB8541 -> BB8525 [tailport=s, headport=n]
BB8541 -> BB8543 [tailport=s, headport=n, color=gray]
BB8542 [shape=record label="{28245: return[v1]}" ] 
BB8543 [shape=record label="{28246: exceptional-return}" ] 
//#$~ 14952
}
