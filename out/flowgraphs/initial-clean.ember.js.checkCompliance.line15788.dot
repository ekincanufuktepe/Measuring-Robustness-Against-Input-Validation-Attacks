digraph {
rankdir="TD"
BB_entry753[shape=none,label=""];
BB_entry753 -> BB8854 [tailport=s, headport=n, headlabel="    8854"]
BB8854 [shape=record label="{30499: constant[undefined,v1]|30500: vardecl['a']|30501: vardecl['obj']|30502: vardecl['key']}" ] 
BB8854 -> BB8855 [tailport=s, headport=n, headlabel="      8855"]
BB8855 [shape=record label="{30503: read-variable['defineProperty',v4,v2]|30504: ![v4,v3]|30505: if[v3](true-block:8856,false-block:8857)}" ] 
BB8855 -> BB8856 [tailport=s, headport=n, headlabel="      8856"]
BB8855 -> BB8857 [tailport=s, headport=n, headlabel="      8857"]
BB8855 -> BB8883 [tailport=s, headport=n, color=gray, headlabel="      8883"]
BB8856 [shape=record label="{30506: constant[undefined,v1]}" ] 
BB8856 -> BB8882 [tailport=s, headport=n, headlabel="      8882"]
BB8857 [shape=record label="{30507: constant[5.0,v5]|30508: write-variable[v5,'a']*|30509: new[v6]|30510: write-variable[v6,'obj']*|30511: read-variable['defineProperty',v8,v7]|30512: read-variable['obj',v9,v2]|30513: constant[\"a\",v10]|30514: new[v11]|30515: constant[true,v12]|30516: write-property[v11,'configurable',v12]|30517: constant[true,v13]|30518: write-property[v11,'enumerable',v13]|30519: function-expr[function ( ),v14]|30520: write-property[v11,'get',v14]|30521: function-expr[function ( v ),v15]|30522: write-property[v11,'set',v15]}" ] 
BB8857 -> BB8858 [tailport=s, headport=n, headlabel="      8858"]
BB8857 -> BB8878 [tailport=s, headport=n, color=gray, headlabel="      8878"]
BB8858 [shape=record label="{30523: call-defineProperty [v7,v8,v9,v10,v11,-]*}" ] 
BB8858 -> BB8859 [tailport=s, headport=n, headlabel="      8859"]
BB8858 -> BB8878 [tailport=s, headport=n, color=gray]
BB8859 [shape=record label="{30524: read-variable['obj',v19,v2]|30525: read-property[v19,'a',v17]|30526: \<variable-non-null-undef\>['obj']|30527: constant[5.0,v18]|30528: !==[v17,v18,v16]|30529: if[v16](true-block:8860,false-block:8861)}" ] 
BB8859 -> BB8860 [tailport=s, headport=n, headlabel="      8860"]
BB8859 -> BB8861 [tailport=s, headport=n, headlabel="      8861"]
BB8859 -> BB8878 [tailport=s, headport=n, color=gray]
BB8860 [shape=record label="{30530: constant[undefined,v1]}" ] 
BB8860 -> BB8882 [tailport=s, headport=n]
BB8861 [shape=record label="{30531: read-variable['obj',v21,v2]|30532: constant[10.0,v20]|30533: write-property[v21,'a',v20]|30534: \<variable-non-null-undef\>['obj']*|30535: read-variable['a',v23,v2]|30536: constant[10.0,v24]|30537: !==[v23,v24,v22]|30538: if[v22](true-block:8862,false-block:8863)}" ] 
BB8861 -> BB8862 [tailport=s, headport=n, headlabel="      8862"]
BB8861 -> BB8863 [tailport=s, headport=n, headlabel="      8863"]
BB8861 -> BB8878 [tailport=s, headport=n, color=gray]
BB8862 [shape=record label="{30539: constant[undefined,v1]}" ] 
BB8862 -> BB8882 [tailport=s, headport=n]
BB8863 [shape=record label="{30540: read-variable['defineProperty',v26,v25]|30541: read-variable['obj',v27,v2]|30542: constant[\"a\",v28]|30543: new[v29]|30544: constant[true,v30]|30545: write-property[v29,'configurable',v30]|30546: constant[false,v31]|30547: write-property[v29,'enumerable',v31]|30548: constant[true,v32]|30549: write-property[v29,'writable',v32]|30550: constant[true,v33]|30551: write-property[v29,'value',v33]}" ] 
BB8863 -> BB8864 [tailport=s, headport=n, headlabel="      8864"]
BB8863 -> BB8878 [tailport=s, headport=n, color=gray]
BB8864 [shape=record label="{30552: call-defineProperty [v25,v26,v27,v28,v29,-]*}" ] 
BB8864 -> BB8865 [tailport=s, headport=n, headlabel="      8865"]
BB8864 -> BB8878 [tailport=s, headport=n, color=gray]
BB8865 [shape=record label="{30553: read-variable['obj',v35,v2]}" ] 
BB8865 -> BB8866 [tailport=s, headport=n, headlabel="      8866"]
BB8865 -> BB8878 [tailport=s, headport=n, color=gray]
BB8866 [shape=record label="{30554: begin-for-in[v35,v36]}" ] 
BB8866 -> BB8867 [tailport=s, headport=n, headlabel="      8867"]
BB8866 -> BB8878 [tailport=s, headport=n, color=gray]
BB8867 [shape=record label="{30555: has-next[v36,v37]|30556: if[v37](true-block:8868,false-block:8871)}" ] 
BB8867 -> BB8868 [tailport=s, headport=n, headlabel="      8868"]
BB8867 -> BB8871 [tailport=s, headport=n, headlabel="      8871"]
BB8868 [shape=record label="{30557: next-property[v36,v38]|30558: write-variable[v38,'key']|30559: read-variable['key',v40,v2]|30560: constant[\"a\",v41]|30561: ===[v40,v41,v39]|30562: if[v39](true-block:8869,false-block:8870)}" ] 
BB8868 -> BB8869 [tailport=s, headport=n, headlabel="      8869"]
BB8868 -> BB8870 [tailport=s, headport=n, headlabel="      8870"]
BB8868 -> BB8878 [tailport=s, headport=n, color=gray]
BB8869 [shape=record label="{30563: constant[undefined,v1]}" ] 
BB8869 -> BB8882 [tailport=s, headport=n]
BB8870 [shape=record label="{30564: end-for-in(begin-node:30554)}" ] 
BB8870 -> BB8867 [tailport=s, headport=n]
BB8871 [shape=record label="{30565: read-variable['obj',v42,v2]|30566: read-property[v42,'a',v40]|30567: \<variable-non-null-undef\>['obj']|30568: constant[true,v41]|30569: !==[v40,v41,v39]|30570: if[v39](true-block:8872,false-block:8873)}" ] 
BB8871 -> BB8872 [tailport=s, headport=n, headlabel="      8872"]
BB8871 -> BB8873 [tailport=s, headport=n, headlabel="      8873"]
BB8871 -> BB8878 [tailport=s, headport=n, color=gray]
BB8872 [shape=record label="{30571: constant[undefined,v1]}" ] 
BB8872 -> BB8882 [tailport=s, headport=n]
BB8873 [shape=record label="{30572: read-variable['defineProperty',v44,v43]|30573: read-variable['obj',v45,v2]|30574: constant[\"a\",v46]|30575: new[v47]|30576: constant[false,v48]|30577: write-property[v47,'enumerable',v48]}" ] 
BB8873 -> BB8874 [tailport=s, headport=n, headlabel="      8874"]
BB8873 -> BB8878 [tailport=s, headport=n, color=gray]
BB8874 [shape=record label="{30578: call-defineProperty [v43,v44,v45,v46,v47,-]*}" ] 
BB8874 -> BB8875 [tailport=s, headport=n, headlabel="      8875"]
BB8874 -> BB8878 [tailport=s, headport=n, color=gray]
BB8875 [shape=record label="{30579: read-variable['obj',v52,v2]|30580: read-property[v52,'a',v50]|30581: \<variable-non-null-undef\>['obj']|30582: constant[true,v51]|30583: !==[v50,v51,v49]|30584: if[v49](true-block:8876,false-block:8877)}" ] 
BB8875 -> BB8876 [tailport=s, headport=n, headlabel="      8876"]
BB8875 -> BB8877 [tailport=s, headport=n, headlabel="      8877"]
BB8875 -> BB8878 [tailport=s, headport=n, color=gray]
BB8876 [shape=record label="{30585: constant[undefined,v1]}" ] 
BB8876 -> BB8882 [tailport=s, headport=n]
BB8877 [shape=record label="{30586: read-variable['defineProperty',v1,v2]}" ] 
BB8877 -> BB8882 [tailport=s, headport=n]
BB8877 -> BB8878 [tailport=s, headport=n, color=gray]
BB8878 [shape=record label="{30587: catch[e,v5]|30588: begin-with[v5]}" ] 
BB8878 -> BB8879 [tailport=s, headport=n, headlabel="      8879"]
BB8878 -> BB8883 [tailport=s, headport=n, color=gray]
BB8879 [shape=record label="{30589: constant[undefined,v1]}" ] 
BB8879 -> BB8882 [tailport=s, headport=n]
BB8880 [shape=record label="{30590: end-with}" ] 
BB8880 -> BB8883 [tailport=s, headport=n]
BB8881 [shape=record label="{30591: end-with}" ] 
BB8881 -> BB8882 [tailport=s, headport=n]
BB8882 [shape=record label="{30592: return[v1]}" ] 
BB8883 [shape=record label="{30593: exceptional-return}" ] 
//#$~ 15833
}
