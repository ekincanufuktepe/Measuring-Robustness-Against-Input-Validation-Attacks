digraph {
rankdir="TD"
BB_entry900[shape=none,label=""];
BB_entry900 -> BB10739 [tailport=s, headport=n, headlabel="    10739"]
BB10739 [shape=record label="{36755: constant[undefined,v1]|36756: vardecl['i']|36757: vardecl['l']}" ] 
BB10739 -> BB10740 [tailport=s, headport=n, headlabel="      10740"]
BB10740 [shape=record label="{36758: typeof['allowedKeys',v3]|36759: constant[\"undefined\",v4]|36760: ===[v3,v4,v2]|36761: if[v2](true-block:10741,false-block:10747)}" ] 
BB10740 -> BB10741 [tailport=s, headport=n, headlabel="      10741"]
BB10740 -> BB10747 [tailport=s, headport=n, headlabel="      10747"]
BB10740 -> BB10762 [tailport=s, headport=n, color=gray, headlabel="      10762"]
BB10741 [shape=record label="{36762: read-variable['POINTER_EVENT_TYPE_REGEX',v7,-]|36763: read-property[v7,'test',-]|36764: \<variable-non-null-undef\>['POINTER_EVENT_TYPE_REGEX']|36765: read-variable['event',v9,-]|36766: read-property[v9,'type',v8]|36767: \<variable-non-null-undef\>['event']}" ] 
BB10741 -> BB10742 [tailport=s, headport=n, headlabel="      10742"]
BB10741 -> BB10762 [tailport=s, headport=n, color=gray]
BB10742 [shape=record label="{36768: call-POINTER_EVENT_TYPE_REGEX.test [v7,'test',v8,v5]}" ] 
BB10742 -> BB10743 [tailport=s, headport=n, headlabel="      10743"]
BB10742 -> BB10762 [tailport=s, headport=n, color=gray]
BB10743 [shape=record label="{36769: if[v5](true-block:10744,false-block:10745)}" ] 
BB10743 -> BB10744 [tailport=s, headport=n, headlabel="      10744"]
BB10743 -> BB10745 [tailport=s, headport=n, headlabel="      10745"]
BB10744 [shape=record label="{36770: read-variable['isSimpleClick',v11,v10]|36771: read-variable['event',v12,-]}" ] 
BB10744 -> BB10746 [tailport=s, headport=n, headlabel="      10746"]
BB10744 -> BB10762 [tailport=s, headport=n, color=gray]
BB10745 [shape=record label="{36772: constant[\"\",v10]|36773: write-variable[v10,'allowedKeys']*}" ] 
BB10745 -> BB10747 [tailport=s, headport=n]
BB10746 [shape=record label="{36774: call-isSimpleClick [v10,v11,v12,v1]}" ] 
BB10746 -> BB10761 [tailport=s, headport=n, headlabel="      10761"]
BB10746 -> BB10762 [tailport=s, headport=n, color=gray]
BB10747 [shape=record label="{36775: read-variable['allowedKeys',v9,-]|36776: read-property[v9,'indexOf',-]|36777: \<variable-non-null-undef\>['allowedKeys']|36778: constant[\"any\",v10]}" ] 
BB10747 -> BB10748 [tailport=s, headport=n, headlabel="      10748"]
BB10747 -> BB10762 [tailport=s, headport=n, color=gray]
BB10748 [shape=record label="{36779: call-allowedKeys.indexOf [v9,'indexOf',v10,v6]}" ] 
BB10748 -> BB10749 [tailport=s, headport=n, headlabel="      10749"]
BB10748 -> BB10762 [tailport=s, headport=n, color=gray]
BB10749 [shape=record label="{36780: constant[0.0,v7]|36781: \>=[v6,v7,v5]|36782: if[v5](true-block:10750,false-block:10751)}" ] 
BB10749 -> BB10750 [tailport=s, headport=n, headlabel="      10750"]
BB10749 -> BB10751 [tailport=s, headport=n, headlabel="      10751"]
BB10749 -> BB10762 [tailport=s, headport=n, color=gray]
BB10750 [shape=record label="{36783: constant[true,v1]}" ] 
BB10750 -> BB10761 [tailport=s, headport=n]
BB10751 [shape=record label="{36784: constant[0.0,v12]|36785: write-variable[v12,'i']*|36786: read-variable['keys',v14,-]|36787: read-property[v14,'length',v13]|36788: \<variable-non-null-undef\>['keys']|36789: write-variable[v13,'l']*}" ] 
BB10751 -> BB10752 [tailport=s, headport=n, headlabel="      10752"]
BB10751 -> BB10762 [tailport=s, headport=n, color=gray]
BB10752 [shape=record label="{36790: read-variable['i',v15,-]|36791: read-variable['l',v16,-]|36792: \<[v15,v16,v11]|36793: if[v11](true-block:10753,false-block:10754)}" ] 
BB10752 -> BB10753 [tailport=s, headport=n, headlabel="      10753"]
BB10752 -> BB10754 [tailport=s, headport=n, headlabel="      10754"]
BB10752 -> BB10762 [tailport=s, headport=n, color=gray]
BB10753 [shape=record label="{36794: read-variable['event',v18,-]|36795: read-variable['keys',v22,-]|36796: read-variable['i',v23,-]|36797: read-property[v22,v23,v20]|36798: \<variable-non-null-undef\>['keys']|36799: constant[\"Key\",v21]|36800: +[v20,v21,v19]|36801: read-property[v18,v19,v17]|36802: \<variable-non-null-undef\>['event']|36803: if[v17](true-block:10755,false-block:10758)}" ] 
BB10753 -> BB10758 [tailport=s, headport=n, headlabel="      10758"]
BB10753 -> BB10755 [tailport=s, headport=n, headlabel="      10755"]
BB10753 -> BB10762 [tailport=s, headport=n, color=gray]
BB10754 [shape=record label="{36804: constant[true,v1]}" ] 
BB10754 -> BB10761 [tailport=s, headport=n]
BB10755 [shape=record label="{36805: read-variable['allowedKeys',v27,-]|36806: read-property[v27,'indexOf',-]|36807: \<variable-non-null-undef\>['allowedKeys']|36808: read-variable['keys',v29,-]|36809: read-variable['i',v30,-]|36810: read-property[v29,v30,v28]|36811: \<variable-non-null-undef\>['keys']}" ] 
BB10755 -> BB10756 [tailport=s, headport=n, headlabel="      10756"]
BB10755 -> BB10762 [tailport=s, headport=n, color=gray]
BB10756 [shape=record label="{36812: call-allowedKeys.indexOf [v27,'indexOf',v28,v24]}" ] 
BB10756 -> BB10757 [tailport=s, headport=n, headlabel="      10757"]
BB10756 -> BB10762 [tailport=s, headport=n, color=gray]
BB10757 [shape=record label="{36813: constant[-1.0,v25]|36814: ===[v24,v25,v17]}" ] 
BB10757 -> BB10758 [tailport=s, headport=n]
BB10757 -> BB10762 [tailport=s, headport=n, color=gray]
BB10758 [shape=record label="{36815: if[v17](true-block:10759,false-block:10760)}" ] 
BB10758 -> BB10759 [tailport=s, headport=n, headlabel="      10759"]
BB10758 -> BB10760 [tailport=s, headport=n, headlabel="      10760"]
BB10759 [shape=record label="{36816: constant[false,v1]}" ] 
BB10759 -> BB10761 [tailport=s, headport=n]
BB10760 [shape=record label="{36817: constant[1.0,v24]|36818: read-variable['i',v25,-]|36819: +[v25,v26]|36820: +[v26,v24,v27]|36821: write-variable[v27,'i']}" ] 
BB10760 -> BB10752 [tailport=s, headport=n]
BB10760 -> BB10762 [tailport=s, headport=n, color=gray]
BB10761 [shape=record label="{36822: return[v1]}" ] 
BB10762 [shape=record label="{36823: exceptional-return}" ] 
//#$~ 19117
}
