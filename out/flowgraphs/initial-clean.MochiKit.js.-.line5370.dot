digraph {
rankdir="TD"
BB_entry506[shape=none,label=""];
BB_entry506 -> BB7614 [tailport=s, headport=n, headlabel="    7614"]
BB7614 [shape=record label="{27872: constant[undefined,v1]|27873: vardecl['obj']|27874: vardecl['func']}" ] 
BB7614 -> BB7615 [tailport=s, headport=n, headlabel="      7615"]
BB7615 [shape=record label="{27875: constant[null,v2]|27876: write-variable[v2,'obj']*|27877: constant[null,v3]|27878: write-variable[v3,'func']*|27879: typeof['_57d',v5]|27880: constant[\"undefined\",v6]|27881: !=[v5,v6,v4]|27882: if[v4](true-block:7616,false-block:7617)}" ] 
BB7615 -> BB7616 [tailport=s, headport=n, headlabel="      7616"]
BB7615 -> BB7617 [tailport=s, headport=n, headlabel="      7617"]
BB7615 -> BB7633 [tailport=s, headport=n, color=gray, headlabel="      7633"]
BB7616 [shape=record label="{27883: read-variable['_57c',v7,-]|27884: write-variable[v7,'obj']*|27885: read-variable['_57d',v8,-]|27886: write-variable[v8,'func']*|27887: typeof['_57d',v10]|27888: constant[\"string\",v11]|27889: ==[v10,v11,v9]|27890: if[v9](true-block:7618,false-block:7619)}" ] 
BB7616 -> BB7618 [tailport=s, headport=n, headlabel="      7618"]
BB7616 -> BB7619 [tailport=s, headport=n, headlabel="      7619"]
BB7616 -> BB7633 [tailport=s, headport=n, color=gray]
BB7617 [shape=record label="{27891: typeof['_57c',v8]|27892: constant[\"function\",v9]|27893: !=[v8,v9,v7]|27894: if[v7](true-block:7626,false-block:7627)}" ] 
BB7617 -> BB7626 [tailport=s, headport=n, headlabel="      7626"]
BB7617 -> BB7627 [tailport=s, headport=n, headlabel="      7627"]
BB7617 -> BB7633 [tailport=s, headport=n, color=gray]
BB7618 [shape=record label="{27895: read-variable['_57c',v16,-]|27896: read-variable['_57d',v17,-]|27897: read-property[v16,v17,v15]|27898: \<variable-non-null-undef\>['_57c']|27899: typeof[v15,v13]|27900: constant[\"function\",v14]|27901: !=[v13,v14,v12]|27902: if[v12](true-block:7620,false-block:7630)}" ] 
BB7618 -> BB7620 [tailport=s, headport=n, headlabel="      7620"]
BB7618 -> BB7630 [tailport=s, headport=n, headlabel="      7630"]
BB7618 -> BB7633 [tailport=s, headport=n, color=gray]
BB7619 [shape=record label="{27903: typeof['_57d',v13]|27904: constant[\"function\",v14]|27905: !=[v13,v14,v12]|27906: if[v12](true-block:7623,false-block:7630)}" ] 
BB7619 -> BB7623 [tailport=s, headport=n, headlabel="      7623"]
BB7619 -> BB7630 [tailport=s, headport=n]
BB7619 -> BB7633 [tailport=s, headport=n, color=gray]
BB7620 [shape=record label="{27907: read-variable['Error',v19,-]|27908: constant[\"'funcOrStr' must be a function on 'objOrFunc'\",v20]}" ] 
BB7620 -> BB7621 [tailport=s, headport=n, headlabel="      7621"]
BB7620 -> BB7633 [tailport=s, headport=n, color=gray]
BB7621 [shape=record label="{27909: construct [-,v19,v20,v18]}" ] 
BB7621 -> BB7622 [tailport=s, headport=n, headlabel="      7622"]
BB7621 -> BB7633 [tailport=s, headport=n, color=gray]
BB7622 [shape=record label="{27910: throw[v18]*}" ] 
BB7622 -> BB7630 [tailport=s, headport=n]
BB7622 -> BB7633 [tailport=s, headport=n, color=gray]
BB7623 [shape=record label="{27911: read-variable['Error',v16,-]|27912: constant[\"'funcOrStr' must be a function or string\",v17]}" ] 
BB7623 -> BB7624 [tailport=s, headport=n, headlabel="      7624"]
BB7623 -> BB7633 [tailport=s, headport=n, color=gray]
BB7624 [shape=record label="{27913: construct [-,v16,v17,v15]}" ] 
BB7624 -> BB7625 [tailport=s, headport=n, headlabel="      7625"]
BB7624 -> BB7633 [tailport=s, headport=n, color=gray]
BB7625 [shape=record label="{27914: throw[v15]*}" ] 
BB7625 -> BB7630 [tailport=s, headport=n]
BB7625 -> BB7633 [tailport=s, headport=n, color=gray]
BB7626 [shape=record label="{27915: read-variable['Error',v11,-]|27916: constant[\"'objOrFunc' must be a function if 'funcOrStr' is not given\",v12]}" ] 
BB7626 -> BB7628 [tailport=s, headport=n, headlabel="      7628"]
BB7626 -> BB7633 [tailport=s, headport=n, color=gray]
BB7627 [shape=record label="{27917: read-variable['_57c',v10,-]|27918: write-variable[v10,'func']*}" ] 
BB7627 -> BB7630 [tailport=s, headport=n]
BB7627 -> BB7633 [tailport=s, headport=n, color=gray]
BB7628 [shape=record label="{27919: construct [-,v11,v12,v10]}" ] 
BB7628 -> BB7629 [tailport=s, headport=n, headlabel="      7629"]
BB7628 -> BB7633 [tailport=s, headport=n, color=gray]
BB7629 [shape=record label="{27920: throw[v10]*}" ] 
BB7629 -> BB7630 [tailport=s, headport=n]
BB7629 -> BB7633 [tailport=s, headport=n, color=gray]
BB7630 [shape=record label="{27921: read-variable['Array',v7,-]|27922: read-variable['obj',v8,-]|27923: read-variable['func',v9,-]}" ] 
BB7630 -> BB7631 [tailport=s, headport=n, headlabel="      7631"]
BB7630 -> BB7633 [tailport=s, headport=n, color=gray]
BB7631 [shape=record label="{27924: construct [-,v7,v8,v9,v1]}" ] 
BB7631 -> BB7632 [tailport=s, headport=n, headlabel="      7632"]
BB7631 -> BB7633 [tailport=s, headport=n, color=gray]
BB7632 [shape=record label="{27925: return[v1]}" ] 
BB7633 [shape=record label="{27926: exceptional-return}" ] 
//#$~ 5392
}
