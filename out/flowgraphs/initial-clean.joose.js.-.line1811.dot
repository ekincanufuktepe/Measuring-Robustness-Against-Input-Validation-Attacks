digraph {
rankdir="TD"
BB_entry189[shape=none,label=""];
BB_entry189 -> BB1574 [tailport=s, headport=n, headlabel="    1574"]
BB1574 [shape=record label="{4625: constant[undefined,v1]|4626: vardecl['name']|4627: vardecl['_name']|4628: vardecl['value']|4629: vardecl['isSet']|4630: vardecl['props']|4631: vardecl['init']|4632: vardecl['setterName']}" ] 
BB1574 -> BB1575 [tailport=s, headport=n, headlabel="      1575"]
BB1575 [shape=record label="{4633: read-variable['this',v4,-]|4634: read-property[v4,'initializerName',-]}" ] 
BB1575 -> BB1576 [tailport=s, headport=n, headlabel="      1576"]
BB1575 -> BB1603 [tailport=s, headport=n, color=gray, headlabel="      1603"]
BB1576 [shape=record label="{4635: call-this.initializerName [v4,'initializerName',v2]}" ] 
BB1576 -> BB1577 [tailport=s, headport=n, headlabel="      1577"]
BB1576 -> BB1603 [tailport=s, headport=n, color=gray]
BB1577 [shape=record label="{4636: write-variable[v2,'name']*|4637: read-variable['this',v7,-]|4638: read-property[v7,'getName',-]}" ] 
BB1577 -> BB1578 [tailport=s, headport=n, headlabel="      1578"]
BB1577 -> BB1603 [tailport=s, headport=n, color=gray]
BB1578 [shape=record label="{4639: call-this.getName [v7,'getName',v5]}" ] 
BB1578 -> BB1579 [tailport=s, headport=n, headlabel="      1579"]
BB1578 -> BB1603 [tailport=s, headport=n, color=gray]
BB1579 [shape=record label="{4640: write-variable[v5,'_name']*|4641: constant[false,v8]|4642: write-variable[v8,'isSet']*|4643: typeof['paras',v10]|4644: constant[\"undefined\",v11]|4645: !=[v10,v11,v9]|4646: if[v9](true-block:1580,false-block:1581)}" ] 
BB1579 -> BB1581 [tailport=s, headport=n, headlabel="      1581"]
BB1579 -> BB1580 [tailport=s, headport=n, headlabel="      1580"]
BB1579 -> BB1603 [tailport=s, headport=n, color=gray]
BB1580 [shape=record label="{4647: read-variable['paras',v15,-]|4648: read-variable['name',v16,-]|4649: read-property[v15,v16,v14]|4650: \<variable-non-null-undef\>['paras']|4651: typeof[v14,v12]|4652: constant[\"undefined\",v13]|4653: !=[v12,v13,v9]}" ] 
BB1580 -> BB1581 [tailport=s, headport=n]
BB1580 -> BB1603 [tailport=s, headport=n, color=gray]
BB1581 [shape=record label="{4654: if[v9](true-block:1582,false-block:1583)}" ] 
BB1581 -> BB1582 [tailport=s, headport=n, headlabel="      1582"]
BB1581 -> BB1583 [tailport=s, headport=n, headlabel="      1583"]
BB1582 [shape=record label="{4655: read-variable['paras',v13,-]|4656: read-variable['name',v14,-]|4657: read-property[v13,v14,v12]|4658: \<variable-non-null-undef\>['paras']|4659: write-variable[v12,'value']*|4660: constant[true,v15]|4661: write-variable[v15,'isSet']*}" ] 
BB1582 -> BB1593 [tailport=s, headport=n, headlabel="      1593"]
BB1582 -> BB1603 [tailport=s, headport=n, color=gray]
BB1583 [shape=record label="{4662: read-variable['this',v14,-]|4663: read-property[v14,'getProps',-]}" ] 
BB1583 -> BB1584 [tailport=s, headport=n, headlabel="      1584"]
BB1583 -> BB1603 [tailport=s, headport=n, color=gray]
BB1584 [shape=record label="{4664: call-this.getProps [v14,'getProps',v12]}" ] 
BB1584 -> BB1585 [tailport=s, headport=n, headlabel="      1585"]
BB1584 -> BB1603 [tailport=s, headport=n, color=gray]
BB1585 [shape=record label="{4665: write-variable[v12,'props']*|4666: read-variable['props',v16,-]|4667: read-property[v16,'init',v15]|4668: \<variable-non-null-undef\>['props']|4669: write-variable[v15,'init']*|4670: typeof['init',v18]|4671: constant[\"function\",v19]|4672: ==[v18,v19,v17]|4673: if[v17](true-block:1586,false-block:1587)}" ] 
BB1585 -> BB1587 [tailport=s, headport=n, headlabel="      1587"]
BB1585 -> BB1586 [tailport=s, headport=n, headlabel="      1586"]
BB1585 -> BB1603 [tailport=s, headport=n, color=gray]
BB1586 [shape=record label="{4674: read-variable['props',v21,-]|4675: read-property[v21,'lazy',v20]|4676: \<variable-non-null-undef\>['props']|4677: ![v20,v17]}" ] 
BB1586 -> BB1587 [tailport=s, headport=n]
BB1586 -> BB1603 [tailport=s, headport=n, color=gray]
BB1587 [shape=record label="{4678: if[v17](true-block:1588,false-block:1589)}" ] 
BB1587 -> BB1588 [tailport=s, headport=n, headlabel="      1588"]
BB1587 -> BB1589 [tailport=s, headport=n, headlabel="      1589"]
BB1588 [shape=record label="{4679: read-variable['init',v22,-]|4680: read-property[v22,'call',-]|4681: \<variable-non-null-undef\>['init']|4682: read-variable['object',v23,-]}" ] 
BB1588 -> BB1590 [tailport=s, headport=n, headlabel="      1590"]
BB1588 -> BB1603 [tailport=s, headport=n, color=gray]
BB1589 [shape=record label="{4683: read-variable['props',v21,-]|4684: read-property[v21,'required',v20]|4685: \<variable-non-null-undef\>['props']|4686: if[v20](true-block:1592,false-block:1593)}" ] 
BB1589 -> BB1592 [tailport=s, headport=n, headlabel="      1592"]
BB1589 -> BB1593 [tailport=s, headport=n]
BB1589 -> BB1603 [tailport=s, headport=n, color=gray]
BB1590 [shape=record label="{4687: call-init.call [v22,'call',v23,v20]}" ] 
BB1590 -> BB1591 [tailport=s, headport=n, headlabel="      1591"]
BB1590 -> BB1603 [tailport=s, headport=n, color=gray]
BB1591 [shape=record label="{4688: write-variable[v20,'value']*|4689: constant[true,v24]|4690: write-variable[v24,'isSet']*}" ] 
BB1591 -> BB1593 [tailport=s, headport=n]
BB1592 [shape=record label="{4691: constant[\"Required initialization parameter missing: \",v29]|4692: read-variable['name',v30,-]|4693: +[v29,v30,v27]|4694: constant[\"(While initializing \",v28]|4695: +[v27,v28,v25]|4696: read-variable['object',v26,-]|4697: +[v25,v26,v23]|4698: constant[\")\",v24]|4699: +[v23,v24,v22]|4700: throw[v22]*}" ] 
BB1592 -> BB1593 [tailport=s, headport=n]
BB1592 -> BB1603 [tailport=s, headport=n, color=gray]
BB1593 [shape=record label="{4701: read-variable['isSet',v12,-]|4702: if[v12](true-block:1594,false-block:1602)}" ] 
BB1593 -> BB1594 [tailport=s, headport=n, headlabel="      1594"]
BB1593 -> BB1602 [tailport=s, headport=n, headlabel="      1602"]
BB1593 -> BB1603 [tailport=s, headport=n, color=gray]
BB1594 [shape=record label="{4703: read-variable['this',v15,-]|4704: read-property[v15,'setterName',-]}" ] 
BB1594 -> BB1595 [tailport=s, headport=n, headlabel="      1595"]
BB1594 -> BB1603 [tailport=s, headport=n, color=gray]
BB1595 [shape=record label="{4705: call-this.setterName [v15,'setterName',v13]}" ] 
BB1595 -> BB1596 [tailport=s, headport=n, headlabel="      1596"]
BB1595 -> BB1603 [tailport=s, headport=n, color=gray]
BB1596 [shape=record label="{4706: write-variable[v13,'setterName']*|4707: read-variable['object',v19,-]|4708: read-property[v19,'meta',v18]|4709: \<variable-non-null-undef\>['object']|4710: read-property[v18,'can',-]|4711: \<property-non-null-undef\>[v19,'meta']|4712: read-variable['setterName',v20,-]}" ] 
BB1596 -> BB1597 [tailport=s, headport=n, headlabel="      1597"]
BB1596 -> BB1603 [tailport=s, headport=n, color=gray]
BB1597 [shape=record label="{4713: call-object.meta.can [v18,'can',v20,v16]}" ] 
BB1597 -> BB1598 [tailport=s, headport=n, headlabel="      1598"]
BB1597 -> BB1603 [tailport=s, headport=n, color=gray]
BB1598 [shape=record label="{4714: if[v16](true-block:1599,false-block:1600)}" ] 
BB1598 -> BB1599 [tailport=s, headport=n, headlabel="      1599"]
BB1598 -> BB1600 [tailport=s, headport=n, headlabel="      1600"]
BB1599 [shape=record label="{4715: read-variable['object',v22,-]|4716: read-variable['setterName',v23,-]|4717: read-property[v22,v23,-]|4718: \<variable-non-null-undef\>['object']|4719: read-variable['value',v24,-]}" ] 
BB1599 -> BB1601 [tailport=s, headport=n, headlabel="      1601"]
BB1599 -> BB1603 [tailport=s, headport=n, color=gray]
BB1600 [shape=record label="{4720: read-variable['object',v22,-]|4721: read-variable['_name',v23,-]|4722: read-variable['value',v21,-]|4723: write-property[v22,v23,v21]|4724: \<variable-non-null-undef\>['object']*}" ] 
BB1600 -> BB1602 [tailport=s, headport=n]
BB1600 -> BB1603 [tailport=s, headport=n, color=gray]
BB1601 [shape=record label="{4725: call-null [v22,[v23],v24,-]*}" ] 
BB1601 -> BB1602 [tailport=s, headport=n]
BB1601 -> BB1603 [tailport=s, headport=n, color=gray]
BB1602 [shape=record label="{4726: return[v1]}" ] 
BB1603 [shape=record label="{4727: exceptional-return}" ] 
//#$~ 1840
}
