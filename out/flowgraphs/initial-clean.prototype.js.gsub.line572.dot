digraph {
rankdir="TD"
BB_entry71[shape=none,label=""];
BB_entry71 -> BB821 [tailport=s, headport=n, headlabel="    821"]
BB821 [shape=record label="{2587: constant[undefined,v1]|2588: vardecl['result']|2589: vardecl['source']|2590: vardecl['match']}" ] 
BB821 -> BB822 [tailport=s, headport=n, headlabel="      822"]
BB822 [shape=record label="{2591: constant[\"\",v2]|2592: write-variable[v2,'result']*|2593: read-variable['this',v3,-]|2594: write-variable[v3,'source']*|2595: read-variable['prepareReplacement',v6,v5]|2596: read-variable['replacement',v7,-]}" ] 
BB822 -> BB823 [tailport=s, headport=n, headlabel="      823"]
BB822 -> BB858 [tailport=s, headport=n, color=gray, headlabel="      858"]
BB823 [shape=record label="{2597: call-prepareReplacement [v5,v6,v7,v4]}" ] 
BB823 -> BB824 [tailport=s, headport=n, headlabel="      824"]
BB823 -> BB858 [tailport=s, headport=n, color=gray]
BB824 [shape=record label="{2598: write-variable[v4,'replacement']*|2599: read-variable['Object',v10,-]|2600: read-property[v10,'isString',-]|2601: \<variable-non-null-undef\>['Object']|2602: read-variable['pattern',v11,-]}" ] 
BB824 -> BB825 [tailport=s, headport=n, headlabel="      825"]
BB824 -> BB858 [tailport=s, headport=n, color=gray]
BB825 [shape=record label="{2603: call-Object.isString [v10,'isString',v11,v8]}" ] 
BB825 -> BB826 [tailport=s, headport=n, headlabel="      826"]
BB825 -> BB858 [tailport=s, headport=n, color=gray]
BB826 [shape=record label="{2604: if[v8](true-block:827,false-block:830)}" ] 
BB826 -> BB827 [tailport=s, headport=n, headlabel="      827"]
BB826 -> BB830 [tailport=s, headport=n, headlabel="      830"]
BB827 [shape=record label="{2605: read-variable['RegExp',v14,-]|2606: read-property[v14,'escape',-]|2607: \<variable-non-null-undef\>['RegExp']|2608: read-variable['pattern',v15,-]}" ] 
BB827 -> BB828 [tailport=s, headport=n, headlabel="      828"]
BB827 -> BB858 [tailport=s, headport=n, color=gray]
BB828 [shape=record label="{2609: call-RegExp.escape [v14,'escape',v15,v12]}" ] 
BB828 -> BB829 [tailport=s, headport=n, headlabel="      829"]
BB828 -> BB858 [tailport=s, headport=n, color=gray]
BB829 [shape=record label="{2610: write-variable[v12,'pattern']*}" ] 
BB829 -> BB830 [tailport=s, headport=n]
BB830 [shape=record label="{2611: read-variable['pattern',v14,-]|2612: read-property[v14,'length',v13]|2613: \<variable-non-null-undef\>['pattern']|2614: if[v13](true-block:833,false-block:831)}" ] 
BB830 -> BB833 [tailport=s, headport=n, headlabel="      833"]
BB830 -> BB831 [tailport=s, headport=n, headlabel="      831"]
BB830 -> BB858 [tailport=s, headport=n, color=gray]
BB831 [shape=record label="{2615: read-variable['isNonEmptyRegExp',v15,v14]|2616: read-variable['pattern',v16,-]}" ] 
BB831 -> BB832 [tailport=s, headport=n, headlabel="      832"]
BB831 -> BB858 [tailport=s, headport=n, color=gray]
BB832 [shape=record label="{2617: call-isNonEmptyRegExp [v14,v15,v16,v13]}" ] 
BB832 -> BB833 [tailport=s, headport=n]
BB832 -> BB858 [tailport=s, headport=n, color=gray]
BB833 [shape=record label="{2618: ![v13,v12]|2619: if[v12](true-block:834,false-block:841)}" ] 
BB833 -> BB834 [tailport=s, headport=n, headlabel="      834"]
BB833 -> BB841 [tailport=s, headport=n, headlabel="      841"]
BB833 -> BB858 [tailport=s, headport=n, color=gray]
BB834 [shape=record label="{2620: read-variable['replacement',v16,v15]|2621: constant[\"\",v17]}" ] 
BB834 -> BB835 [tailport=s, headport=n, headlabel="      835"]
BB834 -> BB858 [tailport=s, headport=n, color=gray]
BB835 [shape=record label="{2622: call-replacement [v15,v16,v17,v14]}" ] 
BB835 -> BB836 [tailport=s, headport=n, headlabel="      836"]
BB835 -> BB858 [tailport=s, headport=n, color=gray]
BB836 [shape=record label="{2623: write-variable[v14,'replacement']*|2624: read-variable['replacement',v20,-]|2625: read-variable['source',v25,-]|2626: read-property[v25,'split',-]|2627: \<variable-non-null-undef\>['source']|2628: constant[\"\",v26]}" ] 
BB836 -> BB837 [tailport=s, headport=n, headlabel="      837"]
BB836 -> BB858 [tailport=s, headport=n, color=gray]
BB837 [shape=record label="{2629: call-source.split [v25,'split',v26,v23]}" ] 
BB837 -> BB838 [tailport=s, headport=n, headlabel="      838"]
BB837 -> BB858 [tailport=s, headport=n, color=gray]
BB838 [shape=record label="{2630: read-property[v23,'join',-]|2631: read-variable['replacement',v27,-]}" ] 
BB838 -> BB839 [tailport=s, headport=n, headlabel="      839"]
BB838 -> BB858 [tailport=s, headport=n, color=gray]
BB839 [shape=record label="{2632: call-null [v23,'join',v27,v21]}" ] 
BB839 -> BB840 [tailport=s, headport=n, headlabel="      840"]
BB839 -> BB858 [tailport=s, headport=n, color=gray]
BB840 [shape=record label="{2633: +[v20,v21,v18]|2634: read-variable['replacement',v19,-]|2635: +[v18,v19,v1]}" ] 
BB840 -> BB857 [tailport=s, headport=n, headlabel="      857"]
BB840 -> BB858 [tailport=s, headport=n, color=gray]
BB841 [shape=record label="{2636: read-variable['source',v17,-]|2637: read-property[v17,'length',v15]|2638: \<variable-non-null-undef\>['source']|2639: constant[0.0,v16]|2640: \>[v15,v16,v14]|2641: if[v14](true-block:842,false-block:843)}" ] 
BB841 -> BB842 [tailport=s, headport=n, headlabel="      842"]
BB841 -> BB843 [tailport=s, headport=n, headlabel="      843"]
BB841 -> BB858 [tailport=s, headport=n, color=gray]
BB842 [shape=record label="{2642: read-variable['source',v20,-]|2643: read-property[v20,'match',-]|2644: \<variable-non-null-undef\>['source']|2645: read-variable['pattern',v21,-]}" ] 
BB842 -> BB844 [tailport=s, headport=n, headlabel="      844"]
BB842 -> BB858 [tailport=s, headport=n, color=gray]
BB843 [shape=record label="{2646: read-variable['result',v1,-]}" ] 
BB843 -> BB857 [tailport=s, headport=n]
BB843 -> BB858 [tailport=s, headport=n, color=gray]
BB844 [shape=record label="{2647: call-source.match [v20,'match',v21,v18]}" ] 
BB844 -> BB845 [tailport=s, headport=n, headlabel="      845"]
BB844 -> BB858 [tailport=s, headport=n, color=gray]
BB845 [shape=record label="{2648: write-variable[v18,'match']*|2649: read-variable['match',v22,-]|2650: if[v22](true-block:846,false-block:847)}" ] 
BB845 -> BB847 [tailport=s, headport=n, headlabel="      847"]
BB845 -> BB846 [tailport=s, headport=n, headlabel="      846"]
BB845 -> BB858 [tailport=s, headport=n, color=gray]
BB846 [shape=record label="{2651: read-variable['match',v26,-]|2652: constant[0.0,v27]|2653: read-property[v26,v27,v25]|2654: \<variable-non-null-undef\>['match']|2655: read-property[v25,'length',v23]|2656: \<property-non-null-undef\>[v26,v27]|2657: constant[0.0,v24]|2658: \>[v23,v24,v22]}" ] 
BB846 -> BB847 [tailport=s, headport=n]
BB846 -> BB858 [tailport=s, headport=n, color=gray]
BB847 [shape=record label="{2659: if[v22](true-block:848,false-block:849)}" ] 
BB847 -> BB848 [tailport=s, headport=n, headlabel="      848"]
BB847 -> BB849 [tailport=s, headport=n, headlabel="      849"]
BB848 [shape=record label="{2660: read-variable['result',v24,-]|2661: read-variable['source',v27,-]|2662: read-property[v27,'slice',-]|2663: \<variable-non-null-undef\>['source']|2664: constant[0.0,v28]|2665: read-variable['match',v30,-]|2666: read-property[v30,'index',v29]|2667: \<variable-non-null-undef\>['match']}" ] 
BB848 -> BB850 [tailport=s, headport=n, headlabel="      850"]
BB848 -> BB858 [tailport=s, headport=n, color=gray]
BB849 [shape=record label="{2668: read-variable['result',v24,-]|2669: read-variable['source',v25,-]|2670: +[v24,v25,v23]|2671: write-variable[v23,'result']|2672: constant[\"\",v26]|2673: write-variable[v26,'source']}" ] 
BB849 -> BB841 [tailport=s, headport=n]
BB849 -> BB858 [tailport=s, headport=n, color=gray]
BB850 [shape=record label="{2674: call-source.slice [v27,'slice',v28,v29,v25]}" ] 
BB850 -> BB851 [tailport=s, headport=n, headlabel="      851"]
BB850 -> BB858 [tailport=s, headport=n, color=gray]
BB851 [shape=record label="{2675: +[v24,v25,v23]|2676: write-variable[v23,'result']*|2677: read-variable['result',v32,-]|2678: read-variable['String',v35,-]|2679: read-property[v35,'interpret',-]|2680: \<variable-non-null-undef\>['String']|2681: read-variable['replacement',v38,v37]|2682: read-variable['match',v39,-]}" ] 
BB851 -> BB852 [tailport=s, headport=n, headlabel="      852"]
BB851 -> BB858 [tailport=s, headport=n, color=gray]
BB852 [shape=record label="{2683: call-replacement [v37,v38,v39,v36]}" ] 
BB852 -> BB853 [tailport=s, headport=n, headlabel="      853"]
BB852 -> BB858 [tailport=s, headport=n, color=gray]
BB853 [shape=record label="{2684: call-String.interpret [v35,'interpret',v36,v33]}" ] 
BB853 -> BB854 [tailport=s, headport=n, headlabel="      854"]
BB853 -> BB858 [tailport=s, headport=n, color=gray]
BB854 [shape=record label="{2685: +[v32,v33,v31]|2686: write-variable[v31,'result']*|2687: read-variable['source',v42,-]|2688: read-property[v42,'slice',-]|2689: \<variable-non-null-undef\>['source']|2690: read-variable['match',v46,-]|2691: read-property[v46,'index',v44]|2692: \<variable-non-null-undef\>['match']|2693: read-variable['match',v48,-]|2694: constant[0.0,v49]|2695: read-property[v48,v49,v47]|2696: \<variable-non-null-undef\>['match']|2697: read-property[v47,'length',v45]|2698: \<property-non-null-undef\>[v48,v49]|2699: +[v44,v45,v43]}" ] 
BB854 -> BB855 [tailport=s, headport=n, headlabel="      855"]
BB854 -> BB858 [tailport=s, headport=n, color=gray]
BB855 [shape=record label="{2700: call-source.slice [v42,'slice',v43,v40]}" ] 
BB855 -> BB856 [tailport=s, headport=n, headlabel="      856"]
BB855 -> BB858 [tailport=s, headport=n, color=gray]
BB856 [shape=record label="{2701: write-variable[v40,'source']*}" ] 
BB856 -> BB841 [tailport=s, headport=n]
BB857 [shape=record label="{2702: return[v1]}" ] 
BB858 [shape=record label="{2703: exceptional-return}" ] 
//#$~ 594
}
