digraph {
rankdir="TD"
BB_entry2144[shape=none,label=""];
BB_entry2144 -> BB24578 [tailport=s, headport=n, headlabel="    24578"]
BB24578 [shape=record label="{81030: constant[undefined,v1]|81031: vardecl['SafeString']|81032: vardecl['escape']|81033: vardecl['badChars']|81034: vardecl['possible']|81035: function-decl[function escapeChar ( chr ),-]|81036: function-decl[function extend ( obj ),-]|81037: vardecl['toString']|81038: vardecl['isFunction']|81039: vardecl['isFunction']|81040: vardecl['isArray']|81041: function-decl[function escapeExpression ( string ),-]|81042: function-decl[function isEmpty ( value ),-]|81043: function-decl[function appendContextPath ( contextPath id ),-]}" ] 
BB24578 -> BB24579 [tailport=s, headport=n, headlabel="      24579"]
BB24579 [shape=record label="{81044: read-variable['__dependency1__',v3,-]|81045: read-property[v3,'default',v2]|81046: \<variable-non-null-undef\>['__dependency1__']|81047: write-variable[v2,'SafeString']*|81048: new[v4]|81049: constant[\"&amp;\",v5]|81050: write-property[v4,'&',v5]|81051: constant[\"&lt;\",v6]|81052: write-property[v4,'\<',v6]|81053: constant[\"&gt;\",v7]|81054: write-property[v4,'\>',v7]|81055: constant[\"&quot;\",v8]|81056: write-property[v4,'\"',v8]|81057: constant[\"&#x27;\",v9]|81058: write-property[v4,''',v9]|81059: constant[\"&#x60;\",v10]|81060: write-property[v4,'`',v10]|81061: write-variable[v4,'escape']*|81062: read-variable['RegExp',v12,-]|81063: constant[\"[&\\\<\\\>\\\"'`]\",v13]|81064: constant[\"g\",v14]}" ] 
BB24579 -> BB24580 [tailport=s, headport=n, headlabel="      24580"]
BB24579 -> BB24592 [tailport=s, headport=n, color=gray, headlabel="      24592"]
BB24580 [shape=record label="{81065: construct [-,v12,v13,v14,v11]}" ] 
BB24580 -> BB24581 [tailport=s, headport=n, headlabel="      24581"]
BB24580 -> BB24592 [tailport=s, headport=n, color=gray]
BB24581 [shape=record label="{81066: write-variable[v11,'badChars']*|81067: read-variable['RegExp',v16,-]|81068: constant[\"[&\\\<\\\>\\\"'`]\",v17]}" ] 
BB24581 -> BB24582 [tailport=s, headport=n, headlabel="      24582"]
BB24581 -> BB24592 [tailport=s, headport=n, color=gray]
BB24582 [shape=record label="{81069: construct [-,v16,v17,v15]}" ] 
BB24582 -> BB24583 [tailport=s, headport=n, headlabel="      24583"]
BB24582 -> BB24592 [tailport=s, headport=n, color=gray]
BB24583 [shape=record label="{81070: write-variable[v15,'possible']*|81071: read-variable['__exports__',v19,-]|81072: read-variable['extend',v18,-]|81073: write-property[v19,'extend',v18]|81074: \<variable-non-null-undef\>['__exports__']*|81075: read-variable['Object',v22,-]|81076: read-property[v22,'prototype',v21]|81077: \<variable-non-null-undef\>['Object']|81078: read-property[v21,'toString',v20]|81079: \<property-non-null-undef\>[v22,'prototype']|81080: write-variable[v20,'toString']*|81081: read-variable['__exports__',v24,-]|81082: read-variable['toString',v23,-]|81083: write-property[v24,'toString',v23]|81084: \<variable-non-null-undef\>['__exports__']*|81085: function-expr[function ( value ),v25]|81086: write-variable[v25,'isFunction']*|81087: read-variable['isFunction',v28,v27]|81088: read-variable['RegExp',v30,-]|81089: constant[\"x\",v31]}" ] 
BB24583 -> BB24584 [tailport=s, headport=n, headlabel="      24584"]
BB24583 -> BB24592 [tailport=s, headport=n, color=gray]
BB24584 [shape=record label="{81090: construct [-,v30,v31,v29]}" ] 
BB24584 -> BB24585 [tailport=s, headport=n, headlabel="      24585"]
BB24584 -> BB24592 [tailport=s, headport=n, color=gray]
BB24585 [shape=record label="{81091: call-isFunction [v27,v28,v29,v26]}" ] 
BB24585 -> BB24586 [tailport=s, headport=n, headlabel="      24586"]
BB24585 -> BB24592 [tailport=s, headport=n, color=gray]
BB24586 [shape=record label="{81092: if[v26](true-block:24587,false-block:24588)}" ] 
BB24586 -> BB24587 [tailport=s, headport=n, headlabel="      24587"]
BB24586 -> BB24588 [tailport=s, headport=n, headlabel="      24588"]
BB24587 [shape=record label="{81093: function-expr[function ( value ),v32]|81094: write-variable[v32,'isFunction']*}" ] 
BB24587 -> BB24588 [tailport=s, headport=n]
BB24588 [shape=record label="{81095: read-variable['__exports__',v33,-]|81096: read-variable['isFunction',v32,-]|81097: write-property[v33,'isFunction',v32]|81098: \<variable-non-null-undef\>['__exports__']*|81099: read-variable['Array',v35,-]|81100: read-property[v35,'isArray',v34]|81101: \<variable-non-null-undef\>['Array']|81102: if[v34](true-block:24590,false-block:24589)}" ] 
BB24588 -> BB24590 [tailport=s, headport=n, headlabel="      24590"]
BB24588 -> BB24589 [tailport=s, headport=n, headlabel="      24589"]
BB24588 -> BB24592 [tailport=s, headport=n, color=gray]
BB24589 [shape=record label="{81103: function-expr[function ( value ),v34]}" ] 
BB24589 -> BB24590 [tailport=s, headport=n]
BB24590 [shape=record label="{81104: write-variable[v34,'isArray']*|81105: read-variable['__exports__',v36,-]|81106: read-variable['isArray',v35,-]|81107: write-property[v36,'isArray',v35]|81108: \<variable-non-null-undef\>['__exports__']*|81109: read-variable['__exports__',v38,-]|81110: read-variable['escapeExpression',v37,-]|81111: write-property[v38,'escapeExpression',v37]|81112: \<variable-non-null-undef\>['__exports__']*|81113: read-variable['__exports__',v40,-]|81114: read-variable['isEmpty',v39,-]|81115: write-property[v40,'isEmpty',v39]|81116: \<variable-non-null-undef\>['__exports__']*|81117: read-variable['__exports__',v42,-]|81118: read-variable['appendContextPath',v41,-]|81119: write-property[v42,'appendContextPath',v41]|81120: \<variable-non-null-undef\>['__exports__']*}" ] 
BB24590 -> BB24591 [tailport=s, headport=n, headlabel="      24591"]
BB24590 -> BB24592 [tailport=s, headport=n, color=gray]
BB24591 [shape=record label="{81121: return[v1]}" ] 
BB24592 [shape=record label="{81122: exceptional-return}" ] 
//#$~ 46088
}
