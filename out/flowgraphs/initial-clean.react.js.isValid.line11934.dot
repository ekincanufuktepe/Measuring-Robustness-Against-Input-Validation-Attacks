digraph {
rankdir="TD"
BB_entry474[shape=none,label=""];
BB_entry474 -> BB6805 [tailport=s, headport=n, headlabel="    6805"]
BB6805 [shape=record label="{23112: constant[undefined,v1]|23113: vardecl['container']}" ] 
BB6805 -> BB6806 [tailport=s, headport=n, headlabel="      6806"]
BB6806 [shape=record label="{23114: read-variable['node',v2,-]|23115: if[v2](true-block:6807,false-block:6823)}" ] 
BB6806 -> BB6807 [tailport=s, headport=n, headlabel="      6807"]
BB6806 -> BB6823 [tailport=s, headport=n, headlabel="      6823"]
BB6806 -> BB6825 [tailport=s, headport=n, color=gray, headlabel="      6825"]
BB6807 [shape=record label="{23116: constant[\"production\",v4]|23117: constant[\"development\",v5]|23118: !==[v4,v5,v3]|23119: if[v3](true-block:6808,false-block:6809)}" ] 
BB6807 -> BB6808 [tailport=s, headport=n, headlabel="      6808"]
BB6807 -> BB6809 [tailport=s, headport=n, headlabel="      6809"]
BB6807 -> BB6825 [tailport=s, headport=n, color=gray]
BB6808 [shape=record label="{23120: read-variable['invariant',v7,v6]|23121: read-variable['internalGetID',v12,v11]|23122: read-variable['node',v13,-]}" ] 
BB6808 -> BB6810 [tailport=s, headport=n, headlabel="      6810"]
BB6808 -> BB6825 [tailport=s, headport=n, color=gray]
BB6809 [shape=record label="{23123: read-variable['invariant',v7,v6]|23124: read-variable['internalGetID',v12,v11]|23125: read-variable['node',v13,-]}" ] 
BB6809 -> BB6813 [tailport=s, headport=n, headlabel="      6813"]
BB6809 -> BB6825 [tailport=s, headport=n, color=gray]
BB6810 [shape=record label="{23126: call-internalGetID [v11,v12,v13,v9]}" ] 
BB6810 -> BB6811 [tailport=s, headport=n, headlabel="      6811"]
BB6810 -> BB6825 [tailport=s, headport=n, color=gray]
BB6811 [shape=record label="{23127: read-variable['id',v10,-]|23128: ===[v9,v10,v8]|23129: constant[\"ReactMount: Unexpected modification of `%s`\",v14]|23130: read-variable['ATTR_NAME',v15,-]}" ] 
BB6811 -> BB6812 [tailport=s, headport=n, headlabel="      6812"]
BB6811 -> BB6825 [tailport=s, headport=n, color=gray]
BB6812 [shape=record label="{23131: call-invariant [v6,v7,v8,v14,v15,-]}" ] 
BB6812 -> BB6816 [tailport=s, headport=n, headlabel="      6816"]
BB6812 -> BB6825 [tailport=s, headport=n, color=gray]
BB6813 [shape=record label="{23132: call-internalGetID [v11,v12,v13,v9]}" ] 
BB6813 -> BB6814 [tailport=s, headport=n, headlabel="      6814"]
BB6813 -> BB6825 [tailport=s, headport=n, color=gray]
BB6814 [shape=record label="{23133: read-variable['id',v10,-]|23134: ===[v9,v10,v8]}" ] 
BB6814 -> BB6815 [tailport=s, headport=n, headlabel="      6815"]
BB6814 -> BB6825 [tailport=s, headport=n, color=gray]
BB6815 [shape=record label="{23135: call-invariant [v6,v7,v8,-]}" ] 
BB6815 -> BB6816 [tailport=s, headport=n]
BB6815 -> BB6825 [tailport=s, headport=n, color=gray]
BB6816 [shape=record label="{23136: read-variable['ReactMount',v8,-]|23137: read-property[v8,'findReactContainerForID',-]|23138: \<variable-non-null-undef\>['ReactMount']|23139: read-variable['id',v9,-]}" ] 
BB6816 -> BB6817 [tailport=s, headport=n, headlabel="      6817"]
BB6816 -> BB6825 [tailport=s, headport=n, color=gray]
BB6817 [shape=record label="{23140: call-ReactMount.findReactContainerForID [v8,'findReactContainerForID',v9,v6]}" ] 
BB6817 -> BB6818 [tailport=s, headport=n, headlabel="      6818"]
BB6817 -> BB6825 [tailport=s, headport=n, color=gray]
BB6818 [shape=record label="{23141: write-variable[v6,'container']*|23142: read-variable['container',v10,-]|23143: if[v10](true-block:6819,false-block:6821)}" ] 
BB6818 -> BB6821 [tailport=s, headport=n, headlabel="      6821"]
BB6818 -> BB6819 [tailport=s, headport=n, headlabel="      6819"]
BB6818 -> BB6825 [tailport=s, headport=n, color=gray]
BB6819 [shape=record label="{23144: read-variable['containsNode',v12,v11]|23145: read-variable['container',v13,-]|23146: read-variable['node',v14,-]}" ] 
BB6819 -> BB6820 [tailport=s, headport=n, headlabel="      6820"]
BB6819 -> BB6825 [tailport=s, headport=n, color=gray]
BB6820 [shape=record label="{23147: call-containsNode [v11,v12,v13,v14,v10]}" ] 
BB6820 -> BB6821 [tailport=s, headport=n]
BB6820 -> BB6825 [tailport=s, headport=n, color=gray]
BB6821 [shape=record label="{23148: if[v10](true-block:6822,false-block:6823)}" ] 
BB6821 -> BB6822 [tailport=s, headport=n, headlabel="      6822"]
BB6821 -> BB6823 [tailport=s, headport=n]
BB6822 [shape=record label="{23149: constant[true,v1]}" ] 
BB6822 -> BB6824 [tailport=s, headport=n, headlabel="      6824"]
BB6823 [shape=record label="{23150: constant[false,v1]}" ] 
BB6823 -> BB6824 [tailport=s, headport=n]
BB6824 [shape=record label="{23151: return[v1]}" ] 
BB6825 [shape=record label="{23152: exceptional-return}" ] 
//#$~ 11948
}
