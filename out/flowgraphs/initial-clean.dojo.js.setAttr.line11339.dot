digraph {
rankdir="TD"
BB_entry546[shape=none,label=""];
BB_entry546 -> BB8095 [tailport=s, headport=n, headlabel="    8095"]
BB8095 [shape=record label="{24237: constant[undefined,v1]|24238: vardecl['x']|24239: vardecl['lc']|24240: vardecl['propName']|24241: vardecl['forceProp']}" ] 
BB8095 -> BB8096 [tailport=s, headport=n, headlabel="      8096"]
BB8096 [shape=record label="{24242: read-variable['dom',v5,-]|24243: read-property[v5,'byId',-]|24244: \<variable-non-null-undef\>['dom']|24245: read-variable['node',v6,v2]}" ] 
BB8096 -> BB8097 [tailport=s, headport=n, headlabel="      8097"]
BB8096 -> BB8129 [tailport=s, headport=n, color=gray, headlabel="      8129"]
BB8097 [shape=record label="{24246: call-dom.byId [v5,'byId',v6,v3]}" ] 
BB8097 -> BB8098 [tailport=s, headport=n, headlabel="      8098"]
BB8097 -> BB8129 [tailport=s, headport=n, color=gray]
BB8098 [shape=record label="{24247: write-variable[v3,'node']*|24248: read-variable['arguments',v10,v2]|24249: read-property[v10,'length',v8]|24250: \<variable-non-null-undef\>['arguments']|24251: constant[2.0,v9]|24252: ==[v8,v9,v7]|24253: if[v7](true-block:8099,false-block:8106)}" ] 
BB8098 -> BB8099 [tailport=s, headport=n, headlabel="      8099"]
BB8098 -> BB8106 [tailport=s, headport=n, headlabel="      8106"]
BB8098 -> BB8129 [tailport=s, headport=n, color=gray]
BB8099 [shape=record label="{24254: read-variable['name',v12,v2]}" ] 
BB8099 -> BB8100 [tailport=s, headport=n, headlabel="      8100"]
BB8099 -> BB8129 [tailport=s, headport=n, color=gray]
BB8100 [shape=record label="{24255: begin-for-in[v12,v13]}" ] 
BB8100 -> BB8101 [tailport=s, headport=n, headlabel="      8101"]
BB8100 -> BB8129 [tailport=s, headport=n, color=gray]
BB8101 [shape=record label="{24256: has-next[v13,v14]|24257: if[v14](true-block:8102,false-block:8105)}" ] 
BB8101 -> BB8102 [tailport=s, headport=n, headlabel="      8102"]
BB8101 -> BB8105 [tailport=s, headport=n, headlabel="      8105"]
BB8102 [shape=record label="{24258: next-property[v13,v15]|24259: write-variable[v15,'x']|24260: read-variable['exports',v17,-]|24261: read-property[v17,'set',-]|24262: \<variable-non-null-undef\>['exports']|24263: read-variable['node',v18,v2]|24264: read-variable['x',v19,v2]|24265: read-variable['name',v21,v2]|24266: read-variable['x',v22,v2]|24267: read-property[v21,v22,v20]|24268: \<variable-non-null-undef\>['name']}" ] 
BB8102 -> BB8103 [tailport=s, headport=n, headlabel="      8103"]
BB8102 -> BB8129 [tailport=s, headport=n, color=gray]
BB8103 [shape=record label="{24269: call-exports.set [v17,'set',v18,v19,v20,-]*}" ] 
BB8103 -> BB8104 [tailport=s, headport=n, headlabel="      8104"]
BB8103 -> BB8129 [tailport=s, headport=n, color=gray]
BB8104 [shape=record label="{24270: end-for-in(begin-node:24255)}" ] 
BB8104 -> BB8101 [tailport=s, headport=n]
BB8105 [shape=record label="{24271: read-variable['node',v1,v2]}" ] 
BB8105 -> BB8128 [tailport=s, headport=n, headlabel="      8128"]
BB8105 -> BB8129 [tailport=s, headport=n, color=gray]
BB8106 [shape=record label="{24272: read-variable['name',v13,-]|24273: read-property[v13,'toLowerCase',-]|24274: \<variable-non-null-undef\>['name']}" ] 
BB8106 -> BB8107 [tailport=s, headport=n, headlabel="      8107"]
BB8106 -> BB8129 [tailport=s, headport=n, color=gray]
BB8107 [shape=record label="{24275: call-name.toLowerCase [v13,'toLowerCase',v11]}" ] 
BB8107 -> BB8108 [tailport=s, headport=n, headlabel="      8108"]
BB8107 -> BB8129 [tailport=s, headport=n, color=gray]
BB8108 [shape=record label="{24276: write-variable[v11,'lc']*|24277: read-variable['prop',v16,v2]|24278: read-property[v16,'names',v15]|24279: \<variable-non-null-undef\>['prop']|24280: read-variable['lc',v17,v2]|24281: read-property[v15,v17,v14]|24282: \<property-non-null-undef\>[v16,'names']|24283: if[v14](true-block:8110,false-block:8109)}" ] 
BB8108 -> BB8110 [tailport=s, headport=n, headlabel="      8110"]
BB8108 -> BB8109 [tailport=s, headport=n, headlabel="      8109"]
BB8108 -> BB8129 [tailport=s, headport=n, color=gray]
BB8109 [shape=record label="{24284: read-variable['name',v14,v2]}" ] 
BB8109 -> BB8110 [tailport=s, headport=n]
BB8109 -> BB8129 [tailport=s, headport=n, color=gray]
BB8110 [shape=record label="{24285: write-variable[v14,'propName']*|24286: read-variable['forcePropNames',v16,v2]|24287: read-variable['propName',v17,v2]|24288: read-property[v16,v17,v15]|24289: \<variable-non-null-undef\>['forcePropNames']|24290: write-variable[v15,'forceProp']*|24291: read-variable['propName',v19,v2]|24292: constant[\"style\",v20]|24293: ==[v19,v20,v18]|24294: if[v18](true-block:8111,false-block:8112)}" ] 
BB8110 -> BB8112 [tailport=s, headport=n, headlabel="      8112"]
BB8110 -> BB8111 [tailport=s, headport=n, headlabel="      8111"]
BB8110 -> BB8129 [tailport=s, headport=n, color=gray]
BB8111 [shape=record label="{24295: typeof['value',v21]|24296: constant[\"string\",v22]|24297: !=[v21,v22,v18]}" ] 
BB8111 -> BB8112 [tailport=s, headport=n]
BB8111 -> BB8129 [tailport=s, headport=n, color=gray]
BB8112 [shape=record label="{24298: if[v18](true-block:8113,false-block:8116)}" ] 
BB8112 -> BB8113 [tailport=s, headport=n, headlabel="      8113"]
BB8112 -> BB8116 [tailport=s, headport=n, headlabel="      8116"]
BB8113 [shape=record label="{24299: read-variable['style',v22,-]|24300: read-property[v22,'set',-]|24301: \<variable-non-null-undef\>['style']|24302: read-variable['node',v23,v2]|24303: read-variable['value',v24,v2]}" ] 
BB8113 -> BB8114 [tailport=s, headport=n, headlabel="      8114"]
BB8113 -> BB8129 [tailport=s, headport=n, color=gray]
BB8114 [shape=record label="{24304: call-style.set [v22,'set',v23,v24,-]*}" ] 
BB8114 -> BB8115 [tailport=s, headport=n, headlabel="      8115"]
BB8114 -> BB8129 [tailport=s, headport=n, color=gray]
BB8115 [shape=record label="{24305: read-variable['node',v1,v2]}" ] 
BB8115 -> BB8128 [tailport=s, headport=n]
BB8115 -> BB8129 [tailport=s, headport=n, color=gray]
BB8116 [shape=record label="{24306: read-variable['forceProp',v21,v2]|24307: if[v21](true-block:8120,false-block:8117)}" ] 
BB8116 -> BB8120 [tailport=s, headport=n, headlabel="      8120"]
BB8116 -> BB8117 [tailport=s, headport=n, headlabel="      8117"]
BB8116 -> BB8129 [tailport=s, headport=n, color=gray]
BB8117 [shape=record label="{24308: typeof['value',v22]|24309: constant[\"boolean\",v23]|24310: ==[v22,v23,v21]|24311: if[v21](true-block:8120,false-block:8118)}" ] 
BB8117 -> BB8120 [tailport=s, headport=n]
BB8117 -> BB8118 [tailport=s, headport=n, headlabel="      8118"]
BB8117 -> BB8129 [tailport=s, headport=n, color=gray]
BB8118 [shape=record label="{24312: read-variable['lang',v23,-]|24313: read-property[v23,'isFunction',-]|24314: \<variable-non-null-undef\>['lang']|24315: read-variable['value',v24,v2]}" ] 
BB8118 -> BB8119 [tailport=s, headport=n, headlabel="      8119"]
BB8118 -> BB8129 [tailport=s, headport=n, color=gray]
BB8119 [shape=record label="{24316: call-lang.isFunction [v23,'isFunction',v24,v21]}" ] 
BB8119 -> BB8120 [tailport=s, headport=n]
BB8119 -> BB8129 [tailport=s, headport=n, color=gray]
BB8120 [shape=record label="{24317: if[v21](true-block:8121,false-block:8123)}" ] 
BB8120 -> BB8121 [tailport=s, headport=n, headlabel="      8121"]
BB8120 -> BB8123 [tailport=s, headport=n, headlabel="      8123"]
BB8121 [shape=record label="{24318: read-variable['prop',v23,-]|24319: read-property[v23,'set',-]|24320: \<variable-non-null-undef\>['prop']|24321: read-variable['node',v24,v2]|24322: read-variable['name',v25,v2]|24323: read-variable['value',v26,v2]}" ] 
BB8121 -> BB8122 [tailport=s, headport=n, headlabel="      8122"]
BB8121 -> BB8129 [tailport=s, headport=n, color=gray]
BB8122 [shape=record label="{24324: call-prop.set [v23,'set',v24,v25,v26,v1]}" ] 
BB8122 -> BB8128 [tailport=s, headport=n]
BB8122 -> BB8129 [tailport=s, headport=n, color=gray]
BB8123 [shape=record label="{24325: read-variable['node',v23,-]|24326: read-property[v23,'setAttribute',-]|24327: \<variable-non-null-undef\>['node']|24328: read-variable['attrNames',v25,v2]|24329: read-variable['lc',v26,v2]|24330: read-property[v25,v26,v24]|24331: \<variable-non-null-undef\>['attrNames']|24332: if[v24](true-block:8125,false-block:8124)}" ] 
BB8123 -> BB8125 [tailport=s, headport=n, headlabel="      8125"]
BB8123 -> BB8124 [tailport=s, headport=n, headlabel="      8124"]
BB8123 -> BB8129 [tailport=s, headport=n, color=gray]
BB8124 [shape=record label="{24333: read-variable['name',v24,v2]}" ] 
BB8124 -> BB8125 [tailport=s, headport=n]
BB8124 -> BB8129 [tailport=s, headport=n, color=gray]
BB8125 [shape=record label="{24334: read-variable['value',v25,v2]}" ] 
BB8125 -> BB8126 [tailport=s, headport=n, headlabel="      8126"]
BB8125 -> BB8129 [tailport=s, headport=n, color=gray]
BB8126 [shape=record label="{24335: call-node.setAttribute [v23,'setAttribute',v24,v25,-]*}" ] 
BB8126 -> BB8127 [tailport=s, headport=n, headlabel="      8127"]
BB8126 -> BB8129 [tailport=s, headport=n, color=gray]
BB8127 [shape=record label="{24336: read-variable['node',v1,v2]}" ] 
BB8127 -> BB8128 [tailport=s, headport=n]
BB8127 -> BB8129 [tailport=s, headport=n, color=gray]
BB8128 [shape=record label="{24337: return[v1]}" ] 
BB8129 [shape=record label="{24338: exceptional-return}" ] 
//#$~ 11401
}
