digraph {
rankdir="TD"
BB_entry467[shape=none,label=""];
BB_entry467 -> BB6214 [tailport=s, headport=n, headlabel="    6214"]
BB6214 [shape=record label="{15955: constant[undefined,v1]}" ] 
BB6214 -> BB6215 [tailport=s, headport=n, headlabel="      6215"]
BB6215 [shape=record label="{15956: read-variable['assertArgFn',v3,v2]|15957: read-variable['fn',v4,-]|15958: constant[\"fn\",v5]}" ] 
BB6215 -> BB6216 [tailport=s, headport=n, headlabel="      6216"]
BB6215 -> BB6221 [tailport=s, headport=n, color=gray, headlabel="      6221"]
BB6216 [shape=record label="{15959: call-assertArgFn [v2,v3,v4,v5,-]*}" ] 
BB6216 -> BB6217 [tailport=s, headport=n, headlabel="      6217"]
BB6216 -> BB6221 [tailport=s, headport=n, color=gray]
BB6217 [shape=record label="{15960: read-variable['promise',v7,-]|15961: read-property[v7,'then',-]|15962: \<variable-non-null-undef\>['promise']|15963: constant[null,v8]|15964: function-expr[function ( response ),v9]}" ] 
BB6217 -> BB6218 [tailport=s, headport=n, headlabel="      6218"]
BB6217 -> BB6221 [tailport=s, headport=n, color=gray]
BB6218 [shape=record label="{15965: call-promise.then [v7,'then',v8,v9,-]*}" ] 
BB6218 -> BB6219 [tailport=s, headport=n, headlabel="      6219"]
BB6218 -> BB6221 [tailport=s, headport=n, color=gray]
BB6219 [shape=record label="{15966: read-variable['promise',v1,-]}" ] 
BB6219 -> BB6220 [tailport=s, headport=n, headlabel="      6220"]
BB6219 -> BB6221 [tailport=s, headport=n, color=gray]
BB6220 [shape=record label="{15967: return[v1]}" ] 
BB6221 [shape=record label="{15968: exceptional-return}" ] 
//#$~ 10085
}
