digraph {
rankdir="TD"
BB_entry155[shape=none,label=""];
BB_entry155 -> BB3123 [tailport=s, headport=n, headlabel="    3123"]
BB3123 [shape=record label="{9334: constant[undefined,v1]|9335: vardecl['thisModule']|9336: vardecl['nlsRe']|9337: vardecl['getAvailableLocales']|9338: vardecl['cache']|9339: vardecl['getBundleName']|9340: vardecl['getL10nName']|9341: vardecl['doLoad']|9342: vardecl['normalize']|9343: vardecl['getLocalesToLoad']|9344: vardecl['load']|9345: vardecl['unitTests']|9346: vardecl['normalizeLocale']|9347: vardecl['isXd']|9348: vardecl['preloading']|9349: vardecl['preloadWaitQueue']|9350: vardecl['preloadL10n']|9351: vardecl['waitForPreloads']|9352: vardecl['checkForLegacyModules']|9353: vardecl['amdValue']|9354: vardecl['evalBundle']|9355: vardecl['syncRequire']}" ] 
BB3123 -> BB3124 [tailport=s, headport=n, headlabel="      3124"]
BB3124 [shape=record label="{9356: read-variable['has',v3,-]|9357: read-property[v3,'add',-]|9358: \<variable-non-null-undef\>['has']|9359: constant[\"dojo-preload-i18n-Api\",v4]|9360: constant[1.0,v5]}" ] 
BB3124 -> BB3125 [tailport=s, headport=n, headlabel="      3125"]
BB3124 -> BB3156 [tailport=s, headport=n, color=gray, headlabel="      3156"]
BB3125 [shape=record label="{9361: call-has.add [v3,'add',v4,v5,-]*}" ] 
BB3125 -> BB3126 [tailport=s, headport=n, headlabel="      3126"]
BB3125 -> BB3156 [tailport=s, headport=n, color=gray]
BB3126 [shape=record label="{9362: constant[1.0,v6]|9363: if[v6](true-block:3129,false-block:3127)}" ] 
BB3126 -> BB3129 [tailport=s, headport=n, headlabel="      3129"]
BB3126 -> BB3127 [tailport=s, headport=n, headlabel="      3127"]
BB3127 [shape=record label="{9364: read-variable['has',v8,-]|9365: read-property[v8,'add',-]|9366: \<variable-non-null-undef\>['has']|9367: constant[\"dojo-v1x-i18n-Api\",v9]|9368: constant[1.0,v10]}" ] 
BB3127 -> BB3128 [tailport=s, headport=n, headlabel="      3128"]
BB3127 -> BB3156 [tailport=s, headport=n, color=gray]
BB3128 [shape=record label="{9369: call-has.add [v8,'add',v9,v10,-]}" ] 
BB3128 -> BB3129 [tailport=s, headport=n]
BB3128 -> BB3156 [tailport=s, headport=n, color=gray]
BB3129 [shape=record label="{9370: read-variable['dojo',v8,-]|9371: new[v7]|9372: write-property[v8,'i18n',v7]|9373: \<variable-non-null-undef\>['dojo']|9374: write-variable[v7,'thisModule']*|9375: read-variable['RegExp',v10,-]|9376: constant[\"(^.*(^|\\\\/)nls)(\\\\/|$)([^\\\\/]*)\\\\/?([^\\\\/]*)\",v11]}" ] 
BB3129 -> BB3130 [tailport=s, headport=n, headlabel="      3130"]
BB3129 -> BB3156 [tailport=s, headport=n, color=gray]
BB3130 [shape=record label="{9377: construct [-,v10,v11,v9]}" ] 
BB3130 -> BB3131 [tailport=s, headport=n, headlabel="      3131"]
BB3130 -> BB3156 [tailport=s, headport=n, color=gray]
BB3131 [shape=record label="{9378: write-variable[v9,'nlsRe']*|9379: function-expr[function ( root locale bundlePath bundleName ),v12]|9380: write-variable[v12,'getAvailableLocales']*|9381: new[v13]|9382: write-variable[v13,'cache']*|9383: function-expr[function ( moduleName bundleName locale ),v14]|9384: write-variable[v14,'getBundleName']*|9385: read-variable['dojo',v16,-]|9386: function-expr[function ( moduleName bundleName locale ),v15]|9387: write-property[v16,'getL10nName',v15]|9388: \<variable-non-null-undef\>['dojo']|9389: write-variable[v15,'getL10nName']*|9390: function-expr[function ( require bundlePathAndName bundlePath bundleName locale load ),v17]|9391: write-variable[v17,'doLoad']*|9392: function-expr[function ( id toAbsMid ),v18]|9393: write-variable[v18,'normalize']*|9394: function-expr[function ( targetLocale ),v19]|9395: write-variable[v19,'getLocalesToLoad']*|9396: function-expr[function ( id require load ),v20]|9397: write-variable[v20,'load']*|9398: read-variable['has',v23,v22]|9399: constant[\"dojo-unit-tests\",v24]}" ] 
BB3131 -> BB3132 [tailport=s, headport=n, headlabel="      3132"]
BB3131 -> BB3156 [tailport=s, headport=n, color=gray]
BB3132 [shape=record label="{9400: call-has [v22,v23,v24,v21]}" ] 
BB3132 -> BB3133 [tailport=s, headport=n, headlabel="      3133"]
BB3132 -> BB3156 [tailport=s, headport=n, color=gray]
BB3133 [shape=record label="{9401: if[v21](true-block:3134,false-block:3137)}" ] 
BB3133 -> BB3134 [tailport=s, headport=n, headlabel="      3134"]
BB3133 -> BB3137 [tailport=s, headport=n, headlabel="      3137"]
BB3134 [shape=record label="{9402: read-variable['thisModule',v26,-]|9403: read-variable['Array',v27,-]}" ] 
BB3134 -> BB3135 [tailport=s, headport=n, headlabel="      3135"]
BB3134 -> BB3156 [tailport=s, headport=n, color=gray]
BB3135 [shape=record label="{9404: construct [-,v27,v25]}" ] 
BB3135 -> BB3136 [tailport=s, headport=n, headlabel="      3136"]
BB3135 -> BB3156 [tailport=s, headport=n, color=gray]
BB3136 [shape=record label="{9405: write-property[v26,'unitTests',v25]|9406: \<variable-non-null-undef\>['thisModule']|9407: write-variable[v25,'unitTests']*}" ] 
BB3136 -> BB3137 [tailport=s, headport=n]
BB3136 -> BB3156 [tailport=s, headport=n, color=gray]
BB3137 [shape=record label="{9408: read-variable['has',v27,v26]|9409: constant[\"dojo-preload-i18n-Api\",v28]}" ] 
BB3137 -> BB3138 [tailport=s, headport=n, headlabel="      3138"]
BB3137 -> BB3156 [tailport=s, headport=n, color=gray]
BB3138 [shape=record label="{9410: call-has [v26,v27,v28,v25]}" ] 
BB3138 -> BB3139 [tailport=s, headport=n, headlabel="      3139"]
BB3138 -> BB3156 [tailport=s, headport=n, color=gray]
BB3139 [shape=record label="{9411: if[v25](true-block:3141,false-block:3140)}" ] 
BB3139 -> BB3141 [tailport=s, headport=n, headlabel="      3141"]
BB3139 -> BB3140 [tailport=s, headport=n, headlabel="      3140"]
BB3140 [shape=record label="{9412: constant[1.0,v25]}" ] 
BB3140 -> BB3141 [tailport=s, headport=n]
BB3141 [shape=record label="{9413: if[v25](true-block:3142,false-block:3145)}" ] 
BB3141 -> BB3142 [tailport=s, headport=n, headlabel="      3142"]
BB3141 -> BB3145 [tailport=s, headport=n, headlabel="      3145"]
BB3142 [shape=record label="{9414: read-variable['thisModule',v27,-]|9415: function-expr[function ( locale ),v26]|9416: write-property[v27,'normalizeLocale',v26]|9417: \<variable-non-null-undef\>['thisModule']|9418: write-variable[v26,'normalizeLocale']*|9419: function-expr[function ( mid contextRequire ),v28]|9420: write-variable[v28,'isXd']*|9421: constant[0.0,v29]|9422: write-variable[v29,'preloading']*|9423: read-variable['Array',v31,-]}" ] 
BB3142 -> BB3143 [tailport=s, headport=n, headlabel="      3143"]
BB3142 -> BB3156 [tailport=s, headport=n, color=gray]
BB3143 [shape=record label="{9424: construct [-,v31,v30]}" ] 
BB3143 -> BB3144 [tailport=s, headport=n, headlabel="      3144"]
BB3143 -> BB3156 [tailport=s, headport=n, color=gray]
BB3144 [shape=record label="{9425: write-variable[v30,'preloadWaitQueue']*|9426: read-variable['thisModule',v33,-]|9427: function-expr[function ( bundlePrefix localesGenerated guaranteedAmdFormat contextRequire ),v32]|9428: write-property[v33,'_preloadLocalizations',v32]|9429: \<variable-non-null-undef\>['thisModule']|9430: write-variable[v32,'preloadL10n']*|9431: function-expr[function ( id require load ),v34]|9432: write-variable[v34,'waitForPreloads']*|9433: function-expr[function ( ),v35]|9434: write-variable[v35,'checkForLegacyModules']*}" ] 
BB3144 -> BB3145 [tailport=s, headport=n]
BB3144 -> BB3156 [tailport=s, headport=n, color=gray]
BB3145 [shape=record label="{9435: constant[1.0,v26]|9436: if[v26](true-block:3146,false-block:3153)}" ] 
BB3145 -> BB3146 [tailport=s, headport=n, headlabel="      3146"]
BB3145 -> BB3153 [tailport=s, headport=n, headlabel="      3153"]
BB3146 [shape=record label="{9437: new[v27]|9438: write-variable[v27,'amdValue']*|9439: read-variable['Function',v29,-]|9440: constant[\"__bundle\",v30]|9441: constant[\"__checkForLegacyModules\",v31]|9442: constant[\"__mid\",v32]|9443: constant[\"__amdValue\",v33]|9444: constant[\"var define = function(mid, factory)\\\{define.called = 1; __amdValue.result = factory || mid;\\\},\",v61]|9445: constant[\"\\t   require = function()\\\{define.called = 1;\\\};\",v62]|9446: +[v61,v62,v59]|9447: constant[\"try\\\{\",v60]|9448: +[v59,v60,v57]|9449: constant[\"define.called = 0;\",v58]|9450: +[v57,v58,v55]|9451: constant[\"eval(__bundle);\",v56]|9452: +[v55,v56,v53]|9453: constant[\"if(define.called==1)\",v54]|9454: +[v53,v54,v51]|9455: constant[\"return __amdValue;\",v52]|9456: +[v51,v52,v49]|9457: constant[\"if((__checkForLegacyModules = __checkForLegacyModules(__mid)))\",v50]|9458: +[v49,v50,v47]|9459: constant[\"return __checkForLegacyModules;\",v48]|9460: +[v47,v48,v45]|9461: constant[\"\\\}catch(e)\\\{\\\}\",v46]|9462: +[v45,v46,v43]|9463: constant[\"try\\\{\",v44]|9464: +[v43,v44,v41]|9465: constant[\"return eval('('+__bundle+')');\",v42]|9466: +[v41,v42,v39]|9467: constant[\"\\\}catch(e)\\\{\",v40]|9468: +[v39,v40,v37]|9469: constant[\"return e;\",v38]|9470: +[v37,v38,v35]|9471: constant[\"\\\}\",v36]|9472: +[v35,v36,v34]}" ] 
BB3146 -> BB3147 [tailport=s, headport=n, headlabel="      3147"]
BB3146 -> BB3156 [tailport=s, headport=n, color=gray]
BB3147 [shape=record label="{9473: construct [-,v29,v30,v31,v32,v33,v34,v28]}" ] 
BB3147 -> BB3148 [tailport=s, headport=n, headlabel="      3148"]
BB3147 -> BB3156 [tailport=s, headport=n, color=gray]
BB3148 [shape=record label="{9474: write-variable[v28,'evalBundle']*|9475: function-expr[function ( deps callback require ),v63]|9476: write-variable[v63,'syncRequire']*|9477: function-expr[function ( target ),v64]|9478: write-variable[v64,'checkForLegacyModules']*|9479: read-variable['thisModule',v66,-]|9480: function-expr[function ( moduleName bundleName locale ),v65]|9481: write-property[v66,'getLocalization',v65]|9482: \<variable-non-null-undef\>['thisModule']*|9483: read-variable['has',v69,v68]|9484: constant[\"dojo-unit-tests\",v70]}" ] 
BB3148 -> BB3149 [tailport=s, headport=n, headlabel="      3149"]
BB3148 -> BB3156 [tailport=s, headport=n, color=gray]
BB3149 [shape=record label="{9485: call-has [v68,v69,v70,v67]}" ] 
BB3149 -> BB3150 [tailport=s, headport=n, headlabel="      3150"]
BB3149 -> BB3156 [tailport=s, headport=n, color=gray]
BB3150 [shape=record label="{9486: if[v67](true-block:3151,false-block:3153)}" ] 
BB3150 -> BB3151 [tailport=s, headport=n, headlabel="      3151"]
BB3150 -> BB3153 [tailport=s, headport=n]
BB3151 [shape=record label="{9487: read-variable['unitTests',v72,-]|9488: read-property[v72,'push',-]|9489: \<variable-non-null-undef\>['unitTests']|9490: function-expr[function ( doh ),v73]}" ] 
BB3151 -> BB3152 [tailport=s, headport=n, headlabel="      3152"]
BB3151 -> BB3156 [tailport=s, headport=n, color=gray]
BB3152 [shape=record label="{9491: call-unitTests.push [v72,'push',v73,-]*}" ] 
BB3152 -> BB3153 [tailport=s, headport=n]
BB3152 -> BB3156 [tailport=s, headport=n, color=gray]
BB3153 [shape=record label="{9492: read-variable['lang',v28,-]|9493: read-property[v28,'mixin',-]|9494: \<variable-non-null-undef\>['lang']|9495: read-variable['thisModule',v29,-]|9496: new[v30]|9497: constant[true,v31]|9498: write-property[v30,'dynamic',v31]|9499: read-variable['normalize',v32,-]|9500: write-property[v30,'normalize',v32]|9501: read-variable['load',v33,-]|9502: write-property[v30,'load',v33]|9503: read-variable['cache',v34,-]|9504: write-property[v30,'cache',v34]|9505: read-variable['getL10nName',v35,-]|9506: write-property[v30,'getL10nName',v35]}" ] 
BB3153 -> BB3154 [tailport=s, headport=n, headlabel="      3154"]
BB3153 -> BB3156 [tailport=s, headport=n, color=gray]
BB3154 [shape=record label="{9507: call-lang.mixin [v28,'mixin',v29,v30,v1]}" ] 
BB3154 -> BB3155 [tailport=s, headport=n, headlabel="      3155"]
BB3154 -> BB3156 [tailport=s, headport=n, color=gray]
BB3155 [shape=record label="{9508: return[v1]}" ] 
BB3156 [shape=record label="{9509: exceptional-return}" ] 
//#$~ 3496
}
