digraph {
rankdir="TD"
BB_entry529[shape=none,label=""];
BB_entry529 -> BB7564 [tailport=s, headport=n, headlabel="    7564"]
BB7564 [shape=record label="{25441: constant[undefined,v1]}" ] 
BB7564 -> BB7565 [tailport=s, headport=n, headlabel="      7565"]
BB7565 [shape=record label="{25442: constant[\"production\",v3]|25443: constant[\"development\",v4]|25444: !==[v3,v4,v2]|25445: if[v2](true-block:7566,false-block:7567)}" ] 
BB7565 -> BB7566 [tailport=s, headport=n, headlabel="      7566"]
BB7565 -> BB7567 [tailport=s, headport=n, headlabel="      7567"]
BB7565 -> BB7581 [tailport=s, headport=n, color=gray, headlabel="      7581"]
BB7566 [shape=record label="{25446: read-variable['invariant',v6,v5]|25447: read-variable['ReactOwner',v9,-]|25448: read-property[v9,'isValidOwner',-]|25449: \<variable-non-null-undef\>['ReactOwner']|25450: read-variable['owner',v10,-]}" ] 
BB7566 -> BB7568 [tailport=s, headport=n, headlabel="      7568"]
BB7566 -> BB7581 [tailport=s, headport=n, color=gray]
BB7567 [shape=record label="{25451: read-variable['invariant',v6,v5]|25452: read-variable['ReactOwner',v9,-]|25453: read-property[v9,'isValidOwner',-]|25454: \<variable-non-null-undef\>['ReactOwner']|25455: read-variable['owner',v10,-]}" ] 
BB7567 -> BB7571 [tailport=s, headport=n, headlabel="      7571"]
BB7567 -> BB7581 [tailport=s, headport=n, color=gray]
BB7568 [shape=record label="{25456: call-ReactOwner.isValidOwner [v9,'isValidOwner',v10,v7]}" ] 
BB7568 -> BB7569 [tailport=s, headport=n, headlabel="      7569"]
BB7568 -> BB7581 [tailport=s, headport=n, color=gray]
BB7569 [shape=record label="{25457: constant[\"removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This \",v18]|25458: constant[\"usually means that you're trying to remove a ref to a component that \",v19]|25459: +[v18,v19,v16]|25460: constant[\"doesn't have an owner (that is, was not created inside of another \",v17]|25461: +[v16,v17,v14]|25462: constant[\"component's `render` method). Try rendering this component inside of \",v15]|25463: +[v14,v15,v12]|25464: constant[\"a new top-level component which will hold the ref.\",v13]|25465: +[v12,v13,v11]}" ] 
BB7569 -> BB7570 [tailport=s, headport=n, headlabel="      7570"]
BB7569 -> BB7581 [tailport=s, headport=n, color=gray]
BB7570 [shape=record label="{25466: call-invariant [v5,v6,v7,v11,-]}" ] 
BB7570 -> BB7573 [tailport=s, headport=n, headlabel="      7573"]
BB7570 -> BB7581 [tailport=s, headport=n, color=gray]
BB7571 [shape=record label="{25467: call-ReactOwner.isValidOwner [v9,'isValidOwner',v10,v7]}" ] 
BB7571 -> BB7572 [tailport=s, headport=n, headlabel="      7572"]
BB7571 -> BB7581 [tailport=s, headport=n, color=gray]
BB7572 [shape=record label="{25468: call-invariant [v5,v6,v7,-]}" ] 
BB7572 -> BB7573 [tailport=s, headport=n]
BB7572 -> BB7581 [tailport=s, headport=n, color=gray]
BB7573 [shape=record label="{25469: read-variable['owner',v11,-]|25470: read-property[v11,'getPublicInstance',-]|25471: \<variable-non-null-undef\>['owner']}" ] 
BB7573 -> BB7574 [tailport=s, headport=n, headlabel="      7574"]
BB7573 -> BB7581 [tailport=s, headport=n, color=gray]
BB7574 [shape=record label="{25472: call-owner.getPublicInstance [v11,'getPublicInstance',v9]}" ] 
BB7574 -> BB7575 [tailport=s, headport=n, headlabel="      7575"]
BB7574 -> BB7581 [tailport=s, headport=n, color=gray]
BB7575 [shape=record label="{25473: read-property[v9,'refs',v8]|25474: read-variable['ref',v12,-]|25475: read-property[v8,v12,v6]|25476: \<property-non-null-undef\>[v9,'refs']|25477: read-variable['component',v14,-]|25478: read-property[v14,'getPublicInstance',-]|25479: \<variable-non-null-undef\>['component']}" ] 
BB7575 -> BB7576 [tailport=s, headport=n, headlabel="      7576"]
BB7575 -> BB7581 [tailport=s, headport=n, color=gray]
BB7576 [shape=record label="{25480: call-component.getPublicInstance [v14,'getPublicInstance',v7]}" ] 
BB7576 -> BB7577 [tailport=s, headport=n, headlabel="      7577"]
BB7576 -> BB7581 [tailport=s, headport=n, color=gray]
BB7577 [shape=record label="{25481: ===[v6,v7,v5]|25482: if[v5](true-block:7578,false-block:7580)}" ] 
BB7577 -> BB7578 [tailport=s, headport=n, headlabel="      7578"]
BB7577 -> BB7580 [tailport=s, headport=n, headlabel="      7580"]
BB7577 -> BB7581 [tailport=s, headport=n, color=gray]
BB7578 [shape=record label="{25483: read-variable['owner',v16,-]|25484: read-property[v16,'detachRef',-]|25485: \<variable-non-null-undef\>['owner']|25486: read-variable['ref',v17,-]}" ] 
BB7578 -> BB7579 [tailport=s, headport=n, headlabel="      7579"]
BB7578 -> BB7581 [tailport=s, headport=n, color=gray]
BB7579 [shape=record label="{25487: call-owner.detachRef [v16,'detachRef',v17,-]*}" ] 
BB7579 -> BB7580 [tailport=s, headport=n]
BB7579 -> BB7581 [tailport=s, headport=n, color=gray]
BB7580 [shape=record label="{25488: return[v1]}" ] 
BB7581 [shape=record label="{25489: exceptional-return}" ] 
//#$~ 13349
}
