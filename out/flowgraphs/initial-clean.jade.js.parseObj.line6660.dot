digraph {
rankdir="TD"
BB_entry382[shape=none,label=""];
BB_entry382 -> BB6904 [tailport=s, headport=n, headlabel="    6904"]
BB6904 [shape=record label="{20424: constant[undefined,v1]|20425: vardecl['node']|20426: vardecl['first']|20427: vardecl['propHash']|20428: vardecl['prop']|20429: vardecl['isGenerator']}" ] 
BB6904 -> BB6905 [tailport=s, headport=n, headlabel="      6905"]
BB6905 [shape=record label="{20430: read-variable['startNode',v4,v3]}" ] 
BB6905 -> BB6906 [tailport=s, headport=n, headlabel="      6906"]
BB6905 -> BB6971 [tailport=s, headport=n, color=gray, headlabel="      6971"]
BB6906 [shape=record label="{20431: call-startNode [v3,v4,v2]}" ] 
BB6906 -> BB6907 [tailport=s, headport=n, headlabel="      6907"]
BB6906 -> BB6971 [tailport=s, headport=n, color=gray]
BB6907 [shape=record label="{20432: write-variable[v2,'node']*|20433: constant[true,v5]|20434: write-variable[v5,'first']*|20435: new[v6]|20436: write-variable[v6,'propHash']*|20437: read-variable['node',v8,-]|20438: read-variable['Array',v9,-]}" ] 
BB6907 -> BB6908 [tailport=s, headport=n, headlabel="      6908"]
BB6907 -> BB6971 [tailport=s, headport=n, color=gray]
BB6908 [shape=record label="{20439: construct [-,v9,v7]}" ] 
BB6908 -> BB6909 [tailport=s, headport=n, headlabel="      6909"]
BB6908 -> BB6971 [tailport=s, headport=n, color=gray]
BB6909 [shape=record label="{20440: write-property[v8,'properties',v7]|20441: \<variable-non-null-undef\>['node']*|20442: read-variable['next',v11,v10]}" ] 
BB6909 -> BB6910 [tailport=s, headport=n, headlabel="      6910"]
BB6909 -> BB6971 [tailport=s, headport=n, color=gray]
BB6910 [shape=record label="{20443: call-next [v10,v11,-]*}" ] 
BB6910 -> BB6911 [tailport=s, headport=n, headlabel="      6911"]
BB6910 -> BB6971 [tailport=s, headport=n, color=gray]
BB6911 [shape=record label="{20444: read-variable['eat',v15,v14]|20445: read-variable['_braceR',v16,-]}" ] 
BB6911 -> BB6912 [tailport=s, headport=n, headlabel="      6912"]
BB6911 -> BB6971 [tailport=s, headport=n, color=gray]
BB6912 [shape=record label="{20446: call-eat [v14,v15,v16,v13]}" ] 
BB6912 -> BB6913 [tailport=s, headport=n, headlabel="      6913"]
BB6912 -> BB6971 [tailport=s, headport=n, color=gray]
BB6913 [shape=record label="{20447: ![v13,v12]|20448: if[v12](true-block:6914,false-block:6915)}" ] 
BB6913 -> BB6914 [tailport=s, headport=n, headlabel="      6914"]
BB6913 -> BB6915 [tailport=s, headport=n, headlabel="      6915"]
BB6913 -> BB6971 [tailport=s, headport=n, color=gray]
BB6914 [shape=record label="{20449: read-variable['first',v18,-]|20450: ![v18,v17]|20451: if[v17](true-block:6916,false-block:6917)}" ] 
BB6914 -> BB6916 [tailport=s, headport=n, headlabel="      6916"]
BB6914 -> BB6917 [tailport=s, headport=n, headlabel="      6917"]
BB6914 -> BB6971 [tailport=s, headport=n, color=gray]
BB6915 [shape=record label="{20452: read-variable['finishNode',v18,v17]|20453: read-variable['node',v19,-]|20454: constant[\"ObjectExpression\",v20]}" ] 
BB6915 -> BB6969 [tailport=s, headport=n, headlabel="      6969"]
BB6915 -> BB6971 [tailport=s, headport=n, color=gray]
BB6916 [shape=record label="{20455: read-variable['expect',v20,v19]|20456: read-variable['_comma',v21,-]}" ] 
BB6916 -> BB6918 [tailport=s, headport=n, headlabel="      6918"]
BB6916 -> BB6971 [tailport=s, headport=n, color=gray]
BB6917 [shape=record label="{20457: constant[false,v19]|20458: write-variable[v19,'first']*}" ] 
BB6917 -> BB6923 [tailport=s, headport=n, headlabel="      6923"]
BB6918 [shape=record label="{20459: call-expect [v19,v20,v21,-]*}" ] 
BB6918 -> BB6919 [tailport=s, headport=n, headlabel="      6919"]
BB6918 -> BB6971 [tailport=s, headport=n, color=gray]
BB6919 [shape=record label="{20460: read-variable['options',v23,-]|20461: read-property[v23,'allowTrailingCommas',v22]|20462: \<variable-non-null-undef\>['options']|20463: if[v22](true-block:6920,false-block:6922)}" ] 
BB6919 -> BB6922 [tailport=s, headport=n, headlabel="      6922"]
BB6919 -> BB6920 [tailport=s, headport=n, headlabel="      6920"]
BB6919 -> BB6971 [tailport=s, headport=n, color=gray]
BB6920 [shape=record label="{20464: read-variable['eat',v25,v24]|20465: read-variable['_braceR',v26,-]}" ] 
BB6920 -> BB6921 [tailport=s, headport=n, headlabel="      6921"]
BB6920 -> BB6971 [tailport=s, headport=n, color=gray]
BB6921 [shape=record label="{20466: call-eat [v24,v25,v26,v22]}" ] 
BB6921 -> BB6922 [tailport=s, headport=n]
BB6921 -> BB6971 [tailport=s, headport=n, color=gray]
BB6922 [shape=record label="{20467: if[v22](true-block:6915,false-block:6923)}" ] 
BB6922 -> BB6915 [tailport=s, headport=n]
BB6922 -> BB6923 [tailport=s, headport=n]
BB6923 [shape=record label="{20468: read-variable['startNode',v21,v20]}" ] 
BB6923 -> BB6924 [tailport=s, headport=n, headlabel="      6924"]
BB6923 -> BB6971 [tailport=s, headport=n, color=gray]
BB6924 [shape=record label="{20469: call-startNode [v20,v21,v19]}" ] 
BB6924 -> BB6925 [tailport=s, headport=n, headlabel="      6925"]
BB6924 -> BB6971 [tailport=s, headport=n, color=gray]
BB6925 [shape=record label="{20470: write-variable[v19,'prop']*|20471: read-variable['options',v25,-]|20472: read-property[v25,'ecmaVersion',v23]|20473: \<variable-non-null-undef\>['options']|20474: constant[6.0,v24]|20475: \>=[v23,v24,v22]|20476: if[v22](true-block:6926,false-block:6929)}" ] 
BB6925 -> BB6926 [tailport=s, headport=n, headlabel="      6926"]
BB6925 -> BB6929 [tailport=s, headport=n, headlabel="      6929"]
BB6925 -> BB6971 [tailport=s, headport=n, color=gray]
BB6926 [shape=record label="{20477: read-variable['prop',v27,-]|20478: constant[false,v26]|20479: write-property[v27,'method',v26]|20480: \<variable-non-null-undef\>['prop']*|20481: read-variable['prop',v29,-]|20482: constant[false,v28]|20483: write-property[v29,'shorthand',v28]|20484: \<variable-non-null-undef\>['prop']*|20485: read-variable['eat',v32,v31]|20486: read-variable['_star',v33,-]}" ] 
BB6926 -> BB6927 [tailport=s, headport=n, headlabel="      6927"]
BB6926 -> BB6971 [tailport=s, headport=n, color=gray]
BB6927 [shape=record label="{20487: call-eat [v31,v32,v33,v30]}" ] 
BB6927 -> BB6928 [tailport=s, headport=n, headlabel="      6928"]
BB6927 -> BB6971 [tailport=s, headport=n, color=gray]
BB6928 [shape=record label="{20488: write-variable[v30,'isGenerator']*}" ] 
BB6928 -> BB6929 [tailport=s, headport=n]
BB6929 [shape=record label="{20489: read-variable['parsePropertyName',v27,v26]|20490: read-variable['prop',v28,-]}" ] 
BB6929 -> BB6930 [tailport=s, headport=n, headlabel="      6930"]
BB6929 -> BB6971 [tailport=s, headport=n, color=gray]
BB6930 [shape=record label="{20491: call-parsePropertyName [v26,v27,v28,-]*}" ] 
BB6930 -> BB6931 [tailport=s, headport=n, headlabel="      6931"]
BB6930 -> BB6971 [tailport=s, headport=n, color=gray]
BB6931 [shape=record label="{20492: read-variable['eat',v31,v30]|20493: read-variable['_colon',v32,-]}" ] 
BB6931 -> BB6932 [tailport=s, headport=n, headlabel="      6932"]
BB6931 -> BB6971 [tailport=s, headport=n, color=gray]
BB6932 [shape=record label="{20494: call-eat [v30,v31,v32,v29]}" ] 
BB6932 -> BB6933 [tailport=s, headport=n, headlabel="      6933"]
BB6932 -> BB6971 [tailport=s, headport=n, color=gray]
BB6933 [shape=record label="{20495: if[v29](true-block:6934,false-block:6935)}" ] 
BB6933 -> BB6934 [tailport=s, headport=n, headlabel="      6934"]
BB6933 -> BB6935 [tailport=s, headport=n, headlabel="      6935"]
BB6934 [shape=record label="{20496: read-variable['prop',v34,-]|20497: read-variable['parseExpression',v36,v35]|20498: constant[true,v37]}" ] 
BB6934 -> BB6936 [tailport=s, headport=n, headlabel="      6936"]
BB6934 -> BB6971 [tailport=s, headport=n, color=gray]
BB6935 [shape=record label="{20499: read-variable['options',v36,-]|20500: read-property[v36,'ecmaVersion',v34]|20501: \<variable-non-null-undef\>['options']|20502: constant[6.0,v35]|20503: \>=[v34,v35,v33]|20504: if[v33](true-block:6938,false-block:6939)}" ] 
BB6935 -> BB6939 [tailport=s, headport=n, headlabel="      6939"]
BB6935 -> BB6938 [tailport=s, headport=n, headlabel="      6938"]
BB6935 -> BB6971 [tailport=s, headport=n, color=gray]
BB6936 [shape=record label="{20505: call-parseExpression [v35,v36,v37,v33]}" ] 
BB6936 -> BB6937 [tailport=s, headport=n, headlabel="      6937"]
BB6936 -> BB6971 [tailport=s, headport=n, color=gray]
BB6937 [shape=record label="{20506: write-property[v34,'value',v33]|20507: \<variable-non-null-undef\>['prop']*|20508: read-variable['prop',v39,-]|20509: constant[\"init\",v38]|20510: write-property[v39,'kind',v38]|20511: \<variable-non-null-undef\>['prop']*}" ] 
BB6937 -> BB6964 [tailport=s, headport=n, headlabel="      6964"]
BB6937 -> BB6971 [tailport=s, headport=n, color=gray]
BB6938 [shape=record label="{20512: read-variable['tokType',v37,-]|20513: read-variable['_parenL',v38,-]|20514: ===[v37,v38,v33]}" ] 
BB6938 -> BB6939 [tailport=s, headport=n]
BB6938 -> BB6971 [tailport=s, headport=n, color=gray]
BB6939 [shape=record label="{20515: if[v33](true-block:6940,false-block:6941)}" ] 
BB6939 -> BB6940 [tailport=s, headport=n, headlabel="      6940"]
BB6939 -> BB6941 [tailport=s, headport=n, headlabel="      6941"]
BB6940 [shape=record label="{20516: read-variable['prop',v38,-]|20517: constant[\"init\",v37]|20518: write-property[v38,'kind',v37]|20519: \<variable-non-null-undef\>['prop']*|20520: read-variable['prop',v40,-]|20521: constant[true,v39]|20522: write-property[v40,'method',v39]|20523: \<variable-non-null-undef\>['prop']*|20524: read-variable['prop',v42,-]|20525: read-variable['parseMethod',v44,v43]|20526: read-variable['isGenerator',v45,-]}" ] 
BB6940 -> BB6942 [tailport=s, headport=n, headlabel="      6942"]
BB6940 -> BB6971 [tailport=s, headport=n, color=gray]
BB6941 [shape=record label="{20527: read-variable['options',v40,-]|20528: read-property[v40,'ecmaVersion',v38]|20529: \<variable-non-null-undef\>['options']|20530: constant[5.0,v39]|20531: \>=[v38,v39,v37]|20532: if[v37](true-block:6944,false-block:6948)}" ] 
BB6941 -> BB6948 [tailport=s, headport=n, headlabel="      6948"]
BB6941 -> BB6944 [tailport=s, headport=n, headlabel="      6944"]
BB6941 -> BB6971 [tailport=s, headport=n, color=gray]
BB6942 [shape=record label="{20533: call-parseMethod [v43,v44,v45,v41]}" ] 
BB6942 -> BB6943 [tailport=s, headport=n, headlabel="      6943"]
BB6942 -> BB6971 [tailport=s, headport=n, color=gray]
BB6943 [shape=record label="{20534: write-property[v42,'value',v41]|20535: \<variable-non-null-undef\>['prop']*}" ] 
BB6943 -> BB6964 [tailport=s, headport=n]
BB6943 -> BB6971 [tailport=s, headport=n, color=gray]
BB6944 [shape=record label="{20536: read-variable['prop',v42,-]|20537: read-property[v42,'computed',v41]|20538: \<variable-non-null-undef\>['prop']|20539: ![v41,v37]|20540: if[v37](true-block:6945,false-block:6948)}" ] 
BB6944 -> BB6948 [tailport=s, headport=n]
BB6944 -> BB6945 [tailport=s, headport=n, headlabel="      6945"]
BB6944 -> BB6971 [tailport=s, headport=n, color=gray]
BB6945 [shape=record label="{20541: read-variable['prop',v46,-]|20542: read-property[v46,'key',v45]|20543: \<variable-non-null-undef\>['prop']|20544: read-property[v45,'type',v43]|20545: \<property-non-null-undef\>[v46,'key']|20546: constant[\"Identifier\",v44]|20547: ===[v43,v44,v37]|20548: if[v37](true-block:6946,false-block:6948)}" ] 
BB6945 -> BB6948 [tailport=s, headport=n]
BB6945 -> BB6946 [tailport=s, headport=n, headlabel="      6946"]
BB6945 -> BB6971 [tailport=s, headport=n, color=gray]
BB6946 [shape=record label="{20549: read-variable['prop',v50,-]|20550: read-property[v50,'key',v49]|20551: \<variable-non-null-undef\>['prop']|20552: read-property[v49,'name',v47]|20553: \<property-non-null-undef\>[v50,'key']|20554: constant[\"get\",v48]|20555: ===[v47,v48,v37]|20556: if[v37](true-block:6948,false-block:6947)}" ] 
BB6946 -> BB6948 [tailport=s, headport=n]
BB6946 -> BB6947 [tailport=s, headport=n, headlabel="      6947"]
BB6946 -> BB6971 [tailport=s, headport=n, color=gray]
BB6947 [shape=record label="{20557: read-variable['prop',v50,-]|20558: read-property[v50,'key',v49]|20559: \<variable-non-null-undef\>['prop']|20560: read-property[v49,'name',v47]|20561: \<property-non-null-undef\>[v50,'key']|20562: constant[\"set\",v48]|20563: ===[v47,v48,v37]}" ] 
BB6947 -> BB6948 [tailport=s, headport=n]
BB6947 -> BB6971 [tailport=s, headport=n, color=gray]
BB6948 [shape=record label="{20564: if[v37](true-block:6949,false-block:6950)}" ] 
BB6948 -> BB6949 [tailport=s, headport=n, headlabel="      6949"]
BB6948 -> BB6950 [tailport=s, headport=n, headlabel="      6950"]
BB6949 [shape=record label="{20565: read-variable['isGenerator',v41,-]|20566: if[v41](true-block:6951,false-block:6953)}" ] 
BB6949 -> BB6951 [tailport=s, headport=n, headlabel="      6951"]
BB6949 -> BB6953 [tailport=s, headport=n, headlabel="      6953"]
BB6949 -> BB6971 [tailport=s, headport=n, color=gray]
BB6950 [shape=record label="{20567: read-variable['options',v44,-]|20568: read-property[v44,'ecmaVersion',v42]|20569: \<variable-non-null-undef\>['options']|20570: constant[6.0,v43]|20571: \>=[v42,v43,v41]|20572: if[v41](true-block:6958,false-block:6960)}" ] 
BB6950 -> BB6960 [tailport=s, headport=n, headlabel="      6960"]
BB6950 -> BB6958 [tailport=s, headport=n, headlabel="      6958"]
BB6950 -> BB6971 [tailport=s, headport=n, color=gray]
BB6951 [shape=record label="{20573: read-variable['unexpected',v43,v42]}" ] 
BB6951 -> BB6952 [tailport=s, headport=n, headlabel="      6952"]
BB6951 -> BB6971 [tailport=s, headport=n, color=gray]
BB6952 [shape=record label="{20574: call-unexpected [v42,v43,-]*}" ] 
BB6952 -> BB6953 [tailport=s, headport=n]
BB6952 -> BB6971 [tailport=s, headport=n, color=gray]
BB6953 [shape=record label="{20575: read-variable['prop',v43,-]|20576: read-variable['prop',v45,-]|20577: read-property[v45,'key',v44]|20578: \<variable-non-null-undef\>['prop']|20579: read-property[v44,'name',v42]|20580: \<property-non-null-undef\>[v45,'key']|20581: write-property[v43,'kind',v42]|20582: \<variable-non-null-undef\>['prop']*|20583: read-variable['parsePropertyName',v47,v46]|20584: read-variable['prop',v48,-]}" ] 
BB6953 -> BB6954 [tailport=s, headport=n, headlabel="      6954"]
BB6953 -> BB6971 [tailport=s, headport=n, color=gray]
BB6954 [shape=record label="{20585: call-parsePropertyName [v46,v47,v48,-]*}" ] 
BB6954 -> BB6955 [tailport=s, headport=n, headlabel="      6955"]
BB6954 -> BB6971 [tailport=s, headport=n, color=gray]
BB6955 [shape=record label="{20586: read-variable['prop',v50,-]|20587: read-variable['parseMethod',v52,v51]|20588: constant[false,v53]}" ] 
BB6955 -> BB6956 [tailport=s, headport=n, headlabel="      6956"]
BB6955 -> BB6971 [tailport=s, headport=n, color=gray]
BB6956 [shape=record label="{20589: call-parseMethod [v51,v52,v53,v49]}" ] 
BB6956 -> BB6957 [tailport=s, headport=n, headlabel="      6957"]
BB6956 -> BB6971 [tailport=s, headport=n, color=gray]
BB6957 [shape=record label="{20590: write-property[v50,'value',v49]|20591: \<variable-non-null-undef\>['prop']*}" ] 
BB6957 -> BB6964 [tailport=s, headport=n]
BB6957 -> BB6971 [tailport=s, headport=n, color=gray]
BB6958 [shape=record label="{20592: read-variable['prop',v46,-]|20593: read-property[v46,'computed',v45]|20594: \<variable-non-null-undef\>['prop']|20595: ![v45,v41]|20596: if[v41](true-block:6959,false-block:6960)}" ] 
BB6958 -> BB6960 [tailport=s, headport=n]
BB6958 -> BB6959 [tailport=s, headport=n, headlabel="      6959"]
BB6958 -> BB6971 [tailport=s, headport=n, color=gray]
BB6959 [shape=record label="{20597: read-variable['prop',v50,-]|20598: read-property[v50,'key',v49]|20599: \<variable-non-null-undef\>['prop']|20600: read-property[v49,'type',v47]|20601: \<property-non-null-undef\>[v50,'key']|20602: constant[\"Identifier\",v48]|20603: ===[v47,v48,v41]}" ] 
BB6959 -> BB6960 [tailport=s, headport=n]
BB6959 -> BB6971 [tailport=s, headport=n, color=gray]
BB6960 [shape=record label="{20604: if[v41](true-block:6961,false-block:6962)}" ] 
BB6960 -> BB6961 [tailport=s, headport=n, headlabel="      6961"]
BB6960 -> BB6962 [tailport=s, headport=n, headlabel="      6962"]
BB6961 [shape=record label="{20605: read-variable['prop',v46,-]|20606: constant[\"init\",v45]|20607: write-property[v46,'kind',v45]|20608: \<variable-non-null-undef\>['prop']*|20609: read-variable['prop',v48,-]|20610: read-variable['prop',v49,-]|20611: read-property[v49,'key',v47]|20612: \<variable-non-null-undef\>['prop']|20613: write-property[v48,'value',v47]|20614: \<variable-non-null-undef\>['prop']*|20615: read-variable['prop',v51,-]|20616: constant[true,v50]|20617: write-property[v51,'shorthand',v50]|20618: \<variable-non-null-undef\>['prop']*}" ] 
BB6961 -> BB6964 [tailport=s, headport=n]
BB6961 -> BB6971 [tailport=s, headport=n, color=gray]
BB6962 [shape=record label="{20619: read-variable['unexpected',v46,v45]}" ] 
BB6962 -> BB6963 [tailport=s, headport=n, headlabel="      6963"]
BB6962 -> BB6971 [tailport=s, headport=n, color=gray]
BB6963 [shape=record label="{20620: call-unexpected [v45,v46,-]*}" ] 
BB6963 -> BB6964 [tailport=s, headport=n]
BB6963 -> BB6971 [tailport=s, headport=n, color=gray]
BB6964 [shape=record label="{20621: read-variable['checkPropClash',v34,v33]|20622: read-variable['prop',v35,-]|20623: read-variable['propHash',v36,-]}" ] 
BB6964 -> BB6965 [tailport=s, headport=n, headlabel="      6965"]
BB6964 -> BB6971 [tailport=s, headport=n, color=gray]
BB6965 [shape=record label="{20624: call-checkPropClash [v33,v34,v35,v36,-]*}" ] 
BB6965 -> BB6966 [tailport=s, headport=n, headlabel="      6966"]
BB6965 -> BB6971 [tailport=s, headport=n, color=gray]
BB6966 [shape=record label="{20625: read-variable['node',v39,-]|20626: read-property[v39,'properties',v38]|20627: \<variable-non-null-undef\>['node']|20628: read-property[v38,'push',-]|20629: \<property-non-null-undef\>[v39,'properties']|20630: read-variable['finishNode',v42,v41]|20631: read-variable['prop',v43,-]|20632: constant[\"Property\",v44]}" ] 
BB6966 -> BB6967 [tailport=s, headport=n, headlabel="      6967"]
BB6966 -> BB6971 [tailport=s, headport=n, color=gray]
BB6967 [shape=record label="{20633: call-finishNode [v41,v42,v43,v44,v40]}" ] 
BB6967 -> BB6968 [tailport=s, headport=n, headlabel="      6968"]
BB6967 -> BB6971 [tailport=s, headport=n, color=gray]
BB6968 [shape=record label="{20634: call-node.properties.push [v38,'push',v40,-]*}" ] 
BB6968 -> BB6911 [tailport=s, headport=n]
BB6968 -> BB6971 [tailport=s, headport=n, color=gray]
BB6969 [shape=record label="{20635: call-finishNode [v17,v18,v19,v20,v1]}" ] 
BB6969 -> BB6970 [tailport=s, headport=n, headlabel="      6970"]
BB6969 -> BB6971 [tailport=s, headport=n, color=gray]
BB6970 [shape=record label="{20636: return[v1]}" ] 
BB6971 [shape=record label="{20637: exceptional-return}" ] 
//#$~ 6699
}
