digraph {
rankdir="TD"
BB_entry61[shape=none,label=""];
BB_entry61 -> BB877 [tailport=s, headport=n, headlabel="    877"]
BB877 [shape=record label="{3140: constant[undefined,v1]|3141: vardecl['ai']|3142: vardecl['args']|3143: vardecl['fi']|3144: vardecl['observer']|3145: vardecl['_i']|3146: vardecl['_len']|3147: vardecl['_ref1']|3148: vardecl['_ref2']|3149: vardecl['_ref3']|3150: vardecl['_ref4']}" ] 
BB877 -> BB878 [tailport=s, headport=n, headlabel="      878"]
BB878 [shape=record label="{3151: read-variable['this',v6,-]|3152: read-property[v6,'binder',v5]|3153: read-property[v5,'unbind',v3]|3154: \<property-non-null-undef\>[v6,'binder']|3155: write-variable[v3,'_ref1']|3156: constant[null,v4]|3157: !=[v3,v4,v2]|3158: if[v2](true-block:879,false-block:881)}" ] 
BB878 -> BB879 [tailport=s, headport=n, headlabel="      879"]
BB878 -> BB881 [tailport=s, headport=n, headlabel="      881"]
BB878 -> BB903 [tailport=s, headport=n, color=gray, headlabel="      903"]
BB879 [shape=record label="{3159: read-variable['_ref1',v8,-]|3160: read-property[v8,'call',-]|3161: \<variable-non-null-undef\>['_ref1']|3162: read-variable['this',v9,-]|3163: read-variable['this',v11,-]|3164: read-property[v11,'el',v10]}" ] 
BB879 -> BB880 [tailport=s, headport=n, headlabel="      880"]
BB879 -> BB903 [tailport=s, headport=n, color=gray]
BB880 [shape=record label="{3165: call-_ref1.call [v8,'call',v9,v10,-]*}" ] 
BB880 -> BB881 [tailport=s, headport=n]
BB880 -> BB903 [tailport=s, headport=n, color=gray]
BB881 [shape=record label="{3166: read-variable['this',v10,-]|3167: read-property[v10,'observer',v8]|3168: write-variable[v8,'_ref2']|3169: constant[null,v9]|3170: !=[v8,v9,v7]|3171: if[v7](true-block:882,false-block:884)}" ] 
BB881 -> BB882 [tailport=s, headport=n, headlabel="      882"]
BB881 -> BB884 [tailport=s, headport=n, headlabel="      884"]
BB881 -> BB903 [tailport=s, headport=n, color=gray]
BB882 [shape=record label="{3172: read-variable['_ref2',v12,-]|3173: read-property[v12,'unobserve',-]|3174: \<variable-non-null-undef\>['_ref2']}" ] 
BB882 -> BB883 [tailport=s, headport=n, headlabel="      883"]
BB882 -> BB903 [tailport=s, headport=n, color=gray]
BB883 [shape=record label="{3175: call-_ref2.unobserve [v12,'unobserve',-]*}" ] 
BB883 -> BB884 [tailport=s, headport=n]
BB883 -> BB903 [tailport=s, headport=n, color=gray]
BB884 [shape=record label="{3176: read-variable['this',v12,-]|3177: read-property[v12,'dependencies',v11]|3178: write-variable[v11,'_ref3']*|3179: constant[0.0,v14]|3180: write-variable[v14,'_i']|3181: read-variable['_ref3',v16,-]|3182: read-property[v16,'length',v15]|3183: \<variable-non-null-undef\>['_ref3']|3184: write-variable[v15,'_len']}" ] 
BB884 -> BB885 [tailport=s, headport=n, headlabel="      885"]
BB884 -> BB903 [tailport=s, headport=n, color=gray]
BB885 [shape=record label="{3185: read-variable['_i',v17,-]|3186: read-variable['_len',v18,-]|3187: \<[v17,v18,v13]|3188: if[v13](true-block:886,false-block:887)}" ] 
BB885 -> BB886 [tailport=s, headport=n, headlabel="      886"]
BB885 -> BB887 [tailport=s, headport=n, headlabel="      887"]
BB885 -> BB903 [tailport=s, headport=n, color=gray]
BB886 [shape=record label="{3189: read-variable['_ref3',v20,-]|3190: read-variable['_i',v21,-]|3191: read-property[v20,v21,v19]|3192: \<variable-non-null-undef\>['_ref3']|3193: write-variable[v19,'observer']*|3194: read-variable['observer',v23,-]|3195: read-property[v23,'unobserve',-]|3196: \<variable-non-null-undef\>['observer']}" ] 
BB886 -> BB888 [tailport=s, headport=n, headlabel="      888"]
BB886 -> BB903 [tailport=s, headport=n, color=gray]
BB887 [shape=record label="{3197: read-variable['this',v20,-]|3198: read-variable['Array',v21,-]}" ] 
BB887 -> BB890 [tailport=s, headport=n, headlabel="      890"]
BB887 -> BB903 [tailport=s, headport=n, color=gray]
BB888 [shape=record label="{3199: call-observer.unobserve [v23,'unobserve',-]*}" ] 
BB888 -> BB889 [tailport=s, headport=n, headlabel="      889"]
BB888 -> BB903 [tailport=s, headport=n, color=gray]
BB889 [shape=record label="{3200: constant[1.0,v24]|3201: read-variable['_i',v25,-]|3202: +[v25,v26]|3203: +[v26,v24,v27]|3204: write-variable[v27,'_i']}" ] 
BB889 -> BB885 [tailport=s, headport=n]
BB889 -> BB903 [tailport=s, headport=n, color=gray]
BB890 [shape=record label="{3205: construct [-,v21,v19]}" ] 
BB890 -> BB891 [tailport=s, headport=n, headlabel="      891"]
BB890 -> BB903 [tailport=s, headport=n, color=gray]
BB891 [shape=record label="{3206: write-property[v20,'dependencies',v19]*|3207: read-variable['this',v23,-]|3208: read-property[v23,'formatterObservers',v22]|3209: write-variable[v22,'_ref4']*|3210: read-variable['_ref4',v25,-]}" ] 
BB891 -> BB892 [tailport=s, headport=n, headlabel="      892"]
BB891 -> BB903 [tailport=s, headport=n, color=gray]
BB892 [shape=record label="{3211: begin-for-in[v25,v26]}" ] 
BB892 -> BB893 [tailport=s, headport=n, headlabel="      893"]
BB892 -> BB903 [tailport=s, headport=n, color=gray]
BB893 [shape=record label="{3212: has-next[v26,v27]|3213: if[v27](true-block:894,false-block:901)}" ] 
BB893 -> BB894 [tailport=s, headport=n, headlabel="      894"]
BB893 -> BB901 [tailport=s, headport=n, headlabel="      901"]
BB894 [shape=record label="{3214: next-property[v26,v28]|3215: write-variable[v28,'fi']|3216: read-variable['_ref4',v30,-]|3217: read-variable['fi',v31,-]|3218: read-property[v30,v31,v29]|3219: \<variable-non-null-undef\>['_ref4']|3220: write-variable[v29,'args']*|3221: read-variable['args',v33,-]}" ] 
BB894 -> BB895 [tailport=s, headport=n, headlabel="      895"]
BB894 -> BB903 [tailport=s, headport=n, color=gray]
BB895 [shape=record label="{3222: begin-for-in[v33,v34]}" ] 
BB895 -> BB896 [tailport=s, headport=n, headlabel="      896"]
BB895 -> BB903 [tailport=s, headport=n, color=gray]
BB896 [shape=record label="{3223: has-next[v34,v35]|3224: if[v35](true-block:897,false-block:900)}" ] 
BB896 -> BB897 [tailport=s, headport=n, headlabel="      897"]
BB896 -> BB900 [tailport=s, headport=n, headlabel="      900"]
BB897 [shape=record label="{3225: next-property[v34,v36]|3226: write-variable[v36,'ai']|3227: read-variable['args',v38,-]|3228: read-variable['ai',v39,-]|3229: read-property[v38,v39,v37]|3230: \<variable-non-null-undef\>['args']|3231: write-variable[v37,'observer']*|3232: read-variable['observer',v41,-]|3233: read-property[v41,'unobserve',-]|3234: \<variable-non-null-undef\>['observer']}" ] 
BB897 -> BB898 [tailport=s, headport=n, headlabel="      898"]
BB897 -> BB903 [tailport=s, headport=n, color=gray]
BB898 [shape=record label="{3235: call-observer.unobserve [v41,'unobserve',-]*}" ] 
BB898 -> BB899 [tailport=s, headport=n, headlabel="      899"]
BB898 -> BB903 [tailport=s, headport=n, color=gray]
BB899 [shape=record label="{3236: end-for-in(begin-node:3222)}" ] 
BB899 -> BB896 [tailport=s, headport=n]
BB900 [shape=record label="{3237: end-for-in(begin-node:3211)}" ] 
BB900 -> BB893 [tailport=s, headport=n]
BB901 [shape=record label="{3238: read-variable['this',v29,-]|3239: new[v1]|3240: write-property[v29,'formatterObservers',v1]}" ] 
BB901 -> BB902 [tailport=s, headport=n, headlabel="      902"]
BB901 -> BB903 [tailport=s, headport=n, color=gray]
BB902 [shape=record label="{3241: return[v1]}" ] 
BB903 [shape=record label="{3242: exceptional-return}" ] 
//#$~ 725
}
