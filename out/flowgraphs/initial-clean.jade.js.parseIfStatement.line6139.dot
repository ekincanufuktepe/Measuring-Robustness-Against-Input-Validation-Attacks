digraph {
rankdir="TD"
BB_entry354[shape=none,label=""];
BB_entry354 -> BB6168 [tailport=s, headport=n, headlabel="    6168"]
BB6168 [shape=record label="{18760: constant[undefined,v1]}" ] 
BB6168 -> BB6169 [tailport=s, headport=n, headlabel="      6169"]
BB6169 [shape=record label="{18761: read-variable['next',v3,v2]}" ] 
BB6169 -> BB6170 [tailport=s, headport=n, headlabel="      6170"]
BB6169 -> BB6184 [tailport=s, headport=n, color=gray, headlabel="      6184"]
BB6170 [shape=record label="{18762: call-next [v2,v3,-]*}" ] 
BB6170 -> BB6171 [tailport=s, headport=n, headlabel="      6171"]
BB6170 -> BB6184 [tailport=s, headport=n, color=gray]
BB6171 [shape=record label="{18763: read-variable['node',v5,-]|18764: read-variable['parseParenExpression',v7,v6]}" ] 
BB6171 -> BB6172 [tailport=s, headport=n, headlabel="      6172"]
BB6171 -> BB6184 [tailport=s, headport=n, color=gray]
BB6172 [shape=record label="{18765: call-parseParenExpression [v6,v7,v4]}" ] 
BB6172 -> BB6173 [tailport=s, headport=n, headlabel="      6173"]
BB6172 -> BB6184 [tailport=s, headport=n, color=gray]
BB6173 [shape=record label="{18766: write-property[v5,'test',v4]|18767: \<variable-non-null-undef\>['node']*|18768: read-variable['node',v9,-]|18769: read-variable['parseStatement',v11,v10]}" ] 
BB6173 -> BB6174 [tailport=s, headport=n, headlabel="      6174"]
BB6173 -> BB6184 [tailport=s, headport=n, color=gray]
BB6174 [shape=record label="{18770: call-parseStatement [v10,v11,v8]}" ] 
BB6174 -> BB6175 [tailport=s, headport=n, headlabel="      6175"]
BB6174 -> BB6184 [tailport=s, headport=n, color=gray]
BB6175 [shape=record label="{18771: write-property[v9,'consequent',v8]|18772: \<variable-non-null-undef\>['node']*|18773: read-variable['node',v13,-]|18774: read-variable['eat',v16,v15]|18775: read-variable['_else',v17,-]}" ] 
BB6175 -> BB6176 [tailport=s, headport=n, headlabel="      6176"]
BB6175 -> BB6184 [tailport=s, headport=n, color=gray]
BB6176 [shape=record label="{18776: call-eat [v15,v16,v17,v14]}" ] 
BB6176 -> BB6177 [tailport=s, headport=n, headlabel="      6177"]
BB6176 -> BB6184 [tailport=s, headport=n, color=gray]
BB6177 [shape=record label="{18777: if[v14](true-block:6178,false-block:6179)}" ] 
BB6177 -> BB6178 [tailport=s, headport=n, headlabel="      6178"]
BB6177 -> BB6179 [tailport=s, headport=n, headlabel="      6179"]
BB6178 [shape=record label="{18778: read-variable['parseStatement',v19,v18]}" ] 
BB6178 -> BB6180 [tailport=s, headport=n, headlabel="      6180"]
BB6178 -> BB6184 [tailport=s, headport=n, color=gray]
BB6179 [shape=record label="{18779: constant[null,v12]}" ] 
BB6179 -> BB6181 [tailport=s, headport=n, headlabel="      6181"]
BB6180 [shape=record label="{18780: call-parseStatement [v18,v19,v12]}" ] 
BB6180 -> BB6181 [tailport=s, headport=n]
BB6180 -> BB6184 [tailport=s, headport=n, color=gray]
BB6181 [shape=record label="{18781: write-property[v13,'alternate',v12]|18782: \<variable-non-null-undef\>['node']*|18783: read-variable['finishNode',v19,v18]|18784: read-variable['node',v20,-]|18785: constant[\"IfStatement\",v21]}" ] 
BB6181 -> BB6182 [tailport=s, headport=n, headlabel="      6182"]
BB6181 -> BB6184 [tailport=s, headport=n, color=gray]
BB6182 [shape=record label="{18786: call-finishNode [v18,v19,v20,v21,v1]}" ] 
BB6182 -> BB6183 [tailport=s, headport=n, headlabel="      6183"]
BB6182 -> BB6184 [tailport=s, headport=n, color=gray]
BB6183 [shape=record label="{18787: return[v1]}" ] 
BB6184 [shape=record label="{18788: exceptional-return}" ] 
//#$~ 6144
}
