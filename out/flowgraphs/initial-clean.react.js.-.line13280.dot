digraph {
rankdir="TD"
BB_entry527[shape=none,label=""];
BB_entry527 -> BB7524 [tailport=s, headport=n, headlabel="    7524"]
BB7524 [shape=record label="{25329: constant[undefined,v1]}" ] 
BB7524 -> BB7525 [tailport=s, headport=n, headlabel="      7525"]
BB7525 [shape=record label="{25330: constant[\"production\",v3]|25331: constant[\"development\",v4]|25332: !==[v3,v4,v2]|25333: if[v2](true-block:7526,false-block:7527)}" ] 
BB7525 -> BB7526 [tailport=s, headport=n, headlabel="      7526"]
BB7525 -> BB7527 [tailport=s, headport=n, headlabel="      7527"]
BB7525 -> BB7536 [tailport=s, headport=n, color=gray, headlabel="      7536"]
BB7526 [shape=record label="{25334: read-variable['invariant',v6,v5]|25335: read-variable['ReactOwner',v9,-]|25336: read-property[v9,'isValidOwner',-]|25337: \<variable-non-null-undef\>['ReactOwner']|25338: read-variable['owner',v10,-]}" ] 
BB7526 -> BB7528 [tailport=s, headport=n, headlabel="      7528"]
BB7526 -> BB7536 [tailport=s, headport=n, color=gray]
BB7527 [shape=record label="{25339: read-variable['invariant',v6,v5]|25340: read-variable['ReactOwner',v9,-]|25341: read-property[v9,'isValidOwner',-]|25342: \<variable-non-null-undef\>['ReactOwner']|25343: read-variable['owner',v10,-]}" ] 
BB7527 -> BB7531 [tailport=s, headport=n, headlabel="      7531"]
BB7527 -> BB7536 [tailport=s, headport=n, color=gray]
BB7528 [shape=record label="{25344: call-ReactOwner.isValidOwner [v9,'isValidOwner',v10,v7]}" ] 
BB7528 -> BB7529 [tailport=s, headport=n, headlabel="      7529"]
BB7528 -> BB7536 [tailport=s, headport=n, color=gray]
BB7529 [shape=record label="{25345: constant[\"addComponentAsRefTo(...): Only a ReactOwner can have refs. This \",v18]|25346: constant[\"usually means that you're trying to add a ref to a component that \",v19]|25347: +[v18,v19,v16]|25348: constant[\"doesn't have an owner (that is, was not created inside of another \",v17]|25349: +[v16,v17,v14]|25350: constant[\"component's `render` method). Try rendering this component inside of \",v15]|25351: +[v14,v15,v12]|25352: constant[\"a new top-level component which will hold the ref.\",v13]|25353: +[v12,v13,v11]}" ] 
BB7529 -> BB7530 [tailport=s, headport=n, headlabel="      7530"]
BB7529 -> BB7536 [tailport=s, headport=n, color=gray]
BB7530 [shape=record label="{25354: call-invariant [v5,v6,v7,v11,-]}" ] 
BB7530 -> BB7533 [tailport=s, headport=n, headlabel="      7533"]
BB7530 -> BB7536 [tailport=s, headport=n, color=gray]
BB7531 [shape=record label="{25355: call-ReactOwner.isValidOwner [v9,'isValidOwner',v10,v7]}" ] 
BB7531 -> BB7532 [tailport=s, headport=n, headlabel="      7532"]
BB7531 -> BB7536 [tailport=s, headport=n, color=gray]
BB7532 [shape=record label="{25356: call-invariant [v5,v6,v7,-]}" ] 
BB7532 -> BB7533 [tailport=s, headport=n]
BB7532 -> BB7536 [tailport=s, headport=n, color=gray]
BB7533 [shape=record label="{25357: read-variable['owner',v6,-]|25358: read-property[v6,'attachRef',-]|25359: \<variable-non-null-undef\>['owner']|25360: read-variable['ref',v7,-]|25361: read-variable['component',v8,-]}" ] 
BB7533 -> BB7534 [tailport=s, headport=n, headlabel="      7534"]
BB7533 -> BB7536 [tailport=s, headport=n, color=gray]
BB7534 [shape=record label="{25362: call-owner.attachRef [v6,'attachRef',v7,v8,-]*}" ] 
BB7534 -> BB7535 [tailport=s, headport=n, headlabel="      7535"]
BB7534 -> BB7536 [tailport=s, headport=n, color=gray]
BB7535 [shape=record label="{25363: return[v1]}" ] 
BB7536 [shape=record label="{25364: exceptional-return}" ] 
//#$~ 13289
}
