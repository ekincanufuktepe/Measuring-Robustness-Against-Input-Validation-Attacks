digraph {
rankdir="TD"
BB_entry247[shape=none,label=""];
BB_entry247 -> BB3301 [tailport=s, headport=n, headlabel="    3301"]
BB3301 [shape=record label="{10845: constant[undefined,v1]|10846: vardecl['STATE_CHANGE']|10847: vardecl['SYNCED']|10848: vardecl['SYNCING']|10849: vardecl['SyncMachine']|10850: vardecl['UNSYNCED']|10851: vardecl['event']|10852: vardecl['_fn']|10853: vardecl['_i']|10854: vardecl['_len']|10855: vardecl['_ref']}" ] 
BB3301 -> BB3302 [tailport=s, headport=n, headlabel="      3302"]
BB3302 [shape=record label="{10856: constant[\"unsynced\",v2]|10857: write-variable[v2,'UNSYNCED']*|10858: constant[\"syncing\",v3]|10859: write-variable[v3,'SYNCING']*|10860: constant[\"synced\",v4]|10861: write-variable[v4,'SYNCED']*|10862: constant[\"syncStateChange\",v5]|10863: write-variable[v5,'STATE_CHANGE']*|10864: new[v6]|10865: read-variable['UNSYNCED',v7,-]|10866: write-property[v6,'_syncState',v7]|10867: constant[null,v8]|10868: write-property[v6,'_previousSyncState',v8]|10869: function-expr[function ( ),v9]|10870: write-property[v6,'syncState',v9]|10871: function-expr[function ( ),v10]|10872: write-property[v6,'isUnsynced',v10]|10873: function-expr[function ( ),v11]|10874: write-property[v6,'isSynced',v11]|10875: function-expr[function ( ),v12]|10876: write-property[v6,'isSyncing',v12]|10877: function-expr[function ( ),v13]|10878: write-property[v6,'unsync',v13]|10879: function-expr[function ( ),v14]|10880: write-property[v6,'beginSync',v14]|10881: function-expr[function ( ),v15]|10882: write-property[v6,'finishSync',v15]|10883: function-expr[function ( ),v16]|10884: write-property[v6,'abortSync',v16]|10885: write-variable[v6,'SyncMachine']*|10886: read-variable['Array',v18,-]|10887: read-variable['UNSYNCED',v19,-]|10888: read-variable['SYNCING',v20,-]|10889: read-variable['SYNCED',v21,-]|10890: read-variable['STATE_CHANGE',v22,-]}" ] 
BB3302 -> BB3303 [tailport=s, headport=n, headlabel="      3303"]
BB3302 -> BB3314 [tailport=s, headport=n, color=gray, headlabel="      3314"]
BB3303 [shape=record label="{10891: construct [-,v18,v19,v20,v21,v22,v17]}" ] 
BB3303 -> BB3304 [tailport=s, headport=n, headlabel="      3304"]
BB3303 -> BB3314 [tailport=s, headport=n, color=gray]
BB3304 [shape=record label="{10892: write-variable[v17,'_ref']*|10893: function-expr[function ( event ),v23]|10894: write-variable[v23,'_fn']*|10895: constant[0.0,v25]|10896: write-variable[v25,'_i']|10897: read-variable['_ref',v27,-]|10898: read-property[v27,'length',v26]|10899: \<variable-non-null-undef\>['_ref']|10900: write-variable[v26,'_len']}" ] 
BB3304 -> BB3305 [tailport=s, headport=n, headlabel="      3305"]
BB3304 -> BB3314 [tailport=s, headport=n, color=gray]
BB3305 [shape=record label="{10901: read-variable['_i',v28,-]|10902: read-variable['_len',v29,-]|10903: \<[v28,v29,v24]|10904: if[v24](true-block:3306,false-block:3307)}" ] 
BB3305 -> BB3306 [tailport=s, headport=n, headlabel="      3306"]
BB3305 -> BB3307 [tailport=s, headport=n, headlabel="      3307"]
BB3305 -> BB3314 [tailport=s, headport=n, color=gray]
BB3306 [shape=record label="{10905: read-variable['_ref',v31,-]|10906: read-variable['_i',v32,-]|10907: read-property[v31,v32,v30]|10908: \<variable-non-null-undef\>['_ref']|10909: write-variable[v30,'event']*|10910: read-variable['_fn',v34,v33]|10911: read-variable['event',v35,-]}" ] 
BB3306 -> BB3308 [tailport=s, headport=n, headlabel="      3308"]
BB3306 -> BB3314 [tailport=s, headport=n, color=gray]
BB3307 [shape=record label="{10912: read-variable['Object',v34,-]|10913: read-property[v34,'freeze',v33]|10914: \<variable-non-null-undef\>['Object']|10915: typeof[v33,v31]|10916: constant[\"function\",v32]|10917: ===[v31,v32,v30]|10918: if[v30](true-block:3310,false-block:3312)}" ] 
BB3307 -> BB3310 [tailport=s, headport=n, headlabel="      3310"]
BB3307 -> BB3312 [tailport=s, headport=n, headlabel="      3312"]
BB3307 -> BB3314 [tailport=s, headport=n, color=gray]
BB3308 [shape=record label="{10919: call-_fn [v33,v34,v35,-]*}" ] 
BB3308 -> BB3309 [tailport=s, headport=n, headlabel="      3309"]
BB3308 -> BB3314 [tailport=s, headport=n, color=gray]
BB3309 [shape=record label="{10920: constant[1.0,v36]|10921: read-variable['_i',v37,-]|10922: +[v37,v38]|10923: +[v38,v36,v39]|10924: write-variable[v39,'_i']}" ] 
BB3309 -> BB3305 [tailport=s, headport=n]
BB3309 -> BB3314 [tailport=s, headport=n, color=gray]
BB3310 [shape=record label="{10925: read-variable['Object',v36,-]|10926: read-property[v36,'freeze',-]|10927: \<variable-non-null-undef\>['Object']|10928: read-variable['SyncMachine',v37,-]}" ] 
BB3310 -> BB3311 [tailport=s, headport=n, headlabel="      3311"]
BB3310 -> BB3314 [tailport=s, headport=n, color=gray]
BB3311 [shape=record label="{10929: call-Object.freeze [v36,'freeze',v37,-]*}" ] 
BB3311 -> BB3312 [tailport=s, headport=n]
BB3311 -> BB3314 [tailport=s, headport=n, color=gray]
BB3312 [shape=record label="{10930: read-variable['module',v36,-]|10931: read-variable['SyncMachine',v35,-]|10932: write-property[v36,'exports',v35]|10933: \<variable-non-null-undef\>['module']*}" ] 
BB3312 -> BB3313 [tailport=s, headport=n, headlabel="      3313"]
BB3312 -> BB3314 [tailport=s, headport=n, color=gray]
BB3313 [shape=record label="{10934: return[v1]}" ] 
BB3314 [shape=record label="{10935: exceptional-return}" ] 
//#$~ 2889
}
