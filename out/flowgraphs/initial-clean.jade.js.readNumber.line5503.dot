digraph {
rankdir="TD"
BB_entry320[shape=none,label=""];
BB_entry320 -> BB5391 [tailport=s, headport=n, headlabel="    5391"]
BB5391 [shape=record label="{16641: constant[undefined,v1]|16642: vardecl['start']|16643: vardecl['isFloat']|16644: vardecl['octal']|16645: vardecl['next']|16646: vardecl['str']|16647: vardecl['val']}" ] 
BB5391 -> BB5392 [tailport=s, headport=n, headlabel="      5392"]
BB5392 [shape=record label="{16648: read-variable['tokPos',v2,-]|16649: write-variable[v2,'start']*|16650: constant[false,v3]|16651: write-variable[v3,'isFloat']*|16652: read-variable['input',v8,-]|16653: read-property[v8,'charCodeAt',-]|16654: \<variable-non-null-undef\>['input']|16655: read-variable['tokPos',v9,-]}" ] 
BB5392 -> BB5393 [tailport=s, headport=n, headlabel="      5393"]
BB5392 -> BB5457 [tailport=s, headport=n, color=gray, headlabel="      5457"]
BB5393 [shape=record label="{16656: call-input.charCodeAt [v8,'charCodeAt',v9,v5]}" ] 
BB5393 -> BB5394 [tailport=s, headport=n, headlabel="      5394"]
BB5393 -> BB5457 [tailport=s, headport=n, color=gray]
BB5394 [shape=record label="{16657: constant[48.0,v6]|16658: ===[v5,v6,v4]|16659: write-variable[v4,'octal']*|16660: read-variable['startsWithDot',v11,-]|16661: ![v11,v10]|16662: if[v10](true-block:5395,false-block:5398)}" ] 
BB5394 -> BB5398 [tailport=s, headport=n, headlabel="      5398"]
BB5394 -> BB5395 [tailport=s, headport=n, headlabel="      5395"]
BB5394 -> BB5457 [tailport=s, headport=n, color=gray]
BB5395 [shape=record label="{16663: read-variable['readInt',v15,v14]|16664: constant[10.0,v16]}" ] 
BB5395 -> BB5396 [tailport=s, headport=n, headlabel="      5396"]
BB5395 -> BB5457 [tailport=s, headport=n, color=gray]
BB5396 [shape=record label="{16665: call-readInt [v14,v15,v16,v12]}" ] 
BB5396 -> BB5397 [tailport=s, headport=n, headlabel="      5397"]
BB5396 -> BB5457 [tailport=s, headport=n, color=gray]
BB5397 [shape=record label="{16666: constant[null,v13]|16667: ===[v12,v13,v10]}" ] 
BB5397 -> BB5398 [tailport=s, headport=n]
BB5397 -> BB5457 [tailport=s, headport=n, color=gray]
BB5398 [shape=record label="{16668: if[v10](true-block:5399,false-block:5401)}" ] 
BB5398 -> BB5399 [tailport=s, headport=n, headlabel="      5399"]
BB5398 -> BB5401 [tailport=s, headport=n, headlabel="      5401"]
BB5399 [shape=record label="{16669: read-variable['raise',v13,v12]|16670: read-variable['start',v14,-]|16671: constant[\"Invalid number\",v15]}" ] 
BB5399 -> BB5400 [tailport=s, headport=n, headlabel="      5400"]
BB5399 -> BB5457 [tailport=s, headport=n, color=gray]
BB5400 [shape=record label="{16672: call-raise [v12,v13,v14,v15,-]*}" ] 
BB5400 -> BB5401 [tailport=s, headport=n]
BB5400 -> BB5457 [tailport=s, headport=n, color=gray]
BB5401 [shape=record label="{16673: read-variable['input',v16,-]|16674: read-property[v16,'charCodeAt',-]|16675: \<variable-non-null-undef\>['input']|16676: read-variable['tokPos',v17,-]}" ] 
BB5401 -> BB5402 [tailport=s, headport=n, headlabel="      5402"]
BB5401 -> BB5457 [tailport=s, headport=n, color=gray]
BB5402 [shape=record label="{16677: call-input.charCodeAt [v16,'charCodeAt',v17,v13]}" ] 
BB5402 -> BB5403 [tailport=s, headport=n, headlabel="      5403"]
BB5402 -> BB5457 [tailport=s, headport=n, color=gray]
BB5403 [shape=record label="{16678: constant[46.0,v14]|16679: ===[v13,v14,v12]|16680: if[v12](true-block:5404,false-block:5407)}" ] 
BB5403 -> BB5404 [tailport=s, headport=n, headlabel="      5404"]
BB5403 -> BB5407 [tailport=s, headport=n, headlabel="      5407"]
BB5403 -> BB5457 [tailport=s, headport=n, color=gray]
BB5404 [shape=record label="{16681: constant[1.0,v18]|16682: read-variable['tokPos',v19,-]|16683: +[v19,v20]|16684: +[v20,v18,v21]|16685: write-variable[v21,'tokPos']*|16686: read-variable['readInt',v23,v22]|16687: constant[10.0,v24]}" ] 
BB5404 -> BB5405 [tailport=s, headport=n, headlabel="      5405"]
BB5404 -> BB5457 [tailport=s, headport=n, color=gray]
BB5405 [shape=record label="{16688: call-readInt [v22,v23,v24,-]*}" ] 
BB5405 -> BB5406 [tailport=s, headport=n, headlabel="      5406"]
BB5405 -> BB5457 [tailport=s, headport=n, color=gray]
BB5406 [shape=record label="{16689: constant[true,v25]|16690: write-variable[v25,'isFloat']*}" ] 
BB5406 -> BB5407 [tailport=s, headport=n]
BB5407 [shape=record label="{16691: read-variable['input',v20,-]|16692: read-property[v20,'charCodeAt',-]|16693: \<variable-non-null-undef\>['input']|16694: read-variable['tokPos',v21,-]}" ] 
BB5407 -> BB5408 [tailport=s, headport=n, headlabel="      5408"]
BB5407 -> BB5457 [tailport=s, headport=n, color=gray]
BB5408 [shape=record label="{16695: call-input.charCodeAt [v20,'charCodeAt',v21,v18]}" ] 
BB5408 -> BB5409 [tailport=s, headport=n, headlabel="      5409"]
BB5408 -> BB5457 [tailport=s, headport=n, color=gray]
BB5409 [shape=record label="{16696: write-variable[v18,'next']*|16697: read-variable['next',v23,-]|16698: constant[69.0,v24]|16699: ===[v23,v24,v22]|16700: if[v22](true-block:5411,false-block:5410)}" ] 
BB5409 -> BB5411 [tailport=s, headport=n, headlabel="      5411"]
BB5409 -> BB5410 [tailport=s, headport=n, headlabel="      5410"]
BB5409 -> BB5457 [tailport=s, headport=n, color=gray]
BB5410 [shape=record label="{16701: read-variable['next',v23,-]|16702: constant[101.0,v24]|16703: ===[v23,v24,v22]}" ] 
BB5410 -> BB5411 [tailport=s, headport=n]
BB5410 -> BB5457 [tailport=s, headport=n, color=gray]
BB5411 [shape=record label="{16704: if[v22](true-block:5412,false-block:5424)}" ] 
BB5411 -> BB5412 [tailport=s, headport=n, headlabel="      5412"]
BB5411 -> BB5424 [tailport=s, headport=n, headlabel="      5424"]
BB5412 [shape=record label="{16705: read-variable['input',v25,-]|16706: read-property[v25,'charCodeAt',-]|16707: \<variable-non-null-undef\>['input']|16708: constant[1.0,v27]|16709: read-variable['tokPos',v28,-]|16710: +[v28,v29]|16711: +[v29,v27,v26]|16712: write-variable[v26,'tokPos']}" ] 
BB5412 -> BB5413 [tailport=s, headport=n, headlabel="      5413"]
BB5412 -> BB5457 [tailport=s, headport=n, color=gray]
BB5413 [shape=record label="{16713: call-input.charCodeAt [v25,'charCodeAt',v26,v23]}" ] 
BB5413 -> BB5414 [tailport=s, headport=n, headlabel="      5414"]
BB5413 -> BB5457 [tailport=s, headport=n, color=gray]
BB5414 [shape=record label="{16714: write-variable[v23,'next']*|16715: read-variable['next',v31,-]|16716: constant[43.0,v32]|16717: ===[v31,v32,v30]|16718: if[v30](true-block:5416,false-block:5415)}" ] 
BB5414 -> BB5416 [tailport=s, headport=n, headlabel="      5416"]
BB5414 -> BB5415 [tailport=s, headport=n, headlabel="      5415"]
BB5414 -> BB5457 [tailport=s, headport=n, color=gray]
BB5415 [shape=record label="{16719: read-variable['next',v31,-]|16720: constant[45.0,v32]|16721: ===[v31,v32,v30]}" ] 
BB5415 -> BB5416 [tailport=s, headport=n]
BB5415 -> BB5457 [tailport=s, headport=n, color=gray]
BB5416 [shape=record label="{16722: if[v30](true-block:5417,false-block:5418)}" ] 
BB5416 -> BB5417 [tailport=s, headport=n, headlabel="      5417"]
BB5416 -> BB5418 [tailport=s, headport=n, headlabel="      5418"]
BB5417 [shape=record label="{16723: constant[1.0,v31]|16724: read-variable['tokPos',v32,-]|16725: +[v32,v33]|16726: +[v33,v31,v34]|16727: write-variable[v34,'tokPos']*}" ] 
BB5417 -> BB5418 [tailport=s, headport=n]
BB5417 -> BB5457 [tailport=s, headport=n, color=gray]
BB5418 [shape=record label="{16728: read-variable['readInt',v35,v34]|16729: constant[10.0,v36]}" ] 
BB5418 -> BB5419 [tailport=s, headport=n, headlabel="      5419"]
BB5418 -> BB5457 [tailport=s, headport=n, color=gray]
BB5419 [shape=record label="{16730: call-readInt [v34,v35,v36,v32]}" ] 
BB5419 -> BB5420 [tailport=s, headport=n, headlabel="      5420"]
BB5419 -> BB5457 [tailport=s, headport=n, color=gray]
BB5420 [shape=record label="{16731: constant[null,v33]|16732: ===[v32,v33,v31]|16733: if[v31](true-block:5421,false-block:5423)}" ] 
BB5420 -> BB5421 [tailport=s, headport=n, headlabel="      5421"]
BB5420 -> BB5423 [tailport=s, headport=n, headlabel="      5423"]
BB5420 -> BB5457 [tailport=s, headport=n, color=gray]
BB5421 [shape=record label="{16734: read-variable['raise',v38,v37]|16735: read-variable['start',v39,-]|16736: constant[\"Invalid number\",v40]}" ] 
BB5421 -> BB5422 [tailport=s, headport=n, headlabel="      5422"]
BB5421 -> BB5457 [tailport=s, headport=n, color=gray]
BB5422 [shape=record label="{16737: call-raise [v37,v38,v39,v40,-]*}" ] 
BB5422 -> BB5423 [tailport=s, headport=n]
BB5422 -> BB5457 [tailport=s, headport=n, color=gray]
BB5423 [shape=record label="{16738: constant[true,v37]|16739: write-variable[v37,'isFloat']*}" ] 
BB5423 -> BB5424 [tailport=s, headport=n]
BB5424 [shape=record label="{16740: read-variable['isIdentifierStart',v25,v24]|16741: read-variable['input',v28,-]|16742: read-property[v28,'charCodeAt',-]|16743: \<variable-non-null-undef\>['input']|16744: read-variable['tokPos',v29,-]}" ] 
BB5424 -> BB5425 [tailport=s, headport=n, headlabel="      5425"]
BB5424 -> BB5457 [tailport=s, headport=n, color=gray]
BB5425 [shape=record label="{16745: call-input.charCodeAt [v28,'charCodeAt',v29,v26]}" ] 
BB5425 -> BB5426 [tailport=s, headport=n, headlabel="      5426"]
BB5425 -> BB5457 [tailport=s, headport=n, color=gray]
BB5426 [shape=record label="{16746: call-isIdentifierStart [v24,v25,v26,v23]}" ] 
BB5426 -> BB5427 [tailport=s, headport=n, headlabel="      5427"]
BB5426 -> BB5457 [tailport=s, headport=n, color=gray]
BB5427 [shape=record label="{16747: if[v23](true-block:5428,false-block:5430)}" ] 
BB5427 -> BB5428 [tailport=s, headport=n, headlabel="      5428"]
BB5427 -> BB5430 [tailport=s, headport=n, headlabel="      5430"]
BB5428 [shape=record label="{16748: read-variable['raise',v31,v30]|16749: read-variable['tokPos',v32,-]|16750: constant[\"Identifier directly after number\",v33]}" ] 
BB5428 -> BB5429 [tailport=s, headport=n, headlabel="      5429"]
BB5428 -> BB5457 [tailport=s, headport=n, color=gray]
BB5429 [shape=record label="{16751: call-raise [v30,v31,v32,v33,-]*}" ] 
BB5429 -> BB5430 [tailport=s, headport=n]
BB5429 -> BB5457 [tailport=s, headport=n, color=gray]
BB5430 [shape=record label="{16752: read-variable['input',v32,-]|16753: read-property[v32,'slice',-]|16754: \<variable-non-null-undef\>['input']|16755: read-variable['start',v33,-]|16756: read-variable['tokPos',v34,-]}" ] 
BB5430 -> BB5431 [tailport=s, headport=n, headlabel="      5431"]
BB5430 -> BB5457 [tailport=s, headport=n, color=gray]
BB5431 [shape=record label="{16757: call-input.slice [v32,'slice',v33,v34,v30]}" ] 
BB5431 -> BB5432 [tailport=s, headport=n, headlabel="      5432"]
BB5431 -> BB5457 [tailport=s, headport=n, color=gray]
BB5432 [shape=record label="{16758: write-variable[v30,'str']*|16759: read-variable['isFloat',v35,-]|16760: if[v35](true-block:5433,false-block:5434)}" ] 
BB5432 -> BB5433 [tailport=s, headport=n, headlabel="      5433"]
BB5432 -> BB5434 [tailport=s, headport=n, headlabel="      5434"]
BB5432 -> BB5457 [tailport=s, headport=n, color=gray]
BB5433 [shape=record label="{16761: read-variable['parseFloat',v38,v37]|16762: read-variable['str',v39,-]}" ] 
BB5433 -> BB5435 [tailport=s, headport=n, headlabel="      5435"]
BB5433 -> BB5457 [tailport=s, headport=n, color=gray]
BB5434 [shape=record label="{16763: read-variable['octal',v37,-]|16764: ![v37,v36]|16765: if[v36](true-block:5438,false-block:5437)}" ] 
BB5434 -> BB5438 [tailport=s, headport=n, headlabel="      5438"]
BB5434 -> BB5437 [tailport=s, headport=n, headlabel="      5437"]
BB5434 -> BB5457 [tailport=s, headport=n, color=gray]
BB5435 [shape=record label="{16766: call-parseFloat [v37,v38,v39,v36]}" ] 
BB5435 -> BB5436 [tailport=s, headport=n, headlabel="      5436"]
BB5435 -> BB5457 [tailport=s, headport=n, color=gray]
BB5436 [shape=record label="{16767: write-variable[v36,'val']*}" ] 
BB5436 -> BB5454 [tailport=s, headport=n, headlabel="      5454"]
BB5437 [shape=record label="{16768: read-variable['str',v39,-]|16769: read-property[v39,'length',v37]|16770: \<variable-non-null-undef\>['str']|16771: constant[1.0,v38]|16772: ===[v37,v38,v36]}" ] 
BB5437 -> BB5438 [tailport=s, headport=n]
BB5437 -> BB5457 [tailport=s, headport=n, color=gray]
BB5438 [shape=record label="{16773: if[v36](true-block:5439,false-block:5440)}" ] 
BB5438 -> BB5439 [tailport=s, headport=n, headlabel="      5439"]
BB5438 -> BB5440 [tailport=s, headport=n, headlabel="      5440"]
BB5439 [shape=record label="{16774: read-variable['parseInt',v39,v38]|16775: read-variable['str',v40,-]|16776: constant[10.0,v41]}" ] 
BB5439 -> BB5441 [tailport=s, headport=n, headlabel="      5441"]
BB5439 -> BB5457 [tailport=s, headport=n, color=gray]
BB5440 [shape=record label="{16777: read-variable['RegExp',v40,-]|16778: constant[\"[89]\",v41]}" ] 
BB5440 -> BB5443 [tailport=s, headport=n, headlabel="      5443"]
BB5440 -> BB5457 [tailport=s, headport=n, color=gray]
BB5441 [shape=record label="{16779: call-parseInt [v38,v39,v40,v41,v37]}" ] 
BB5441 -> BB5442 [tailport=s, headport=n, headlabel="      5442"]
BB5441 -> BB5457 [tailport=s, headport=n, color=gray]
BB5442 [shape=record label="{16780: write-variable[v37,'val']*}" ] 
BB5442 -> BB5454 [tailport=s, headport=n]
BB5443 [shape=record label="{16781: construct [-,v40,v41,v39]}" ] 
BB5443 -> BB5444 [tailport=s, headport=n, headlabel="      5444"]
BB5443 -> BB5457 [tailport=s, headport=n, color=gray]
BB5444 [shape=record label="{16782: read-property[v39,'test',-]|16783: read-variable['str',v42,-]}" ] 
BB5444 -> BB5445 [tailport=s, headport=n, headlabel="      5445"]
BB5444 -> BB5457 [tailport=s, headport=n, color=gray]
BB5445 [shape=record label="{16784: call-null [v39,'test',v42,v37]}" ] 
BB5445 -> BB5446 [tailport=s, headport=n, headlabel="      5446"]
BB5445 -> BB5457 [tailport=s, headport=n, color=gray]
BB5446 [shape=record label="{16785: if[v37](true-block:5448,false-block:5447)}" ] 
BB5446 -> BB5448 [tailport=s, headport=n, headlabel="      5448"]
BB5446 -> BB5447 [tailport=s, headport=n, headlabel="      5447"]
BB5447 [shape=record label="{16786: read-variable['strict',v37,-]}" ] 
BB5447 -> BB5448 [tailport=s, headport=n]
BB5447 -> BB5457 [tailport=s, headport=n, color=gray]
BB5448 [shape=record label="{16787: if[v37](true-block:5449,false-block:5450)}" ] 
BB5448 -> BB5449 [tailport=s, headport=n, headlabel="      5449"]
BB5448 -> BB5450 [tailport=s, headport=n, headlabel="      5450"]
BB5449 [shape=record label="{16788: read-variable['raise',v39,v38]|16789: read-variable['start',v40,-]|16790: constant[\"Invalid number\",v41]}" ] 
BB5449 -> BB5451 [tailport=s, headport=n, headlabel="      5451"]
BB5449 -> BB5457 [tailport=s, headport=n, color=gray]
BB5450 [shape=record label="{16791: read-variable['parseInt',v40,v39]|16792: read-variable['str',v41,-]|16793: constant[8.0,v42]}" ] 
BB5450 -> BB5452 [tailport=s, headport=n, headlabel="      5452"]
BB5450 -> BB5457 [tailport=s, headport=n, color=gray]
BB5451 [shape=record label="{16794: call-raise [v38,v39,v40,v41,-]*}" ] 
BB5451 -> BB5454 [tailport=s, headport=n]
BB5451 -> BB5457 [tailport=s, headport=n, color=gray]
BB5452 [shape=record label="{16795: call-parseInt [v39,v40,v41,v42,v38]}" ] 
BB5452 -> BB5453 [tailport=s, headport=n, headlabel="      5453"]
BB5452 -> BB5457 [tailport=s, headport=n, color=gray]
BB5453 [shape=record label="{16796: write-variable[v38,'val']*}" ] 
BB5453 -> BB5454 [tailport=s, headport=n]
BB5454 [shape=record label="{16797: read-variable['finishToken',v37,v36]|16798: read-variable['_num',v38,-]|16799: read-variable['val',v39,-]}" ] 
BB5454 -> BB5455 [tailport=s, headport=n, headlabel="      5455"]
BB5454 -> BB5457 [tailport=s, headport=n, color=gray]
BB5455 [shape=record label="{16800: call-finishToken [v36,v37,v38,v39,v1]}" ] 
BB5455 -> BB5456 [tailport=s, headport=n, headlabel="      5456"]
BB5455 -> BB5457 [tailport=s, headport=n, color=gray]
BB5456 [shape=record label="{16801: return[v1]}" ] 
BB5457 [shape=record label="{16802: exceptional-return}" ] 
//#$~ 5525
}
