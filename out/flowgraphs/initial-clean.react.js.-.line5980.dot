digraph {
rankdir="TD"
BB_entry223[shape=none,label=""];
BB_entry223 -> BB3105 [tailport=s, headport=n, headlabel="    3105"]
BB3105 [shape=record label="{10871: constant[undefined,v1]}" ] 
BB3105 -> BB3106 [tailport=s, headport=n, headlabel="      3106"]
BB3106 [shape=record label="{10872: constant[\"production\",v3]|10873: constant[\"development\",v4]|10874: !==[v3,v4,v2]|10875: if[v2](true-block:3107,false-block:3108)}" ] 
BB3106 -> BB3107 [tailport=s, headport=n, headlabel="      3107"]
BB3106 -> BB3108 [tailport=s, headport=n, headlabel="      3108"]
BB3106 -> BB3127 [tailport=s, headport=n, color=gray, headlabel="      3127"]
BB3107 [shape=record label="{10876: read-variable['invariant',v6,v5]|10877: typeof['partialState',v8]|10878: constant[\"object\",v9]|10879: ===[v8,v9,v7]|10880: if[v7](true-block:3111,false-block:3109)}" ] 
BB3107 -> BB3111 [tailport=s, headport=n, headlabel="      3111"]
BB3107 -> BB3109 [tailport=s, headport=n, headlabel="      3109"]
BB3107 -> BB3127 [tailport=s, headport=n, color=gray]
BB3108 [shape=record label="{10881: read-variable['invariant',v6,v5]|10882: typeof['partialState',v8]|10883: constant[\"object\",v9]|10884: ===[v8,v9,v7]|10885: if[v7](true-block:3115,false-block:3113)}" ] 
BB3108 -> BB3115 [tailport=s, headport=n, headlabel="      3115"]
BB3108 -> BB3113 [tailport=s, headport=n, headlabel="      3113"]
BB3108 -> BB3127 [tailport=s, headport=n, color=gray]
BB3109 [shape=record label="{10886: typeof['partialState',v8]|10887: constant[\"function\",v9]|10888: ===[v8,v9,v7]|10889: if[v7](true-block:3111,false-block:3110)}" ] 
BB3109 -> BB3111 [tailport=s, headport=n]
BB3109 -> BB3110 [tailport=s, headport=n, headlabel="      3110"]
BB3109 -> BB3127 [tailport=s, headport=n, color=gray]
BB3110 [shape=record label="{10890: read-variable['partialState',v8,-]|10891: constant[null,v9]|10892: ==[v8,v9,v7]}" ] 
BB3110 -> BB3111 [tailport=s, headport=n]
BB3110 -> BB3127 [tailport=s, headport=n, color=gray]
BB3111 [shape=record label="{10893: constant[\"setState(...): takes an object of state variables to update or a \",v9]|10894: constant[\"function which returns an object of state variables.\",v10]|10895: +[v9,v10,v8]}" ] 
BB3111 -> BB3112 [tailport=s, headport=n, headlabel="      3112"]
BB3111 -> BB3127 [tailport=s, headport=n, color=gray]
BB3112 [shape=record label="{10896: call-invariant [v5,v6,v7,v8,-]}" ] 
BB3112 -> BB3116 [tailport=s, headport=n, headlabel="      3116"]
BB3112 -> BB3127 [tailport=s, headport=n, color=gray]
BB3113 [shape=record label="{10897: typeof['partialState',v8]|10898: constant[\"function\",v9]|10899: ===[v8,v9,v7]|10900: if[v7](true-block:3115,false-block:3114)}" ] 
BB3113 -> BB3115 [tailport=s, headport=n]
BB3113 -> BB3114 [tailport=s, headport=n, headlabel="      3114"]
BB3113 -> BB3127 [tailport=s, headport=n, color=gray]
BB3114 [shape=record label="{10901: read-variable['partialState',v8,-]|10902: constant[null,v9]|10903: ==[v8,v9,v7]}" ] 
BB3114 -> BB3115 [tailport=s, headport=n]
BB3114 -> BB3127 [tailport=s, headport=n, color=gray]
BB3115 [shape=record label="{10904: call-invariant [v5,v6,v7,-]}" ] 
BB3115 -> BB3116 [tailport=s, headport=n]
BB3115 -> BB3127 [tailport=s, headport=n, color=gray]
BB3116 [shape=record label="{10905: constant[\"production\",v6]|10906: constant[\"development\",v7]|10907: !==[v6,v7,v5]|10908: if[v5](true-block:3117,false-block:3121)}" ] 
BB3116 -> BB3117 [tailport=s, headport=n, headlabel="      3117"]
BB3116 -> BB3121 [tailport=s, headport=n, headlabel="      3121"]
BB3116 -> BB3127 [tailport=s, headport=n, color=gray]
BB3117 [shape=record label="{10909: constant[\"production\",v9]|10910: constant[\"development\",v10]|10911: !==[v9,v10,v8]|10912: if[v8](true-block:3118,false-block:3119)}" ] 
BB3117 -> BB3118 [tailport=s, headport=n, headlabel="      3118"]
BB3117 -> BB3119 [tailport=s, headport=n, headlabel="      3119"]
BB3117 -> BB3127 [tailport=s, headport=n, color=gray]
BB3118 [shape=record label="{10913: read-variable['warning',v12,v11]|10914: read-variable['partialState',v14,-]|10915: constant[null,v15]|10916: !=[v14,v15,v13]|10917: constant[\"setState(...): You passed an undefined or null state object; \",v17]|10918: constant[\"instead, use forceUpdate().\",v18]|10919: +[v17,v18,v16]}" ] 
BB3118 -> BB3120 [tailport=s, headport=n, headlabel="      3120"]
BB3118 -> BB3127 [tailport=s, headport=n, color=gray]
BB3119 [shape=record label="{10920: constant[null,-]}" ] 
BB3119 -> BB3121 [tailport=s, headport=n]
BB3120 [shape=record label="{10921: call-warning [v11,v12,v13,v16,-]}" ] 
BB3120 -> BB3121 [tailport=s, headport=n]
BB3120 -> BB3127 [tailport=s, headport=n, color=gray]
BB3121 [shape=record label="{10922: read-variable['ReactUpdateQueue',v9,-]|10923: read-property[v9,'enqueueSetState',-]|10924: \<variable-non-null-undef\>['ReactUpdateQueue']|10925: read-variable['this',v10,-]|10926: read-variable['partialState',v11,-]}" ] 
BB3121 -> BB3122 [tailport=s, headport=n, headlabel="      3122"]
BB3121 -> BB3127 [tailport=s, headport=n, color=gray]
BB3122 [shape=record label="{10927: call-ReactUpdateQueue.enqueueSetState [v9,'enqueueSetState',v10,v11,-]*}" ] 
BB3122 -> BB3123 [tailport=s, headport=n, headlabel="      3123"]
BB3122 -> BB3127 [tailport=s, headport=n, color=gray]
BB3123 [shape=record label="{10928: read-variable['callback',v12,-]|10929: if[v12](true-block:3124,false-block:3126)}" ] 
BB3123 -> BB3124 [tailport=s, headport=n, headlabel="      3124"]
BB3123 -> BB3126 [tailport=s, headport=n, headlabel="      3126"]
BB3123 -> BB3127 [tailport=s, headport=n, color=gray]
BB3124 [shape=record label="{10930: read-variable['ReactUpdateQueue',v14,-]|10931: read-property[v14,'enqueueCallback',-]|10932: \<variable-non-null-undef\>['ReactUpdateQueue']|10933: read-variable['this',v15,-]|10934: read-variable['callback',v16,-]}" ] 
BB3124 -> BB3125 [tailport=s, headport=n, headlabel="      3125"]
BB3124 -> BB3127 [tailport=s, headport=n, color=gray]
BB3125 [shape=record label="{10935: call-ReactUpdateQueue.enqueueCallback [v14,'enqueueCallback',v15,v16,-]*}" ] 
BB3125 -> BB3126 [tailport=s, headport=n]
BB3125 -> BB3127 [tailport=s, headport=n, color=gray]
BB3126 [shape=record label="{10936: return[v1]}" ] 
BB3127 [shape=record label="{10937: exceptional-return}" ] 
//#$~ 5999
}
