digraph {
rankdir="TD"
BB_entry56[shape=none,label=""];
BB_entry56 -> BB611 [tailport=s, headport=n, headlabel="    611"]
BB611 [shape=record label="{1821: constant[undefined,v1]|1822: vardecl['j']|1823: vardecl['len']|1824: vardecl['results']|1825: vardecl['value']}" ] 
BB611 -> BB612 [tailport=s, headport=n, headlabel="      612"]
BB612 [shape=record label="{1826: read-variable['objects',v3,-]|1827: ![v3,v2]|1828: if[v2](true-block:613,false-block:614)}" ] 
BB612 -> BB613 [tailport=s, headport=n, headlabel="      613"]
BB612 -> BB614 [tailport=s, headport=n, headlabel="      614"]
BB612 -> BB640 [tailport=s, headport=n, color=gray, headlabel="      640"]
BB613 [shape=record label="{1829: constant[undefined,v1]}" ] 
BB613 -> BB639 [tailport=s, headport=n, headlabel="      639"]
BB614 [shape=record label="{1830: typeof['objects',v5]|1831: constant[\"string\",v6]|1832: ===[v5,v6,v4]|1833: if[v4](true-block:615,false-block:618)}" ] 
BB614 -> BB615 [tailport=s, headport=n, headlabel="      615"]
BB614 -> BB618 [tailport=s, headport=n, headlabel="      618"]
BB614 -> BB640 [tailport=s, headport=n, color=gray]
BB615 [shape=record label="{1834: read-variable['JSON',v9,-]|1835: read-property[v9,'parse',-]|1836: \<variable-non-null-undef\>['JSON']|1837: read-variable['objects',v10,-]}" ] 
BB615 -> BB616 [tailport=s, headport=n, headlabel="      616"]
BB615 -> BB640 [tailport=s, headport=n, color=gray]
BB616 [shape=record label="{1838: call-JSON.parse [v9,'parse',v10,v7]}" ] 
BB616 -> BB617 [tailport=s, headport=n, headlabel="      617"]
BB616 -> BB640 [tailport=s, headport=n, color=gray]
BB617 [shape=record label="{1839: write-variable[v7,'objects']*}" ] 
BB617 -> BB618 [tailport=s, headport=n]
BB618 [shape=record label="{1840: read-variable['this',v9,-]|1841: read-property[v9,'beforeFromJSON',-]|1842: read-variable['objects',v10,-]}" ] 
BB618 -> BB619 [tailport=s, headport=n, headlabel="      619"]
BB618 -> BB640 [tailport=s, headport=n, color=gray]
BB619 [shape=record label="{1843: call-this.beforeFromJSON [v9,'beforeFromJSON',v10,v7]}" ] 
BB619 -> BB620 [tailport=s, headport=n, headlabel="      620"]
BB619 -> BB640 [tailport=s, headport=n, color=gray]
BB620 [shape=record label="{1844: write-variable[v7,'objects']*|1845: read-variable['Array',v13,-]|1846: read-property[v13,'isArray',-]|1847: \<variable-non-null-undef\>['Array']|1848: read-variable['objects',v14,-]}" ] 
BB620 -> BB621 [tailport=s, headport=n, headlabel="      621"]
BB620 -> BB640 [tailport=s, headport=n, color=gray]
BB621 [shape=record label="{1849: call-Array.isArray [v13,'isArray',v14,v11]}" ] 
BB621 -> BB622 [tailport=s, headport=n, headlabel="      622"]
BB621 -> BB640 [tailport=s, headport=n, color=gray]
BB622 [shape=record label="{1850: if[v11](true-block:623,false-block:624)}" ] 
BB622 -> BB623 [tailport=s, headport=n, headlabel="      623"]
BB622 -> BB624 [tailport=s, headport=n, headlabel="      624"]
BB623 [shape=record label="{1851: read-variable['Array',v16,-]}" ] 
BB623 -> BB625 [tailport=s, headport=n, headlabel="      625"]
BB623 -> BB640 [tailport=s, headport=n, color=gray]
BB624 [shape=record label="{1852: read-variable['objects',v16,-]|1853: read-variable['this',v17,-]|1854: instanceof[v16,v17,v15]|1855: if[v15](true-block:636,false-block:637)}" ] 
BB624 -> BB636 [tailport=s, headport=n, headlabel="      636"]
BB624 -> BB637 [tailport=s, headport=n, headlabel="      637"]
BB624 -> BB640 [tailport=s, headport=n, color=gray]
BB625 [shape=record label="{1856: construct [-,v16,v15]}" ] 
BB625 -> BB626 [tailport=s, headport=n, headlabel="      626"]
BB625 -> BB640 [tailport=s, headport=n, color=gray]
BB626 [shape=record label="{1857: write-variable[v15,'results']*|1858: constant[0.0,v18]|1859: write-variable[v18,'j']|1860: read-variable['objects',v20,-]|1861: read-property[v20,'length',v19]|1862: \<variable-non-null-undef\>['objects']|1863: write-variable[v19,'len']}" ] 
BB626 -> BB627 [tailport=s, headport=n, headlabel="      627"]
BB626 -> BB640 [tailport=s, headport=n, color=gray]
BB627 [shape=record label="{1864: read-variable['j',v21,-]|1865: read-variable['len',v22,-]|1866: \<[v21,v22,v17]|1867: if[v17](true-block:628,false-block:629)}" ] 
BB627 -> BB628 [tailport=s, headport=n, headlabel="      628"]
BB627 -> BB629 [tailport=s, headport=n, headlabel="      629"]
BB627 -> BB640 [tailport=s, headport=n, color=gray]
BB628 [shape=record label="{1868: read-variable['objects',v24,-]|1869: read-variable['j',v25,-]|1870: read-property[v24,v25,v23]|1871: \<variable-non-null-undef\>['objects']|1872: write-variable[v23,'value']*|1873: read-variable['value',v27,-]|1874: read-variable['this',v28,-]|1875: instanceof[v27,v28,v26]|1876: if[v26](true-block:630,false-block:631)}" ] 
BB628 -> BB630 [tailport=s, headport=n, headlabel="      630"]
BB628 -> BB631 [tailport=s, headport=n, headlabel="      631"]
BB628 -> BB640 [tailport=s, headport=n, color=gray]
BB629 [shape=record label="{1877: read-variable['results',v1,-]}" ] 
BB629 -> BB639 [tailport=s, headport=n]
BB629 -> BB640 [tailport=s, headport=n, color=gray]
BB630 [shape=record label="{1878: read-variable['results',v30,-]|1879: read-property[v30,'push',-]|1880: \<variable-non-null-undef\>['results']|1881: read-variable['value',v31,-]}" ] 
BB630 -> BB632 [tailport=s, headport=n, headlabel="      632"]
BB630 -> BB640 [tailport=s, headport=n, color=gray]
BB631 [shape=record label="{1882: read-variable['results',v30,-]|1883: read-property[v30,'push',-]|1884: \<variable-non-null-undef\>['results']|1885: read-variable['this',v32,-]|1886: read-variable['value',v33,-]}" ] 
BB631 -> BB633 [tailport=s, headport=n, headlabel="      633"]
BB631 -> BB640 [tailport=s, headport=n, color=gray]
BB632 [shape=record label="{1887: call-results.push [v30,'push',v31,-]*}" ] 
BB632 -> BB635 [tailport=s, headport=n, headlabel="      635"]
BB632 -> BB640 [tailport=s, headport=n, color=gray]
BB633 [shape=record label="{1888: construct [-,v32,v33,v31]}" ] 
BB633 -> BB634 [tailport=s, headport=n, headlabel="      634"]
BB633 -> BB640 [tailport=s, headport=n, color=gray]
BB634 [shape=record label="{1889: call-results.push [v30,'push',v31,-]*}" ] 
BB634 -> BB635 [tailport=s, headport=n]
BB634 -> BB640 [tailport=s, headport=n, color=gray]
BB635 [shape=record label="{1890: constant[1.0,v29]|1891: read-variable['j',v30,-]|1892: +[v30,v31]|1893: +[v31,v29,v32]|1894: write-variable[v32,'j']}" ] 
BB635 -> BB627 [tailport=s, headport=n]
BB635 -> BB640 [tailport=s, headport=n, color=gray]
BB636 [shape=record label="{1895: read-variable['objects',v1,-]}" ] 
BB636 -> BB639 [tailport=s, headport=n]
BB636 -> BB640 [tailport=s, headport=n, color=gray]
BB637 [shape=record label="{1896: read-variable['this',v18,-]|1897: read-variable['objects',v19,-]}" ] 
BB637 -> BB638 [tailport=s, headport=n, headlabel="      638"]
BB637 -> BB640 [tailport=s, headport=n, color=gray]
BB638 [shape=record label="{1898: construct [-,v18,v19,v1]}" ] 
BB638 -> BB639 [tailport=s, headport=n]
BB638 -> BB640 [tailport=s, headport=n, color=gray]
BB639 [shape=record label="{1899: return[v1]}" ] 
BB640 [shape=record label="{1900: exceptional-return}" ] 
//#$~ 529
}
