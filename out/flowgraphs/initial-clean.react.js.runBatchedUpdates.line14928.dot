digraph {
rankdir="TD"
BB_entry631[shape=none,label=""];
BB_entry631 -> BB8529 [tailport=s, headport=n, headlabel="    8529"]
BB8529 [shape=record label="{28168: constant[undefined,v1]|28169: vardecl['len']|28170: vardecl['i']|28171: vardecl['component']|28172: vardecl['callbacks']|28173: vardecl['j']}" ] 
BB8529 -> BB8530 [tailport=s, headport=n, headlabel="      8530"]
BB8530 [shape=record label="{28174: read-variable['transaction',v3,-]|28175: read-property[v3,'dirtyComponentsLength',v2]|28176: \<variable-non-null-undef\>['transaction']|28177: write-variable[v2,'len']*|28178: constant[\"production\",v5]|28179: constant[\"development\",v6]|28180: !==[v5,v6,v4]|28181: if[v4](true-block:8531,false-block:8532)}" ] 
BB8530 -> BB8531 [tailport=s, headport=n, headlabel="      8531"]
BB8530 -> BB8532 [tailport=s, headport=n, headlabel="      8532"]
BB8530 -> BB8550 [tailport=s, headport=n, color=gray, headlabel="      8550"]
BB8531 [shape=record label="{28182: read-variable['invariant',v8,v7]|28183: read-variable['len',v10,-]|28184: read-variable['dirtyComponents',v12,-]|28185: read-property[v12,'length',v11]|28186: \<variable-non-null-undef\>['dirtyComponents']|28187: ===[v10,v11,v9]|28188: constant[\"Expected flush transaction's stored dirty-components length (%s) to \",v14]|28189: constant[\"match dirty-components array length (%s).\",v15]|28190: +[v14,v15,v13]|28191: read-variable['len',v16,-]|28192: read-variable['dirtyComponents',v18,-]|28193: read-property[v18,'length',v17]|28194: \<variable-non-null-undef\>['dirtyComponents']}" ] 
BB8531 -> BB8533 [tailport=s, headport=n, headlabel="      8533"]
BB8531 -> BB8550 [tailport=s, headport=n, color=gray]
BB8532 [shape=record label="{28195: read-variable['invariant',v8,v7]|28196: read-variable['len',v10,-]|28197: read-variable['dirtyComponents',v12,-]|28198: read-property[v12,'length',v11]|28199: \<variable-non-null-undef\>['dirtyComponents']|28200: ===[v10,v11,v9]}" ] 
BB8532 -> BB8534 [tailport=s, headport=n, headlabel="      8534"]
BB8532 -> BB8550 [tailport=s, headport=n, color=gray]
BB8533 [shape=record label="{28201: call-invariant [v7,v8,v9,v13,v16,v17,-]}" ] 
BB8533 -> BB8535 [tailport=s, headport=n, headlabel="      8535"]
BB8533 -> BB8550 [tailport=s, headport=n, color=gray]
BB8534 [shape=record label="{28202: call-invariant [v7,v8,v9,-]}" ] 
BB8534 -> BB8535 [tailport=s, headport=n]
BB8534 -> BB8550 [tailport=s, headport=n, color=gray]
BB8535 [shape=record label="{28203: read-variable['dirtyComponents',v8,-]|28204: read-property[v8,'sort',-]|28205: \<variable-non-null-undef\>['dirtyComponents']|28206: read-variable['mountOrderComparator',v9,-]}" ] 
BB8535 -> BB8536 [tailport=s, headport=n, headlabel="      8536"]
BB8535 -> BB8550 [tailport=s, headport=n, color=gray]
BB8536 [shape=record label="{28207: call-dirtyComponents.sort [v8,'sort',v9,-]*}" ] 
BB8536 -> BB8537 [tailport=s, headport=n, headlabel="      8537"]
BB8536 -> BB8550 [tailport=s, headport=n, color=gray]
BB8537 [shape=record label="{28208: constant[0.0,v11]|28209: write-variable[v11,'i']*}" ] 
BB8537 -> BB8538 [tailport=s, headport=n, headlabel="      8538"]
BB8538 [shape=record label="{28210: read-variable['i',v12,-]|28211: read-variable['len',v13,-]|28212: \<[v12,v13,v10]|28213: if[v10](true-block:8539,false-block:8549)}" ] 
BB8538 -> BB8539 [tailport=s, headport=n, headlabel="      8539"]
BB8538 -> BB8549 [tailport=s, headport=n, headlabel="      8549"]
BB8538 -> BB8550 [tailport=s, headport=n, color=gray]
BB8539 [shape=record label="{28214: read-variable['dirtyComponents',v15,-]|28215: read-variable['i',v16,-]|28216: read-property[v15,v16,v14]|28217: \<variable-non-null-undef\>['dirtyComponents']|28218: write-variable[v14,'component']*|28219: read-variable['component',v18,-]|28220: read-property[v18,'_pendingCallbacks',v17]|28221: \<variable-non-null-undef\>['component']|28222: write-variable[v17,'callbacks']*|28223: read-variable['component',v20,-]|28224: constant[null,v19]|28225: write-property[v20,'_pendingCallbacks',v19]|28226: \<variable-non-null-undef\>['component']*|28227: read-variable['ReactReconciler',v22,-]|28228: read-property[v22,'performUpdateIfNecessary',-]|28229: \<variable-non-null-undef\>['ReactReconciler']|28230: read-variable['component',v23,-]|28231: read-variable['transaction',v25,-]|28232: read-property[v25,'reconcileTransaction',v24]|28233: \<variable-non-null-undef\>['transaction']}" ] 
BB8539 -> BB8540 [tailport=s, headport=n, headlabel="      8540"]
BB8539 -> BB8550 [tailport=s, headport=n, color=gray]
BB8540 [shape=record label="{28234: call-ReactReconciler.performUpdateIfNecessary [v22,'performUpdateIfNecessary',v23,v24,-]*}" ] 
BB8540 -> BB8541 [tailport=s, headport=n, headlabel="      8541"]
BB8540 -> BB8550 [tailport=s, headport=n, color=gray]
BB8541 [shape=record label="{28235: read-variable['callbacks',v26,-]|28236: if[v26](true-block:8542,false-block:8548)}" ] 
BB8541 -> BB8542 [tailport=s, headport=n, headlabel="      8542"]
BB8541 -> BB8548 [tailport=s, headport=n, headlabel="      8548"]
BB8541 -> BB8550 [tailport=s, headport=n, color=gray]
BB8542 [shape=record label="{28237: constant[0.0,v28]|28238: write-variable[v28,'j']*}" ] 
BB8542 -> BB8543 [tailport=s, headport=n, headlabel="      8543"]
BB8543 [shape=record label="{28239: read-variable['j',v29,-]|28240: read-variable['callbacks',v31,-]|28241: read-property[v31,'length',v30]|28242: \<variable-non-null-undef\>['callbacks']|28243: \<[v29,v30,v27]|28244: if[v27](true-block:8544,false-block:8548)}" ] 
BB8543 -> BB8544 [tailport=s, headport=n, headlabel="      8544"]
BB8543 -> BB8548 [tailport=s, headport=n]
BB8543 -> BB8550 [tailport=s, headport=n, color=gray]
BB8544 [shape=record label="{28245: read-variable['transaction',v34,-]|28246: read-property[v34,'callbackQueue',v33]|28247: \<variable-non-null-undef\>['transaction']|28248: read-property[v33,'enqueue',-]|28249: \<property-non-null-undef\>[v34,'callbackQueue']|28250: read-variable['callbacks',v36,-]|28251: read-variable['j',v37,-]|28252: read-property[v36,v37,v35]|28253: \<variable-non-null-undef\>['callbacks']|28254: read-variable['component',v40,-]|28255: read-property[v40,'getPublicInstance',-]|28256: \<variable-non-null-undef\>['component']}" ] 
BB8544 -> BB8545 [tailport=s, headport=n, headlabel="      8545"]
BB8544 -> BB8550 [tailport=s, headport=n, color=gray]
BB8545 [shape=record label="{28257: call-component.getPublicInstance [v40,'getPublicInstance',v38]}" ] 
BB8545 -> BB8546 [tailport=s, headport=n, headlabel="      8546"]
BB8545 -> BB8550 [tailport=s, headport=n, color=gray]
BB8546 [shape=record label="{28258: call-transaction.callbackQueue.enqueue [v33,'enqueue',v35,v38,-]*}" ] 
BB8546 -> BB8547 [tailport=s, headport=n, headlabel="      8547"]
BB8546 -> BB8550 [tailport=s, headport=n, color=gray]
BB8547 [shape=record label="{28259: constant[1.0,v41]|28260: read-variable['j',v42,-]|28261: +[v42,v43]|28262: +[v43,v41,v44]|28263: write-variable[v44,'j']}" ] 
BB8547 -> BB8543 [tailport=s, headport=n]
BB8547 -> BB8550 [tailport=s, headport=n, color=gray]
BB8548 [shape=record label="{28264: constant[1.0,v27]|28265: read-variable['i',v28,-]|28266: +[v28,v29]|28267: +[v29,v27,v30]|28268: write-variable[v30,'i']}" ] 
BB8548 -> BB8538 [tailport=s, headport=n]
BB8548 -> BB8550 [tailport=s, headport=n, color=gray]
BB8549 [shape=record label="{28269: return[v1]}" ] 
BB8550 [shape=record label="{28270: exceptional-return}" ] 
//#$~ 14943
}
