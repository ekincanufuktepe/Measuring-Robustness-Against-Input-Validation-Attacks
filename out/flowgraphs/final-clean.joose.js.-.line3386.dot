digraph {
rankdir="TD"
BB_entry319[shape=none,label=""];
BB_entry319 -> BB2932 [tailport=s, headport=n, headlabel="    2932"]
BB2932 [shape=record label="{8728: constant[undefined,v1]|8729: vardecl['self']|8730: vardecl['props']|8731: vardecl['eq']}" ] 
BB2932 -> BB2933 [tailport=s, headport=n, headlabel="      2933"]
BB2933 [shape=record label="{8732: read-variable['this',v2,-]|8733: write-variable[v2,'self']*|8734: read-variable['self',v5,-]|8735: read-property[v5,'getProps',-]|8736: \<variable-non-null-undef\>['self']}" ] 
BB2933 -> BB2934 [tailport=s, headport=n, headlabel="      2934"]
BB2933 -> BB2946 [tailport=s, headport=n, color=gray, headlabel="      2946"]
BB2934 [shape=record label="{8737: call-self.getProps [v5,'getProps',v3]}" ] 
BB2934 -> BB2935 [tailport=s, headport=n, headlabel="      2935"]
BB2934 -> BB2946 [tailport=s, headport=n, color=gray]
BB2935 [shape=record label="{8738: write-variable[v3,'props']*|8739: read-variable['props',v7,-]|8740: ![v7,v6]|8741: if[v6](true-block:2938,false-block:2936)}" ] 
BB2935 -> BB2938 [tailport=s, headport=n, headlabel="      2938"]
BB2935 -> BB2936 [tailport=s, headport=n, headlabel="      2936"]
BB2935 -> BB2946 [tailport=s, headport=n, color=gray]
BB2936 [shape=record label="{8742: read-variable['props',v9,-]|8743: read-property[v9,'values',v7]|8744: \<variable-non-null-undef\>['props']|8745: read-variable['undefined',v8,-]|8746: ===[v7,v8,v6]|8747: if[v6](true-block:2938,false-block:2937)}" ] 
BB2936 -> BB2938 [tailport=s, headport=n]
BB2936 -> BB2937 [tailport=s, headport=n, headlabel="      2937"]
BB2936 -> BB2946 [tailport=s, headport=n, color=gray]
BB2937 [shape=record label="{8748: read-variable['props',v10,-]|8749: read-property[v10,'values',v8]|8750: \<variable-non-null-undef\>['props']|8751: read-variable['Array',v9,-]|8752: instanceof[v8,v9,v7]|8753: ![v7,v6]}" ] 
BB2937 -> BB2938 [tailport=s, headport=n]
BB2937 -> BB2946 [tailport=s, headport=n, color=gray]
BB2938 [shape=record label="{8754: if[v6](true-block:2939,false-block:2940)}" ] 
BB2938 -> BB2939 [tailport=s, headport=n, headlabel="      2939"]
BB2938 -> BB2940 [tailport=s, headport=n, headlabel="      2940"]
BB2939 [shape=record label="{8755: constant[\"Enum Type needs Array of values in 'values' property of Type declaration\",v7]|8756: throw[v7]*}" ] 
BB2939 -> BB2940 [tailport=s, headport=n]
BB2939 -> BB2946 [tailport=s, headport=n, color=gray]
BB2940 [shape=record label="{8757: function-expr[function ( vv ),v7]|8758: write-variable[v7,'eq']*|8759: read-variable['Joose',v14,-]|8760: read-property[v14,'A',v13]|8761: \<variable-non-null-undef\>['Joose']|8762: read-property[v13,'grep',-]|8763: \<property-non-null-undef\>[v14,'A']|8764: read-variable['props',v16,-]|8765: read-property[v16,'values',v15]|8766: \<variable-non-null-undef\>['props']|8767: read-variable['eq',v17,-]}" ] 
BB2940 -> BB2941 [tailport=s, headport=n, headlabel="      2941"]
BB2940 -> BB2946 [tailport=s, headport=n, color=gray]
BB2941 [shape=record label="{8768: call-Joose.A.grep [v13,'grep',v15,v17,v11]}" ] 
BB2941 -> BB2942 [tailport=s, headport=n, headlabel="      2942"]
BB2941 -> BB2946 [tailport=s, headport=n, color=gray]
BB2942 [shape=record label="{8769: read-property[v11,'length',v9]|8770: constant[0.0,v10]|8771: !=[v9,v10,v8]|8772: if[v8](true-block:2943,false-block:2944)}" ] 
BB2942 -> BB2943 [tailport=s, headport=n, headlabel="      2943"]
BB2942 -> BB2944 [tailport=s, headport=n, headlabel="      2944"]
BB2942 -> BB2946 [tailport=s, headport=n, color=gray]
BB2943 [shape=record label="{8773: constant[true,v1]}" ] 
BB2943 -> BB2945 [tailport=s, headport=n, headlabel="      2945"]
BB2944 [shape=record label="{8774: constant[false,v1]}" ] 
BB2944 -> BB2945 [tailport=s, headport=n]
BB2945 [shape=record label="{8775: return[v1]}" ] 
BB2946 [shape=record label="{8776: exceptional-return}" ] 
//#$~ 3399
}
