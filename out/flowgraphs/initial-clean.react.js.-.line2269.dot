digraph {
rankdir="TD"
BB_entry80[shape=none,label=""];
BB_entry80 -> BB1258 [tailport=s, headport=n, headlabel="    1258"]
BB1258 [shape=record label="{4405: constant[undefined,v1]|4406: vardecl['newChild']}" ] 
BB1258 -> BB1259 [tailport=s, headport=n, headlabel="      1259"]
BB1259 [shape=record label="{4407: constant[\"production\",v3]|4408: constant[\"development\",v4]|4409: !==[v3,v4,v2]|4410: if[v2](true-block:1260,false-block:1261)}" ] 
BB1259 -> BB1260 [tailport=s, headport=n, headlabel="      1260"]
BB1259 -> BB1261 [tailport=s, headport=n, headlabel="      1261"]
BB1259 -> BB1283 [tailport=s, headport=n, color=gray, headlabel="      1283"]
BB1260 [shape=record label="{4411: read-variable['invariant',v6,v5]|4412: read-variable['ExecutionEnvironment',v8,-]|4413: read-property[v8,'canUseDOM',v7]|4414: \<variable-non-null-undef\>['ExecutionEnvironment']|4415: constant[\"dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a \",v14]|4416: constant[\"worker thread. Make sure `window` and `document` are available \",v15]|4417: +[v14,v15,v12]|4418: constant[\"globally before requiring React when unit testing or use \",v13]|4419: +[v12,v13,v10]|4420: constant[\"React.renderToString for server rendering.\",v11]|4421: +[v10,v11,v9]}" ] 
BB1260 -> BB1262 [tailport=s, headport=n, headlabel="      1262"]
BB1260 -> BB1283 [tailport=s, headport=n, color=gray]
BB1261 [shape=record label="{4422: read-variable['invariant',v6,v5]|4423: read-variable['ExecutionEnvironment',v8,-]|4424: read-property[v8,'canUseDOM',v7]|4425: \<variable-non-null-undef\>['ExecutionEnvironment']}" ] 
BB1261 -> BB1263 [tailport=s, headport=n, headlabel="      1263"]
BB1261 -> BB1283 [tailport=s, headport=n, color=gray]
BB1262 [shape=record label="{4426: call-invariant [v5,v6,v7,v9,-]}" ] 
BB1262 -> BB1264 [tailport=s, headport=n, headlabel="      1264"]
BB1262 -> BB1283 [tailport=s, headport=n, color=gray]
BB1263 [shape=record label="{4427: call-invariant [v5,v6,v7,-]}" ] 
BB1263 -> BB1264 [tailport=s, headport=n]
BB1263 -> BB1283 [tailport=s, headport=n, color=gray]
BB1264 [shape=record label="{4428: constant[\"production\",v6]|4429: constant[\"development\",v7]|4430: !==[v6,v7,v5]|4431: if[v5](true-block:1265,false-block:1266)}" ] 
BB1264 -> BB1265 [tailport=s, headport=n, headlabel="      1265"]
BB1264 -> BB1266 [tailport=s, headport=n, headlabel="      1266"]
BB1264 -> BB1283 [tailport=s, headport=n, color=gray]
BB1265 [shape=record label="{4432: read-variable['invariant',v9,v8]|4433: read-variable['markup',v10,-]|4434: constant[\"dangerouslyReplaceNodeWithMarkup(...): Missing markup.\",v11]}" ] 
BB1265 -> BB1267 [tailport=s, headport=n, headlabel="      1267"]
BB1265 -> BB1283 [tailport=s, headport=n, color=gray]
BB1266 [shape=record label="{4435: read-variable['invariant',v9,v8]|4436: read-variable['markup',v10,-]}" ] 
BB1266 -> BB1268 [tailport=s, headport=n, headlabel="      1268"]
BB1266 -> BB1283 [tailport=s, headport=n, color=gray]
BB1267 [shape=record label="{4437: call-invariant [v8,v9,v10,v11,-]}" ] 
BB1267 -> BB1269 [tailport=s, headport=n, headlabel="      1269"]
BB1267 -> BB1283 [tailport=s, headport=n, color=gray]
BB1268 [shape=record label="{4438: call-invariant [v8,v9,v10,-]}" ] 
BB1268 -> BB1269 [tailport=s, headport=n]
BB1268 -> BB1283 [tailport=s, headport=n, color=gray]
BB1269 [shape=record label="{4439: constant[\"production\",v9]|4440: constant[\"development\",v10]|4441: !==[v9,v10,v8]|4442: if[v8](true-block:1270,false-block:1271)}" ] 
BB1269 -> BB1270 [tailport=s, headport=n, headlabel="      1270"]
BB1269 -> BB1271 [tailport=s, headport=n, headlabel="      1271"]
BB1269 -> BB1283 [tailport=s, headport=n, color=gray]
BB1270 [shape=record label="{4443: read-variable['invariant',v12,v11]|4444: read-variable['oldChild',v18,-]|4445: read-property[v18,'tagName',v17]|4446: \<variable-non-null-undef\>['oldChild']|4447: read-property[v17,'toLowerCase',-]|4448: \<property-non-null-undef\>[v18,'tagName']}" ] 
BB1270 -> BB1272 [tailport=s, headport=n, headlabel="      1272"]
BB1270 -> BB1283 [tailport=s, headport=n, color=gray]
BB1271 [shape=record label="{4449: read-variable['invariant',v12,v11]|4450: read-variable['oldChild',v18,-]|4451: read-property[v18,'tagName',v17]|4452: \<variable-non-null-undef\>['oldChild']|4453: read-property[v17,'toLowerCase',-]|4454: \<property-non-null-undef\>[v18,'tagName']}" ] 
BB1271 -> BB1275 [tailport=s, headport=n, headlabel="      1275"]
BB1271 -> BB1283 [tailport=s, headport=n, color=gray]
BB1272 [shape=record label="{4455: call-oldChild.tagName.toLowerCase [v17,'toLowerCase',v14]}" ] 
BB1272 -> BB1273 [tailport=s, headport=n, headlabel="      1273"]
BB1272 -> BB1283 [tailport=s, headport=n, color=gray]
BB1273 [shape=record label="{4456: constant[\"html\",v15]|4457: !==[v14,v15,v13]|4458: constant[\"dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the \",v24]|4459: constant[\"\\\<html\\\> node. This is because browser quirks make this unreliable \",v25]|4460: +[v24,v25,v22]|4461: constant[\"and/or slow. If you want to render to the root you must use \",v23]|4462: +[v22,v23,v20]|4463: constant[\"server rendering. See React.renderToString().\",v21]|4464: +[v20,v21,v19]}" ] 
BB1273 -> BB1274 [tailport=s, headport=n, headlabel="      1274"]
BB1273 -> BB1283 [tailport=s, headport=n, color=gray]
BB1274 [shape=record label="{4465: call-invariant [v11,v12,v13,v19,-]}" ] 
BB1274 -> BB1278 [tailport=s, headport=n, headlabel="      1278"]
BB1274 -> BB1283 [tailport=s, headport=n, color=gray]
BB1275 [shape=record label="{4466: call-oldChild.tagName.toLowerCase [v17,'toLowerCase',v14]}" ] 
BB1275 -> BB1276 [tailport=s, headport=n, headlabel="      1276"]
BB1275 -> BB1283 [tailport=s, headport=n, color=gray]
BB1276 [shape=record label="{4467: constant[\"html\",v15]|4468: !==[v14,v15,v13]}" ] 
BB1276 -> BB1277 [tailport=s, headport=n, headlabel="      1277"]
BB1276 -> BB1283 [tailport=s, headport=n, color=gray]
BB1277 [shape=record label="{4469: call-invariant [v11,v12,v13,-]}" ] 
BB1277 -> BB1278 [tailport=s, headport=n]
BB1277 -> BB1283 [tailport=s, headport=n, color=gray]
BB1278 [shape=record label="{4470: read-variable['createNodesFromMarkup',v14,v13]|4471: read-variable['markup',v15,-]|4472: read-variable['emptyFunction',v16,-]}" ] 
BB1278 -> BB1279 [tailport=s, headport=n, headlabel="      1279"]
BB1278 -> BB1283 [tailport=s, headport=n, color=gray]
BB1279 [shape=record label="{4473: call-createNodesFromMarkup [v13,v14,v15,v16,v12]}" ] 
BB1279 -> BB1280 [tailport=s, headport=n, headlabel="      1280"]
BB1279 -> BB1283 [tailport=s, headport=n, color=gray]
BB1280 [shape=record label="{4474: constant[0.0,v17]|4475: read-property[v12,v17,v11]|4476: write-variable[v11,'newChild']*|4477: read-variable['oldChild',v20,-]|4478: read-property[v20,'parentNode',v19]|4479: \<variable-non-null-undef\>['oldChild']|4480: read-property[v19,'replaceChild',-]|4481: \<property-non-null-undef\>[v20,'parentNode']|4482: read-variable['newChild',v21,-]|4483: read-variable['oldChild',v22,-]}" ] 
BB1280 -> BB1281 [tailport=s, headport=n, headlabel="      1281"]
BB1280 -> BB1283 [tailport=s, headport=n, color=gray]
BB1281 [shape=record label="{4484: call-oldChild.parentNode.replaceChild [v19,'replaceChild',v21,v22,-]*}" ] 
BB1281 -> BB1282 [tailport=s, headport=n, headlabel="      1282"]
BB1281 -> BB1283 [tailport=s, headport=n, color=gray]
BB1282 [shape=record label="{4485: return[v1]}" ] 
BB1283 [shape=record label="{4486: exceptional-return}" ] 
//#$~ 2287
}
