digraph {
rankdir="TD"
BB_entry189[shape=none,label=""];
BB_entry189 -> BB1576 [tailport=s, headport=n, headlabel="    1576"]
BB1576 [shape=record label="{4628: constant[undefined,v1]|4629: vardecl['name']|4630: vardecl['_name']|4631: vardecl['value']|4632: vardecl['isSet']|4633: vardecl['props']|4634: vardecl['init']|4635: vardecl['setterName']}" ] 
BB1576 -> BB1577 [tailport=s, headport=n, headlabel="      1577"]
BB1577 [shape=record label="{4636: read-variable['this',v4,-]|4637: read-property[v4,'initializerName',-]}" ] 
BB1577 -> BB1578 [tailport=s, headport=n, headlabel="      1578"]
BB1577 -> BB1605 [tailport=s, headport=n, color=gray, headlabel="      1605"]
BB1578 [shape=record label="{4638: call-this.initializerName [v4,'initializerName',v2]}" ] 
BB1578 -> BB1579 [tailport=s, headport=n, headlabel="      1579"]
BB1578 -> BB1605 [tailport=s, headport=n, color=gray]
BB1579 [shape=record label="{4639: write-variable[v2,'name']*|4640: read-variable['this',v7,-]|4641: read-property[v7,'getName',-]}" ] 
BB1579 -> BB1580 [tailport=s, headport=n, headlabel="      1580"]
BB1579 -> BB1605 [tailport=s, headport=n, color=gray]
BB1580 [shape=record label="{4642: call-this.getName [v7,'getName',v5]}" ] 
BB1580 -> BB1581 [tailport=s, headport=n, headlabel="      1581"]
BB1580 -> BB1605 [tailport=s, headport=n, color=gray]
BB1581 [shape=record label="{4643: write-variable[v5,'_name']*|4644: constant[false,v8]|4645: write-variable[v8,'isSet']*|4646: typeof['paras',v10]|4647: constant[\"undefined\",v11]|4648: !=[v10,v11,v9]|4649: if[v9](true-block:1582,false-block:1583)}" ] 
BB1581 -> BB1583 [tailport=s, headport=n, headlabel="      1583"]
BB1581 -> BB1582 [tailport=s, headport=n, headlabel="      1582"]
BB1581 -> BB1605 [tailport=s, headport=n, color=gray]
BB1582 [shape=record label="{4650: read-variable['paras',v15,-]|4651: read-variable['name',v16,-]|4652: read-property[v15,v16,v14]|4653: \<variable-non-null-undef\>['paras']|4654: typeof[v14,v12]|4655: constant[\"undefined\",v13]|4656: !=[v12,v13,v9]}" ] 
BB1582 -> BB1583 [tailport=s, headport=n]
BB1582 -> BB1605 [tailport=s, headport=n, color=gray]
BB1583 [shape=record label="{4657: if[v9](true-block:1584,false-block:1585)}" ] 
BB1583 -> BB1584 [tailport=s, headport=n, headlabel="      1584"]
BB1583 -> BB1585 [tailport=s, headport=n, headlabel="      1585"]
BB1584 [shape=record label="{4658: read-variable['paras',v13,-]|4659: read-variable['name',v14,-]|4660: read-property[v13,v14,v12]|4661: \<variable-non-null-undef\>['paras']|4662: write-variable[v12,'value']*|4663: constant[true,v15]|4664: write-variable[v15,'isSet']*}" ] 
BB1584 -> BB1595 [tailport=s, headport=n, headlabel="      1595"]
BB1584 -> BB1605 [tailport=s, headport=n, color=gray]
BB1585 [shape=record label="{4665: read-variable['this',v14,-]|4666: read-property[v14,'getProps',-]}" ] 
BB1585 -> BB1586 [tailport=s, headport=n, headlabel="      1586"]
BB1585 -> BB1605 [tailport=s, headport=n, color=gray]
BB1586 [shape=record label="{4667: call-this.getProps [v14,'getProps',v12]}" ] 
BB1586 -> BB1587 [tailport=s, headport=n, headlabel="      1587"]
BB1586 -> BB1605 [tailport=s, headport=n, color=gray]
BB1587 [shape=record label="{4668: write-variable[v12,'props']*|4669: read-variable['props',v16,-]|4670: read-property[v16,'init',v15]|4671: \<variable-non-null-undef\>['props']|4672: write-variable[v15,'init']*|4673: typeof['init',v18]|4674: constant[\"function\",v19]|4675: ==[v18,v19,v17]|4676: if[v17](true-block:1588,false-block:1589)}" ] 
BB1587 -> BB1589 [tailport=s, headport=n, headlabel="      1589"]
BB1587 -> BB1588 [tailport=s, headport=n, headlabel="      1588"]
BB1587 -> BB1605 [tailport=s, headport=n, color=gray]
BB1588 [shape=record label="{4677: read-variable['props',v21,-]|4678: read-property[v21,'lazy',v20]|4679: \<variable-non-null-undef\>['props']|4680: ![v20,v17]}" ] 
BB1588 -> BB1589 [tailport=s, headport=n]
BB1588 -> BB1605 [tailport=s, headport=n, color=gray]
BB1589 [shape=record label="{4681: if[v17](true-block:1590,false-block:1591)}" ] 
BB1589 -> BB1590 [tailport=s, headport=n, headlabel="      1590"]
BB1589 -> BB1591 [tailport=s, headport=n, headlabel="      1591"]
BB1590 [shape=record label="{4682: read-variable['init',v22,-]|4683: read-property[v22,'call',-]|4684: \<variable-non-null-undef\>['init']|4685: read-variable['object',v23,-]}" ] 
BB1590 -> BB1592 [tailport=s, headport=n, headlabel="      1592"]
BB1590 -> BB1605 [tailport=s, headport=n, color=gray]
BB1591 [shape=record label="{4686: read-variable['props',v21,-]|4687: read-property[v21,'required',v20]|4688: \<variable-non-null-undef\>['props']|4689: if[v20](true-block:1594,false-block:1595)}" ] 
BB1591 -> BB1594 [tailport=s, headport=n, headlabel="      1594"]
BB1591 -> BB1595 [tailport=s, headport=n]
BB1591 -> BB1605 [tailport=s, headport=n, color=gray]
BB1592 [shape=record label="{4690: call-init.call [v22,'call',v23,v20]}" ] 
BB1592 -> BB1593 [tailport=s, headport=n, headlabel="      1593"]
BB1592 -> BB1605 [tailport=s, headport=n, color=gray]
BB1593 [shape=record label="{4691: write-variable[v20,'value']*|4692: constant[true,v24]|4693: write-variable[v24,'isSet']*}" ] 
BB1593 -> BB1595 [tailport=s, headport=n]
BB1594 [shape=record label="{4694: constant[\"Required initialization parameter missing: \",v29]|4695: read-variable['name',v30,-]|4696: +[v29,v30,v27]|4697: constant[\"(While initializing \",v28]|4698: +[v27,v28,v25]|4699: read-variable['object',v26,-]|4700: +[v25,v26,v23]|4701: constant[\")\",v24]|4702: +[v23,v24,v22]|4703: throw[v22]*}" ] 
BB1594 -> BB1595 [tailport=s, headport=n]
BB1594 -> BB1605 [tailport=s, headport=n, color=gray]
BB1595 [shape=record label="{4704: read-variable['isSet',v12,-]|4705: if[v12](true-block:1596,false-block:1604)}" ] 
BB1595 -> BB1596 [tailport=s, headport=n, headlabel="      1596"]
BB1595 -> BB1604 [tailport=s, headport=n, headlabel="      1604"]
BB1595 -> BB1605 [tailport=s, headport=n, color=gray]
BB1596 [shape=record label="{4706: read-variable['this',v15,-]|4707: read-property[v15,'setterName',-]}" ] 
BB1596 -> BB1597 [tailport=s, headport=n, headlabel="      1597"]
BB1596 -> BB1605 [tailport=s, headport=n, color=gray]
BB1597 [shape=record label="{4708: call-this.setterName [v15,'setterName',v13]}" ] 
BB1597 -> BB1598 [tailport=s, headport=n, headlabel="      1598"]
BB1597 -> BB1605 [tailport=s, headport=n, color=gray]
BB1598 [shape=record label="{4709: write-variable[v13,'setterName']*|4710: read-variable['object',v19,-]|4711: read-property[v19,'meta',v18]|4712: \<variable-non-null-undef\>['object']|4713: read-property[v18,'can',-]|4714: \<property-non-null-undef\>[v19,'meta']|4715: read-variable['setterName',v20,-]}" ] 
BB1598 -> BB1599 [tailport=s, headport=n, headlabel="      1599"]
BB1598 -> BB1605 [tailport=s, headport=n, color=gray]
BB1599 [shape=record label="{4716: call-object.meta.can [v18,'can',v20,v16]}" ] 
BB1599 -> BB1600 [tailport=s, headport=n, headlabel="      1600"]
BB1599 -> BB1605 [tailport=s, headport=n, color=gray]
BB1600 [shape=record label="{4717: if[v16](true-block:1601,false-block:1602)}" ] 
BB1600 -> BB1601 [tailport=s, headport=n, headlabel="      1601"]
BB1600 -> BB1602 [tailport=s, headport=n, headlabel="      1602"]
BB1601 [shape=record label="{4718: read-variable['object',v22,-]|4719: read-variable['setterName',v23,-]|4720: read-property[v22,v23,-]|4721: \<variable-non-null-undef\>['object']|4722: read-variable['value',v24,-]}" ] 
BB1601 -> BB1603 [tailport=s, headport=n, headlabel="      1603"]
BB1601 -> BB1605 [tailport=s, headport=n, color=gray]
BB1602 [shape=record label="{4723: read-variable['object',v22,-]|4724: read-variable['_name',v23,-]|4725: read-variable['value',v21,-]|4726: write-property[v22,v23,v21]|4727: \<variable-non-null-undef\>['object']*}" ] 
BB1602 -> BB1604 [tailport=s, headport=n]
BB1602 -> BB1605 [tailport=s, headport=n, color=gray]
BB1603 [shape=record label="{4728: call-null [v22,[v23],v24,-]*}" ] 
BB1603 -> BB1604 [tailport=s, headport=n]
BB1603 -> BB1605 [tailport=s, headport=n, color=gray]
BB1604 [shape=record label="{4729: return[v1]}" ] 
BB1605 [shape=record label="{4730: exceptional-return}" ] 
//#$~ 1842
}
