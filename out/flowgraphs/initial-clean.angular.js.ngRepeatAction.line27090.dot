digraph {
rankdir="TD"
BB_entry1281[shape=none,label=""];
BB_entry1281 -> BB15918 [tailport=s, headport=n, headlabel="    15918"]
BB15918 [shape=record label="{41618: constant[undefined,v1]|41619: vardecl['index']|41620: vardecl['length']|41621: vardecl['previousNode']|41622: vardecl['nextNode']|41623: vardecl['nextBlockMap']|41624: vardecl['collectionLength']|41625: vardecl['key']|41626: vardecl['value']|41627: vardecl['trackById']|41628: vardecl['trackByIdFn']|41629: vardecl['collectionKeys']|41630: vardecl['block']|41631: vardecl['nextBlockOrder']|41632: vardecl['elementsToRemove']|41633: vardecl['itemKey']|41634: vardecl['blockKey']}" ] 
BB15918 -> BB15919 [tailport=s, headport=n, headlabel="      15919"]
BB15919 [shape=record label="{41635: read-variable['$element',v4,v2]|41636: constant[0.0,v5]|41637: read-property[v4,v5,v3]|41638: \<variable-non-null-undef\>['$element']|41639: write-variable[v3,'previousNode']*|41640: read-variable['createMap',v8,v7]}" ] 
BB15919 -> BB15920 [tailport=s, headport=n, headlabel="      15920"]
BB15919 -> BB16007 [tailport=s, headport=n, color=gray, headlabel="      16007"]
BB15920 [shape=record label="{41641: call-createMap [v7,v8,v6]}" ] 
BB15920 -> BB15921 [tailport=s, headport=n, headlabel="      15921"]
BB15920 -> BB16007 [tailport=s, headport=n, color=gray]
BB15921 [shape=record label="{41642: write-variable[v6,'nextBlockMap']*|41643: read-variable['aliasAs',v9,v2]|41644: if[v9](true-block:15922,false-block:15923)}" ] 
BB15921 -> BB15922 [tailport=s, headport=n, headlabel="      15922"]
BB15921 -> BB15923 [tailport=s, headport=n, headlabel="      15923"]
BB15921 -> BB16007 [tailport=s, headport=n, color=gray]
BB15922 [shape=record label="{41645: read-variable['$scope',v11,v2]|41646: read-variable['aliasAs',v12,v2]|41647: read-variable['collection',v10,v2]|41648: write-property[v11,v12,v10]|41649: \<variable-non-null-undef\>['$scope']*}" ] 
BB15922 -> BB15923 [tailport=s, headport=n]
BB15922 -> BB16007 [tailport=s, headport=n, color=gray]
BB15923 [shape=record label="{41650: read-variable['isArrayLike',v12,v11]|41651: read-variable['collection',v13,v2]}" ] 
BB15923 -> BB15924 [tailport=s, headport=n, headlabel="      15924"]
BB15923 -> BB16007 [tailport=s, headport=n, color=gray]
BB15924 [shape=record label="{41652: call-isArrayLike [v11,v12,v13,v10]}" ] 
BB15924 -> BB15925 [tailport=s, headport=n, headlabel="      15925"]
BB15924 -> BB16007 [tailport=s, headport=n, color=gray]
BB15925 [shape=record label="{41653: if[v10](true-block:15926,false-block:15927)}" ] 
BB15925 -> BB15926 [tailport=s, headport=n, headlabel="      15926"]
BB15925 -> BB15927 [tailport=s, headport=n, headlabel="      15927"]
BB15926 [shape=record label="{41654: read-variable['collection',v14,v2]|41655: write-variable[v14,'collectionKeys']*|41656: read-variable['trackByIdExpFn',v15,v2]|41657: if[v15](true-block:15929,false-block:15928)}" ] 
BB15926 -> BB15929 [tailport=s, headport=n, headlabel="      15929"]
BB15926 -> BB15928 [tailport=s, headport=n, headlabel="      15928"]
BB15926 -> BB16007 [tailport=s, headport=n, color=gray]
BB15927 [shape=record label="{41658: read-variable['trackByIdExpFn',v14,v2]|41659: if[v14](true-block:15931,false-block:15930)}" ] 
BB15927 -> BB15931 [tailport=s, headport=n, headlabel="      15931"]
BB15927 -> BB15930 [tailport=s, headport=n, headlabel="      15930"]
BB15927 -> BB16007 [tailport=s, headport=n, color=gray]
BB15928 [shape=record label="{41660: read-variable['trackByIdArrayFn',v15,v2]}" ] 
BB15928 -> BB15929 [tailport=s, headport=n]
BB15928 -> BB16007 [tailport=s, headport=n, color=gray]
BB15929 [shape=record label="{41661: write-variable[v15,'trackByIdFn']*}" ] 
BB15929 -> BB15946 [tailport=s, headport=n, headlabel="      15946"]
BB15930 [shape=record label="{41662: read-variable['trackByIdObjFn',v14,v2]}" ] 
BB15930 -> BB15931 [tailport=s, headport=n]
BB15930 -> BB16007 [tailport=s, headport=n, color=gray]
BB15931 [shape=record label="{41663: write-variable[v14,'trackByIdFn']*|41664: read-variable['Array',v16,-]}" ] 
BB15931 -> BB15932 [tailport=s, headport=n, headlabel="      15932"]
BB15931 -> BB16007 [tailport=s, headport=n, color=gray]
BB15932 [shape=record label="{41665: construct [-,v16,v15]}" ] 
BB15932 -> BB15933 [tailport=s, headport=n, headlabel="      15933"]
BB15932 -> BB16007 [tailport=s, headport=n, color=gray]
BB15933 [shape=record label="{41666: write-variable[v15,'collectionKeys']*|41667: read-variable['collection',v18,v2]}" ] 
BB15933 -> BB15934 [tailport=s, headport=n, headlabel="      15934"]
BB15933 -> BB16007 [tailport=s, headport=n, color=gray]
BB15934 [shape=record label="{41668: begin-for-in[v18,v19]}" ] 
BB15934 -> BB15935 [tailport=s, headport=n, headlabel="      15935"]
BB15934 -> BB16007 [tailport=s, headport=n, color=gray]
BB15935 [shape=record label="{41669: has-next[v19,v20]|41670: if[v20](true-block:15936,false-block:15946)}" ] 
BB15935 -> BB15936 [tailport=s, headport=n, headlabel="      15936"]
BB15935 -> BB15946 [tailport=s, headport=n]
BB15936 [shape=record label="{41671: next-property[v19,v21]|41672: write-variable[v21,'itemKey']|41673: read-variable['collection',v24,-]|41674: read-property[v24,'hasOwnProperty',-]|41675: \<variable-non-null-undef\>['collection']|41676: read-variable['itemKey',v25,v2]}" ] 
BB15936 -> BB15937 [tailport=s, headport=n, headlabel="      15937"]
BB15936 -> BB16007 [tailport=s, headport=n, color=gray]
BB15937 [shape=record label="{41677: call-collection.hasOwnProperty [v24,'hasOwnProperty',v25,v22]}" ] 
BB15937 -> BB15938 [tailport=s, headport=n, headlabel="      15938"]
BB15937 -> BB16007 [tailport=s, headport=n, color=gray]
BB15938 [shape=record label="{41678: if[v22](true-block:15939,false-block:15942)}" ] 
BB15938 -> BB15942 [tailport=s, headport=n, headlabel="      15942"]
BB15938 -> BB15939 [tailport=s, headport=n, headlabel="      15939"]
BB15939 [shape=record label="{41679: read-variable['itemKey',v29,-]|41680: read-property[v29,'charAt',-]|41681: \<variable-non-null-undef\>['itemKey']|41682: constant[0.0,v30]}" ] 
BB15939 -> BB15940 [tailport=s, headport=n, headlabel="      15940"]
BB15939 -> BB16007 [tailport=s, headport=n, color=gray]
BB15940 [shape=record label="{41683: call-itemKey.charAt [v29,'charAt',v30,v26]}" ] 
BB15940 -> BB15941 [tailport=s, headport=n, headlabel="      15941"]
BB15940 -> BB16007 [tailport=s, headport=n, color=gray]
BB15941 [shape=record label="{41684: constant[\"$\",v27]|41685: !==[v26,v27,v22]}" ] 
BB15941 -> BB15942 [tailport=s, headport=n]
BB15941 -> BB16007 [tailport=s, headport=n, color=gray]
BB15942 [shape=record label="{41686: if[v22](true-block:15943,false-block:15945)}" ] 
BB15942 -> BB15943 [tailport=s, headport=n, headlabel="      15943"]
BB15942 -> BB15945 [tailport=s, headport=n, headlabel="      15945"]
BB15943 [shape=record label="{41687: read-variable['collectionKeys',v27,-]|41688: read-property[v27,'push',-]|41689: \<variable-non-null-undef\>['collectionKeys']|41690: read-variable['itemKey',v28,v2]}" ] 
BB15943 -> BB15944 [tailport=s, headport=n, headlabel="      15944"]
BB15943 -> BB16007 [tailport=s, headport=n, color=gray]
BB15944 [shape=record label="{41691: call-collectionKeys.push [v27,'push',v28,-]*}" ] 
BB15944 -> BB15945 [tailport=s, headport=n]
BB15944 -> BB16007 [tailport=s, headport=n, color=gray]
BB15945 [shape=record label="{41692: end-for-in(begin-node:41668)}" ] 
BB15945 -> BB15935 [tailport=s, headport=n]
BB15946 [shape=record label="{41693: read-variable['collectionKeys',v15,v2]|41694: read-property[v15,'length',v14]|41695: \<variable-non-null-undef\>['collectionKeys']|41696: write-variable[v14,'collectionLength']*|41697: read-variable['Array',v17,-]|41698: read-variable['collectionLength',v18,v2]}" ] 
BB15946 -> BB15947 [tailport=s, headport=n, headlabel="      15947"]
BB15946 -> BB16007 [tailport=s, headport=n, color=gray]
BB15947 [shape=record label="{41699: construct [-,v17,v18,v16]}" ] 
BB15947 -> BB15948 [tailport=s, headport=n, headlabel="      15948"]
BB15947 -> BB16007 [tailport=s, headport=n, color=gray]
BB15948 [shape=record label="{41700: write-variable[v16,'nextBlockOrder']*|41701: constant[0.0,v20]|41702: write-variable[v20,'index']}" ] 
BB15948 -> BB15949 [tailport=s, headport=n, headlabel="      15949"]
BB15949 [shape=record label="{41703: read-variable['index',v21,v2]|41704: read-variable['collectionLength',v22,v2]|41705: \<[v21,v22,v19]|41706: if[v19](true-block:15950,false-block:15951)}" ] 
BB15949 -> BB15950 [tailport=s, headport=n, headlabel="      15950"]
BB15949 -> BB15951 [tailport=s, headport=n, headlabel="      15951"]
BB15949 -> BB16007 [tailport=s, headport=n, color=gray]
BB15950 [shape=record label="{41707: read-variable['collection',v25,v2]|41708: read-variable['collectionKeys',v26,v2]|41709: ===[v25,v26,v24]|41710: if[v24](true-block:15952,false-block:15953)}" ] 
BB15950 -> BB15952 [tailport=s, headport=n, headlabel="      15952"]
BB15950 -> BB15953 [tailport=s, headport=n, headlabel="      15953"]
BB15950 -> BB16007 [tailport=s, headport=n, color=gray]
BB15951 [shape=record label="{41711: read-variable['lastBlockMap',v24,v2]}" ] 
BB15951 -> BB15966 [tailport=s, headport=n, headlabel="      15966"]
BB15951 -> BB16007 [tailport=s, headport=n, color=gray]
BB15952 [shape=record label="{41712: read-variable['index',v23,v2]}" ] 
BB15952 -> BB15954 [tailport=s, headport=n, headlabel="      15954"]
BB15952 -> BB16007 [tailport=s, headport=n, color=gray]
BB15953 [shape=record label="{41713: read-variable['collectionKeys',v27,v2]|41714: read-variable['index',v28,v2]|41715: read-property[v27,v28,v23]|41716: \<variable-non-null-undef\>['collectionKeys']}" ] 
BB15953 -> BB15954 [tailport=s, headport=n]
BB15953 -> BB16007 [tailport=s, headport=n, color=gray]
BB15954 [shape=record label="{41717: write-variable[v23,'key']*|41718: read-variable['collection',v28,v2]|41719: read-variable['key',v29,v2]|41720: read-property[v28,v29,v27]|41721: \<variable-non-null-undef\>['collection']|41722: write-variable[v27,'value']*|41723: read-variable['trackByIdFn',v32,v31]|41724: read-variable['key',v33,v2]|41725: read-variable['value',v34,v2]|41726: read-variable['index',v35,v2]}" ] 
BB15954 -> BB15955 [tailport=s, headport=n, headlabel="      15955"]
BB15954 -> BB16007 [tailport=s, headport=n, color=gray]
BB15955 [shape=record label="{41727: call-trackByIdFn [v31,v32,v33,v34,v35,v30]}" ] 
BB15955 -> BB15956 [tailport=s, headport=n, headlabel="      15956"]
BB15955 -> BB16007 [tailport=s, headport=n, color=gray]
BB15956 [shape=record label="{41728: write-variable[v30,'trackById']*|41729: read-variable['lastBlockMap',v37,v2]|41730: read-variable['trackById',v38,v2]|41731: read-property[v37,v38,v36]|41732: \<variable-non-null-undef\>['lastBlockMap']|41733: if[v36](true-block:15957,false-block:15958)}" ] 
BB15956 -> BB15957 [tailport=s, headport=n, headlabel="      15957"]
BB15956 -> BB15958 [tailport=s, headport=n, headlabel="      15958"]
BB15956 -> BB16007 [tailport=s, headport=n, color=gray]
BB15957 [shape=record label="{41734: read-variable['lastBlockMap',v40,v2]|41735: read-variable['trackById',v41,v2]|41736: read-property[v40,v41,v39]|41737: \<variable-non-null-undef\>['lastBlockMap']|41738: write-variable[v39,'block']*|41739: read-variable['lastBlockMap',v43,v2]|41740: read-variable['trackById',v44,v2]|41741: delete-property[v43,v44,v42]*|41742: read-variable['nextBlockMap',v46,v2]|41743: read-variable['trackById',v47,v2]|41744: read-variable['block',v45,v2]|41745: write-property[v46,v47,v45]|41746: \<variable-non-null-undef\>['nextBlockMap']*|41747: read-variable['nextBlockOrder',v49,v2]|41748: read-variable['index',v50,v2]|41749: read-variable['block',v48,v2]|41750: write-property[v49,v50,v48]|41751: \<variable-non-null-undef\>['nextBlockOrder']*}" ] 
BB15957 -> BB15965 [tailport=s, headport=n, headlabel="      15965"]
BB15957 -> BB16007 [tailport=s, headport=n, color=gray]
BB15958 [shape=record label="{41752: read-variable['nextBlockMap',v40,v2]|41753: read-variable['trackById',v41,v2]|41754: read-property[v40,v41,v39]|41755: \<variable-non-null-undef\>['nextBlockMap']|41756: if[v39](true-block:15959,false-block:15960)}" ] 
BB15958 -> BB15959 [tailport=s, headport=n, headlabel="      15959"]
BB15958 -> BB15960 [tailport=s, headport=n, headlabel="      15960"]
BB15958 -> BB16007 [tailport=s, headport=n, color=gray]
BB15959 [shape=record label="{41757: read-variable['forEach',v43,v42]|41758: read-variable['nextBlockOrder',v44,v2]|41759: function-expr[function ( block ),v45]}" ] 
BB15959 -> BB15961 [tailport=s, headport=n, headlabel="      15961"]
BB15959 -> BB16007 [tailport=s, headport=n, color=gray]
BB15960 [shape=record label="{41760: read-variable['nextBlockOrder',v43,v2]|41761: read-variable['index',v44,v2]|41762: new[v42]|41763: read-variable['trackById',v45,v2]|41764: write-property[v42,'id',v45]|41765: read-variable['undefined',v46,v2]|41766: write-property[v42,'scope',v46]|41767: read-variable['undefined',v47,v2]|41768: write-property[v42,'clone',v47]|41769: write-property[v43,v44,v42]|41770: \<variable-non-null-undef\>['nextBlockOrder']*|41771: read-variable['nextBlockMap',v49,v2]|41772: read-variable['trackById',v50,v2]|41773: constant[true,v48]|41774: write-property[v49,v50,v48]|41775: \<variable-non-null-undef\>['nextBlockMap']*}" ] 
BB15960 -> BB15965 [tailport=s, headport=n]
BB15960 -> BB16007 [tailport=s, headport=n, color=gray]
BB15961 [shape=record label="{41776: call-forEach [v42,v43,v44,v45,-]*}" ] 
BB15961 -> BB15962 [tailport=s, headport=n, headlabel="      15962"]
BB15961 -> BB16007 [tailport=s, headport=n, color=gray]
BB15962 [shape=record label="{41777: read-variable['ngRepeatMinErr',v48,v47]|41778: constant[\"dupes\",v49]|41779: constant[\"Duplicates in a repeater are not allowed. Use 'track by' expression to specify unique keys. Repeater: \\\{0\\\}, Duplicate key: \\\{1\\\}, Duplicate value: \\\{2\\\}\",v50]|41780: read-variable['expression',v51,v2]|41781: read-variable['trackById',v52,v2]|41782: read-variable['value',v53,v2]}" ] 
BB15962 -> BB15963 [tailport=s, headport=n, headlabel="      15963"]
BB15962 -> BB16007 [tailport=s, headport=n, color=gray]
BB15963 [shape=record label="{41783: call-ngRepeatMinErr [v47,v48,v49,v50,v51,v52,v53,v46]}" ] 
BB15963 -> BB15964 [tailport=s, headport=n, headlabel="      15964"]
BB15963 -> BB16007 [tailport=s, headport=n, color=gray]
BB15964 [shape=record label="{41784: throw[v46]*}" ] 
BB15964 -> BB15965 [tailport=s, headport=n]
BB15964 -> BB16007 [tailport=s, headport=n, color=gray]
BB15965 [shape=record label="{41785: constant[1.0,v39]|41786: read-variable['index',v40,v2]|41787: +[v40,v41]|41788: +[v41,v39,v42]|41789: write-variable[v42,'index']}" ] 
BB15965 -> BB15949 [tailport=s, headport=n]
BB15965 -> BB16007 [tailport=s, headport=n, color=gray]
BB15966 [shape=record label="{41790: begin-for-in[v24,v25]}" ] 
BB15966 -> BB15967 [tailport=s, headport=n, headlabel="      15967"]
BB15966 -> BB16007 [tailport=s, headport=n, color=gray]
BB15967 [shape=record label="{41791: has-next[v25,v26]|41792: if[v26](true-block:15968,false-block:15979)}" ] 
BB15967 -> BB15968 [tailport=s, headport=n, headlabel="      15968"]
BB15967 -> BB15979 [tailport=s, headport=n, headlabel="      15979"]
BB15968 [shape=record label="{41793: next-property[v25,v27]|41794: write-variable[v27,'blockKey']|41795: read-variable['lastBlockMap',v29,v2]|41796: read-variable['blockKey',v30,v2]|41797: read-property[v29,v30,v28]|41798: \<variable-non-null-undef\>['lastBlockMap']|41799: write-variable[v28,'block']*|41800: read-variable['getBlockNodes',v33,v32]|41801: read-variable['block',v35,v2]|41802: read-property[v35,'clone',v34]|41803: \<variable-non-null-undef\>['block']}" ] 
BB15968 -> BB15969 [tailport=s, headport=n, headlabel="      15969"]
BB15968 -> BB16007 [tailport=s, headport=n, color=gray]
BB15969 [shape=record label="{41804: call-getBlockNodes [v32,v33,v34,v31]}" ] 
BB15969 -> BB15970 [tailport=s, headport=n, headlabel="      15970"]
BB15969 -> BB16007 [tailport=s, headport=n, color=gray]
BB15970 [shape=record label="{41805: write-variable[v31,'elementsToRemove']*|41806: read-variable['$animate',v37,-]|41807: read-property[v37,'leave',-]|41808: \<variable-non-null-undef\>['$animate']|41809: read-variable['elementsToRemove',v38,v2]}" ] 
BB15970 -> BB15971 [tailport=s, headport=n, headlabel="      15971"]
BB15970 -> BB16007 [tailport=s, headport=n, color=gray]
BB15971 [shape=record label="{41810: call-$animate.leave [v37,'leave',v38,-]*}" ] 
BB15971 -> BB15972 [tailport=s, headport=n, headlabel="      15972"]
BB15971 -> BB16007 [tailport=s, headport=n, color=gray]
BB15972 [shape=record label="{41811: read-variable['elementsToRemove',v41,v2]|41812: constant[0.0,v42]|41813: read-property[v41,v42,v40]|41814: \<variable-non-null-undef\>['elementsToRemove']|41815: read-property[v40,'parentNode',v39]|41816: \<property-non-null-undef\>[v41,v42]|41817: if[v39](true-block:15973,false-block:15976)}" ] 
BB15972 -> BB15973 [tailport=s, headport=n, headlabel="      15973"]
BB15972 -> BB15976 [tailport=s, headport=n, headlabel="      15976"]
BB15972 -> BB16007 [tailport=s, headport=n, color=gray]
BB15973 [shape=record label="{41818: constant[0.0,v44]|41819: write-variable[v44,'index']|41820: read-variable['elementsToRemove',v46,v2]|41821: read-property[v46,'length',v45]|41822: \<variable-non-null-undef\>['elementsToRemove']|41823: write-variable[v45,'length']}" ] 
BB15973 -> BB15974 [tailport=s, headport=n, headlabel="      15974"]
BB15973 -> BB16007 [tailport=s, headport=n, color=gray]
BB15974 [shape=record label="{41824: read-variable['index',v47,v2]|41825: read-variable['length',v48,v2]|41826: \<[v47,v48,v43]|41827: if[v43](true-block:15975,false-block:15976)}" ] 
BB15974 -> BB15975 [tailport=s, headport=n, headlabel="      15975"]
BB15974 -> BB15976 [tailport=s, headport=n]
BB15974 -> BB16007 [tailport=s, headport=n, color=gray]
BB15975 [shape=record label="{41828: read-variable['elementsToRemove',v52,v2]|41829: read-variable['index',v53,v2]|41830: read-property[v52,v53,v50]|41831: \<variable-non-null-undef\>['elementsToRemove']|41832: read-variable['NG_REMOVED',v51,v2]|41833: constant[true,v49]|41834: write-property[v50,v51,v49]|41835: \<property-non-null-undef\>[v52,v53]*|41836: constant[1.0,v54]|41837: read-variable['index',v55,v2]|41838: +[v55,v56]|41839: +[v56,v54,v57]|41840: write-variable[v57,'index']}" ] 
BB15975 -> BB15974 [tailport=s, headport=n]
BB15975 -> BB16007 [tailport=s, headport=n, color=gray]
BB15976 [shape=record label="{41841: read-variable['block',v45,-]|41842: read-property[v45,'scope',v44]|41843: \<variable-non-null-undef\>['block']|41844: read-property[v44,'$destroy',-]|41845: \<property-non-null-undef\>[v45,'scope']}" ] 
BB15976 -> BB15977 [tailport=s, headport=n, headlabel="      15977"]
BB15976 -> BB16007 [tailport=s, headport=n, color=gray]
BB15977 [shape=record label="{41846: call-block.scope.$destroy [v44,'$destroy',-]*}" ] 
BB15977 -> BB15978 [tailport=s, headport=n, headlabel="      15978"]
BB15977 -> BB16007 [tailport=s, headport=n, color=gray]
BB15978 [shape=record label="{41847: end-for-in(begin-node:41790)}" ] 
BB15978 -> BB15967 [tailport=s, headport=n]
BB15979 [shape=record label="{41848: constant[0.0,v29]|41849: write-variable[v29,'index']}" ] 
BB15979 -> BB15980 [tailport=s, headport=n, headlabel="      15980"]
BB15980 [shape=record label="{41850: read-variable['index',v30,v2]|41851: read-variable['collectionLength',v31,v2]|41852: \<[v30,v31,v28]|41853: if[v28](true-block:15981,false-block:15982)}" ] 
BB15980 -> BB15981 [tailport=s, headport=n, headlabel="      15981"]
BB15980 -> BB15982 [tailport=s, headport=n, headlabel="      15982"]
BB15980 -> BB16007 [tailport=s, headport=n, color=gray]
BB15981 [shape=record label="{41854: read-variable['collection',v34,v2]|41855: read-variable['collectionKeys',v35,v2]|41856: ===[v34,v35,v33]|41857: if[v33](true-block:15983,false-block:15984)}" ] 
BB15981 -> BB15983 [tailport=s, headport=n, headlabel="      15983"]
BB15981 -> BB15984 [tailport=s, headport=n, headlabel="      15984"]
BB15981 -> BB16007 [tailport=s, headport=n, color=gray]
BB15982 [shape=record label="{41858: read-variable['nextBlockMap',v32,v2]|41859: write-variable[v32,'lastBlockMap']*}" ] 
BB15982 -> BB16006 [tailport=s, headport=n, headlabel="      16006"]
BB15982 -> BB16007 [tailport=s, headport=n, color=gray]
BB15983 [shape=record label="{41860: read-variable['index',v32,v2]}" ] 
BB15983 -> BB15985 [tailport=s, headport=n, headlabel="      15985"]
BB15983 -> BB16007 [tailport=s, headport=n, color=gray]
BB15984 [shape=record label="{41861: read-variable['collectionKeys',v36,v2]|41862: read-variable['index',v37,v2]|41863: read-property[v36,v37,v32]|41864: \<variable-non-null-undef\>['collectionKeys']}" ] 
BB15984 -> BB15985 [tailport=s, headport=n]
BB15984 -> BB16007 [tailport=s, headport=n, color=gray]
BB15985 [shape=record label="{41865: write-variable[v32,'key']*|41866: read-variable['collection',v37,v2]|41867: read-variable['key',v38,v2]|41868: read-property[v37,v38,v36]|41869: \<variable-non-null-undef\>['collection']|41870: write-variable[v36,'value']*|41871: read-variable['nextBlockOrder',v40,v2]|41872: read-variable['index',v41,v2]|41873: read-property[v40,v41,v39]|41874: \<variable-non-null-undef\>['nextBlockOrder']|41875: write-variable[v39,'block']*|41876: read-variable['block',v43,v2]|41877: read-property[v43,'scope',v42]|41878: \<variable-non-null-undef\>['block']|41879: if[v42](true-block:15986,false-block:15987)}" ] 
BB15985 -> BB15986 [tailport=s, headport=n, headlabel="      15986"]
BB15985 -> BB15987 [tailport=s, headport=n, headlabel="      15987"]
BB15985 -> BB16007 [tailport=s, headport=n, color=gray]
BB15986 [shape=record label="{41880: read-variable['previousNode',v44,v2]|41881: write-variable[v44,'nextNode']*}" ] 
BB15986 -> BB15988 [tailport=s, headport=n, headlabel="      15988"]
BB15986 -> BB16007 [tailport=s, headport=n, color=gray]
BB15987 [shape=record label="{41882: read-variable['$transclude',v45,v44]|41883: function-expr[function ngRepeatTransclude ( clone scope ),v46]}" ] 
BB15987 -> BB16004 [tailport=s, headport=n, headlabel="      16004"]
BB15987 -> BB16007 [tailport=s, headport=n, color=gray]
BB15988 [shape=record label="{41884: read-variable['nextNode',v47,v2]|41885: read-property[v47,'nextSibling',v46]|41886: \<variable-non-null-undef\>['nextNode']|41887: write-variable[v46,'nextNode']*}" ] 
BB15988 -> BB15990 [tailport=s, headport=n, headlabel="      15990"]
BB15988 -> BB16007 [tailport=s, headport=n, color=gray]
BB15989 [shape=record label="{41888: read-variable['getBlockStart',v50,v49]|41889: read-variable['block',v51,v2]}" ] 
BB15989 -> BB15993 [tailport=s, headport=n, headlabel="      15993"]
BB15989 -> BB16007 [tailport=s, headport=n, color=gray]
BB15990 [shape=record label="{41890: read-variable['nextNode',v45,v2]|41891: if[v45](true-block:15991,false-block:15992)}" ] 
BB15990 -> BB15992 [tailport=s, headport=n, headlabel="      15992"]
BB15990 -> BB15991 [tailport=s, headport=n, headlabel="      15991"]
BB15990 -> BB16007 [tailport=s, headport=n, color=gray]
BB15991 [shape=record label="{41892: read-variable['nextNode',v46,v2]|41893: read-variable['NG_REMOVED',v47,v2]|41894: read-property[v46,v47,v45]|41895: \<variable-non-null-undef\>['nextNode']}" ] 
BB15991 -> BB15992 [tailport=s, headport=n]
BB15991 -> BB16007 [tailport=s, headport=n, color=gray]
BB15992 [shape=record label="{41896: if[v45](true-block:15988,false-block:15989)}" ] 
BB15992 -> BB15988 [tailport=s, headport=n]
BB15992 -> BB15989 [tailport=s, headport=n, headlabel="      15989"]
BB15993 [shape=record label="{41897: call-getBlockStart [v49,v50,v51,v47]}" ] 
BB15993 -> BB15994 [tailport=s, headport=n, headlabel="      15994"]
BB15993 -> BB16007 [tailport=s, headport=n, color=gray]
BB15994 [shape=record label="{41898: read-variable['nextNode',v48,v2]|41899: !=[v47,v48,v46]|41900: if[v46](true-block:15995,false-block:16000)}" ] 
BB15994 -> BB15995 [tailport=s, headport=n, headlabel="      15995"]
BB15994 -> BB16000 [tailport=s, headport=n, headlabel="      16000"]
BB15994 -> BB16007 [tailport=s, headport=n, color=gray]
BB15995 [shape=record label="{41901: read-variable['$animate',v53,-]|41902: read-property[v53,'move',-]|41903: \<variable-non-null-undef\>['$animate']|41904: read-variable['getBlockNodes',v56,v55]|41905: read-variable['block',v58,v2]|41906: read-property[v58,'clone',v57]|41907: \<variable-non-null-undef\>['block']}" ] 
BB15995 -> BB15996 [tailport=s, headport=n, headlabel="      15996"]
BB15995 -> BB16007 [tailport=s, headport=n, color=gray]
BB15996 [shape=record label="{41908: call-getBlockNodes [v55,v56,v57,v54]}" ] 
BB15996 -> BB15997 [tailport=s, headport=n, headlabel="      15997"]
BB15996 -> BB16007 [tailport=s, headport=n, color=gray]
BB15997 [shape=record label="{41909: constant[null,v59]|41910: read-variable['jqLite',v62,v61]|41911: read-variable['previousNode',v63,v2]}" ] 
BB15997 -> BB15998 [tailport=s, headport=n, headlabel="      15998"]
BB15997 -> BB16007 [tailport=s, headport=n, color=gray]
BB15998 [shape=record label="{41912: call-jqLite [v61,v62,v63,v60]}" ] 
BB15998 -> BB15999 [tailport=s, headport=n, headlabel="      15999"]
BB15998 -> BB16007 [tailport=s, headport=n, color=gray]
BB15999 [shape=record label="{41913: call-$animate.move [v53,'move',v54,v59,v60,-]*}" ] 
BB15999 -> BB16000 [tailport=s, headport=n]
BB15999 -> BB16007 [tailport=s, headport=n, color=gray]
BB16000 [shape=record label="{41914: read-variable['getBlockEnd',v54,v53]|41915: read-variable['block',v55,v2]}" ] 
BB16000 -> BB16001 [tailport=s, headport=n, headlabel="      16001"]
BB16000 -> BB16007 [tailport=s, headport=n, color=gray]
BB16001 [shape=record label="{41916: call-getBlockEnd [v53,v54,v55,v52]}" ] 
BB16001 -> BB16002 [tailport=s, headport=n, headlabel="      16002"]
BB16001 -> BB16007 [tailport=s, headport=n, color=gray]
BB16002 [shape=record label="{41917: write-variable[v52,'previousNode']*|41918: read-variable['updateScope',v57,v56]|41919: read-variable['block',v59,v2]|41920: read-property[v59,'scope',v58]|41921: \<variable-non-null-undef\>['block']|41922: read-variable['index',v60,v2]|41923: read-variable['valueIdentifier',v61,v2]|41924: read-variable['value',v62,v2]|41925: read-variable['keyIdentifier',v63,v2]|41926: read-variable['key',v64,v2]|41927: read-variable['collectionLength',v65,v2]}" ] 
BB16002 -> BB16003 [tailport=s, headport=n, headlabel="      16003"]
BB16002 -> BB16007 [tailport=s, headport=n, color=gray]
BB16003 [shape=record label="{41928: call-updateScope [v56,v57,v58,v60,v61,v62,v63,v64,v65,-]*}" ] 
BB16003 -> BB16005 [tailport=s, headport=n, headlabel="      16005"]
BB16003 -> BB16007 [tailport=s, headport=n, color=gray]
BB16004 [shape=record label="{41929: call-$transclude [v44,v45,v46,-]*}" ] 
BB16004 -> BB16005 [tailport=s, headport=n]
BB16004 -> BB16007 [tailport=s, headport=n, color=gray]
BB16005 [shape=record label="{41930: constant[1.0,v44]|41931: read-variable['index',v45,v2]|41932: +[v45,v46]|41933: +[v46,v44,v47]|41934: write-variable[v47,'index']}" ] 
BB16005 -> BB15980 [tailport=s, headport=n]
BB16005 -> BB16007 [tailport=s, headport=n, color=gray]
BB16006 [shape=record label="{41935: return[v1]}" ] 
BB16007 [shape=record label="{41936: exceptional-return}" ] 
//#$~ 27212
}
