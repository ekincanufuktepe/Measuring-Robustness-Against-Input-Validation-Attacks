digraph {
rankdir="TD"
BB_entry415[shape=none,label=""];
BB_entry415 -> BB6381 [tailport=s, headport=n, headlabel="    6381"]
BB6381 [shape=record label="{18537: constant[undefined,v1]|18538: vardecl['destElements']|18539: vardecl['node']|18540: vardecl['clone']|18541: vardecl['i']|18542: vardecl['srcElements']|18543: vardecl['inPage']}" ] 
BB6381 -> BB6382 [tailport=s, headport=n, headlabel="      6382"]
BB6382 [shape=record label="{18544: read-variable['jQuery',v4,-]|18545: read-property[v4,'contains',-]|18546: \<variable-non-null-undef\>['jQuery']|18547: read-variable['elem',v6,-]|18548: read-property[v6,'ownerDocument',v5]|18549: \<variable-non-null-undef\>['elem']|18550: read-variable['elem',v7,-]}" ] 
BB6382 -> BB6383 [tailport=s, headport=n, headlabel="      6383"]
BB6382 -> BB6441 [tailport=s, headport=n, color=gray, headlabel="      6441"]
BB6383 [shape=record label="{18551: call[v4,'contains',v5,v7,v2]}" ] 
BB6383 -> BB6384 [tailport=s, headport=n, headlabel="      6384"]
BB6383 -> BB6441 [tailport=s, headport=n, color=gray]
BB6384 [shape=record label="{18552: write-variable[v2,'inPage']*|18553: read-variable['jQuery',v10,-]|18554: read-property[v10,'support',v9]|18555: \<variable-non-null-undef\>['jQuery']|18556: read-property[v9,'html5Clone',v8]|18557: \<property-non-null-undef\>[v10,'support']|18558: if[v8](true-block:6391,false-block:6385)}" ] 
BB6384 -> BB6391 [tailport=s, headport=n, headlabel="      6391"]
BB6384 -> BB6385 [tailport=s, headport=n, headlabel="      6385"]
BB6384 -> BB6441 [tailport=s, headport=n, color=gray]
BB6385 [shape=record label="{18559: read-variable['jQuery',v10,-]|18560: read-property[v10,'isXMLDoc',-]|18561: \<variable-non-null-undef\>['jQuery']|18562: read-variable['elem',v11,-]}" ] 
BB6385 -> BB6386 [tailport=s, headport=n, headlabel="      6386"]
BB6385 -> BB6441 [tailport=s, headport=n, color=gray]
BB6386 [shape=record label="{18563: call[v10,'isXMLDoc',v11,v8]}" ] 
BB6386 -> BB6387 [tailport=s, headport=n, headlabel="      6387"]
BB6386 -> BB6441 [tailport=s, headport=n, color=gray]
BB6387 [shape=record label="{18564: if[v8](true-block:6391,false-block:6388)}" ] 
BB6387 -> BB6391 [tailport=s, headport=n]
BB6387 -> BB6388 [tailport=s, headport=n, headlabel="      6388"]
BB6388 [shape=record label="{18565: read-variable['rnoshimcache',v11,-]|18566: read-property[v11,'test',-]|18567: \<variable-non-null-undef\>['rnoshimcache']|18568: constant[\"\\\<\",v15]|18569: read-variable['elem',v17,-]|18570: read-property[v17,'nodeName',v16]|18571: \<variable-non-null-undef\>['elem']|18572: +[v15,v16,v13]|18573: constant[\"\\\>\",v14]|18574: +[v13,v14,v12]}" ] 
BB6388 -> BB6389 [tailport=s, headport=n, headlabel="      6389"]
BB6388 -> BB6441 [tailport=s, headport=n, color=gray]
BB6389 [shape=record label="{18575: call[v11,'test',v12,v9]}" ] 
BB6389 -> BB6390 [tailport=s, headport=n, headlabel="      6390"]
BB6389 -> BB6441 [tailport=s, headport=n, color=gray]
BB6390 [shape=record label="{18576: ![v9,v8]}" ] 
BB6390 -> BB6391 [tailport=s, headport=n]
BB6390 -> BB6441 [tailport=s, headport=n, color=gray]
BB6391 [shape=record label="{18577: if[v8](true-block:6392,false-block:6393)}" ] 
BB6391 -> BB6392 [tailport=s, headport=n, headlabel="      6392"]
BB6391 -> BB6393 [tailport=s, headport=n, headlabel="      6393"]
BB6392 [shape=record label="{18578: read-variable['elem',v11,-]|18579: read-property[v11,'cloneNode',-]|18580: \<variable-non-null-undef\>['elem']|18581: constant[true,v12]}" ] 
BB6392 -> BB6394 [tailport=s, headport=n, headlabel="      6394"]
BB6392 -> BB6441 [tailport=s, headport=n, color=gray]
BB6393 [shape=record label="{18582: read-variable['fragmentDiv',v10,-]|18583: read-variable['elem',v11,-]|18584: read-property[v11,'outerHTML',v9]|18585: \<variable-non-null-undef\>['elem']|18586: write-property[v10,'innerHTML',v9]|18587: \<variable-non-null-undef\>['fragmentDiv']*|18588: read-variable['fragmentDiv',v13,-]|18589: read-property[v13,'removeChild',-]|18590: \<variable-non-null-undef\>['fragmentDiv']|18591: read-variable['fragmentDiv',v15,-]|18592: read-property[v15,'firstChild',v14]|18593: \<variable-non-null-undef\>['fragmentDiv']|18594: write-variable[v14,'clone']}" ] 
BB6393 -> BB6396 [tailport=s, headport=n, headlabel="      6396"]
BB6393 -> BB6441 [tailport=s, headport=n, color=gray]
BB6394 [shape=record label="{18595: call[v11,'cloneNode',v12,v9]}" ] 
BB6394 -> BB6395 [tailport=s, headport=n, headlabel="      6395"]
BB6394 -> BB6441 [tailport=s, headport=n, color=gray]
BB6395 [shape=record label="{18596: write-variable[v9,'clone']*}" ] 
BB6395 -> BB6397 [tailport=s, headport=n, headlabel="      6397"]
BB6396 [shape=record label="{18597: call[v13,'removeChild',v14,-]*}" ] 
BB6396 -> BB6397 [tailport=s, headport=n]
BB6396 -> BB6441 [tailport=s, headport=n, color=gray]
BB6397 [shape=record label="{18598: read-variable['jQuery',v12,-]|18599: read-property[v12,'support',v11]|18600: \<variable-non-null-undef\>['jQuery']|18601: read-property[v11,'noCloneEvent',v10]|18602: \<property-non-null-undef\>[v12,'support']|18603: ![v10,v9]|18604: if[v9](true-block:6399,false-block:6398)}" ] 
BB6397 -> BB6399 [tailport=s, headport=n, headlabel="      6399"]
BB6397 -> BB6398 [tailport=s, headport=n, headlabel="      6398"]
BB6397 -> BB6441 [tailport=s, headport=n, color=gray]
BB6398 [shape=record label="{18605: read-variable['jQuery',v12,-]|18606: read-property[v12,'support',v11]|18607: \<variable-non-null-undef\>['jQuery']|18608: read-property[v11,'noCloneChecked',v10]|18609: \<property-non-null-undef\>[v12,'support']|18610: ![v10,v9]}" ] 
BB6398 -> BB6399 [tailport=s, headport=n]
BB6398 -> BB6441 [tailport=s, headport=n, color=gray]
BB6399 [shape=record label="{18611: if[v9](true-block:6400,false-block:6406)}" ] 
BB6399 -> BB6406 [tailport=s, headport=n, headlabel="      6406"]
BB6399 -> BB6400 [tailport=s, headport=n, headlabel="      6400"]
BB6400 [shape=record label="{18612: read-variable['elem',v12,-]|18613: read-property[v12,'nodeType',v10]|18614: \<variable-non-null-undef\>['elem']|18615: constant[1.0,v11]|18616: ===[v10,v11,v9]|18617: if[v9](true-block:6402,false-block:6401)}" ] 
BB6400 -> BB6402 [tailport=s, headport=n, headlabel="      6402"]
BB6400 -> BB6401 [tailport=s, headport=n, headlabel="      6401"]
BB6400 -> BB6441 [tailport=s, headport=n, color=gray]
BB6401 [shape=record label="{18618: read-variable['elem',v12,-]|18619: read-property[v12,'nodeType',v10]|18620: \<variable-non-null-undef\>['elem']|18621: constant[11.0,v11]|18622: ===[v10,v11,v9]}" ] 
BB6401 -> BB6402 [tailport=s, headport=n]
BB6401 -> BB6441 [tailport=s, headport=n, color=gray]
BB6402 [shape=record label="{18623: if[v9](true-block:6403,false-block:6406)}" ] 
BB6402 -> BB6406 [tailport=s, headport=n]
BB6402 -> BB6403 [tailport=s, headport=n, headlabel="      6403"]
BB6403 [shape=record label="{18624: read-variable['jQuery',v12,-]|18625: read-property[v12,'isXMLDoc',-]|18626: \<variable-non-null-undef\>['jQuery']|18627: read-variable['elem',v13,-]}" ] 
BB6403 -> BB6404 [tailport=s, headport=n, headlabel="      6404"]
BB6403 -> BB6441 [tailport=s, headport=n, color=gray]
BB6404 [shape=record label="{18628: call[v12,'isXMLDoc',v13,v10]}" ] 
BB6404 -> BB6405 [tailport=s, headport=n, headlabel="      6405"]
BB6404 -> BB6441 [tailport=s, headport=n, color=gray]
BB6405 [shape=record label="{18629: ![v10,v9]}" ] 
BB6405 -> BB6406 [tailport=s, headport=n]
BB6405 -> BB6441 [tailport=s, headport=n, color=gray]
BB6406 [shape=record label="{18630: if[v9](true-block:6407,false-block:6417)}" ] 
BB6406 -> BB6407 [tailport=s, headport=n, headlabel="      6407"]
BB6406 -> BB6417 [tailport=s, headport=n, headlabel="      6417"]
BB6407 [shape=record label="{18631: read-variable['getAll',v12,v11]|18632: read-variable['clone',v13,-]}" ] 
BB6407 -> BB6408 [tailport=s, headport=n, headlabel="      6408"]
BB6407 -> BB6441 [tailport=s, headport=n, color=gray]
BB6408 [shape=record label="{18633: call[v11,v12,v13,v10]}" ] 
BB6408 -> BB6409 [tailport=s, headport=n, headlabel="      6409"]
BB6408 -> BB6441 [tailport=s, headport=n, color=gray]
BB6409 [shape=record label="{18634: write-variable[v10,'destElements']*|18635: read-variable['getAll',v16,v15]|18636: read-variable['elem',v17,-]}" ] 
BB6409 -> BB6410 [tailport=s, headport=n, headlabel="      6410"]
BB6409 -> BB6441 [tailport=s, headport=n, color=gray]
BB6410 [shape=record label="{18637: call[v15,v16,v17,v14]}" ] 
BB6410 -> BB6411 [tailport=s, headport=n, headlabel="      6411"]
BB6410 -> BB6441 [tailport=s, headport=n, color=gray]
BB6411 [shape=record label="{18638: write-variable[v14,'srcElements']*|18639: constant[0.0,v19]|18640: write-variable[v19,'i']}" ] 
BB6411 -> BB6412 [tailport=s, headport=n, headlabel="      6412"]
BB6412 [shape=record label="{18641: read-variable['srcElements',v22,-]|18642: read-variable['i',v23,-]|18643: read-property[v22,v23,v20]|18644: \<variable-non-null-undef\>['srcElements']|18645: write-variable[v20,'node']|18646: constant[null,v21]|18647: !=[v20,v21,v18]|18648: if[v18](true-block:6413,false-block:6417)}" ] 
BB6412 -> BB6413 [tailport=s, headport=n, headlabel="      6413"]
BB6412 -> BB6417 [tailport=s, headport=n]
BB6412 -> BB6441 [tailport=s, headport=n, color=gray]
BB6413 [shape=record label="{18649: read-variable['destElements',v25,-]|18650: read-variable['i',v26,-]|18651: read-property[v25,v26,v24]|18652: \<variable-non-null-undef\>['destElements']|18653: if[v24](true-block:6414,false-block:6416)}" ] 
BB6413 -> BB6414 [tailport=s, headport=n, headlabel="      6414"]
BB6413 -> BB6416 [tailport=s, headport=n, headlabel="      6416"]
BB6413 -> BB6441 [tailport=s, headport=n, color=gray]
BB6414 [shape=record label="{18654: read-variable['fixCloneNodeIssues',v28,v27]|18655: read-variable['node',v29,-]|18656: read-variable['destElements',v31,-]|18657: read-variable['i',v32,-]|18658: read-property[v31,v32,v30]|18659: \<variable-non-null-undef\>['destElements']}" ] 
BB6414 -> BB6415 [tailport=s, headport=n, headlabel="      6415"]
BB6414 -> BB6441 [tailport=s, headport=n, color=gray]
BB6415 [shape=record label="{18660: call[v27,v28,v29,v30,-]*}" ] 
BB6415 -> BB6416 [tailport=s, headport=n]
BB6415 -> BB6441 [tailport=s, headport=n, color=gray]
BB6416 [shape=record label="{18661: constant[1.0,v27]|18662: read-variable['i',v28,-]|18663: +[v28,v29]|18664: +[v29,v27,v30]|18665: write-variable[v30,'i']}" ] 
BB6416 -> BB6412 [tailport=s, headport=n]
BB6416 -> BB6441 [tailport=s, headport=n, color=gray]
BB6417 [shape=record label="{18666: read-variable['dataAndEvents',v10,-]|18667: if[v10](true-block:6418,false-block:6432)}" ] 
BB6417 -> BB6418 [tailport=s, headport=n, headlabel="      6418"]
BB6417 -> BB6432 [tailport=s, headport=n, headlabel="      6432"]
BB6417 -> BB6441 [tailport=s, headport=n, color=gray]
BB6418 [shape=record label="{18668: read-variable['deepDataAndEvents',v11,-]|18669: if[v11](true-block:6419,false-block:6420)}" ] 
BB6418 -> BB6419 [tailport=s, headport=n, headlabel="      6419"]
BB6418 -> BB6420 [tailport=s, headport=n, headlabel="      6420"]
BB6418 -> BB6441 [tailport=s, headport=n, color=gray]
BB6419 [shape=record label="{18670: read-variable['srcElements',v12,-]|18671: if[v12](true-block:6423,false-block:6421)}" ] 
BB6419 -> BB6423 [tailport=s, headport=n, headlabel="      6423"]
BB6419 -> BB6421 [tailport=s, headport=n, headlabel="      6421"]
BB6419 -> BB6441 [tailport=s, headport=n, color=gray]
BB6420 [shape=record label="{18672: read-variable['cloneCopyEvent',v13,v12]|18673: read-variable['elem',v14,-]|18674: read-variable['clone',v15,-]}" ] 
BB6420 -> BB6431 [tailport=s, headport=n, headlabel="      6431"]
BB6420 -> BB6441 [tailport=s, headport=n, color=gray]
BB6421 [shape=record label="{18675: read-variable['getAll',v14,v13]|18676: read-variable['elem',v15,-]}" ] 
BB6421 -> BB6422 [tailport=s, headport=n, headlabel="      6422"]
BB6421 -> BB6441 [tailport=s, headport=n, color=gray]
BB6422 [shape=record label="{18677: call[v13,v14,v15,v12]}" ] 
BB6422 -> BB6423 [tailport=s, headport=n]
BB6422 -> BB6441 [tailport=s, headport=n, color=gray]
BB6423 [shape=record label="{18678: write-variable[v12,'srcElements']*|18679: read-variable['destElements',v13,-]|18680: if[v13](true-block:6426,false-block:6424)}" ] 
BB6423 -> BB6426 [tailport=s, headport=n, headlabel="      6426"]
BB6423 -> BB6424 [tailport=s, headport=n, headlabel="      6424"]
BB6423 -> BB6441 [tailport=s, headport=n, color=gray]
BB6424 [shape=record label="{18681: read-variable['getAll',v15,v14]|18682: read-variable['clone',v16,-]}" ] 
BB6424 -> BB6425 [tailport=s, headport=n, headlabel="      6425"]
BB6424 -> BB6441 [tailport=s, headport=n, color=gray]
BB6425 [shape=record label="{18683: call[v14,v15,v16,v13]}" ] 
BB6425 -> BB6426 [tailport=s, headport=n]
BB6425 -> BB6441 [tailport=s, headport=n, color=gray]
BB6426 [shape=record label="{18684: write-variable[v13,'destElements']*|18685: constant[0.0,v15]|18686: write-variable[v15,'i']}" ] 
BB6426 -> BB6427 [tailport=s, headport=n, headlabel="      6427"]
BB6427 [shape=record label="{18687: read-variable['srcElements',v18,-]|18688: read-variable['i',v19,-]|18689: read-property[v18,v19,v16]|18690: \<variable-non-null-undef\>['srcElements']|18691: write-variable[v16,'node']|18692: constant[null,v17]|18693: !=[v16,v17,v14]|18694: if[v14](true-block:6428,false-block:6432)}" ] 
BB6427 -> BB6428 [tailport=s, headport=n, headlabel="      6428"]
BB6427 -> BB6432 [tailport=s, headport=n]
BB6427 -> BB6441 [tailport=s, headport=n, color=gray]
BB6428 [shape=record label="{18695: read-variable['cloneCopyEvent',v21,v20]|18696: read-variable['node',v22,-]|18697: read-variable['destElements',v24,-]|18698: read-variable['i',v25,-]|18699: read-property[v24,v25,v23]|18700: \<variable-non-null-undef\>['destElements']}" ] 
BB6428 -> BB6429 [tailport=s, headport=n, headlabel="      6429"]
BB6428 -> BB6441 [tailport=s, headport=n, color=gray]
BB6429 [shape=record label="{18701: call[v20,v21,v22,v23,-]*}" ] 
BB6429 -> BB6430 [tailport=s, headport=n, headlabel="      6430"]
BB6429 -> BB6441 [tailport=s, headport=n, color=gray]
BB6430 [shape=record label="{18702: constant[1.0,v26]|18703: read-variable['i',v27,-]|18704: +[v27,v28]|18705: +[v28,v26,v29]|18706: write-variable[v29,'i']}" ] 
BB6430 -> BB6427 [tailport=s, headport=n]
BB6430 -> BB6441 [tailport=s, headport=n, color=gray]
BB6431 [shape=record label="{18707: call[v12,v13,v14,v15,-]*}" ] 
BB6431 -> BB6432 [tailport=s, headport=n]
BB6431 -> BB6441 [tailport=s, headport=n, color=gray]
BB6432 [shape=record label="{18708: read-variable['getAll',v13,v12]|18709: read-variable['clone',v14,-]|18710: constant[\"script\",v15]}" ] 
BB6432 -> BB6433 [tailport=s, headport=n, headlabel="      6433"]
BB6432 -> BB6441 [tailport=s, headport=n, color=gray]
BB6433 [shape=record label="{18711: call[v12,v13,v14,v15,v11]}" ] 
BB6433 -> BB6434 [tailport=s, headport=n, headlabel="      6434"]
BB6433 -> BB6441 [tailport=s, headport=n, color=gray]
BB6434 [shape=record label="{18712: write-variable[v11,'destElements']*|18713: read-variable['destElements',v19,-]|18714: read-property[v19,'length',v17]|18715: \<variable-non-null-undef\>['destElements']|18716: constant[0.0,v18]|18717: \>[v17,v18,v16]|18718: if[v16](true-block:6435,false-block:6439)}" ] 
BB6434 -> BB6435 [tailport=s, headport=n, headlabel="      6435"]
BB6434 -> BB6439 [tailport=s, headport=n, headlabel="      6439"]
BB6434 -> BB6441 [tailport=s, headport=n, color=gray]
BB6435 [shape=record label="{18719: read-variable['setGlobalEval',v21,v20]|18720: read-variable['destElements',v22,-]|18721: read-variable['inPage',v24,-]|18722: ![v24,v23]|18723: if[v23](true-block:6436,false-block:6438)}" ] 
BB6435 -> BB6438 [tailport=s, headport=n, headlabel="      6438"]
BB6435 -> BB6436 [tailport=s, headport=n, headlabel="      6436"]
BB6435 -> BB6441 [tailport=s, headport=n, color=gray]
BB6436 [shape=record label="{18724: read-variable['getAll',v26,v25]|18725: read-variable['elem',v27,-]|18726: constant[\"script\",v28]}" ] 
BB6436 -> BB6437 [tailport=s, headport=n, headlabel="      6437"]
BB6436 -> BB6441 [tailport=s, headport=n, color=gray]
BB6437 [shape=record label="{18727: call[v25,v26,v27,v28,v23]}" ] 
BB6437 -> BB6438 [tailport=s, headport=n]
BB6437 -> BB6441 [tailport=s, headport=n, color=gray]
BB6438 [shape=record label="{18728: call[v20,v21,v22,v23,-]*}" ] 
BB6438 -> BB6439 [tailport=s, headport=n]
BB6438 -> BB6441 [tailport=s, headport=n, color=gray]
BB6439 [shape=record label="{18729: constant[null,v20]|18730: write-variable[v20,'node']|18731: write-variable[v20,'srcElements']|18732: write-variable[v20,'destElements']*|18733: read-variable['clone',v1,-]}" ] 
BB6439 -> BB6440 [tailport=s, headport=n, headlabel="      6440"]
BB6439 -> BB6441 [tailport=s, headport=n, color=gray]
BB6440 [shape=record label="{18734: return[v1]}" ] 
BB6441 [shape=record label="{18735: exceptional-return}" ] 
}
