digraph {
rankdir="TD"
BB_entry805[shape=none,label=""];
BB_entry805 -> BB10592 [tailport=s, headport=n, headlabel="    10592"]
BB10592 [shape=record label="{34768: constant[undefined,v1]|34769: vardecl['key']}" ] 
BB10592 -> BB10593 [tailport=s, headport=n, headlabel="      10593"]
BB10593 [shape=record label="{34770: read-variable['objA',v3,-]|34771: read-variable['objB',v4,-]|34772: ===[v3,v4,v2]|34773: if[v2](true-block:10594,false-block:10595)}" ] 
BB10593 -> BB10594 [tailport=s, headport=n, headlabel="      10594"]
BB10593 -> BB10595 [tailport=s, headport=n, headlabel="      10595"]
BB10593 -> BB10622 [tailport=s, headport=n, color=gray, headlabel="      10622"]
BB10594 [shape=record label="{34774: constant[true,v1]}" ] 
BB10594 -> BB10621 [tailport=s, headport=n, headlabel="      10621"]
BB10595 [shape=record label="{34775: read-variable['objA',v6,-]}" ] 
BB10595 -> BB10596 [tailport=s, headport=n, headlabel="      10596"]
BB10595 -> BB10622 [tailport=s, headport=n, color=gray]
BB10596 [shape=record label="{34776: begin-for-in[v6,v7]}" ] 
BB10596 -> BB10597 [tailport=s, headport=n, headlabel="      10597"]
BB10596 -> BB10622 [tailport=s, headport=n, color=gray]
BB10597 [shape=record label="{34777: has-next[v7,v8]|34778: if[v8](true-block:10598,false-block:10608)}" ] 
BB10597 -> BB10598 [tailport=s, headport=n, headlabel="      10598"]
BB10597 -> BB10608 [tailport=s, headport=n, headlabel="      10608"]
BB10598 [shape=record label="{34779: next-property[v7,v9]|34780: write-variable[v9,'key']|34781: read-variable['objA',v12,-]|34782: read-property[v12,'hasOwnProperty',-]|34783: \<variable-non-null-undef\>['objA']|34784: read-variable['key',v13,-]}" ] 
BB10598 -> BB10599 [tailport=s, headport=n, headlabel="      10599"]
BB10598 -> BB10622 [tailport=s, headport=n, color=gray]
BB10599 [shape=record label="{34785: call-objA.hasOwnProperty [v12,'hasOwnProperty',v13,v10]}" ] 
BB10599 -> BB10600 [tailport=s, headport=n, headlabel="      10600"]
BB10599 -> BB10622 [tailport=s, headport=n, color=gray]
BB10600 [shape=record label="{34786: if[v10](true-block:10601,false-block:10605)}" ] 
BB10600 -> BB10605 [tailport=s, headport=n, headlabel="      10605"]
BB10600 -> BB10601 [tailport=s, headport=n, headlabel="      10601"]
BB10601 [shape=record label="{34787: read-variable['objB',v16,-]|34788: read-property[v16,'hasOwnProperty',-]|34789: \<variable-non-null-undef\>['objB']|34790: read-variable['key',v17,-]}" ] 
BB10601 -> BB10602 [tailport=s, headport=n, headlabel="      10602"]
BB10601 -> BB10622 [tailport=s, headport=n, color=gray]
BB10602 [shape=record label="{34791: call-objB.hasOwnProperty [v16,'hasOwnProperty',v17,v14]}" ] 
BB10602 -> BB10603 [tailport=s, headport=n, headlabel="      10603"]
BB10602 -> BB10622 [tailport=s, headport=n, color=gray]
BB10603 [shape=record label="{34792: ![v14,v10]|34793: if[v10](true-block:10605,false-block:10604)}" ] 
BB10603 -> BB10605 [tailport=s, headport=n]
BB10603 -> BB10604 [tailport=s, headport=n, headlabel="      10604"]
BB10603 -> BB10622 [tailport=s, headport=n, color=gray]
BB10604 [shape=record label="{34794: read-variable['objA',v16,-]|34795: read-variable['key',v17,-]|34796: read-property[v16,v17,v14]|34797: \<variable-non-null-undef\>['objA']|34798: read-variable['objB',v18,-]|34799: read-variable['key',v19,-]|34800: read-property[v18,v19,v15]|34801: \<variable-non-null-undef\>['objB']|34802: !==[v14,v15,v10]}" ] 
BB10604 -> BB10605 [tailport=s, headport=n]
BB10604 -> BB10622 [tailport=s, headport=n, color=gray]
BB10605 [shape=record label="{34803: if[v10](true-block:10606,false-block:10607)}" ] 
BB10605 -> BB10606 [tailport=s, headport=n, headlabel="      10606"]
BB10605 -> BB10607 [tailport=s, headport=n, headlabel="      10607"]
BB10606 [shape=record label="{34804: constant[false,v1]}" ] 
BB10606 -> BB10621 [tailport=s, headport=n]
BB10607 [shape=record label="{34805: end-for-in(begin-node:34776)}" ] 
BB10607 -> BB10597 [tailport=s, headport=n]
BB10608 [shape=record label="{34806: read-variable['objB',v11,-]}" ] 
BB10608 -> BB10609 [tailport=s, headport=n, headlabel="      10609"]
BB10608 -> BB10622 [tailport=s, headport=n, color=gray]
BB10609 [shape=record label="{34807: begin-for-in[v11,v12]}" ] 
BB10609 -> BB10610 [tailport=s, headport=n, headlabel="      10610"]
BB10609 -> BB10622 [tailport=s, headport=n, color=gray]
BB10610 [shape=record label="{34808: has-next[v12,v13]|34809: if[v13](true-block:10611,false-block:10620)}" ] 
BB10610 -> BB10611 [tailport=s, headport=n, headlabel="      10611"]
BB10610 -> BB10620 [tailport=s, headport=n, headlabel="      10620"]
BB10611 [shape=record label="{34810: next-property[v12,v14]|34811: write-variable[v14,'key']|34812: read-variable['objB',v17,-]|34813: read-property[v17,'hasOwnProperty',-]|34814: \<variable-non-null-undef\>['objB']|34815: read-variable['key',v18,-]}" ] 
BB10611 -> BB10612 [tailport=s, headport=n, headlabel="      10612"]
BB10611 -> BB10622 [tailport=s, headport=n, color=gray]
BB10612 [shape=record label="{34816: call-objB.hasOwnProperty [v17,'hasOwnProperty',v18,v15]}" ] 
BB10612 -> BB10613 [tailport=s, headport=n, headlabel="      10613"]
BB10612 -> BB10622 [tailport=s, headport=n, color=gray]
BB10613 [shape=record label="{34817: if[v15](true-block:10614,false-block:10617)}" ] 
BB10613 -> BB10617 [tailport=s, headport=n, headlabel="      10617"]
BB10613 -> BB10614 [tailport=s, headport=n, headlabel="      10614"]
BB10614 [shape=record label="{34818: read-variable['objA',v21,-]|34819: read-property[v21,'hasOwnProperty',-]|34820: \<variable-non-null-undef\>['objA']|34821: read-variable['key',v22,-]}" ] 
BB10614 -> BB10615 [tailport=s, headport=n, headlabel="      10615"]
BB10614 -> BB10622 [tailport=s, headport=n, color=gray]
BB10615 [shape=record label="{34822: call-objA.hasOwnProperty [v21,'hasOwnProperty',v22,v19]}" ] 
BB10615 -> BB10616 [tailport=s, headport=n, headlabel="      10616"]
BB10615 -> BB10622 [tailport=s, headport=n, color=gray]
BB10616 [shape=record label="{34823: ![v19,v15]}" ] 
BB10616 -> BB10617 [tailport=s, headport=n]
BB10616 -> BB10622 [tailport=s, headport=n, color=gray]
BB10617 [shape=record label="{34824: if[v15](true-block:10618,false-block:10619)}" ] 
BB10617 -> BB10618 [tailport=s, headport=n, headlabel="      10618"]
BB10617 -> BB10619 [tailport=s, headport=n, headlabel="      10619"]
BB10618 [shape=record label="{34825: constant[false,v1]}" ] 
BB10618 -> BB10621 [tailport=s, headport=n]
BB10619 [shape=record label="{34826: end-for-in(begin-node:34807)}" ] 
BB10619 -> BB10610 [tailport=s, headport=n]
BB10620 [shape=record label="{34827: constant[true,v1]}" ] 
BB10620 -> BB10621 [tailport=s, headport=n]
BB10621 [shape=record label="{34828: return[v1]}" ] 
BB10622 [shape=record label="{34829: exceptional-return}" ] 
//#$~ 19112
}
