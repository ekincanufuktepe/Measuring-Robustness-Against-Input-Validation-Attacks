digraph {
rankdir="TD"
BB_entry247[shape=none,label=""];
BB_entry247 -> BB3299 [tailport=s, headport=n, headlabel="    3299"]
BB3299 [shape=record label="{10842: constant[undefined,v1]|10843: vardecl['STATE_CHANGE']|10844: vardecl['SYNCED']|10845: vardecl['SYNCING']|10846: vardecl['SyncMachine']|10847: vardecl['UNSYNCED']|10848: vardecl['event']|10849: vardecl['_fn']|10850: vardecl['_i']|10851: vardecl['_len']|10852: vardecl['_ref']}" ] 
BB3299 -> BB3300 [tailport=s, headport=n, headlabel="      3300"]
BB3300 [shape=record label="{10853: constant[\"unsynced\",v2]|10854: write-variable[v2,'UNSYNCED']*|10855: constant[\"syncing\",v3]|10856: write-variable[v3,'SYNCING']*|10857: constant[\"synced\",v4]|10858: write-variable[v4,'SYNCED']*|10859: constant[\"syncStateChange\",v5]|10860: write-variable[v5,'STATE_CHANGE']*|10861: new[v6]|10862: read-variable['UNSYNCED',v7,-]|10863: write-property[v6,'_syncState',v7]|10864: constant[null,v8]|10865: write-property[v6,'_previousSyncState',v8]|10866: function-expr[function ( ),v9]|10867: write-property[v6,'syncState',v9]|10868: function-expr[function ( ),v10]|10869: write-property[v6,'isUnsynced',v10]|10870: function-expr[function ( ),v11]|10871: write-property[v6,'isSynced',v11]|10872: function-expr[function ( ),v12]|10873: write-property[v6,'isSyncing',v12]|10874: function-expr[function ( ),v13]|10875: write-property[v6,'unsync',v13]|10876: function-expr[function ( ),v14]|10877: write-property[v6,'beginSync',v14]|10878: function-expr[function ( ),v15]|10879: write-property[v6,'finishSync',v15]|10880: function-expr[function ( ),v16]|10881: write-property[v6,'abortSync',v16]|10882: write-variable[v6,'SyncMachine']*|10883: read-variable['Array',v18,-]|10884: read-variable['UNSYNCED',v19,-]|10885: read-variable['SYNCING',v20,-]|10886: read-variable['SYNCED',v21,-]|10887: read-variable['STATE_CHANGE',v22,-]}" ] 
BB3300 -> BB3301 [tailport=s, headport=n, headlabel="      3301"]
BB3300 -> BB3312 [tailport=s, headport=n, color=gray, headlabel="      3312"]
BB3301 [shape=record label="{10888: construct [-,v18,v19,v20,v21,v22,v17]}" ] 
BB3301 -> BB3302 [tailport=s, headport=n, headlabel="      3302"]
BB3301 -> BB3312 [tailport=s, headport=n, color=gray]
BB3302 [shape=record label="{10889: write-variable[v17,'_ref']*|10890: function-expr[function ( event ),v23]|10891: write-variable[v23,'_fn']*|10892: constant[0.0,v25]|10893: write-variable[v25,'_i']|10894: read-variable['_ref',v27,-]|10895: read-property[v27,'length',v26]|10896: \<variable-non-null-undef\>['_ref']|10897: write-variable[v26,'_len']}" ] 
BB3302 -> BB3303 [tailport=s, headport=n, headlabel="      3303"]
BB3302 -> BB3312 [tailport=s, headport=n, color=gray]
BB3303 [shape=record label="{10898: read-variable['_i',v28,-]|10899: read-variable['_len',v29,-]|10900: \<[v28,v29,v24]|10901: if[v24](true-block:3304,false-block:3305)}" ] 
BB3303 -> BB3304 [tailport=s, headport=n, headlabel="      3304"]
BB3303 -> BB3305 [tailport=s, headport=n, headlabel="      3305"]
BB3303 -> BB3312 [tailport=s, headport=n, color=gray]
BB3304 [shape=record label="{10902: read-variable['_ref',v31,-]|10903: read-variable['_i',v32,-]|10904: read-property[v31,v32,v30]|10905: \<variable-non-null-undef\>['_ref']|10906: write-variable[v30,'event']*|10907: read-variable['_fn',v34,v33]|10908: read-variable['event',v35,-]}" ] 
BB3304 -> BB3306 [tailport=s, headport=n, headlabel="      3306"]
BB3304 -> BB3312 [tailport=s, headport=n, color=gray]
BB3305 [shape=record label="{10909: read-variable['Object',v34,-]|10910: read-property[v34,'freeze',v33]|10911: \<variable-non-null-undef\>['Object']|10912: typeof[v33,v31]|10913: constant[\"function\",v32]|10914: ===[v31,v32,v30]|10915: if[v30](true-block:3308,false-block:3310)}" ] 
BB3305 -> BB3308 [tailport=s, headport=n, headlabel="      3308"]
BB3305 -> BB3310 [tailport=s, headport=n, headlabel="      3310"]
BB3305 -> BB3312 [tailport=s, headport=n, color=gray]
BB3306 [shape=record label="{10916: call-_fn [v33,v34,v35,-]*}" ] 
BB3306 -> BB3307 [tailport=s, headport=n, headlabel="      3307"]
BB3306 -> BB3312 [tailport=s, headport=n, color=gray]
BB3307 [shape=record label="{10917: constant[1.0,v36]|10918: read-variable['_i',v37,-]|10919: +[v37,v38]|10920: +[v38,v36,v39]|10921: write-variable[v39,'_i']}" ] 
BB3307 -> BB3303 [tailport=s, headport=n]
BB3307 -> BB3312 [tailport=s, headport=n, color=gray]
BB3308 [shape=record label="{10922: read-variable['Object',v36,-]|10923: read-property[v36,'freeze',-]|10924: \<variable-non-null-undef\>['Object']|10925: read-variable['SyncMachine',v37,-]}" ] 
BB3308 -> BB3309 [tailport=s, headport=n, headlabel="      3309"]
BB3308 -> BB3312 [tailport=s, headport=n, color=gray]
BB3309 [shape=record label="{10926: call-Object.freeze [v36,'freeze',v37,-]*}" ] 
BB3309 -> BB3310 [tailport=s, headport=n]
BB3309 -> BB3312 [tailport=s, headport=n, color=gray]
BB3310 [shape=record label="{10927: read-variable['module',v36,-]|10928: read-variable['SyncMachine',v35,-]|10929: write-property[v36,'exports',v35]|10930: \<variable-non-null-undef\>['module']*}" ] 
BB3310 -> BB3311 [tailport=s, headport=n, headlabel="      3311"]
BB3310 -> BB3312 [tailport=s, headport=n, color=gray]
BB3311 [shape=record label="{10931: return[v1]}" ] 
BB3312 [shape=record label="{10932: exceptional-return}" ] 
//#$~ 2888
}
