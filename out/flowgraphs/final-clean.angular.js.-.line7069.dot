digraph {
rankdir="TD"
BB_entry345[shape=none,label=""];
BB_entry345 -> BB5631 [tailport=s, headport=n, headlabel="    5631"]
BB5631 [shape=record label="{14652: constant[undefined,v1]|14653: vardecl['Attributes']|14654: function-decl[function safeAddClass ( $element className ),-]|14655: vardecl['startSymbol']|14656: vardecl['endSymbol']|14657: vardecl['denormalizeTemplate']|14658: vardecl['NG_ATTR_BINDING']|14659: function-decl[function compile ( $compileNodes transcludeFn maxPriority ignoreDirective previousCompileContext ),-]|14660: function-decl[function detectNamespaceForChildElements ( parentElement ),-]|14661: function-decl[function compileNodes ( nodeList transcludeFn $rootElement maxPriority ignoreDirective previousCompileContext ),-]|14662: function-decl[function createBoundTranscludeFn ( scope transcludeFn previousBoundTranscludeFn ),-]|14663: function-decl[function collectDirectives ( node directives attrs maxPriority ignoreDirective ),-]|14664: function-decl[function groupScan ( node attrStart attrEnd ),-]|14665: function-decl[function groupElementsLinkFnWrapper ( linkFn attrStart attrEnd ),-]|14666: function-decl[function applyDirectivesToNode ( directives compileNode templateAttrs transcludeFn jqCollection originalReplaceDirective preLinkFns postLinkFns previousCompileContext ),-]|14667: function-decl[function markDirectivesAsIsolate ( directives ),-]|14668: function-decl[function addDirective ( tDirectives name location maxPriority ignoreDirective startAttrName endAttrName ),-]|14669: function-decl[function directiveIsMultiElement ( name ),-]|14670: function-decl[function mergeTemplateAttributes ( dst src ),-]|14671: function-decl[function compileTemplateUrl ( directives $compileNode tAttrs $rootElement childTranscludeFn preLinkFns postLinkFns previousCompileContext ),-]|14672: function-decl[function byPriority ( a b ),-]|14673: function-decl[function assertNoDuplicate ( what previousDirective directive element ),-]|14674: function-decl[function addTextInterpolateDirective ( directives text ),-]|14675: function-decl[function wrapTemplate ( type template ),-]|14676: function-decl[function getTrustedContext ( node attrNormalizedName ),-]|14677: function-decl[function addAttrInterpolateDirective ( node directives value name allOrNothing ),-]|14678: function-decl[function replaceWith ( $rootElement elementsToRemove newNode ),-]|14679: function-decl[function cloneAndAnnotateFn ( fn annotation ),-]|14680: function-decl[function invokeLinkFn ( linkFn scope $element attrs controllers transcludeFn ),-]|14681: function-decl[function initializeDirectiveBindings ( scope attrs destination bindings directive newScope ),-]}" ] 
BB5631 -> BB5632 [tailport=s, headport=n, headlabel="      5632"]
BB5632 [shape=record label="{14682: function-expr[function ( element attributesToCopy ),v2]|14683: write-variable[v2,'Attributes']*|14684: read-variable['Attributes',v4,-]|14685: new[v3]|14686: read-variable['directiveNormalize',v5,-]|14687: write-property[v3,'$normalize',v5]|14688: function-expr[function ( classVal ),v6]|14689: write-property[v3,'$addClass',v6]|14690: function-expr[function ( classVal ),v7]|14691: write-property[v3,'$removeClass',v7]|14692: function-expr[function ( newClasses oldClasses ),v8]|14693: write-property[v3,'$updateClass',v8]|14694: function-expr[function ( key value writeAttr attrName ),v9]|14695: write-property[v3,'$set',v9]|14696: function-expr[function ( key fn ),v10]|14697: write-property[v3,'$observe',v10]|14698: write-property[v4,'prototype',v3]|14699: \<variable-non-null-undef\>['Attributes']*|14700: read-variable['$interpolate',v13,-]|14701: read-property[v13,'startSymbol',-]|14702: \<variable-non-null-undef\>['$interpolate']}" ] 
BB5632 -> BB5633 [tailport=s, headport=n, headlabel="      5633"]
BB5632 -> BB5657 [tailport=s, headport=n, color=gray, headlabel="      5657"]
BB5633 [shape=record label="{14703: call-$interpolate.startSymbol [v13,'startSymbol',v11]}" ] 
BB5633 -> BB5634 [tailport=s, headport=n, headlabel="      5634"]
BB5633 -> BB5657 [tailport=s, headport=n, color=gray]
BB5634 [shape=record label="{14704: write-variable[v11,'startSymbol']*|14705: read-variable['$interpolate',v16,-]|14706: read-property[v16,'endSymbol',-]|14707: \<variable-non-null-undef\>['$interpolate']}" ] 
BB5634 -> BB5635 [tailport=s, headport=n, headlabel="      5635"]
BB5634 -> BB5657 [tailport=s, headport=n, color=gray]
BB5635 [shape=record label="{14708: call-$interpolate.endSymbol [v16,'endSymbol',v14]}" ] 
BB5635 -> BB5636 [tailport=s, headport=n, headlabel="      5636"]
BB5635 -> BB5657 [tailport=s, headport=n, color=gray]
BB5636 [shape=record label="{14709: write-variable[v14,'endSymbol']*|14710: read-variable['startSymbol',v19,-]|14711: constant[\"\\\{\\\{\",v20]|14712: ==[v19,v20,v18]|14713: if[v18](true-block:5638,false-block:5637)}" ] 
BB5636 -> BB5638 [tailport=s, headport=n, headlabel="      5638"]
BB5636 -> BB5637 [tailport=s, headport=n, headlabel="      5637"]
BB5636 -> BB5657 [tailport=s, headport=n, color=gray]
BB5637 [shape=record label="{14714: read-variable['endSymbol',v19,-]|14715: constant[\"\\\}\\\}\",v20]|14716: ==[v19,v20,v18]}" ] 
BB5637 -> BB5638 [tailport=s, headport=n]
BB5637 -> BB5657 [tailport=s, headport=n, color=gray]
BB5638 [shape=record label="{14717: if[v18](true-block:5639,false-block:5640)}" ] 
BB5638 -> BB5639 [tailport=s, headport=n, headlabel="      5639"]
BB5638 -> BB5640 [tailport=s, headport=n, headlabel="      5640"]
BB5639 [shape=record label="{14718: read-variable['identity',v17,-]}" ] 
BB5639 -> BB5641 [tailport=s, headport=n, headlabel="      5641"]
BB5639 -> BB5657 [tailport=s, headport=n, color=gray]
BB5640 [shape=record label="{14719: function-expr[function denormalizeTemplate ( template ),v17]}" ] 
BB5640 -> BB5641 [tailport=s, headport=n]
BB5641 [shape=record label="{14720: write-variable[v17,'denormalizeTemplate']*|14721: read-variable['RegExp',v20,-]|14722: constant[\"^ngAttr[A-Z]\",v21]}" ] 
BB5641 -> BB5642 [tailport=s, headport=n, headlabel="      5642"]
BB5641 -> BB5657 [tailport=s, headport=n, color=gray]
BB5642 [shape=record label="{14723: construct [-,v20,v21,v19]}" ] 
BB5642 -> BB5643 [tailport=s, headport=n, headlabel="      5643"]
BB5642 -> BB5657 [tailport=s, headport=n, color=gray]
BB5643 [shape=record label="{14724: write-variable[v19,'NG_ATTR_BINDING']*|14725: read-variable['compile',v23,-]|14726: read-variable['debugInfoEnabled',v24,-]|14727: if[v24](true-block:5644,false-block:5645)}" ] 
BB5643 -> BB5644 [tailport=s, headport=n, headlabel="      5644"]
BB5643 -> BB5645 [tailport=s, headport=n, headlabel="      5645"]
BB5643 -> BB5657 [tailport=s, headport=n, color=gray]
BB5644 [shape=record label="{14728: function-expr[function $$addBindingInfo ( $element binding ),v22]}" ] 
BB5644 -> BB5646 [tailport=s, headport=n, headlabel="      5646"]
BB5645 [shape=record label="{14729: read-variable['noop',v22,-]}" ] 
BB5645 -> BB5646 [tailport=s, headport=n]
BB5645 -> BB5657 [tailport=s, headport=n, color=gray]
BB5646 [shape=record label="{14730: write-property[v23,'$$addBindingInfo',v22]|14731: \<variable-non-null-undef\>['compile']*|14732: read-variable['compile',v26,-]|14733: read-variable['debugInfoEnabled',v27,-]|14734: if[v27](true-block:5647,false-block:5648)}" ] 
BB5646 -> BB5647 [tailport=s, headport=n, headlabel="      5647"]
BB5646 -> BB5648 [tailport=s, headport=n, headlabel="      5648"]
BB5646 -> BB5657 [tailport=s, headport=n, color=gray]
BB5647 [shape=record label="{14735: function-expr[function $$addBindingClass ( $element ),v25]}" ] 
BB5647 -> BB5649 [tailport=s, headport=n, headlabel="      5649"]
BB5648 [shape=record label="{14736: read-variable['noop',v25,-]}" ] 
BB5648 -> BB5649 [tailport=s, headport=n]
BB5648 -> BB5657 [tailport=s, headport=n, color=gray]
BB5649 [shape=record label="{14737: write-property[v26,'$$addBindingClass',v25]|14738: \<variable-non-null-undef\>['compile']*|14739: read-variable['compile',v29,-]|14740: read-variable['debugInfoEnabled',v30,-]|14741: if[v30](true-block:5650,false-block:5651)}" ] 
BB5649 -> BB5650 [tailport=s, headport=n, headlabel="      5650"]
BB5649 -> BB5651 [tailport=s, headport=n, headlabel="      5651"]
BB5649 -> BB5657 [tailport=s, headport=n, color=gray]
BB5650 [shape=record label="{14742: function-expr[function $$addScopeInfo ( $element scope isolated noTemplate ),v28]}" ] 
BB5650 -> BB5652 [tailport=s, headport=n, headlabel="      5652"]
BB5651 [shape=record label="{14743: read-variable['noop',v28,-]}" ] 
BB5651 -> BB5652 [tailport=s, headport=n]
BB5651 -> BB5657 [tailport=s, headport=n, color=gray]
BB5652 [shape=record label="{14744: write-property[v29,'$$addScopeInfo',v28]|14745: \<variable-non-null-undef\>['compile']*|14746: read-variable['compile',v32,-]|14747: read-variable['debugInfoEnabled',v33,-]|14748: if[v33](true-block:5653,false-block:5654)}" ] 
BB5652 -> BB5653 [tailport=s, headport=n, headlabel="      5653"]
BB5652 -> BB5654 [tailport=s, headport=n, headlabel="      5654"]
BB5652 -> BB5657 [tailport=s, headport=n, color=gray]
BB5653 [shape=record label="{14749: function-expr[function $$addScopeClass ( $element isolated ),v31]}" ] 
BB5653 -> BB5655 [tailport=s, headport=n, headlabel="      5655"]
BB5654 [shape=record label="{14750: read-variable['noop',v31,-]}" ] 
BB5654 -> BB5655 [tailport=s, headport=n]
BB5654 -> BB5657 [tailport=s, headport=n, color=gray]
BB5655 [shape=record label="{14751: write-property[v32,'$$addScopeClass',v31]|14752: \<variable-non-null-undef\>['compile']*|14753: read-variable['compile',v1,-]}" ] 
BB5655 -> BB5656 [tailport=s, headport=n, headlabel="      5656"]
BB5655 -> BB5657 [tailport=s, headport=n, color=gray]
BB5656 [shape=record label="{14754: return[v1]}" ] 
BB5657 [shape=record label="{14755: exceptional-return}" ] 
//#$~ 8759
}
