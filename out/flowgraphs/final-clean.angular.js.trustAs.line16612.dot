digraph {
rankdir="TD"
BB_entry908[shape=none,label=""];
BB_entry908 -> BB11694 [tailport=s, headport=n, headlabel="    11694"]
BB11694 [shape=record label="{30653: constant[undefined,v1]|30654: vardecl['Constructor']}" ] 
BB11694 -> BB11695 [tailport=s, headport=n, headlabel="      11695"]
BB11695 [shape=record label="{30655: read-variable['byType',v5,-]|30656: read-property[v5,'hasOwnProperty',-]|30657: \<variable-non-null-undef\>['byType']|30658: read-variable['type',v6,-]}" ] 
BB11695 -> BB11696 [tailport=s, headport=n, headlabel="      11696"]
BB11695 -> BB11716 [tailport=s, headport=n, color=gray, headlabel="      11716"]
BB11696 [shape=record label="{30659: call-byType.hasOwnProperty [v5,'hasOwnProperty',v6,v3]}" ] 
BB11696 -> BB11697 [tailport=s, headport=n, headlabel="      11697"]
BB11696 -> BB11716 [tailport=s, headport=n, color=gray]
BB11697 [shape=record label="{30660: if[v3](true-block:11698,false-block:11699)}" ] 
BB11697 -> BB11698 [tailport=s, headport=n, headlabel="      11698"]
BB11697 -> BB11699 [tailport=s, headport=n, headlabel="      11699"]
BB11698 [shape=record label="{30661: read-variable['byType',v7,-]|30662: read-variable['type',v8,-]|30663: read-property[v7,v8,v2]|30664: \<variable-non-null-undef\>['byType']}" ] 
BB11698 -> BB11700 [tailport=s, headport=n, headlabel="      11700"]
BB11698 -> BB11716 [tailport=s, headport=n, color=gray]
BB11699 [shape=record label="{30665: constant[null,v2]}" ] 
BB11699 -> BB11700 [tailport=s, headport=n]
BB11700 [shape=record label="{30666: write-variable[v2,'Constructor']*|30667: read-variable['Constructor',v8,-]|30668: ![v8,v7]|30669: if[v7](true-block:11701,false-block:11704)}" ] 
BB11700 -> BB11701 [tailport=s, headport=n, headlabel="      11701"]
BB11700 -> BB11704 [tailport=s, headport=n, headlabel="      11704"]
BB11700 -> BB11716 [tailport=s, headport=n, color=gray]
BB11701 [shape=record label="{30670: read-variable['$sceMinErr',v11,v10]|30671: constant[\"icontext\",v12]|30672: constant[\"Attempted to trust a value in invalid context. Context: \\\{0\\\}; Value: \\\{1\\\}\",v13]|30673: read-variable['type',v14,-]|30674: read-variable['trustedValue',v15,-]}" ] 
BB11701 -> BB11702 [tailport=s, headport=n, headlabel="      11702"]
BB11701 -> BB11716 [tailport=s, headport=n, color=gray]
BB11702 [shape=record label="{30675: call-$sceMinErr [v10,v11,v12,v13,v14,v15,v9]}" ] 
BB11702 -> BB11703 [tailport=s, headport=n, headlabel="      11703"]
BB11702 -> BB11716 [tailport=s, headport=n, color=gray]
BB11703 [shape=record label="{30676: throw[v9]*}" ] 
BB11703 -> BB11704 [tailport=s, headport=n]
BB11703 -> BB11716 [tailport=s, headport=n, color=gray]
BB11704 [shape=record label="{30677: read-variable['trustedValue',v10,-]|30678: constant[null,v11]|30679: ===[v10,v11,v9]|30680: if[v9](true-block:11707,false-block:11705)}" ] 
BB11704 -> BB11707 [tailport=s, headport=n, headlabel="      11707"]
BB11704 -> BB11705 [tailport=s, headport=n, headlabel="      11705"]
BB11704 -> BB11716 [tailport=s, headport=n, color=gray]
BB11705 [shape=record label="{30681: read-variable['trustedValue',v10,-]|30682: read-variable['undefined',v11,-]|30683: ===[v10,v11,v9]|30684: if[v9](true-block:11707,false-block:11706)}" ] 
BB11705 -> BB11707 [tailport=s, headport=n]
BB11705 -> BB11706 [tailport=s, headport=n, headlabel="      11706"]
BB11705 -> BB11716 [tailport=s, headport=n, color=gray]
BB11706 [shape=record label="{30685: read-variable['trustedValue',v10,-]|30686: constant[\"\",v11]|30687: ===[v10,v11,v9]}" ] 
BB11706 -> BB11707 [tailport=s, headport=n]
BB11706 -> BB11716 [tailport=s, headport=n, color=gray]
BB11707 [shape=record label="{30688: if[v9](true-block:11708,false-block:11709)}" ] 
BB11707 -> BB11708 [tailport=s, headport=n, headlabel="      11708"]
BB11707 -> BB11709 [tailport=s, headport=n, headlabel="      11709"]
BB11708 [shape=record label="{30689: read-variable['trustedValue',v1,-]}" ] 
BB11708 -> BB11715 [tailport=s, headport=n, headlabel="      11715"]
BB11708 -> BB11716 [tailport=s, headport=n, color=gray]
BB11709 [shape=record label="{30690: typeof['trustedValue',v11]|30691: constant[\"string\",v12]|30692: !==[v11,v12,v10]|30693: if[v10](true-block:11710,false-block:11713)}" ] 
BB11709 -> BB11710 [tailport=s, headport=n, headlabel="      11710"]
BB11709 -> BB11713 [tailport=s, headport=n, headlabel="      11713"]
BB11709 -> BB11716 [tailport=s, headport=n, color=gray]
BB11710 [shape=record label="{30694: read-variable['$sceMinErr',v15,v14]|30695: constant[\"itype\",v16]|30696: constant[\"Attempted to trust a non-string value in a content requiring a string: Context: \\\{0\\\}\",v17]|30697: read-variable['type',v18,-]}" ] 
BB11710 -> BB11711 [tailport=s, headport=n, headlabel="      11711"]
BB11710 -> BB11716 [tailport=s, headport=n, color=gray]
BB11711 [shape=record label="{30698: call-$sceMinErr [v14,v15,v16,v17,v18,v13]}" ] 
BB11711 -> BB11712 [tailport=s, headport=n, headlabel="      11712"]
BB11711 -> BB11716 [tailport=s, headport=n, color=gray]
BB11712 [shape=record label="{30699: throw[v13]*}" ] 
BB11712 -> BB11713 [tailport=s, headport=n]
BB11712 -> BB11716 [tailport=s, headport=n, color=gray]
BB11713 [shape=record label="{30700: read-variable['Constructor',v13,-]|30701: read-variable['trustedValue',v14,-]}" ] 
BB11713 -> BB11714 [tailport=s, headport=n, headlabel="      11714"]
BB11713 -> BB11716 [tailport=s, headport=n, color=gray]
BB11714 [shape=record label="{30702: construct [-,v13,v14,v1]}" ] 
BB11714 -> BB11715 [tailport=s, headport=n]
BB11714 -> BB11716 [tailport=s, headport=n, color=gray]
BB11715 [shape=record label="{30703: return[v1]}" ] 
BB11716 [shape=record label="{30704: exceptional-return}" ] 
//#$~ 16629
}
