digraph {
rankdir="TD"
BB_entry0[shape=none,label=""];
BB_entry0 -> BB0 [tailport=s, headport=n, headlabel="    0"]
BB0 [shape=record label="{0: constant[undefined,v1]|1: vardecl['m']}" ] 
BB0 -> BB1 [tailport=s, headport=n, headlabel="      1"]
BB1 [shape=record label="{2: function-expr[function app ( window undefined ),v3]|3: typeof['window',v6]|4: constant[\"undefined\",v7]|5: !=[v6,v7,v5]|6: if[v5](true-block:2,false-block:3)}" ] 
BB1 -> BB2 [tailport=s, headport=n, headlabel="      2"]
BB1 -> BB3 [tailport=s, headport=n, headlabel="      3"]
BB1 -> BB16 [tailport=s, headport=n, color=gray, headlabel="      16"]
BB2 [shape=record label="{7: read-variable['window',v4,-]}" ] 
BB2 -> BB4 [tailport=s, headport=n, headlabel="      4"]
BB2 -> BB16 [tailport=s, headport=n, color=gray]
BB3 [shape=record label="{8: new[v4]}" ] 
BB3 -> BB4 [tailport=s, headport=n]
BB4 [shape=record label="{9: call-null [-,v3,v4,v2]}" ] 
BB4 -> BB5 [tailport=s, headport=n, headlabel="      5"]
BB4 -> BB16 [tailport=s, headport=n, color=gray]
BB5 [shape=record label="{10: write-variable[v2,'m']*|11: typeof['module',v9]|12: constant[\"undefined\",v10]|13: !=[v9,v10,v8]|14: if[v8](true-block:6,false-block:8)}" ] 
BB5 -> BB8 [tailport=s, headport=n, headlabel="      8"]
BB5 -> BB6 [tailport=s, headport=n, headlabel="      6"]
BB5 -> BB16 [tailport=s, headport=n, color=gray]
BB6 [shape=record label="{15: read-variable['module',v11,-]|16: constant[null,v12]|17: !==[v11,v12,v8]|18: if[v8](true-block:7,false-block:8)}" ] 
BB6 -> BB8 [tailport=s, headport=n]
BB6 -> BB7 [tailport=s, headport=n, headlabel="      7"]
BB6 -> BB16 [tailport=s, headport=n, color=gray]
BB7 [shape=record label="{19: read-variable['module',v13,-]|20: read-property[v13,'exports',v8]|21: \<variable-non-null-undef\>['module']}" ] 
BB7 -> BB8 [tailport=s, headport=n]
BB7 -> BB16 [tailport=s, headport=n, color=gray]
BB8 [shape=record label="{22: if[v8](true-block:9,false-block:10)}" ] 
BB8 -> BB9 [tailport=s, headport=n, headlabel="      9"]
BB8 -> BB10 [tailport=s, headport=n, headlabel="      10"]
BB9 [shape=record label="{23: read-variable['module',v12,-]|24: read-variable['m',v11,-]|25: write-property[v12,'exports',v11]|26: \<variable-non-null-undef\>['module']*}" ] 
BB9 -> BB15 [tailport=s, headport=n, headlabel="      15"]
BB9 -> BB16 [tailport=s, headport=n, color=gray]
BB10 [shape=record label="{27: typeof['define',v12]|28: constant[\"function\",v13]|29: ===[v12,v13,v11]|30: if[v11](true-block:11,false-block:12)}" ] 
BB10 -> BB12 [tailport=s, headport=n, headlabel="      12"]
BB10 -> BB11 [tailport=s, headport=n, headlabel="      11"]
BB10 -> BB16 [tailport=s, headport=n, color=gray]
BB11 [shape=record label="{31: read-variable['define',v14,-]|32: read-property[v14,'amd',v11]|33: \<variable-non-null-undef\>['define']}" ] 
BB11 -> BB12 [tailport=s, headport=n]
BB11 -> BB16 [tailport=s, headport=n, color=gray]
BB12 [shape=record label="{34: if[v11](true-block:13,false-block:15)}" ] 
BB12 -> BB13 [tailport=s, headport=n, headlabel="      13"]
BB12 -> BB15 [tailport=s, headport=n]
BB13 [shape=record label="{35: read-variable['define',v15,v14]|36: function-expr[function ( ),v16]}" ] 
BB13 -> BB14 [tailport=s, headport=n, headlabel="      14"]
BB13 -> BB16 [tailport=s, headport=n, color=gray]
BB14 [shape=record label="{37: call-define [v14,v15,v16,-]*}" ] 
BB14 -> BB15 [tailport=s, headport=n]
BB14 -> BB16 [tailport=s, headport=n, color=gray]
BB15 [shape=record label="{38: return[v1]}" ] 
BB16 [shape=record label="{39: exceptional-return}" ] 
//#$~ 1
}
