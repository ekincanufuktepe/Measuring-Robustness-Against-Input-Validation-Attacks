digraph {
rankdir="TD"
BB_entry547[shape=none,label=""];
BB_entry547 -> BB8826 [tailport=s, headport=n, headlabel="    8826"]
BB8826 [shape=record label="{26216: constant[undefined,v1]|26217: vardecl['stopQueue']}" ] 
BB8826 -> BB8827 [tailport=s, headport=n, headlabel="      8827"]
BB8827 [shape=record label="{26218: function-expr[function ( hooks ),v2]|26219: write-variable[v2,'stopQueue']*|26220: typeof['type',v4]|26221: constant[\"string\",v5]|26222: !==[v4,v5,v3]|26223: if[v3](true-block:8828,false-block:8829)}" ] 
BB8827 -> BB8828 [tailport=s, headport=n, headlabel="      8828"]
BB8827 -> BB8829 [tailport=s, headport=n, headlabel="      8829"]
BB8827 -> BB8840 [tailport=s, headport=n, color=gray, headlabel="      8840"]
BB8828 [shape=record label="{26224: read-variable['clearQueue',v6,-]|26225: write-variable[v6,'gotoEnd']*|26226: read-variable['type',v7,-]|26227: write-variable[v7,'clearQueue']*|26228: read-variable['undefined',v8,-]|26229: write-variable[v8,'type']*}" ] 
BB8828 -> BB8829 [tailport=s, headport=n]
BB8828 -> BB8840 [tailport=s, headport=n, color=gray]
BB8829 [shape=record label="{26230: read-variable['clearQueue',v6,-]|26231: if[v6](true-block:8830,false-block:8831)}" ] 
BB8829 -> BB8831 [tailport=s, headport=n, headlabel="      8831"]
BB8829 -> BB8830 [tailport=s, headport=n, headlabel="      8830"]
BB8829 -> BB8840 [tailport=s, headport=n, color=gray]
BB8830 [shape=record label="{26232: read-variable['type',v7,-]|26233: constant[false,v8]|26234: !==[v7,v8,v6]}" ] 
BB8830 -> BB8831 [tailport=s, headport=n]
BB8830 -> BB8840 [tailport=s, headport=n, color=gray]
BB8831 [shape=record label="{26235: if[v6](true-block:8832,false-block:8837)}" ] 
BB8831 -> BB8832 [tailport=s, headport=n, headlabel="      8832"]
BB8831 -> BB8837 [tailport=s, headport=n, headlabel="      8837"]
BB8832 [shape=record label="{26236: read-variable['this',v8,-]|26237: read-property[v8,'queue',-]|26238: read-variable['type',v9,-]|26239: if[v9](true-block:8834,false-block:8833)}" ] 
BB8832 -> BB8834 [tailport=s, headport=n, headlabel="      8834"]
BB8832 -> BB8833 [tailport=s, headport=n, headlabel="      8833"]
BB8832 -> BB8840 [tailport=s, headport=n, color=gray]
BB8833 [shape=record label="{26240: constant[\"fx\",v9]}" ] 
BB8833 -> BB8834 [tailport=s, headport=n]
BB8834 [shape=record label="{26241: read-variable['Array',v11,-]}" ] 
BB8834 -> BB8835 [tailport=s, headport=n, headlabel="      8835"]
BB8834 -> BB8840 [tailport=s, headport=n, color=gray]
BB8835 [shape=record label="{26242: construct[-,v11,v10]}" ] 
BB8835 -> BB8836 [tailport=s, headport=n, headlabel="      8836"]
BB8835 -> BB8840 [tailport=s, headport=n, color=gray]
BB8836 [shape=record label="{26243: call[v8,'queue',v9,v10,-]*}" ] 
BB8836 -> BB8837 [tailport=s, headport=n]
BB8836 -> BB8840 [tailport=s, headport=n, color=gray]
BB8837 [shape=record label="{26244: read-variable['this',v8,-]|26245: read-property[v8,'each',-]|26246: function-expr[function ( ),v9]}" ] 
BB8837 -> BB8838 [tailport=s, headport=n, headlabel="      8838"]
BB8837 -> BB8840 [tailport=s, headport=n, color=gray]
BB8838 [shape=record label="{26247: call[v8,'each',v9,v1]}" ] 
BB8838 -> BB8839 [tailport=s, headport=n, headlabel="      8839"]
BB8838 -> BB8840 [tailport=s, headport=n, color=gray]
BB8839 [shape=record label="{26248: return[v1]}" ] 
BB8840 [shape=record label="{26249: exceptional-return}" ] 
}
