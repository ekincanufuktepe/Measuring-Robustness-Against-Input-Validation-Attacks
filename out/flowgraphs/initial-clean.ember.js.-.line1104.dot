digraph {
rankdir="TD"
BB_entry71[shape=none,label=""];
BB_entry71 -> BB1519 [tailport=s, headport=n, headlabel="    1519"]
BB1519 [shape=record label="{4820: constant[undefined,v1]|4821: vardecl['Ember']|4822: vardecl['emberKeys']|4823: vardecl['dictionary']|4824: function-decl[function Container ( parent ),-]|4825: function-decl[function resolve ( container normalizedName ),-]|4826: function-decl[function has ( container fullName ),-]|4827: function-decl[function lookup ( container fullName options ),-]|4828: function-decl[function illegalChildOperation ( operation ),-]|4829: function-decl[function isSingleton ( container fullName ),-]|4830: function-decl[function buildInjections ( container injections ),-]|4831: function-decl[function validateInjections ( container injections ),-]|4832: function-decl[function option ( container fullName optionName ),-]|4833: function-decl[function factoryFor ( container fullName ),-]|4834: function-decl[function injectionsFor ( container fullName ),-]|4835: function-decl[function factoryInjectionsFor ( container fullName ),-]|4836: function-decl[function normalizeInjectionsHash ( hash ),-]|4837: function-decl[function instantiate ( container fullName ),-]|4838: function-decl[function eachDestroyable ( container callback ),-]|4839: function-decl[function resetCache ( container ),-]|4840: function-decl[function addTypeInjection ( rules type property fullName ),-]|4841: vardecl['VALID_FULL_NAME_REGEXP']|4842: function-decl[function validateFullName ( fullName ),-]|4843: function-decl[function initRules ( rules factoryName ),-]|4844: function-decl[function addInjection ( injections property injectionName ),-]}" ] 
BB1519 -> BB1520 [tailport=s, headport=n, headlabel="      1520"]
BB1520 [shape=record label="{4845: read-variable['__dependency1__',v3,-]|4846: read-property[v3,'default',v2]|4847: \<variable-non-null-undef\>['__dependency1__']|4848: write-variable[v2,'Ember']*|4849: read-variable['__dependency2__',v5,-]|4850: read-property[v5,'default',v4]|4851: \<variable-non-null-undef\>['__dependency2__']|4852: write-variable[v4,'emberKeys']*|4853: read-variable['__dependency3__',v7,-]|4854: read-property[v7,'default',v6]|4855: \<variable-non-null-undef\>['__dependency3__']|4856: write-variable[v6,'dictionary']*|4857: read-variable['Container',v9,-]|4858: new[v8]|4859: constant[null,v10]|4860: write-property[v8,'parent',v10]|4861: constant[null,v11]|4862: write-property[v8,'children',v11]|4863: constant[null,v12]|4864: write-property[v8,'resolver',v12]|4865: constant[null,v13]|4866: write-property[v8,'registry',v13]|4867: constant[null,v14]|4868: write-property[v8,'cache',v14]|4869: constant[null,v15]|4870: write-property[v8,'typeInjections',v15]|4871: constant[null,v16]|4872: write-property[v8,'injections',v16]|4873: constant[null,v17]|4874: write-property[v8,'_options',v17]|4875: constant[null,v18]|4876: write-property[v8,'_typeOptions',v18]|4877: function-expr[function ( ),v19]|4878: write-property[v8,'child',v19]|4879: function-expr[function ( fullName factory options ),v20]|4880: write-property[v8,'register',v20]|4881: function-expr[function ( fullName ),v21]|4882: write-property[v8,'unregister',v21]|4883: function-expr[function ( fullName ),v22]|4884: write-property[v8,'resolve',v22]|4885: function-expr[function ( fullName ),v23]|4886: write-property[v8,'describe',v23]|4887: function-expr[function ( fullName ),v24]|4888: write-property[v8,'normalizeFullName',v24]|4889: function-expr[function ( fullName ),v25]|4890: write-property[v8,'normalize',v25]|4891: function-expr[function ( factory fullName ),v26]|4892: write-property[v8,'makeToString',v26]|4893: function-expr[function ( fullName options ),v27]|4894: write-property[v8,'lookup',v27]|4895: function-expr[function ( fullName ),v28]|4896: write-property[v8,'lookupFactory',v28]|4897: function-expr[function ( fullName ),v29]|4898: write-property[v8,'has',v29]|4899: function-expr[function ( type options ),v30]|4900: write-property[v8,'optionsForType',v30]|4901: function-expr[function ( fullName options ),v31]|4902: write-property[v8,'options',v31]|4903: function-expr[function ( type property fullName ),v32]|4904: write-property[v8,'typeInjection',v32]|4905: function-expr[function ( fullName property injectionName ),v33]|4906: write-property[v8,'injection',v33]|4907: function-expr[function ( type property fullName ),v34]|4908: write-property[v8,'factoryTypeInjection',v34]|4909: function-expr[function ( fullName property injectionName ),v35]|4910: write-property[v8,'factoryInjection',v35]|4911: function-expr[function ( ),v36]|4912: write-property[v8,'destroy',v36]|4913: function-expr[function ( ),v37]|4914: write-property[v8,'reset',v37]|4915: write-property[v9,'prototype',v8]|4916: \<variable-non-null-undef\>['Container']*|4917: read-variable['RegExp',v39,-]|4918: constant[\"^[^:]+.+:[^:]+$\",v40]}" ] 
BB1520 -> BB1521 [tailport=s, headport=n, headlabel="      1521"]
BB1520 -> BB1524 [tailport=s, headport=n, color=gray, headlabel="      1524"]
BB1521 [shape=record label="{4919: construct [-,v39,v40,v38]}" ] 
BB1521 -> BB1522 [tailport=s, headport=n, headlabel="      1522"]
BB1521 -> BB1524 [tailport=s, headport=n, color=gray]
BB1522 [shape=record label="{4920: write-variable[v38,'VALID_FULL_NAME_REGEXP']*|4921: read-variable['__exports__',v42,-]|4922: read-variable['Container',v41,-]|4923: write-property[v42,'default',v41]|4924: \<variable-non-null-undef\>['__exports__']*}" ] 
BB1522 -> BB1523 [tailport=s, headport=n, headlabel="      1523"]
BB1522 -> BB1524 [tailport=s, headport=n, color=gray]
BB1523 [shape=record label="{4925: return[v1]}" ] 
BB1524 [shape=record label="{4926: exceptional-return}" ] 
//#$~ 2007
}
