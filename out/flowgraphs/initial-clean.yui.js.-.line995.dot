digraph {
rankdir="TD"
BB_entry27[shape=none,label=""];
BB_entry27 -> BB663 [tailport=s, headport=n, headlabel="    663"]
BB663 [shape=record label="{2488: constant[undefined,v1]|2489: vardecl['args']|2490: vardecl['callback']}" ] 
BB663 -> BB664 [tailport=s, headport=n, headlabel="      664"]
BB664 [shape=record label="{2491: read-variable['SLICE',v4,-]|2492: read-property[v4,'call',-]|2493: \<variable-non-null-undef\>['SLICE']|2494: read-variable['arguments',v5,-]}" ] 
BB664 -> BB665 [tailport=s, headport=n, headlabel="      665"]
BB664 -> BB674 [tailport=s, headport=n, color=gray, headlabel="      674"]
BB665 [shape=record label="{2495: call-SLICE.call [v4,'call',v5,v2]}" ] 
BB665 -> BB666 [tailport=s, headport=n, headlabel="      666"]
BB665 -> BB674 [tailport=s, headport=n, color=gray]
BB666 [shape=record label="{2496: write-variable[v2,'args']*|2497: read-variable['args',v10,-]|2498: read-variable['args',v14,-]|2499: read-property[v14,'length',v12]|2500: \<variable-non-null-undef\>['args']|2501: constant[1.0,v13]|2502: -[v12,v13,v11]|2503: read-property[v10,v11,v9]|2504: \<variable-non-null-undef\>['args']|2505: typeof[v9,v7]|2506: constant[\"function\",v8]|2507: ===[v7,v8,v6]|2508: if[v6](true-block:667,false-block:671)}" ] 
BB666 -> BB667 [tailport=s, headport=n, headlabel="      667"]
BB666 -> BB671 [tailport=s, headport=n, headlabel="      671"]
BB666 -> BB674 [tailport=s, headport=n, color=gray]
BB667 [shape=record label="{2509: read-variable['args',v17,-]|2510: read-property[v17,'pop',-]|2511: \<variable-non-null-undef\>['args']}" ] 
BB667 -> BB668 [tailport=s, headport=n, headlabel="      668"]
BB667 -> BB674 [tailport=s, headport=n, color=gray]
BB668 [shape=record label="{2512: call-args.pop [v17,'pop',v15]}" ] 
BB668 -> BB669 [tailport=s, headport=n, headlabel="      669"]
BB668 -> BB674 [tailport=s, headport=n, color=gray]
BB669 [shape=record label="{2513: write-variable[v15,'callback']*|2514: read-variable['args',v19,-]|2515: read-property[v19,'push',-]|2516: \<variable-non-null-undef\>['args']|2517: function-expr[function ( Y ),v20]}" ] 
BB669 -> BB670 [tailport=s, headport=n, headlabel="      670"]
BB669 -> BB674 [tailport=s, headport=n, color=gray]
BB670 [shape=record label="{2518: call-args.push [v19,'push',v20,-]*}" ] 
BB670 -> BB671 [tailport=s, headport=n]
BB670 -> BB674 [tailport=s, headport=n, color=gray]
BB671 [shape=record label="{2519: read-variable['this',v17,-]|2520: read-property[v17,'use',v16]|2521: read-property[v16,'apply',-]|2522: \<property-non-null-undef\>[v17,'use']|2523: read-variable['this',v18,-]|2524: read-variable['args',v19,-]}" ] 
BB671 -> BB672 [tailport=s, headport=n, headlabel="      672"]
BB671 -> BB674 [tailport=s, headport=n, color=gray]
BB672 [shape=record label="{2525: call-this.use.apply [v16,'apply',v18,v19,-]*}" ] 
BB672 -> BB673 [tailport=s, headport=n, headlabel="      673"]
BB672 -> BB674 [tailport=s, headport=n, color=gray]
BB673 [shape=record label="{2526: return[v1]}" ] 
BB674 [shape=record label="{2527: exceptional-return}" ] 
//#$~ 1033
}
