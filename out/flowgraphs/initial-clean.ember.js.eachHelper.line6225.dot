digraph {
rankdir="TD"
BB_entry275[shape=none,label=""];
BB_entry275 -> BB3489 [tailport=s, headport=n, headlabel="    3489"]
BB3489 [shape=record label="{11494: constant[undefined,v1]|11495: vardecl['helperName']|11496: vardecl['path']}" ] 
BB3489 -> BB3490 [tailport=s, headport=n, headlabel="      3490"]
BB3490 [shape=record label="{11497: constant[\"each\",v2]|11498: write-variable[v2,'helperName']*|11499: read-variable['params',v4,-]|11500: constant[0.0,v5]|11501: read-property[v4,v5,v3]|11502: \<variable-non-null-undef\>['params']|11503: if[v3](true-block:3493,false-block:3491)}" ] 
BB3490 -> BB3493 [tailport=s, headport=n, headlabel="      3493"]
BB3490 -> BB3491 [tailport=s, headport=n, headlabel="      3491"]
BB3490 -> BB3510 [tailport=s, headport=n, color=gray, headlabel="      3510"]
BB3491 [shape=record label="{11504: read-variable['this',v5,-]|11505: read-property[v5,'getStream',-]|11506: constant[\"\",v6]}" ] 
BB3491 -> BB3492 [tailport=s, headport=n, headlabel="      3492"]
BB3491 -> BB3510 [tailport=s, headport=n, color=gray]
BB3492 [shape=record label="{11507: call-this.getStream [v5,'getStream',v6,v3]}" ] 
BB3492 -> BB3493 [tailport=s, headport=n]
BB3492 -> BB3510 [tailport=s, headport=n, color=gray]
BB3493 [shape=record label="{11508: write-variable[v3,'path']*|11509: read-variable['Ember',v5,-]|11510: read-property[v5,'assert',-]|11511: \<variable-non-null-undef\>['Ember']|11512: constant[\"If you pass more than one argument to the each helper, \",v7]|11513: constant[\"it must be in the form #each foo in bar\",v8]|11514: +[v7,v8,v6]|11515: read-variable['params',v12,-]|11516: read-property[v12,'length',v10]|11517: \<variable-non-null-undef\>['params']|11518: constant[1.0,v11]|11519: \<=[v10,v11,v9]}" ] 
BB3493 -> BB3494 [tailport=s, headport=n, headlabel="      3494"]
BB3493 -> BB3510 [tailport=s, headport=n, color=gray]
BB3494 [shape=record label="{11520: call-Ember.assert [v5,'assert',v6,v9,-]*}" ] 
BB3494 -> BB3495 [tailport=s, headport=n, headlabel="      3495"]
BB3494 -> BB3510 [tailport=s, headport=n, color=gray]
BB3495 [shape=record label="{11521: read-variable['options',v14,-]|11522: read-property[v14,'template',v13]|11523: \<variable-non-null-undef\>['options']|11524: if[v13](true-block:3496,false-block:3497)}" ] 
BB3495 -> BB3497 [tailport=s, headport=n, headlabel="      3497"]
BB3495 -> BB3496 [tailport=s, headport=n, headlabel="      3496"]
BB3495 -> BB3510 [tailport=s, headport=n, color=gray]
BB3496 [shape=record label="{11525: read-variable['options',v16,-]|11526: read-property[v16,'template',v15]|11527: \<variable-non-null-undef\>['options']|11528: read-property[v15,'blockParams',v13]|11529: \<property-non-null-undef\>[v16,'template']}" ] 
BB3496 -> BB3497 [tailport=s, headport=n]
BB3496 -> BB3510 [tailport=s, headport=n, color=gray]
BB3497 [shape=record label="{11530: if[v13](true-block:3498,false-block:3499)}" ] 
BB3497 -> BB3498 [tailport=s, headport=n, headlabel="      3498"]
BB3497 -> BB3499 [tailport=s, headport=n, headlabel="      3499"]
BB3498 [shape=record label="{11531: read-variable['hash',v16,-]|11532: constant[true,v15]|11533: write-property[v16,'keyword',v15]|11534: \<variable-non-null-undef\>['hash']*}" ] 
BB3498 -> BB3499 [tailport=s, headport=n]
BB3498 -> BB3510 [tailport=s, headport=n, color=gray]
BB3499 [shape=record label="{11535: read-variable['Ember',v16,-]|11536: read-property[v16,'deprecate',-]|11537: \<variable-non-null-undef\>['Ember']|11538: constant[\"Using the context switching form of \\\{\\\{each\\\}\\\} is deprecated. \",v18]|11539: constant[\"Please use the keyword form (`\\\{\\\{#each foo in bar\\\}\\\}`) instead.\",v19]|11540: +[v18,v19,v17]|11541: read-variable['hash',v23,-]|11542: read-property[v23,'keyword',v21]|11543: \<variable-non-null-undef\>['hash']|11544: constant[true,v22]|11545: ===[v21,v22,v20]|11546: if[v20](true-block:3501,false-block:3500)}" ] 
BB3499 -> BB3501 [tailport=s, headport=n, headlabel="      3501"]
BB3499 -> BB3500 [tailport=s, headport=n, headlabel="      3500"]
BB3499 -> BB3510 [tailport=s, headport=n, color=gray]
BB3500 [shape=record label="{11547: read-variable['hash',v24,-]|11548: read-property[v24,'keyword',v23]|11549: \<variable-non-null-undef\>['hash']|11550: typeof[v23,v21]|11551: constant[\"string\",v22]|11552: ===[v21,v22,v20]}" ] 
BB3500 -> BB3501 [tailport=s, headport=n]
BB3500 -> BB3510 [tailport=s, headport=n, color=gray]
BB3501 [shape=record label="{11553: new[v21]|11554: constant[\"http://emberjs.com/guides/deprecations/#toc_more-consistent-handlebars-scope\",v22]|11555: write-property[v21,'url',v22]}" ] 
BB3501 -> BB3502 [tailport=s, headport=n, headlabel="      3502"]
BB3501 -> BB3510 [tailport=s, headport=n, color=gray]
BB3502 [shape=record label="{11556: call-Ember.deprecate [v16,'deprecate',v17,v20,v21,-]*}" ] 
BB3502 -> BB3503 [tailport=s, headport=n, headlabel="      3503"]
BB3502 -> BB3510 [tailport=s, headport=n, color=gray]
BB3503 [shape=record label="{11557: read-variable['hash',v24,-]|11558: read-variable['path',v23,-]|11559: write-property[v24,'dataSource',v23]|11560: \<variable-non-null-undef\>['hash']*|11561: read-variable['options',v26,-]|11562: read-variable['options',v27,-]|11563: read-property[v27,'helperName',v25]|11564: \<variable-non-null-undef\>['options']|11565: if[v25](true-block:3505,false-block:3504)}" ] 
BB3503 -> BB3505 [tailport=s, headport=n, headlabel="      3505"]
BB3503 -> BB3504 [tailport=s, headport=n, headlabel="      3504"]
BB3503 -> BB3510 [tailport=s, headport=n, color=gray]
BB3504 [shape=record label="{11566: read-variable['helperName',v25,-]}" ] 
BB3504 -> BB3505 [tailport=s, headport=n]
BB3504 -> BB3510 [tailport=s, headport=n, color=gray]
BB3505 [shape=record label="{11567: write-property[v26,'helperName',v25]|11568: \<variable-non-null-undef\>['options']*|11569: read-variable['env',v31,-]|11570: read-property[v31,'helpers',v30]|11571: \<variable-non-null-undef\>['env']|11572: read-property[v30,'collection',v29]|11573: \<property-non-null-undef\>[v31,'helpers']|11574: read-property[v29,'helperFunction',v28]|11575: \<property-non-null-undef\>[v30,'collection']|11576: read-property[v28,'call',-]|11577: \<property-non-null-undef\>[v29,'helperFunction']|11578: read-variable['this',v32,-]|11579: read-variable['Array',v34,-]|11580: read-variable['EachView',v35,-]}" ] 
BB3505 -> BB3506 [tailport=s, headport=n, headlabel="      3506"]
BB3505 -> BB3510 [tailport=s, headport=n, color=gray]
BB3506 [shape=record label="{11581: construct [-,v34,v35,v33]}" ] 
BB3506 -> BB3507 [tailport=s, headport=n, headlabel="      3507"]
BB3506 -> BB3510 [tailport=s, headport=n, color=gray]
BB3507 [shape=record label="{11582: read-variable['hash',v36,-]|11583: read-variable['options',v37,-]|11584: read-variable['env',v38,-]}" ] 
BB3507 -> BB3508 [tailport=s, headport=n, headlabel="      3508"]
BB3507 -> BB3510 [tailport=s, headport=n, color=gray]
BB3508 [shape=record label="{11585: call-env.helpers.collection.helperFunction.call [v28,'call',v32,v33,v36,v37,v38,v1]}" ] 
BB3508 -> BB3509 [tailport=s, headport=n, headlabel="      3509"]
BB3508 -> BB3510 [tailport=s, headport=n, color=gray]
BB3509 [shape=record label="{11586: return[v1]}" ] 
BB3510 [shape=record label="{11587: exceptional-return}" ] 
//#$~ 6249
}
