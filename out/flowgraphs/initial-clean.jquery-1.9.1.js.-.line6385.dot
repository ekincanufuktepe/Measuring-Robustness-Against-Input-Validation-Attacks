digraph {
rankdir="TD"
BB_entry414[shape=none,label=""];
BB_entry414 -> BB6376 [tailport=s, headport=n, headlabel="    6376"]
BB6376 [shape=record label="{18530: constant[undefined,v1]|18531: vardecl['destElements']|18532: vardecl['node']|18533: vardecl['clone']|18534: vardecl['i']|18535: vardecl['srcElements']|18536: vardecl['inPage']}" ] 
BB6376 -> BB6377 [tailport=s, headport=n, headlabel="      6377"]
BB6377 [shape=record label="{18537: read-variable['jQuery',v4,-]|18538: read-property[v4,'contains',-]|18539: \<variable-non-null-undef\>['jQuery']|18540: read-variable['elem',v6,-]|18541: read-property[v6,'ownerDocument',v5]|18542: \<variable-non-null-undef\>['elem']|18543: read-variable['elem',v7,-]}" ] 
BB6377 -> BB6378 [tailport=s, headport=n, headlabel="      6378"]
BB6377 -> BB6436 [tailport=s, headport=n, color=gray, headlabel="      6436"]
BB6378 [shape=record label="{18544: call-jQuery.contains [v4,'contains',v5,v7,v2]}" ] 
BB6378 -> BB6379 [tailport=s, headport=n, headlabel="      6379"]
BB6378 -> BB6436 [tailport=s, headport=n, color=gray]
BB6379 [shape=record label="{18545: write-variable[v2,'inPage']*|18546: read-variable['jQuery',v10,-]|18547: read-property[v10,'support',v9]|18548: \<variable-non-null-undef\>['jQuery']|18549: read-property[v9,'html5Clone',v8]|18550: \<property-non-null-undef\>[v10,'support']|18551: if[v8](true-block:6386,false-block:6380)}" ] 
BB6379 -> BB6386 [tailport=s, headport=n, headlabel="      6386"]
BB6379 -> BB6380 [tailport=s, headport=n, headlabel="      6380"]
BB6379 -> BB6436 [tailport=s, headport=n, color=gray]
BB6380 [shape=record label="{18552: read-variable['jQuery',v10,-]|18553: read-property[v10,'isXMLDoc',-]|18554: \<variable-non-null-undef\>['jQuery']|18555: read-variable['elem',v11,-]}" ] 
BB6380 -> BB6381 [tailport=s, headport=n, headlabel="      6381"]
BB6380 -> BB6436 [tailport=s, headport=n, color=gray]
BB6381 [shape=record label="{18556: call-jQuery.isXMLDoc [v10,'isXMLDoc',v11,v8]}" ] 
BB6381 -> BB6382 [tailport=s, headport=n, headlabel="      6382"]
BB6381 -> BB6436 [tailport=s, headport=n, color=gray]
BB6382 [shape=record label="{18557: if[v8](true-block:6386,false-block:6383)}" ] 
BB6382 -> BB6386 [tailport=s, headport=n]
BB6382 -> BB6383 [tailport=s, headport=n, headlabel="      6383"]
BB6383 [shape=record label="{18558: read-variable['rnoshimcache',v11,-]|18559: read-property[v11,'test',-]|18560: \<variable-non-null-undef\>['rnoshimcache']|18561: constant[\"\\\<\",v15]|18562: read-variable['elem',v17,-]|18563: read-property[v17,'nodeName',v16]|18564: \<variable-non-null-undef\>['elem']|18565: +[v15,v16,v13]|18566: constant[\"\\\>\",v14]|18567: +[v13,v14,v12]}" ] 
BB6383 -> BB6384 [tailport=s, headport=n, headlabel="      6384"]
BB6383 -> BB6436 [tailport=s, headport=n, color=gray]
BB6384 [shape=record label="{18568: call-rnoshimcache.test [v11,'test',v12,v9]}" ] 
BB6384 -> BB6385 [tailport=s, headport=n, headlabel="      6385"]
BB6384 -> BB6436 [tailport=s, headport=n, color=gray]
BB6385 [shape=record label="{18569: ![v9,v8]}" ] 
BB6385 -> BB6386 [tailport=s, headport=n]
BB6385 -> BB6436 [tailport=s, headport=n, color=gray]
BB6386 [shape=record label="{18570: if[v8](true-block:6387,false-block:6388)}" ] 
BB6386 -> BB6387 [tailport=s, headport=n, headlabel="      6387"]
BB6386 -> BB6388 [tailport=s, headport=n, headlabel="      6388"]
BB6387 [shape=record label="{18571: read-variable['elem',v11,-]|18572: read-property[v11,'cloneNode',-]|18573: \<variable-non-null-undef\>['elem']|18574: constant[true,v12]}" ] 
BB6387 -> BB6389 [tailport=s, headport=n, headlabel="      6389"]
BB6387 -> BB6436 [tailport=s, headport=n, color=gray]
BB6388 [shape=record label="{18575: read-variable['fragmentDiv',v10,-]|18576: read-variable['elem',v11,-]|18577: read-property[v11,'outerHTML',v9]|18578: \<variable-non-null-undef\>['elem']|18579: write-property[v10,'innerHTML',v9]|18580: \<variable-non-null-undef\>['fragmentDiv']*|18581: read-variable['fragmentDiv',v13,-]|18582: read-property[v13,'removeChild',-]|18583: \<variable-non-null-undef\>['fragmentDiv']|18584: read-variable['fragmentDiv',v15,-]|18585: read-property[v15,'firstChild',v14]|18586: \<variable-non-null-undef\>['fragmentDiv']|18587: write-variable[v14,'clone']}" ] 
BB6388 -> BB6391 [tailport=s, headport=n, headlabel="      6391"]
BB6388 -> BB6436 [tailport=s, headport=n, color=gray]
BB6389 [shape=record label="{18588: call-elem.cloneNode [v11,'cloneNode',v12,v9]}" ] 
BB6389 -> BB6390 [tailport=s, headport=n, headlabel="      6390"]
BB6389 -> BB6436 [tailport=s, headport=n, color=gray]
BB6390 [shape=record label="{18589: write-variable[v9,'clone']*}" ] 
BB6390 -> BB6392 [tailport=s, headport=n, headlabel="      6392"]
BB6391 [shape=record label="{18590: call-fragmentDiv.removeChild [v13,'removeChild',v14,-]*}" ] 
BB6391 -> BB6392 [tailport=s, headport=n]
BB6391 -> BB6436 [tailport=s, headport=n, color=gray]
BB6392 [shape=record label="{18591: read-variable['jQuery',v12,-]|18592: read-property[v12,'support',v11]|18593: \<variable-non-null-undef\>['jQuery']|18594: read-property[v11,'noCloneEvent',v10]|18595: \<property-non-null-undef\>[v12,'support']|18596: ![v10,v9]|18597: if[v9](true-block:6394,false-block:6393)}" ] 
BB6392 -> BB6394 [tailport=s, headport=n, headlabel="      6394"]
BB6392 -> BB6393 [tailport=s, headport=n, headlabel="      6393"]
BB6392 -> BB6436 [tailport=s, headport=n, color=gray]
BB6393 [shape=record label="{18598: read-variable['jQuery',v12,-]|18599: read-property[v12,'support',v11]|18600: \<variable-non-null-undef\>['jQuery']|18601: read-property[v11,'noCloneChecked',v10]|18602: \<property-non-null-undef\>[v12,'support']|18603: ![v10,v9]}" ] 
BB6393 -> BB6394 [tailport=s, headport=n]
BB6393 -> BB6436 [tailport=s, headport=n, color=gray]
BB6394 [shape=record label="{18604: if[v9](true-block:6395,false-block:6401)}" ] 
BB6394 -> BB6401 [tailport=s, headport=n, headlabel="      6401"]
BB6394 -> BB6395 [tailport=s, headport=n, headlabel="      6395"]
BB6395 [shape=record label="{18605: read-variable['elem',v12,-]|18606: read-property[v12,'nodeType',v10]|18607: \<variable-non-null-undef\>['elem']|18608: constant[1.0,v11]|18609: ===[v10,v11,v9]|18610: if[v9](true-block:6397,false-block:6396)}" ] 
BB6395 -> BB6397 [tailport=s, headport=n, headlabel="      6397"]
BB6395 -> BB6396 [tailport=s, headport=n, headlabel="      6396"]
BB6395 -> BB6436 [tailport=s, headport=n, color=gray]
BB6396 [shape=record label="{18611: read-variable['elem',v12,-]|18612: read-property[v12,'nodeType',v10]|18613: \<variable-non-null-undef\>['elem']|18614: constant[11.0,v11]|18615: ===[v10,v11,v9]}" ] 
BB6396 -> BB6397 [tailport=s, headport=n]
BB6396 -> BB6436 [tailport=s, headport=n, color=gray]
BB6397 [shape=record label="{18616: if[v9](true-block:6398,false-block:6401)}" ] 
BB6397 -> BB6401 [tailport=s, headport=n]
BB6397 -> BB6398 [tailport=s, headport=n, headlabel="      6398"]
BB6398 [shape=record label="{18617: read-variable['jQuery',v12,-]|18618: read-property[v12,'isXMLDoc',-]|18619: \<variable-non-null-undef\>['jQuery']|18620: read-variable['elem',v13,-]}" ] 
BB6398 -> BB6399 [tailport=s, headport=n, headlabel="      6399"]
BB6398 -> BB6436 [tailport=s, headport=n, color=gray]
BB6399 [shape=record label="{18621: call-jQuery.isXMLDoc [v12,'isXMLDoc',v13,v10]}" ] 
BB6399 -> BB6400 [tailport=s, headport=n, headlabel="      6400"]
BB6399 -> BB6436 [tailport=s, headport=n, color=gray]
BB6400 [shape=record label="{18622: ![v10,v9]}" ] 
BB6400 -> BB6401 [tailport=s, headport=n]
BB6400 -> BB6436 [tailport=s, headport=n, color=gray]
BB6401 [shape=record label="{18623: if[v9](true-block:6402,false-block:6412)}" ] 
BB6401 -> BB6402 [tailport=s, headport=n, headlabel="      6402"]
BB6401 -> BB6412 [tailport=s, headport=n, headlabel="      6412"]
BB6402 [shape=record label="{18624: read-variable['getAll',v12,v11]|18625: read-variable['clone',v13,-]}" ] 
BB6402 -> BB6403 [tailport=s, headport=n, headlabel="      6403"]
BB6402 -> BB6436 [tailport=s, headport=n, color=gray]
BB6403 [shape=record label="{18626: call-getAll [v11,v12,v13,v10]}" ] 
BB6403 -> BB6404 [tailport=s, headport=n, headlabel="      6404"]
BB6403 -> BB6436 [tailport=s, headport=n, color=gray]
BB6404 [shape=record label="{18627: write-variable[v10,'destElements']*|18628: read-variable['getAll',v16,v15]|18629: read-variable['elem',v17,-]}" ] 
BB6404 -> BB6405 [tailport=s, headport=n, headlabel="      6405"]
BB6404 -> BB6436 [tailport=s, headport=n, color=gray]
BB6405 [shape=record label="{18630: call-getAll [v15,v16,v17,v14]}" ] 
BB6405 -> BB6406 [tailport=s, headport=n, headlabel="      6406"]
BB6405 -> BB6436 [tailport=s, headport=n, color=gray]
BB6406 [shape=record label="{18631: write-variable[v14,'srcElements']*|18632: constant[0.0,v19]|18633: write-variable[v19,'i']}" ] 
BB6406 -> BB6407 [tailport=s, headport=n, headlabel="      6407"]
BB6407 [shape=record label="{18634: read-variable['srcElements',v22,-]|18635: read-variable['i',v23,-]|18636: read-property[v22,v23,v20]|18637: \<variable-non-null-undef\>['srcElements']|18638: write-variable[v20,'node']|18639: constant[null,v21]|18640: !=[v20,v21,v18]|18641: if[v18](true-block:6408,false-block:6412)}" ] 
BB6407 -> BB6408 [tailport=s, headport=n, headlabel="      6408"]
BB6407 -> BB6412 [tailport=s, headport=n]
BB6407 -> BB6436 [tailport=s, headport=n, color=gray]
BB6408 [shape=record label="{18642: read-variable['destElements',v25,-]|18643: read-variable['i',v26,-]|18644: read-property[v25,v26,v24]|18645: \<variable-non-null-undef\>['destElements']|18646: if[v24](true-block:6409,false-block:6411)}" ] 
BB6408 -> BB6409 [tailport=s, headport=n, headlabel="      6409"]
BB6408 -> BB6411 [tailport=s, headport=n, headlabel="      6411"]
BB6408 -> BB6436 [tailport=s, headport=n, color=gray]
BB6409 [shape=record label="{18647: read-variable['fixCloneNodeIssues',v28,v27]|18648: read-variable['node',v29,-]|18649: read-variable['destElements',v31,-]|18650: read-variable['i',v32,-]|18651: read-property[v31,v32,v30]|18652: \<variable-non-null-undef\>['destElements']}" ] 
BB6409 -> BB6410 [tailport=s, headport=n, headlabel="      6410"]
BB6409 -> BB6436 [tailport=s, headport=n, color=gray]
BB6410 [shape=record label="{18653: call-fixCloneNodeIssues [v27,v28,v29,v30,-]*}" ] 
BB6410 -> BB6411 [tailport=s, headport=n]
BB6410 -> BB6436 [tailport=s, headport=n, color=gray]
BB6411 [shape=record label="{18654: constant[1.0,v27]|18655: read-variable['i',v28,-]|18656: +[v28,v29]|18657: +[v29,v27,v30]|18658: write-variable[v30,'i']}" ] 
BB6411 -> BB6407 [tailport=s, headport=n]
BB6411 -> BB6436 [tailport=s, headport=n, color=gray]
BB6412 [shape=record label="{18659: read-variable['dataAndEvents',v10,-]|18660: if[v10](true-block:6413,false-block:6427)}" ] 
BB6412 -> BB6413 [tailport=s, headport=n, headlabel="      6413"]
BB6412 -> BB6427 [tailport=s, headport=n, headlabel="      6427"]
BB6412 -> BB6436 [tailport=s, headport=n, color=gray]
BB6413 [shape=record label="{18661: read-variable['deepDataAndEvents',v11,-]|18662: if[v11](true-block:6414,false-block:6415)}" ] 
BB6413 -> BB6414 [tailport=s, headport=n, headlabel="      6414"]
BB6413 -> BB6415 [tailport=s, headport=n, headlabel="      6415"]
BB6413 -> BB6436 [tailport=s, headport=n, color=gray]
BB6414 [shape=record label="{18663: read-variable['srcElements',v12,-]|18664: if[v12](true-block:6418,false-block:6416)}" ] 
BB6414 -> BB6418 [tailport=s, headport=n, headlabel="      6418"]
BB6414 -> BB6416 [tailport=s, headport=n, headlabel="      6416"]
BB6414 -> BB6436 [tailport=s, headport=n, color=gray]
BB6415 [shape=record label="{18665: read-variable['cloneCopyEvent',v13,v12]|18666: read-variable['elem',v14,-]|18667: read-variable['clone',v15,-]}" ] 
BB6415 -> BB6426 [tailport=s, headport=n, headlabel="      6426"]
BB6415 -> BB6436 [tailport=s, headport=n, color=gray]
BB6416 [shape=record label="{18668: read-variable['getAll',v14,v13]|18669: read-variable['elem',v15,-]}" ] 
BB6416 -> BB6417 [tailport=s, headport=n, headlabel="      6417"]
BB6416 -> BB6436 [tailport=s, headport=n, color=gray]
BB6417 [shape=record label="{18670: call-getAll [v13,v14,v15,v12]}" ] 
BB6417 -> BB6418 [tailport=s, headport=n]
BB6417 -> BB6436 [tailport=s, headport=n, color=gray]
BB6418 [shape=record label="{18671: write-variable[v12,'srcElements']*|18672: read-variable['destElements',v13,-]|18673: if[v13](true-block:6421,false-block:6419)}" ] 
BB6418 -> BB6421 [tailport=s, headport=n, headlabel="      6421"]
BB6418 -> BB6419 [tailport=s, headport=n, headlabel="      6419"]
BB6418 -> BB6436 [tailport=s, headport=n, color=gray]
BB6419 [shape=record label="{18674: read-variable['getAll',v15,v14]|18675: read-variable['clone',v16,-]}" ] 
BB6419 -> BB6420 [tailport=s, headport=n, headlabel="      6420"]
BB6419 -> BB6436 [tailport=s, headport=n, color=gray]
BB6420 [shape=record label="{18676: call-getAll [v14,v15,v16,v13]}" ] 
BB6420 -> BB6421 [tailport=s, headport=n]
BB6420 -> BB6436 [tailport=s, headport=n, color=gray]
BB6421 [shape=record label="{18677: write-variable[v13,'destElements']*|18678: constant[0.0,v15]|18679: write-variable[v15,'i']}" ] 
BB6421 -> BB6422 [tailport=s, headport=n, headlabel="      6422"]
BB6422 [shape=record label="{18680: read-variable['srcElements',v18,-]|18681: read-variable['i',v19,-]|18682: read-property[v18,v19,v16]|18683: \<variable-non-null-undef\>['srcElements']|18684: write-variable[v16,'node']|18685: constant[null,v17]|18686: !=[v16,v17,v14]|18687: if[v14](true-block:6423,false-block:6427)}" ] 
BB6422 -> BB6423 [tailport=s, headport=n, headlabel="      6423"]
BB6422 -> BB6427 [tailport=s, headport=n]
BB6422 -> BB6436 [tailport=s, headport=n, color=gray]
BB6423 [shape=record label="{18688: read-variable['cloneCopyEvent',v21,v20]|18689: read-variable['node',v22,-]|18690: read-variable['destElements',v24,-]|18691: read-variable['i',v25,-]|18692: read-property[v24,v25,v23]|18693: \<variable-non-null-undef\>['destElements']}" ] 
BB6423 -> BB6424 [tailport=s, headport=n, headlabel="      6424"]
BB6423 -> BB6436 [tailport=s, headport=n, color=gray]
BB6424 [shape=record label="{18694: call-cloneCopyEvent [v20,v21,v22,v23,-]*}" ] 
BB6424 -> BB6425 [tailport=s, headport=n, headlabel="      6425"]
BB6424 -> BB6436 [tailport=s, headport=n, color=gray]
BB6425 [shape=record label="{18695: constant[1.0,v26]|18696: read-variable['i',v27,-]|18697: +[v27,v28]|18698: +[v28,v26,v29]|18699: write-variable[v29,'i']}" ] 
BB6425 -> BB6422 [tailport=s, headport=n]
BB6425 -> BB6436 [tailport=s, headport=n, color=gray]
BB6426 [shape=record label="{18700: call-cloneCopyEvent [v12,v13,v14,v15,-]*}" ] 
BB6426 -> BB6427 [tailport=s, headport=n]
BB6426 -> BB6436 [tailport=s, headport=n, color=gray]
BB6427 [shape=record label="{18701: read-variable['getAll',v13,v12]|18702: read-variable['clone',v14,-]|18703: constant[\"script\",v15]}" ] 
BB6427 -> BB6428 [tailport=s, headport=n, headlabel="      6428"]
BB6427 -> BB6436 [tailport=s, headport=n, color=gray]
BB6428 [shape=record label="{18704: call-getAll [v12,v13,v14,v15,v11]}" ] 
BB6428 -> BB6429 [tailport=s, headport=n, headlabel="      6429"]
BB6428 -> BB6436 [tailport=s, headport=n, color=gray]
BB6429 [shape=record label="{18705: write-variable[v11,'destElements']*|18706: read-variable['destElements',v19,-]|18707: read-property[v19,'length',v17]|18708: \<variable-non-null-undef\>['destElements']|18709: constant[0.0,v18]|18710: \>[v17,v18,v16]|18711: if[v16](true-block:6430,false-block:6434)}" ] 
BB6429 -> BB6430 [tailport=s, headport=n, headlabel="      6430"]
BB6429 -> BB6434 [tailport=s, headport=n, headlabel="      6434"]
BB6429 -> BB6436 [tailport=s, headport=n, color=gray]
BB6430 [shape=record label="{18712: read-variable['setGlobalEval',v21,v20]|18713: read-variable['destElements',v22,-]|18714: read-variable['inPage',v24,-]|18715: ![v24,v23]|18716: if[v23](true-block:6431,false-block:6433)}" ] 
BB6430 -> BB6433 [tailport=s, headport=n, headlabel="      6433"]
BB6430 -> BB6431 [tailport=s, headport=n, headlabel="      6431"]
BB6430 -> BB6436 [tailport=s, headport=n, color=gray]
BB6431 [shape=record label="{18717: read-variable['getAll',v26,v25]|18718: read-variable['elem',v27,-]|18719: constant[\"script\",v28]}" ] 
BB6431 -> BB6432 [tailport=s, headport=n, headlabel="      6432"]
BB6431 -> BB6436 [tailport=s, headport=n, color=gray]
BB6432 [shape=record label="{18720: call-getAll [v25,v26,v27,v28,v23]}" ] 
BB6432 -> BB6433 [tailport=s, headport=n]
BB6432 -> BB6436 [tailport=s, headport=n, color=gray]
BB6433 [shape=record label="{18721: call-setGlobalEval [v20,v21,v22,v23,-]*}" ] 
BB6433 -> BB6434 [tailport=s, headport=n]
BB6433 -> BB6436 [tailport=s, headport=n, color=gray]
BB6434 [shape=record label="{18722: constant[null,v20]|18723: write-variable[v20,'node']|18724: write-variable[v20,'srcElements']|18725: write-variable[v20,'destElements']*|18726: read-variable['clone',v1,-]}" ] 
BB6434 -> BB6435 [tailport=s, headport=n, headlabel="      6435"]
BB6434 -> BB6436 [tailport=s, headport=n, color=gray]
BB6435 [shape=record label="{18727: return[v1]}" ] 
BB6436 [shape=record label="{18728: exceptional-return}" ] 
}
