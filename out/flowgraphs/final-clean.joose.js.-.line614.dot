digraph {
rankdir="TD"
BB_entry61[shape=none,label=""];
BB_entry61 -> BB580 [tailport=s, headport=n, headlabel="    580"]
BB580 [shape=record label="{1997: constant[undefined,v1]|1998: vardecl['superMeta']|1999: vardecl['superMetaName']|2000: vardecl['patched']|2001: vardecl['i']}" ] 
BB580 -> BB581 [tailport=s, headport=n, headlabel="      581"]
BB581 [shape=record label="{2002: read-variable['superClass',v3,-]|2003: read-property[v3,'meta',v2]|2004: \<variable-non-null-undef\>['superClass']|2005: write-variable[v2,'superMeta']*|2006: read-variable['superMeta',v7,-]|2007: read-property[v7,'meta',v6]|2008: \<variable-non-null-undef\>['superMeta']|2009: read-property[v6,'className',-]|2010: \<property-non-null-undef\>[v7,'meta']}" ] 
BB581 -> BB582 [tailport=s, headport=n, headlabel="      582"]
BB581 -> BB600 [tailport=s, headport=n, color=gray, headlabel="      600"]
BB582 [shape=record label="{2011: call-superMeta.meta.className [v6,'className',v4]}" ] 
BB582 -> BB583 [tailport=s, headport=n, headlabel="      583"]
BB582 -> BB600 [tailport=s, headport=n, color=gray]
BB583 [shape=record label="{2012: write-variable[v4,'superMetaName']*|2013: read-variable['superMetaName',v9,-]|2014: constant[\"Joose.Class\",v10]|2015: ==[v9,v10,v8]|2016: if[v8](true-block:586,false-block:584)}" ] 
BB583 -> BB586 [tailport=s, headport=n, headlabel="      586"]
BB583 -> BB584 [tailport=s, headport=n, headlabel="      584"]
BB583 -> BB600 [tailport=s, headport=n, color=gray]
BB584 [shape=record label="{2017: read-variable['superMetaName',v9,-]|2018: constant[\"Joose.MetaClass\",v10]|2019: ==[v9,v10,v8]|2020: if[v8](true-block:586,false-block:585)}" ] 
BB584 -> BB586 [tailport=s, headport=n]
BB584 -> BB585 [tailport=s, headport=n, headlabel="      585"]
BB584 -> BB600 [tailport=s, headport=n, color=gray]
BB585 [shape=record label="{2021: read-variable['superMetaName',v9,-]|2022: constant[\"Joose.MetaClassBootstrap\",v10]|2023: ==[v9,v10,v8]}" ] 
BB585 -> BB586 [tailport=s, headport=n]
BB585 -> BB600 [tailport=s, headport=n, color=gray]
BB586 [shape=record label="{2024: if[v8](true-block:587,false-block:588)}" ] 
BB586 -> BB587 [tailport=s, headport=n, headlabel="      587"]
BB586 -> BB588 [tailport=s, headport=n, headlabel="      588"]
BB587 [shape=record label="{2025: constant[undefined,v1]}" ] 
BB587 -> BB599 [tailport=s, headport=n, headlabel="      599"]
BB588 [shape=record label="{2026: read-variable['this',v13,-]|2027: read-property[v13,'meta',v12]|2028: read-property[v12,'meta',v11]|2029: \<property-non-null-undef\>[v13,'meta']|2030: read-property[v11,'isa',-]|2031: \<property-non-null-undef\>[v12,'meta']|2032: read-variable['superMeta',v14,-]}" ] 
BB588 -> BB589 [tailport=s, headport=n, headlabel="      589"]
BB588 -> BB600 [tailport=s, headport=n, color=gray]
BB589 [shape=record label="{2033: call-this.meta.meta.isa [v11,'isa',v14,v9]}" ] 
BB589 -> BB590 [tailport=s, headport=n, headlabel="      590"]
BB589 -> BB600 [tailport=s, headport=n, color=gray]
BB590 [shape=record label="{2034: if[v9](true-block:591,false-block:592)}" ] 
BB590 -> BB591 [tailport=s, headport=n, headlabel="      591"]
BB590 -> BB592 [tailport=s, headport=n, headlabel="      592"]
BB591 [shape=record label="{2035: constant[undefined,v1]}" ] 
BB591 -> BB599 [tailport=s, headport=n]
BB592 [shape=record label="{2036: read-variable['superMeta',v18,-]|2037: read-property[v18,'meta',v17]|2038: \<variable-non-null-undef\>['superMeta']|2039: read-property[v17,'instantiate',-]|2040: \<property-non-null-undef\>[v18,'meta']|2041: read-variable['this',v19,-]}" ] 
BB592 -> BB593 [tailport=s, headport=n, headlabel="      593"]
BB592 -> BB600 [tailport=s, headport=n, color=gray]
BB593 [shape=record label="{2042: call-superMeta.meta.instantiate [v17,'instantiate',v19,v15]}" ] 
BB593 -> BB594 [tailport=s, headport=n, headlabel="      594"]
BB593 -> BB600 [tailport=s, headport=n, color=gray]
BB594 [shape=record label="{2043: write-variable[v15,'patched']*|2044: read-variable['patched',v21,-]}" ] 
BB594 -> BB595 [tailport=s, headport=n, headlabel="      595"]
BB594 -> BB600 [tailport=s, headport=n, color=gray]
BB595 [shape=record label="{2045: begin-for-in[v21,v22]}" ] 
BB595 -> BB596 [tailport=s, headport=n, headlabel="      596"]
BB595 -> BB600 [tailport=s, headport=n, color=gray]
BB596 [shape=record label="{2046: has-next[v22,v23]|2047: if[v23](true-block:597,false-block:599)}" ] 
BB596 -> BB597 [tailport=s, headport=n, headlabel="      597"]
BB596 -> BB599 [tailport=s, headport=n]
BB597 [shape=record label="{2048: next-property[v22,v24]|2049: write-variable[v24,'i']|2050: read-variable['this',v26,-]|2051: read-variable['i',v27,-]|2052: read-variable['patched',v28,-]|2053: read-variable['i',v29,-]|2054: read-property[v28,v29,v25]|2055: \<variable-non-null-undef\>['patched']|2056: write-property[v26,v27,v25]*}" ] 
BB597 -> BB598 [tailport=s, headport=n, headlabel="      598"]
BB597 -> BB600 [tailport=s, headport=n, color=gray]
BB598 [shape=record label="{2057: end-for-in(begin-node:2045)}" ] 
BB598 -> BB596 [tailport=s, headport=n]
BB599 [shape=record label="{2058: return[v1]}" ] 
BB600 [shape=record label="{2059: exceptional-return}" ] 
//#$~ 635
}
