digraph {
rankdir="TD"
BB_entry65[shape=none,label=""];
BB_entry65 -> BB1518 [tailport=s, headport=n, headlabel="    1518"]
BB1518 [shape=record label="{5141: constant[undefined,v1]|5142: vardecl['then']}" ] 
BB1518 -> BB1519 [tailport=s, headport=n, headlabel="      1519"]
BB1519 [shape=record label="{5143: read-variable['promiseValue',v2,-]|5144: if[v2](true-block:1520,false-block:1521)}" ] 
BB1519 -> BB1521 [tailport=s, headport=n, headlabel="      1521"]
BB1519 -> BB1520 [tailport=s, headport=n, headlabel="      1520"]
BB1519 -> BB1523 [tailport=s, headport=n, color=gray, headlabel="      1523"]
BB1520 [shape=record label="{5145: read-variable['promiseValue',v3,-]|5146: read-property[v3,'then',v2]|5147: \<variable-non-null-undef\>['promiseValue']}" ] 
BB1520 -> BB1521 [tailport=s, headport=n]
BB1520 -> BB1523 [tailport=s, headport=n, color=gray]
BB1521 [shape=record label="{5148: write-variable[v2,'then']*}" ] 
BB1521 -> BB1522 [tailport=s, headport=n, headlabel="      1522"]
BB1522 [shape=record label="{5149: read-variable['thennable',v5,v4]|5150: read-variable['then',v6,-]|5151: function-expr[function ( ),v7]|5152: function-expr[function ( ),v8]|5153: function-expr[function ( ),v9]}" ] 
BB1522 -> BB1530 [tailport=s, headport=n, headlabel="      1530"]
BB1522 -> BB1532 [tailport=s, headport=n, color=gray, headlabel="      1532"]
BB1523 [shape=record label="{5154: catch[e,v2]|5155: begin-with[v2]}" ] 
BB1523 -> BB1524 [tailport=s, headport=n, headlabel="      1524"]
BB1523 -> BB1532 [tailport=s, headport=n, color=gray]
BB1524 [shape=record label="{5156: read-variable['m',v6,-]|5157: read-property[v6,'deferred',v5]|5158: \<variable-non-null-undef\>['m']|5159: read-property[v5,'onerror',-]|5160: \<property-non-null-undef\>[v6,'deferred']|5161: read-variable['e',v7,v3]}" ] 
BB1524 -> BB1526 [tailport=s, headport=n, headlabel="      1526"]
BB1524 -> BB1525 [tailport=s, headport=n, color=gray, headlabel="      1525"]
BB1525 [shape=record label="{5162: end-with}" ] 
BB1525 -> BB1532 [tailport=s, headport=n]
BB1526 [shape=record label="{5163: call-m.deferred.onerror [v5,'onerror',v7,-]*}" ] 
BB1526 -> BB1527 [tailport=s, headport=n, headlabel="      1527"]
BB1526 -> BB1525 [tailport=s, headport=n, color=gray]
BB1527 [shape=record label="{5164: read-variable['e',v8,v3]|5165: write-variable[v8,'promiseValue']*|5166: read-variable['REJECTING',v9,v3]|5167: write-variable[v9,'state']*|5168: read-variable['fire',v11,v10]}" ] 
BB1527 -> BB1528 [tailport=s, headport=n, headlabel="      1528"]
BB1527 -> BB1525 [tailport=s, headport=n, color=gray]
BB1528 [shape=record label="{5169: call-fire [v10,v11,v1]}" ] 
BB1528 -> BB1531 [tailport=s, headport=n, headlabel="      1531"]
BB1528 -> BB1525 [tailport=s, headport=n, color=gray]
BB1529 [shape=record label="{5170: end-with}" ] 
BB1529 -> BB1522 [tailport=s, headport=n]
BB1530 [shape=record label="{5171: call-thennable [v4,v5,v6,v7,v8,v9,-]*}" ] 
BB1530 -> BB1531 [tailport=s, headport=n]
BB1530 -> BB1532 [tailport=s, headport=n, color=gray]
BB1531 [shape=record label="{5172: return[v1]}" ] 
BB1532 [shape=record label="{5173: exceptional-return}" ] 
//#$~ 982
}
