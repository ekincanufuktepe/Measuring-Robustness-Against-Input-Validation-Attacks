digraph {
rankdir="TD"
BB_entry28[shape=none,label=""];
BB_entry28 -> BB431 [tailport=s, headport=n, headlabel="    431"]
BB431 [shape=record label="{1598: constant[undefined,v1]|1599: vardecl['results']|1600: vardecl['property']|1601: vardecl['i']}" ] 
BB431 -> BB432 [tailport=s, headport=n, headlabel="      432"]
BB432 [shape=record label="{1602: read-variable['Type',v6,v5]|1603: read-variable['object',v7,-]}" ] 
BB432 -> BB433 [tailport=s, headport=n, headlabel="      433"]
BB432 -> BB460 [tailport=s, headport=n, color=gray, headlabel="      460"]
BB433 [shape=record label="{1604: call-Type [v5,v6,v7,v3]}" ] 
BB433 -> BB434 [tailport=s, headport=n, headlabel="      434"]
BB433 -> BB460 [tailport=s, headport=n, color=gray]
BB434 [shape=record label="{1605: read-variable['OBJECT_TYPE',v4,-]|1606: !==[v3,v4,v2]|1607: if[v2](true-block:435,false-block:438)}" ] 
BB434 -> BB435 [tailport=s, headport=n, headlabel="      435"]
BB434 -> BB438 [tailport=s, headport=n, headlabel="      438"]
BB434 -> BB460 [tailport=s, headport=n, color=gray]
BB435 [shape=record label="{1608: read-variable['TypeError',v9,-]}" ] 
BB435 -> BB436 [tailport=s, headport=n, headlabel="      436"]
BB435 -> BB460 [tailport=s, headport=n, color=gray]
BB436 [shape=record label="{1609: construct [-,v9,v8]}" ] 
BB436 -> BB437 [tailport=s, headport=n, headlabel="      437"]
BB436 -> BB460 [tailport=s, headport=n, color=gray]
BB437 [shape=record label="{1610: throw[v8]*}" ] 
BB437 -> BB438 [tailport=s, headport=n]
BB437 -> BB460 [tailport=s, headport=n, color=gray]
BB438 [shape=record label="{1611: read-variable['Array',v9,-]}" ] 
BB438 -> BB439 [tailport=s, headport=n, headlabel="      439"]
BB438 -> BB460 [tailport=s, headport=n, color=gray]
BB439 [shape=record label="{1612: construct [-,v9,v8]}" ] 
BB439 -> BB440 [tailport=s, headport=n, headlabel="      440"]
BB439 -> BB460 [tailport=s, headport=n, color=gray]
BB440 [shape=record label="{1613: write-variable[v8,'results']*|1614: read-variable['object',v11,-]}" ] 
BB440 -> BB441 [tailport=s, headport=n, headlabel="      441"]
BB440 -> BB460 [tailport=s, headport=n, color=gray]
BB441 [shape=record label="{1615: begin-for-in[v11,v12]}" ] 
BB441 -> BB442 [tailport=s, headport=n, headlabel="      442"]
BB441 -> BB460 [tailport=s, headport=n, color=gray]
BB442 [shape=record label="{1616: has-next[v12,v13]|1617: if[v13](true-block:443,false-block:449)}" ] 
BB442 -> BB443 [tailport=s, headport=n, headlabel="      443"]
BB442 -> BB449 [tailport=s, headport=n, headlabel="      449"]
BB443 [shape=record label="{1618: next-property[v12,v14]|1619: write-variable[v14,'property']|1620: read-variable['_hasOwnProperty',v17,-]|1621: read-property[v17,'call',-]|1622: \<variable-non-null-undef\>['_hasOwnProperty']|1623: read-variable['object',v18,-]|1624: read-variable['property',v19,-]}" ] 
BB443 -> BB444 [tailport=s, headport=n, headlabel="      444"]
BB443 -> BB460 [tailport=s, headport=n, color=gray]
BB444 [shape=record label="{1625: call-_hasOwnProperty.call [v17,'call',v18,v19,v15]}" ] 
BB444 -> BB445 [tailport=s, headport=n, headlabel="      445"]
BB444 -> BB460 [tailport=s, headport=n, color=gray]
BB445 [shape=record label="{1626: if[v15](true-block:446,false-block:448)}" ] 
BB445 -> BB446 [tailport=s, headport=n, headlabel="      446"]
BB445 -> BB448 [tailport=s, headport=n, headlabel="      448"]
BB446 [shape=record label="{1627: read-variable['results',v21,-]|1628: read-property[v21,'push',-]|1629: \<variable-non-null-undef\>['results']|1630: read-variable['property',v22,-]}" ] 
BB446 -> BB447 [tailport=s, headport=n, headlabel="      447"]
BB446 -> BB460 [tailport=s, headport=n, color=gray]
BB447 [shape=record label="{1631: call-results.push [v21,'push',v22,-]*}" ] 
BB447 -> BB448 [tailport=s, headport=n]
BB447 -> BB460 [tailport=s, headport=n, color=gray]
BB448 [shape=record label="{1632: end-for-in(begin-node:1615)}" ] 
BB448 -> BB442 [tailport=s, headport=n]
BB449 [shape=record label="{1633: read-variable['IS_DONTENUM_BUGGY',v15,-]|1634: if[v15](true-block:450,false-block:458)}" ] 
BB449 -> BB450 [tailport=s, headport=n, headlabel="      450"]
BB449 -> BB458 [tailport=s, headport=n, headlabel="      458"]
BB449 -> BB460 [tailport=s, headport=n, color=gray]
BB450 [shape=record label="{1635: constant[0.0,v17]|1636: write-variable[v17,'i']*}" ] 
BB450 -> BB451 [tailport=s, headport=n, headlabel="      451"]
BB451 [shape=record label="{1637: read-variable['DONT_ENUMS',v18,-]|1638: read-variable['i',v19,-]|1639: read-property[v18,v19,v16]|1640: \<variable-non-null-undef\>['DONT_ENUMS']|1641: write-variable[v16,'property']|1642: if[v16](true-block:452,false-block:458)}" ] 
BB451 -> BB452 [tailport=s, headport=n, headlabel="      452"]
BB451 -> BB458 [tailport=s, headport=n]
BB451 -> BB460 [tailport=s, headport=n, color=gray]
BB452 [shape=record label="{1643: read-variable['_hasOwnProperty',v22,-]|1644: read-property[v22,'call',-]|1645: \<variable-non-null-undef\>['_hasOwnProperty']|1646: read-variable['object',v23,-]|1647: read-variable['property',v24,-]}" ] 
BB452 -> BB453 [tailport=s, headport=n, headlabel="      453"]
BB452 -> BB460 [tailport=s, headport=n, color=gray]
BB453 [shape=record label="{1648: call-_hasOwnProperty.call [v22,'call',v23,v24,v20]}" ] 
BB453 -> BB454 [tailport=s, headport=n, headlabel="      454"]
BB453 -> BB460 [tailport=s, headport=n, color=gray]
BB454 [shape=record label="{1649: if[v20](true-block:455,false-block:457)}" ] 
BB454 -> BB455 [tailport=s, headport=n, headlabel="      455"]
BB454 -> BB457 [tailport=s, headport=n, headlabel="      457"]
BB455 [shape=record label="{1650: read-variable['results',v26,-]|1651: read-property[v26,'push',-]|1652: \<variable-non-null-undef\>['results']|1653: read-variable['property',v27,-]}" ] 
BB455 -> BB456 [tailport=s, headport=n, headlabel="      456"]
BB455 -> BB460 [tailport=s, headport=n, color=gray]
BB456 [shape=record label="{1654: call-results.push [v26,'push',v27,-]*}" ] 
BB456 -> BB457 [tailport=s, headport=n]
BB456 -> BB460 [tailport=s, headport=n, color=gray]
BB457 [shape=record label="{1655: constant[1.0,v25]|1656: read-variable['i',v26,-]|1657: +[v26,v27]|1658: +[v27,v25,v28]|1659: write-variable[v28,'i']}" ] 
BB457 -> BB451 [tailport=s, headport=n]
BB457 -> BB460 [tailport=s, headport=n, color=gray]
BB458 [shape=record label="{1660: read-variable['results',v1,-]}" ] 
BB458 -> BB459 [tailport=s, headport=n, headlabel="      459"]
BB458 -> BB460 [tailport=s, headport=n, color=gray]
BB459 [shape=record label="{1661: return[v1]}" ] 
BB460 [shape=record label="{1662: exceptional-return}" ] 
//#$~ 297
}
