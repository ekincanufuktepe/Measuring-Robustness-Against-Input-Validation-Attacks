digraph {
rankdir="TD"
BB_entry1835[shape=none,label=""];
BB_entry1835 -> BB20975 [tailport=s, headport=n, headlabel="    20975"]
BB20975 [shape=record label="{70264: constant[undefined,v1]|70265: vardecl['event']|70266: vardecl['events']}" ] 
BB20975 -> BB20976 [tailport=s, headport=n, headlabel="      20976"]
BB20976 [shape=record label="{70267: read-variable['get',v4,v3]|70268: read-variable['this',v5,-]|70269: constant[\"events\",v6]}" ] 
BB20976 -> BB20977 [tailport=s, headport=n, headlabel="      20977"]
BB20976 -> BB21020 [tailport=s, headport=n, color=gray, headlabel="      21020"]
BB20977 [shape=record label="{70270: call-get [v3,v4,v5,v6,v2]}" ] 
BB20977 -> BB20978 [tailport=s, headport=n, headlabel="      20978"]
BB20977 -> BB21020 [tailport=s, headport=n, color=gray]
BB20978 [shape=record label="{70271: write-variable[v2,'events']*|70272: read-variable['merge',v8,v7]|70273: read-variable['events',v9,-]|70274: read-variable['addedEvents',v10,-]|70275: if[v10](true-block:20980,false-block:20979)}" ] 
BB20978 -> BB20980 [tailport=s, headport=n, headlabel="      20980"]
BB20978 -> BB20979 [tailport=s, headport=n, headlabel="      20979"]
BB20978 -> BB21020 [tailport=s, headport=n, color=gray]
BB20979 [shape=record label="{70276: new[v10]}" ] 
BB20979 -> BB20980 [tailport=s, headport=n]
BB20980 [shape=record label="{70277: call-merge [v7,v8,v9,v10,-]*}" ] 
BB20980 -> BB20981 [tailport=s, headport=n, headlabel="      20981"]
BB20980 -> BB21020 [tailport=s, headport=n, color=gray]
BB20981 [shape=record label="{70278: read-variable['isNone',v14,v13]|70279: read-variable['rootElement',v15,-]}" ] 
BB20981 -> BB20982 [tailport=s, headport=n, headlabel="      20982"]
BB20981 -> BB21020 [tailport=s, headport=n, color=gray]
BB20982 [shape=record label="{70280: call-isNone [v13,v14,v15,v12]}" ] 
BB20982 -> BB20983 [tailport=s, headport=n, headlabel="      20983"]
BB20982 -> BB21020 [tailport=s, headport=n, color=gray]
BB20983 [shape=record label="{70281: ![v12,v11]|70282: if[v11](true-block:20984,false-block:20986)}" ] 
BB20983 -> BB20984 [tailport=s, headport=n, headlabel="      20984"]
BB20983 -> BB20986 [tailport=s, headport=n, headlabel="      20986"]
BB20983 -> BB21020 [tailport=s, headport=n, color=gray]
BB20984 [shape=record label="{70283: read-variable['set',v17,v16]|70284: read-variable['this',v18,-]|70285: constant[\"rootElement\",v19]|70286: read-variable['rootElement',v20,-]}" ] 
BB20984 -> BB20985 [tailport=s, headport=n, headlabel="      20985"]
BB20984 -> BB21020 [tailport=s, headport=n, color=gray]
BB20985 [shape=record label="{70287: call-set [v16,v17,v18,v19,v20,-]*}" ] 
BB20985 -> BB20986 [tailport=s, headport=n]
BB20985 -> BB21020 [tailport=s, headport=n, color=gray]
BB20986 [shape=record label="{70288: read-variable['jQuery',v18,v17]|70289: read-variable['get',v21,v20]|70290: read-variable['this',v22,-]|70291: constant[\"rootElement\",v23]}" ] 
BB20986 -> BB20987 [tailport=s, headport=n, headlabel="      20987"]
BB20986 -> BB21020 [tailport=s, headport=n, color=gray]
BB20987 [shape=record label="{70292: call-get [v20,v21,v22,v23,v19]}" ] 
BB20987 -> BB20988 [tailport=s, headport=n, headlabel="      20988"]
BB20987 -> BB21020 [tailport=s, headport=n, color=gray]
BB20988 [shape=record label="{70293: call-jQuery [v17,v18,v19,v16]}" ] 
BB20988 -> BB20989 [tailport=s, headport=n, headlabel="      20989"]
BB20988 -> BB21020 [tailport=s, headport=n, color=gray]
BB20989 [shape=record label="{70294: write-variable[v16,'rootElement']*|70295: read-variable['Ember',v25,-]|70296: read-property[v25,'assert',-]|70297: \<variable-non-null-undef\>['Ember']|70298: read-variable['fmt',v28,v27]|70299: constant[\"You cannot use the same root element (%@) multiple times in an Ember.Application\",v29]|70300: read-variable['Array',v31,-]|70301: read-variable['rootElement',v33,-]|70302: read-property[v33,'selector',v32]|70303: \<variable-non-null-undef\>['rootElement']|70304: if[v32](true-block:20991,false-block:20990)}" ] 
BB20989 -> BB20991 [tailport=s, headport=n, headlabel="      20991"]
BB20989 -> BB20990 [tailport=s, headport=n, headlabel="      20990"]
BB20989 -> BB21020 [tailport=s, headport=n, color=gray]
BB20990 [shape=record label="{70305: read-variable['rootElement',v34,-]|70306: constant[0.0,v35]|70307: read-property[v34,v35,v33]|70308: \<variable-non-null-undef\>['rootElement']|70309: read-property[v33,'tagName',v32]|70310: \<property-non-null-undef\>[v34,v35]}" ] 
BB20990 -> BB20991 [tailport=s, headport=n]
BB20990 -> BB21020 [tailport=s, headport=n, color=gray]
BB20991 [shape=record label="{70311: construct [-,v31,v32,v30]}" ] 
BB20991 -> BB20992 [tailport=s, headport=n, headlabel="      20992"]
BB20991 -> BB21020 [tailport=s, headport=n, color=gray]
BB20992 [shape=record label="{70312: call-fmt [v27,v28,v29,v30,v26]}" ] 
BB20992 -> BB20993 [tailport=s, headport=n, headlabel="      20993"]
BB20992 -> BB21020 [tailport=s, headport=n, color=gray]
BB20993 [shape=record label="{70313: read-variable['rootElement',v36,-]|70314: read-property[v36,'is',-]|70315: \<variable-non-null-undef\>['rootElement']|70316: constant[\".ember-application\",v37]}" ] 
BB20993 -> BB20994 [tailport=s, headport=n, headlabel="      20994"]
BB20993 -> BB21020 [tailport=s, headport=n, color=gray]
BB20994 [shape=record label="{70317: call-rootElement.is [v36,'is',v37,v34]}" ] 
BB20994 -> BB20995 [tailport=s, headport=n, headlabel="      20995"]
BB20994 -> BB21020 [tailport=s, headport=n, color=gray]
BB20995 [shape=record label="{70318: ![v34,v33]}" ] 
BB20995 -> BB20996 [tailport=s, headport=n, headlabel="      20996"]
BB20995 -> BB21020 [tailport=s, headport=n, color=gray]
BB20996 [shape=record label="{70319: call-Ember.assert [v25,'assert',v26,v33,-]*}" ] 
BB20996 -> BB20997 [tailport=s, headport=n, headlabel="      20997"]
BB20996 -> BB21020 [tailport=s, headport=n, color=gray]
BB20997 [shape=record label="{70320: read-variable['Ember',v39,-]|70321: read-property[v39,'assert',-]|70322: \<variable-non-null-undef\>['Ember']|70323: constant[\"You cannot make a new Ember.Application using a root element that is a descendent of an existing Ember.Application\",v40]|70324: read-variable['rootElement',v45,-]|70325: read-property[v45,'closest',-]|70326: \<variable-non-null-undef\>['rootElement']|70327: constant[\".ember-application\",v46]}" ] 
BB20997 -> BB20998 [tailport=s, headport=n, headlabel="      20998"]
BB20997 -> BB21020 [tailport=s, headport=n, color=gray]
BB20998 [shape=record label="{70328: call-rootElement.closest [v45,'closest',v46,v43]}" ] 
BB20998 -> BB20999 [tailport=s, headport=n, headlabel="      20999"]
BB20998 -> BB21020 [tailport=s, headport=n, color=gray]
BB20999 [shape=record label="{70329: read-property[v43,'length',v42]|70330: ![v42,v41]}" ] 
BB20999 -> BB21000 [tailport=s, headport=n, headlabel="      21000"]
BB20999 -> BB21020 [tailport=s, headport=n, color=gray]
BB21000 [shape=record label="{70331: call-Ember.assert [v39,'assert',v40,v41,-]*}" ] 
BB21000 -> BB21001 [tailport=s, headport=n, headlabel="      21001"]
BB21000 -> BB21020 [tailport=s, headport=n, color=gray]
BB21001 [shape=record label="{70332: read-variable['Ember',v48,-]|70333: read-property[v48,'assert',-]|70334: \<variable-non-null-undef\>['Ember']|70335: constant[\"You cannot make a new Ember.Application using a root element that is an ancestor of an existing Ember.Application\",v49]|70336: read-variable['rootElement',v54,-]|70337: read-property[v54,'find',-]|70338: \<variable-non-null-undef\>['rootElement']|70339: constant[\".ember-application\",v55]}" ] 
BB21001 -> BB21002 [tailport=s, headport=n, headlabel="      21002"]
BB21001 -> BB21020 [tailport=s, headport=n, color=gray]
BB21002 [shape=record label="{70340: call-rootElement.find [v54,'find',v55,v52]}" ] 
BB21002 -> BB21003 [tailport=s, headport=n, headlabel="      21003"]
BB21002 -> BB21020 [tailport=s, headport=n, color=gray]
BB21003 [shape=record label="{70341: read-property[v52,'length',v51]|70342: ![v51,v50]}" ] 
BB21003 -> BB21004 [tailport=s, headport=n, headlabel="      21004"]
BB21003 -> BB21020 [tailport=s, headport=n, color=gray]
BB21004 [shape=record label="{70343: call-Ember.assert [v48,'assert',v49,v50,-]*}" ] 
BB21004 -> BB21005 [tailport=s, headport=n, headlabel="      21005"]
BB21004 -> BB21020 [tailport=s, headport=n, color=gray]
BB21005 [shape=record label="{70344: read-variable['rootElement',v57,-]|70345: read-property[v57,'addClass',-]|70346: \<variable-non-null-undef\>['rootElement']|70347: constant[\"ember-application\",v58]}" ] 
BB21005 -> BB21006 [tailport=s, headport=n, headlabel="      21006"]
BB21005 -> BB21020 [tailport=s, headport=n, color=gray]
BB21006 [shape=record label="{70348: call-rootElement.addClass [v57,'addClass',v58,-]*}" ] 
BB21006 -> BB21007 [tailport=s, headport=n, headlabel="      21007"]
BB21006 -> BB21020 [tailport=s, headport=n, color=gray]
BB21007 [shape=record label="{70349: read-variable['Ember',v60,-]|70350: read-property[v60,'assert',-]|70351: \<variable-non-null-undef\>['Ember']|70352: constant[\"Unable to add \\\"ember-application\\\" class to rootElement. Make sure you set rootElement to the body or an element in the body.\",v61]|70353: read-variable['rootElement',v64,-]|70354: read-property[v64,'is',-]|70355: \<variable-non-null-undef\>['rootElement']|70356: constant[\".ember-application\",v65]}" ] 
BB21007 -> BB21008 [tailport=s, headport=n, headlabel="      21008"]
BB21007 -> BB21020 [tailport=s, headport=n, color=gray]
BB21008 [shape=record label="{70357: call-rootElement.is [v64,'is',v65,v62]}" ] 
BB21008 -> BB21009 [tailport=s, headport=n, headlabel="      21009"]
BB21008 -> BB21020 [tailport=s, headport=n, color=gray]
BB21009 [shape=record label="{70358: call-Ember.assert [v60,'assert',v61,v62,-]*}" ] 
BB21009 -> BB21010 [tailport=s, headport=n, headlabel="      21010"]
BB21009 -> BB21020 [tailport=s, headport=n, color=gray]
BB21010 [shape=record label="{70359: read-variable['events',v67,-]}" ] 
BB21010 -> BB21011 [tailport=s, headport=n, headlabel="      21011"]
BB21010 -> BB21020 [tailport=s, headport=n, color=gray]
BB21011 [shape=record label="{70360: begin-for-in[v67,v68]}" ] 
BB21011 -> BB21012 [tailport=s, headport=n, headlabel="      21012"]
BB21011 -> BB21020 [tailport=s, headport=n, color=gray]
BB21012 [shape=record label="{70361: has-next[v68,v69]|70362: if[v69](true-block:21013,false-block:21019)}" ] 
BB21012 -> BB21013 [tailport=s, headport=n, headlabel="      21013"]
BB21012 -> BB21019 [tailport=s, headport=n, headlabel="      21019"]
BB21013 [shape=record label="{70363: next-property[v68,v70]|70364: write-variable[v70,'event']|70365: read-variable['events',v73,-]|70366: read-property[v73,'hasOwnProperty',-]|70367: \<variable-non-null-undef\>['events']|70368: read-variable['event',v74,-]}" ] 
BB21013 -> BB21014 [tailport=s, headport=n, headlabel="      21014"]
BB21013 -> BB21020 [tailport=s, headport=n, color=gray]
BB21014 [shape=record label="{70369: call-events.hasOwnProperty [v73,'hasOwnProperty',v74,v71]}" ] 
BB21014 -> BB21015 [tailport=s, headport=n, headlabel="      21015"]
BB21014 -> BB21020 [tailport=s, headport=n, color=gray]
BB21015 [shape=record label="{70370: if[v71](true-block:21016,false-block:21018)}" ] 
BB21015 -> BB21016 [tailport=s, headport=n, headlabel="      21016"]
BB21015 -> BB21018 [tailport=s, headport=n, headlabel="      21018"]
BB21016 [shape=record label="{70371: read-variable['this',v76,-]|70372: read-property[v76,'setupHandler',-]|70373: read-variable['rootElement',v77,-]|70374: read-variable['event',v78,-]|70375: read-variable['events',v80,-]|70376: read-variable['event',v81,-]|70377: read-property[v80,v81,v79]|70378: \<variable-non-null-undef\>['events']}" ] 
BB21016 -> BB21017 [tailport=s, headport=n, headlabel="      21017"]
BB21016 -> BB21020 [tailport=s, headport=n, color=gray]
BB21017 [shape=record label="{70379: call-this.setupHandler [v76,'setupHandler',v77,v78,v79,-]*}" ] 
BB21017 -> BB21018 [tailport=s, headport=n]
BB21017 -> BB21020 [tailport=s, headport=n, color=gray]
BB21018 [shape=record label="{70380: end-for-in(begin-node:70360)}" ] 
BB21018 -> BB21012 [tailport=s, headport=n]
BB21019 [shape=record label="{70381: return[v1]}" ] 
BB21020 [shape=record label="{70382: exceptional-return}" ] 
//#$~ 39535
}
