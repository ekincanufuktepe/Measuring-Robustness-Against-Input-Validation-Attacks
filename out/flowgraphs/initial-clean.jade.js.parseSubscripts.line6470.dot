digraph {
rankdir="TD"
BB_entry377[shape=none,label=""];
BB_entry377 -> BB6653 [tailport=s, headport=n, headlabel="    6653"]
BB6653 [shape=record label="{19823: constant[undefined,v1]|19824: vardecl['node']|19825: vardecl['node']|19826: vardecl['node']|19827: vardecl['node']}" ] 
BB6653 -> BB6654 [tailport=s, headport=n, headlabel="      6654"]
BB6654 [shape=record label="{19828: read-variable['eat',v4,v3]|19829: read-variable['_dot',v5,-]}" ] 
BB6654 -> BB6655 [tailport=s, headport=n, headlabel="      6655"]
BB6654 -> BB6701 [tailport=s, headport=n, color=gray, headlabel="      6701"]
BB6655 [shape=record label="{19830: call-eat [v3,v4,v5,v2]}" ] 
BB6655 -> BB6656 [tailport=s, headport=n, headlabel="      6656"]
BB6655 -> BB6701 [tailport=s, headport=n, color=gray]
BB6656 [shape=record label="{19831: if[v2](true-block:6657,false-block:6658)}" ] 
BB6656 -> BB6657 [tailport=s, headport=n, headlabel="      6657"]
BB6656 -> BB6658 [tailport=s, headport=n, headlabel="      6658"]
BB6657 [shape=record label="{19832: read-variable['startNodeFrom',v8,v7]|19833: read-variable['base',v9,-]}" ] 
BB6657 -> BB6659 [tailport=s, headport=n, headlabel="      6659"]
BB6657 -> BB6701 [tailport=s, headport=n, color=gray]
BB6658 [shape=record label="{19834: read-variable['eat',v8,v7]|19835: read-variable['_bracketL',v9,-]}" ] 
BB6658 -> BB6666 [tailport=s, headport=n, headlabel="      6666"]
BB6658 -> BB6701 [tailport=s, headport=n, color=gray]
BB6659 [shape=record label="{19836: call-startNodeFrom [v7,v8,v9,v6]}" ] 
BB6659 -> BB6660 [tailport=s, headport=n, headlabel="      6660"]
BB6659 -> BB6701 [tailport=s, headport=n, color=gray]
BB6660 [shape=record label="{19837: write-variable[v6,'node']*|19838: read-variable['node',v11,-]|19839: read-variable['base',v10,-]|19840: write-property[v11,'object',v10]|19841: \<variable-non-null-undef\>['node']*|19842: read-variable['node',v13,-]|19843: read-variable['parseIdent',v15,v14]|19844: constant[true,v16]}" ] 
BB6660 -> BB6661 [tailport=s, headport=n, headlabel="      6661"]
BB6660 -> BB6701 [tailport=s, headport=n, color=gray]
BB6661 [shape=record label="{19845: call-parseIdent [v14,v15,v16,v12]}" ] 
BB6661 -> BB6662 [tailport=s, headport=n, headlabel="      6662"]
BB6661 -> BB6701 [tailport=s, headport=n, color=gray]
BB6662 [shape=record label="{19846: write-property[v13,'property',v12]|19847: \<variable-non-null-undef\>['node']*|19848: read-variable['node',v18,-]|19849: constant[false,v17]|19850: write-property[v18,'computed',v17]|19851: \<variable-non-null-undef\>['node']*|19852: read-variable['parseSubscripts',v20,v19]|19853: read-variable['finishNode',v23,v22]|19854: read-variable['node',v24,-]|19855: constant[\"MemberExpression\",v25]}" ] 
BB6662 -> BB6663 [tailport=s, headport=n, headlabel="      6663"]
BB6662 -> BB6701 [tailport=s, headport=n, color=gray]
BB6663 [shape=record label="{19856: call-finishNode [v22,v23,v24,v25,v21]}" ] 
BB6663 -> BB6664 [tailport=s, headport=n, headlabel="      6664"]
BB6663 -> BB6701 [tailport=s, headport=n, color=gray]
BB6664 [shape=record label="{19857: read-variable['noCalls',v26,-]}" ] 
BB6664 -> BB6665 [tailport=s, headport=n, headlabel="      6665"]
BB6664 -> BB6701 [tailport=s, headport=n, color=gray]
BB6665 [shape=record label="{19858: call-parseSubscripts [v19,v20,v21,v26,v1]}" ] 
BB6665 -> BB6700 [tailport=s, headport=n, headlabel="      6700"]
BB6665 -> BB6701 [tailport=s, headport=n, color=gray]
BB6666 [shape=record label="{19859: call-eat [v7,v8,v9,v6]}" ] 
BB6666 -> BB6667 [tailport=s, headport=n, headlabel="      6667"]
BB6666 -> BB6701 [tailport=s, headport=n, color=gray]
BB6667 [shape=record label="{19860: if[v6](true-block:6668,false-block:6669)}" ] 
BB6667 -> BB6668 [tailport=s, headport=n, headlabel="      6668"]
BB6667 -> BB6669 [tailport=s, headport=n, headlabel="      6669"]
BB6668 [shape=record label="{19861: read-variable['startNodeFrom',v12,v11]|19862: read-variable['base',v13,-]}" ] 
BB6668 -> BB6670 [tailport=s, headport=n, headlabel="      6670"]
BB6668 -> BB6701 [tailport=s, headport=n, color=gray]
BB6669 [shape=record label="{19863: read-variable['noCalls',v11,-]|19864: ![v11,v10]|19865: if[v10](true-block:6679,false-block:6681)}" ] 
BB6669 -> BB6681 [tailport=s, headport=n, headlabel="      6681"]
BB6669 -> BB6679 [tailport=s, headport=n, headlabel="      6679"]
BB6669 -> BB6701 [tailport=s, headport=n, color=gray]
BB6670 [shape=record label="{19866: call-startNodeFrom [v11,v12,v13,v10]}" ] 
BB6670 -> BB6671 [tailport=s, headport=n, headlabel="      6671"]
BB6670 -> BB6701 [tailport=s, headport=n, color=gray]
BB6671 [shape=record label="{19867: write-variable[v10,'node']*|19868: read-variable['node',v15,-]|19869: read-variable['base',v14,-]|19870: write-property[v15,'object',v14]|19871: \<variable-non-null-undef\>['node']*|19872: read-variable['node',v17,-]|19873: read-variable['parseExpression',v19,v18]}" ] 
BB6671 -> BB6672 [tailport=s, headport=n, headlabel="      6672"]
BB6671 -> BB6701 [tailport=s, headport=n, color=gray]
BB6672 [shape=record label="{19874: call-parseExpression [v18,v19,v16]}" ] 
BB6672 -> BB6673 [tailport=s, headport=n, headlabel="      6673"]
BB6672 -> BB6701 [tailport=s, headport=n, color=gray]
BB6673 [shape=record label="{19875: write-property[v17,'property',v16]|19876: \<variable-non-null-undef\>['node']*|19877: read-variable['node',v21,-]|19878: constant[true,v20]|19879: write-property[v21,'computed',v20]|19880: \<variable-non-null-undef\>['node']*|19881: read-variable['expect',v23,v22]|19882: read-variable['_bracketR',v24,-]}" ] 
BB6673 -> BB6674 [tailport=s, headport=n, headlabel="      6674"]
BB6673 -> BB6701 [tailport=s, headport=n, color=gray]
BB6674 [shape=record label="{19883: call-expect [v22,v23,v24,-]*}" ] 
BB6674 -> BB6675 [tailport=s, headport=n, headlabel="      6675"]
BB6674 -> BB6701 [tailport=s, headport=n, color=gray]
BB6675 [shape=record label="{19884: read-variable['parseSubscripts',v26,v25]|19885: read-variable['finishNode',v29,v28]|19886: read-variable['node',v30,-]|19887: constant[\"MemberExpression\",v31]}" ] 
BB6675 -> BB6676 [tailport=s, headport=n, headlabel="      6676"]
BB6675 -> BB6701 [tailport=s, headport=n, color=gray]
BB6676 [shape=record label="{19888: call-finishNode [v28,v29,v30,v31,v27]}" ] 
BB6676 -> BB6677 [tailport=s, headport=n, headlabel="      6677"]
BB6676 -> BB6701 [tailport=s, headport=n, color=gray]
BB6677 [shape=record label="{19889: read-variable['noCalls',v32,-]}" ] 
BB6677 -> BB6678 [tailport=s, headport=n, headlabel="      6678"]
BB6677 -> BB6701 [tailport=s, headport=n, color=gray]
BB6678 [shape=record label="{19890: call-parseSubscripts [v25,v26,v27,v32,v1]}" ] 
BB6678 -> BB6700 [tailport=s, headport=n]
BB6678 -> BB6701 [tailport=s, headport=n, color=gray]
BB6679 [shape=record label="{19891: read-variable['eat',v13,v12]|19892: read-variable['_parenL',v14,-]}" ] 
BB6679 -> BB6680 [tailport=s, headport=n, headlabel="      6680"]
BB6679 -> BB6701 [tailport=s, headport=n, color=gray]
BB6680 [shape=record label="{19893: call-eat [v12,v13,v14,v10]}" ] 
BB6680 -> BB6681 [tailport=s, headport=n]
BB6680 -> BB6701 [tailport=s, headport=n, color=gray]
BB6681 [shape=record label="{19894: if[v10](true-block:6682,false-block:6683)}" ] 
BB6681 -> BB6682 [tailport=s, headport=n, headlabel="      6682"]
BB6681 -> BB6683 [tailport=s, headport=n, headlabel="      6683"]
BB6682 [shape=record label="{19895: read-variable['startNodeFrom',v14,v13]|19896: read-variable['base',v15,-]}" ] 
BB6682 -> BB6684 [tailport=s, headport=n, headlabel="      6684"]
BB6682 -> BB6701 [tailport=s, headport=n, color=gray]
BB6683 [shape=record label="{19897: read-variable['tokType',v13,-]|19898: read-variable['_bquote',v14,-]|19899: ===[v13,v14,v12]|19900: if[v12](true-block:6691,false-block:6699)}" ] 
BB6683 -> BB6691 [tailport=s, headport=n, headlabel="      6691"]
BB6683 -> BB6699 [tailport=s, headport=n, headlabel="      6699"]
BB6683 -> BB6701 [tailport=s, headport=n, color=gray]
BB6684 [shape=record label="{19901: call-startNodeFrom [v13,v14,v15,v12]}" ] 
BB6684 -> BB6685 [tailport=s, headport=n, headlabel="      6685"]
BB6684 -> BB6701 [tailport=s, headport=n, color=gray]
BB6685 [shape=record label="{19902: write-variable[v12,'node']*|19903: read-variable['node',v17,-]|19904: read-variable['base',v16,-]|19905: write-property[v17,'callee',v16]|19906: \<variable-non-null-undef\>['node']*|19907: read-variable['node',v19,-]|19908: read-variable['parseExprList',v21,v20]|19909: read-variable['_parenR',v22,-]|19910: constant[false,v23]}" ] 
BB6685 -> BB6686 [tailport=s, headport=n, headlabel="      6686"]
BB6685 -> BB6701 [tailport=s, headport=n, color=gray]
BB6686 [shape=record label="{19911: call-parseExprList [v20,v21,v22,v23,v18]}" ] 
BB6686 -> BB6687 [tailport=s, headport=n, headlabel="      6687"]
BB6686 -> BB6701 [tailport=s, headport=n, color=gray]
BB6687 [shape=record label="{19912: write-property[v19,'arguments',v18]|19913: \<variable-non-null-undef\>['node']*|19914: read-variable['parseSubscripts',v25,v24]|19915: read-variable['finishNode',v28,v27]|19916: read-variable['node',v29,-]|19917: constant[\"CallExpression\",v30]}" ] 
BB6687 -> BB6688 [tailport=s, headport=n, headlabel="      6688"]
BB6687 -> BB6701 [tailport=s, headport=n, color=gray]
BB6688 [shape=record label="{19918: call-finishNode [v27,v28,v29,v30,v26]}" ] 
BB6688 -> BB6689 [tailport=s, headport=n, headlabel="      6689"]
BB6688 -> BB6701 [tailport=s, headport=n, color=gray]
BB6689 [shape=record label="{19919: read-variable['noCalls',v31,-]}" ] 
BB6689 -> BB6690 [tailport=s, headport=n, headlabel="      6690"]
BB6689 -> BB6701 [tailport=s, headport=n, color=gray]
BB6690 [shape=record label="{19920: call-parseSubscripts [v24,v25,v26,v31,v1]}" ] 
BB6690 -> BB6700 [tailport=s, headport=n]
BB6690 -> BB6701 [tailport=s, headport=n, color=gray]
BB6691 [shape=record label="{19921: read-variable['startNodeFrom',v17,v16]|19922: read-variable['base',v18,-]}" ] 
BB6691 -> BB6692 [tailport=s, headport=n, headlabel="      6692"]
BB6691 -> BB6701 [tailport=s, headport=n, color=gray]
BB6692 [shape=record label="{19923: call-startNodeFrom [v16,v17,v18,v15]}" ] 
BB6692 -> BB6693 [tailport=s, headport=n, headlabel="      6693"]
BB6692 -> BB6701 [tailport=s, headport=n, color=gray]
BB6693 [shape=record label="{19924: write-variable[v15,'node']*|19925: read-variable['node',v20,-]|19926: read-variable['base',v19,-]|19927: write-property[v20,'tag',v19]|19928: \<variable-non-null-undef\>['node']*|19929: read-variable['node',v22,-]|19930: read-variable['parseTemplate',v24,v23]}" ] 
BB6693 -> BB6694 [tailport=s, headport=n, headlabel="      6694"]
BB6693 -> BB6701 [tailport=s, headport=n, color=gray]
BB6694 [shape=record label="{19931: call-parseTemplate [v23,v24,v21]}" ] 
BB6694 -> BB6695 [tailport=s, headport=n, headlabel="      6695"]
BB6694 -> BB6701 [tailport=s, headport=n, color=gray]
BB6695 [shape=record label="{19932: write-property[v22,'quasi',v21]|19933: \<variable-non-null-undef\>['node']*|19934: read-variable['parseSubscripts',v26,v25]|19935: read-variable['finishNode',v29,v28]|19936: read-variable['node',v30,-]|19937: constant[\"TaggedTemplateExpression\",v31]}" ] 
BB6695 -> BB6696 [tailport=s, headport=n, headlabel="      6696"]
BB6695 -> BB6701 [tailport=s, headport=n, color=gray]
BB6696 [shape=record label="{19938: call-finishNode [v28,v29,v30,v31,v27]}" ] 
BB6696 -> BB6697 [tailport=s, headport=n, headlabel="      6697"]
BB6696 -> BB6701 [tailport=s, headport=n, color=gray]
BB6697 [shape=record label="{19939: read-variable['noCalls',v32,-]}" ] 
BB6697 -> BB6698 [tailport=s, headport=n, headlabel="      6698"]
BB6697 -> BB6701 [tailport=s, headport=n, color=gray]
BB6698 [shape=record label="{19940: call-parseSubscripts [v25,v26,v27,v32,v1]}" ] 
BB6698 -> BB6700 [tailport=s, headport=n]
BB6698 -> BB6701 [tailport=s, headport=n, color=gray]
BB6699 [shape=record label="{19941: read-variable['base',v1,-]}" ] 
BB6699 -> BB6700 [tailport=s, headport=n]
BB6699 -> BB6701 [tailport=s, headport=n, color=gray]
BB6700 [shape=record label="{19942: return[v1]}" ] 
BB6701 [shape=record label="{19943: exceptional-return}" ] 
//#$~ 6494
}
