digraph {
rankdir="TD"
BB_entry18[shape=none,label=""];
BB_entry18 -> BB222 [tailport=s, headport=n, headlabel="    222"]
BB222 [shape=record label="{783: constant[undefined,v1]|784: vardecl['eventType']|785: vardecl['fallbackData']|786: vardecl['event']|787: vardecl['customData']}" ] 
BB222 -> BB223 [tailport=s, headport=n, headlabel="      223"]
BB223 [shape=record label="{788: read-variable['canUseCompositionEvent',v2,-]|789: if[v2](true-block:224,false-block:225)}" ] 
BB223 -> BB224 [tailport=s, headport=n, headlabel="      224"]
BB223 -> BB225 [tailport=s, headport=n, headlabel="      225"]
BB223 -> BB262 [tailport=s, headport=n, color=gray, headlabel="      262"]
BB224 [shape=record label="{790: read-variable['getCompositionEventType',v5,v4]|791: read-variable['topLevelType',v6,-]}" ] 
BB224 -> BB226 [tailport=s, headport=n, headlabel="      226"]
BB224 -> BB262 [tailport=s, headport=n, color=gray]
BB225 [shape=record label="{792: read-variable['currentComposition',v4,-]|793: ![v4,v3]|794: if[v3](true-block:228,false-block:229)}" ] 
BB225 -> BB228 [tailport=s, headport=n, headlabel="      228"]
BB225 -> BB229 [tailport=s, headport=n, headlabel="      229"]
BB225 -> BB262 [tailport=s, headport=n, color=gray]
BB226 [shape=record label="{795: call-getCompositionEventType [v4,v5,v6,v3]}" ] 
BB226 -> BB227 [tailport=s, headport=n, headlabel="      227"]
BB226 -> BB262 [tailport=s, headport=n, color=gray]
BB227 [shape=record label="{796: write-variable[v3,'eventType']*}" ] 
BB227 -> BB236 [tailport=s, headport=n, headlabel="      236"]
BB228 [shape=record label="{797: read-variable['isFallbackCompositionStart',v7,v6]|798: read-variable['topLevelType',v8,-]|799: read-variable['nativeEvent',v9,-]}" ] 
BB228 -> BB230 [tailport=s, headport=n, headlabel="      230"]
BB228 -> BB262 [tailport=s, headport=n, color=gray]
BB229 [shape=record label="{800: read-variable['isFallbackCompositionEnd',v7,v6]|801: read-variable['topLevelType',v8,-]|802: read-variable['nativeEvent',v9,-]}" ] 
BB229 -> BB233 [tailport=s, headport=n, headlabel="      233"]
BB229 -> BB262 [tailport=s, headport=n, color=gray]
BB230 [shape=record label="{803: call-isFallbackCompositionStart [v6,v7,v8,v9,v5]}" ] 
BB230 -> BB231 [tailport=s, headport=n, headlabel="      231"]
BB230 -> BB262 [tailport=s, headport=n, color=gray]
BB231 [shape=record label="{804: if[v5](true-block:232,false-block:236)}" ] 
BB231 -> BB232 [tailport=s, headport=n, headlabel="      232"]
BB231 -> BB236 [tailport=s, headport=n]
BB232 [shape=record label="{805: read-variable['eventTypes',v11,-]|806: read-property[v11,'compositionStart',v10]|807: \<variable-non-null-undef\>['eventTypes']|808: write-variable[v10,'eventType']*}" ] 
BB232 -> BB236 [tailport=s, headport=n]
BB232 -> BB262 [tailport=s, headport=n, color=gray]
BB233 [shape=record label="{809: call-isFallbackCompositionEnd [v6,v7,v8,v9,v5]}" ] 
BB233 -> BB234 [tailport=s, headport=n, headlabel="      234"]
BB233 -> BB262 [tailport=s, headport=n, color=gray]
BB234 [shape=record label="{810: if[v5](true-block:235,false-block:236)}" ] 
BB234 -> BB235 [tailport=s, headport=n, headlabel="      235"]
BB234 -> BB236 [tailport=s, headport=n]
BB235 [shape=record label="{811: read-variable['eventTypes',v11,-]|812: read-property[v11,'compositionEnd',v10]|813: \<variable-non-null-undef\>['eventTypes']|814: write-variable[v10,'eventType']*}" ] 
BB235 -> BB236 [tailport=s, headport=n]
BB235 -> BB262 [tailport=s, headport=n, color=gray]
BB236 [shape=record label="{815: read-variable['eventType',v4,-]|816: ![v4,v3]|817: if[v3](true-block:237,false-block:238)}" ] 
BB236 -> BB237 [tailport=s, headport=n, headlabel="      237"]
BB236 -> BB238 [tailport=s, headport=n, headlabel="      238"]
BB236 -> BB262 [tailport=s, headport=n, color=gray]
BB237 [shape=record label="{818: constant[null,v1]}" ] 
BB237 -> BB261 [tailport=s, headport=n, headlabel="      261"]
BB238 [shape=record label="{819: read-variable['useFallbackCompositionData',v5,-]|820: if[v5](true-block:239,false-block:250)}" ] 
BB238 -> BB239 [tailport=s, headport=n, headlabel="      239"]
BB238 -> BB250 [tailport=s, headport=n, headlabel="      250"]
BB238 -> BB262 [tailport=s, headport=n, color=gray]
BB239 [shape=record label="{821: read-variable['currentComposition',v7,-]|822: ![v7,v6]|823: if[v6](true-block:240,false-block:241)}" ] 
BB239 -> BB241 [tailport=s, headport=n, headlabel="      241"]
BB239 -> BB240 [tailport=s, headport=n, headlabel="      240"]
BB239 -> BB262 [tailport=s, headport=n, color=gray]
BB240 [shape=record label="{824: read-variable['eventType',v8,-]|825: read-variable['eventTypes',v10,-]|826: read-property[v10,'compositionStart',v9]|827: \<variable-non-null-undef\>['eventTypes']|828: ===[v8,v9,v6]}" ] 
BB240 -> BB241 [tailport=s, headport=n]
BB240 -> BB262 [tailport=s, headport=n, color=gray]
BB241 [shape=record label="{829: if[v6](true-block:242,false-block:243)}" ] 
BB241 -> BB242 [tailport=s, headport=n, headlabel="      242"]
BB241 -> BB243 [tailport=s, headport=n, headlabel="      243"]
BB242 [shape=record label="{830: read-variable['FallbackCompositionState',v10,-]|831: read-property[v10,'getPooled',-]|832: \<variable-non-null-undef\>['FallbackCompositionState']|833: read-variable['topLevelTarget',v11,-]}" ] 
BB242 -> BB244 [tailport=s, headport=n, headlabel="      244"]
BB242 -> BB262 [tailport=s, headport=n, color=gray]
BB243 [shape=record label="{834: read-variable['eventType',v9,-]|835: read-variable['eventTypes',v11,-]|836: read-property[v11,'compositionEnd',v10]|837: \<variable-non-null-undef\>['eventTypes']|838: ===[v9,v10,v8]|839: if[v8](true-block:246,false-block:250)}" ] 
BB243 -> BB246 [tailport=s, headport=n, headlabel="      246"]
BB243 -> BB250 [tailport=s, headport=n]
BB243 -> BB262 [tailport=s, headport=n, color=gray]
BB244 [shape=record label="{840: call-FallbackCompositionState.getPooled [v10,'getPooled',v11,v8]}" ] 
BB244 -> BB245 [tailport=s, headport=n, headlabel="      245"]
BB244 -> BB262 [tailport=s, headport=n, color=gray]
BB245 [shape=record label="{841: write-variable[v8,'currentComposition']*}" ] 
BB245 -> BB250 [tailport=s, headport=n]
BB246 [shape=record label="{842: read-variable['currentComposition',v12,-]|843: if[v12](true-block:247,false-block:250)}" ] 
BB246 -> BB247 [tailport=s, headport=n, headlabel="      247"]
BB246 -> BB250 [tailport=s, headport=n]
BB246 -> BB262 [tailport=s, headport=n, color=gray]
BB247 [shape=record label="{844: read-variable['currentComposition',v15,-]|845: read-property[v15,'getData',-]|846: \<variable-non-null-undef\>['currentComposition']}" ] 
BB247 -> BB248 [tailport=s, headport=n, headlabel="      248"]
BB247 -> BB262 [tailport=s, headport=n, color=gray]
BB248 [shape=record label="{847: call-currentComposition.getData [v15,'getData',v13]}" ] 
BB248 -> BB249 [tailport=s, headport=n, headlabel="      249"]
BB248 -> BB262 [tailport=s, headport=n, color=gray]
BB249 [shape=record label="{848: write-variable[v13,'fallbackData']*}" ] 
BB249 -> BB250 [tailport=s, headport=n]
BB250 [shape=record label="{849: read-variable['SyntheticCompositionEvent',v8,-]|850: read-property[v8,'getPooled',-]|851: \<variable-non-null-undef\>['SyntheticCompositionEvent']|852: read-variable['eventType',v9,-]|853: read-variable['topLevelTargetID',v10,-]|854: read-variable['nativeEvent',v11,-]}" ] 
BB250 -> BB251 [tailport=s, headport=n, headlabel="      251"]
BB250 -> BB262 [tailport=s, headport=n, color=gray]
BB251 [shape=record label="{855: call-SyntheticCompositionEvent.getPooled [v8,'getPooled',v9,v10,v11,v6]}" ] 
BB251 -> BB252 [tailport=s, headport=n, headlabel="      252"]
BB251 -> BB262 [tailport=s, headport=n, color=gray]
BB252 [shape=record label="{856: write-variable[v6,'event']*|857: read-variable['fallbackData',v12,-]|858: if[v12](true-block:253,false-block:254)}" ] 
BB252 -> BB253 [tailport=s, headport=n, headlabel="      253"]
BB252 -> BB254 [tailport=s, headport=n, headlabel="      254"]
BB252 -> BB262 [tailport=s, headport=n, color=gray]
BB253 [shape=record label="{859: read-variable['event',v14,-]|860: read-variable['fallbackData',v13,-]|861: write-property[v14,'data',v13]|862: \<variable-non-null-undef\>['event']*}" ] 
BB253 -> BB258 [tailport=s, headport=n, headlabel="      258"]
BB253 -> BB262 [tailport=s, headport=n, color=gray]
BB254 [shape=record label="{863: read-variable['getDataFromCustomEvent',v15,v14]|864: read-variable['nativeEvent',v16,-]}" ] 
BB254 -> BB255 [tailport=s, headport=n, headlabel="      255"]
BB254 -> BB262 [tailport=s, headport=n, color=gray]
BB255 [shape=record label="{865: call-getDataFromCustomEvent [v14,v15,v16,v13]}" ] 
BB255 -> BB256 [tailport=s, headport=n, headlabel="      256"]
BB255 -> BB262 [tailport=s, headport=n, color=gray]
BB256 [shape=record label="{866: write-variable[v13,'customData']*|867: read-variable['customData',v18,-]|868: constant[null,v19]|869: !==[v18,v19,v17]|870: if[v17](true-block:257,false-block:258)}" ] 
BB256 -> BB257 [tailport=s, headport=n, headlabel="      257"]
BB256 -> BB258 [tailport=s, headport=n]
BB256 -> BB262 [tailport=s, headport=n, color=gray]
BB257 [shape=record label="{871: read-variable['event',v21,-]|872: read-variable['customData',v20,-]|873: write-property[v21,'data',v20]|874: \<variable-non-null-undef\>['event']*}" ] 
BB257 -> BB258 [tailport=s, headport=n]
BB257 -> BB262 [tailport=s, headport=n, color=gray]
BB258 [shape=record label="{875: read-variable['EventPropagators',v14,-]|876: read-property[v14,'accumulateTwoPhaseDispatches',-]|877: \<variable-non-null-undef\>['EventPropagators']|878: read-variable['event',v15,-]}" ] 
BB258 -> BB259 [tailport=s, headport=n, headlabel="      259"]
BB258 -> BB262 [tailport=s, headport=n, color=gray]
BB259 [shape=record label="{879: call-EventPropagators.accumulateTwoPhaseDispatches [v14,'accumulateTwoPhaseDispatches',v15,-]*}" ] 
BB259 -> BB260 [tailport=s, headport=n, headlabel="      260"]
BB259 -> BB262 [tailport=s, headport=n, color=gray]
BB260 [shape=record label="{880: read-variable['event',v1,-]}" ] 
BB260 -> BB261 [tailport=s, headport=n]
BB260 -> BB262 [tailport=s, headport=n, color=gray]
BB261 [shape=record label="{881: return[v1]}" ] 
BB262 [shape=record label="{882: exceptional-return}" ] 
//#$~ 469
}
