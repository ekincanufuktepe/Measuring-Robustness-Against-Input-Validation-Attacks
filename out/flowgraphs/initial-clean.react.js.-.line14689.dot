digraph {
rankdir="TD"
BB_entry615[shape=none,label=""];
BB_entry615 -> BB8367 [tailport=s, headport=n, headlabel="    8367"]
BB8367 [shape=record label="{27722: constant[undefined,v1]|27723: vardecl['internalInstance']|27724: vardecl['element']|27725: vardecl['props']}" ] 
BB8367 -> BB8368 [tailport=s, headport=n, headlabel="      8368"]
BB8368 [shape=record label="{27726: read-variable['getInternalInstanceReadyForUpdate',v4,v3]|27727: read-variable['publicInstance',v5,-]|27728: constant[\"setProps\",v6]}" ] 
BB8368 -> BB8369 [tailport=s, headport=n, headlabel="      8369"]
BB8368 -> BB8386 [tailport=s, headport=n, color=gray, headlabel="      8386"]
BB8369 [shape=record label="{27729: call-getInternalInstanceReadyForUpdate [v3,v4,v5,v6,v2]}" ] 
BB8369 -> BB8370 [tailport=s, headport=n, headlabel="      8370"]
BB8369 -> BB8386 [tailport=s, headport=n, color=gray]
BB8370 [shape=record label="{27730: write-variable[v2,'internalInstance']*|27731: read-variable['internalInstance',v8,-]|27732: ![v8,v7]|27733: if[v7](true-block:8371,false-block:8372)}" ] 
BB8370 -> BB8371 [tailport=s, headport=n, headlabel="      8371"]
BB8370 -> BB8372 [tailport=s, headport=n, headlabel="      8372"]
BB8370 -> BB8386 [tailport=s, headport=n, color=gray]
BB8371 [shape=record label="{27734: constant[undefined,v1]}" ] 
BB8371 -> BB8385 [tailport=s, headport=n, headlabel="      8385"]
BB8372 [shape=record label="{27735: constant[\"production\",v10]|27736: constant[\"development\",v11]|27737: !==[v10,v11,v9]|27738: if[v9](true-block:8373,false-block:8374)}" ] 
BB8372 -> BB8373 [tailport=s, headport=n, headlabel="      8373"]
BB8372 -> BB8374 [tailport=s, headport=n, headlabel="      8374"]
BB8372 -> BB8386 [tailport=s, headport=n, color=gray]
BB8373 [shape=record label="{27739: read-variable['invariant',v13,v12]|27740: read-variable['internalInstance',v15,-]|27741: read-property[v15,'_isTopLevel',v14]|27742: \<variable-non-null-undef\>['internalInstance']|27743: constant[\"setProps(...): You called `setProps` on a \",v23]|27744: constant[\"component with a parent. This is an anti-pattern since props will \",v24]|27745: +[v23,v24,v21]|27746: constant[\"get reactively updated when rendered. Instead, change the owner's \",v22]|27747: +[v21,v22,v19]|27748: constant[\"`render` method to pass the correct value as props to the component \",v20]|27749: +[v19,v20,v17]|27750: constant[\"where it is created.\",v18]|27751: +[v17,v18,v16]}" ] 
BB8373 -> BB8375 [tailport=s, headport=n, headlabel="      8375"]
BB8373 -> BB8386 [tailport=s, headport=n, color=gray]
BB8374 [shape=record label="{27752: read-variable['invariant',v13,v12]|27753: read-variable['internalInstance',v15,-]|27754: read-property[v15,'_isTopLevel',v14]|27755: \<variable-non-null-undef\>['internalInstance']}" ] 
BB8374 -> BB8376 [tailport=s, headport=n, headlabel="      8376"]
BB8374 -> BB8386 [tailport=s, headport=n, color=gray]
BB8375 [shape=record label="{27756: call-invariant [v12,v13,v14,v16,-]}" ] 
BB8375 -> BB8377 [tailport=s, headport=n, headlabel="      8377"]
BB8375 -> BB8386 [tailport=s, headport=n, color=gray]
BB8376 [shape=record label="{27757: call-invariant [v12,v13,v14,-]}" ] 
BB8376 -> BB8377 [tailport=s, headport=n]
BB8376 -> BB8386 [tailport=s, headport=n, color=gray]
BB8377 [shape=record label="{27758: read-variable['internalInstance',v13,-]|27759: read-property[v13,'_pendingElement',v12]|27760: \<variable-non-null-undef\>['internalInstance']|27761: if[v12](true-block:8379,false-block:8378)}" ] 
BB8377 -> BB8379 [tailport=s, headport=n, headlabel="      8379"]
BB8377 -> BB8378 [tailport=s, headport=n, headlabel="      8378"]
BB8377 -> BB8386 [tailport=s, headport=n, color=gray]
BB8378 [shape=record label="{27762: read-variable['internalInstance',v13,-]|27763: read-property[v13,'_currentElement',v12]|27764: \<variable-non-null-undef\>['internalInstance']}" ] 
BB8378 -> BB8379 [tailport=s, headport=n]
BB8378 -> BB8386 [tailport=s, headport=n, color=gray]
BB8379 [shape=record label="{27765: write-variable[v12,'element']*|27766: read-variable['assign',v15,v14]|27767: new[v16]|27768: read-variable['element',v18,-]|27769: read-property[v18,'props',v17]|27770: \<variable-non-null-undef\>['element']|27771: read-variable['partialProps',v19,-]}" ] 
BB8379 -> BB8380 [tailport=s, headport=n, headlabel="      8380"]
BB8379 -> BB8386 [tailport=s, headport=n, color=gray]
BB8380 [shape=record label="{27772: call-assign [v14,v15,v16,v17,v19,v13]}" ] 
BB8380 -> BB8381 [tailport=s, headport=n, headlabel="      8381"]
BB8380 -> BB8386 [tailport=s, headport=n, color=gray]
BB8381 [shape=record label="{27773: write-variable[v13,'props']*|27774: read-variable['internalInstance',v21,-]|27775: read-variable['ReactElement',v23,-]|27776: read-property[v23,'cloneAndReplaceProps',-]|27777: \<variable-non-null-undef\>['ReactElement']|27778: read-variable['element',v24,-]|27779: read-variable['props',v25,-]}" ] 
BB8381 -> BB8382 [tailport=s, headport=n, headlabel="      8382"]
BB8381 -> BB8386 [tailport=s, headport=n, color=gray]
BB8382 [shape=record label="{27780: call-ReactElement.cloneAndReplaceProps [v23,'cloneAndReplaceProps',v24,v25,v20]}" ] 
BB8382 -> BB8383 [tailport=s, headport=n, headlabel="      8383"]
BB8382 -> BB8386 [tailport=s, headport=n, color=gray]
BB8383 [shape=record label="{27781: write-property[v21,'_pendingElement',v20]|27782: \<variable-non-null-undef\>['internalInstance']*|27783: read-variable['enqueueUpdate',v27,v26]|27784: read-variable['internalInstance',v28,-]}" ] 
BB8383 -> BB8384 [tailport=s, headport=n, headlabel="      8384"]
BB8383 -> BB8386 [tailport=s, headport=n, color=gray]
BB8384 [shape=record label="{27785: call-enqueueUpdate [v26,v27,v28,-]*}" ] 
BB8384 -> BB8385 [tailport=s, headport=n]
BB8384 -> BB8386 [tailport=s, headport=n, color=gray]
BB8385 [shape=record label="{27786: return[v1]}" ] 
BB8386 [shape=record label="{27787: exceptional-return}" ] 
//#$~ 14718
}
