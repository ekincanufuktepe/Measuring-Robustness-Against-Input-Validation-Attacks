digraph {
rankdir="TD"
BB_entry706[shape=none,label=""];
BB_entry706 -> BB8444 [tailport=s, headport=n, headlabel="    8444"]
BB8444 [shape=record label="{28988: constant[undefined,v1]|28989: vardecl['func']|28990: vardecl['paths']|28991: vardecl['addWatchedProperty']|28992: vardecl['_paths']|28993: vardecl['i']}" ] 
BB8444 -> BB8445 [tailport=s, headport=n, headlabel="      8445"]
BB8445 [shape=record label="{28994: read-variable['a_slice',v5,-]|28995: read-property[v5,'call',-]|28996: \<variable-non-null-undef\>['a_slice']|28997: read-variable['arguments',v6,-]|28998: constant[-1.0,v7]}" ] 
BB8445 -> BB8446 [tailport=s, headport=n, headlabel="      8446"]
BB8445 -> BB8466 [tailport=s, headport=n, color=gray, headlabel="      8466"]
BB8446 [shape=record label="{28999: call-a_slice.call [v5,'call',v6,v7,v3]}" ] 
BB8446 -> BB8447 [tailport=s, headport=n, headlabel="      8447"]
BB8446 -> BB8466 [tailport=s, headport=n, color=gray]
BB8447 [shape=record label="{29000: constant[0.0,v8]|29001: read-property[v3,v8,v2]|29002: write-variable[v2,'func']*|29003: function-expr[function ( path ),v9]|29004: write-variable[v9,'addWatchedProperty']*|29005: read-variable['a_slice',v12,-]|29006: read-property[v12,'call',-]|29007: \<variable-non-null-undef\>['a_slice']|29008: read-variable['arguments',v13,-]|29009: constant[0.0,v14]|29010: constant[-1.0,v15]}" ] 
BB8447 -> BB8448 [tailport=s, headport=n, headlabel="      8448"]
BB8447 -> BB8466 [tailport=s, headport=n, color=gray]
BB8448 [shape=record label="{29011: call-a_slice.call [v12,'call',v13,v14,v15,v10]}" ] 
BB8448 -> BB8449 [tailport=s, headport=n, headlabel="      8449"]
BB8448 -> BB8466 [tailport=s, headport=n, color=gray]
BB8449 [shape=record label="{29012: write-variable[v10,'_paths']*|29013: typeof['func',v17]|29014: constant[\"function\",v18]|29015: !==[v17,v18,v16]|29016: if[v16](true-block:8450,false-block:8453)}" ] 
BB8449 -> BB8450 [tailport=s, headport=n, headlabel="      8450"]
BB8449 -> BB8453 [tailport=s, headport=n, headlabel="      8453"]
BB8449 -> BB8466 [tailport=s, headport=n, color=gray]
BB8450 [shape=record label="{29017: read-variable['arguments',v20,-]|29018: constant[0.0,v21]|29019: read-property[v20,v21,v19]|29020: \<variable-non-null-undef\>['arguments']|29021: write-variable[v19,'func']*|29022: read-variable['a_slice',v24,-]|29023: read-property[v24,'call',-]|29024: \<variable-non-null-undef\>['a_slice']|29025: read-variable['arguments',v25,-]|29026: constant[1.0,v26]}" ] 
BB8450 -> BB8451 [tailport=s, headport=n, headlabel="      8451"]
BB8450 -> BB8466 [tailport=s, headport=n, color=gray]
BB8451 [shape=record label="{29027: call-a_slice.call [v24,'call',v25,v26,v22]}" ] 
BB8451 -> BB8452 [tailport=s, headport=n, headlabel="      8452"]
BB8451 -> BB8466 [tailport=s, headport=n, color=gray]
BB8452 [shape=record label="{29028: write-variable[v22,'_paths']*}" ] 
BB8452 -> BB8453 [tailport=s, headport=n]
BB8453 [shape=record label="{29029: read-variable['Array',v20,-]}" ] 
BB8453 -> BB8454 [tailport=s, headport=n, headlabel="      8454"]
BB8453 -> BB8466 [tailport=s, headport=n, color=gray]
BB8454 [shape=record label="{29030: construct [-,v20,v19]}" ] 
BB8454 -> BB8455 [tailport=s, headport=n, headlabel="      8455"]
BB8454 -> BB8466 [tailport=s, headport=n, color=gray]
BB8455 [shape=record label="{29031: write-variable[v19,'paths']*|29032: constant[0.0,v22]|29033: write-variable[v22,'i']*}" ] 
BB8455 -> BB8456 [tailport=s, headport=n, headlabel="      8456"]
BB8456 [shape=record label="{29034: read-variable['i',v23,-]|29035: read-variable['_paths',v25,-]|29036: read-property[v25,'length',v24]|29037: \<variable-non-null-undef\>['_paths']|29038: \<[v23,v24,v21]|29039: if[v21](true-block:8457,false-block:8458)}" ] 
BB8456 -> BB8457 [tailport=s, headport=n, headlabel="      8457"]
BB8456 -> BB8458 [tailport=s, headport=n, headlabel="      8458"]
BB8456 -> BB8466 [tailport=s, headport=n, color=gray]
BB8457 [shape=record label="{29040: read-variable['expandProperties',v27,v26]|29041: read-variable['_paths',v29,-]|29042: read-variable['i',v30,-]|29043: read-property[v29,v30,v28]|29044: \<variable-non-null-undef\>['_paths']|29045: read-variable['addWatchedProperty',v31,-]}" ] 
BB8457 -> BB8459 [tailport=s, headport=n, headlabel="      8459"]
BB8457 -> BB8466 [tailport=s, headport=n, color=gray]
BB8458 [shape=record label="{29046: typeof['func',v27]|29047: constant[\"function\",v28]|29048: !==[v27,v28,v26]|29049: if[v26](true-block:8461,false-block:8464)}" ] 
BB8458 -> BB8461 [tailport=s, headport=n, headlabel="      8461"]
BB8458 -> BB8464 [tailport=s, headport=n, headlabel="      8464"]
BB8458 -> BB8466 [tailport=s, headport=n, color=gray]
BB8459 [shape=record label="{29050: call-expandProperties [v26,v27,v28,v31,-]*}" ] 
BB8459 -> BB8460 [tailport=s, headport=n, headlabel="      8460"]
BB8459 -> BB8466 [tailport=s, headport=n, color=gray]
BB8460 [shape=record label="{29051: constant[1.0,v32]|29052: read-variable['i',v33,-]|29053: +[v33,v34]|29054: +[v34,v32,v35]|29055: write-variable[v35,'i']}" ] 
BB8460 -> BB8456 [tailport=s, headport=n]
BB8460 -> BB8466 [tailport=s, headport=n, color=gray]
BB8461 [shape=record label="{29056: read-variable['Ember',v31,-]|29057: read-property[v31,'Error',-]|29058: \<variable-non-null-undef\>['Ember']|29059: constant[\"Ember.observer called without a function\",v32]}" ] 
BB8461 -> BB8462 [tailport=s, headport=n, headlabel="      8462"]
BB8461 -> BB8466 [tailport=s, headport=n, color=gray]
BB8462 [shape=record label="{29060: construct [v31,'Error',v32,v29]}" ] 
BB8462 -> BB8463 [tailport=s, headport=n, headlabel="      8463"]
BB8462 -> BB8466 [tailport=s, headport=n, color=gray]
BB8463 [shape=record label="{29061: throw[v29]*}" ] 
BB8463 -> BB8464 [tailport=s, headport=n]
BB8463 -> BB8466 [tailport=s, headport=n, color=gray]
BB8464 [shape=record label="{29062: read-variable['func',v30,-]|29063: read-variable['paths',v29,-]|29064: write-property[v30,'__ember_observes__',v29]|29065: \<variable-non-null-undef\>['func']*|29066: read-variable['func',v1,-]}" ] 
BB8464 -> BB8465 [tailport=s, headport=n, headlabel="      8465"]
BB8464 -> BB8466 [tailport=s, headport=n, color=gray]
BB8465 [shape=record label="{29067: return[v1]}" ] 
BB8466 [shape=record label="{29068: exceptional-return}" ] 
//#$~ 15232
}
