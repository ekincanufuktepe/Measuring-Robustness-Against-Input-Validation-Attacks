digraph {
rankdir="TD"
BB_entry120[shape=none,label=""];
BB_entry120 -> BB1419 [tailport=s, headport=n, headlabel="    1419"]
BB1419 [shape=record label="{4718: constant[undefined,v1]|4719: vardecl['event']|4720: vardecl['events']|4721: vardecl['handler']|4722: vardecl['list']|4723: vardecl['selector']}" ] 
BB1419 -> BB1420 [tailport=s, headport=n, headlabel="      1420"]
BB1420 [shape=record label="{4724: read-variable['Backbone',v3,-]|4725: read-property[v3,'utils',v2]|4726: \<variable-non-null-undef\>['Backbone']|4727: if[v2](true-block:1421,false-block:1423)}" ] 
BB1420 -> BB1421 [tailport=s, headport=n, headlabel="      1421"]
BB1420 -> BB1423 [tailport=s, headport=n, headlabel="      1423"]
BB1420 -> BB1448 [tailport=s, headport=n, color=gray, headlabel="      1448"]
BB1421 [shape=record label="{4728: read-variable['Backbone',v6,-]|4729: read-property[v6,'utils',v5]|4730: \<variable-non-null-undef\>['Backbone']|4731: read-property[v5,'undelegate',-]|4732: \<property-non-null-undef\>[v6,'utils']|4733: read-variable['this',v7,-]|4734: read-variable['eventName',v8,-]|4735: read-variable['second',v9,-]|4736: read-variable['third',v10,-]}" ] 
BB1421 -> BB1422 [tailport=s, headport=n, headlabel="      1422"]
BB1421 -> BB1448 [tailport=s, headport=n, color=gray]
BB1422 [shape=record label="{4737: call-Backbone.utils.undelegate [v5,'undelegate',v7,v8,v9,v10,v1]}" ] 
BB1422 -> BB1447 [tailport=s, headport=n, headlabel="      1447"]
BB1422 -> BB1448 [tailport=s, headport=n, color=gray]
BB1423 [shape=record label="{4738: read-variable['eventName',v4,-]|4739: if[v4](true-block:1424,false-block:1425)}" ] 
BB1423 -> BB1424 [tailport=s, headport=n, headlabel="      1424"]
BB1423 -> BB1425 [tailport=s, headport=n, headlabel="      1425"]
BB1423 -> BB1448 [tailport=s, headport=n, color=gray]
BB1424 [shape=record label="{4740: typeof['eventName',v6]|4741: constant[\"string\",v7]|4742: !==[v6,v7,v5]|4743: if[v5](true-block:1426,false-block:1429)}" ] 
BB1424 -> BB1426 [tailport=s, headport=n, headlabel="      1426"]
BB1424 -> BB1429 [tailport=s, headport=n, headlabel="      1429"]
BB1424 -> BB1448 [tailport=s, headport=n, color=gray]
BB1425 [shape=record label="{4744: read-variable['this',v7,-]|4745: read-property[v7,'$el',v6]|4746: read-property[v6,'off',-]|4747: \<property-non-null-undef\>[v7,'$el']|4748: constant[\".delegate\",v9]|4749: read-variable['this',v11,-]|4750: read-property[v11,'cid',v10]|4751: +[v9,v10,v8]}" ] 
BB1425 -> BB1446 [tailport=s, headport=n, headlabel="      1446"]
BB1425 -> BB1448 [tailport=s, headport=n, color=gray]
BB1426 [shape=record label="{4752: read-variable['TypeError',v9,-]|4753: constant[\"View#undelegate: first argument must be a string\",v10]}" ] 
BB1426 -> BB1427 [tailport=s, headport=n, headlabel="      1427"]
BB1426 -> BB1448 [tailport=s, headport=n, color=gray]
BB1427 [shape=record label="{4754: construct [-,v9,v10,v8]}" ] 
BB1427 -> BB1428 [tailport=s, headport=n, headlabel="      1428"]
BB1427 -> BB1448 [tailport=s, headport=n, color=gray]
BB1428 [shape=record label="{4755: throw[v8]*}" ] 
BB1428 -> BB1429 [tailport=s, headport=n]
BB1428 -> BB1448 [tailport=s, headport=n, color=gray]
BB1429 [shape=record label="{4756: read-variable['arguments',v11,-]|4757: read-property[v11,'length',v9]|4758: \<variable-non-null-undef\>['arguments']|4759: constant[2.0,v10]|4760: ===[v9,v10,v8]|4761: if[v8](true-block:1430,false-block:1431)}" ] 
BB1429 -> BB1430 [tailport=s, headport=n, headlabel="      1430"]
BB1429 -> BB1431 [tailport=s, headport=n, headlabel="      1431"]
BB1429 -> BB1448 [tailport=s, headport=n, color=gray]
BB1430 [shape=record label="{4762: typeof['second',v13]|4763: constant[\"string\",v14]|4764: ===[v13,v14,v12]|4765: if[v12](true-block:1432,false-block:1433)}" ] 
BB1430 -> BB1432 [tailport=s, headport=n, headlabel="      1432"]
BB1430 -> BB1433 [tailport=s, headport=n, headlabel="      1433"]
BB1430 -> BB1448 [tailport=s, headport=n, color=gray]
BB1431 [shape=record label="{4766: read-variable['arguments',v15,-]|4767: read-property[v15,'length',v13]|4768: \<variable-non-null-undef\>['arguments']|4769: constant[3.0,v14]|4770: ===[v13,v14,v12]|4771: if[v12](true-block:1434,false-block:1439)}" ] 
BB1431 -> BB1434 [tailport=s, headport=n, headlabel="      1434"]
BB1431 -> BB1439 [tailport=s, headport=n, headlabel="      1439"]
BB1431 -> BB1448 [tailport=s, headport=n, color=gray]
BB1432 [shape=record label="{4772: read-variable['second',v15,-]|4773: write-variable[v15,'selector']*}" ] 
BB1432 -> BB1439 [tailport=s, headport=n]
BB1432 -> BB1448 [tailport=s, headport=n, color=gray]
BB1433 [shape=record label="{4774: read-variable['second',v15,-]|4775: write-variable[v15,'handler']*}" ] 
BB1433 -> BB1439 [tailport=s, headport=n]
BB1433 -> BB1448 [tailport=s, headport=n, color=gray]
BB1434 [shape=record label="{4776: read-variable['second',v16,-]|4777: write-variable[v16,'selector']*|4778: typeof['selector',v18]|4779: constant[\"string\",v19]|4780: !==[v18,v19,v17]|4781: if[v17](true-block:1435,false-block:1438)}" ] 
BB1434 -> BB1435 [tailport=s, headport=n, headlabel="      1435"]
BB1434 -> BB1438 [tailport=s, headport=n, headlabel="      1438"]
BB1434 -> BB1448 [tailport=s, headport=n, color=gray]
BB1435 [shape=record label="{4782: read-variable['TypeError',v21,-]|4783: constant[\"View#undelegate: \",v23]|4784: constant[\"second argument must be a string\",v24]|4785: +[v23,v24,v22]}" ] 
BB1435 -> BB1436 [tailport=s, headport=n, headlabel="      1436"]
BB1435 -> BB1448 [tailport=s, headport=n, color=gray]
BB1436 [shape=record label="{4786: construct [-,v21,v22,v20]}" ] 
BB1436 -> BB1437 [tailport=s, headport=n, headlabel="      1437"]
BB1436 -> BB1448 [tailport=s, headport=n, color=gray]
BB1437 [shape=record label="{4787: throw[v20]*}" ] 
BB1437 -> BB1438 [tailport=s, headport=n]
BB1437 -> BB1448 [tailport=s, headport=n, color=gray]
BB1438 [shape=record label="{4788: read-variable['third',v20,-]|4789: write-variable[v20,'handler']*}" ] 
BB1438 -> BB1439 [tailport=s, headport=n]
BB1438 -> BB1448 [tailport=s, headport=n, color=gray]
BB1439 [shape=record label="{4790: function-expr[function ( ),v14]|4791: read-property[v14,'call',-]|4792: read-variable['this',v15,-]}" ] 
BB1439 -> BB1440 [tailport=s, headport=n, headlabel="      1440"]
BB1439 -> BB1448 [tailport=s, headport=n, color=gray]
BB1440 [shape=record label="{4793: call-null [v14,'call',v15,v12]}" ] 
BB1440 -> BB1441 [tailport=s, headport=n, headlabel="      1441"]
BB1440 -> BB1448 [tailport=s, headport=n, color=gray]
BB1441 [shape=record label="{4794: write-variable[v12,'list']*|4795: read-variable['list',v18,-]|4796: read-property[v18,'join',-]|4797: \<variable-non-null-undef\>['list']|4798: constant[\" \",v19]}" ] 
BB1441 -> BB1442 [tailport=s, headport=n, headlabel="      1442"]
BB1441 -> BB1448 [tailport=s, headport=n, color=gray]
BB1442 [shape=record label="{4799: call-list.join [v18,'join',v19,v16]}" ] 
BB1442 -> BB1443 [tailport=s, headport=n, headlabel="      1443"]
BB1442 -> BB1448 [tailport=s, headport=n, color=gray]
BB1443 [shape=record label="{4800: write-variable[v16,'events']*|4801: read-variable['this',v22,-]|4802: read-property[v22,'$el',v21]|4803: read-property[v21,'off',-]|4804: \<property-non-null-undef\>[v22,'$el']|4805: read-variable['events',v23,-]|4806: read-variable['selector',v24,-]|4807: if[v24](true-block:1445,false-block:1444)}" ] 
BB1443 -> BB1445 [tailport=s, headport=n, headlabel="      1445"]
BB1443 -> BB1444 [tailport=s, headport=n, headlabel="      1444"]
BB1443 -> BB1448 [tailport=s, headport=n, color=gray]
BB1444 [shape=record label="{4808: constant[null,v24]}" ] 
BB1444 -> BB1445 [tailport=s, headport=n]
BB1445 [shape=record label="{4809: call-this.$el.off [v21,'off',v23,v24,v1]}" ] 
BB1445 -> BB1447 [tailport=s, headport=n]
BB1445 -> BB1448 [tailport=s, headport=n, color=gray]
BB1446 [shape=record label="{4810: call-this.$el.off [v6,'off',v8,v1]}" ] 
BB1446 -> BB1447 [tailport=s, headport=n]
BB1446 -> BB1448 [tailport=s, headport=n, color=gray]
BB1447 [shape=record label="{4811: return[v1]}" ] 
BB1448 [shape=record label="{4812: exceptional-return}" ] 
//#$~ 1315
}
