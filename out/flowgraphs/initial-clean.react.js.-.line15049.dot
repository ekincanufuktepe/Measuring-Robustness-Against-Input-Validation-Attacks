digraph {
rankdir="TD"
BB_entry636[shape=none,label=""];
BB_entry636 -> BB8606 [tailport=s, headport=n, headlabel="    8606"]
BB8606 [shape=record label="{28410: constant[undefined,v1]}" ] 
BB8606 -> BB8607 [tailport=s, headport=n, headlabel="      8607"]
BB8607 [shape=record label="{28411: constant[\"production\",v3]|28412: constant[\"development\",v4]|28413: !==[v3,v4,v2]|28414: if[v2](true-block:8608,false-block:8609)}" ] 
BB8607 -> BB8608 [tailport=s, headport=n, headlabel="      8608"]
BB8607 -> BB8609 [tailport=s, headport=n, headlabel="      8609"]
BB8607 -> BB8624 [tailport=s, headport=n, color=gray, headlabel="      8624"]
BB8608 [shape=record label="{28415: read-variable['invariant',v6,v5]|28416: read-variable['_batchingStrategy',v7,-]|28417: constant[\"ReactUpdates: must provide a batching strategy\",v8]}" ] 
BB8608 -> BB8610 [tailport=s, headport=n, headlabel="      8610"]
BB8608 -> BB8624 [tailport=s, headport=n, color=gray]
BB8609 [shape=record label="{28418: read-variable['invariant',v6,v5]|28419: read-variable['_batchingStrategy',v7,-]}" ] 
BB8609 -> BB8611 [tailport=s, headport=n, headlabel="      8611"]
BB8609 -> BB8624 [tailport=s, headport=n, color=gray]
BB8610 [shape=record label="{28420: call-invariant [v5,v6,v7,v8,-]}" ] 
BB8610 -> BB8612 [tailport=s, headport=n, headlabel="      8612"]
BB8610 -> BB8624 [tailport=s, headport=n, color=gray]
BB8611 [shape=record label="{28421: call-invariant [v5,v6,v7,-]}" ] 
BB8611 -> BB8612 [tailport=s, headport=n]
BB8611 -> BB8624 [tailport=s, headport=n, color=gray]
BB8612 [shape=record label="{28422: constant[\"production\",v6]|28423: constant[\"development\",v7]|28424: !==[v6,v7,v5]|28425: if[v5](true-block:8613,false-block:8614)}" ] 
BB8612 -> BB8613 [tailport=s, headport=n, headlabel="      8613"]
BB8612 -> BB8614 [tailport=s, headport=n, headlabel="      8614"]
BB8612 -> BB8624 [tailport=s, headport=n, color=gray]
BB8613 [shape=record label="{28426: read-variable['invariant',v9,v8]|28427: read-variable['_batchingStrategy',v14,-]|28428: read-property[v14,'batchedUpdates',v13]|28429: \<variable-non-null-undef\>['_batchingStrategy']|28430: typeof[v13,v11]|28431: constant[\"function\",v12]|28432: ===[v11,v12,v10]|28433: constant[\"ReactUpdates: must provide a batchedUpdates() function\",v15]}" ] 
BB8613 -> BB8615 [tailport=s, headport=n, headlabel="      8615"]
BB8613 -> BB8624 [tailport=s, headport=n, color=gray]
BB8614 [shape=record label="{28434: read-variable['invariant',v9,v8]|28435: read-variable['_batchingStrategy',v14,-]|28436: read-property[v14,'batchedUpdates',v13]|28437: \<variable-non-null-undef\>['_batchingStrategy']|28438: typeof[v13,v11]|28439: constant[\"function\",v12]|28440: ===[v11,v12,v10]}" ] 
BB8614 -> BB8616 [tailport=s, headport=n, headlabel="      8616"]
BB8614 -> BB8624 [tailport=s, headport=n, color=gray]
BB8615 [shape=record label="{28441: call-invariant [v8,v9,v10,v15,-]}" ] 
BB8615 -> BB8617 [tailport=s, headport=n, headlabel="      8617"]
BB8615 -> BB8624 [tailport=s, headport=n, color=gray]
BB8616 [shape=record label="{28442: call-invariant [v8,v9,v10,-]}" ] 
BB8616 -> BB8617 [tailport=s, headport=n]
BB8616 -> BB8624 [tailport=s, headport=n, color=gray]
BB8617 [shape=record label="{28443: constant[\"production\",v9]|28444: constant[\"development\",v10]|28445: !==[v9,v10,v8]|28446: if[v8](true-block:8618,false-block:8619)}" ] 
BB8617 -> BB8618 [tailport=s, headport=n, headlabel="      8618"]
BB8617 -> BB8619 [tailport=s, headport=n, headlabel="      8619"]
BB8617 -> BB8624 [tailport=s, headport=n, color=gray]
BB8618 [shape=record label="{28447: read-variable['invariant',v12,v11]|28448: read-variable['_batchingStrategy',v17,-]|28449: read-property[v17,'isBatchingUpdates',v16]|28450: \<variable-non-null-undef\>['_batchingStrategy']|28451: typeof[v16,v14]|28452: constant[\"boolean\",v15]|28453: ===[v14,v15,v13]|28454: constant[\"ReactUpdates: must provide an isBatchingUpdates boolean attribute\",v18]}" ] 
BB8618 -> BB8620 [tailport=s, headport=n, headlabel="      8620"]
BB8618 -> BB8624 [tailport=s, headport=n, color=gray]
BB8619 [shape=record label="{28455: read-variable['invariant',v12,v11]|28456: read-variable['_batchingStrategy',v17,-]|28457: read-property[v17,'isBatchingUpdates',v16]|28458: \<variable-non-null-undef\>['_batchingStrategy']|28459: typeof[v16,v14]|28460: constant[\"boolean\",v15]|28461: ===[v14,v15,v13]}" ] 
BB8619 -> BB8621 [tailport=s, headport=n, headlabel="      8621"]
BB8619 -> BB8624 [tailport=s, headport=n, color=gray]
BB8620 [shape=record label="{28462: call-invariant [v11,v12,v13,v18,-]}" ] 
BB8620 -> BB8622 [tailport=s, headport=n, headlabel="      8622"]
BB8620 -> BB8624 [tailport=s, headport=n, color=gray]
BB8621 [shape=record label="{28463: call-invariant [v11,v12,v13,-]}" ] 
BB8621 -> BB8622 [tailport=s, headport=n]
BB8621 -> BB8624 [tailport=s, headport=n, color=gray]
BB8622 [shape=record label="{28464: read-variable['_batchingStrategy',v11,-]|28465: write-variable[v11,'batchingStrategy']*}" ] 
BB8622 -> BB8623 [tailport=s, headport=n, headlabel="      8623"]
BB8622 -> BB8624 [tailport=s, headport=n, color=gray]
BB8623 [shape=record label="{28466: return[v1]}" ] 
BB8624 [shape=record label="{28467: exceptional-return}" ] 
//#$~ 15062
}
