digraph {
rankdir="TD"
BB_entry213[shape=none,label=""];
BB_entry213 -> BB2730 [tailport=s, headport=n, headlabel="    2730"]
BB2730 [shape=record label="{8069: constant[undefined,v1]|8070: vardecl['v']|8071: vardecl['prefix']|8072: vardecl['suffix']|8073: vardecl['min']|8074: vardecl['max']}" ] 
BB2730 -> BB2731 [tailport=s, headport=n, headlabel="      2731"]
BB2731 [shape=record label="{8075: read-variable['parseFloat',v4,v3]|8076: read-variable['r',v9,-]|8077: read-property[v9,'val',-]|8078: \<variable-non-null-undef\>['r']}" ] 
BB2731 -> BB2732 [tailport=s, headport=n, headlabel="      2732"]
BB2731 -> BB2752 [tailport=s, headport=n, color=gray, headlabel="      2752"]
BB2732 [shape=record label="{8079: call-r.val [v9,'val',v7]}" ] 
BB2732 -> BB2733 [tailport=s, headport=n, headlabel="      2733"]
BB2732 -> BB2752 [tailport=s, headport=n, color=gray]
BB2733 [shape=record label="{8080: read-property[v7,'replace',-]|8081: read-variable['RegExp',v11,-]|8082: constant[\"[^\\\\d\\\\.]\",v12]|8083: constant[\"g\",v13]}" ] 
BB2733 -> BB2734 [tailport=s, headport=n, headlabel="      2734"]
BB2733 -> BB2752 [tailport=s, headport=n, color=gray]
BB2734 [shape=record label="{8084: construct [-,v11,v12,v13,v10]}" ] 
BB2734 -> BB2735 [tailport=s, headport=n, headlabel="      2735"]
BB2734 -> BB2752 [tailport=s, headport=n, color=gray]
BB2735 [shape=record label="{8085: constant[\"\",v14]}" ] 
BB2735 -> BB2736 [tailport=s, headport=n, headlabel="      2736"]
BB2736 [shape=record label="{8086: call-null [v7,'replace',v10,v14,v5]}" ] 
BB2736 -> BB2737 [tailport=s, headport=n, headlabel="      2737"]
BB2736 -> BB2752 [tailport=s, headport=n, color=gray]
BB2737 [shape=record label="{8087: call-parseFloat [v3,v4,v5,v2]}" ] 
BB2737 -> BB2738 [tailport=s, headport=n, headlabel="      2738"]
BB2737 -> BB2752 [tailport=s, headport=n, color=gray]
BB2738 [shape=record label="{8088: write-variable[v2,'v']*|8089: read-variable['r',v17,-]|8090: read-property[v17,'args',v16]|8091: \<variable-non-null-undef\>['r']|8092: constant[2.0,v18]|8093: read-property[v16,v18,v15]|8094: \<property-non-null-undef\>[v17,'args']|8095: if[v15](true-block:2740,false-block:2739)}" ] 
BB2738 -> BB2740 [tailport=s, headport=n, headlabel="      2740"]
BB2738 -> BB2739 [tailport=s, headport=n, headlabel="      2739"]
BB2738 -> BB2752 [tailport=s, headport=n, color=gray]
BB2739 [shape=record label="{8096: constant[\"\",v15]}" ] 
BB2739 -> BB2740 [tailport=s, headport=n]
BB2740 [shape=record label="{8097: write-variable[v15,'prefix']*|8098: read-variable['r',v18,-]|8099: read-property[v18,'args',v17]|8100: \<variable-non-null-undef\>['r']|8101: constant[3.0,v19]|8102: read-property[v17,v19,v16]|8103: \<property-non-null-undef\>[v18,'args']|8104: if[v16](true-block:2742,false-block:2741)}" ] 
BB2740 -> BB2742 [tailport=s, headport=n, headlabel="      2742"]
BB2740 -> BB2741 [tailport=s, headport=n, headlabel="      2741"]
BB2740 -> BB2752 [tailport=s, headport=n, color=gray]
BB2741 [shape=record label="{8105: constant[\"\",v16]}" ] 
BB2741 -> BB2742 [tailport=s, headport=n]
BB2742 [shape=record label="{8106: write-variable[v16,'suffix']*|8107: read-variable['parseFloat',v19,v18]|8108: read-variable['r',v22,-]|8109: read-property[v22,'args',v21]|8110: \<variable-non-null-undef\>['r']|8111: constant[0.0,v23]|8112: read-property[v21,v23,v20]|8113: \<property-non-null-undef\>[v22,'args']}" ] 
BB2742 -> BB2743 [tailport=s, headport=n, headlabel="      2743"]
BB2742 -> BB2752 [tailport=s, headport=n, color=gray]
BB2743 [shape=record label="{8114: call-parseFloat [v18,v19,v20,v17]}" ] 
BB2743 -> BB2744 [tailport=s, headport=n, headlabel="      2744"]
BB2743 -> BB2752 [tailport=s, headport=n, color=gray]
BB2744 [shape=record label="{8115: write-variable[v17,'min']*|8116: read-variable['parseFloat',v26,v25]|8117: read-variable['r',v29,-]|8118: read-property[v29,'args',v28]|8119: \<variable-non-null-undef\>['r']|8120: constant[1.0,v30]|8121: read-property[v28,v30,v27]|8122: \<property-non-null-undef\>[v29,'args']}" ] 
BB2744 -> BB2745 [tailport=s, headport=n, headlabel="      2745"]
BB2744 -> BB2752 [tailport=s, headport=n, color=gray]
BB2745 [shape=record label="{8123: call-parseFloat [v25,v26,v27,v24]}" ] 
BB2745 -> BB2746 [tailport=s, headport=n, headlabel="      2746"]
BB2745 -> BB2752 [tailport=s, headport=n, color=gray]
BB2746 [shape=record label="{8124: write-variable[v24,'max']*|8125: read-variable['v',v32,-]|8126: read-variable['max',v33,-]|8127: \>[v32,v33,v31]|8128: if[v31](true-block:2748,false-block:2747)}" ] 
BB2746 -> BB2748 [tailport=s, headport=n, headlabel="      2748"]
BB2746 -> BB2747 [tailport=s, headport=n, headlabel="      2747"]
BB2746 -> BB2752 [tailport=s, headport=n, color=gray]
BB2747 [shape=record label="{8129: read-variable['v',v32,-]|8130: read-variable['min',v33,-]|8131: \<[v32,v33,v31]}" ] 
BB2747 -> BB2748 [tailport=s, headport=n]
BB2747 -> BB2752 [tailport=s, headport=n, color=gray]
BB2748 [shape=record label="{8132: if[v31](true-block:2749,false-block:2750)}" ] 
BB2748 -> BB2749 [tailport=s, headport=n, headlabel="      2749"]
BB2748 -> BB2750 [tailport=s, headport=n, headlabel="      2750"]
BB2749 [shape=record label="{8133: constant[\"Must be between \",v44]|8134: read-variable['prefix',v45,-]|8135: +[v44,v45,v42]|8136: read-variable['min',v43,-]|8137: +[v42,v43,v40]|8138: read-variable['suffix',v41,-]|8139: +[v40,v41,v38]|8140: constant[\"\\nand \",v39]|8141: +[v38,v39,v36]|8142: read-variable['prefix',v37,-]|8143: +[v36,v37,v34]|8144: read-variable['max',v35,-]|8145: +[v34,v35,v32]|8146: read-variable['suffix',v33,-]|8147: +[v32,v33,v1]}" ] 
BB2749 -> BB2751 [tailport=s, headport=n, headlabel="      2751"]
BB2749 -> BB2752 [tailport=s, headport=n, color=gray]
BB2750 [shape=record label="{8148: constant[true,v1]}" ] 
BB2750 -> BB2751 [tailport=s, headport=n]
BB2751 [shape=record label="{8149: return[v1]}" ] 
BB2752 [shape=record label="{8150: exceptional-return}" ] 
//#$~ 2484
}
