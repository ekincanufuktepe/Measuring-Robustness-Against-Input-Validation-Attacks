digraph {
rankdir="TD"
BB_entry66[shape=none,label=""];
BB_entry66 -> BB801 [tailport=s, headport=n, headlabel="    801"]
BB801 [shape=record label="{2344: constant[undefined,v1]|2345: vardecl['matchesMethod']|2346: function-decl[function match ( elem selector ),-]|2347: function-decl[function checkParent ( elem ),-]|2348: function-decl[function query ( elem selector ),-]|2349: function-decl[function matchChild ( elem selector ),-]|2350: vardecl['matchesSelector']|2351: vardecl['div']|2352: vardecl['supportsOrphans']}" ] 
BB801 -> BB802 [tailport=s, headport=n, headlabel="      802"]
BB802 [shape=record label="{2353: function-expr[function ( ),v3]}" ] 
BB802 -> BB803 [tailport=s, headport=n, headlabel="      803"]
BB803 [shape=record label="{2354: call-null [-,v3,v2]}" ] 
BB803 -> BB804 [tailport=s, headport=n, headlabel="      804"]
BB803 -> BB825 [tailport=s, headport=n, color=gray, headlabel="      825"]
BB804 [shape=record label="{2355: write-variable[v2,'matchesMethod']*|2356: read-variable['matchesMethod',v4,-]|2357: if[v4](true-block:805,false-block:806)}" ] 
BB804 -> BB805 [tailport=s, headport=n, headlabel="      805"]
BB804 -> BB806 [tailport=s, headport=n, headlabel="      806"]
BB804 -> BB825 [tailport=s, headport=n, color=gray]
BB805 [shape=record label="{2358: read-variable['document',v7,-]|2359: read-property[v7,'createElement',-]|2360: \<variable-non-null-undef\>['document']|2361: constant[\"div\",v8]}" ] 
BB805 -> BB807 [tailport=s, headport=n, headlabel="      807"]
BB805 -> BB825 [tailport=s, headport=n, color=gray]
BB806 [shape=record label="{2362: read-variable['query',v5,-]|2363: write-variable[v5,'matchesSelector']*}" ] 
BB806 -> BB814 [tailport=s, headport=n, headlabel="      814"]
BB806 -> BB825 [tailport=s, headport=n, color=gray]
BB807 [shape=record label="{2364: call-document.createElement [v7,'createElement',v8,v5]}" ] 
BB807 -> BB808 [tailport=s, headport=n, headlabel="      808"]
BB807 -> BB825 [tailport=s, headport=n, color=gray]
BB808 [shape=record label="{2365: write-variable[v5,'div']*|2366: read-variable['match',v11,v10]|2367: read-variable['div',v12,-]|2368: constant[\"div\",v13]}" ] 
BB808 -> BB809 [tailport=s, headport=n, headlabel="      809"]
BB808 -> BB825 [tailport=s, headport=n, color=gray]
BB809 [shape=record label="{2369: call-match [v10,v11,v12,v13,v9]}" ] 
BB809 -> BB810 [tailport=s, headport=n, headlabel="      810"]
BB809 -> BB825 [tailport=s, headport=n, color=gray]
BB810 [shape=record label="{2370: write-variable[v9,'supportsOrphans']*|2371: read-variable['supportsOrphans',v15,-]|2372: if[v15](true-block:811,false-block:812)}" ] 
BB810 -> BB811 [tailport=s, headport=n, headlabel="      811"]
BB810 -> BB812 [tailport=s, headport=n, headlabel="      812"]
BB810 -> BB825 [tailport=s, headport=n, color=gray]
BB811 [shape=record label="{2373: read-variable['match',v14,-]}" ] 
BB811 -> BB813 [tailport=s, headport=n, headlabel="      813"]
BB811 -> BB825 [tailport=s, headport=n, color=gray]
BB812 [shape=record label="{2374: read-variable['matchChild',v14,-]}" ] 
BB812 -> BB813 [tailport=s, headport=n]
BB812 -> BB825 [tailport=s, headport=n, color=gray]
BB813 [shape=record label="{2375: write-variable[v14,'matchesSelector']*}" ] 
BB813 -> BB814 [tailport=s, headport=n]
BB814 [shape=record label="{2376: typeof['define',v6]|2377: constant[\"function\",v7]|2378: ===[v6,v7,v5]|2379: if[v5](true-block:815,false-block:816)}" ] 
BB814 -> BB816 [tailport=s, headport=n, headlabel="      816"]
BB814 -> BB815 [tailport=s, headport=n, headlabel="      815"]
BB814 -> BB825 [tailport=s, headport=n, color=gray]
BB815 [shape=record label="{2380: read-variable['define',v8,-]|2381: read-property[v8,'amd',v5]|2382: \<variable-non-null-undef\>['define']}" ] 
BB815 -> BB816 [tailport=s, headport=n]
BB815 -> BB825 [tailport=s, headport=n, color=gray]
BB816 [shape=record label="{2383: if[v5](true-block:817,false-block:818)}" ] 
BB816 -> BB817 [tailport=s, headport=n, headlabel="      817"]
BB816 -> BB818 [tailport=s, headport=n, headlabel="      818"]
BB817 [shape=record label="{2384: read-variable['define',v9,v8]|2385: constant[\"matches-selector/matches-selector\",v10]|2386: read-variable['Array',v12,-]}" ] 
BB817 -> BB819 [tailport=s, headport=n, headlabel="      819"]
BB817 -> BB825 [tailport=s, headport=n, color=gray]
BB818 [shape=record label="{2387: typeof['exports',v9]|2388: constant[\"object\",v10]|2389: ===[v9,v10,v8]|2390: if[v8](true-block:822,false-block:823)}" ] 
BB818 -> BB822 [tailport=s, headport=n, headlabel="      822"]
BB818 -> BB823 [tailport=s, headport=n, headlabel="      823"]
BB818 -> BB825 [tailport=s, headport=n, color=gray]
BB819 [shape=record label="{2391: construct [-,v12,v11]}" ] 
BB819 -> BB820 [tailport=s, headport=n, headlabel="      820"]
BB819 -> BB825 [tailport=s, headport=n, color=gray]
BB820 [shape=record label="{2392: function-expr[function ( ),v13]}" ] 
BB820 -> BB821 [tailport=s, headport=n, headlabel="      821"]
BB821 [shape=record label="{2393: call-define [v8,v9,v10,v11,v13,-]*}" ] 
BB821 -> BB824 [tailport=s, headport=n, headlabel="      824"]
BB821 -> BB825 [tailport=s, headport=n, color=gray]
BB822 [shape=record label="{2394: read-variable['module',v12,-]|2395: read-variable['matchesSelector',v11,-]|2396: write-property[v12,'exports',v11]|2397: \<variable-non-null-undef\>['module']*}" ] 
BB822 -> BB824 [tailport=s, headport=n]
BB822 -> BB825 [tailport=s, headport=n, color=gray]
BB823 [shape=record label="{2398: read-variable['window',v12,-]|2399: read-variable['matchesSelector',v11,-]|2400: write-property[v12,'matchesSelector',v11]|2401: \<variable-non-null-undef\>['window']*}" ] 
BB823 -> BB824 [tailport=s, headport=n]
BB823 -> BB825 [tailport=s, headport=n, color=gray]
BB824 [shape=record label="{2402: return[v1]}" ] 
BB825 [shape=record label="{2403: exceptional-return}" ] 
//#$~ 1198
}
