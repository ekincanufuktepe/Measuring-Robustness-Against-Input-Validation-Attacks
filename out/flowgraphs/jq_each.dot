digraph {
compound=true
subgraph cluster0 {
label="<main> function ( )\njquery/jq_each.js:1:1";
labelloc="t";
fontsize=18;
rankdir="TD"
BB_entry0[shape=none,label=""];
BB_entry0 -> BB0 [tailport=s, headport=n, headlabel="    0"]
BB0 [shape=record label="{0: constant[undefined,v1]|1: function-decl[function jq_each ( obj callback args ),-]}" ] 
BB0 -> BB1 [tailport=s, headport=n, headlabel="      1"]
BB1 [shape=record label="{2: return[v1]}" ] 
BB2 [shape=record label="{3: exceptional-return}" ] 
}
subgraph cluster1 {
label="function jq_each ( obj callback args )\njquery/jq_each.js:1:1\nouter: <main>";
labelloc="t";
fontsize=18;
rankdir="TD"
BB_entry1[shape=none,label=""];
BB_entry1 -> BB3 [tailport=s, headport=n, headlabel="    3"]
BB3 [shape=record label="{4: constant[undefined,v1]|5: vardecl['value']|6: vardecl['i']|7: vardecl['length']|8: vardecl['isArray']}" ] 
BB3 -> BB4 [tailport=s, headport=n, headlabel="      4"]
BB4 [shape=record label="{9: constant[0.0,v2]|10: write-variable[v2,'i']*|11: read-variable['obj',v4,-]|12: read-property[v4,'length',v3]|13: \<variable-non-null-undef\>['obj']|14: write-variable[v3,'length']*|15: read-variable['isArraylike',v7,v6]|16: read-variable['obj',v8,-]}" ] 
BB4 -> BB5 [tailport=s, headport=n, headlabel="      5"]
BB4 -> BB35 [tailport=s, headport=n, color=gray, headlabel="      35"]
BB5 [shape=record label="{17: call[v6,v7,v8,v5]}" ] 
BB5 -> BB6 [tailport=s, headport=n, headlabel="      6"]
BB5 -> BB35 [tailport=s, headport=n, color=gray]
BB6 [shape=record label="{18: write-variable[v5,'isArray']*|19: read-variable['args',v9,-]|20: if[v9](true-block:7,false-block:8)}" ] 
BB6 -> BB7 [tailport=s, headport=n, headlabel="      7"]
BB6 -> BB8 [tailport=s, headport=n, headlabel="      8"]
BB6 -> BB35 [tailport=s, headport=n, color=gray]
BB7 [shape=record label="{21: read-variable['isArray',v10,-]|22: if[v10](true-block:10,false-block:9)}" ] 
BB7 -> BB10 [tailport=s, headport=n, headlabel="      10"]
BB7 -> BB9 [tailport=s, headport=n, headlabel="      9"]
BB7 -> BB35 [tailport=s, headport=n, color=gray]
BB8 [shape=record label="{23: read-variable['isArray',v10,-]|24: if[v10](true-block:22,false-block:21)}" ] 
BB8 -> BB22 [tailport=s, headport=n, headlabel="      22"]
BB8 -> BB21 [tailport=s, headport=n, headlabel="      21"]
BB8 -> BB35 [tailport=s, headport=n, color=gray]
BB9 [shape=record label="{25: read-variable['obj',v12,-]}" ] 
BB9 -> BB15 [tailport=s, headport=n, headlabel="      15"]
BB9 -> BB35 [tailport=s, headport=n, color=gray]
BB10 [shape=record label="{26: read-variable['i',v12,-]|27: read-variable['length',v13,-]|28: \<[v12,v13,v11]|29: if[v11](true-block:11,false-block:33)}" ] 
BB10 -> BB11 [tailport=s, headport=n, headlabel="      11"]
BB10 -> BB33 [tailport=s, headport=n, headlabel="      33"]
BB10 -> BB35 [tailport=s, headport=n, color=gray]
BB11 [shape=record label="{30: read-variable['callback',v16,-]|31: read-property[v16,'apply',-]|32: \<variable-non-null-undef\>['callback']|33: read-variable['obj',v18,-]|34: read-variable['i',v19,-]|35: read-property[v18,v19,v17]|36: \<variable-non-null-undef\>['obj']|37: read-variable['args',v20,-]}" ] 
BB11 -> BB12 [tailport=s, headport=n, headlabel="      12"]
BB11 -> BB35 [tailport=s, headport=n, color=gray]
BB12 [shape=record label="{38: call[v16,'apply',v17,v20,v14]}" ] 
BB12 -> BB13 [tailport=s, headport=n, headlabel="      13"]
BB12 -> BB35 [tailport=s, headport=n, color=gray]
BB13 [shape=record label="{39: write-variable[v14,'value']*|40: read-variable['value',v22,-]|41: constant[false,v23]|42: ===[v22,v23,v21]|43: if[v21](true-block:33,false-block:14)}" ] 
BB13 -> BB33 [tailport=s, headport=n]
BB13 -> BB14 [tailport=s, headport=n, headlabel="      14"]
BB13 -> BB35 [tailport=s, headport=n, color=gray]
BB14 [shape=record label="{44: constant[1.0,v24]|45: read-variable['i',v25,-]|46: +[v25,v26]|47: +[v26,v24,v27]|48: write-variable[v27,'i']}" ] 
BB14 -> BB10 [tailport=s, headport=n]
BB14 -> BB35 [tailport=s, headport=n, color=gray]
BB15 [shape=record label="{49: begin-for-in[v12,v13]}" ] 
BB15 -> BB16 [tailport=s, headport=n, headlabel="      16"]
BB15 -> BB35 [tailport=s, headport=n, color=gray]
BB16 [shape=record label="{50: has-next[v13,v14]|51: if[v14](true-block:17,false-block:33)}" ] 
BB16 -> BB17 [tailport=s, headport=n, headlabel="      17"]
BB16 -> BB33 [tailport=s, headport=n]
BB17 [shape=record label="{52: next-property[v13,v15]|53: write-variable[v15,'i']|54: read-variable['callback',v18,-]|55: read-property[v18,'apply',-]|56: \<variable-non-null-undef\>['callback']|57: read-variable['obj',v20,-]|58: read-variable['i',v21,-]|59: read-property[v20,v21,v19]|60: \<variable-non-null-undef\>['obj']|61: read-variable['args',v22,-]}" ] 
BB17 -> BB18 [tailport=s, headport=n, headlabel="      18"]
BB17 -> BB35 [tailport=s, headport=n, color=gray]
BB18 [shape=record label="{62: call[v18,'apply',v19,v22,v16]}" ] 
BB18 -> BB19 [tailport=s, headport=n, headlabel="      19"]
BB18 -> BB35 [tailport=s, headport=n, color=gray]
BB19 [shape=record label="{63: write-variable[v16,'value']*|64: read-variable['value',v24,-]|65: constant[false,v25]|66: ===[v24,v25,v23]|67: if[v23](true-block:33,false-block:20)}" ] 
BB19 -> BB33 [tailport=s, headport=n]
BB19 -> BB20 [tailport=s, headport=n, headlabel="      20"]
BB19 -> BB35 [tailport=s, headport=n, color=gray]
BB20 [shape=record label="{68: end-for-in(begin-node:49)}" ] 
BB20 -> BB16 [tailport=s, headport=n]
BB21 [shape=record label="{69: read-variable['obj',v12,-]}" ] 
BB21 -> BB27 [tailport=s, headport=n, headlabel="      27"]
BB21 -> BB35 [tailport=s, headport=n, color=gray]
BB22 [shape=record label="{70: read-variable['i',v12,-]|71: read-variable['length',v13,-]|72: \<[v12,v13,v11]|73: if[v11](true-block:23,false-block:33)}" ] 
BB22 -> BB23 [tailport=s, headport=n, headlabel="      23"]
BB22 -> BB33 [tailport=s, headport=n]
BB22 -> BB35 [tailport=s, headport=n, color=gray]
BB23 [shape=record label="{74: read-variable['callback',v16,-]|75: read-property[v16,'call',-]|76: \<variable-non-null-undef\>['callback']|77: read-variable['obj',v18,-]|78: read-variable['i',v19,-]|79: read-property[v18,v19,v17]|80: \<variable-non-null-undef\>['obj']|81: read-variable['i',v20,-]|82: read-variable['obj',v22,-]|83: read-variable['i',v23,-]|84: read-property[v22,v23,v21]|85: \<variable-non-null-undef\>['obj']}" ] 
BB23 -> BB24 [tailport=s, headport=n, headlabel="      24"]
BB23 -> BB35 [tailport=s, headport=n, color=gray]
BB24 [shape=record label="{86: call[v16,'call',v17,v20,v21,v14]}" ] 
BB24 -> BB25 [tailport=s, headport=n, headlabel="      25"]
BB24 -> BB35 [tailport=s, headport=n, color=gray]
BB25 [shape=record label="{87: write-variable[v14,'value']*|88: read-variable['value',v25,-]|89: constant[false,v26]|90: ===[v25,v26,v24]|91: if[v24](true-block:33,false-block:26)}" ] 
BB25 -> BB33 [tailport=s, headport=n]
BB25 -> BB26 [tailport=s, headport=n, headlabel="      26"]
BB25 -> BB35 [tailport=s, headport=n, color=gray]
BB26 [shape=record label="{92: constant[1.0,v27]|93: read-variable['i',v28,-]|94: +[v28,v29]|95: +[v29,v27,v30]|96: write-variable[v30,'i']}" ] 
BB26 -> BB22 [tailport=s, headport=n]
BB26 -> BB35 [tailport=s, headport=n, color=gray]
BB27 [shape=record label="{97: begin-for-in[v12,v13]}" ] 
BB27 -> BB28 [tailport=s, headport=n, headlabel="      28"]
BB27 -> BB35 [tailport=s, headport=n, color=gray]
BB28 [shape=record label="{98: has-next[v13,v14]|99: if[v14](true-block:29,false-block:33)}" ] 
BB28 -> BB29 [tailport=s, headport=n, headlabel="      29"]
BB28 -> BB33 [tailport=s, headport=n]
BB29 [shape=record label="{100: next-property[v13,v15]|101: write-variable[v15,'i']|102: read-variable['callback',v18,-]|103: read-property[v18,'call',-]|104: \<variable-non-null-undef\>['callback']|105: read-variable['obj',v20,-]|106: read-variable['i',v21,-]|107: read-property[v20,v21,v19]|108: \<variable-non-null-undef\>['obj']|109: read-variable['i',v22,-]|110: read-variable['obj',v24,-]|111: read-variable['i',v25,-]|112: read-property[v24,v25,v23]|113: \<variable-non-null-undef\>['obj']}" ] 
BB29 -> BB30 [tailport=s, headport=n, headlabel="      30"]
BB29 -> BB35 [tailport=s, headport=n, color=gray]
BB30 [shape=record label="{114: call[v18,'call',v19,v22,v23,v16]}" ] 
BB30 -> BB31 [tailport=s, headport=n, headlabel="      31"]
BB30 -> BB35 [tailport=s, headport=n, color=gray]
BB31 [shape=record label="{115: write-variable[v16,'value']*|116: read-variable['value',v27,-]|117: constant[false,v28]|118: ===[v27,v28,v26]|119: if[v26](true-block:33,false-block:32)}" ] 
BB31 -> BB33 [tailport=s, headport=n]
BB31 -> BB32 [tailport=s, headport=n, headlabel="      32"]
BB31 -> BB35 [tailport=s, headport=n, color=gray]
BB32 [shape=record label="{120: end-for-in(begin-node:97)}" ] 
BB32 -> BB28 [tailport=s, headport=n]
BB33 [shape=record label="{121: read-variable['obj',v1,-]}" ] 
BB33 -> BB34 [tailport=s, headport=n, headlabel="      34"]
BB33 -> BB35 [tailport=s, headport=n, color=gray]
BB34 [shape=record label="{122: return[v1]}" ] 
BB35 [shape=record label="{123: exceptional-return}" ] 
}
}
