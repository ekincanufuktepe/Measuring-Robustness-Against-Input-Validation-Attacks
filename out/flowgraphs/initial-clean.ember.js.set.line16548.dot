digraph {
rankdir="TD"
BB_entry787[shape=none,label=""];
BB_entry787 -> BB9361 [tailport=s, headport=n, headlabel="    9361"]
BB9361 [shape=record label="{32175: constant[undefined,v1]|32176: vardecl['meta']|32177: vardecl['desc']|32178: vardecl['isUnknown']|32179: vardecl['currentValue']}" ] 
BB9361 -> BB9362 [tailport=s, headport=n, headlabel="      9362"]
BB9362 [shape=record label="{32180: typeof['obj',v4]|32181: constant[\"string\",v5]|32182: ===[v4,v5,v3]|32183: if[v3](true-block:9363,false-block:9367)}" ] 
BB9362 -> BB9363 [tailport=s, headport=n, headlabel="      9363"]
BB9362 -> BB9367 [tailport=s, headport=n, headlabel="      9367"]
BB9362 -> BB9428 [tailport=s, headport=n, color=gray, headlabel="      9428"]
BB9363 [shape=record label="{32184: read-variable['Ember',v7,-]|32185: read-property[v7,'assert',-]|32186: \<variable-non-null-undef\>['Ember']|32187: constant[\"Path '\",v11]|32188: read-variable['obj',v12,v2]|32189: +[v11,v12,v9]|32190: constant[\"' must be global if no obj is given.\",v10]|32191: +[v9,v10,v8]|32192: read-variable['IS_GLOBAL',v15,-]|32193: read-property[v15,'test',-]|32194: \<variable-non-null-undef\>['IS_GLOBAL']|32195: read-variable['obj',v16,v2]}" ] 
BB9363 -> BB9364 [tailport=s, headport=n, headlabel="      9364"]
BB9363 -> BB9428 [tailport=s, headport=n, color=gray]
BB9364 [shape=record label="{32196: call-IS_GLOBAL.test [v15,'test',v16,v13]}" ] 
BB9364 -> BB9365 [tailport=s, headport=n, headlabel="      9365"]
BB9364 -> BB9428 [tailport=s, headport=n, color=gray]
BB9365 [shape=record label="{32197: call-Ember.assert [v7,'assert',v8,v13,-]*}" ] 
BB9365 -> BB9366 [tailport=s, headport=n, headlabel="      9366"]
BB9365 -> BB9428 [tailport=s, headport=n, color=gray]
BB9366 [shape=record label="{32198: read-variable['keyName',v17,v2]|32199: write-variable[v17,'value']*|32200: read-variable['obj',v18,v2]|32201: write-variable[v18,'keyName']*|32202: constant[null,v19]|32203: write-variable[v19,'obj']*}" ] 
BB9366 -> BB9367 [tailport=s, headport=n]
BB9366 -> BB9428 [tailport=s, headport=n, color=gray]
BB9367 [shape=record label="{32204: read-variable['Ember',v7,-]|32205: read-property[v7,'assert',-]|32206: \<variable-non-null-undef\>['Ember']|32207: constant[\"Cannot call set with \",v11]|32208: read-variable['keyName',v12,v2]|32209: +[v11,v12,v9]|32210: constant[\" key.\",v10]|32211: +[v9,v10,v8]|32212: read-variable['keyName',v15,v2]|32213: ![v15,v14]|32214: ![v14,v13]}" ] 
BB9367 -> BB9368 [tailport=s, headport=n, headlabel="      9368"]
BB9367 -> BB9428 [tailport=s, headport=n, color=gray]
BB9368 [shape=record label="{32215: call-Ember.assert [v7,'assert',v8,v13,-]*}" ] 
BB9368 -> BB9369 [tailport=s, headport=n, headlabel="      9369"]
BB9368 -> BB9428 [tailport=s, headport=n, color=gray]
BB9369 [shape=record label="{32216: read-variable['obj',v17,v2]|32217: ![v17,v16]|32218: if[v16](true-block:9370,false-block:9372)}" ] 
BB9369 -> BB9370 [tailport=s, headport=n, headlabel="      9370"]
BB9369 -> BB9372 [tailport=s, headport=n, headlabel="      9372"]
BB9369 -> BB9428 [tailport=s, headport=n, color=gray]
BB9370 [shape=record label="{32219: read-variable['setPath',v19,v18]|32220: read-variable['obj',v20,v2]|32221: read-variable['keyName',v21,v2]|32222: read-variable['value',v22,v2]|32223: read-variable['tolerant',v23,v2]}" ] 
BB9370 -> BB9371 [tailport=s, headport=n, headlabel="      9371"]
BB9370 -> BB9428 [tailport=s, headport=n, color=gray]
BB9371 [shape=record label="{32224: call-setPath [v18,v19,v20,v21,v22,v23,v1]}" ] 
BB9371 -> BB9427 [tailport=s, headport=n, headlabel="      9427"]
BB9371 -> BB9428 [tailport=s, headport=n, color=gray]
BB9372 [shape=record label="{32225: read-variable['obj',v19,v2]|32226: read-property[v19,'__ember_meta__',v18]|32227: \<variable-non-null-undef\>['obj']|32228: write-variable[v18,'meta']*|32229: read-variable['meta',v20,v2]|32230: if[v20](true-block:9373,false-block:9374)}" ] 
BB9372 -> BB9374 [tailport=s, headport=n, headlabel="      9374"]
BB9372 -> BB9373 [tailport=s, headport=n, headlabel="      9373"]
BB9372 -> BB9428 [tailport=s, headport=n, color=gray]
BB9373 [shape=record label="{32231: read-variable['meta',v22,v2]|32232: read-property[v22,'descs',v21]|32233: \<variable-non-null-undef\>['meta']|32234: read-variable['keyName',v23,v2]|32235: read-property[v21,v23,v20]|32236: \<property-non-null-undef\>[v22,'descs']}" ] 
BB9373 -> BB9374 [tailport=s, headport=n]
BB9373 -> BB9428 [tailport=s, headport=n, color=gray]
BB9374 [shape=record label="{32237: write-variable[v20,'desc']*|32238: read-variable['desc',v22,v2]|32239: read-variable['undefined',v23,v2]|32240: ===[v22,v23,v21]|32241: if[v21](true-block:9375,false-block:9377)}" ] 
BB9374 -> BB9377 [tailport=s, headport=n, headlabel="      9377"]
BB9374 -> BB9375 [tailport=s, headport=n, headlabel="      9375"]
BB9374 -> BB9428 [tailport=s, headport=n, color=gray]
BB9375 [shape=record label="{32242: read-variable['isPath',v25,v24]|32243: read-variable['keyName',v26,v2]}" ] 
BB9375 -> BB9376 [tailport=s, headport=n, headlabel="      9376"]
BB9375 -> BB9428 [tailport=s, headport=n, color=gray]
BB9376 [shape=record label="{32244: call-isPath [v24,v25,v26,v21]}" ] 
BB9376 -> BB9377 [tailport=s, headport=n]
BB9376 -> BB9428 [tailport=s, headport=n, color=gray]
BB9377 [shape=record label="{32245: if[v21](true-block:9378,false-block:9380)}" ] 
BB9377 -> BB9378 [tailport=s, headport=n, headlabel="      9378"]
BB9377 -> BB9380 [tailport=s, headport=n, headlabel="      9380"]
BB9378 [shape=record label="{32246: read-variable['setPath',v25,v24]|32247: read-variable['obj',v26,v2]|32248: read-variable['keyName',v27,v2]|32249: read-variable['value',v28,v2]|32250: read-variable['tolerant',v29,v2]}" ] 
BB9378 -> BB9379 [tailport=s, headport=n, headlabel="      9379"]
BB9378 -> BB9428 [tailport=s, headport=n, color=gray]
BB9379 [shape=record label="{32251: call-setPath [v24,v25,v26,v27,v28,v29,v1]}" ] 
BB9379 -> BB9427 [tailport=s, headport=n]
BB9379 -> BB9428 [tailport=s, headport=n, color=gray]
BB9380 [shape=record label="{32252: read-variable['Ember',v25,-]|32253: read-property[v25,'assert',-]|32254: \<variable-non-null-undef\>['Ember']|32255: constant[\"You need to provide an object and key to `set`.\",v26]|32256: read-variable['obj',v29,v2]|32257: ![v29,v28]|32258: ![v28,v27]|32259: if[v27](true-block:9381,false-block:9382)}" ] 
BB9380 -> BB9382 [tailport=s, headport=n, headlabel="      9382"]
BB9380 -> BB9381 [tailport=s, headport=n, headlabel="      9381"]
BB9380 -> BB9428 [tailport=s, headport=n, color=gray]
BB9381 [shape=record label="{32260: read-variable['keyName',v30,v2]|32261: read-variable['undefined',v31,v2]|32262: !==[v30,v31,v27]}" ] 
BB9381 -> BB9382 [tailport=s, headport=n]
BB9381 -> BB9428 [tailport=s, headport=n, color=gray]
BB9382 [shape=record label="{32263: call-Ember.assert [v25,'assert',v26,v27,-]*}" ] 
BB9382 -> BB9383 [tailport=s, headport=n, headlabel="      9383"]
BB9382 -> BB9428 [tailport=s, headport=n, color=gray]
BB9383 [shape=record label="{32264: read-variable['Ember',v31,-]|32265: read-property[v31,'assert',-]|32266: \<variable-non-null-undef\>['Ember']|32267: constant[\"calling set on destroyed object\",v32]|32268: read-variable['obj',v35,v2]|32269: read-property[v35,'isDestroyed',v34]|32270: \<variable-non-null-undef\>['obj']|32271: ![v34,v33]}" ] 
BB9383 -> BB9384 [tailport=s, headport=n, headlabel="      9384"]
BB9383 -> BB9428 [tailport=s, headport=n, color=gray]
BB9384 [shape=record label="{32272: call-Ember.assert [v31,'assert',v32,v33,-]*}" ] 
BB9384 -> BB9385 [tailport=s, headport=n, headlabel="      9385"]
BB9384 -> BB9428 [tailport=s, headport=n, color=gray]
BB9385 [shape=record label="{32273: read-variable['desc',v37,v2]|32274: read-variable['undefined',v38,v2]|32275: !==[v37,v38,v36]|32276: if[v36](true-block:9386,false-block:9387)}" ] 
BB9385 -> BB9386 [tailport=s, headport=n, headlabel="      9386"]
BB9385 -> BB9387 [tailport=s, headport=n, headlabel="      9387"]
BB9385 -> BB9428 [tailport=s, headport=n, color=gray]
BB9386 [shape=record label="{32277: read-variable['desc',v40,-]|32278: read-property[v40,'set',-]|32279: \<variable-non-null-undef\>['desc']|32280: read-variable['obj',v41,v2]|32281: read-variable['keyName',v42,v2]|32282: read-variable['value',v43,v2]}" ] 
BB9386 -> BB9388 [tailport=s, headport=n, headlabel="      9388"]
BB9386 -> BB9428 [tailport=s, headport=n, color=gray]
BB9387 [shape=record label="{32283: typeof['obj',v40]|32284: constant[\"object\",v41]|32285: ===[v40,v41,v39]|32286: if[v39](true-block:9389,false-block:9392)}" ] 
BB9387 -> BB9392 [tailport=s, headport=n, headlabel="      9392"]
BB9387 -> BB9389 [tailport=s, headport=n, headlabel="      9389"]
BB9387 -> BB9428 [tailport=s, headport=n, color=gray]
BB9388 [shape=record label="{32287: call-desc.set [v40,'set',v41,v42,v43,-]*}" ] 
BB9388 -> BB9426 [tailport=s, headport=n, headlabel="      9426"]
BB9388 -> BB9428 [tailport=s, headport=n, color=gray]
BB9389 [shape=record label="{32288: read-variable['obj',v42,v2]|32289: constant[null,v43]|32290: !==[v42,v43,v39]|32291: if[v39](true-block:9390,false-block:9392)}" ] 
BB9389 -> BB9392 [tailport=s, headport=n]
BB9389 -> BB9390 [tailport=s, headport=n, headlabel="      9390"]
BB9389 -> BB9428 [tailport=s, headport=n, color=gray]
BB9390 [shape=record label="{32292: read-variable['value',v44,v2]|32293: read-variable['undefined',v45,v2]|32294: !==[v44,v45,v39]|32295: if[v39](true-block:9391,false-block:9392)}" ] 
BB9390 -> BB9392 [tailport=s, headport=n]
BB9390 -> BB9391 [tailport=s, headport=n, headlabel="      9391"]
BB9390 -> BB9428 [tailport=s, headport=n, color=gray]
BB9391 [shape=record label="{32296: read-variable['obj',v48,v2]|32297: read-variable['keyName',v49,v2]|32298: read-property[v48,v49,v46]|32299: \<variable-non-null-undef\>['obj']|32300: read-variable['value',v47,v2]|32301: ===[v46,v47,v39]}" ] 
BB9391 -> BB9392 [tailport=s, headport=n]
BB9391 -> BB9428 [tailport=s, headport=n, color=gray]
BB9392 [shape=record label="{32302: if[v39](true-block:9393,false-block:9394)}" ] 
BB9392 -> BB9393 [tailport=s, headport=n, headlabel="      9393"]
BB9392 -> BB9394 [tailport=s, headport=n, headlabel="      9394"]
BB9393 [shape=record label="{32303: read-variable['value',v1,v2]}" ] 
BB9393 -> BB9427 [tailport=s, headport=n]
BB9393 -> BB9428 [tailport=s, headport=n, color=gray]
BB9394 [shape=record label="{32304: constant[\"object\",v43]|32305: typeof['obj',v44]|32306: ===[v43,v44,v42]|32307: if[v42](true-block:9395,false-block:9396)}" ] 
BB9394 -> BB9396 [tailport=s, headport=n, headlabel="      9396"]
BB9394 -> BB9395 [tailport=s, headport=n, headlabel="      9395"]
BB9394 -> BB9428 [tailport=s, headport=n, color=gray]
BB9395 [shape=record label="{32308: read-variable['keyName',v46,v2]|32309: read-variable['obj',v47,v2]|32310: in[v46,v47,v45]|32311: ![v45,v42]}" ] 
BB9395 -> BB9396 [tailport=s, headport=n]
BB9395 -> BB9428 [tailport=s, headport=n, color=gray]
BB9396 [shape=record label="{32312: write-variable[v42,'isUnknown']*|32313: read-variable['isUnknown',v45,v2]|32314: if[v45](true-block:9397,false-block:9398)}" ] 
BB9396 -> BB9398 [tailport=s, headport=n, headlabel="      9398"]
BB9396 -> BB9397 [tailport=s, headport=n, headlabel="      9397"]
BB9396 -> BB9428 [tailport=s, headport=n, color=gray]
BB9397 [shape=record label="{32315: constant[\"function\",v46]|32316: read-variable['obj',v49,v2]|32317: read-property[v49,'setUnknownProperty',v48]|32318: \<variable-non-null-undef\>['obj']|32319: typeof[v48,v47]|32320: ===[v46,v47,v45]}" ] 
BB9397 -> BB9398 [tailport=s, headport=n]
BB9397 -> BB9428 [tailport=s, headport=n, color=gray]
BB9398 [shape=record label="{32321: if[v45](true-block:9399,false-block:9400)}" ] 
BB9398 -> BB9399 [tailport=s, headport=n, headlabel="      9399"]
BB9398 -> BB9400 [tailport=s, headport=n, headlabel="      9400"]
BB9399 [shape=record label="{32322: read-variable['obj',v47,-]|32323: read-property[v47,'setUnknownProperty',-]|32324: \<variable-non-null-undef\>['obj']|32325: read-variable['keyName',v48,v2]|32326: read-variable['value',v49,v2]}" ] 
BB9399 -> BB9401 [tailport=s, headport=n, headlabel="      9401"]
BB9399 -> BB9428 [tailport=s, headport=n, color=gray]
BB9400 [shape=record label="{32327: read-variable['meta',v46,v2]|32328: if[v46](true-block:9402,false-block:9403)}" ] 
BB9400 -> BB9403 [tailport=s, headport=n, headlabel="      9403"]
BB9400 -> BB9402 [tailport=s, headport=n, headlabel="      9402"]
BB9400 -> BB9428 [tailport=s, headport=n, color=gray]
BB9401 [shape=record label="{32329: call-obj.setUnknownProperty [v47,'setUnknownProperty',v48,v49,-]*}" ] 
BB9401 -> BB9426 [tailport=s, headport=n]
BB9401 -> BB9428 [tailport=s, headport=n, color=gray]
BB9402 [shape=record label="{32330: read-variable['meta',v50,v2]|32331: read-property[v50,'watching',v49]|32332: \<variable-non-null-undef\>['meta']|32333: read-variable['keyName',v51,v2]|32334: read-property[v49,v51,v47]|32335: \<property-non-null-undef\>[v50,'watching']|32336: constant[0.0,v48]|32337: \>[v47,v48,v46]}" ] 
BB9402 -> BB9403 [tailport=s, headport=n]
BB9402 -> BB9428 [tailport=s, headport=n, color=gray]
BB9403 [shape=record label="{32338: if[v46](true-block:9404,false-block:9405)}" ] 
BB9403 -> BB9404 [tailport=s, headport=n, headlabel="      9404"]
BB9403 -> BB9405 [tailport=s, headport=n, headlabel="      9405"]
BB9404 [shape=record label="{32339: read-variable['meta',v50,v2]|32340: read-property[v50,'proto',v48]|32341: \<variable-non-null-undef\>['meta']|32342: read-variable['obj',v49,v2]|32343: !==[v48,v49,v47]|32344: if[v47](true-block:9406,false-block:9409)}" ] 
BB9404 -> BB9406 [tailport=s, headport=n, headlabel="      9406"]
BB9404 -> BB9409 [tailport=s, headport=n, headlabel="      9409"]
BB9404 -> BB9428 [tailport=s, headport=n, color=gray]
BB9405 [shape=record label="{32345: read-variable['obj',v48,v2]|32346: read-variable['keyName',v49,v2]|32347: read-variable['value',v47,v2]|32348: write-property[v48,v49,v47]|32349: \<variable-non-null-undef\>['obj']*}" ] 
BB9405 -> BB9426 [tailport=s, headport=n]
BB9405 -> BB9428 [tailport=s, headport=n, color=gray]
BB9406 [shape=record label="{32350: read-variable['hasPropertyAccessors',v51,v2]|32351: if[v51](true-block:9407,false-block:9408)}" ] 
BB9406 -> BB9407 [tailport=s, headport=n, headlabel="      9407"]
BB9406 -> BB9408 [tailport=s, headport=n, headlabel="      9408"]
BB9406 -> BB9428 [tailport=s, headport=n, color=gray]
BB9407 [shape=record label="{32352: read-variable['meta',v54,v2]|32353: read-property[v54,'values',v53]|32354: \<variable-non-null-undef\>['meta']|32355: read-variable['keyName',v55,v2]|32356: read-property[v53,v55,v52]|32357: \<property-non-null-undef\>[v54,'values']|32358: write-variable[v52,'currentValue']*}" ] 
BB9407 -> BB9409 [tailport=s, headport=n]
BB9407 -> BB9428 [tailport=s, headport=n, color=gray]
BB9408 [shape=record label="{32359: read-variable['obj',v53,v2]|32360: read-variable['keyName',v54,v2]|32361: read-property[v53,v54,v52]|32362: \<variable-non-null-undef\>['obj']|32363: write-variable[v52,'currentValue']*}" ] 
BB9408 -> BB9409 [tailport=s, headport=n]
BB9408 -> BB9428 [tailport=s, headport=n, color=gray]
BB9409 [shape=record label="{32364: read-variable['value',v52,v2]|32365: read-variable['currentValue',v53,v2]|32366: !==[v52,v53,v51]|32367: if[v51](true-block:9410,false-block:9426)}" ] 
BB9409 -> BB9410 [tailport=s, headport=n, headlabel="      9410"]
BB9409 -> BB9426 [tailport=s, headport=n]
BB9409 -> BB9428 [tailport=s, headport=n, color=gray]
BB9410 [shape=record label="{32368: read-variable['propertyWillChange',v55,v54]|32369: read-variable['obj',v56,v2]|32370: read-variable['keyName',v57,v2]}" ] 
BB9410 -> BB9411 [tailport=s, headport=n, headlabel="      9411"]
BB9410 -> BB9428 [tailport=s, headport=n, color=gray]
BB9411 [shape=record label="{32371: call-propertyWillChange [v54,v55,v56,v57,-]*}" ] 
BB9411 -> BB9412 [tailport=s, headport=n, headlabel="      9412"]
BB9411 -> BB9428 [tailport=s, headport=n, color=gray]
BB9412 [shape=record label="{32372: read-variable['hasPropertyAccessors',v58,v2]|32373: if[v58](true-block:9413,false-block:9414)}" ] 
BB9412 -> BB9413 [tailport=s, headport=n, headlabel="      9413"]
BB9412 -> BB9414 [tailport=s, headport=n, headlabel="      9414"]
BB9412 -> BB9428 [tailport=s, headport=n, color=gray]
BB9413 [shape=record label="{32374: read-variable['currentValue',v60,v2]|32375: read-variable['undefined',v61,v2]|32376: ===[v60,v61,v59]|32377: if[v59](true-block:9415,false-block:9416)}" ] 
BB9413 -> BB9416 [tailport=s, headport=n, headlabel="      9416"]
BB9413 -> BB9415 [tailport=s, headport=n, headlabel="      9415"]
BB9413 -> BB9428 [tailport=s, headport=n, color=gray]
BB9414 [shape=record label="{32378: read-variable['obj',v60,v2]|32379: read-variable['keyName',v61,v2]|32380: read-variable['value',v59,v2]|32381: write-property[v60,v61,v59]|32382: \<variable-non-null-undef\>['obj']*}" ] 
BB9414 -> BB9424 [tailport=s, headport=n, headlabel="      9424"]
BB9414 -> BB9428 [tailport=s, headport=n, color=gray]
BB9415 [shape=record label="{32383: read-variable['keyName',v63,v2]|32384: read-variable['obj',v64,v2]|32385: in[v63,v64,v62]|32386: ![v62,v59]}" ] 
BB9415 -> BB9416 [tailport=s, headport=n]
BB9415 -> BB9428 [tailport=s, headport=n, color=gray]
BB9416 [shape=record label="{32387: if[v59](true-block:9420,false-block:9417)}" ] 
BB9416 -> BB9420 [tailport=s, headport=n, headlabel="      9420"]
BB9416 -> BB9417 [tailport=s, headport=n, headlabel="      9417"]
BB9417 [shape=record label="{32388: read-variable['Object',v64,-]|32389: read-property[v64,'prototype',v63]|32390: \<variable-non-null-undef\>['Object']|32391: read-property[v63,'propertyIsEnumerable',v62]|32392: \<property-non-null-undef\>[v64,'prototype']|32393: read-property[v62,'call',-]|32394: \<property-non-null-undef\>[v63,'propertyIsEnumerable']|32395: read-variable['obj',v65,v2]|32396: read-variable['keyName',v66,v2]}" ] 
BB9417 -> BB9418 [tailport=s, headport=n, headlabel="      9418"]
BB9417 -> BB9428 [tailport=s, headport=n, color=gray]
BB9418 [shape=record label="{32397: call-Object.prototype.propertyIsEnumerable.call [v62,'call',v65,v66,v60]}" ] 
BB9418 -> BB9419 [tailport=s, headport=n, headlabel="      9419"]
BB9418 -> BB9428 [tailport=s, headport=n, color=gray]
BB9419 [shape=record label="{32398: ![v60,v59]}" ] 
BB9419 -> BB9420 [tailport=s, headport=n]
BB9419 -> BB9428 [tailport=s, headport=n, color=gray]
BB9420 [shape=record label="{32399: if[v59](true-block:9421,false-block:9422)}" ] 
BB9420 -> BB9421 [tailport=s, headport=n, headlabel="      9421"]
BB9420 -> BB9422 [tailport=s, headport=n, headlabel="      9422"]
BB9421 [shape=record label="{32400: read-variable['defineProperty',v61,v60]|32401: read-variable['obj',v62,v2]|32402: read-variable['keyName',v63,v2]|32403: constant[null,v64]|32404: read-variable['value',v65,v2]}" ] 
BB9421 -> BB9423 [tailport=s, headport=n, headlabel="      9423"]
BB9421 -> BB9428 [tailport=s, headport=n, color=gray]
BB9422 [shape=record label="{32405: read-variable['meta',v63,v2]|32406: read-property[v63,'values',v61]|32407: \<variable-non-null-undef\>['meta']|32408: read-variable['keyName',v62,v2]|32409: read-variable['value',v60,v2]|32410: write-property[v61,v62,v60]|32411: \<property-non-null-undef\>[v63,'values']*}" ] 
BB9422 -> BB9424 [tailport=s, headport=n]
BB9422 -> BB9428 [tailport=s, headport=n, color=gray]
BB9423 [shape=record label="{32412: call-defineProperty [v60,v61,v62,v63,v64,v65,-]*}" ] 
BB9423 -> BB9424 [tailport=s, headport=n]
BB9423 -> BB9428 [tailport=s, headport=n, color=gray]
BB9424 [shape=record label="{32413: read-variable['propertyDidChange',v60,v59]|32414: read-variable['obj',v61,v2]|32415: read-variable['keyName',v62,v2]}" ] 
BB9424 -> BB9425 [tailport=s, headport=n, headlabel="      9425"]
BB9424 -> BB9428 [tailport=s, headport=n, color=gray]
BB9425 [shape=record label="{32416: call-propertyDidChange [v59,v60,v61,v62,-]*}" ] 
BB9425 -> BB9426 [tailport=s, headport=n]
BB9425 -> BB9428 [tailport=s, headport=n, color=gray]
BB9426 [shape=record label="{32417: read-variable['value',v1,v2]}" ] 
BB9426 -> BB9427 [tailport=s, headport=n]
BB9426 -> BB9428 [tailport=s, headport=n, color=gray]
BB9427 [shape=record label="{32418: return[v1]}" ] 
BB9428 [shape=record label="{32419: exceptional-return}" ] 
//#$~ 16619
}
