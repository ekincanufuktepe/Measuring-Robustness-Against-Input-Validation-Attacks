digraph {
rankdir="TD"
BB_entry120[shape=none,label=""];
BB_entry120 -> BB1421 [tailport=s, headport=n, headlabel="    1421"]
BB1421 [shape=record label="{4721: constant[undefined,v1]|4722: vardecl['event']|4723: vardecl['events']|4724: vardecl['handler']|4725: vardecl['list']|4726: vardecl['selector']}" ] 
BB1421 -> BB1422 [tailport=s, headport=n, headlabel="      1422"]
BB1422 [shape=record label="{4727: read-variable['Backbone',v3,-]|4728: read-property[v3,'utils',v2]|4729: \<variable-non-null-undef\>['Backbone']|4730: if[v2](true-block:1423,false-block:1425)}" ] 
BB1422 -> BB1423 [tailport=s, headport=n, headlabel="      1423"]
BB1422 -> BB1425 [tailport=s, headport=n, headlabel="      1425"]
BB1422 -> BB1450 [tailport=s, headport=n, color=gray, headlabel="      1450"]
BB1423 [shape=record label="{4731: read-variable['Backbone',v6,-]|4732: read-property[v6,'utils',v5]|4733: \<variable-non-null-undef\>['Backbone']|4734: read-property[v5,'undelegate',-]|4735: \<property-non-null-undef\>[v6,'utils']|4736: read-variable['this',v7,-]|4737: read-variable['eventName',v8,-]|4738: read-variable['second',v9,-]|4739: read-variable['third',v10,-]}" ] 
BB1423 -> BB1424 [tailport=s, headport=n, headlabel="      1424"]
BB1423 -> BB1450 [tailport=s, headport=n, color=gray]
BB1424 [shape=record label="{4740: call-Backbone.utils.undelegate [v5,'undelegate',v7,v8,v9,v10,v1]}" ] 
BB1424 -> BB1449 [tailport=s, headport=n, headlabel="      1449"]
BB1424 -> BB1450 [tailport=s, headport=n, color=gray]
BB1425 [shape=record label="{4741: read-variable['eventName',v4,-]|4742: if[v4](true-block:1426,false-block:1427)}" ] 
BB1425 -> BB1426 [tailport=s, headport=n, headlabel="      1426"]
BB1425 -> BB1427 [tailport=s, headport=n, headlabel="      1427"]
BB1425 -> BB1450 [tailport=s, headport=n, color=gray]
BB1426 [shape=record label="{4743: typeof['eventName',v6]|4744: constant[\"string\",v7]|4745: !==[v6,v7,v5]|4746: if[v5](true-block:1428,false-block:1431)}" ] 
BB1426 -> BB1428 [tailport=s, headport=n, headlabel="      1428"]
BB1426 -> BB1431 [tailport=s, headport=n, headlabel="      1431"]
BB1426 -> BB1450 [tailport=s, headport=n, color=gray]
BB1427 [shape=record label="{4747: read-variable['this',v7,-]|4748: read-property[v7,'$el',v6]|4749: read-property[v6,'off',-]|4750: \<property-non-null-undef\>[v7,'$el']|4751: constant[\".delegate\",v9]|4752: read-variable['this',v11,-]|4753: read-property[v11,'cid',v10]|4754: +[v9,v10,v8]}" ] 
BB1427 -> BB1448 [tailport=s, headport=n, headlabel="      1448"]
BB1427 -> BB1450 [tailport=s, headport=n, color=gray]
BB1428 [shape=record label="{4755: read-variable['TypeError',v9,-]|4756: constant[\"View#undelegate: first argument must be a string\",v10]}" ] 
BB1428 -> BB1429 [tailport=s, headport=n, headlabel="      1429"]
BB1428 -> BB1450 [tailport=s, headport=n, color=gray]
BB1429 [shape=record label="{4757: construct [-,v9,v10,v8]}" ] 
BB1429 -> BB1430 [tailport=s, headport=n, headlabel="      1430"]
BB1429 -> BB1450 [tailport=s, headport=n, color=gray]
BB1430 [shape=record label="{4758: throw[v8]*}" ] 
BB1430 -> BB1431 [tailport=s, headport=n]
BB1430 -> BB1450 [tailport=s, headport=n, color=gray]
BB1431 [shape=record label="{4759: read-variable['arguments',v11,-]|4760: read-property[v11,'length',v9]|4761: \<variable-non-null-undef\>['arguments']|4762: constant[2.0,v10]|4763: ===[v9,v10,v8]|4764: if[v8](true-block:1432,false-block:1433)}" ] 
BB1431 -> BB1432 [tailport=s, headport=n, headlabel="      1432"]
BB1431 -> BB1433 [tailport=s, headport=n, headlabel="      1433"]
BB1431 -> BB1450 [tailport=s, headport=n, color=gray]
BB1432 [shape=record label="{4765: typeof['second',v13]|4766: constant[\"string\",v14]|4767: ===[v13,v14,v12]|4768: if[v12](true-block:1434,false-block:1435)}" ] 
BB1432 -> BB1434 [tailport=s, headport=n, headlabel="      1434"]
BB1432 -> BB1435 [tailport=s, headport=n, headlabel="      1435"]
BB1432 -> BB1450 [tailport=s, headport=n, color=gray]
BB1433 [shape=record label="{4769: read-variable['arguments',v15,-]|4770: read-property[v15,'length',v13]|4771: \<variable-non-null-undef\>['arguments']|4772: constant[3.0,v14]|4773: ===[v13,v14,v12]|4774: if[v12](true-block:1436,false-block:1441)}" ] 
BB1433 -> BB1436 [tailport=s, headport=n, headlabel="      1436"]
BB1433 -> BB1441 [tailport=s, headport=n, headlabel="      1441"]
BB1433 -> BB1450 [tailport=s, headport=n, color=gray]
BB1434 [shape=record label="{4775: read-variable['second',v15,-]|4776: write-variable[v15,'selector']*}" ] 
BB1434 -> BB1441 [tailport=s, headport=n]
BB1434 -> BB1450 [tailport=s, headport=n, color=gray]
BB1435 [shape=record label="{4777: read-variable['second',v15,-]|4778: write-variable[v15,'handler']*}" ] 
BB1435 -> BB1441 [tailport=s, headport=n]
BB1435 -> BB1450 [tailport=s, headport=n, color=gray]
BB1436 [shape=record label="{4779: read-variable['second',v16,-]|4780: write-variable[v16,'selector']*|4781: typeof['selector',v18]|4782: constant[\"string\",v19]|4783: !==[v18,v19,v17]|4784: if[v17](true-block:1437,false-block:1440)}" ] 
BB1436 -> BB1437 [tailport=s, headport=n, headlabel="      1437"]
BB1436 -> BB1440 [tailport=s, headport=n, headlabel="      1440"]
BB1436 -> BB1450 [tailport=s, headport=n, color=gray]
BB1437 [shape=record label="{4785: read-variable['TypeError',v21,-]|4786: constant[\"View#undelegate: \",v23]|4787: constant[\"second argument must be a string\",v24]|4788: +[v23,v24,v22]}" ] 
BB1437 -> BB1438 [tailport=s, headport=n, headlabel="      1438"]
BB1437 -> BB1450 [tailport=s, headport=n, color=gray]
BB1438 [shape=record label="{4789: construct [-,v21,v22,v20]}" ] 
BB1438 -> BB1439 [tailport=s, headport=n, headlabel="      1439"]
BB1438 -> BB1450 [tailport=s, headport=n, color=gray]
BB1439 [shape=record label="{4790: throw[v20]*}" ] 
BB1439 -> BB1440 [tailport=s, headport=n]
BB1439 -> BB1450 [tailport=s, headport=n, color=gray]
BB1440 [shape=record label="{4791: read-variable['third',v20,-]|4792: write-variable[v20,'handler']*}" ] 
BB1440 -> BB1441 [tailport=s, headport=n]
BB1440 -> BB1450 [tailport=s, headport=n, color=gray]
BB1441 [shape=record label="{4793: function-expr[function ( ),v14]|4794: read-property[v14,'call',-]|4795: read-variable['this',v15,-]}" ] 
BB1441 -> BB1442 [tailport=s, headport=n, headlabel="      1442"]
BB1441 -> BB1450 [tailport=s, headport=n, color=gray]
BB1442 [shape=record label="{4796: call-null [v14,'call',v15,v12]}" ] 
BB1442 -> BB1443 [tailport=s, headport=n, headlabel="      1443"]
BB1442 -> BB1450 [tailport=s, headport=n, color=gray]
BB1443 [shape=record label="{4797: write-variable[v12,'list']*|4798: read-variable['list',v18,-]|4799: read-property[v18,'join',-]|4800: \<variable-non-null-undef\>['list']|4801: constant[\" \",v19]}" ] 
BB1443 -> BB1444 [tailport=s, headport=n, headlabel="      1444"]
BB1443 -> BB1450 [tailport=s, headport=n, color=gray]
BB1444 [shape=record label="{4802: call-list.join [v18,'join',v19,v16]}" ] 
BB1444 -> BB1445 [tailport=s, headport=n, headlabel="      1445"]
BB1444 -> BB1450 [tailport=s, headport=n, color=gray]
BB1445 [shape=record label="{4803: write-variable[v16,'events']*|4804: read-variable['this',v22,-]|4805: read-property[v22,'$el',v21]|4806: read-property[v21,'off',-]|4807: \<property-non-null-undef\>[v22,'$el']|4808: read-variable['events',v23,-]|4809: read-variable['selector',v24,-]|4810: if[v24](true-block:1447,false-block:1446)}" ] 
BB1445 -> BB1447 [tailport=s, headport=n, headlabel="      1447"]
BB1445 -> BB1446 [tailport=s, headport=n, headlabel="      1446"]
BB1445 -> BB1450 [tailport=s, headport=n, color=gray]
BB1446 [shape=record label="{4811: constant[null,v24]}" ] 
BB1446 -> BB1447 [tailport=s, headport=n]
BB1447 [shape=record label="{4812: call-this.$el.off [v21,'off',v23,v24,v1]}" ] 
BB1447 -> BB1449 [tailport=s, headport=n]
BB1447 -> BB1450 [tailport=s, headport=n, color=gray]
BB1448 [shape=record label="{4813: call-this.$el.off [v6,'off',v8,v1]}" ] 
BB1448 -> BB1449 [tailport=s, headport=n]
BB1448 -> BB1450 [tailport=s, headport=n, color=gray]
BB1449 [shape=record label="{4814: return[v1]}" ] 
BB1450 [shape=record label="{4815: exceptional-return}" ] 
//#$~ 1316
}
