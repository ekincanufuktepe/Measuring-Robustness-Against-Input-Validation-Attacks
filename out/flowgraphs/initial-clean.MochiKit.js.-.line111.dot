digraph {
rankdir="TD"
BB_entry12[shape=none,label=""];
BB_entry12 -> BB485 [tailport=s, headport=n, headlabel="    485"]
BB485 [shape=record label="{4920: constant[undefined,v1]|4921: vardecl['l']|4922: vardecl['i']}" ] 
BB485 -> BB486 [tailport=s, headport=n, headlabel="      486"]
BB486 [shape=record label="{4923: read-variable['_1d',v3,-]|4924: ![v3,v2]|4925: if[v2](true-block:487,false-block:488)}" ] 
BB486 -> BB487 [tailport=s, headport=n, headlabel="      487"]
BB486 -> BB488 [tailport=s, headport=n, headlabel="      488"]
BB486 -> BB508 [tailport=s, headport=n, color=gray, headlabel="      508"]
BB487 [shape=record label="{4926: constant[0.0,v4]|4927: write-variable[v4,'_1d']*}" ] 
BB487 -> BB488 [tailport=s, headport=n]
BB488 [shape=record label="{4928: read-variable['obj',v4,-]|4929: if[v4](true-block:489,false-block:506)}" ] 
BB488 -> BB489 [tailport=s, headport=n, headlabel="      489"]
BB488 -> BB506 [tailport=s, headport=n, headlabel="      506"]
BB488 -> BB508 [tailport=s, headport=n, color=gray]
BB489 [shape=record label="{4930: read-variable['obj',v6,-]|4931: read-property[v6,'length',v5]|4932: \<variable-non-null-undef\>['obj']|4933: write-variable[v5,'l']*|4934: typeof['l',v8]|4935: constant[\"number\",v9]|4936: !=[v8,v9,v7]|4937: if[v7](true-block:490,false-block:497)}" ] 
BB489 -> BB490 [tailport=s, headport=n, headlabel="      490"]
BB489 -> BB497 [tailport=s, headport=n, headlabel="      497"]
BB489 -> BB508 [tailport=s, headport=n, color=gray]
BB490 [shape=record label="{4938: read-variable['MochiKit',v14,-]|4939: read-property[v14,'Iter',v13]|4940: \<variable-non-null-undef\>['MochiKit']|4941: typeof[v13,v11]|4942: constant[\"undefined\",v12]|4943: !=[v11,v12,v10]|4944: if[v10](true-block:491,false-block:492)}" ] 
BB490 -> BB491 [tailport=s, headport=n, headlabel="      491"]
BB490 -> BB492 [tailport=s, headport=n, headlabel="      492"]
BB490 -> BB508 [tailport=s, headport=n, color=gray]
BB491 [shape=record label="{4945: read-variable['MochiKit',v18,-]|4946: read-property[v18,'Iter',v17]|4947: \<variable-non-null-undef\>['MochiKit']|4948: read-property[v17,'list',-]|4949: \<property-non-null-undef\>[v18,'Iter']|4950: read-variable['obj',v19,-]}" ] 
BB491 -> BB493 [tailport=s, headport=n, headlabel="      493"]
BB491 -> BB508 [tailport=s, headport=n, color=gray]
BB492 [shape=record label="{4951: read-variable['TypeError',v16,-]|4952: constant[\"Argument not an array-like and MochiKit.Iter not present\",v17]}" ] 
BB492 -> BB495 [tailport=s, headport=n, headlabel="      495"]
BB492 -> BB508 [tailport=s, headport=n, color=gray]
BB493 [shape=record label="{4953: call-MochiKit.Iter.list [v17,'list',v19,v15]}" ] 
BB493 -> BB494 [tailport=s, headport=n, headlabel="      494"]
BB493 -> BB508 [tailport=s, headport=n, color=gray]
BB494 [shape=record label="{4954: write-variable[v15,'obj']*|4955: read-variable['obj',v21,-]|4956: read-property[v21,'length',v20]|4957: \<variable-non-null-undef\>['obj']|4958: write-variable[v20,'l']*}" ] 
BB494 -> BB497 [tailport=s, headport=n]
BB494 -> BB508 [tailport=s, headport=n, color=gray]
BB495 [shape=record label="{4959: construct [-,v16,v17,v15]}" ] 
BB495 -> BB496 [tailport=s, headport=n, headlabel="      496"]
BB495 -> BB508 [tailport=s, headport=n, color=gray]
BB496 [shape=record label="{4960: throw[v15]*}" ] 
BB496 -> BB497 [tailport=s, headport=n]
BB496 -> BB508 [tailport=s, headport=n, color=gray]
BB497 [shape=record label="{4961: read-variable['_1b',v11,-]|4962: ![v11,v10]|4963: if[v10](true-block:498,false-block:501)}" ] 
BB497 -> BB498 [tailport=s, headport=n, headlabel="      498"]
BB497 -> BB501 [tailport=s, headport=n, headlabel="      501"]
BB497 -> BB508 [tailport=s, headport=n, color=gray]
BB498 [shape=record label="{4964: read-variable['Array',v13,-]}" ] 
BB498 -> BB499 [tailport=s, headport=n, headlabel="      499"]
BB498 -> BB508 [tailport=s, headport=n, color=gray]
BB499 [shape=record label="{4965: construct [-,v13,v12]}" ] 
BB499 -> BB500 [tailport=s, headport=n, headlabel="      500"]
BB499 -> BB508 [tailport=s, headport=n, color=gray]
BB500 [shape=record label="{4966: write-variable[v12,'_1b']*}" ] 
BB500 -> BB501 [tailport=s, headport=n]
BB501 [shape=record label="{4967: read-variable['_1d',v13,-]|4968: write-variable[v13,'i']*}" ] 
BB501 -> BB502 [tailport=s, headport=n, headlabel="      502"]
BB501 -> BB508 [tailport=s, headport=n, color=gray]
BB502 [shape=record label="{4969: read-variable['i',v14,-]|4970: read-variable['l',v15,-]|4971: \<[v14,v15,v12]|4972: if[v12](true-block:503,false-block:506)}" ] 
BB502 -> BB503 [tailport=s, headport=n, headlabel="      503"]
BB502 -> BB506 [tailport=s, headport=n]
BB502 -> BB508 [tailport=s, headport=n, color=gray]
BB503 [shape=record label="{4973: read-variable['_1b',v17,-]|4974: read-property[v17,'push',-]|4975: \<variable-non-null-undef\>['_1b']|4976: read-variable['obj',v19,-]|4977: read-variable['i',v20,-]|4978: read-property[v19,v20,v18]|4979: \<variable-non-null-undef\>['obj']}" ] 
BB503 -> BB504 [tailport=s, headport=n, headlabel="      504"]
BB503 -> BB508 [tailport=s, headport=n, color=gray]
BB504 [shape=record label="{4980: call-_1b.push [v17,'push',v18,-]*}" ] 
BB504 -> BB505 [tailport=s, headport=n, headlabel="      505"]
BB504 -> BB508 [tailport=s, headport=n, color=gray]
BB505 [shape=record label="{4981: constant[1.0,v21]|4982: read-variable['i',v22,-]|4983: +[v22,v23]|4984: +[v23,v21,v24]|4985: write-variable[v24,'i']}" ] 
BB505 -> BB502 [tailport=s, headport=n]
BB505 -> BB508 [tailport=s, headport=n, color=gray]
BB506 [shape=record label="{4986: read-variable['_1b',v1,-]}" ] 
BB506 -> BB507 [tailport=s, headport=n, headlabel="      507"]
BB506 -> BB508 [tailport=s, headport=n, color=gray]
BB507 [shape=record label="{4987: return[v1]}" ] 
BB508 [shape=record label="{4988: exceptional-return}" ] 
//#$~ 132
}
