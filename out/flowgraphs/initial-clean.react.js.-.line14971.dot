digraph {
rankdir="TD"
BB_entry632[shape=none,label=""];
BB_entry632 -> BB8551 [tailport=s, headport=n, headlabel="    8551"]
BB8551 [shape=record label="{28271: constant[undefined,v1]|28272: vardecl['transaction']|28273: vardecl['queue']}" ] 
BB8551 -> BB8552 [tailport=s, headport=n, headlabel="      8552"]
BB8552 [shape=record label="{28274: read-variable['dirtyComponents',v3,-]|28275: read-property[v3,'length',v2]|28276: \<variable-non-null-undef\>['dirtyComponents']|28277: if[v2](true-block:8554,false-block:8553)}" ] 
BB8552 -> BB8554 [tailport=s, headport=n, headlabel="      8554"]
BB8552 -> BB8553 [tailport=s, headport=n, headlabel="      8553"]
BB8552 -> BB8570 [tailport=s, headport=n, color=gray, headlabel="      8570"]
BB8553 [shape=record label="{28278: read-variable['asapEnqueued',v2,-]}" ] 
BB8553 -> BB8554 [tailport=s, headport=n]
BB8553 -> BB8570 [tailport=s, headport=n, color=gray]
BB8554 [shape=record label="{28279: if[v2](true-block:8555,false-block:8569)}" ] 
BB8554 -> BB8555 [tailport=s, headport=n, headlabel="      8555"]
BB8554 -> BB8569 [tailport=s, headport=n, headlabel="      8569"]
BB8555 [shape=record label="{28280: read-variable['dirtyComponents',v4,-]|28281: read-property[v4,'length',v3]|28282: \<variable-non-null-undef\>['dirtyComponents']|28283: if[v3](true-block:8556,false-block:8562)}" ] 
BB8555 -> BB8556 [tailport=s, headport=n, headlabel="      8556"]
BB8555 -> BB8562 [tailport=s, headport=n, headlabel="      8562"]
BB8555 -> BB8570 [tailport=s, headport=n, color=gray]
BB8556 [shape=record label="{28284: read-variable['ReactUpdatesFlushTransaction',v7,-]|28285: read-property[v7,'getPooled',-]|28286: \<variable-non-null-undef\>['ReactUpdatesFlushTransaction']}" ] 
BB8556 -> BB8557 [tailport=s, headport=n, headlabel="      8557"]
BB8556 -> BB8570 [tailport=s, headport=n, color=gray]
BB8557 [shape=record label="{28287: call-ReactUpdatesFlushTransaction.getPooled [v7,'getPooled',v5]}" ] 
BB8557 -> BB8558 [tailport=s, headport=n, headlabel="      8558"]
BB8557 -> BB8570 [tailport=s, headport=n, color=gray]
BB8558 [shape=record label="{28288: write-variable[v5,'transaction']*|28289: read-variable['transaction',v9,-]|28290: read-property[v9,'perform',-]|28291: \<variable-non-null-undef\>['transaction']|28292: read-variable['runBatchedUpdates',v10,-]|28293: constant[null,v11]|28294: read-variable['transaction',v12,-]}" ] 
BB8558 -> BB8559 [tailport=s, headport=n, headlabel="      8559"]
BB8558 -> BB8570 [tailport=s, headport=n, color=gray]
BB8559 [shape=record label="{28295: call-transaction.perform [v9,'perform',v10,v11,v12,-]*}" ] 
BB8559 -> BB8560 [tailport=s, headport=n, headlabel="      8560"]
BB8559 -> BB8570 [tailport=s, headport=n, color=gray]
BB8560 [shape=record label="{28296: read-variable['ReactUpdatesFlushTransaction',v14,-]|28297: read-property[v14,'release',-]|28298: \<variable-non-null-undef\>['ReactUpdatesFlushTransaction']|28299: read-variable['transaction',v15,-]}" ] 
BB8560 -> BB8561 [tailport=s, headport=n, headlabel="      8561"]
BB8560 -> BB8570 [tailport=s, headport=n, color=gray]
BB8561 [shape=record label="{28300: call-ReactUpdatesFlushTransaction.release [v14,'release',v15,-]*}" ] 
BB8561 -> BB8562 [tailport=s, headport=n]
BB8561 -> BB8570 [tailport=s, headport=n, color=gray]
BB8562 [shape=record label="{28301: read-variable['asapEnqueued',v5,-]|28302: if[v5](true-block:8563,false-block:8552)}" ] 
BB8562 -> BB8563 [tailport=s, headport=n, headlabel="      8563"]
BB8562 -> BB8552 [tailport=s, headport=n]
BB8562 -> BB8570 [tailport=s, headport=n, color=gray]
BB8563 [shape=record label="{28303: constant[false,v6]|28304: write-variable[v6,'asapEnqueued']*|28305: read-variable['asapCallbackQueue',v7,-]|28306: write-variable[v7,'queue']*|28307: read-variable['CallbackQueue',v10,-]|28308: read-property[v10,'getPooled',-]|28309: \<variable-non-null-undef\>['CallbackQueue']}" ] 
BB8563 -> BB8564 [tailport=s, headport=n, headlabel="      8564"]
BB8563 -> BB8570 [tailport=s, headport=n, color=gray]
BB8564 [shape=record label="{28310: call-CallbackQueue.getPooled [v10,'getPooled',v8]}" ] 
BB8564 -> BB8565 [tailport=s, headport=n, headlabel="      8565"]
BB8564 -> BB8570 [tailport=s, headport=n, color=gray]
BB8565 [shape=record label="{28311: write-variable[v8,'asapCallbackQueue']*|28312: read-variable['queue',v12,-]|28313: read-property[v12,'notifyAll',-]|28314: \<variable-non-null-undef\>['queue']}" ] 
BB8565 -> BB8566 [tailport=s, headport=n, headlabel="      8566"]
BB8565 -> BB8570 [tailport=s, headport=n, color=gray]
BB8566 [shape=record label="{28315: call-queue.notifyAll [v12,'notifyAll',-]*}" ] 
BB8566 -> BB8567 [tailport=s, headport=n, headlabel="      8567"]
BB8566 -> BB8570 [tailport=s, headport=n, color=gray]
BB8567 [shape=record label="{28316: read-variable['CallbackQueue',v14,-]|28317: read-property[v14,'release',-]|28318: \<variable-non-null-undef\>['CallbackQueue']|28319: read-variable['queue',v15,-]}" ] 
BB8567 -> BB8568 [tailport=s, headport=n, headlabel="      8568"]
BB8567 -> BB8570 [tailport=s, headport=n, color=gray]
BB8568 [shape=record label="{28320: call-CallbackQueue.release [v14,'release',v15,-]*}" ] 
BB8568 -> BB8552 [tailport=s, headport=n]
BB8568 -> BB8570 [tailport=s, headport=n, color=gray]
BB8569 [shape=record label="{28321: return[v1]}" ] 
BB8570 [shape=record label="{28322: exceptional-return}" ] 
//#$~ 14988
}
