digraph {
rankdir="TD"
BB_entry630[shape=none,label=""];
BB_entry630 -> BB8502 [tailport=s, headport=n, headlabel="    8502"]
BB8502 [shape=record label="{28092: constant[undefined,v1]|28093: vardecl['len']|28094: vardecl['i']|28095: vardecl['component']|28096: vardecl['callbacks']|28097: vardecl['j']}" ] 
BB8502 -> BB8503 [tailport=s, headport=n, headlabel="      8503"]
BB8503 [shape=record label="{28098: read-variable['transaction',v3,-]|28099: read-property[v3,'dirtyComponentsLength',v2]|28100: \<variable-non-null-undef\>['transaction']|28101: write-variable[v2,'len']*|28102: constant[\"production\",v5]|28103: constant[\"development\",v6]|28104: !==[v5,v6,v4]|28105: if[v4](true-block:8504,false-block:8505)}" ] 
BB8503 -> BB8504 [tailport=s, headport=n, headlabel="      8504"]
BB8503 -> BB8505 [tailport=s, headport=n, headlabel="      8505"]
BB8503 -> BB8523 [tailport=s, headport=n, color=gray, headlabel="      8523"]
BB8504 [shape=record label="{28106: read-variable['invariant',v8,v7]|28107: read-variable['len',v10,-]|28108: read-variable['dirtyComponents',v12,-]|28109: read-property[v12,'length',v11]|28110: \<variable-non-null-undef\>['dirtyComponents']|28111: ===[v10,v11,v9]|28112: constant[\"Expected flush transaction's stored dirty-components length (%s) to \",v14]|28113: constant[\"match dirty-components array length (%s).\",v15]|28114: +[v14,v15,v13]|28115: read-variable['len',v16,-]|28116: read-variable['dirtyComponents',v18,-]|28117: read-property[v18,'length',v17]|28118: \<variable-non-null-undef\>['dirtyComponents']}" ] 
BB8504 -> BB8506 [tailport=s, headport=n, headlabel="      8506"]
BB8504 -> BB8523 [tailport=s, headport=n, color=gray]
BB8505 [shape=record label="{28119: read-variable['invariant',v8,v7]|28120: read-variable['len',v10,-]|28121: read-variable['dirtyComponents',v12,-]|28122: read-property[v12,'length',v11]|28123: \<variable-non-null-undef\>['dirtyComponents']|28124: ===[v10,v11,v9]}" ] 
BB8505 -> BB8507 [tailport=s, headport=n, headlabel="      8507"]
BB8505 -> BB8523 [tailport=s, headport=n, color=gray]
BB8506 [shape=record label="{28125: call-invariant [v7,v8,v9,v13,v16,v17,-]}" ] 
BB8506 -> BB8508 [tailport=s, headport=n, headlabel="      8508"]
BB8506 -> BB8523 [tailport=s, headport=n, color=gray]
BB8507 [shape=record label="{28126: call-invariant [v7,v8,v9,-]}" ] 
BB8507 -> BB8508 [tailport=s, headport=n]
BB8507 -> BB8523 [tailport=s, headport=n, color=gray]
BB8508 [shape=record label="{28127: read-variable['dirtyComponents',v8,-]|28128: read-property[v8,'sort',-]|28129: \<variable-non-null-undef\>['dirtyComponents']|28130: read-variable['mountOrderComparator',v9,-]}" ] 
BB8508 -> BB8509 [tailport=s, headport=n, headlabel="      8509"]
BB8508 -> BB8523 [tailport=s, headport=n, color=gray]
BB8509 [shape=record label="{28131: call-dirtyComponents.sort [v8,'sort',v9,-]*}" ] 
BB8509 -> BB8510 [tailport=s, headport=n, headlabel="      8510"]
BB8509 -> BB8523 [tailport=s, headport=n, color=gray]
BB8510 [shape=record label="{28132: constant[0.0,v11]|28133: write-variable[v11,'i']*}" ] 
BB8510 -> BB8511 [tailport=s, headport=n, headlabel="      8511"]
BB8511 [shape=record label="{28134: read-variable['i',v12,-]|28135: read-variable['len',v13,-]|28136: \<[v12,v13,v10]|28137: if[v10](true-block:8512,false-block:8522)}" ] 
BB8511 -> BB8512 [tailport=s, headport=n, headlabel="      8512"]
BB8511 -> BB8522 [tailport=s, headport=n, headlabel="      8522"]
BB8511 -> BB8523 [tailport=s, headport=n, color=gray]
BB8512 [shape=record label="{28138: read-variable['dirtyComponents',v15,-]|28139: read-variable['i',v16,-]|28140: read-property[v15,v16,v14]|28141: \<variable-non-null-undef\>['dirtyComponents']|28142: write-variable[v14,'component']*|28143: read-variable['component',v18,-]|28144: read-property[v18,'_pendingCallbacks',v17]|28145: \<variable-non-null-undef\>['component']|28146: write-variable[v17,'callbacks']*|28147: read-variable['component',v20,-]|28148: constant[null,v19]|28149: write-property[v20,'_pendingCallbacks',v19]|28150: \<variable-non-null-undef\>['component']*|28151: read-variable['ReactReconciler',v22,-]|28152: read-property[v22,'performUpdateIfNecessary',-]|28153: \<variable-non-null-undef\>['ReactReconciler']|28154: read-variable['component',v23,-]|28155: read-variable['transaction',v25,-]|28156: read-property[v25,'reconcileTransaction',v24]|28157: \<variable-non-null-undef\>['transaction']}" ] 
BB8512 -> BB8513 [tailport=s, headport=n, headlabel="      8513"]
BB8512 -> BB8523 [tailport=s, headport=n, color=gray]
BB8513 [shape=record label="{28158: call-ReactReconciler.performUpdateIfNecessary [v22,'performUpdateIfNecessary',v23,v24,-]*}" ] 
BB8513 -> BB8514 [tailport=s, headport=n, headlabel="      8514"]
BB8513 -> BB8523 [tailport=s, headport=n, color=gray]
BB8514 [shape=record label="{28159: read-variable['callbacks',v26,-]|28160: if[v26](true-block:8515,false-block:8521)}" ] 
BB8514 -> BB8515 [tailport=s, headport=n, headlabel="      8515"]
BB8514 -> BB8521 [tailport=s, headport=n, headlabel="      8521"]
BB8514 -> BB8523 [tailport=s, headport=n, color=gray]
BB8515 [shape=record label="{28161: constant[0.0,v28]|28162: write-variable[v28,'j']*}" ] 
BB8515 -> BB8516 [tailport=s, headport=n, headlabel="      8516"]
BB8516 [shape=record label="{28163: read-variable['j',v29,-]|28164: read-variable['callbacks',v31,-]|28165: read-property[v31,'length',v30]|28166: \<variable-non-null-undef\>['callbacks']|28167: \<[v29,v30,v27]|28168: if[v27](true-block:8517,false-block:8521)}" ] 
BB8516 -> BB8517 [tailport=s, headport=n, headlabel="      8517"]
BB8516 -> BB8521 [tailport=s, headport=n]
BB8516 -> BB8523 [tailport=s, headport=n, color=gray]
BB8517 [shape=record label="{28169: read-variable['transaction',v34,-]|28170: read-property[v34,'callbackQueue',v33]|28171: \<variable-non-null-undef\>['transaction']|28172: read-property[v33,'enqueue',-]|28173: \<property-non-null-undef\>[v34,'callbackQueue']|28174: read-variable['callbacks',v36,-]|28175: read-variable['j',v37,-]|28176: read-property[v36,v37,v35]|28177: \<variable-non-null-undef\>['callbacks']|28178: read-variable['component',v40,-]|28179: read-property[v40,'getPublicInstance',-]|28180: \<variable-non-null-undef\>['component']}" ] 
BB8517 -> BB8518 [tailport=s, headport=n, headlabel="      8518"]
BB8517 -> BB8523 [tailport=s, headport=n, color=gray]
BB8518 [shape=record label="{28181: call-component.getPublicInstance [v40,'getPublicInstance',v38]}" ] 
BB8518 -> BB8519 [tailport=s, headport=n, headlabel="      8519"]
BB8518 -> BB8523 [tailport=s, headport=n, color=gray]
BB8519 [shape=record label="{28182: call-transaction.callbackQueue.enqueue [v33,'enqueue',v35,v38,-]*}" ] 
BB8519 -> BB8520 [tailport=s, headport=n, headlabel="      8520"]
BB8519 -> BB8523 [tailport=s, headport=n, color=gray]
BB8520 [shape=record label="{28183: constant[1.0,v41]|28184: read-variable['j',v42,-]|28185: +[v42,v43]|28186: +[v43,v41,v44]|28187: write-variable[v44,'j']}" ] 
BB8520 -> BB8516 [tailport=s, headport=n]
BB8520 -> BB8523 [tailport=s, headport=n, color=gray]
BB8521 [shape=record label="{28188: constant[1.0,v27]|28189: read-variable['i',v28,-]|28190: +[v28,v29]|28191: +[v29,v27,v30]|28192: write-variable[v30,'i']}" ] 
BB8521 -> BB8511 [tailport=s, headport=n]
BB8521 -> BB8523 [tailport=s, headport=n, color=gray]
BB8522 [shape=record label="{28193: return[v1]}" ] 
BB8523 [shape=record label="{28194: exceptional-return}" ] 
//#$~ 14907
}
