digraph {
rankdir="TD"
BB_entry27[shape=none,label=""];
BB_entry27 -> BB662 [tailport=s, headport=n, headlabel="    662"]
BB662 [shape=record label="{2494: constant[undefined,v1]|2495: vardecl['args']|2496: vardecl['callback']}" ] 
BB662 -> BB663 [tailport=s, headport=n, headlabel="      663"]
BB663 [shape=record label="{2497: read-variable['SLICE',v4,-]|2498: read-property[v4,'call',-]|2499: \<variable-non-null-undef\>['SLICE']|2500: read-variable['arguments',v5,-]}" ] 
BB663 -> BB664 [tailport=s, headport=n, headlabel="      664"]
BB663 -> BB673 [tailport=s, headport=n, color=gray, headlabel="      673"]
BB664 [shape=record label="{2501: call-SLICE.call [v4,'call',v5,v2]}" ] 
BB664 -> BB665 [tailport=s, headport=n, headlabel="      665"]
BB664 -> BB673 [tailport=s, headport=n, color=gray]
BB665 [shape=record label="{2502: write-variable[v2,'args']*|2503: read-variable['args',v10,-]|2504: read-variable['args',v14,-]|2505: read-property[v14,'length',v12]|2506: \<variable-non-null-undef\>['args']|2507: constant[1.0,v13]|2508: -[v12,v13,v11]|2509: read-property[v10,v11,v9]|2510: \<variable-non-null-undef\>['args']|2511: typeof[v9,v7]|2512: constant[\"function\",v8]|2513: ===[v7,v8,v6]|2514: if[v6](true-block:666,false-block:670)}" ] 
BB665 -> BB666 [tailport=s, headport=n, headlabel="      666"]
BB665 -> BB670 [tailport=s, headport=n, headlabel="      670"]
BB665 -> BB673 [tailport=s, headport=n, color=gray]
BB666 [shape=record label="{2515: read-variable['args',v17,-]|2516: read-property[v17,'pop',-]|2517: \<variable-non-null-undef\>['args']}" ] 
BB666 -> BB667 [tailport=s, headport=n, headlabel="      667"]
BB666 -> BB673 [tailport=s, headport=n, color=gray]
BB667 [shape=record label="{2518: call-args.pop [v17,'pop',v15]}" ] 
BB667 -> BB668 [tailport=s, headport=n, headlabel="      668"]
BB667 -> BB673 [tailport=s, headport=n, color=gray]
BB668 [shape=record label="{2519: write-variable[v15,'callback']*|2520: read-variable['args',v19,-]|2521: read-property[v19,'push',-]|2522: \<variable-non-null-undef\>['args']|2523: function-expr[function ( Y ),v20]}" ] 
BB668 -> BB669 [tailport=s, headport=n, headlabel="      669"]
BB668 -> BB673 [tailport=s, headport=n, color=gray]
BB669 [shape=record label="{2524: call-args.push [v19,'push',v20,-]*}" ] 
BB669 -> BB670 [tailport=s, headport=n]
BB669 -> BB673 [tailport=s, headport=n, color=gray]
BB670 [shape=record label="{2525: read-variable['this',v17,-]|2526: read-property[v17,'use',v16]|2527: read-property[v16,'apply',-]|2528: \<property-non-null-undef\>[v17,'use']|2529: read-variable['this',v18,-]|2530: read-variable['args',v19,-]}" ] 
BB670 -> BB671 [tailport=s, headport=n, headlabel="      671"]
BB670 -> BB673 [tailport=s, headport=n, color=gray]
BB671 [shape=record label="{2531: call-this.use.apply [v16,'apply',v18,v19,-]*}" ] 
BB671 -> BB672 [tailport=s, headport=n, headlabel="      672"]
BB671 -> BB673 [tailport=s, headport=n, color=gray]
BB672 [shape=record label="{2532: return[v1]}" ] 
BB673 [shape=record label="{2533: exceptional-return}" ] 
//#$~ 1000
}
