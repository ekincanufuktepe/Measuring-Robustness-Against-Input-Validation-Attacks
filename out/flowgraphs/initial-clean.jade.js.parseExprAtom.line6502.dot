digraph {
rankdir="TD"
BB_entry378[shape=none,label=""];
BB_entry378 -> BB6702 [tailport=s, headport=n, headlabel="    6702"]
BB6702 [shape=record label="{19944: constant[undefined,v1]|19945: vardecl['node']|19946: vardecl['id']|19947: vardecl['node']|19948: vardecl['node']|19949: vardecl['tokStartLoc1']|19950: vardecl['tokStart1']|19951: vardecl['val']|19952: vardecl['exprList']|19953: vardecl['oldParenL']|19954: vardecl['i']|19955: vardecl['node']|19956: vardecl['node']}" ] 
BB6702 -> BB6703 [tailport=s, headport=n, headlabel="      6703"]
BB6703 [shape=record label="{19957: read-variable['tokType',v2,-]|19958: read-variable['_this',v3,-]|19959: ==[v2,v3,v4]|19960: if[v4](true-block:6704,false-block:6705)}" ] 
BB6703 -> BB6704 [tailport=s, headport=n, headlabel="      6704"]
BB6703 -> BB6705 [tailport=s, headport=n, headlabel="      6705"]
BB6703 -> BB6837 [tailport=s, headport=n, color=gray, headlabel="      6837"]
BB6704 [shape=record label="{19961: read-variable['startNode',v7,v6]}" ] 
BB6704 -> BB6706 [tailport=s, headport=n, headlabel="      6706"]
BB6704 -> BB6837 [tailport=s, headport=n, color=gray]
BB6705 [shape=record label="{19962: read-variable['_yield',v3,-]|19963: ==[v2,v3,v4]|19964: if[v4](true-block:6711,false-block:6712)}" ] 
BB6705 -> BB6711 [tailport=s, headport=n, headlabel="      6711"]
BB6705 -> BB6712 [tailport=s, headport=n, headlabel="      6712"]
BB6705 -> BB6837 [tailport=s, headport=n, color=gray]
BB6706 [shape=record label="{19965: call-startNode [v6,v7,v5]}" ] 
BB6706 -> BB6707 [tailport=s, headport=n, headlabel="      6707"]
BB6706 -> BB6837 [tailport=s, headport=n, color=gray]
BB6707 [shape=record label="{19966: write-variable[v5,'node']*|19967: read-variable['next',v9,v8]}" ] 
BB6707 -> BB6708 [tailport=s, headport=n, headlabel="      6708"]
BB6707 -> BB6837 [tailport=s, headport=n, color=gray]
BB6708 [shape=record label="{19968: call-next [v8,v9,-]*}" ] 
BB6708 -> BB6709 [tailport=s, headport=n, headlabel="      6709"]
BB6708 -> BB6837 [tailport=s, headport=n, color=gray]
BB6709 [shape=record label="{19969: read-variable['finishNode',v11,v10]|19970: read-variable['node',v12,-]|19971: constant[\"ThisExpression\",v13]}" ] 
BB6709 -> BB6710 [tailport=s, headport=n, headlabel="      6710"]
BB6709 -> BB6837 [tailport=s, headport=n, color=gray]
BB6710 [shape=record label="{19972: call-finishNode [v10,v11,v12,v13,v1]}" ] 
BB6710 -> BB6836 [tailport=s, headport=n, headlabel="      6836"]
BB6710 -> BB6837 [tailport=s, headport=n, color=gray]
BB6711 [shape=record label="{19973: read-variable['inGenerator',v14,-]|19974: if[v14](true-block:6713,false-block:6715)}" ] 
BB6711 -> BB6713 [tailport=s, headport=n, headlabel="      6713"]
BB6711 -> BB6715 [tailport=s, headport=n, headlabel="      6715"]
BB6711 -> BB6837 [tailport=s, headport=n, color=gray]
BB6712 [shape=record label="{19975: read-variable['_name',v3,-]|19976: ==[v2,v3,v4]|19977: if[v4](true-block:6715,false-block:6716)}" ] 
BB6712 -> BB6715 [tailport=s, headport=n]
BB6712 -> BB6716 [tailport=s, headport=n, headlabel="      6716"]
BB6712 -> BB6837 [tailport=s, headport=n, color=gray]
BB6713 [shape=record label="{19978: read-variable['parseYield',v16,v15]}" ] 
BB6713 -> BB6714 [tailport=s, headport=n, headlabel="      6714"]
BB6713 -> BB6837 [tailport=s, headport=n, color=gray]
BB6714 [shape=record label="{19979: call-parseYield [v15,v16,v1]}" ] 
BB6714 -> BB6836 [tailport=s, headport=n]
BB6714 -> BB6837 [tailport=s, headport=n, color=gray]
BB6715 [shape=record label="{19980: read-variable['parseIdent',v17,v16]|19981: read-variable['tokType',v19,-]|19982: read-variable['_name',v20,-]|19983: !==[v19,v20,v18]}" ] 
BB6715 -> BB6717 [tailport=s, headport=n, headlabel="      6717"]
BB6715 -> BB6837 [tailport=s, headport=n, color=gray]
BB6716 [shape=record label="{19984: read-variable['_num',v3,-]|19985: ==[v2,v3,v4]|19986: if[v4](true-block:6729,false-block:6727)}" ] 
BB6716 -> BB6729 [tailport=s, headport=n, headlabel="      6729"]
BB6716 -> BB6727 [tailport=s, headport=n, headlabel="      6727"]
BB6716 -> BB6837 [tailport=s, headport=n, color=gray]
BB6717 [shape=record label="{19987: call-parseIdent [v16,v17,v18,v15]}" ] 
BB6717 -> BB6718 [tailport=s, headport=n, headlabel="      6718"]
BB6717 -> BB6837 [tailport=s, headport=n, color=gray]
BB6718 [shape=record label="{19988: write-variable[v15,'id']*|19989: read-variable['eat',v23,v22]|19990: read-variable['_arrow',v24,-]}" ] 
BB6718 -> BB6719 [tailport=s, headport=n, headlabel="      6719"]
BB6718 -> BB6837 [tailport=s, headport=n, color=gray]
BB6719 [shape=record label="{19991: call-eat [v22,v23,v24,v21]}" ] 
BB6719 -> BB6720 [tailport=s, headport=n, headlabel="      6720"]
BB6719 -> BB6837 [tailport=s, headport=n, color=gray]
BB6720 [shape=record label="{19992: if[v21](true-block:6721,false-block:6726)}" ] 
BB6720 -> BB6721 [tailport=s, headport=n, headlabel="      6721"]
BB6720 -> BB6726 [tailport=s, headport=n, headlabel="      6726"]
BB6721 [shape=record label="{19993: read-variable['parseArrowExpression',v26,v25]|19994: read-variable['startNodeFrom',v29,v28]|19995: read-variable['id',v30,-]}" ] 
BB6721 -> BB6722 [tailport=s, headport=n, headlabel="      6722"]
BB6721 -> BB6837 [tailport=s, headport=n, color=gray]
BB6722 [shape=record label="{19996: call-startNodeFrom [v28,v29,v30,v27]}" ] 
BB6722 -> BB6723 [tailport=s, headport=n, headlabel="      6723"]
BB6722 -> BB6837 [tailport=s, headport=n, color=gray]
BB6723 [shape=record label="{19997: read-variable['Array',v32,-]|19998: read-variable['id',v33,-]}" ] 
BB6723 -> BB6724 [tailport=s, headport=n, headlabel="      6724"]
BB6723 -> BB6837 [tailport=s, headport=n, color=gray]
BB6724 [shape=record label="{19999: construct [-,v32,v33,v31]}" ] 
BB6724 -> BB6725 [tailport=s, headport=n, headlabel="      6725"]
BB6724 -> BB6837 [tailport=s, headport=n, color=gray]
BB6725 [shape=record label="{20000: call-parseArrowExpression [v25,v26,v27,v31,v1]}" ] 
BB6725 -> BB6836 [tailport=s, headport=n]
BB6725 -> BB6837 [tailport=s, headport=n, color=gray]
BB6726 [shape=record label="{20001: read-variable['id',v1,-]}" ] 
BB6726 -> BB6836 [tailport=s, headport=n]
BB6726 -> BB6837 [tailport=s, headport=n, color=gray]
BB6727 [shape=record label="{20002: read-variable['_string',v3,-]|20003: ==[v2,v3,v4]|20004: if[v4](true-block:6729,false-block:6728)}" ] 
BB6727 -> BB6729 [tailport=s, headport=n]
BB6727 -> BB6728 [tailport=s, headport=n, headlabel="      6728"]
BB6727 -> BB6837 [tailport=s, headport=n, color=gray]
BB6728 [shape=record label="{20005: read-variable['_regexp',v3,-]|20006: ==[v2,v3,v4]|20007: if[v4](true-block:6729,false-block:6730)}" ] 
BB6728 -> BB6729 [tailport=s, headport=n]
BB6728 -> BB6730 [tailport=s, headport=n, headlabel="      6730"]
BB6728 -> BB6837 [tailport=s, headport=n, color=gray]
BB6729 [shape=record label="{20008: read-variable['startNode',v27,v26]}" ] 
BB6729 -> BB6731 [tailport=s, headport=n, headlabel="      6731"]
BB6729 -> BB6837 [tailport=s, headport=n, color=gray]
BB6730 [shape=record label="{20009: read-variable['_null',v3,-]|20010: ==[v2,v3,v4]|20011: if[v4](true-block:6740,false-block:6738)}" ] 
BB6730 -> BB6740 [tailport=s, headport=n, headlabel="      6740"]
BB6730 -> BB6738 [tailport=s, headport=n, headlabel="      6738"]
BB6730 -> BB6837 [tailport=s, headport=n, color=gray]
BB6731 [shape=record label="{20012: call-startNode [v26,v27,v25]}" ] 
BB6731 -> BB6732 [tailport=s, headport=n, headlabel="      6732"]
BB6731 -> BB6837 [tailport=s, headport=n, color=gray]
BB6732 [shape=record label="{20013: write-variable[v25,'node']*|20014: read-variable['node',v29,-]|20015: read-variable['tokVal',v28,-]|20016: write-property[v29,'value',v28]|20017: \<variable-non-null-undef\>['node']*|20018: read-variable['node',v31,-]|20019: read-variable['input',v33,-]|20020: read-property[v33,'slice',-]|20021: \<variable-non-null-undef\>['input']|20022: read-variable['tokStart',v34,-]|20023: read-variable['tokEnd',v35,-]}" ] 
BB6732 -> BB6733 [tailport=s, headport=n, headlabel="      6733"]
BB6732 -> BB6837 [tailport=s, headport=n, color=gray]
BB6733 [shape=record label="{20024: call-input.slice [v33,'slice',v34,v35,v30]}" ] 
BB6733 -> BB6734 [tailport=s, headport=n, headlabel="      6734"]
BB6733 -> BB6837 [tailport=s, headport=n, color=gray]
BB6734 [shape=record label="{20025: write-property[v31,'raw',v30]|20026: \<variable-non-null-undef\>['node']*|20027: read-variable['next',v37,v36]}" ] 
BB6734 -> BB6735 [tailport=s, headport=n, headlabel="      6735"]
BB6734 -> BB6837 [tailport=s, headport=n, color=gray]
BB6735 [shape=record label="{20028: call-next [v36,v37,-]*}" ] 
BB6735 -> BB6736 [tailport=s, headport=n, headlabel="      6736"]
BB6735 -> BB6837 [tailport=s, headport=n, color=gray]
BB6736 [shape=record label="{20029: read-variable['finishNode',v39,v38]|20030: read-variable['node',v40,-]|20031: constant[\"Literal\",v41]}" ] 
BB6736 -> BB6737 [tailport=s, headport=n, headlabel="      6737"]
BB6736 -> BB6837 [tailport=s, headport=n, color=gray]
BB6737 [shape=record label="{20032: call-finishNode [v38,v39,v40,v41,v1]}" ] 
BB6737 -> BB6836 [tailport=s, headport=n]
BB6737 -> BB6837 [tailport=s, headport=n, color=gray]
BB6738 [shape=record label="{20033: read-variable['_true',v3,-]|20034: ==[v2,v3,v4]|20035: if[v4](true-block:6740,false-block:6739)}" ] 
BB6738 -> BB6740 [tailport=s, headport=n]
BB6738 -> BB6739 [tailport=s, headport=n, headlabel="      6739"]
BB6738 -> BB6837 [tailport=s, headport=n, color=gray]
BB6739 [shape=record label="{20036: read-variable['_false',v3,-]|20037: ==[v2,v3,v4]|20038: if[v4](true-block:6740,false-block:6741)}" ] 
BB6739 -> BB6740 [tailport=s, headport=n]
BB6739 -> BB6741 [tailport=s, headport=n, headlabel="      6741"]
BB6739 -> BB6837 [tailport=s, headport=n, color=gray]
BB6740 [shape=record label="{20039: read-variable['startNode',v44,v43]}" ] 
BB6740 -> BB6742 [tailport=s, headport=n, headlabel="      6742"]
BB6740 -> BB6837 [tailport=s, headport=n, color=gray]
BB6741 [shape=record label="{20040: read-variable['_parenL',v3,-]|20041: ==[v2,v3,v4]|20042: if[v4](true-block:6747,false-block:6748)}" ] 
BB6741 -> BB6747 [tailport=s, headport=n, headlabel="      6747"]
BB6741 -> BB6748 [tailport=s, headport=n, headlabel="      6748"]
BB6741 -> BB6837 [tailport=s, headport=n, color=gray]
BB6742 [shape=record label="{20043: call-startNode [v43,v44,v42]}" ] 
BB6742 -> BB6743 [tailport=s, headport=n, headlabel="      6743"]
BB6742 -> BB6837 [tailport=s, headport=n, color=gray]
BB6743 [shape=record label="{20044: write-variable[v42,'node']*|20045: read-variable['node',v46,-]|20046: read-variable['tokType',v47,-]|20047: read-property[v47,'atomValue',v45]|20048: \<variable-non-null-undef\>['tokType']|20049: write-property[v46,'value',v45]|20050: \<variable-non-null-undef\>['node']*|20051: read-variable['node',v49,-]|20052: read-variable['tokType',v50,-]|20053: read-property[v50,'keyword',v48]|20054: \<variable-non-null-undef\>['tokType']|20055: write-property[v49,'raw',v48]|20056: \<variable-non-null-undef\>['node']*|20057: read-variable['next',v52,v51]}" ] 
BB6743 -> BB6744 [tailport=s, headport=n, headlabel="      6744"]
BB6743 -> BB6837 [tailport=s, headport=n, color=gray]
BB6744 [shape=record label="{20058: call-next [v51,v52,-]*}" ] 
BB6744 -> BB6745 [tailport=s, headport=n, headlabel="      6745"]
BB6744 -> BB6837 [tailport=s, headport=n, color=gray]
BB6745 [shape=record label="{20059: read-variable['finishNode',v54,v53]|20060: read-variable['node',v55,-]|20061: constant[\"Literal\",v56]}" ] 
BB6745 -> BB6746 [tailport=s, headport=n, headlabel="      6746"]
BB6745 -> BB6837 [tailport=s, headport=n, color=gray]
BB6746 [shape=record label="{20062: call-finishNode [v53,v54,v55,v56,v1]}" ] 
BB6746 -> BB6836 [tailport=s, headport=n]
BB6746 -> BB6837 [tailport=s, headport=n, color=gray]
BB6747 [shape=record label="{20063: read-variable['tokStartLoc',v57,-]|20064: write-variable[v57,'tokStartLoc1']*|20065: read-variable['tokStart',v58,-]|20066: write-variable[v58,'tokStart1']*|20067: read-variable['next',v60,v59]}" ] 
BB6747 -> BB6749 [tailport=s, headport=n, headlabel="      6749"]
BB6747 -> BB6837 [tailport=s, headport=n, color=gray]
BB6748 [shape=record label="{20068: read-variable['_bracketL',v3,-]|20069: ==[v2,v3,v4]|20070: if[v4](true-block:6797,false-block:6798)}" ] 
BB6748 -> BB6797 [tailport=s, headport=n, headlabel="      6797"]
BB6748 -> BB6798 [tailport=s, headport=n, headlabel="      6798"]
BB6748 -> BB6837 [tailport=s, headport=n, color=gray]
BB6749 [shape=record label="{20071: call-next [v59,v60,-]*}" ] 
BB6749 -> BB6750 [tailport=s, headport=n, headlabel="      6750"]
BB6749 -> BB6837 [tailport=s, headport=n, color=gray]
BB6750 [shape=record label="{20072: read-variable['options',v64,-]|20073: read-property[v64,'ecmaVersion',v62]|20074: \<variable-non-null-undef\>['options']|20075: constant[6.0,v63]|20076: \>=[v62,v63,v61]|20077: if[v61](true-block:6751,false-block:6752)}" ] 
BB6750 -> BB6752 [tailport=s, headport=n, headlabel="      6752"]
BB6750 -> BB6751 [tailport=s, headport=n, headlabel="      6751"]
BB6750 -> BB6837 [tailport=s, headport=n, color=gray]
BB6751 [shape=record label="{20078: read-variable['tokType',v65,-]|20079: read-variable['_for',v66,-]|20080: ===[v65,v66,v61]}" ] 
BB6751 -> BB6752 [tailport=s, headport=n]
BB6751 -> BB6837 [tailport=s, headport=n, color=gray]
BB6752 [shape=record label="{20081: if[v61](true-block:6753,false-block:6754)}" ] 
BB6752 -> BB6753 [tailport=s, headport=n, headlabel="      6753"]
BB6752 -> BB6754 [tailport=s, headport=n, headlabel="      6754"]
BB6753 [shape=record label="{20082: read-variable['parseComprehension',v67,v66]|20083: read-variable['startNode',v70,v69]}" ] 
BB6753 -> BB6755 [tailport=s, headport=n, headlabel="      6755"]
BB6753 -> BB6837 [tailport=s, headport=n, color=gray]
BB6754 [shape=record label="{20084: constant[1.0,v66]|20085: read-variable['metParenL',v67,-]|20086: +[v67,v68]|20087: +[v68,v66,v65]|20088: write-variable[v65,'metParenL']|20089: write-variable[v65,'oldParenL']*|20090: read-variable['tokType',v70,-]|20091: read-variable['_parenR',v71,-]|20092: !==[v70,v71,v69]|20093: if[v69](true-block:6759,false-block:6760)}" ] 
BB6754 -> BB6759 [tailport=s, headport=n, headlabel="      6759"]
BB6754 -> BB6760 [tailport=s, headport=n, headlabel="      6760"]
BB6754 -> BB6837 [tailport=s, headport=n, color=gray]
BB6755 [shape=record label="{20094: call-startNode [v69,v70,v68]}" ] 
BB6755 -> BB6756 [tailport=s, headport=n, headlabel="      6756"]
BB6755 -> BB6837 [tailport=s, headport=n, color=gray]
BB6756 [shape=record label="{20095: constant[true,v71]}" ] 
BB6756 -> BB6757 [tailport=s, headport=n, headlabel="      6757"]
BB6757 [shape=record label="{20096: call-parseComprehension [v66,v67,v68,v71,v65]}" ] 
BB6757 -> BB6758 [tailport=s, headport=n, headlabel="      6758"]
BB6757 -> BB6837 [tailport=s, headport=n, color=gray]
BB6758 [shape=record label="{20097: write-variable[v65,'val']*}" ] 
BB6758 -> BB6790 [tailport=s, headport=n, headlabel="      6790"]
BB6759 [shape=record label="{20098: read-variable['parseExpression',v74,v73]}" ] 
BB6759 -> BB6761 [tailport=s, headport=n, headlabel="      6761"]
BB6759 -> BB6837 [tailport=s, headport=n, color=gray]
BB6760 [shape=record label="{20099: read-variable['Array',v73,-]}" ] 
BB6760 -> BB6767 [tailport=s, headport=n, headlabel="      6767"]
BB6760 -> BB6837 [tailport=s, headport=n, color=gray]
BB6761 [shape=record label="{20100: call-parseExpression [v73,v74,v72]}" ] 
BB6761 -> BB6762 [tailport=s, headport=n, headlabel="      6762"]
BB6761 -> BB6837 [tailport=s, headport=n, color=gray]
BB6762 [shape=record label="{20101: write-variable[v72,'val']*|20102: read-variable['val',v79,-]|20103: read-property[v79,'type',v77]|20104: \<variable-non-null-undef\>['val']|20105: constant[\"SequenceExpression\",v78]|20106: ===[v77,v78,v76]|20107: if[v76](true-block:6763,false-block:6764)}" ] 
BB6762 -> BB6763 [tailport=s, headport=n, headlabel="      6763"]
BB6762 -> BB6764 [tailport=s, headport=n, headlabel="      6764"]
BB6762 -> BB6837 [tailport=s, headport=n, color=gray]
BB6763 [shape=record label="{20108: read-variable['val',v80,-]|20109: read-property[v80,'expressions',v75]|20110: \<variable-non-null-undef\>['val']}" ] 
BB6763 -> BB6766 [tailport=s, headport=n, headlabel="      6766"]
BB6763 -> BB6837 [tailport=s, headport=n, color=gray]
BB6764 [shape=record label="{20111: read-variable['Array',v80,-]|20112: read-variable['val',v81,-]}" ] 
BB6764 -> BB6765 [tailport=s, headport=n, headlabel="      6765"]
BB6764 -> BB6837 [tailport=s, headport=n, color=gray]
BB6765 [shape=record label="{20113: construct [-,v80,v81,v75]}" ] 
BB6765 -> BB6766 [tailport=s, headport=n]
BB6765 -> BB6837 [tailport=s, headport=n, color=gray]
BB6766 [shape=record label="{20114: write-variable[v75,'exprList']*}" ] 
BB6766 -> BB6769 [tailport=s, headport=n, headlabel="      6769"]
BB6767 [shape=record label="{20115: construct [-,v73,v72]}" ] 
BB6767 -> BB6768 [tailport=s, headport=n, headlabel="      6768"]
BB6767 -> BB6837 [tailport=s, headport=n, color=gray]
BB6768 [shape=record label="{20116: write-variable[v72,'exprList']*}" ] 
BB6768 -> BB6769 [tailport=s, headport=n]
BB6769 [shape=record label="{20117: read-variable['expect',v73,v72]|20118: read-variable['_parenR',v74,-]}" ] 
BB6769 -> BB6770 [tailport=s, headport=n, headlabel="      6770"]
BB6769 -> BB6837 [tailport=s, headport=n, color=gray]
BB6770 [shape=record label="{20119: call-expect [v72,v73,v74,-]*}" ] 
BB6770 -> BB6771 [tailport=s, headport=n, headlabel="      6771"]
BB6770 -> BB6837 [tailport=s, headport=n, color=gray]
BB6771 [shape=record label="{20120: read-variable['metParenL',v76,-]|20121: read-variable['oldParenL',v77,-]|20122: ===[v76,v77,v75]|20123: if[v75](true-block:6772,false-block:6774)}" ] 
BB6771 -> BB6774 [tailport=s, headport=n, headlabel="      6774"]
BB6771 -> BB6772 [tailport=s, headport=n, headlabel="      6772"]
BB6771 -> BB6837 [tailport=s, headport=n, color=gray]
BB6772 [shape=record label="{20124: read-variable['eat',v79,v78]|20125: read-variable['_arrow',v80,-]}" ] 
BB6772 -> BB6773 [tailport=s, headport=n, headlabel="      6773"]
BB6772 -> BB6837 [tailport=s, headport=n, color=gray]
BB6773 [shape=record label="{20126: call-eat [v78,v79,v80,v75]}" ] 
BB6773 -> BB6774 [tailport=s, headport=n]
BB6773 -> BB6837 [tailport=s, headport=n, color=gray]
BB6774 [shape=record label="{20127: if[v75](true-block:6775,false-block:6776)}" ] 
BB6774 -> BB6775 [tailport=s, headport=n, headlabel="      6775"]
BB6774 -> BB6776 [tailport=s, headport=n, headlabel="      6776"]
BB6775 [shape=record label="{20128: read-variable['parseArrowExpression',v80,v79]|20129: read-variable['startNode',v83,v82]}" ] 
BB6775 -> BB6777 [tailport=s, headport=n, headlabel="      6777"]
BB6775 -> BB6837 [tailport=s, headport=n, color=gray]
BB6776 [shape=record label="{20130: read-variable['val',v79,-]|20131: ![v79,v78]|20132: if[v78](true-block:6781,false-block:6783)}" ] 
BB6776 -> BB6781 [tailport=s, headport=n, headlabel="      6781"]
BB6776 -> BB6783 [tailport=s, headport=n, headlabel="      6783"]
BB6776 -> BB6837 [tailport=s, headport=n, color=gray]
BB6777 [shape=record label="{20133: call-startNode [v82,v83,v81]}" ] 
BB6777 -> BB6778 [tailport=s, headport=n, headlabel="      6778"]
BB6777 -> BB6837 [tailport=s, headport=n, color=gray]
BB6778 [shape=record label="{20134: read-variable['exprList',v84,-]}" ] 
BB6778 -> BB6779 [tailport=s, headport=n, headlabel="      6779"]
BB6778 -> BB6837 [tailport=s, headport=n, color=gray]
BB6779 [shape=record label="{20135: call-parseArrowExpression [v79,v80,v81,v84,v78]}" ] 
BB6779 -> BB6780 [tailport=s, headport=n, headlabel="      6780"]
BB6779 -> BB6837 [tailport=s, headport=n, color=gray]
BB6780 [shape=record label="{20136: write-variable[v78,'val']*}" ] 
BB6780 -> BB6790 [tailport=s, headport=n]
BB6781 [shape=record label="{20137: read-variable['unexpected',v81,v80]|20138: read-variable['lastStart',v82,-]}" ] 
BB6781 -> BB6782 [tailport=s, headport=n, headlabel="      6782"]
BB6781 -> BB6837 [tailport=s, headport=n, color=gray]
BB6782 [shape=record label="{20139: call-unexpected [v80,v81,v82,-]*}" ] 
BB6782 -> BB6783 [tailport=s, headport=n]
BB6782 -> BB6837 [tailport=s, headport=n, color=gray]
BB6783 [shape=record label="{20140: read-variable['options',v83,-]|20141: read-property[v83,'ecmaVersion',v81]|20142: \<variable-non-null-undef\>['options']|20143: constant[6.0,v82]|20144: \>=[v81,v82,v80]|20145: if[v80](true-block:6784,false-block:6790)}" ] 
BB6783 -> BB6784 [tailport=s, headport=n, headlabel="      6784"]
BB6783 -> BB6790 [tailport=s, headport=n]
BB6783 -> BB6837 [tailport=s, headport=n, color=gray]
BB6784 [shape=record label="{20146: constant[0.0,v85]|20147: write-variable[v85,'i']*}" ] 
BB6784 -> BB6785 [tailport=s, headport=n, headlabel="      6785"]
BB6785 [shape=record label="{20148: read-variable['i',v86,-]|20149: read-variable['exprList',v88,-]|20150: read-property[v88,'length',v87]|20151: \<variable-non-null-undef\>['exprList']|20152: \<[v86,v87,v84]|20153: if[v84](true-block:6786,false-block:6790)}" ] 
BB6785 -> BB6786 [tailport=s, headport=n, headlabel="      6786"]
BB6785 -> BB6790 [tailport=s, headport=n]
BB6785 -> BB6837 [tailport=s, headport=n, color=gray]
BB6786 [shape=record label="{20154: read-variable['exprList',v93,-]|20155: read-variable['i',v94,-]|20156: read-property[v93,v94,v92]|20157: \<variable-non-null-undef\>['exprList']|20158: read-property[v92,'type',v90]|20159: \<property-non-null-undef\>[v93,v94]|20160: constant[\"SpreadElement\",v91]|20161: ===[v90,v91,v89]|20162: if[v89](true-block:6787,false-block:6789)}" ] 
BB6786 -> BB6787 [tailport=s, headport=n, headlabel="      6787"]
BB6786 -> BB6789 [tailport=s, headport=n, headlabel="      6789"]
BB6786 -> BB6837 [tailport=s, headport=n, color=gray]
BB6787 [shape=record label="{20163: read-variable['unexpected',v96,v95]}" ] 
BB6787 -> BB6788 [tailport=s, headport=n, headlabel="      6788"]
BB6787 -> BB6837 [tailport=s, headport=n, color=gray]
BB6788 [shape=record label="{20164: call-unexpected [v95,v96,-]*}" ] 
BB6788 -> BB6789 [tailport=s, headport=n]
BB6788 -> BB6837 [tailport=s, headport=n, color=gray]
BB6789 [shape=record label="{20165: constant[1.0,v95]|20166: read-variable['i',v96,-]|20167: +[v96,v97]|20168: +[v97,v95,v98]|20169: write-variable[v98,'i']}" ] 
BB6789 -> BB6785 [tailport=s, headport=n]
BB6789 -> BB6837 [tailport=s, headport=n, color=gray]
BB6790 [shape=record label="{20170: read-variable['val',v66,-]|20171: read-variable['tokStart1',v65,-]|20172: write-property[v66,'start',v65]|20173: \<variable-non-null-undef\>['val']*|20174: read-variable['val',v68,-]|20175: read-variable['lastEnd',v67,-]|20176: write-property[v68,'end',v67]|20177: \<variable-non-null-undef\>['val']*|20178: read-variable['options',v70,-]|20179: read-property[v70,'locations',v69]|20180: \<variable-non-null-undef\>['options']|20181: if[v69](true-block:6791,false-block:6792)}" ] 
BB6790 -> BB6791 [tailport=s, headport=n, headlabel="      6791"]
BB6790 -> BB6792 [tailport=s, headport=n, headlabel="      6792"]
BB6790 -> BB6837 [tailport=s, headport=n, color=gray]
BB6791 [shape=record label="{20182: read-variable['val',v73,-]|20183: read-property[v73,'loc',v72]|20184: \<variable-non-null-undef\>['val']|20185: read-variable['tokStartLoc1',v71,-]|20186: write-property[v72,'start',v71]|20187: \<property-non-null-undef\>[v73,'loc']*|20188: read-variable['val',v76,-]|20189: read-property[v76,'loc',v75]|20190: \<variable-non-null-undef\>['val']|20191: read-variable['lastEndLoc',v74,-]|20192: write-property[v75,'end',v74]|20193: \<property-non-null-undef\>[v76,'loc']*}" ] 
BB6791 -> BB6792 [tailport=s, headport=n]
BB6791 -> BB6837 [tailport=s, headport=n, color=gray]
BB6792 [shape=record label="{20194: read-variable['options',v72,-]|20195: read-property[v72,'ranges',v71]|20196: \<variable-non-null-undef\>['options']|20197: if[v71](true-block:6793,false-block:6796)}" ] 
BB6792 -> BB6793 [tailport=s, headport=n, headlabel="      6793"]
BB6792 -> BB6796 [tailport=s, headport=n, headlabel="      6796"]
BB6792 -> BB6837 [tailport=s, headport=n, color=gray]
BB6793 [shape=record label="{20198: read-variable['val',v74,-]|20199: read-variable['Array',v75,-]|20200: read-variable['tokStart1',v76,-]|20201: read-variable['lastEnd',v77,-]}" ] 
BB6793 -> BB6794 [tailport=s, headport=n, headlabel="      6794"]
BB6793 -> BB6837 [tailport=s, headport=n, color=gray]
BB6794 [shape=record label="{20202: construct [-,v75,v76,v77,v73]}" ] 
BB6794 -> BB6795 [tailport=s, headport=n, headlabel="      6795"]
BB6794 -> BB6837 [tailport=s, headport=n, color=gray]
BB6795 [shape=record label="{20203: write-property[v74,'range',v73]|20204: \<variable-non-null-undef\>['val']*}" ] 
BB6795 -> BB6796 [tailport=s, headport=n]
BB6795 -> BB6837 [tailport=s, headport=n, color=gray]
BB6796 [shape=record label="{20205: read-variable['val',v1,-]}" ] 
BB6796 -> BB6836 [tailport=s, headport=n]
BB6796 -> BB6837 [tailport=s, headport=n, color=gray]
BB6797 [shape=record label="{20206: read-variable['startNode',v75,v74]}" ] 
BB6797 -> BB6799 [tailport=s, headport=n, headlabel="      6799"]
BB6797 -> BB6837 [tailport=s, headport=n, color=gray]
BB6798 [shape=record label="{20207: read-variable['_braceL',v3,-]|20208: ==[v2,v3,v4]|20209: if[v4](true-block:6811,false-block:6812)}" ] 
BB6798 -> BB6811 [tailport=s, headport=n, headlabel="      6811"]
BB6798 -> BB6812 [tailport=s, headport=n, headlabel="      6812"]
BB6798 -> BB6837 [tailport=s, headport=n, color=gray]
BB6799 [shape=record label="{20210: call-startNode [v74,v75,v73]}" ] 
BB6799 -> BB6800 [tailport=s, headport=n, headlabel="      6800"]
BB6799 -> BB6837 [tailport=s, headport=n, color=gray]
BB6800 [shape=record label="{20211: write-variable[v73,'node']*|20212: read-variable['next',v77,v76]}" ] 
BB6800 -> BB6801 [tailport=s, headport=n, headlabel="      6801"]
BB6800 -> BB6837 [tailport=s, headport=n, color=gray]
BB6801 [shape=record label="{20213: call-next [v76,v77,-]*}" ] 
BB6801 -> BB6802 [tailport=s, headport=n, headlabel="      6802"]
BB6801 -> BB6837 [tailport=s, headport=n, color=gray]
BB6802 [shape=record label="{20214: read-variable['options',v81,-]|20215: read-property[v81,'ecmaVersion',v79]|20216: \<variable-non-null-undef\>['options']|20217: constant[6.0,v80]|20218: \>=[v79,v80,v78]|20219: if[v78](true-block:6803,false-block:6804)}" ] 
BB6802 -> BB6804 [tailport=s, headport=n, headlabel="      6804"]
BB6802 -> BB6803 [tailport=s, headport=n, headlabel="      6803"]
BB6802 -> BB6837 [tailport=s, headport=n, color=gray]
BB6803 [shape=record label="{20220: read-variable['tokType',v82,-]|20221: read-variable['_for',v83,-]|20222: ===[v82,v83,v78]}" ] 
BB6803 -> BB6804 [tailport=s, headport=n]
BB6803 -> BB6837 [tailport=s, headport=n, color=gray]
BB6804 [shape=record label="{20223: if[v78](true-block:6805,false-block:6807)}" ] 
BB6804 -> BB6805 [tailport=s, headport=n, headlabel="      6805"]
BB6804 -> BB6807 [tailport=s, headport=n, headlabel="      6807"]
BB6805 [shape=record label="{20224: read-variable['parseComprehension',v83,v82]|20225: read-variable['node',v84,-]|20226: constant[false,v85]}" ] 
BB6805 -> BB6806 [tailport=s, headport=n, headlabel="      6806"]
BB6805 -> BB6837 [tailport=s, headport=n, color=gray]
BB6806 [shape=record label="{20227: call-parseComprehension [v82,v83,v84,v85,v1]}" ] 
BB6806 -> BB6836 [tailport=s, headport=n]
BB6806 -> BB6837 [tailport=s, headport=n, color=gray]
BB6807 [shape=record label="{20228: read-variable['node',v83,-]|20229: read-variable['parseExprList',v85,v84]|20230: read-variable['_bracketR',v86,-]|20231: constant[true,v87]|20232: constant[true,v88]}" ] 
BB6807 -> BB6808 [tailport=s, headport=n, headlabel="      6808"]
BB6807 -> BB6837 [tailport=s, headport=n, color=gray]
BB6808 [shape=record label="{20233: call-parseExprList [v84,v85,v86,v87,v88,v82]}" ] 
BB6808 -> BB6809 [tailport=s, headport=n, headlabel="      6809"]
BB6808 -> BB6837 [tailport=s, headport=n, color=gray]
BB6809 [shape=record label="{20234: write-property[v83,'elements',v82]|20235: \<variable-non-null-undef\>['node']*|20236: read-variable['finishNode',v90,v89]|20237: read-variable['node',v91,-]|20238: constant[\"ArrayExpression\",v92]}" ] 
BB6809 -> BB6810 [tailport=s, headport=n, headlabel="      6810"]
BB6809 -> BB6837 [tailport=s, headport=n, color=gray]
BB6810 [shape=record label="{20239: call-finishNode [v89,v90,v91,v92,v1]}" ] 
BB6810 -> BB6836 [tailport=s, headport=n]
BB6810 -> BB6837 [tailport=s, headport=n, color=gray]
BB6811 [shape=record label="{20240: read-variable['parseObj',v94,v93]}" ] 
BB6811 -> BB6813 [tailport=s, headport=n, headlabel="      6813"]
BB6811 -> BB6837 [tailport=s, headport=n, color=gray]
BB6812 [shape=record label="{20241: read-variable['_function',v3,-]|20242: ==[v2,v3,v4]|20243: if[v4](true-block:6814,false-block:6815)}" ] 
BB6812 -> BB6814 [tailport=s, headport=n, headlabel="      6814"]
BB6812 -> BB6815 [tailport=s, headport=n, headlabel="      6815"]
BB6812 -> BB6837 [tailport=s, headport=n, color=gray]
BB6813 [shape=record label="{20244: call-parseObj [v93,v94,v1]}" ] 
BB6813 -> BB6836 [tailport=s, headport=n]
BB6813 -> BB6837 [tailport=s, headport=n, color=gray]
BB6814 [shape=record label="{20245: read-variable['startNode',v97,v96]}" ] 
BB6814 -> BB6816 [tailport=s, headport=n, headlabel="      6816"]
BB6814 -> BB6837 [tailport=s, headport=n, color=gray]
BB6815 [shape=record label="{20246: read-variable['_class',v3,-]|20247: ==[v2,v3,v4]|20248: if[v4](true-block:6821,false-block:6822)}" ] 
BB6815 -> BB6821 [tailport=s, headport=n, headlabel="      6821"]
BB6815 -> BB6822 [tailport=s, headport=n, headlabel="      6822"]
BB6815 -> BB6837 [tailport=s, headport=n, color=gray]
BB6816 [shape=record label="{20249: call-startNode [v96,v97,v95]}" ] 
BB6816 -> BB6817 [tailport=s, headport=n, headlabel="      6817"]
BB6816 -> BB6837 [tailport=s, headport=n, color=gray]
BB6817 [shape=record label="{20250: write-variable[v95,'node']*|20251: read-variable['next',v99,v98]}" ] 
BB6817 -> BB6818 [tailport=s, headport=n, headlabel="      6818"]
BB6817 -> BB6837 [tailport=s, headport=n, color=gray]
BB6818 [shape=record label="{20252: call-next [v98,v99,-]*}" ] 
BB6818 -> BB6819 [tailport=s, headport=n, headlabel="      6819"]
BB6818 -> BB6837 [tailport=s, headport=n, color=gray]
BB6819 [shape=record label="{20253: read-variable['parseFunction',v101,v100]|20254: read-variable['node',v102,-]|20255: constant[false,v103]}" ] 
BB6819 -> BB6820 [tailport=s, headport=n, headlabel="      6820"]
BB6819 -> BB6837 [tailport=s, headport=n, color=gray]
BB6820 [shape=record label="{20256: call-parseFunction [v100,v101,v102,v103,v1]}" ] 
BB6820 -> BB6836 [tailport=s, headport=n]
BB6820 -> BB6837 [tailport=s, headport=n, color=gray]
BB6821 [shape=record label="{20257: read-variable['parseClass',v105,v104]|20258: read-variable['startNode',v108,v107]}" ] 
BB6821 -> BB6823 [tailport=s, headport=n, headlabel="      6823"]
BB6821 -> BB6837 [tailport=s, headport=n, color=gray]
BB6822 [shape=record label="{20259: read-variable['_new',v3,-]|20260: ==[v2,v3,v4]|20261: if[v4](true-block:6826,false-block:6827)}" ] 
BB6822 -> BB6826 [tailport=s, headport=n, headlabel="      6826"]
BB6822 -> BB6827 [tailport=s, headport=n, headlabel="      6827"]
BB6822 -> BB6837 [tailport=s, headport=n, color=gray]
BB6823 [shape=record label="{20262: call-startNode [v107,v108,v106]}" ] 
BB6823 -> BB6824 [tailport=s, headport=n, headlabel="      6824"]
BB6823 -> BB6837 [tailport=s, headport=n, color=gray]
BB6824 [shape=record label="{20263: constant[false,v109]}" ] 
BB6824 -> BB6825 [tailport=s, headport=n, headlabel="      6825"]
BB6825 [shape=record label="{20264: call-parseClass [v104,v105,v106,v109,v1]}" ] 
BB6825 -> BB6836 [tailport=s, headport=n]
BB6825 -> BB6837 [tailport=s, headport=n, color=gray]
BB6826 [shape=record label="{20265: read-variable['parseNew',v111,v110]}" ] 
BB6826 -> BB6828 [tailport=s, headport=n, headlabel="      6828"]
BB6826 -> BB6837 [tailport=s, headport=n, color=gray]
BB6827 [shape=record label="{20266: read-variable['_ellipsis',v3,-]|20267: ==[v2,v3,v4]|20268: if[v4](true-block:6829,false-block:6830)}" ] 
BB6827 -> BB6829 [tailport=s, headport=n, headlabel="      6829"]
BB6827 -> BB6830 [tailport=s, headport=n, headlabel="      6830"]
BB6827 -> BB6837 [tailport=s, headport=n, color=gray]
BB6828 [shape=record label="{20269: call-parseNew [v110,v111,v1]}" ] 
BB6828 -> BB6836 [tailport=s, headport=n]
BB6828 -> BB6837 [tailport=s, headport=n, color=gray]
BB6829 [shape=record label="{20270: read-variable['parseSpread',v113,v112]}" ] 
BB6829 -> BB6831 [tailport=s, headport=n, headlabel="      6831"]
BB6829 -> BB6837 [tailport=s, headport=n, color=gray]
BB6830 [shape=record label="{20271: read-variable['_bquote',v3,-]|20272: ==[v2,v3,v4]|20273: if[v4](true-block:6832,false-block:6834)}" ] 
BB6830 -> BB6832 [tailport=s, headport=n, headlabel="      6832"]
BB6830 -> BB6834 [tailport=s, headport=n, headlabel="      6834"]
BB6830 -> BB6837 [tailport=s, headport=n, color=gray]
BB6831 [shape=record label="{20274: call-parseSpread [v112,v113,v1]}" ] 
BB6831 -> BB6836 [tailport=s, headport=n]
BB6831 -> BB6837 [tailport=s, headport=n, color=gray]
BB6832 [shape=record label="{20275: read-variable['parseTemplate',v115,v114]}" ] 
BB6832 -> BB6833 [tailport=s, headport=n, headlabel="      6833"]
BB6832 -> BB6837 [tailport=s, headport=n, color=gray]
BB6833 [shape=record label="{20276: call-parseTemplate [v114,v115,v1]}" ] 
BB6833 -> BB6836 [tailport=s, headport=n]
BB6833 -> BB6837 [tailport=s, headport=n, color=gray]
BB6834 [shape=record label="{20277: read-variable['unexpected',v117,v116]}" ] 
BB6834 -> BB6835 [tailport=s, headport=n, headlabel="      6835"]
BB6834 -> BB6837 [tailport=s, headport=n, color=gray]
BB6835 [shape=record label="{20278: call-unexpected [v116,v117,-]*}" ] 
BB6835 -> BB6836 [tailport=s, headport=n]
BB6835 -> BB6837 [tailport=s, headport=n, color=gray]
BB6836 [shape=record label="{20279: return[v1]}" ] 
BB6837 [shape=record label="{20280: exceptional-return}" ] 
//#$~ 6604
}
