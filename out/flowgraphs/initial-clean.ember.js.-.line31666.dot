digraph {
rankdir="TD"
BB_entry1440[shape=none,label=""];
BB_entry1440 -> BB16835 [tailport=s, headport=n, headlabel="    16835"]
BB16835 [shape=record label="{57078: constant[undefined,v1]}" ] 
BB16835 -> BB16836 [tailport=s, headport=n, headlabel="      16836"]
BB16836 [shape=record label="{57079: read-variable['Enumerable',v5,-]|57080: read-property[v5,'detect',-]|57081: \<variable-non-null-undef\>['Enumerable']|57082: read-variable['objects',v6,-]}" ] 
BB16836 -> BB16837 [tailport=s, headport=n, headlabel="      16837"]
BB16836 -> BB16851 [tailport=s, headport=n, color=gray, headlabel="      16851"]
BB16837 [shape=record label="{57083: call-Enumerable.detect [v5,'detect',v6,v3]}" ] 
BB16837 -> BB16838 [tailport=s, headport=n, headlabel="      16838"]
BB16837 -> BB16851 [tailport=s, headport=n, color=gray]
BB16838 [shape=record label="{57084: if[v3](true-block:16841,false-block:16839)}" ] 
BB16838 -> BB16841 [tailport=s, headport=n, headlabel="      16841"]
BB16838 -> BB16839 [tailport=s, headport=n, headlabel="      16839"]
BB16839 [shape=record label="{57085: read-variable['isArray',v5,v4]|57086: read-variable['objects',v6,-]}" ] 
BB16839 -> BB16840 [tailport=s, headport=n, headlabel="      16840"]
BB16839 -> BB16851 [tailport=s, headport=n, color=gray]
BB16840 [shape=record label="{57087: call-isArray [v4,v5,v6,v3]}" ] 
BB16840 -> BB16841 [tailport=s, headport=n]
BB16840 -> BB16851 [tailport=s, headport=n, color=gray]
BB16841 [shape=record label="{57088: ![v3,v2]|57089: if[v2](true-block:16842,false-block:16845)}" ] 
BB16841 -> BB16842 [tailport=s, headport=n, headlabel="      16842"]
BB16841 -> BB16845 [tailport=s, headport=n, headlabel="      16845"]
BB16841 -> BB16851 [tailport=s, headport=n, color=gray]
BB16842 [shape=record label="{57090: read-variable['TypeError',v5,-]|57091: constant[\"Must pass Ember.Enumerable to Ember.MutableArray#pushObjects\",v6]}" ] 
BB16842 -> BB16843 [tailport=s, headport=n, headlabel="      16843"]
BB16842 -> BB16851 [tailport=s, headport=n, color=gray]
BB16843 [shape=record label="{57092: construct [-,v5,v6,v4]}" ] 
BB16843 -> BB16844 [tailport=s, headport=n, headlabel="      16844"]
BB16843 -> BB16851 [tailport=s, headport=n, color=gray]
BB16844 [shape=record label="{57093: throw[v4]*}" ] 
BB16844 -> BB16845 [tailport=s, headport=n]
BB16844 -> BB16851 [tailport=s, headport=n, color=gray]
BB16845 [shape=record label="{57094: read-variable['this',v5,-]|57095: read-property[v5,'replace',-]|57096: read-variable['get',v8,v7]|57097: read-variable['this',v9,-]|57098: constant[\"length\",v10]}" ] 
BB16845 -> BB16846 [tailport=s, headport=n, headlabel="      16846"]
BB16845 -> BB16851 [tailport=s, headport=n, color=gray]
BB16846 [shape=record label="{57099: call-get [v7,v8,v9,v10,v6]}" ] 
BB16846 -> BB16847 [tailport=s, headport=n, headlabel="      16847"]
BB16846 -> BB16851 [tailport=s, headport=n, color=gray]
BB16847 [shape=record label="{57100: constant[0.0,v11]|57101: read-variable['objects',v12,-]}" ] 
BB16847 -> BB16848 [tailport=s, headport=n, headlabel="      16848"]
BB16847 -> BB16851 [tailport=s, headport=n, color=gray]
BB16848 [shape=record label="{57102: call-this.replace [v5,'replace',v6,v11,v12,-]*}" ] 
BB16848 -> BB16849 [tailport=s, headport=n, headlabel="      16849"]
BB16848 -> BB16851 [tailport=s, headport=n, color=gray]
BB16849 [shape=record label="{57103: read-variable['this',v1,-]}" ] 
BB16849 -> BB16850 [tailport=s, headport=n, headlabel="      16850"]
BB16849 -> BB16851 [tailport=s, headport=n, color=gray]
BB16850 [shape=record label="{57104: return[v1]}" ] 
BB16851 [shape=record label="{57105: exceptional-return}" ] 
//#$~ 31671
}
