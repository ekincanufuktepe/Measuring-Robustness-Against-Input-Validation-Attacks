digraph {
rankdir="TD"
BB_entry227[shape=none,label=""];
BB_entry227 -> BB2880 [tailport=s, headport=n, headlabel="    2880"]
BB2880 [shape=record label="{8356: constant[undefined,v1]|8357: vardecl['h']|8358: vardecl['l']|8359: vardecl['n']|8360: vardecl['m']|8361: vardecl['x']|8362: vardecl['t']|8363: vardecl['w']|8364: vardecl['z']}" ] 
BB2880 -> BB2881 [tailport=s, headport=n, headlabel="      2881"]
BB2881 [shape=record label="{8365: read-variable['a',v6,-]|8366: read-property[v6,'a',v5]|8367: \<variable-non-null-undef\>['a']|8368: read-property[v5,'f',v4]|8369: \<property-non-null-undef\>[v6,'a']|8370: read-property[v4,'get',-]|8371: \<property-non-null-undef\>[v5,'f']|8372: read-variable['b',v7,-]|8373: read-variable['r',v8,-]}" ] 
BB2881 -> BB2882 [tailport=s, headport=n, headlabel="      2882"]
BB2881 -> BB2917 [tailport=s, headport=n, color=gray, headlabel="      2917"]
BB2882 [shape=record label="{8374: call-a.a.f.get [v4,'get',v7,v8,v2]}" ] 
BB2882 -> BB2883 [tailport=s, headport=n, headlabel="      2883"]
BB2882 -> BB2917 [tailport=s, headport=n, color=gray]
BB2883 [shape=record label="{8375: write-variable[v2,'h']*|8376: read-variable['d',v10,-]|8377: ![v10,v9]|8378: if[v9](true-block:2884,false-block:2890)}" ] 
BB2883 -> BB2884 [tailport=s, headport=n, headlabel="      2884"]
BB2883 -> BB2890 [tailport=s, headport=n, headlabel="      2890"]
BB2883 -> BB2917 [tailport=s, headport=n, color=gray]
BB2884 [shape=record label="{8379: read-variable['h',v11,-]|8380: if[v11](true-block:2885,false-block:2888)}" ] 
BB2884 -> BB2885 [tailport=s, headport=n, headlabel="      2885"]
BB2884 -> BB2888 [tailport=s, headport=n, headlabel="      2888"]
BB2884 -> BB2917 [tailport=s, headport=n, color=gray]
BB2885 [shape=record label="{8381: read-variable['Error',v14,v13]|8382: constant[\"You cannot apply bindings multiple times to the same element.\",v15]}" ] 
BB2885 -> BB2886 [tailport=s, headport=n, headlabel="      2886"]
BB2885 -> BB2917 [tailport=s, headport=n, color=gray]
BB2886 [shape=record label="{8383: call-Error [v13,v14,v15,v12]}" ] 
BB2886 -> BB2887 [tailport=s, headport=n, headlabel="      2887"]
BB2886 -> BB2917 [tailport=s, headport=n, color=gray]
BB2887 [shape=record label="{8384: throw[v12]*}" ] 
BB2887 -> BB2888 [tailport=s, headport=n]
BB2887 -> BB2917 [tailport=s, headport=n, color=gray]
BB2888 [shape=record label="{8385: read-variable['a',v15,-]|8386: read-property[v15,'a',v14]|8387: \<variable-non-null-undef\>['a']|8388: read-property[v14,'f',v13]|8389: \<property-non-null-undef\>[v15,'a']|8390: read-property[v13,'set',-]|8391: \<property-non-null-undef\>[v14,'f']|8392: read-variable['b',v16,-]|8393: read-variable['r',v17,-]|8394: constant[0.0,v19]|8395: ![v19,v18]}" ] 
BB2888 -> BB2889 [tailport=s, headport=n, headlabel="      2889"]
BB2888 -> BB2917 [tailport=s, headport=n, color=gray]
BB2889 [shape=record label="{8396: call-a.a.f.set [v13,'set',v16,v17,v18,-]*}" ] 
BB2889 -> BB2890 [tailport=s, headport=n]
BB2889 -> BB2917 [tailport=s, headport=n, color=gray]
BB2890 [shape=record label="{8397: read-variable['h',v12,-]|8398: ![v12,v11]|8399: if[v11](true-block:2891,false-block:2894)}" ] 
BB2890 -> BB2894 [tailport=s, headport=n, headlabel="      2894"]
BB2890 -> BB2891 [tailport=s, headport=n, headlabel="      2891"]
BB2890 -> BB2917 [tailport=s, headport=n, color=gray]
BB2891 [shape=record label="{8400: read-variable['f',v13,-]|8401: if[v13](true-block:2892,false-block:2894)}" ] 
BB2891 -> BB2894 [tailport=s, headport=n]
BB2891 -> BB2892 [tailport=s, headport=n, headlabel="      2892"]
BB2891 -> BB2917 [tailport=s, headport=n, color=gray]
BB2892 [shape=record label="{8402: read-variable['a',v15,-]|8403: read-property[v15,'Eb',-]|8404: \<variable-non-null-undef\>['a']|8405: read-variable['b',v16,-]|8406: read-variable['k',v17,-]}" ] 
BB2892 -> BB2893 [tailport=s, headport=n, headlabel="      2893"]
BB2892 -> BB2917 [tailport=s, headport=n, color=gray]
BB2893 [shape=record label="{8407: call-a.Eb [v15,'Eb',v16,v17,-]}" ] 
BB2893 -> BB2894 [tailport=s, headport=n]
BB2893 -> BB2917 [tailport=s, headport=n, color=gray]
BB2894 [shape=record label="{8408: read-variable['d',v13,-]|8409: if[v13](true-block:2895,false-block:2896)}" ] 
BB2894 -> BB2896 [tailport=s, headport=n, headlabel="      2896"]
BB2894 -> BB2895 [tailport=s, headport=n, headlabel="      2895"]
BB2894 -> BB2917 [tailport=s, headport=n, color=gray]
BB2895 [shape=record label="{8410: constant[\"function\",v14]|8411: typeof['d',v15]|8412: !==[v14,v15,v13]}" ] 
BB2895 -> BB2896 [tailport=s, headport=n]
BB2895 -> BB2917 [tailport=s, headport=n, color=gray]
BB2896 [shape=record label="{8413: if[v13](true-block:2897,false-block:2898)}" ] 
BB2896 -> BB2897 [tailport=s, headport=n, headlabel="      2897"]
BB2896 -> BB2898 [tailport=s, headport=n, headlabel="      2898"]
BB2897 [shape=record label="{8414: read-variable['d',v14,-]|8415: write-variable[v14,'l']*}" ] 
BB2897 -> BB2907 [tailport=s, headport=n, headlabel="      2907"]
BB2897 -> BB2917 [tailport=s, headport=n, color=gray]
BB2898 [shape=record label="{8416: read-variable['a',v16,-]|8417: read-property[v16,'J',v15]|8418: \<variable-non-null-undef\>['a']|8419: read-property[v15,'instance',v14]|8420: \<property-non-null-undef\>[v16,'J']|8421: write-variable[v14,'n']*|8422: read-variable['n',v18,-]|8423: read-property[v18,'getBindingAccessors',v17]|8424: \<variable-non-null-undef\>['n']|8425: if[v17](true-block:2900,false-block:2899)}" ] 
BB2898 -> BB2900 [tailport=s, headport=n, headlabel="      2900"]
BB2898 -> BB2899 [tailport=s, headport=n, headlabel="      2899"]
BB2898 -> BB2917 [tailport=s, headport=n, color=gray]
BB2899 [shape=record label="{8426: read-variable['e',v17,-]}" ] 
BB2899 -> BB2900 [tailport=s, headport=n]
BB2899 -> BB2917 [tailport=s, headport=n, color=gray]
BB2900 [shape=record label="{8427: write-variable[v17,'m']*|8428: read-variable['a',v20,-]|8429: read-property[v20,'h',-]|8430: \<variable-non-null-undef\>['a']|8431: function-expr[function ( ),v21]|8432: constant[null,v22]|8433: new[v23]|8434: read-variable['b',v24,-]|8435: write-property[v23,'G',v24]}" ] 
BB2900 -> BB2901 [tailport=s, headport=n, headlabel="      2901"]
BB2900 -> BB2917 [tailport=s, headport=n, color=gray]
BB2901 [shape=record label="{8436: call-a.h [v20,'h',v21,v22,v23,v18]}" ] 
BB2901 -> BB2902 [tailport=s, headport=n, headlabel="      2902"]
BB2901 -> BB2917 [tailport=s, headport=n, color=gray]
BB2902 [shape=record label="{8437: write-variable[v18,'x']*|8438: read-variable['l',v25,-]|8439: if[v25](true-block:2903,false-block:2905)}" ] 
BB2902 -> BB2905 [tailport=s, headport=n, headlabel="      2905"]
BB2902 -> BB2903 [tailport=s, headport=n, headlabel="      2903"]
BB2902 -> BB2917 [tailport=s, headport=n, color=gray]
BB2903 [shape=record label="{8440: read-variable['x',v27,-]|8441: read-property[v27,'ga',-]|8442: \<variable-non-null-undef\>['x']}" ] 
BB2903 -> BB2904 [tailport=s, headport=n, headlabel="      2904"]
BB2903 -> BB2917 [tailport=s, headport=n, color=gray]
BB2904 [shape=record label="{8443: call-x.ga [v27,'ga',v25]}" ] 
BB2904 -> BB2905 [tailport=s, headport=n]
BB2904 -> BB2917 [tailport=s, headport=n, color=gray]
BB2905 [shape=record label="{8444: if[v25](true-block:2907,false-block:2906)}" ] 
BB2905 -> BB2907 [tailport=s, headport=n]
BB2905 -> BB2906 [tailport=s, headport=n, headlabel="      2906"]
BB2906 [shape=record label="{8445: constant[null,v26]|8446: write-variable[v26,'x']}" ] 
BB2906 -> BB2907 [tailport=s, headport=n]
BB2907 [shape=record label="{8447: read-variable['l',v14,-]|8448: if[v14](true-block:2908,false-block:2915)}" ] 
BB2907 -> BB2908 [tailport=s, headport=n, headlabel="      2908"]
BB2907 -> BB2915 [tailport=s, headport=n, headlabel="      2915"]
BB2907 -> BB2917 [tailport=s, headport=n, color=gray]
BB2908 [shape=record label="{8449: read-variable['x',v16,-]|8450: if[v16](true-block:2909,false-block:2910)}" ] 
BB2908 -> BB2909 [tailport=s, headport=n, headlabel="      2909"]
BB2908 -> BB2910 [tailport=s, headport=n, headlabel="      2910"]
BB2908 -> BB2917 [tailport=s, headport=n, color=gray]
BB2909 [shape=record label="{8451: function-expr[function ( a ),v15]}" ] 
BB2909 -> BB2911 [tailport=s, headport=n, headlabel="      2911"]
BB2910 [shape=record label="{8452: function-expr[function ( a ),v15]}" ] 
BB2910 -> BB2911 [tailport=s, headport=n]
BB2911 [shape=record label="{8453: write-variable[v15,'w']*|8454: function-expr[function ( ),v17]|8455: write-variable[v17,'z']*|8456: read-variable['z',v19,-]|8457: function-expr[function ( a ),v18]|8458: write-property[v19,'get',v18]|8459: \<variable-non-null-undef\>['z']*|8460: read-variable['z',v21,-]|8461: function-expr[function ( a ),v20]|8462: write-property[v21,'has',v20]|8463: \<variable-non-null-undef\>['z']*|8464: read-variable['g',v24,v23]|8465: read-variable['l',v25,-]}" ] 
BB2911 -> BB2912 [tailport=s, headport=n, headlabel="      2912"]
BB2911 -> BB2917 [tailport=s, headport=n, color=gray]
BB2912 [shape=record label="{8466: call-g [v23,v24,v25,v22]}" ] 
BB2912 -> BB2913 [tailport=s, headport=n, headlabel="      2913"]
BB2912 -> BB2917 [tailport=s, headport=n, color=gray]
BB2913 [shape=record label="{8467: write-variable[v22,'f']*|8468: read-variable['a',v28,-]|8469: read-property[v28,'a',v27]|8470: \<variable-non-null-undef\>['a']|8471: read-property[v27,'r',-]|8472: \<property-non-null-undef\>[v28,'a']|8473: read-variable['f',v29,-]|8474: function-expr[function ( c ),v30]}" ] 
BB2913 -> BB2914 [tailport=s, headport=n, headlabel="      2914"]
BB2913 -> BB2917 [tailport=s, headport=n, color=gray]
BB2914 [shape=record label="{8475: call-a.a.r [v27,'r',v29,v30,-]*}" ] 
BB2914 -> BB2915 [tailport=s, headport=n]
BB2914 -> BB2917 [tailport=s, headport=n, color=gray]
BB2915 [shape=record label="{8476: new[v1]|8477: read-variable['t',v16,-]|8478: read-variable['p',v17,-]|8479: ===[v16,v17,v15]|8480: write-property[v1,'shouldBindDescendants',v15]}" ] 
BB2915 -> BB2916 [tailport=s, headport=n, headlabel="      2916"]
BB2915 -> BB2917 [tailport=s, headport=n, color=gray]
BB2916 [shape=record label="{8481: return[v1]}" ] 
BB2917 [shape=record label="{8482: exceptional-return}" ] 
}
