digraph {
rankdir="TD"
BB_entry19[shape=none,label=""];
BB_entry19 -> BB248 [tailport=s, headport=n, headlabel="    248"]
BB248 [shape=record label="{900: constant[undefined,v1]}" ] 
BB248 -> BB249 [tailport=s, headport=n, headlabel="      249"]
BB249 [shape=record label="{901: constant[\"default\",v3]|902: read-variable['node',v5,-]|903: read-property[v5,'expr',v4]|904: \<variable-non-null-undef\>['node']|905: ==[v3,v4,v2]|906: if[v2](true-block:250,false-block:251)}" ] 
BB249 -> BB250 [tailport=s, headport=n, headlabel="      250"]
BB249 -> BB251 [tailport=s, headport=n, headlabel="      251"]
BB249 -> BB260 [tailport=s, headport=n, color=gray, headlabel="      260"]
BB250 [shape=record label="{907: read-variable['this',v8,-]|908: read-property[v8,'buf',v7]|909: read-property[v7,'push',-]|910: \<property-non-null-undef\>[v8,'buf']|911: constant[\"default:\",v9]}" ] 
BB250 -> BB252 [tailport=s, headport=n, headlabel="      252"]
BB250 -> BB260 [tailport=s, headport=n, color=gray]
BB251 [shape=record label="{912: read-variable['this',v8,-]|913: read-property[v8,'buf',v7]|914: read-property[v7,'push',-]|915: \<property-non-null-undef\>[v8,'buf']|916: constant[\"case \",v12]|917: read-variable['node',v14,-]|918: read-property[v14,'expr',v13]|919: \<variable-non-null-undef\>['node']|920: +[v12,v13,v10]|921: constant[\":\",v11]|922: +[v10,v11,v9]}" ] 
BB251 -> BB253 [tailport=s, headport=n, headlabel="      253"]
BB251 -> BB260 [tailport=s, headport=n, color=gray]
BB252 [shape=record label="{923: call-this.buf.push [v7,'push',v9,-]*}" ] 
BB252 -> BB254 [tailport=s, headport=n, headlabel="      254"]
BB252 -> BB260 [tailport=s, headport=n, color=gray]
BB253 [shape=record label="{924: call-this.buf.push [v7,'push',v9,-]*}" ] 
BB253 -> BB254 [tailport=s, headport=n]
BB253 -> BB260 [tailport=s, headport=n, color=gray]
BB254 [shape=record label="{925: read-variable['node',v7,-]|926: read-property[v7,'block',v6]|927: \<variable-non-null-undef\>['node']|928: if[v6](true-block:255,false-block:259)}" ] 
BB254 -> BB255 [tailport=s, headport=n, headlabel="      255"]
BB254 -> BB259 [tailport=s, headport=n, headlabel="      259"]
BB254 -> BB260 [tailport=s, headport=n, color=gray]
BB255 [shape=record label="{929: read-variable['this',v9,-]|930: read-property[v9,'visit',-]|931: read-variable['node',v11,-]|932: read-property[v11,'block',v10]|933: \<variable-non-null-undef\>['node']}" ] 
BB255 -> BB256 [tailport=s, headport=n, headlabel="      256"]
BB255 -> BB260 [tailport=s, headport=n, color=gray]
BB256 [shape=record label="{934: call-this.visit [v9,'visit',v10,-]*}" ] 
BB256 -> BB257 [tailport=s, headport=n, headlabel="      257"]
BB256 -> BB260 [tailport=s, headport=n, color=gray]
BB257 [shape=record label="{935: read-variable['this',v14,-]|936: read-property[v14,'buf',v13]|937: read-property[v13,'push',-]|938: \<property-non-null-undef\>[v14,'buf']|939: constant[\"  break;\",v15]}" ] 
BB257 -> BB258 [tailport=s, headport=n, headlabel="      258"]
BB257 -> BB260 [tailport=s, headport=n, color=gray]
BB258 [shape=record label="{940: call-this.buf.push [v13,'push',v15,-]*}" ] 
BB258 -> BB259 [tailport=s, headport=n]
BB258 -> BB260 [tailport=s, headport=n, color=gray]
BB259 [shape=record label="{941: return[v1]}" ] 
BB260 [shape=record label="{942: exceptional-return}" ] 
//#$~ 260
}
