digraph {
rankdir="TD"
BB_entry1860[shape=none,label=""];
BB_entry1860 -> BB21266 [tailport=s, headport=n, headlabel="    21266"]
BB21266 [shape=record label="{71221: constant[undefined,v1]}" ] 
BB21266 -> BB21267 [tailport=s, headport=n, headlabel="      21267"]
BB21267 [shape=record label="{71222: typeof['content',v3]|71223: constant[\"string\",v4]|71224: ===[v3,v4,v2]|71225: if[v2](true-block:21268,false-block:21269)}" ] 
BB21267 -> BB21268 [tailport=s, headport=n, headlabel="      21268"]
BB21267 -> BB21269 [tailport=s, headport=n, headlabel="      21269"]
BB21267 -> BB21278 [tailport=s, headport=n, color=gray, headlabel="      21278"]
BB21268 [shape=record label="{71226: read-variable['this',v8,-]|71227: read-property[v8,'buffer',v6]|71228: constant[null,v7]|71229: ===[v6,v7,v5]|71230: if[v5](true-block:21270,false-block:21271)}" ] 
BB21268 -> BB21270 [tailport=s, headport=n, headlabel="      21270"]
BB21268 -> BB21271 [tailport=s, headport=n, headlabel="      21271"]
BB21268 -> BB21278 [tailport=s, headport=n, color=gray]
BB21269 [shape=record label="{71231: read-variable['Ember',v6,-]|71232: read-property[v6,'assert',-]|71233: \<variable-non-null-undef\>['Ember']|71234: constant[\"A fragment cannot be pushed into a buffer that contains content\",v7]|71235: read-variable['this',v10,-]|71236: read-property[v10,'buffer',v9]|71237: ![v9,v8]}" ] 
BB21269 -> BB21274 [tailport=s, headport=n, headlabel="      21274"]
BB21269 -> BB21278 [tailport=s, headport=n, color=gray]
BB21270 [shape=record label="{71238: read-variable['this',v10,-]|71239: constant[\"\",v9]|71240: write-property[v10,'buffer',v9]*}" ] 
BB21270 -> BB21271 [tailport=s, headport=n]
BB21270 -> BB21278 [tailport=s, headport=n, color=gray]
BB21271 [shape=record label="{71241: read-variable['Ember',v10,-]|71242: read-property[v10,'assert',-]|71243: \<variable-non-null-undef\>['Ember']|71244: constant[\"A string cannot be pushed into the buffer after a fragment\",v11]|71245: read-variable['this',v15,-]|71246: read-property[v15,'buffer',v14]|71247: read-property[v14,'nodeType',v13]|71248: \<property-non-null-undef\>[v15,'buffer']|71249: ![v13,v12]}" ] 
BB21271 -> BB21272 [tailport=s, headport=n, headlabel="      21272"]
BB21271 -> BB21278 [tailport=s, headport=n, color=gray]
BB21272 [shape=record label="{71250: call-Ember.assert [v10,'assert',v11,v12,-]*}" ] 
BB21272 -> BB21273 [tailport=s, headport=n, headlabel="      21273"]
BB21272 -> BB21278 [tailport=s, headport=n, color=gray]
BB21273 [shape=record label="{71251: read-variable['this',v18,-]|71252: read-property[v18,'buffer',v17]|71253: read-variable['content',v19,-]|71254: +[v17,v19,v16]|71255: write-property[v18,'buffer',v16]*}" ] 
BB21273 -> BB21276 [tailport=s, headport=n, headlabel="      21276"]
BB21273 -> BB21278 [tailport=s, headport=n, color=gray]
BB21274 [shape=record label="{71256: call-Ember.assert [v6,'assert',v7,v8,-]*}" ] 
BB21274 -> BB21275 [tailport=s, headport=n, headlabel="      21275"]
BB21274 -> BB21278 [tailport=s, headport=n, color=gray]
BB21275 [shape=record label="{71257: read-variable['this',v12,-]|71258: read-variable['content',v11,-]|71259: write-property[v12,'buffer',v11]*}" ] 
BB21275 -> BB21276 [tailport=s, headport=n]
BB21275 -> BB21278 [tailport=s, headport=n, color=gray]
BB21276 [shape=record label="{71260: read-variable['this',v1,-]}" ] 
BB21276 -> BB21277 [tailport=s, headport=n, headlabel="      21277"]
BB21276 -> BB21278 [tailport=s, headport=n, color=gray]
BB21277 [shape=record label="{71261: return[v1]}" ] 
BB21278 [shape=record label="{71262: exceptional-return}" ] 
//#$~ 40021
}
