digraph {
rankdir="TD"
BB_entry41[shape=none,label=""];
BB_entry41 -> BB426 [tailport=s, headport=n, headlabel="    426"]
BB426 [shape=record label="{1432: constant[undefined,v1]|1433: vardecl['bRet']|1434: vardecl['objCompare']|1435: vardecl['objval_value']|1436: vardecl['objcomp_value']|1437: vardecl['cmpstr']}" ] 
BB426 -> BB427 [tailport=s, headport=n, headlabel="      427"]
BB427 [shape=record label="{1438: constant[true,v2]|1439: write-variable[v2,'bRet']*|1440: constant[null,v3]|1441: write-variable[v3,'objCompare']*|1442: read-variable['objValue',v6,-]|1443: read-property[v6,'form',v5]|1444: \<variable-non-null-undef\>['objValue']|1445: ![v5,v4]|1446: if[v4](true-block:428,false-block:431)}" ] 
BB427 -> BB428 [tailport=s, headport=n, headlabel="      428"]
BB427 -> BB431 [tailport=s, headport=n, headlabel="      431"]
BB427 -> BB504 [tailport=s, headport=n, color=gray, headlabel="      504"]
BB428 [shape=record label="{1447: read-variable['sfm_show_error_msg',v8,v7]|1448: constant[\"Error: No Form object!\",v9]|1449: read-variable['objValue',v10,-]}" ] 
BB428 -> BB429 [tailport=s, headport=n, headlabel="      429"]
BB428 -> BB504 [tailport=s, headport=n, color=gray]
BB429 [shape=record label="{1450: call-sfm_show_error_msg [v7,v8,v9,v10,-]*}" ] 
BB429 -> BB430 [tailport=s, headport=n, headlabel="      430"]
BB429 -> BB504 [tailport=s, headport=n, color=gray]
BB430 [shape=record label="{1451: constant[false,v1]}" ] 
BB430 -> BB503 [tailport=s, headport=n, headlabel="      503"]
BB431 [shape=record label="{1452: read-variable['objValue',v10,-]|1453: read-property[v10,'form',v9]|1454: \<variable-non-null-undef\>['objValue']|1455: read-property[v9,'elements',v8]|1456: \<property-non-null-undef\>[v10,'form']|1457: read-variable['strCompareElement',v11,-]|1458: read-property[v8,v11,v7]|1459: \<property-non-null-undef\>[v9,'elements']|1460: write-variable[v7,'objCompare']*|1461: read-variable['objCompare',v13,-]|1462: ![v13,v12]|1463: if[v12](true-block:432,false-block:435)}" ] 
BB431 -> BB432 [tailport=s, headport=n, headlabel="      432"]
BB431 -> BB435 [tailport=s, headport=n, headlabel="      435"]
BB431 -> BB504 [tailport=s, headport=n, color=gray]
BB432 [shape=record label="{1464: read-variable['sfm_show_error_msg',v15,v14]|1465: constant[\"Error: Element with name\",v19]|1466: read-variable['strCompareElement',v20,-]|1467: +[v19,v20,v17]|1468: constant[\" not found !\",v18]|1469: +[v17,v18,v16]|1470: read-variable['objValue',v21,-]}" ] 
BB432 -> BB433 [tailport=s, headport=n, headlabel="      433"]
BB432 -> BB504 [tailport=s, headport=n, color=gray]
BB433 [shape=record label="{1471: call-sfm_show_error_msg [v14,v15,v16,v21,-]*}" ] 
BB433 -> BB434 [tailport=s, headport=n, headlabel="      434"]
BB433 -> BB504 [tailport=s, headport=n, color=gray]
BB434 [shape=record label="{1472: constant[false,v1]}" ] 
BB434 -> BB503 [tailport=s, headport=n]
BB435 [shape=record label="{1473: read-variable['objValue',v15,-]|1474: read-property[v15,'value',v14]|1475: \<variable-non-null-undef\>['objValue']|1476: write-variable[v14,'objval_value']*|1477: read-variable['objCompare',v17,-]|1478: read-property[v17,'value',v16]|1479: \<variable-non-null-undef\>['objCompare']|1480: write-variable[v16,'objcomp_value']*|1481: read-variable['strvalidator',v19,-]|1482: constant[\"eqelmnt\",v20]|1483: !=[v19,v20,v18]|1484: if[v18](true-block:436,false-block:437)}" ] 
BB435 -> BB437 [tailport=s, headport=n, headlabel="      437"]
BB435 -> BB436 [tailport=s, headport=n, headlabel="      436"]
BB435 -> BB504 [tailport=s, headport=n, color=gray]
BB436 [shape=record label="{1485: read-variable['strvalidator',v21,-]|1486: constant[\"neelmnt\",v22]|1487: !=[v21,v22,v18]}" ] 
BB436 -> BB437 [tailport=s, headport=n]
BB436 -> BB504 [tailport=s, headport=n, color=gray]
BB437 [shape=record label="{1488: if[v18](true-block:438,false-block:458)}" ] 
BB437 -> BB438 [tailport=s, headport=n, headlabel="      438"]
BB437 -> BB458 [tailport=s, headport=n, headlabel="      458"]
BB438 [shape=record label="{1489: read-variable['objval_value',v23,-]|1490: read-property[v23,'replace',-]|1491: \<variable-non-null-undef\>['objval_value']|1492: read-variable['RegExp',v25,-]|1493: constant[\"\\\\,\",v26]|1494: constant[\"g\",v27]}" ] 
BB438 -> BB439 [tailport=s, headport=n, headlabel="      439"]
BB438 -> BB504 [tailport=s, headport=n, color=gray]
BB439 [shape=record label="{1495: construct [-,v25,v26,v27,v24]}" ] 
BB439 -> BB440 [tailport=s, headport=n, headlabel="      440"]
BB439 -> BB504 [tailport=s, headport=n, color=gray]
BB440 [shape=record label="{1496: constant[\"\",v28]}" ] 
BB440 -> BB441 [tailport=s, headport=n, headlabel="      441"]
BB441 [shape=record label="{1497: call-objval_value.replace [v23,'replace',v24,v28,v21]}" ] 
BB441 -> BB442 [tailport=s, headport=n, headlabel="      442"]
BB441 -> BB504 [tailport=s, headport=n, color=gray]
BB442 [shape=record label="{1498: write-variable[v21,'objval_value']*|1499: read-variable['objcomp_value',v31,-]|1500: read-property[v31,'replace',-]|1501: \<variable-non-null-undef\>['objcomp_value']|1502: read-variable['RegExp',v33,-]|1503: constant[\"\\\\,\",v34]|1504: constant[\"g\",v35]}" ] 
BB442 -> BB443 [tailport=s, headport=n, headlabel="      443"]
BB442 -> BB504 [tailport=s, headport=n, color=gray]
BB443 [shape=record label="{1505: construct [-,v33,v34,v35,v32]}" ] 
BB443 -> BB444 [tailport=s, headport=n, headlabel="      444"]
BB443 -> BB504 [tailport=s, headport=n, color=gray]
BB444 [shape=record label="{1506: constant[\"\",v36]}" ] 
BB444 -> BB445 [tailport=s, headport=n, headlabel="      445"]
BB445 [shape=record label="{1507: call-objcomp_value.replace [v31,'replace',v32,v36,v29]}" ] 
BB445 -> BB446 [tailport=s, headport=n, headlabel="      446"]
BB445 -> BB504 [tailport=s, headport=n, color=gray]
BB446 [shape=record label="{1508: write-variable[v29,'objcomp_value']*|1509: read-variable['isNaN',v39,v38]|1510: read-variable['objval_value',v40,-]}" ] 
BB446 -> BB447 [tailport=s, headport=n, headlabel="      447"]
BB446 -> BB504 [tailport=s, headport=n, color=gray]
BB447 [shape=record label="{1511: call-isNaN [v38,v39,v40,v37]}" ] 
BB447 -> BB448 [tailport=s, headport=n, headlabel="      448"]
BB447 -> BB504 [tailport=s, headport=n, color=gray]
BB448 [shape=record label="{1512: if[v37](true-block:449,false-block:452)}" ] 
BB448 -> BB449 [tailport=s, headport=n, headlabel="      449"]
BB448 -> BB452 [tailport=s, headport=n, headlabel="      452"]
BB449 [shape=record label="{1513: read-variable['sfm_show_error_msg',v42,v41]|1514: read-variable['objValue',v46,-]|1515: read-property[v46,'name',v44]|1516: \<variable-non-null-undef\>['objValue']|1517: constant[\": Should be a number \",v45]|1518: +[v44,v45,v43]|1519: read-variable['objValue',v47,-]}" ] 
BB449 -> BB450 [tailport=s, headport=n, headlabel="      450"]
BB449 -> BB504 [tailport=s, headport=n, color=gray]
BB450 [shape=record label="{1520: call-sfm_show_error_msg [v41,v42,v43,v47,-]*}" ] 
BB450 -> BB451 [tailport=s, headport=n, headlabel="      451"]
BB450 -> BB504 [tailport=s, headport=n, color=gray]
BB451 [shape=record label="{1521: constant[false,v1]}" ] 
BB451 -> BB503 [tailport=s, headport=n]
BB452 [shape=record label="{1522: read-variable['isNaN',v43,v42]|1523: read-variable['objcomp_value',v44,-]}" ] 
BB452 -> BB453 [tailport=s, headport=n, headlabel="      453"]
BB452 -> BB504 [tailport=s, headport=n, color=gray]
BB453 [shape=record label="{1524: call-isNaN [v42,v43,v44,v41]}" ] 
BB453 -> BB454 [tailport=s, headport=n, headlabel="      454"]
BB453 -> BB504 [tailport=s, headport=n, color=gray]
BB454 [shape=record label="{1525: if[v41](true-block:455,false-block:458)}" ] 
BB454 -> BB455 [tailport=s, headport=n, headlabel="      455"]
BB454 -> BB458 [tailport=s, headport=n]
BB455 [shape=record label="{1526: read-variable['sfm_show_error_msg',v46,v45]|1527: read-variable['objCompare',v50,-]|1528: read-property[v50,'name',v48]|1529: \<variable-non-null-undef\>['objCompare']|1530: constant[\": Should be a number \",v49]|1531: +[v48,v49,v47]|1532: read-variable['objCompare',v51,-]}" ] 
BB455 -> BB456 [tailport=s, headport=n, headlabel="      456"]
BB455 -> BB504 [tailport=s, headport=n, color=gray]
BB456 [shape=record label="{1533: call-sfm_show_error_msg [v45,v46,v47,v51,-]*}" ] 
BB456 -> BB457 [tailport=s, headport=n, headlabel="      457"]
BB456 -> BB504 [tailport=s, headport=n, color=gray]
BB457 [shape=record label="{1534: constant[false,v1]}" ] 
BB457 -> BB503 [tailport=s, headport=n]
BB458 [shape=record label="{1535: constant[\"\",v21]|1536: write-variable[v21,'cmpstr']*|1537: read-variable['strvalidator',v22,-]|1538: constant[\"eqelmnt\",v23]|1539: ==[v22,v23,v24]|1540: if[v24](true-block:460,false-block:461)}" ] 
BB458 -> BB460 [tailport=s, headport=n, headlabel="      460"]
BB458 -> BB461 [tailport=s, headport=n, headlabel="      461"]
BB458 -> BB504 [tailport=s, headport=n, color=gray]
BB459 [shape=record label="{1541: read-variable['bRet',v26,-]|1542: constant[false,v27]|1543: ==[v26,v27,v25]|1544: if[v25](true-block:496,false-block:502)}" ] 
BB459 -> BB496 [tailport=s, headport=n, headlabel="      496"]
BB459 -> BB502 [tailport=s, headport=n, headlabel="      502"]
BB459 -> BB504 [tailport=s, headport=n, color=gray]
BB460 [shape=record label="{1545: read-variable['objval_value',v26,-]|1546: read-variable['objcomp_value',v27,-]|1547: !=[v26,v27,v25]|1548: if[v25](true-block:462,false-block:459)}" ] 
BB460 -> BB462 [tailport=s, headport=n, headlabel="      462"]
BB460 -> BB459 [tailport=s, headport=n, headlabel="      459"]
BB460 -> BB504 [tailport=s, headport=n, color=gray]
BB461 [shape=record label="{1549: constant[\"ltelmnt\",v23]|1550: ==[v22,v23,v24]|1551: if[v24](true-block:463,false-block:464)}" ] 
BB461 -> BB463 [tailport=s, headport=n, headlabel="      463"]
BB461 -> BB464 [tailport=s, headport=n, headlabel="      464"]
BB461 -> BB504 [tailport=s, headport=n, color=gray]
BB462 [shape=record label="{1552: constant[\" should be equal to \",v28]|1553: write-variable[v28,'cmpstr']*|1554: constant[false,v29]|1555: write-variable[v29,'bRet']*}" ] 
BB462 -> BB459 [tailport=s, headport=n]
BB463 [shape=record label="{1556: read-variable['eval',v32,v31]|1557: read-variable['objval_value',v33,-]}" ] 
BB463 -> BB465 [tailport=s, headport=n, headlabel="      465"]
BB463 -> BB504 [tailport=s, headport=n, color=gray]
BB464 [shape=record label="{1558: constant[\"leelmnt\",v23]|1559: ==[v22,v23,v24]|1560: if[v24](true-block:470,false-block:471)}" ] 
BB464 -> BB470 [tailport=s, headport=n, headlabel="      470"]
BB464 -> BB471 [tailport=s, headport=n, headlabel="      471"]
BB464 -> BB504 [tailport=s, headport=n, color=gray]
BB465 [shape=record label="{1561: call-eval [v31,v32,v33,v29]}" ] 
BB465 -> BB466 [tailport=s, headport=n, headlabel="      466"]
BB465 -> BB504 [tailport=s, headport=n, color=gray]
BB466 [shape=record label="{1562: read-variable['eval',v35,v34]|1563: read-variable['objcomp_value',v36,-]}" ] 
BB466 -> BB467 [tailport=s, headport=n, headlabel="      467"]
BB466 -> BB504 [tailport=s, headport=n, color=gray]
BB467 [shape=record label="{1564: call-eval [v34,v35,v36,v30]}" ] 
BB467 -> BB468 [tailport=s, headport=n, headlabel="      468"]
BB467 -> BB504 [tailport=s, headport=n, color=gray]
BB468 [shape=record label="{1565: \>=[v29,v30,v28]|1566: if[v28](true-block:469,false-block:459)}" ] 
BB468 -> BB469 [tailport=s, headport=n, headlabel="      469"]
BB468 -> BB459 [tailport=s, headport=n]
BB468 -> BB504 [tailport=s, headport=n, color=gray]
BB469 [shape=record label="{1567: constant[\" should be less than \",v37]|1568: write-variable[v37,'cmpstr']*|1569: constant[false,v38]|1570: write-variable[v38,'bRet']*}" ] 
BB469 -> BB459 [tailport=s, headport=n]
BB470 [shape=record label="{1571: read-variable['eval',v41,v40]|1572: read-variable['objval_value',v42,-]}" ] 
BB470 -> BB472 [tailport=s, headport=n, headlabel="      472"]
BB470 -> BB504 [tailport=s, headport=n, color=gray]
BB471 [shape=record label="{1573: constant[\"gtelmnt\",v23]|1574: ==[v22,v23,v24]|1575: if[v24](true-block:477,false-block:478)}" ] 
BB471 -> BB477 [tailport=s, headport=n, headlabel="      477"]
BB471 -> BB478 [tailport=s, headport=n, headlabel="      478"]
BB471 -> BB504 [tailport=s, headport=n, color=gray]
BB472 [shape=record label="{1576: call-eval [v40,v41,v42,v38]}" ] 
BB472 -> BB473 [tailport=s, headport=n, headlabel="      473"]
BB472 -> BB504 [tailport=s, headport=n, color=gray]
BB473 [shape=record label="{1577: read-variable['eval',v44,v43]|1578: read-variable['objcomp_value',v45,-]}" ] 
BB473 -> BB474 [tailport=s, headport=n, headlabel="      474"]
BB473 -> BB504 [tailport=s, headport=n, color=gray]
BB474 [shape=record label="{1579: call-eval [v43,v44,v45,v39]}" ] 
BB474 -> BB475 [tailport=s, headport=n, headlabel="      475"]
BB474 -> BB504 [tailport=s, headport=n, color=gray]
BB475 [shape=record label="{1580: \>[v38,v39,v37]|1581: if[v37](true-block:476,false-block:459)}" ] 
BB475 -> BB476 [tailport=s, headport=n, headlabel="      476"]
BB475 -> BB459 [tailport=s, headport=n]
BB475 -> BB504 [tailport=s, headport=n, color=gray]
BB476 [shape=record label="{1582: constant[\" should be less than or equal to\",v46]|1583: write-variable[v46,'cmpstr']*|1584: constant[false,v47]|1585: write-variable[v47,'bRet']*}" ] 
BB476 -> BB459 [tailport=s, headport=n]
BB477 [shape=record label="{1586: read-variable['eval',v50,v49]|1587: read-variable['objval_value',v51,-]}" ] 
BB477 -> BB479 [tailport=s, headport=n, headlabel="      479"]
BB477 -> BB504 [tailport=s, headport=n, color=gray]
BB478 [shape=record label="{1588: constant[\"geelmnt\",v23]|1589: ==[v22,v23,v24]|1590: if[v24](true-block:484,false-block:485)}" ] 
BB478 -> BB484 [tailport=s, headport=n, headlabel="      484"]
BB478 -> BB485 [tailport=s, headport=n, headlabel="      485"]
BB478 -> BB504 [tailport=s, headport=n, color=gray]
BB479 [shape=record label="{1591: call-eval [v49,v50,v51,v47]}" ] 
BB479 -> BB480 [tailport=s, headport=n, headlabel="      480"]
BB479 -> BB504 [tailport=s, headport=n, color=gray]
BB480 [shape=record label="{1592: read-variable['eval',v53,v52]|1593: read-variable['objcomp_value',v54,-]}" ] 
BB480 -> BB481 [tailport=s, headport=n, headlabel="      481"]
BB480 -> BB504 [tailport=s, headport=n, color=gray]
BB481 [shape=record label="{1594: call-eval [v52,v53,v54,v48]}" ] 
BB481 -> BB482 [tailport=s, headport=n, headlabel="      482"]
BB481 -> BB504 [tailport=s, headport=n, color=gray]
BB482 [shape=record label="{1595: \<=[v47,v48,v46]|1596: if[v46](true-block:483,false-block:459)}" ] 
BB482 -> BB483 [tailport=s, headport=n, headlabel="      483"]
BB482 -> BB459 [tailport=s, headport=n]
BB482 -> BB504 [tailport=s, headport=n, color=gray]
BB483 [shape=record label="{1597: constant[\" should be greater than\",v55]|1598: write-variable[v55,'cmpstr']*|1599: constant[false,v56]|1600: write-variable[v56,'bRet']*}" ] 
BB483 -> BB459 [tailport=s, headport=n]
BB484 [shape=record label="{1601: read-variable['eval',v59,v58]|1602: read-variable['objval_value',v60,-]}" ] 
BB484 -> BB486 [tailport=s, headport=n, headlabel="      486"]
BB484 -> BB504 [tailport=s, headport=n, color=gray]
BB485 [shape=record label="{1603: constant[\"neelmnt\",v23]|1604: ==[v22,v23,v24]|1605: if[v24](true-block:491,false-block:459)}" ] 
BB485 -> BB491 [tailport=s, headport=n, headlabel="      491"]
BB485 -> BB459 [tailport=s, headport=n]
BB485 -> BB504 [tailport=s, headport=n, color=gray]
BB486 [shape=record label="{1606: call-eval [v58,v59,v60,v56]}" ] 
BB486 -> BB487 [tailport=s, headport=n, headlabel="      487"]
BB486 -> BB504 [tailport=s, headport=n, color=gray]
BB487 [shape=record label="{1607: read-variable['eval',v62,v61]|1608: read-variable['objcomp_value',v63,-]}" ] 
BB487 -> BB488 [tailport=s, headport=n, headlabel="      488"]
BB487 -> BB504 [tailport=s, headport=n, color=gray]
BB488 [shape=record label="{1609: call-eval [v61,v62,v63,v57]}" ] 
BB488 -> BB489 [tailport=s, headport=n, headlabel="      489"]
BB488 -> BB504 [tailport=s, headport=n, color=gray]
BB489 [shape=record label="{1610: \<[v56,v57,v55]|1611: if[v55](true-block:490,false-block:459)}" ] 
BB489 -> BB490 [tailport=s, headport=n, headlabel="      490"]
BB489 -> BB459 [tailport=s, headport=n]
BB489 -> BB504 [tailport=s, headport=n, color=gray]
BB490 [shape=record label="{1612: constant[\" should be greater than or equal to\",v64]|1613: write-variable[v64,'cmpstr']*|1614: constant[false,v65]|1615: write-variable[v65,'bRet']*}" ] 
BB490 -> BB459 [tailport=s, headport=n]
BB491 [shape=record label="{1616: read-variable['objval_value',v67,-]|1617: read-property[v67,'length',v65]|1618: \<variable-non-null-undef\>['objval_value']|1619: constant[0.0,v66]|1620: \>[v65,v66,v64]|1621: if[v64](true-block:492,false-block:494)}" ] 
BB491 -> BB494 [tailport=s, headport=n, headlabel="      494"]
BB491 -> BB492 [tailport=s, headport=n, headlabel="      492"]
BB491 -> BB504 [tailport=s, headport=n, color=gray]
BB492 [shape=record label="{1622: read-variable['objcomp_value',v70,-]|1623: read-property[v70,'length',v68]|1624: \<variable-non-null-undef\>['objcomp_value']|1625: constant[0.0,v69]|1626: \>[v68,v69,v64]|1627: if[v64](true-block:493,false-block:494)}" ] 
BB492 -> BB494 [tailport=s, headport=n]
BB492 -> BB493 [tailport=s, headport=n, headlabel="      493"]
BB492 -> BB504 [tailport=s, headport=n, color=gray]
BB493 [shape=record label="{1628: read-variable['objval_value',v71,-]|1629: read-variable['objcomp_value',v72,-]|1630: ==[v71,v72,v64]}" ] 
BB493 -> BB494 [tailport=s, headport=n]
BB493 -> BB504 [tailport=s, headport=n, color=gray]
BB494 [shape=record label="{1631: if[v64](true-block:495,false-block:459)}" ] 
BB494 -> BB495 [tailport=s, headport=n, headlabel="      495"]
BB494 -> BB459 [tailport=s, headport=n]
BB495 [shape=record label="{1632: constant[\" should be different from \",v68]|1633: write-variable[v68,'cmpstr']*|1634: constant[false,v69]|1635: write-variable[v69,'bRet']*}" ] 
BB495 -> BB459 [tailport=s, headport=n]
BB496 [shape=record label="{1636: read-variable['strError',v29,-]|1637: ![v29,v28]|1638: if[v28](true-block:498,false-block:497)}" ] 
BB496 -> BB498 [tailport=s, headport=n, headlabel="      498"]
BB496 -> BB497 [tailport=s, headport=n, headlabel="      497"]
BB496 -> BB504 [tailport=s, headport=n, color=gray]
BB497 [shape=record label="{1639: read-variable['strError',v31,-]|1640: read-property[v31,'length',v29]|1641: \<variable-non-null-undef\>['strError']|1642: constant[0.0,v30]|1643: ==[v29,v30,v28]}" ] 
BB497 -> BB498 [tailport=s, headport=n]
BB497 -> BB504 [tailport=s, headport=n, color=gray]
BB498 [shape=record label="{1644: if[v28](true-block:499,false-block:500)}" ] 
BB498 -> BB499 [tailport=s, headport=n, headlabel="      499"]
BB498 -> BB500 [tailport=s, headport=n, headlabel="      500"]
BB499 [shape=record label="{1645: read-variable['objValue',v34,-]|1646: read-property[v34,'name',v32]|1647: \<variable-non-null-undef\>['objValue']|1648: read-variable['cmpstr',v33,-]|1649: +[v32,v33,v30]|1650: read-variable['objCompare',v35,-]|1651: read-property[v35,'name',v31]|1652: \<variable-non-null-undef\>['objCompare']|1653: +[v30,v31,v29]|1654: write-variable[v29,'strError']*}" ] 
BB499 -> BB500 [tailport=s, headport=n]
BB499 -> BB504 [tailport=s, headport=n, color=gray]
BB500 [shape=record label="{1655: read-variable['sfm_show_error_msg',v30,v29]|1656: read-variable['strError',v31,-]|1657: read-variable['objValue',v32,-]}" ] 
BB500 -> BB501 [tailport=s, headport=n, headlabel="      501"]
BB500 -> BB504 [tailport=s, headport=n, color=gray]
BB501 [shape=record label="{1658: call-sfm_show_error_msg [v29,v30,v31,v32,-]*}" ] 
BB501 -> BB502 [tailport=s, headport=n]
BB501 -> BB504 [tailport=s, headport=n, color=gray]
BB502 [shape=record label="{1659: read-variable['bRet',v1,-]}" ] 
BB502 -> BB503 [tailport=s, headport=n]
BB502 -> BB504 [tailport=s, headport=n, color=gray]
BB503 [shape=record label="{1660: return[v1]}" ] 
BB504 [shape=record label="{1661: exceptional-return}" ] 
//#$~ 680
}
