digraph {
rankdir="TD"
BB_entry111[shape=none,label=""];
BB_entry111 -> BB1602 [tailport=s, headport=n, headlabel="    1602"]
BB1602 [shape=record label="{8161: constant[undefined,v1]|8162: vardecl['base']|8163: vardecl['name']|8164: vardecl['o']}" ] 
BB1602 -> BB1603 [tailport=s, headport=n, headlabel="      1603"]
BB1603 [shape=record label="{8165: read-variable['_131',v3,-]|8166: read-property[v3,'NAME',v2]|8167: \<variable-non-null-undef\>['_131']|8168: write-variable[v2,'base']*|8169: typeof['base',v5]|8170: constant[\"undefined\",v6]|8171: ==[v5,v6,v4]|8172: if[v4](true-block:1604,false-block:1605)}" ] 
BB1603 -> BB1604 [tailport=s, headport=n, headlabel="      1604"]
BB1603 -> BB1605 [tailport=s, headport=n, headlabel="      1605"]
BB1603 -> BB1618 [tailport=s, headport=n, color=gray, headlabel="      1618"]
BB1604 [shape=record label="{8173: constant[\"\",v7]|8174: write-variable[v7,'base']*}" ] 
BB1604 -> BB1606 [tailport=s, headport=n, headlabel="      1606"]
BB1605 [shape=record label="{8175: read-variable['base',v8,-]|8176: constant[\".\",v9]|8177: +[v8,v9,v7]|8178: write-variable[v7,'base']*}" ] 
BB1605 -> BB1606 [tailport=s, headport=n]
BB1605 -> BB1618 [tailport=s, headport=n, color=gray]
BB1606 [shape=record label="{8179: read-variable['_131',v8,-]}" ] 
BB1606 -> BB1607 [tailport=s, headport=n, headlabel="      1607"]
BB1606 -> BB1618 [tailport=s, headport=n, color=gray]
BB1607 [shape=record label="{8180: begin-for-in[v8,v9]}" ] 
BB1607 -> BB1608 [tailport=s, headport=n, headlabel="      1608"]
BB1607 -> BB1618 [tailport=s, headport=n, color=gray]
BB1608 [shape=record label="{8181: has-next[v9,v10]|8182: if[v10](true-block:1609,false-block:1617)}" ] 
BB1608 -> BB1609 [tailport=s, headport=n, headlabel="      1609"]
BB1608 -> BB1617 [tailport=s, headport=n, headlabel="      1617"]
BB1609 [shape=record label="{8183: next-property[v9,v11]|8184: write-variable[v11,'name']|8185: read-variable['_131',v13,-]|8186: read-variable['name',v14,-]|8187: read-property[v13,v14,v12]|8188: \<variable-non-null-undef\>['_131']|8189: write-variable[v12,'o']*|8190: typeof['o',v16]|8191: constant[\"function\",v17]|8192: ==[v16,v17,v15]|8193: if[v15](true-block:1610,false-block:1611)}" ] 
BB1609 -> BB1611 [tailport=s, headport=n, headlabel="      1611"]
BB1609 -> BB1610 [tailport=s, headport=n, headlabel="      1610"]
BB1609 -> BB1618 [tailport=s, headport=n, color=gray]
BB1610 [shape=record label="{8194: read-variable['o',v21,-]|8195: read-property[v21,'NAME',v20]|8196: \<variable-non-null-undef\>['o']|8197: typeof[v20,v18]|8198: constant[\"undefined\",v19]|8199: ==[v18,v19,v15]}" ] 
BB1610 -> BB1611 [tailport=s, headport=n]
BB1610 -> BB1618 [tailport=s, headport=n, color=gray]
BB1611 [shape=record label="{8200: if[v15](true-block:1612,false-block:1616)}" ] 
BB1611 -> BB1612 [tailport=s, headport=n, headlabel="      1612"]
BB1611 -> BB1616 [tailport=s, headport=n, headlabel="      1616"]
BB1612 [shape=record label="{8201: read-variable['o',v19,-]|8202: read-variable['base',v20,-]|8203: read-variable['name',v21,-]|8204: +[v20,v21,v18]|8205: write-property[v19,'NAME',v18]|8206: \<variable-non-null-undef\>['o']*}" ] 
BB1612 -> BB1616 [tailport=s, headport=n]
BB1612 -> BB1613 [tailport=s, headport=n, color=gray, headlabel="      1613"]
BB1613 [shape=record label="{8207: catch[e,v18]|8208: begin-with[v18]}" ] 
BB1613 -> BB1614 [tailport=s, headport=n, headlabel="      1614"]
BB1613 -> BB1618 [tailport=s, headport=n, color=gray]
BB1614 [shape=record label="{8209: end-with}" ] 
BB1614 -> BB1616 [tailport=s, headport=n]
BB1615 [shape=record label="{8210: end-with}" ] 
BB1615 -> BB1618 [tailport=s, headport=n]
BB1616 [shape=record label="{8211: end-for-in(begin-node:8180)}" ] 
BB1616 -> BB1608 [tailport=s, headport=n]
BB1617 [shape=record label="{8212: return[v1]}" ] 
BB1618 [shape=record label="{8213: exceptional-return}" ] 
//#$~ 920
}
