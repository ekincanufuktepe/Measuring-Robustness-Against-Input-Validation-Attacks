digraph {
rankdir="TD"
BB_entry235[shape=none,label=""];
BB_entry235 -> BB2556 [tailport=s, headport=n, headlabel="    2556"]
BB2556 [shape=record label="{6909: constant[undefined,v1]|6910: vardecl['headers']|6911: vardecl['extras']|6912: vardecl['i']|6913: vardecl['length']|6914: vardecl['name']}" ] 
BB2556 -> BB2557 [tailport=s, headport=n, headlabel="      2557"]
BB2557 [shape=record label="{6915: new[v2]|6916: constant[\"XMLHttpRequest\",v3]|6917: write-property[v2,'X-Requested-With',v3]|6918: read-variable['Prototype',v5,-]|6919: read-property[v5,'Version',v4]|6920: \<variable-non-null-undef\>['Prototype']|6921: write-property[v2,'X-Prototype-Version',v4]|6922: constant[\"text/javascript, text/html, application/xml, text/xml, */*\",v6]|6923: write-property[v2,'Accept',v6]|6924: write-variable[v2,'headers']*|6925: read-variable['this',v10,-]|6926: read-property[v10,'method',v8]|6927: constant[\"post\",v9]|6928: ==[v8,v9,v7]|6929: if[v7](true-block:2558,false-block:2571)}" ] 
BB2557 -> BB2558 [tailport=s, headport=n, headlabel="      2558"]
BB2557 -> BB2571 [tailport=s, headport=n, headlabel="      2571"]
BB2557 -> BB2590 [tailport=s, headport=n, color=gray, headlabel="      2590"]
BB2558 [shape=record label="{6930: read-variable['headers',v12,-]|6931: read-variable['this',v16,-]|6932: read-property[v16,'options',v15]|6933: read-property[v15,'contentType',v13]|6934: \<property-non-null-undef\>[v16,'options']|6935: read-variable['this',v19,-]|6936: read-property[v19,'options',v18]|6937: read-property[v18,'encoding',v17]|6938: \<property-non-null-undef\>[v19,'options']|6939: if[v17](true-block:2559,false-block:2560)}" ] 
BB2558 -> BB2559 [tailport=s, headport=n, headlabel="      2559"]
BB2558 -> BB2560 [tailport=s, headport=n, headlabel="      2560"]
BB2558 -> BB2590 [tailport=s, headport=n, color=gray]
BB2559 [shape=record label="{6940: constant[\"; charset=\",v20]|6941: read-variable['this',v23,-]|6942: read-property[v23,'options',v22]|6943: read-property[v22,'encoding',v21]|6944: \<property-non-null-undef\>[v23,'options']|6945: +[v20,v21,v14]}" ] 
BB2559 -> BB2561 [tailport=s, headport=n, headlabel="      2561"]
BB2559 -> BB2590 [tailport=s, headport=n, color=gray]
BB2560 [shape=record label="{6946: constant[\"\",v14]}" ] 
BB2560 -> BB2561 [tailport=s, headport=n]
BB2561 [shape=record label="{6947: +[v13,v14,v11]|6948: write-property[v12,'Content-type',v11]|6949: \<variable-non-null-undef\>['headers']*|6950: read-variable['this',v22,-]|6951: read-property[v22,'transport',v21]|6952: read-property[v21,'overrideMimeType',v20]|6953: \<property-non-null-undef\>[v22,'transport']|6954: if[v20](true-block:2562,false-block:2569)}" ] 
BB2561 -> BB2569 [tailport=s, headport=n, headlabel="      2569"]
BB2561 -> BB2562 [tailport=s, headport=n, headlabel="      2562"]
BB2561 -> BB2590 [tailport=s, headport=n, color=gray]
BB2562 [shape=record label="{6955: read-variable['navigator',v28,-]|6956: read-property[v28,'userAgent',v27]|6957: \<variable-non-null-undef\>['navigator']|6958: read-property[v27,'match',-]|6959: \<property-non-null-undef\>[v28,'userAgent']|6960: read-variable['RegExp',v30,-]|6961: constant[\"Gecko\\\\/(\\\\d\\\{4\\\})\",v31]}" ] 
BB2562 -> BB2563 [tailport=s, headport=n, headlabel="      2563"]
BB2562 -> BB2590 [tailport=s, headport=n, color=gray]
BB2563 [shape=record label="{6962: construct [-,v30,v31,v29]}" ] 
BB2563 -> BB2564 [tailport=s, headport=n, headlabel="      2564"]
BB2563 -> BB2590 [tailport=s, headport=n, color=gray]
BB2564 [shape=record label="{6963: call-navigator.userAgent.match [v27,'match',v29,v25]}" ] 
BB2564 -> BB2565 [tailport=s, headport=n, headlabel="      2565"]
BB2564 -> BB2590 [tailport=s, headport=n, color=gray]
BB2565 [shape=record label="{6964: if[v25](true-block:2568,false-block:2566)}" ] 
BB2565 -> BB2568 [tailport=s, headport=n, headlabel="      2568"]
BB2565 -> BB2566 [tailport=s, headport=n, headlabel="      2566"]
BB2566 [shape=record label="{6965: read-variable['Array',v26,-]|6966: constant[0.0,v27]|6967: constant[2005.0,v28]}" ] 
BB2566 -> BB2567 [tailport=s, headport=n, headlabel="      2567"]
BB2566 -> BB2590 [tailport=s, headport=n, color=gray]
BB2567 [shape=record label="{6968: construct [-,v26,v27,v28,v25]}" ] 
BB2567 -> BB2568 [tailport=s, headport=n]
BB2567 -> BB2590 [tailport=s, headport=n, color=gray]
BB2568 [shape=record label="{6969: constant[1.0,v26]|6970: read-property[v25,v26,v23]|6971: constant[2005.0,v24]|6972: \<[v23,v24,v20]}" ] 
BB2568 -> BB2569 [tailport=s, headport=n]
BB2568 -> BB2590 [tailport=s, headport=n, color=gray]
BB2569 [shape=record label="{6973: if[v20](true-block:2570,false-block:2571)}" ] 
BB2569 -> BB2570 [tailport=s, headport=n, headlabel="      2570"]
BB2569 -> BB2571 [tailport=s, headport=n]
BB2570 [shape=record label="{6974: read-variable['headers',v24,-]|6975: constant[\"close\",v23]|6976: write-property[v24,'Connection',v23]|6977: \<variable-non-null-undef\>['headers']*}" ] 
BB2570 -> BB2571 [tailport=s, headport=n]
BB2570 -> BB2590 [tailport=s, headport=n, color=gray]
BB2571 [shape=record label="{6978: read-variable['this',v16,-]|6979: read-property[v16,'options',v15]|6980: read-property[v15,'requestHeaders',v14]|6981: \<property-non-null-undef\>[v16,'options']|6982: typeof[v14,v12]|6983: constant[\"object\",v13]|6984: ==[v12,v13,v11]|6985: if[v11](true-block:2572,false-block:2582)}" ] 
BB2571 -> BB2572 [tailport=s, headport=n, headlabel="      2572"]
BB2571 -> BB2582 [tailport=s, headport=n, headlabel="      2582"]
BB2571 -> BB2590 [tailport=s, headport=n, color=gray]
BB2572 [shape=record label="{6986: read-variable['this',v19,-]|6987: read-property[v19,'options',v18]|6988: read-property[v18,'requestHeaders',v17]|6989: \<property-non-null-undef\>[v19,'options']|6990: write-variable[v17,'extras']*|6991: read-variable['Object',v22,-]|6992: read-property[v22,'isFunction',-]|6993: \<variable-non-null-undef\>['Object']|6994: read-variable['extras',v24,-]|6995: read-property[v24,'push',v23]|6996: \<variable-non-null-undef\>['extras']}" ] 
BB2572 -> BB2573 [tailport=s, headport=n, headlabel="      2573"]
BB2572 -> BB2590 [tailport=s, headport=n, color=gray]
BB2573 [shape=record label="{6997: call-Object.isFunction [v22,'isFunction',v23,v20]}" ] 
BB2573 -> BB2574 [tailport=s, headport=n, headlabel="      2574"]
BB2573 -> BB2590 [tailport=s, headport=n, color=gray]
BB2574 [shape=record label="{6998: if[v20](true-block:2575,false-block:2576)}" ] 
BB2574 -> BB2575 [tailport=s, headport=n, headlabel="      2575"]
BB2574 -> BB2576 [tailport=s, headport=n, headlabel="      2576"]
BB2575 [shape=record label="{6999: constant[0.0,v26]|7000: write-variable[v26,'i']*|7001: read-variable['extras',v28,-]|7002: read-property[v28,'length',v27]|7003: \<variable-non-null-undef\>['extras']|7004: write-variable[v27,'length']*}" ] 
BB2575 -> BB2577 [tailport=s, headport=n, headlabel="      2577"]
BB2575 -> BB2590 [tailport=s, headport=n, color=gray]
BB2576 [shape=record label="{7005: read-variable['$H',v28,v27]|7006: read-variable['extras',v29,-]}" ] 
BB2576 -> BB2579 [tailport=s, headport=n, headlabel="      2579"]
BB2576 -> BB2590 [tailport=s, headport=n, color=gray]
BB2577 [shape=record label="{7007: read-variable['i',v29,-]|7008: read-variable['length',v30,-]|7009: \<[v29,v30,v25]|7010: if[v25](true-block:2578,false-block:2582)}" ] 
BB2577 -> BB2578 [tailport=s, headport=n, headlabel="      2578"]
BB2577 -> BB2582 [tailport=s, headport=n]
BB2577 -> BB2590 [tailport=s, headport=n, color=gray]
BB2578 [shape=record label="{7011: read-variable['headers',v32,-]|7012: read-variable['extras',v34,-]|7013: read-variable['i',v35,-]|7014: read-property[v34,v35,v33]|7015: \<variable-non-null-undef\>['extras']|7016: read-variable['extras',v36,-]|7017: read-variable['i',v38,-]|7018: constant[1.0,v39]|7019: +[v38,v39,v37]|7020: read-property[v36,v37,v31]|7021: \<variable-non-null-undef\>['extras']|7022: write-property[v32,v33,v31]|7023: \<variable-non-null-undef\>['headers']*|7024: read-variable['i',v41,-]|7025: constant[2.0,v42]|7026: +[v41,v42,v40]|7027: write-variable[v40,'i']}" ] 
BB2578 -> BB2577 [tailport=s, headport=n]
BB2578 -> BB2590 [tailport=s, headport=n, color=gray]
BB2579 [shape=record label="{7028: call-$H [v27,v28,v29,v26]}" ] 
BB2579 -> BB2580 [tailport=s, headport=n, headlabel="      2580"]
BB2579 -> BB2590 [tailport=s, headport=n, color=gray]
BB2580 [shape=record label="{7029: read-property[v26,'each',-]|7030: function-expr[function ( pair ),v30]}" ] 
BB2580 -> BB2581 [tailport=s, headport=n, headlabel="      2581"]
BB2580 -> BB2590 [tailport=s, headport=n, color=gray]
BB2581 [shape=record label="{7031: call-null [v26,'each',v30,-]*}" ] 
BB2581 -> BB2582 [tailport=s, headport=n]
BB2581 -> BB2590 [tailport=s, headport=n, color=gray]
BB2582 [shape=record label="{7032: read-variable['headers',v18,-]}" ] 
BB2582 -> BB2583 [tailport=s, headport=n, headlabel="      2583"]
BB2582 -> BB2590 [tailport=s, headport=n, color=gray]
BB2583 [shape=record label="{7033: begin-for-in[v18,v19]}" ] 
BB2583 -> BB2584 [tailport=s, headport=n, headlabel="      2584"]
BB2583 -> BB2590 [tailport=s, headport=n, color=gray]
BB2584 [shape=record label="{7034: has-next[v19,v20]|7035: if[v20](true-block:2585,false-block:2589)}" ] 
BB2584 -> BB2585 [tailport=s, headport=n, headlabel="      2585"]
BB2584 -> BB2589 [tailport=s, headport=n, headlabel="      2589"]
BB2585 [shape=record label="{7036: next-property[v19,v21]|7037: write-variable[v21,'name']|7038: read-variable['headers',v25,-]|7039: read-variable['name',v26,-]|7040: read-property[v25,v26,v23]|7041: \<variable-non-null-undef\>['headers']|7042: constant[null,v24]|7043: !=[v23,v24,v22]|7044: if[v22](true-block:2586,false-block:2588)}" ] 
BB2585 -> BB2586 [tailport=s, headport=n, headlabel="      2586"]
BB2585 -> BB2588 [tailport=s, headport=n, headlabel="      2588"]
BB2585 -> BB2590 [tailport=s, headport=n, color=gray]
BB2586 [shape=record label="{7045: read-variable['this',v29,-]|7046: read-property[v29,'transport',v28]|7047: read-property[v28,'setRequestHeader',-]|7048: \<property-non-null-undef\>[v29,'transport']|7049: read-variable['name',v30,-]|7050: read-variable['headers',v32,-]|7051: read-variable['name',v33,-]|7052: read-property[v32,v33,v31]|7053: \<variable-non-null-undef\>['headers']}" ] 
BB2586 -> BB2587 [tailport=s, headport=n, headlabel="      2587"]
BB2586 -> BB2590 [tailport=s, headport=n, color=gray]
BB2587 [shape=record label="{7054: call-this.transport.setRequestHeader [v28,'setRequestHeader',v30,v31,-]*}" ] 
BB2587 -> BB2588 [tailport=s, headport=n]
BB2587 -> BB2590 [tailport=s, headport=n, color=gray]
BB2588 [shape=record label="{7055: end-for-in(begin-node:7033)}" ] 
BB2588 -> BB2584 [tailport=s, headport=n]
BB2589 [shape=record label="{7056: return[v1]}" ] 
BB2590 [shape=record label="{7057: exceptional-return}" ] 
//#$~ 1797
}
