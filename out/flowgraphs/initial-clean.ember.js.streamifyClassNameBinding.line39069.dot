digraph {
rankdir="TD"
BB_entry1812[shape=none,label=""];
BB_entry1812 -> BB20713 [tailport=s, headport=n, headlabel="    20713"]
BB20713 [shape=record label="{69350: constant[undefined,v1]|69351: vardecl['parsedPath']|69352: vardecl['pathValue']}" ] 
BB20713 -> BB20714 [tailport=s, headport=n, headlabel="      20714"]
BB20714 [shape=record label="{69353: read-variable['prefix',v2,-]|69354: if[v2](true-block:20716,false-block:20715)}" ] 
BB20714 -> BB20716 [tailport=s, headport=n, headlabel="      20716"]
BB20714 -> BB20715 [tailport=s, headport=n, headlabel="      20715"]
BB20714 -> BB20730 [tailport=s, headport=n, color=gray, headlabel="      20730"]
BB20715 [shape=record label="{69355: constant[\"\",v2]}" ] 
BB20715 -> BB20716 [tailport=s, headport=n]
BB20716 [shape=record label="{69356: write-variable[v2,'prefix']*|69357: read-variable['Ember',v4,-]|69358: read-property[v4,'assert',-]|69359: \<variable-non-null-undef\>['Ember']|69360: constant[\"classNameBindings must not have spaces in them. Multiple class name bindings can be provided as elements of an array, e.g. ['foo', ':bar']\",v5]|69361: read-variable['classNameBinding',v10,-]|69362: read-property[v10,'indexOf',-]|69363: \<variable-non-null-undef\>['classNameBinding']|69364: constant[\" \",v11]}" ] 
BB20716 -> BB20717 [tailport=s, headport=n, headlabel="      20717"]
BB20716 -> BB20730 [tailport=s, headport=n, color=gray]
BB20717 [shape=record label="{69365: call-classNameBinding.indexOf [v10,'indexOf',v11,v7]}" ] 
BB20717 -> BB20718 [tailport=s, headport=n, headlabel="      20718"]
BB20717 -> BB20730 [tailport=s, headport=n, color=gray]
BB20718 [shape=record label="{69366: constant[-1.0,v8]|69367: ===[v7,v8,v6]}" ] 
BB20718 -> BB20719 [tailport=s, headport=n, headlabel="      20719"]
BB20718 -> BB20730 [tailport=s, headport=n, color=gray]
BB20719 [shape=record label="{69368: call-Ember.assert [v4,'assert',v5,v6,-]*}" ] 
BB20719 -> BB20720 [tailport=s, headport=n, headlabel="      20720"]
BB20719 -> BB20730 [tailport=s, headport=n, color=gray]
BB20720 [shape=record label="{69369: read-variable['parsePropertyPath',v14,v13]|69370: read-variable['classNameBinding',v15,-]}" ] 
BB20720 -> BB20721 [tailport=s, headport=n, headlabel="      20721"]
BB20720 -> BB20730 [tailport=s, headport=n, color=gray]
BB20721 [shape=record label="{69371: call-parsePropertyPath [v13,v14,v15,v12]}" ] 
BB20721 -> BB20722 [tailport=s, headport=n, headlabel="      20722"]
BB20721 -> BB20730 [tailport=s, headport=n, color=gray]
BB20722 [shape=record label="{69372: write-variable[v12,'parsedPath']*|69373: read-variable['parsedPath',v19,-]|69374: read-property[v19,'path',v17]|69375: \<variable-non-null-undef\>['parsedPath']|69376: constant[\"\",v18]|69377: ===[v17,v18,v16]|69378: if[v16](true-block:20723,false-block:20724)}" ] 
BB20722 -> BB20723 [tailport=s, headport=n, headlabel="      20723"]
BB20722 -> BB20724 [tailport=s, headport=n, headlabel="      20724"]
BB20722 -> BB20730 [tailport=s, headport=n, color=gray]
BB20723 [shape=record label="{69379: read-variable['classStringForValue',v21,v20]|69380: read-variable['parsedPath',v23,-]|69381: read-property[v23,'path',v22]|69382: \<variable-non-null-undef\>['parsedPath']|69383: constant[true,v24]|69384: read-variable['parsedPath',v26,-]|69385: read-property[v26,'className',v25]|69386: \<variable-non-null-undef\>['parsedPath']|69387: read-variable['parsedPath',v28,-]|69388: read-property[v28,'falsyClassName',v27]|69389: \<variable-non-null-undef\>['parsedPath']}" ] 
BB20723 -> BB20725 [tailport=s, headport=n, headlabel="      20725"]
BB20723 -> BB20730 [tailport=s, headport=n, color=gray]
BB20724 [shape=record label="{69390: read-variable['view',v22,-]|69391: read-property[v22,'getStream',-]|69392: \<variable-non-null-undef\>['view']|69393: read-variable['prefix',v24,-]|69394: read-variable['parsedPath',v26,-]|69395: read-property[v26,'path',v25]|69396: \<variable-non-null-undef\>['parsedPath']|69397: +[v24,v25,v23]}" ] 
BB20724 -> BB20726 [tailport=s, headport=n, headlabel="      20726"]
BB20724 -> BB20730 [tailport=s, headport=n, color=gray]
BB20725 [shape=record label="{69398: call-classStringForValue [v20,v21,v22,v24,v25,v27,v1]}" ] 
BB20725 -> BB20729 [tailport=s, headport=n, headlabel="      20729"]
BB20725 -> BB20730 [tailport=s, headport=n, color=gray]
BB20726 [shape=record label="{69399: call-view.getStream [v22,'getStream',v23,v20]}" ] 
BB20726 -> BB20727 [tailport=s, headport=n, headlabel="      20727"]
BB20726 -> BB20730 [tailport=s, headport=n, color=gray]
BB20727 [shape=record label="{69400: write-variable[v20,'pathValue']*|69401: read-variable['chain',v28,v27]|69402: read-variable['pathValue',v29,-]|69403: function-expr[function ( ),v30]}" ] 
BB20727 -> BB20728 [tailport=s, headport=n, headlabel="      20728"]
BB20727 -> BB20730 [tailport=s, headport=n, color=gray]
BB20728 [shape=record label="{69404: call-chain [v27,v28,v29,v30,v1]}" ] 
BB20728 -> BB20729 [tailport=s, headport=n]
BB20728 -> BB20730 [tailport=s, headport=n, color=gray]
BB20729 [shape=record label="{69405: return[v1]}" ] 
BB20730 [shape=record label="{69406: exceptional-return}" ] 
//#$~ 39087
}
