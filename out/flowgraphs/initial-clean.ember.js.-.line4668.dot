digraph {
rankdir="TD"
BB_entry228[shape=none,label=""];
BB_entry228 -> BB2829 [tailport=s, headport=n, headlabel="    2829"]
BB2829 [shape=record label="{8969: constant[undefined,v1]|8970: vardecl['key']|8971: vardecl['name']}" ] 
BB2829 -> BB2830 [tailport=s, headport=n, headlabel="      2830"]
BB2830 [shape=record label="{8972: read-variable['namespace',v3,-]}" ] 
BB2830 -> BB2831 [tailport=s, headport=n, headlabel="      2831"]
BB2830 -> BB2850 [tailport=s, headport=n, color=gray, headlabel="      2850"]
BB2831 [shape=record label="{8973: begin-for-in[v3,v4]}" ] 
BB2831 -> BB2832 [tailport=s, headport=n, headlabel="      2832"]
BB2831 -> BB2850 [tailport=s, headport=n, color=gray]
BB2832 [shape=record label="{8974: has-next[v4,v5]|8975: if[v5](true-block:2833,false-block:2849)}" ] 
BB2832 -> BB2833 [tailport=s, headport=n, headlabel="      2833"]
BB2832 -> BB2849 [tailport=s, headport=n, headlabel="      2849"]
BB2833 [shape=record label="{8976: next-property[v4,v6]|8977: write-variable[v6,'key']|8978: read-variable['namespace',v10,-]|8979: read-property[v10,'hasOwnProperty',-]|8980: \<variable-non-null-undef\>['namespace']|8981: read-variable['key',v11,-]}" ] 
BB2833 -> BB2834 [tailport=s, headport=n, headlabel="      2834"]
BB2833 -> BB2850 [tailport=s, headport=n, color=gray]
BB2834 [shape=record label="{8982: call-namespace.hasOwnProperty [v10,'hasOwnProperty',v11,v8]}" ] 
BB2834 -> BB2835 [tailport=s, headport=n, headlabel="      2835"]
BB2834 -> BB2850 [tailport=s, headport=n, color=gray]
BB2835 [shape=record label="{8983: ![v8,v7]|8984: if[v7](true-block:2848,false-block:2836)}" ] 
BB2835 -> BB2848 [tailport=s, headport=n, headlabel="      2848"]
BB2835 -> BB2836 [tailport=s, headport=n, headlabel="      2836"]
BB2835 -> BB2850 [tailport=s, headport=n, color=gray]
BB2836 [shape=record label="{8985: read-variable['self',v15,-]|8986: read-property[v15,'detect',-]|8987: \<variable-non-null-undef\>['self']|8988: read-variable['namespace',v17,-]|8989: read-variable['key',v18,-]|8990: read-property[v17,v18,v16]|8991: \<variable-non-null-undef\>['namespace']}" ] 
BB2836 -> BB2837 [tailport=s, headport=n, headlabel="      2837"]
BB2836 -> BB2850 [tailport=s, headport=n, color=gray]
BB2837 [shape=record label="{8992: call-self.detect [v15,'detect',v16,v13]}" ] 
BB2837 -> BB2838 [tailport=s, headport=n, headlabel="      2838"]
BB2837 -> BB2850 [tailport=s, headport=n, color=gray]
BB2838 [shape=record label="{8993: ![v13,v12]|8994: if[v12](true-block:2848,false-block:2839)}" ] 
BB2838 -> BB2848 [tailport=s, headport=n]
BB2838 -> BB2839 [tailport=s, headport=n, headlabel="      2839"]
BB2838 -> BB2850 [tailport=s, headport=n, color=gray]
BB2839 [shape=record label="{8995: read-variable['dasherize',v21,v20]|8996: read-variable['key',v22,-]}" ] 
BB2839 -> BB2840 [tailport=s, headport=n, headlabel="      2840"]
BB2839 -> BB2850 [tailport=s, headport=n, color=gray]
BB2840 [shape=record label="{8997: call-dasherize [v20,v21,v22,v19]}" ] 
BB2840 -> BB2841 [tailport=s, headport=n, headlabel="      2841"]
BB2840 -> BB2850 [tailport=s, headport=n, color=gray]
BB2841 [shape=record label="{8998: write-variable[v19,'name']*|8999: read-variable['namespace',v25,-]|9000: read-variable['Application',v26,-]|9001: instanceof[v25,v26,v24]|9002: ![v24,v23]|9003: if[v23](true-block:2842,false-block:2844)}" ] 
BB2841 -> BB2844 [tailport=s, headport=n, headlabel="      2844"]
BB2841 -> BB2842 [tailport=s, headport=n, headlabel="      2842"]
BB2841 -> BB2850 [tailport=s, headport=n, color=gray]
BB2842 [shape=record label="{9004: read-variable['namespace',v28,-]|9005: read-property[v28,'toString',-]|9006: \<variable-non-null-undef\>['namespace']}" ] 
BB2842 -> BB2843 [tailport=s, headport=n, headlabel="      2843"]
BB2842 -> BB2850 [tailport=s, headport=n, color=gray]
BB2843 [shape=record label="{9007: call-namespace.toString [v28,'toString',v23]}" ] 
BB2843 -> BB2844 [tailport=s, headport=n]
BB2843 -> BB2850 [tailport=s, headport=n, color=gray]
BB2844 [shape=record label="{9008: if[v23](true-block:2845,false-block:2846)}" ] 
BB2844 -> BB2845 [tailport=s, headport=n, headlabel="      2845"]
BB2844 -> BB2846 [tailport=s, headport=n, headlabel="      2846"]
BB2845 [shape=record label="{9009: read-variable['namespace',v30,-]|9010: constant[\"/\",v31]|9011: +[v30,v31,v28]|9012: read-variable['name',v29,-]|9013: +[v28,v29,v27]|9014: write-variable[v27,'name']*}" ] 
BB2845 -> BB2846 [tailport=s, headport=n]
BB2845 -> BB2850 [tailport=s, headport=n, color=gray]
BB2846 [shape=record label="{9015: read-variable['types',v28,-]|9016: read-property[v28,'push',-]|9017: \<variable-non-null-undef\>['types']|9018: read-variable['name',v29,-]}" ] 
BB2846 -> BB2847 [tailport=s, headport=n, headlabel="      2847"]
BB2846 -> BB2850 [tailport=s, headport=n, color=gray]
BB2847 [shape=record label="{9019: call-types.push [v28,'push',v29,-]*}" ] 
BB2847 -> BB2848 [tailport=s, headport=n]
BB2847 -> BB2850 [tailport=s, headport=n, color=gray]
BB2848 [shape=record label="{9020: end-for-in(begin-node:8973)}" ] 
BB2848 -> BB2832 [tailport=s, headport=n]
BB2849 [shape=record label="{9021: return[v1]}" ] 
BB2850 [shape=record label="{9022: exceptional-return}" ] 
//#$~ 4679
}
