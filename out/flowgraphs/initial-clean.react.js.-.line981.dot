digraph {
rankdir="TD"
BB_entry35[shape=none,label=""];
BB_entry35 -> BB616 [tailport=s, headport=n, headlabel="    616"]
BB616 [shape=record label="{2071: constant[undefined,v1]|2072: vardecl['PooledClass']|2073: vardecl['assign']|2074: vardecl['invariant']|2075: function-decl[function CallbackQueue ( ),-]}" ] 
BB616 -> BB617 [tailport=s, headport=n, headlabel="      617"]
BB617 [shape=record label="{2076: read-variable['_dereq_',v4,v3]|2077: constant[28.0,v5]}" ] 
BB617 -> BB618 [tailport=s, headport=n, headlabel="      618"]
BB617 -> BB629 [tailport=s, headport=n, color=gray, headlabel="      629"]
BB618 [shape=record label="{2078: call-_dereq_ [v3,v4,v5,v2]}" ] 
BB618 -> BB619 [tailport=s, headport=n, headlabel="      619"]
BB618 -> BB629 [tailport=s, headport=n, color=gray]
BB619 [shape=record label="{2079: write-variable[v2,'PooledClass']*|2080: read-variable['_dereq_',v8,v7]|2081: constant[27.0,v9]}" ] 
BB619 -> BB620 [tailport=s, headport=n, headlabel="      620"]
BB619 -> BB629 [tailport=s, headport=n, color=gray]
BB620 [shape=record label="{2082: call-_dereq_ [v7,v8,v9,v6]}" ] 
BB620 -> BB621 [tailport=s, headport=n, headlabel="      621"]
BB620 -> BB629 [tailport=s, headport=n, color=gray]
BB621 [shape=record label="{2083: write-variable[v6,'assign']*|2084: read-variable['_dereq_',v12,v11]|2085: constant[135.0,v13]}" ] 
BB621 -> BB622 [tailport=s, headport=n, headlabel="      622"]
BB621 -> BB629 [tailport=s, headport=n, color=gray]
BB622 [shape=record label="{2086: call-_dereq_ [v11,v12,v13,v10]}" ] 
BB622 -> BB623 [tailport=s, headport=n, headlabel="      623"]
BB622 -> BB629 [tailport=s, headport=n, color=gray]
BB623 [shape=record label="{2087: write-variable[v10,'invariant']*|2088: read-variable['assign',v15,v14]|2089: read-variable['CallbackQueue',v17,-]|2090: read-property[v17,'prototype',v16]|2091: \<variable-non-null-undef\>['CallbackQueue']|2092: new[v18]|2093: function-expr[function ( callback context ),v19]|2094: write-property[v18,'enqueue',v19]|2095: function-expr[function ( ),v20]|2096: write-property[v18,'notifyAll',v20]|2097: function-expr[function ( ),v21]|2098: write-property[v18,'reset',v21]|2099: function-expr[function ( ),v22]|2100: write-property[v18,'destructor',v22]}" ] 
BB623 -> BB624 [tailport=s, headport=n, headlabel="      624"]
BB623 -> BB629 [tailport=s, headport=n, color=gray]
BB624 [shape=record label="{2101: call-assign [v14,v15,v16,v18,-]*}" ] 
BB624 -> BB625 [tailport=s, headport=n, headlabel="      625"]
BB624 -> BB629 [tailport=s, headport=n, color=gray]
BB625 [shape=record label="{2102: read-variable['PooledClass',v24,-]|2103: read-property[v24,'addPoolingTo',-]|2104: \<variable-non-null-undef\>['PooledClass']|2105: read-variable['CallbackQueue',v25,-]}" ] 
BB625 -> BB626 [tailport=s, headport=n, headlabel="      626"]
BB625 -> BB629 [tailport=s, headport=n, color=gray]
BB626 [shape=record label="{2106: call-PooledClass.addPoolingTo [v24,'addPoolingTo',v25,-]*}" ] 
BB626 -> BB627 [tailport=s, headport=n, headlabel="      627"]
BB626 -> BB629 [tailport=s, headport=n, color=gray]
BB627 [shape=record label="{2107: read-variable['module',v27,-]|2108: read-variable['CallbackQueue',v26,-]|2109: write-property[v27,'exports',v26]|2110: \<variable-non-null-undef\>['module']*}" ] 
BB627 -> BB628 [tailport=s, headport=n, headlabel="      628"]
BB627 -> BB629 [tailport=s, headport=n, color=gray]
BB628 [shape=record label="{2111: return[v1]}" ] 
BB629 [shape=record label="{2112: exceptional-return}" ] 
//#$~ 1077
}
