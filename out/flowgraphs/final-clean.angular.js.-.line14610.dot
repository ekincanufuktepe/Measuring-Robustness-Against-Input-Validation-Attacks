digraph {
rankdir="TD"
BB_entry815[shape=none,label=""];
BB_entry815 -> BB10613 [tailport=s, headport=n, headlabel="    10613"]
BB10613 [shape=record label="{27590: constant[undefined,v1]|27591: vardecl['then']|27592: vardecl['fns']}" ] 
BB10613 -> BB10614 [tailport=s, headport=n, headlabel="      10614"]
BB10614 [shape=record label="{27593: read-variable['callOnce',v4,v3]|27594: read-variable['this',v5,-]|27595: read-variable['this',v7,-]|27596: read-property[v7,'$$resolve',v6]|27597: read-variable['this',v9,-]|27598: read-property[v9,'$$reject',v8]}" ] 
BB10614 -> BB10615 [tailport=s, headport=n, headlabel="      10615"]
BB10614 -> BB10641 [tailport=s, headport=n, color=gray, headlabel="      10641"]
BB10615 [shape=record label="{27599: call-callOnce [v3,v4,v5,v6,v8,v2]}" ] 
BB10615 -> BB10616 [tailport=s, headport=n, headlabel="      10616"]
BB10615 -> BB10641 [tailport=s, headport=n, color=gray]
BB10616 [shape=record label="{27600: write-variable[v2,'fns']*}" ] 
BB10616 -> BB10617 [tailport=s, headport=n, headlabel="      10617"]
BB10617 [shape=record label="{27601: read-variable['isObject',v12,v11]|27602: read-variable['val',v13,-]}" ] 
BB10617 -> BB10618 [tailport=s, headport=n, headlabel="      10618"]
BB10617 -> BB10633 [tailport=s, headport=n, color=gray, headlabel="      10633"]
BB10618 [shape=record label="{27603: call-isObject [v11,v12,v13,v10]}" ] 
BB10618 -> BB10619 [tailport=s, headport=n, headlabel="      10619"]
BB10618 -> BB10633 [tailport=s, headport=n, color=gray]
BB10619 [shape=record label="{27604: if[v10](true-block:10622,false-block:10620)}" ] 
BB10619 -> BB10622 [tailport=s, headport=n, headlabel="      10622"]
BB10619 -> BB10620 [tailport=s, headport=n, headlabel="      10620"]
BB10620 [shape=record label="{27605: read-variable['isFunction',v12,v11]|27606: read-variable['val',v13,-]}" ] 
BB10620 -> BB10621 [tailport=s, headport=n, headlabel="      10621"]
BB10620 -> BB10633 [tailport=s, headport=n, color=gray]
BB10621 [shape=record label="{27607: call-isFunction [v11,v12,v13,v10]}" ] 
BB10621 -> BB10622 [tailport=s, headport=n]
BB10621 -> BB10633 [tailport=s, headport=n, color=gray]
BB10622 [shape=record label="{27608: if[v10](true-block:10623,false-block:10626)}" ] 
BB10622 -> BB10623 [tailport=s, headport=n, headlabel="      10623"]
BB10622 -> BB10626 [tailport=s, headport=n, headlabel="      10626"]
BB10623 [shape=record label="{27609: read-variable['val',v11,-]|27610: if[v11](true-block:10624,false-block:10625)}" ] 
BB10623 -> BB10625 [tailport=s, headport=n, headlabel="      10625"]
BB10623 -> BB10624 [tailport=s, headport=n, headlabel="      10624"]
BB10623 -> BB10633 [tailport=s, headport=n, color=gray]
BB10624 [shape=record label="{27611: read-variable['val',v12,-]|27612: read-property[v12,'then',v11]|27613: \<variable-non-null-undef\>['val']}" ] 
BB10624 -> BB10625 [tailport=s, headport=n]
BB10624 -> BB10633 [tailport=s, headport=n, color=gray]
BB10625 [shape=record label="{27614: write-variable[v11,'then']*}" ] 
BB10625 -> BB10626 [tailport=s, headport=n]
BB10626 [shape=record label="{27615: read-variable['isFunction',v13,v12]|27616: read-variable['then',v14,-]}" ] 
BB10626 -> BB10627 [tailport=s, headport=n, headlabel="      10627"]
BB10626 -> BB10633 [tailport=s, headport=n, color=gray]
BB10627 [shape=record label="{27617: call-isFunction [v12,v13,v14,v11]}" ] 
BB10627 -> BB10628 [tailport=s, headport=n, headlabel="      10628"]
BB10627 -> BB10633 [tailport=s, headport=n, color=gray]
BB10628 [shape=record label="{27618: if[v11](true-block:10629,false-block:10630)}" ] 
BB10628 -> BB10629 [tailport=s, headport=n, headlabel="      10629"]
BB10628 -> BB10630 [tailport=s, headport=n, headlabel="      10630"]
BB10629 [shape=record label="{27619: read-variable['this',v18,-]|27620: read-property[v18,'promise',v17]|27621: read-property[v17,'$$state',v16]|27622: \<property-non-null-undef\>[v18,'promise']|27623: constant[-1.0,v15]|27624: write-property[v16,'status',v15]|27625: \<property-non-null-undef\>[v17,'$$state']*|27626: read-variable['then',v20,-]|27627: read-property[v20,'call',-]|27628: \<variable-non-null-undef\>['then']|27629: read-variable['val',v21,-]|27630: read-variable['fns',v23,-]|27631: constant[0.0,v24]|27632: read-property[v23,v24,v22]|27633: \<variable-non-null-undef\>['fns']|27634: read-variable['fns',v26,-]|27635: constant[1.0,v27]|27636: read-property[v26,v27,v25]|27637: \<variable-non-null-undef\>['fns']|27638: read-variable['this',v29,-]|27639: read-property[v29,'notify',v28]}" ] 
BB10629 -> BB10631 [tailport=s, headport=n, headlabel="      10631"]
BB10629 -> BB10633 [tailport=s, headport=n, color=gray]
BB10630 [shape=record label="{27640: read-variable['this',v18,-]|27641: read-property[v18,'promise',v17]|27642: read-property[v17,'$$state',v16]|27643: \<property-non-null-undef\>[v18,'promise']|27644: read-variable['val',v15,-]|27645: write-property[v16,'value',v15]|27646: \<property-non-null-undef\>[v17,'$$state']*|27647: read-variable['this',v22,-]|27648: read-property[v22,'promise',v21]|27649: read-property[v21,'$$state',v20]|27650: \<property-non-null-undef\>[v22,'promise']|27651: constant[1.0,v19]|27652: write-property[v20,'status',v19]|27653: \<property-non-null-undef\>[v21,'$$state']*|27654: read-variable['scheduleProcessQueue',v24,v23]|27655: read-variable['this',v27,-]|27656: read-property[v27,'promise',v26]|27657: read-property[v26,'$$state',v25]|27658: \<property-non-null-undef\>[v27,'promise']}" ] 
BB10630 -> BB10632 [tailport=s, headport=n, headlabel="      10632"]
BB10630 -> BB10633 [tailport=s, headport=n, color=gray]
BB10631 [shape=record label="{27659: call-then.call [v20,'call',v21,v22,v25,v28,-]*}" ] 
BB10631 -> BB10640 [tailport=s, headport=n, headlabel="      10640"]
BB10631 -> BB10633 [tailport=s, headport=n, color=gray]
BB10632 [shape=record label="{27660: call-scheduleProcessQueue [v23,v24,v25,-]*}" ] 
BB10632 -> BB10640 [tailport=s, headport=n]
BB10632 -> BB10633 [tailport=s, headport=n, color=gray]
BB10633 [shape=record label="{27661: catch[e,v10]|27662: begin-with[v10]}" ] 
BB10633 -> BB10634 [tailport=s, headport=n, headlabel="      10634"]
BB10633 -> BB10641 [tailport=s, headport=n, color=gray]
BB10634 [shape=record label="{27663: read-variable['fns',v13,-]|27664: constant[1.0,v14]|27665: read-property[v13,v14,-]|27666: \<variable-non-null-undef\>['fns']|27667: read-variable['e',v15,v11]}" ] 
BB10634 -> BB10636 [tailport=s, headport=n, headlabel="      10636"]
BB10634 -> BB10635 [tailport=s, headport=n, color=gray, headlabel="      10635"]
BB10635 [shape=record label="{27668: end-with}" ] 
BB10635 -> BB10641 [tailport=s, headport=n]
BB10636 [shape=record label="{27669: call-null [v13,[v14],v15,-]*}" ] 
BB10636 -> BB10637 [tailport=s, headport=n, headlabel="      10637"]
BB10636 -> BB10635 [tailport=s, headport=n, color=gray]
BB10637 [shape=record label="{27670: read-variable['exceptionHandler',v17,v16]|27671: read-variable['e',v18,v11]}" ] 
BB10637 -> BB10638 [tailport=s, headport=n, headlabel="      10638"]
BB10637 -> BB10635 [tailport=s, headport=n, color=gray]
BB10638 [shape=record label="{27672: call-exceptionHandler [v16,v17,v18,-]*}" ] 
BB10638 -> BB10639 [tailport=s, headport=n, headlabel="      10639"]
BB10638 -> BB10635 [tailport=s, headport=n, color=gray]
BB10639 [shape=record label="{27673: end-with}" ] 
BB10639 -> BB10640 [tailport=s, headport=n]
BB10640 [shape=record label="{27674: return[v1]}" ] 
BB10641 [shape=record label="{27675: exceptional-return}" ] 
//#$~ 14626
}
