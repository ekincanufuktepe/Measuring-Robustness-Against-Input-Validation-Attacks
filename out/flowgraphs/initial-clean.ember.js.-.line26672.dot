digraph {
rankdir="TD"
BB_entry1215[shape=none,label=""];
BB_entry1215 -> BB14521 [tailport=s, headport=n, headlabel="    14521"]
BB14521 [shape=record label="{50103: constant[undefined,v1]|50104: vardecl['dependentArray']|50105: vardecl['previousDependentArray']}" ] 
BB14521 -> BB14522 [tailport=s, headport=n, headlabel="      14522"]
BB14522 [shape=record label="{50106: read-variable['Ember',v3,-]|50107: read-property[v3,'assert',-]|50108: \<variable-non-null-undef\>['Ember']|50109: constant[\"dependent array \",v9]|50110: read-variable['dependentKey',v10,-]|50111: +[v9,v10,v7]|50112: constant[\" must be an `Ember.Array`.  \",v8]|50113: +[v7,v8,v5]|50114: constant[\"If you are not extending arrays, you will need to wrap native arrays with `Ember.A`\",v6]|50115: +[v5,v6,v4]|50116: read-variable['isArray',v14,v13]|50117: read-variable['get',v17,v16]|50118: read-variable['this',v18,-]|50119: read-variable['dependentKey',v19,-]}" ] 
BB14522 -> BB14523 [tailport=s, headport=n, headlabel="      14523"]
BB14522 -> BB14549 [tailport=s, headport=n, color=gray, headlabel="      14549"]
BB14523 [shape=record label="{50120: call-get [v16,v17,v18,v19,v15]}" ] 
BB14523 -> BB14524 [tailport=s, headport=n, headlabel="      14524"]
BB14523 -> BB14549 [tailport=s, headport=n, color=gray]
BB14524 [shape=record label="{50121: call-isArray [v13,v14,v15,v12]}" ] 
BB14524 -> BB14525 [tailport=s, headport=n, headlabel="      14525"]
BB14524 -> BB14549 [tailport=s, headport=n, color=gray]
BB14525 [shape=record label="{50122: if[v12](true-block:14526,false-block:14530)}" ] 
BB14525 -> BB14530 [tailport=s, headport=n, headlabel="      14530"]
BB14525 -> BB14526 [tailport=s, headport=n, headlabel="      14526"]
BB14526 [shape=record label="{50123: read-variable['EmberArray',v22,-]|50124: read-property[v22,'detect',-]|50125: \<variable-non-null-undef\>['EmberArray']|50126: read-variable['get',v25,v24]|50127: read-variable['this',v26,-]|50128: read-variable['dependentKey',v27,-]}" ] 
BB14526 -> BB14527 [tailport=s, headport=n, headlabel="      14527"]
BB14526 -> BB14549 [tailport=s, headport=n, color=gray]
BB14527 [shape=record label="{50129: call-get [v24,v25,v26,v27,v23]}" ] 
BB14527 -> BB14528 [tailport=s, headport=n, headlabel="      14528"]
BB14527 -> BB14549 [tailport=s, headport=n, color=gray]
BB14528 [shape=record label="{50130: call-EmberArray.detect [v22,'detect',v23,v20]}" ] 
BB14528 -> BB14529 [tailport=s, headport=n, headlabel="      14529"]
BB14528 -> BB14549 [tailport=s, headport=n, color=gray]
BB14529 [shape=record label="{50131: ![v20,v12]}" ] 
BB14529 -> BB14530 [tailport=s, headport=n]
BB14529 -> BB14549 [tailport=s, headport=n, color=gray]
BB14530 [shape=record label="{50132: ![v12,v11]}" ] 
BB14530 -> BB14531 [tailport=s, headport=n, headlabel="      14531"]
BB14530 -> BB14549 [tailport=s, headport=n, color=gray]
BB14531 [shape=record label="{50133: call-Ember.assert [v3,'assert',v4,v11,-]*}" ] 
BB14531 -> BB14532 [tailport=s, headport=n, headlabel="      14532"]
BB14531 -> BB14549 [tailport=s, headport=n, color=gray]
BB14532 [shape=record label="{50134: read-variable['partiallyRecomputeFor',v23,v22]|50135: read-variable['this',v24,-]|50136: read-variable['dependentKey',v25,-]}" ] 
BB14532 -> BB14533 [tailport=s, headport=n, headlabel="      14533"]
BB14532 -> BB14549 [tailport=s, headport=n, color=gray]
BB14533 [shape=record label="{50137: call-partiallyRecomputeFor [v22,v23,v24,v25,v21]}" ] 
BB14533 -> BB14534 [tailport=s, headport=n, headlabel="      14534"]
BB14533 -> BB14549 [tailport=s, headport=n, color=gray]
BB14534 [shape=record label="{50138: ![v21,v20]|50139: if[v20](true-block:14535,false-block:14536)}" ] 
BB14534 -> BB14535 [tailport=s, headport=n, headlabel="      14535"]
BB14534 -> BB14536 [tailport=s, headport=n, headlabel="      14536"]
BB14534 -> BB14549 [tailport=s, headport=n, color=gray]
BB14535 [shape=record label="{50140: constant[undefined,v1]}" ] 
BB14535 -> BB14548 [tailport=s, headport=n, headlabel="      14548"]
BB14536 [shape=record label="{50141: read-variable['get',v28,v27]|50142: read-variable['this',v29,-]|50143: read-variable['dependentKey',v30,-]}" ] 
BB14536 -> BB14537 [tailport=s, headport=n, headlabel="      14537"]
BB14536 -> BB14549 [tailport=s, headport=n, color=gray]
BB14537 [shape=record label="{50144: call-get [v27,v28,v29,v30,v26]}" ] 
BB14537 -> BB14538 [tailport=s, headport=n, headlabel="      14538"]
BB14537 -> BB14549 [tailport=s, headport=n, color=gray]
BB14538 [shape=record label="{50145: write-variable[v26,'dependentArray']*|50146: read-variable['meta',v33,-]|50147: read-property[v33,'dependentArrays',v32]|50148: \<variable-non-null-undef\>['meta']|50149: read-variable['dependentKey',v34,-]|50150: read-property[v32,v34,v31]|50151: \<property-non-null-undef\>[v33,'dependentArrays']|50152: write-variable[v31,'previousDependentArray']*|50153: read-variable['dependentArray',v36,-]|50154: read-variable['previousDependentArray',v37,-]|50155: ===[v36,v37,v35]|50156: if[v35](true-block:14539,false-block:14540)}" ] 
BB14538 -> BB14539 [tailport=s, headport=n, headlabel="      14539"]
BB14538 -> BB14540 [tailport=s, headport=n, headlabel="      14540"]
BB14538 -> BB14549 [tailport=s, headport=n, color=gray]
BB14539 [shape=record label="{50157: read-variable['cp',v40,-]|50158: read-property[v40,'_previousItemPropertyKeys',v39]|50159: \<variable-non-null-undef\>['cp']|50160: read-variable['dependentKey',v41,-]|50161: read-property[v39,v41,v38]|50162: \<property-non-null-undef\>[v40,'_previousItemPropertyKeys']|50163: if[v38](true-block:14541,false-block:14548)}" ] 
BB14539 -> BB14541 [tailport=s, headport=n, headlabel="      14541"]
BB14539 -> BB14548 [tailport=s, headport=n]
BB14539 -> BB14549 [tailport=s, headport=n, color=gray]
BB14540 [shape=record label="{50164: read-variable['meta',v41,-]|50165: read-property[v41,'dependentArrays',v39]|50166: \<variable-non-null-undef\>['meta']|50167: read-variable['dependentKey',v40,-]|50168: read-variable['dependentArray',v38,-]|50169: write-property[v39,v40,v38]|50170: \<property-non-null-undef\>[v41,'dependentArrays']*|50171: read-variable['previousDependentArray',v42,-]|50172: if[v42](true-block:14543,false-block:14545)}" ] 
BB14540 -> BB14543 [tailport=s, headport=n, headlabel="      14543"]
BB14540 -> BB14545 [tailport=s, headport=n, headlabel="      14545"]
BB14540 -> BB14549 [tailport=s, headport=n, color=gray]
BB14541 [shape=record label="{50173: read-variable['cp',v45,-]|50174: read-property[v45,'_previousItemPropertyKeys',v43]|50175: \<variable-non-null-undef\>['cp']|50176: read-variable['dependentKey',v44,-]|50177: delete-property[v43,v44,v42]*|50178: read-variable['meta',v48,-]|50179: read-property[v48,'dependentArraysObserver',v47]|50180: \<variable-non-null-undef\>['meta']|50181: read-property[v47,'setupPropertyObservers',-]|50182: \<property-non-null-undef\>[v48,'dependentArraysObserver']|50183: read-variable['dependentKey',v49,-]|50184: read-variable['cp',v52,-]|50185: read-property[v52,'_itemPropertyKeys',v51]|50186: \<variable-non-null-undef\>['cp']|50187: read-variable['dependentKey',v53,-]|50188: read-property[v51,v53,v50]|50189: \<property-non-null-undef\>[v52,'_itemPropertyKeys']}" ] 
BB14541 -> BB14542 [tailport=s, headport=n, headlabel="      14542"]
BB14541 -> BB14549 [tailport=s, headport=n, color=gray]
BB14542 [shape=record label="{50190: call-meta.dependentArraysObserver.setupPropertyObservers [v47,'setupPropertyObservers',v49,v50,-]*}" ] 
BB14542 -> BB14548 [tailport=s, headport=n]
BB14542 -> BB14549 [tailport=s, headport=n, color=gray]
BB14543 [shape=record label="{50191: read-variable['meta',v45,-]|50192: read-property[v45,'dependentArraysObserver',v44]|50193: \<variable-non-null-undef\>['meta']|50194: read-property[v44,'teardownObservers',-]|50195: \<property-non-null-undef\>[v45,'dependentArraysObserver']|50196: read-variable['previousDependentArray',v46,-]|50197: read-variable['dependentKey',v47,-]}" ] 
BB14543 -> BB14544 [tailport=s, headport=n, headlabel="      14544"]
BB14543 -> BB14549 [tailport=s, headport=n, color=gray]
BB14544 [shape=record label="{50198: call-meta.dependentArraysObserver.teardownObservers [v44,'teardownObservers',v46,v47,-]*}" ] 
BB14544 -> BB14545 [tailport=s, headport=n]
BB14544 -> BB14549 [tailport=s, headport=n, color=gray]
BB14545 [shape=record label="{50199: read-variable['dependentArray',v43,-]|50200: if[v43](true-block:14546,false-block:14548)}" ] 
BB14545 -> BB14546 [tailport=s, headport=n, headlabel="      14546"]
BB14545 -> BB14548 [tailport=s, headport=n]
BB14545 -> BB14549 [tailport=s, headport=n, color=gray]
BB14546 [shape=record label="{50201: read-variable['meta',v46,-]|50202: read-property[v46,'dependentArraysObserver',v45]|50203: \<variable-non-null-undef\>['meta']|50204: read-property[v45,'setupObservers',-]|50205: \<property-non-null-undef\>[v46,'dependentArraysObserver']|50206: read-variable['dependentArray',v47,-]|50207: read-variable['dependentKey',v48,-]}" ] 
BB14546 -> BB14547 [tailport=s, headport=n, headlabel="      14547"]
BB14546 -> BB14549 [tailport=s, headport=n, color=gray]
BB14547 [shape=record label="{50208: call-meta.dependentArraysObserver.setupObservers [v45,'setupObservers',v47,v48,-]*}" ] 
BB14547 -> BB14548 [tailport=s, headport=n]
BB14547 -> BB14549 [tailport=s, headport=n, color=gray]
BB14548 [shape=record label="{50209: return[v1]}" ] 
BB14549 [shape=record label="{50210: exceptional-return}" ] 
//#$~ 26700
}
