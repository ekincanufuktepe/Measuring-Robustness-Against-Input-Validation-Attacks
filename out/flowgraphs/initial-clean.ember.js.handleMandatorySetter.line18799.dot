digraph {
rankdir="TD"
BB_entry885[shape=none,label=""];
BB_entry885 -> BB10518 [tailport=s, headport=n, headlabel="    10518"]
BB10518 [shape=record label="{35930: constant[undefined,v1]|35931: vardecl['descriptor']|35932: vardecl['configurable']|35933: vardecl['isWritable']|35934: vardecl['hasValue']}" ] 
BB10518 -> BB10519 [tailport=s, headport=n, headlabel="      10519"]
BB10519 [shape=record label="{35935: read-variable['Object',v4,v2]|35936: read-property[v4,'getOwnPropertyDescriptor',v3]|35937: \<variable-non-null-undef\>['Object']|35938: if[v3](true-block:10520,false-block:10522)}" ] 
BB10519 -> BB10522 [tailport=s, headport=n, headlabel="      10522"]
BB10519 -> BB10520 [tailport=s, headport=n, headlabel="      10520"]
BB10519 -> BB10545 [tailport=s, headport=n, color=gray, headlabel="      10545"]
BB10520 [shape=record label="{35939: read-variable['Object',v6,-]|35940: read-property[v6,'getOwnPropertyDescriptor',-]|35941: \<variable-non-null-undef\>['Object']|35942: read-variable['obj',v7,v2]|35943: read-variable['keyName',v8,v2]}" ] 
BB10520 -> BB10521 [tailport=s, headport=n, headlabel="      10521"]
BB10520 -> BB10545 [tailport=s, headport=n, color=gray]
BB10521 [shape=record label="{35944: call-Object.getOwnPropertyDescriptor [v6,'getOwnPropertyDescriptor',v7,v8,v3]}" ] 
BB10521 -> BB10522 [tailport=s, headport=n]
BB10521 -> BB10545 [tailport=s, headport=n, color=gray]
BB10522 [shape=record label="{35945: write-variable[v3,'descriptor']*|35946: read-variable['descriptor',v6,v2]|35947: if[v6](true-block:10523,false-block:10524)}" ] 
BB10522 -> BB10523 [tailport=s, headport=n, headlabel="      10523"]
BB10522 -> BB10524 [tailport=s, headport=n, headlabel="      10524"]
BB10522 -> BB10545 [tailport=s, headport=n, color=gray]
BB10523 [shape=record label="{35948: read-variable['descriptor',v7,v2]|35949: read-property[v7,'configurable',v5]|35950: \<variable-non-null-undef\>['descriptor']}" ] 
BB10523 -> BB10525 [tailport=s, headport=n, headlabel="      10525"]
BB10523 -> BB10545 [tailport=s, headport=n, color=gray]
BB10524 [shape=record label="{35951: constant[true,v5]}" ] 
BB10524 -> BB10525 [tailport=s, headport=n]
BB10525 [shape=record label="{35952: write-variable[v5,'configurable']*|35953: read-variable['descriptor',v8,v2]|35954: if[v8](true-block:10526,false-block:10527)}" ] 
BB10525 -> BB10526 [tailport=s, headport=n, headlabel="      10526"]
BB10525 -> BB10527 [tailport=s, headport=n, headlabel="      10527"]
BB10525 -> BB10545 [tailport=s, headport=n, color=gray]
BB10526 [shape=record label="{35955: read-variable['descriptor',v9,v2]|35956: read-property[v9,'writable',v7]|35957: \<variable-non-null-undef\>['descriptor']}" ] 
BB10526 -> BB10528 [tailport=s, headport=n, headlabel="      10528"]
BB10526 -> BB10545 [tailport=s, headport=n, color=gray]
BB10527 [shape=record label="{35958: constant[true,v7]}" ] 
BB10527 -> BB10528 [tailport=s, headport=n]
BB10528 [shape=record label="{35959: write-variable[v7,'isWritable']*|35960: read-variable['descriptor',v10,v2]|35961: if[v10](true-block:10529,false-block:10530)}" ] 
BB10528 -> BB10529 [tailport=s, headport=n, headlabel="      10529"]
BB10528 -> BB10530 [tailport=s, headport=n, headlabel="      10530"]
BB10528 -> BB10545 [tailport=s, headport=n, color=gray]
BB10529 [shape=record label="{35962: constant[\"value\",v11]|35963: read-variable['descriptor',v12,v2]|35964: in[v11,v12,v9]}" ] 
BB10529 -> BB10531 [tailport=s, headport=n, headlabel="      10531"]
BB10529 -> BB10545 [tailport=s, headport=n, color=gray]
BB10530 [shape=record label="{35965: constant[true,v9]}" ] 
BB10530 -> BB10531 [tailport=s, headport=n]
BB10531 [shape=record label="{35966: write-variable[v9,'hasValue']*|35967: read-variable['configurable',v11,v2]|35968: if[v11](true-block:10532,false-block:10535)}" ] 
BB10531 -> BB10535 [tailport=s, headport=n, headlabel="      10535"]
BB10531 -> BB10532 [tailport=s, headport=n, headlabel="      10532"]
BB10531 -> BB10545 [tailport=s, headport=n, color=gray]
BB10532 [shape=record label="{35969: read-variable['isWritable',v11,v2]|35970: if[v11](true-block:10533,false-block:10535)}" ] 
BB10532 -> BB10535 [tailport=s, headport=n]
BB10532 -> BB10533 [tailport=s, headport=n, headlabel="      10533"]
BB10532 -> BB10545 [tailport=s, headport=n, color=gray]
BB10533 [shape=record label="{35971: read-variable['hasValue',v11,v2]|35972: if[v11](true-block:10534,false-block:10535)}" ] 
BB10533 -> BB10535 [tailport=s, headport=n]
BB10533 -> BB10534 [tailport=s, headport=n, headlabel="      10534"]
BB10533 -> BB10545 [tailport=s, headport=n, color=gray]
BB10534 [shape=record label="{35973: read-variable['keyName',v12,v2]|35974: read-variable['obj',v13,v2]|35975: in[v12,v13,v11]}" ] 
BB10534 -> BB10535 [tailport=s, headport=n]
BB10534 -> BB10545 [tailport=s, headport=n, color=gray]
BB10535 [shape=record label="{35976: if[v11](true-block:10536,false-block:10544)}" ] 
BB10535 -> BB10536 [tailport=s, headport=n, headlabel="      10536"]
BB10535 -> BB10544 [tailport=s, headport=n, headlabel="      10544"]
BB10536 [shape=record label="{35977: read-variable['m',v15,v2]|35978: read-property[v15,'values',v13]|35979: \<variable-non-null-undef\>['m']|35980: read-variable['keyName',v14,v2]|35981: read-variable['obj',v16,v2]|35982: read-variable['keyName',v17,v2]|35983: read-property[v16,v17,v12]|35984: \<variable-non-null-undef\>['obj']|35985: write-property[v13,v14,v12]|35986: \<property-non-null-undef\>[v15,'values']*|35987: read-variable['o_defineProperty',v19,v18]|35988: read-variable['obj',v20,v2]|35989: read-variable['keyName',v21,v2]|35990: new[v22]|35991: constant[true,v23]|35992: write-property[v22,'configurable',v23]|35993: read-variable['Object',v28,-]|35994: read-property[v28,'prototype',v27]|35995: \<variable-non-null-undef\>['Object']|35996: read-property[v27,'propertyIsEnumerable',v26]|35997: \<property-non-null-undef\>[v28,'prototype']|35998: read-property[v26,'call',-]|35999: \<property-non-null-undef\>[v27,'propertyIsEnumerable']|36000: read-variable['obj',v29,v2]|36001: read-variable['keyName',v30,v2]}" ] 
BB10536 -> BB10537 [tailport=s, headport=n, headlabel="      10537"]
BB10536 -> BB10545 [tailport=s, headport=n, color=gray]
BB10537 [shape=record label="{36002: call-Object.prototype.propertyIsEnumerable.call [v26,'call',v29,v30,v24]}" ] 
BB10537 -> BB10538 [tailport=s, headport=n, headlabel="      10538"]
BB10537 -> BB10545 [tailport=s, headport=n, color=gray]
BB10538 [shape=record label="{36003: write-property[v22,'enumerable',v24]|36004: read-variable['MANDATORY_SETTER_FUNCTION',v33,v32]|36005: read-variable['keyName',v34,v2]}" ] 
BB10538 -> BB10539 [tailport=s, headport=n, headlabel="      10539"]
BB10538 -> BB10545 [tailport=s, headport=n, color=gray]
BB10539 [shape=record label="{36006: call-MANDATORY_SETTER_FUNCTION [v32,v33,v34,v31]}" ] 
BB10539 -> BB10540 [tailport=s, headport=n, headlabel="      10540"]
BB10539 -> BB10545 [tailport=s, headport=n, color=gray]
BB10540 [shape=record label="{36007: write-property[v22,'set',v31]|36008: read-variable['DEFAULT_GETTER_FUNCTION',v37,v36]|36009: read-variable['keyName',v38,v2]}" ] 
BB10540 -> BB10541 [tailport=s, headport=n, headlabel="      10541"]
BB10540 -> BB10545 [tailport=s, headport=n, color=gray]
BB10541 [shape=record label="{36010: call-DEFAULT_GETTER_FUNCTION [v36,v37,v38,v35]}" ] 
BB10541 -> BB10542 [tailport=s, headport=n, headlabel="      10542"]
BB10541 -> BB10545 [tailport=s, headport=n, color=gray]
BB10542 [shape=record label="{36011: write-property[v22,'get',v35]}" ] 
BB10542 -> BB10543 [tailport=s, headport=n, headlabel="      10543"]
BB10542 -> BB10545 [tailport=s, headport=n, color=gray]
BB10543 [shape=record label="{36012: call-o_defineProperty [v18,v19,v20,v21,v22,-]*}" ] 
BB10543 -> BB10544 [tailport=s, headport=n]
BB10543 -> BB10545 [tailport=s, headport=n, color=gray]
BB10544 [shape=record label="{36013: return[v1]}" ] 
BB10545 [shape=record label="{36014: exceptional-return}" ] 
//#$~ 18812
}
