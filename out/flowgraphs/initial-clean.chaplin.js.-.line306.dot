digraph {
rankdir="TD"
BB_entry30[shape=none,label=""];
BB_entry30 -> BB288 [tailport=s, headport=n, headlabel="    288"]
BB288 [shape=record label="{946: constant[undefined,v1]|947: vardecl['fileName']|948: vardecl['moduleName']|949: vardecl['_this']}" ] 
BB288 -> BB289 [tailport=s, headport=n, headlabel="      289"]
BB289 [shape=record label="{950: read-variable['this',v2,-]|951: write-variable[v2,'_this']*|952: read-variable['name',v4,-]|953: read-variable['this',v7,-]|954: read-property[v7,'settings',v6]|955: read-property[v6,'controllerSuffix',v5]|956: \<property-non-null-undef\>[v7,'settings']|957: +[v4,v5,v3]|958: write-variable[v3,'fileName']*|959: read-variable['this',v12,-]|960: read-property[v12,'settings',v11]|961: read-property[v11,'controllerPath',v9]|962: \<property-non-null-undef\>[v12,'settings']|963: read-variable['fileName',v10,-]|964: +[v9,v10,v8]|965: write-variable[v8,'moduleName']*|966: typeof['define',v15]|967: constant[\"undefined\",v16]|968: !==[v15,v16,v14]|969: if[v14](true-block:290,false-block:291)}" ] 
BB289 -> BB291 [tailport=s, headport=n, headlabel="      291"]
BB289 -> BB290 [tailport=s, headport=n, headlabel="      290"]
BB289 -> BB302 [tailport=s, headport=n, color=gray, headlabel="      302"]
BB290 [shape=record label="{970: read-variable['define',v17,-]|971: constant[null,v18]|972: !==[v17,v18,v14]}" ] 
BB290 -> BB291 [tailport=s, headport=n]
BB290 -> BB302 [tailport=s, headport=n, color=gray]
BB291 [shape=record label="{973: if[v14](true-block:292,false-block:293)}" ] 
BB291 -> BB292 [tailport=s, headport=n, headlabel="      292"]
BB291 -> BB293 [tailport=s, headport=n, headlabel="      293"]
BB292 [shape=record label="{974: read-variable['define',v17,-]|975: read-property[v17,'amd',v13]|976: \<variable-non-null-undef\>['define']}" ] 
BB292 -> BB294 [tailport=s, headport=n, headlabel="      294"]
BB292 -> BB302 [tailport=s, headport=n, color=gray]
BB293 [shape=record label="{977: constant[0.0,-]|978: constant[undefined,v13]}" ] 
BB293 -> BB294 [tailport=s, headport=n]
BB294 [shape=record label="{979: if[v13](true-block:295,false-block:296)}" ] 
BB294 -> BB295 [tailport=s, headport=n, headlabel="      295"]
BB294 -> BB296 [tailport=s, headport=n, headlabel="      296"]
BB295 [shape=record label="{980: read-variable['require',v18,v17]|981: read-variable['Array',v20,-]|982: read-variable['moduleName',v21,-]}" ] 
BB295 -> BB297 [tailport=s, headport=n, headlabel="      297"]
BB295 -> BB302 [tailport=s, headport=n, color=gray]
BB296 [shape=record label="{983: read-variable['setTimeout',v18,v17]|984: function-expr[function ( ),v19]|985: constant[0.0,v20]}" ] 
BB296 -> BB300 [tailport=s, headport=n, headlabel="      300"]
BB296 -> BB302 [tailport=s, headport=n, color=gray]
BB297 [shape=record label="{986: construct [-,v20,v21,v19]}" ] 
BB297 -> BB298 [tailport=s, headport=n, headlabel="      298"]
BB297 -> BB302 [tailport=s, headport=n, color=gray]
BB298 [shape=record label="{987: read-variable['handler',v22,-]}" ] 
BB298 -> BB299 [tailport=s, headport=n, headlabel="      299"]
BB298 -> BB302 [tailport=s, headport=n, color=gray]
BB299 [shape=record label="{988: call-require [v17,v18,v19,v22,v1]}" ] 
BB299 -> BB301 [tailport=s, headport=n, headlabel="      301"]
BB299 -> BB302 [tailport=s, headport=n, color=gray]
BB300 [shape=record label="{989: call-setTimeout [v17,v18,v19,v20,v1]}" ] 
BB300 -> BB301 [tailport=s, headport=n]
BB300 -> BB302 [tailport=s, headport=n, color=gray]
BB301 [shape=record label="{990: return[v1]}" ] 
BB302 [shape=record label="{991: exceptional-return}" ] 
//#$~ 316
}
