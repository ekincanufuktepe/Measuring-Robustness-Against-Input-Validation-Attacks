digraph {
rankdir="TD"
BB_entry352[shape=none,label=""];
BB_entry352 -> BB4332 [tailport=s, headport=n, headlabel="    4332"]
BB4332 [shape=record label="{14513: constant[undefined,v1]|14514: vardecl['view']|14515: vardecl['numParams']|14516: vardecl['param']|14517: vardecl['prop']|14518: function-decl[function valueFn ( ),-]|14519: vardecl['hasStream']|14520: vardecl['lazyValue']|14521: vardecl['i']}" ] 
BB4332 -> BB4333 [tailport=s, headport=n, headlabel="      4333"]
BB4333 [shape=record label="{14522: read-variable['this',v2,-]|14523: write-variable[v2,'view']*|14524: read-variable['params',v4,-]|14525: read-property[v4,'length',v3]|14526: \<variable-non-null-undef\>['params']|14527: write-variable[v3,'numParams']*|14528: read-variable['Ember',v6,-]|14529: read-property[v6,'assert',-]|14530: \<variable-non-null-undef\>['Ember']|14531: constant[\"makeBoundHelper generated helpers do not support use with blocks\",v7]|14532: read-variable['options',v10,-]|14533: read-property[v10,'template',v9]|14534: \<variable-non-null-undef\>['options']|14535: ![v9,v8]}" ] 
BB4333 -> BB4334 [tailport=s, headport=n, headlabel="      4334"]
BB4333 -> BB4360 [tailport=s, headport=n, color=gray, headlabel="      4360"]
BB4334 [shape=record label="{14536: call-Ember.assert [v6,'assert',v7,v8,-]*}" ] 
BB4334 -> BB4335 [tailport=s, headport=n, headlabel="      4335"]
BB4334 -> BB4360 [tailport=s, headport=n, color=gray]
BB4335 [shape=record label="{14537: read-variable['scanArray',v13,v12]|14538: read-variable['params',v14,-]}" ] 
BB4335 -> BB4336 [tailport=s, headport=n, headlabel="      4336"]
BB4335 -> BB4360 [tailport=s, headport=n, color=gray]
BB4336 [shape=record label="{14539: call-scanArray [v12,v13,v14,v11]}" ] 
BB4336 -> BB4337 [tailport=s, headport=n, headlabel="      4337"]
BB4336 -> BB4360 [tailport=s, headport=n, color=gray]
BB4337 [shape=record label="{14540: if[v11](true-block:4340,false-block:4338)}" ] 
BB4337 -> BB4340 [tailport=s, headport=n, headlabel="      4340"]
BB4337 -> BB4338 [tailport=s, headport=n, headlabel="      4338"]
BB4338 [shape=record label="{14541: read-variable['scanHash',v13,v12]|14542: read-variable['hash',v14,-]}" ] 
BB4338 -> BB4339 [tailport=s, headport=n, headlabel="      4339"]
BB4338 -> BB4360 [tailport=s, headport=n, color=gray]
BB4339 [shape=record label="{14543: call-scanHash [v12,v13,v14,v11]}" ] 
BB4339 -> BB4340 [tailport=s, headport=n]
BB4339 -> BB4360 [tailport=s, headport=n, color=gray]
BB4340 [shape=record label="{14544: write-variable[v11,'hasStream']*|14545: read-variable['env',v14,-]|14546: read-property[v14,'data',v13]|14547: \<variable-non-null-undef\>['env']|14548: read-property[v13,'isUnbound',v12]|14549: \<property-non-null-undef\>[v14,'data']|14550: if[v12](true-block:4342,false-block:4341)}" ] 
BB4340 -> BB4342 [tailport=s, headport=n, headlabel="      4342"]
BB4340 -> BB4341 [tailport=s, headport=n, headlabel="      4341"]
BB4340 -> BB4360 [tailport=s, headport=n, color=gray]
BB4341 [shape=record label="{14551: read-variable['hasStream',v13,-]|14552: ![v13,v12]}" ] 
BB4341 -> BB4342 [tailport=s, headport=n]
BB4341 -> BB4360 [tailport=s, headport=n, color=gray]
BB4342 [shape=record label="{14553: if[v12](true-block:4343,false-block:4344)}" ] 
BB4342 -> BB4343 [tailport=s, headport=n, headlabel="      4343"]
BB4342 -> BB4344 [tailport=s, headport=n, headlabel="      4344"]
BB4343 [shape=record label="{14554: read-variable['valueFn',v14,v13]}" ] 
BB4343 -> BB4345 [tailport=s, headport=n, headlabel="      4345"]
BB4343 -> BB4360 [tailport=s, headport=n, color=gray]
BB4344 [shape=record label="{14555: read-variable['Stream',v14,-]|14556: read-variable['valueFn',v15,-]}" ] 
BB4344 -> BB4346 [tailport=s, headport=n, headlabel="      4346"]
BB4344 -> BB4360 [tailport=s, headport=n, color=gray]
BB4345 [shape=record label="{14557: call-valueFn [v13,v14,v1]}" ] 
BB4345 -> BB4359 [tailport=s, headport=n, headlabel="      4359"]
BB4345 -> BB4360 [tailport=s, headport=n, color=gray]
BB4346 [shape=record label="{14558: construct [-,v14,v15,v13]}" ] 
BB4346 -> BB4347 [tailport=s, headport=n, headlabel="      4347"]
BB4346 -> BB4360 [tailport=s, headport=n, color=gray]
BB4347 [shape=record label="{14559: write-variable[v13,'lazyValue']*|14560: constant[0.0,v17]|14561: write-variable[v17,'i']*}" ] 
BB4347 -> BB4348 [tailport=s, headport=n, headlabel="      4348"]
BB4348 [shape=record label="{14562: read-variable['i',v18,-]|14563: read-variable['numParams',v19,-]|14564: \<[v18,v19,v16]|14565: if[v16](true-block:4349,false-block:4350)}" ] 
BB4348 -> BB4349 [tailport=s, headport=n, headlabel="      4349"]
BB4348 -> BB4350 [tailport=s, headport=n, headlabel="      4350"]
BB4348 -> BB4360 [tailport=s, headport=n, color=gray]
BB4349 [shape=record label="{14566: read-variable['params',v21,-]|14567: read-variable['i',v22,-]|14568: read-property[v21,v22,v20]|14569: \<variable-non-null-undef\>['params']|14570: write-variable[v20,'param']*|14571: read-variable['subscribe',v24,v23]|14572: read-variable['param',v25,-]|14573: read-variable['lazyValue',v27,-]|14574: read-property[v27,'notify',v26]|14575: \<variable-non-null-undef\>['lazyValue']|14576: read-variable['lazyValue',v28,-]}" ] 
BB4349 -> BB4351 [tailport=s, headport=n, headlabel="      4351"]
BB4349 -> BB4360 [tailport=s, headport=n, color=gray]
BB4350 [shape=record label="{14577: read-variable['hash',v21,-]}" ] 
BB4350 -> BB4353 [tailport=s, headport=n, headlabel="      4353"]
BB4350 -> BB4360 [tailport=s, headport=n, color=gray]
BB4351 [shape=record label="{14578: call-subscribe [v23,v24,v25,v26,v28,-]*}" ] 
BB4351 -> BB4352 [tailport=s, headport=n, headlabel="      4352"]
BB4351 -> BB4360 [tailport=s, headport=n, color=gray]
BB4352 [shape=record label="{14579: constant[1.0,v29]|14580: read-variable['i',v30,-]|14581: +[v30,v31]|14582: +[v31,v29,v32]|14583: write-variable[v32,'i']}" ] 
BB4352 -> BB4348 [tailport=s, headport=n]
BB4352 -> BB4360 [tailport=s, headport=n, color=gray]
BB4353 [shape=record label="{14584: begin-for-in[v21,v22]}" ] 
BB4353 -> BB4354 [tailport=s, headport=n, headlabel="      4354"]
BB4353 -> BB4360 [tailport=s, headport=n, color=gray]
BB4354 [shape=record label="{14585: has-next[v22,v23]|14586: if[v23](true-block:4355,false-block:4358)}" ] 
BB4354 -> BB4355 [tailport=s, headport=n, headlabel="      4355"]
BB4354 -> BB4358 [tailport=s, headport=n, headlabel="      4358"]
BB4355 [shape=record label="{14587: next-property[v22,v24]|14588: write-variable[v24,'prop']|14589: read-variable['hash',v26,-]|14590: read-variable['prop',v27,-]|14591: read-property[v26,v27,v25]|14592: \<variable-non-null-undef\>['hash']|14593: write-variable[v25,'param']*|14594: read-variable['subscribe',v29,v28]|14595: read-variable['param',v30,-]|14596: read-variable['lazyValue',v32,-]|14597: read-property[v32,'notify',v31]|14598: \<variable-non-null-undef\>['lazyValue']|14599: read-variable['lazyValue',v33,-]}" ] 
BB4355 -> BB4356 [tailport=s, headport=n, headlabel="      4356"]
BB4355 -> BB4360 [tailport=s, headport=n, color=gray]
BB4356 [shape=record label="{14600: call-subscribe [v28,v29,v30,v31,v33,-]*}" ] 
BB4356 -> BB4357 [tailport=s, headport=n, headlabel="      4357"]
BB4356 -> BB4360 [tailport=s, headport=n, color=gray]
BB4357 [shape=record label="{14601: end-for-in(begin-node:14584)}" ] 
BB4357 -> BB4354 [tailport=s, headport=n]
BB4358 [shape=record label="{14602: read-variable['lazyValue',v1,-]}" ] 
BB4358 -> BB4359 [tailport=s, headport=n]
BB4358 -> BB4360 [tailport=s, headport=n, color=gray]
BB4359 [shape=record label="{14603: return[v1]}" ] 
BB4360 [shape=record label="{14604: exceptional-return}" ] 
//#$~ 8322
}
