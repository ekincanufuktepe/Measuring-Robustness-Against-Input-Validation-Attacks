digraph {
rankdir="TD"
BB_entry460[shape=none,label=""];
BB_entry460 -> BB6579 [tailport=s, headport=n, headlabel="    6579"]
BB6579 [shape=record label="{19573: constant[undefined,v1]|19574: vardecl['ff']}" ] 
BB6579 -> BB6580 [tailport=s, headport=n, headlabel="      6580"]
BB6580 [shape=record label="{19575: read-variable['query',v3,-]|19576: ![v3,v2]|19577: if[v2](true-block:6581,false-block:6582)}" ] 
BB6580 -> BB6581 [tailport=s, headport=n, headlabel="      6581"]
BB6580 -> BB6582 [tailport=s, headport=n, headlabel="      6582"]
BB6580 -> BB6612 [tailport=s, headport=n, color=gray, headlabel="      6612"]
BB6581 [shape=record label="{19578: read-variable['yesman',v1,-]}" ] 
BB6581 -> BB6611 [tailport=s, headport=n, headlabel="      6611"]
BB6581 -> BB6612 [tailport=s, headport=n, color=gray]
BB6582 [shape=record label="{19579: read-variable['ignores',v4,-]|19580: if[v4](true-block:6584,false-block:6583)}" ] 
BB6582 -> BB6584 [tailport=s, headport=n, headlabel="      6584"]
BB6582 -> BB6583 [tailport=s, headport=n, headlabel="      6583"]
BB6582 -> BB6612 [tailport=s, headport=n, color=gray]
BB6583 [shape=record label="{19581: new[v4]}" ] 
BB6583 -> BB6584 [tailport=s, headport=n]
BB6584 [shape=record label="{19582: write-variable[v4,'ignores']*|19583: constant[null,v5]|19584: write-variable[v5,'ff']*|19585: constant[\"el\",v8]|19586: read-variable['ignores',v9,-]|19587: in[v8,v9,v7]|19588: ![v7,v6]|19589: if[v6](true-block:6585,false-block:6588)}" ] 
BB6584 -> BB6585 [tailport=s, headport=n, headlabel="      6585"]
BB6584 -> BB6588 [tailport=s, headport=n, headlabel="      6588"]
BB6584 -> BB6612 [tailport=s, headport=n, color=gray]
BB6585 [shape=record label="{19590: read-variable['agree',v12,v11]|19591: read-variable['ff',v13,-]|19592: read-variable['_isElement',v14,-]}" ] 
BB6585 -> BB6586 [tailport=s, headport=n, headlabel="      6586"]
BB6585 -> BB6612 [tailport=s, headport=n, color=gray]
BB6586 [shape=record label="{19593: call-agree [v11,v12,v13,v14,v10]}" ] 
BB6586 -> BB6587 [tailport=s, headport=n, headlabel="      6587"]
BB6586 -> BB6612 [tailport=s, headport=n, color=gray]
BB6587 [shape=record label="{19594: write-variable[v10,'ff']*}" ] 
BB6587 -> BB6588 [tailport=s, headport=n]
BB6588 [shape=record label="{19595: constant[\"tag\",v12]|19596: read-variable['ignores',v13,-]|19597: in[v12,v13,v11]|19598: ![v11,v10]|19599: if[v10](true-block:6589,false-block:6593)}" ] 
BB6588 -> BB6589 [tailport=s, headport=n, headlabel="      6589"]
BB6588 -> BB6593 [tailport=s, headport=n, headlabel="      6593"]
BB6588 -> BB6612 [tailport=s, headport=n, color=gray]
BB6589 [shape=record label="{19600: read-variable['query',v17,-]|19601: read-property[v17,'tag',v15]|19602: \<variable-non-null-undef\>['query']|19603: constant[\"*\",v16]|19604: !=[v15,v16,v14]|19605: if[v14](true-block:6590,false-block:6593)}" ] 
BB6589 -> BB6590 [tailport=s, headport=n, headlabel="      6590"]
BB6589 -> BB6593 [tailport=s, headport=n]
BB6589 -> BB6612 [tailport=s, headport=n, color=gray]
BB6590 [shape=record label="{19606: read-variable['agree',v20,v19]|19607: read-variable['ff',v21,-]|19608: function-expr[function ( elem ),v22]}" ] 
BB6590 -> BB6591 [tailport=s, headport=n, headlabel="      6591"]
BB6590 -> BB6612 [tailport=s, headport=n, color=gray]
BB6591 [shape=record label="{19609: call-agree [v19,v20,v21,v22,v18]}" ] 
BB6591 -> BB6592 [tailport=s, headport=n, headlabel="      6592"]
BB6591 -> BB6612 [tailport=s, headport=n, color=gray]
BB6592 [shape=record label="{19610: write-variable[v18,'ff']*}" ] 
BB6592 -> BB6593 [tailport=s, headport=n]
BB6593 [shape=record label="{19611: constant[\"classes\",v16]|19612: read-variable['ignores',v17,-]|19613: in[v16,v17,v15]|19614: ![v15,v14]|19615: if[v14](true-block:6594,false-block:6596)}" ] 
BB6593 -> BB6594 [tailport=s, headport=n, headlabel="      6594"]
BB6593 -> BB6596 [tailport=s, headport=n, headlabel="      6596"]
BB6593 -> BB6612 [tailport=s, headport=n, color=gray]
BB6594 [shape=record label="{19616: read-variable['each',v19,v18]|19617: read-variable['query',v21,-]|19618: read-property[v21,'classes',v20]|19619: \<variable-non-null-undef\>['query']|19620: function-expr[function ( cname idx arr ),v22]}" ] 
BB6594 -> BB6595 [tailport=s, headport=n, headlabel="      6595"]
BB6594 -> BB6612 [tailport=s, headport=n, color=gray]
BB6595 [shape=record label="{19621: call-each [v18,v19,v20,v22,-]*}" ] 
BB6595 -> BB6596 [tailport=s, headport=n]
BB6595 -> BB6612 [tailport=s, headport=n, color=gray]
BB6596 [shape=record label="{19622: constant[\"pseudos\",v20]|19623: read-variable['ignores',v21,-]|19624: in[v20,v21,v19]|19625: ![v19,v18]|19626: if[v18](true-block:6597,false-block:6599)}" ] 
BB6596 -> BB6597 [tailport=s, headport=n, headlabel="      6597"]
BB6596 -> BB6599 [tailport=s, headport=n, headlabel="      6599"]
BB6596 -> BB6612 [tailport=s, headport=n, color=gray]
BB6597 [shape=record label="{19627: read-variable['each',v23,v22]|19628: read-variable['query',v25,-]|19629: read-property[v25,'pseudos',v24]|19630: \<variable-non-null-undef\>['query']|19631: function-expr[function ( pseudo ),v26]}" ] 
BB6597 -> BB6598 [tailport=s, headport=n, headlabel="      6598"]
BB6597 -> BB6612 [tailport=s, headport=n, color=gray]
BB6598 [shape=record label="{19632: call-each [v22,v23,v24,v26,-]*}" ] 
BB6598 -> BB6599 [tailport=s, headport=n]
BB6598 -> BB6612 [tailport=s, headport=n, color=gray]
BB6599 [shape=record label="{19633: constant[\"attrs\",v24]|19634: read-variable['ignores',v25,-]|19635: in[v24,v25,v23]|19636: ![v23,v22]|19637: if[v22](true-block:6600,false-block:6602)}" ] 
BB6599 -> BB6600 [tailport=s, headport=n, headlabel="      6600"]
BB6599 -> BB6602 [tailport=s, headport=n, headlabel="      6602"]
BB6599 -> BB6612 [tailport=s, headport=n, color=gray]
BB6600 [shape=record label="{19638: read-variable['each',v27,v26]|19639: read-variable['query',v29,-]|19640: read-property[v29,'attrs',v28]|19641: \<variable-non-null-undef\>['query']|19642: function-expr[function ( attr ),v30]}" ] 
BB6600 -> BB6601 [tailport=s, headport=n, headlabel="      6601"]
BB6600 -> BB6612 [tailport=s, headport=n, color=gray]
BB6601 [shape=record label="{19643: call-each [v26,v27,v28,v30,-]*}" ] 
BB6601 -> BB6602 [tailport=s, headport=n]
BB6601 -> BB6612 [tailport=s, headport=n, color=gray]
BB6602 [shape=record label="{19644: constant[\"id\",v28]|19645: read-variable['ignores',v29,-]|19646: in[v28,v29,v27]|19647: ![v27,v26]|19648: if[v26](true-block:6603,false-block:6607)}" ] 
BB6602 -> BB6603 [tailport=s, headport=n, headlabel="      6603"]
BB6602 -> BB6607 [tailport=s, headport=n, headlabel="      6607"]
BB6602 -> BB6612 [tailport=s, headport=n, color=gray]
BB6603 [shape=record label="{19649: read-variable['query',v31,-]|19650: read-property[v31,'id',v30]|19651: \<variable-non-null-undef\>['query']|19652: if[v30](true-block:6604,false-block:6607)}" ] 
BB6603 -> BB6604 [tailport=s, headport=n, headlabel="      6604"]
BB6603 -> BB6607 [tailport=s, headport=n]
BB6603 -> BB6612 [tailport=s, headport=n, color=gray]
BB6604 [shape=record label="{19653: read-variable['agree',v34,v33]|19654: read-variable['ff',v35,-]|19655: function-expr[function ( elem ),v36]}" ] 
BB6604 -> BB6605 [tailport=s, headport=n, headlabel="      6605"]
BB6604 -> BB6612 [tailport=s, headport=n, color=gray]
BB6605 [shape=record label="{19656: call-agree [v33,v34,v35,v36,v32]}" ] 
BB6605 -> BB6606 [tailport=s, headport=n, headlabel="      6606"]
BB6605 -> BB6612 [tailport=s, headport=n, color=gray]
BB6606 [shape=record label="{19657: write-variable[v32,'ff']*}" ] 
BB6606 -> BB6607 [tailport=s, headport=n]
BB6607 [shape=record label="{19658: read-variable['ff',v31,-]|19659: ![v31,v30]|19660: if[v30](true-block:6608,false-block:6610)}" ] 
BB6607 -> BB6608 [tailport=s, headport=n, headlabel="      6608"]
BB6607 -> BB6610 [tailport=s, headport=n, headlabel="      6610"]
BB6607 -> BB6612 [tailport=s, headport=n, color=gray]
BB6608 [shape=record label="{19661: constant[\"default\",v34]|19662: read-variable['ignores',v35,-]|19663: in[v34,v35,v33]|19664: ![v33,v32]|19665: if[v32](true-block:6609,false-block:6610)}" ] 
BB6608 -> BB6609 [tailport=s, headport=n, headlabel="      6609"]
BB6608 -> BB6610 [tailport=s, headport=n]
BB6608 -> BB6612 [tailport=s, headport=n, color=gray]
BB6609 [shape=record label="{19666: read-variable['yesman',v36,-]|19667: write-variable[v36,'ff']*}" ] 
BB6609 -> BB6610 [tailport=s, headport=n]
BB6609 -> BB6612 [tailport=s, headport=n, color=gray]
BB6610 [shape=record label="{19668: read-variable['ff',v1,-]}" ] 
BB6610 -> BB6611 [tailport=s, headport=n]
BB6610 -> BB6612 [tailport=s, headport=n, color=gray]
BB6611 [shape=record label="{19669: return[v1]}" ] 
BB6612 [shape=record label="{19670: exceptional-return}" ] 
//#$~ 9303
}
