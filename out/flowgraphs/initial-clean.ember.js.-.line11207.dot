digraph {
rankdir="TD"
BB_entry493[shape=none,label=""];
BB_entry493 -> BB6387 [tailport=s, headport=n, headlabel="    6387"]
BB6387 [shape=record label="{22367: constant[undefined,v1]|22368: vardecl['Ember']|22369: vardecl['get']|22370: vardecl['set']|22371: vardecl['computed']|22372: vardecl['isEmpty']|22373: vardecl['isNone']|22374: vardecl['alias']|22375: vardecl['a_slice']|22376: function-decl[function getProperties ( self propertyNames ),-]|22377: function-decl[function registerComputed ( name macro ),-]|22378: function-decl[function registerComputedWithProperties ( name macro ),-]}" ] 
BB6387 -> BB6388 [tailport=s, headport=n, headlabel="      6388"]
BB6388 [shape=record label="{22379: read-variable['__dependency1__',v3,-]|22380: read-property[v3,'default',v2]|22381: \<variable-non-null-undef\>['__dependency1__']|22382: write-variable[v2,'Ember']*|22383: read-variable['__dependency2__',v5,-]|22384: read-property[v5,'get',v4]|22385: \<variable-non-null-undef\>['__dependency2__']|22386: write-variable[v4,'get']*|22387: read-variable['__dependency3__',v7,-]|22388: read-property[v7,'set',v6]|22389: \<variable-non-null-undef\>['__dependency3__']|22390: write-variable[v6,'set']*|22391: read-variable['__dependency4__',v9,-]|22392: read-property[v9,'computed',v8]|22393: \<variable-non-null-undef\>['__dependency4__']|22394: write-variable[v8,'computed']*|22395: read-variable['__dependency5__',v11,-]|22396: read-property[v11,'default',v10]|22397: \<variable-non-null-undef\>['__dependency5__']|22398: write-variable[v10,'isEmpty']*|22399: read-variable['__dependency6__',v13,-]|22400: read-property[v13,'default',v12]|22401: \<variable-non-null-undef\>['__dependency6__']|22402: write-variable[v12,'isNone']*|22403: read-variable['__dependency7__',v15,-]|22404: read-property[v15,'default',v14]|22405: \<variable-non-null-undef\>['__dependency7__']|22406: write-variable[v14,'alias']*|22407: read-variable['Array',v18,-]}" ] 
BB6388 -> BB6389 [tailport=s, headport=n, headlabel="      6389"]
BB6388 -> BB6418 [tailport=s, headport=n, color=gray, headlabel="      6418"]
BB6389 [shape=record label="{22408: construct [-,v18,v17]}" ] 
BB6389 -> BB6390 [tailport=s, headport=n, headlabel="      6390"]
BB6389 -> BB6418 [tailport=s, headport=n, color=gray]
BB6390 [shape=record label="{22409: read-property[v17,'slice',v16]|22410: write-variable[v16,'a_slice']*|22411: read-variable['computed',v20,-]|22412: function-expr[function ( dependentKey ),v19]|22413: write-property[v20,'empty',v19]|22414: \<variable-non-null-undef\>['computed']*|22415: read-variable['computed',v22,-]|22416: function-expr[function ( dependentKey ),v21]|22417: write-property[v22,'notEmpty',v21]|22418: \<variable-non-null-undef\>['computed']*|22419: read-variable['registerComputed',v24,v23]|22420: constant[\"none\",v25]|22421: function-expr[function ( dependentKey ),v26]}" ] 
BB6390 -> BB6391 [tailport=s, headport=n, headlabel="      6391"]
BB6390 -> BB6418 [tailport=s, headport=n, color=gray]
BB6391 [shape=record label="{22422: call-registerComputed [v23,v24,v25,v26,-]*}" ] 
BB6391 -> BB6392 [tailport=s, headport=n, headlabel="      6392"]
BB6391 -> BB6418 [tailport=s, headport=n, color=gray]
BB6392 [shape=record label="{22423: read-variable['registerComputed',v28,v27]|22424: constant[\"not\",v29]|22425: function-expr[function ( dependentKey ),v30]}" ] 
BB6392 -> BB6393 [tailport=s, headport=n, headlabel="      6393"]
BB6392 -> BB6418 [tailport=s, headport=n, color=gray]
BB6393 [shape=record label="{22426: call-registerComputed [v27,v28,v29,v30,-]*}" ] 
BB6393 -> BB6394 [tailport=s, headport=n, headlabel="      6394"]
BB6393 -> BB6418 [tailport=s, headport=n, color=gray]
BB6394 [shape=record label="{22427: read-variable['registerComputed',v32,v31]|22428: constant[\"bool\",v33]|22429: function-expr[function ( dependentKey ),v34]}" ] 
BB6394 -> BB6395 [tailport=s, headport=n, headlabel="      6395"]
BB6394 -> BB6418 [tailport=s, headport=n, color=gray]
BB6395 [shape=record label="{22430: call-registerComputed [v31,v32,v33,v34,-]*}" ] 
BB6395 -> BB6396 [tailport=s, headport=n, headlabel="      6396"]
BB6395 -> BB6418 [tailport=s, headport=n, color=gray]
BB6396 [shape=record label="{22431: read-variable['registerComputed',v36,v35]|22432: constant[\"match\",v37]|22433: function-expr[function ( dependentKey regexp ),v38]}" ] 
BB6396 -> BB6397 [tailport=s, headport=n, headlabel="      6397"]
BB6396 -> BB6418 [tailport=s, headport=n, color=gray]
BB6397 [shape=record label="{22434: call-registerComputed [v35,v36,v37,v38,-]*}" ] 
BB6397 -> BB6398 [tailport=s, headport=n, headlabel="      6398"]
BB6397 -> BB6418 [tailport=s, headport=n, color=gray]
BB6398 [shape=record label="{22435: read-variable['registerComputed',v40,v39]|22436: constant[\"equal\",v41]|22437: function-expr[function ( dependentKey value ),v42]}" ] 
BB6398 -> BB6399 [tailport=s, headport=n, headlabel="      6399"]
BB6398 -> BB6418 [tailport=s, headport=n, color=gray]
BB6399 [shape=record label="{22438: call-registerComputed [v39,v40,v41,v42,-]*}" ] 
BB6399 -> BB6400 [tailport=s, headport=n, headlabel="      6400"]
BB6399 -> BB6418 [tailport=s, headport=n, color=gray]
BB6400 [shape=record label="{22439: read-variable['registerComputed',v44,v43]|22440: constant[\"gt\",v45]|22441: function-expr[function ( dependentKey value ),v46]}" ] 
BB6400 -> BB6401 [tailport=s, headport=n, headlabel="      6401"]
BB6400 -> BB6418 [tailport=s, headport=n, color=gray]
BB6401 [shape=record label="{22442: call-registerComputed [v43,v44,v45,v46,-]*}" ] 
BB6401 -> BB6402 [tailport=s, headport=n, headlabel="      6402"]
BB6401 -> BB6418 [tailport=s, headport=n, color=gray]
BB6402 [shape=record label="{22443: read-variable['registerComputed',v48,v47]|22444: constant[\"gte\",v49]|22445: function-expr[function ( dependentKey value ),v50]}" ] 
BB6402 -> BB6403 [tailport=s, headport=n, headlabel="      6403"]
BB6402 -> BB6418 [tailport=s, headport=n, color=gray]
BB6403 [shape=record label="{22446: call-registerComputed [v47,v48,v49,v50,-]*}" ] 
BB6403 -> BB6404 [tailport=s, headport=n, headlabel="      6404"]
BB6403 -> BB6418 [tailport=s, headport=n, color=gray]
BB6404 [shape=record label="{22447: read-variable['registerComputed',v52,v51]|22448: constant[\"lt\",v53]|22449: function-expr[function ( dependentKey value ),v54]}" ] 
BB6404 -> BB6405 [tailport=s, headport=n, headlabel="      6405"]
BB6404 -> BB6418 [tailport=s, headport=n, color=gray]
BB6405 [shape=record label="{22450: call-registerComputed [v51,v52,v53,v54,-]*}" ] 
BB6405 -> BB6406 [tailport=s, headport=n, headlabel="      6406"]
BB6405 -> BB6418 [tailport=s, headport=n, color=gray]
BB6406 [shape=record label="{22451: read-variable['registerComputed',v56,v55]|22452: constant[\"lte\",v57]|22453: function-expr[function ( dependentKey value ),v58]}" ] 
BB6406 -> BB6407 [tailport=s, headport=n, headlabel="      6407"]
BB6406 -> BB6418 [tailport=s, headport=n, color=gray]
BB6407 [shape=record label="{22454: call-registerComputed [v55,v56,v57,v58,-]*}" ] 
BB6407 -> BB6408 [tailport=s, headport=n, headlabel="      6408"]
BB6407 -> BB6418 [tailport=s, headport=n, color=gray]
BB6408 [shape=record label="{22455: read-variable['registerComputedWithProperties',v60,v59]|22456: constant[\"and\",v61]|22457: function-expr[function ( properties ),v62]}" ] 
BB6408 -> BB6409 [tailport=s, headport=n, headlabel="      6409"]
BB6408 -> BB6418 [tailport=s, headport=n, color=gray]
BB6409 [shape=record label="{22458: call-registerComputedWithProperties [v59,v60,v61,v62,-]*}" ] 
BB6409 -> BB6410 [tailport=s, headport=n, headlabel="      6410"]
BB6409 -> BB6418 [tailport=s, headport=n, color=gray]
BB6410 [shape=record label="{22459: read-variable['registerComputedWithProperties',v64,v63]|22460: constant[\"or\",v65]|22461: function-expr[function ( properties ),v66]}" ] 
BB6410 -> BB6411 [tailport=s, headport=n, headlabel="      6411"]
BB6410 -> BB6418 [tailport=s, headport=n, color=gray]
BB6411 [shape=record label="{22462: call-registerComputedWithProperties [v63,v64,v65,v66,-]*}" ] 
BB6411 -> BB6412 [tailport=s, headport=n, headlabel="      6412"]
BB6411 -> BB6418 [tailport=s, headport=n, color=gray]
BB6412 [shape=record label="{22463: read-variable['registerComputedWithProperties',v68,v67]|22464: constant[\"any\",v69]|22465: function-expr[function ( properties ),v70]}" ] 
BB6412 -> BB6413 [tailport=s, headport=n, headlabel="      6413"]
BB6412 -> BB6418 [tailport=s, headport=n, color=gray]
BB6413 [shape=record label="{22466: call-registerComputedWithProperties [v67,v68,v69,v70,-]*}" ] 
BB6413 -> BB6414 [tailport=s, headport=n, headlabel="      6414"]
BB6413 -> BB6418 [tailport=s, headport=n, color=gray]
BB6414 [shape=record label="{22467: read-variable['registerComputedWithProperties',v72,v71]|22468: constant[\"collect\",v73]|22469: function-expr[function ( properties ),v74]}" ] 
BB6414 -> BB6415 [tailport=s, headport=n, headlabel="      6415"]
BB6414 -> BB6418 [tailport=s, headport=n, color=gray]
BB6415 [shape=record label="{22470: call-registerComputedWithProperties [v71,v72,v73,v74,-]*}" ] 
BB6415 -> BB6416 [tailport=s, headport=n, headlabel="      6416"]
BB6415 -> BB6418 [tailport=s, headport=n, color=gray]
BB6416 [shape=record label="{22471: read-variable['computed',v76,-]|22472: read-variable['alias',v75,-]|22473: write-property[v76,'alias',v75]|22474: \<variable-non-null-undef\>['computed']*|22475: read-variable['computed',v78,-]|22476: function-expr[function ( dependentKey ),v77]|22477: write-property[v78,'oneWay',v77]|22478: \<variable-non-null-undef\>['computed']*|22479: read-variable['computed',v80,-]|22480: read-variable['computed',v81,-]|22481: read-property[v81,'oneWay',v79]|22482: \<variable-non-null-undef\>['computed']|22483: write-property[v80,'reads',v79]|22484: \<variable-non-null-undef\>['computed']*|22485: read-variable['computed',v83,-]|22486: function-expr[function ( dependentKey ),v82]|22487: write-property[v83,'readOnly',v82]|22488: \<variable-non-null-undef\>['computed']*|22489: read-variable['computed',v85,-]|22490: function-expr[function ( defaultPath ),v84]|22491: write-property[v85,'defaultTo',v84]|22492: \<variable-non-null-undef\>['computed']*|22493: read-variable['computed',v87,-]|22494: function-expr[function ( dependentKey ),v86]|22495: write-property[v87,'deprecatingAlias',v86]|22496: \<variable-non-null-undef\>['computed']*}" ] 
BB6416 -> BB6417 [tailport=s, headport=n, headlabel="      6417"]
BB6416 -> BB6418 [tailport=s, headport=n, color=gray]
BB6417 [shape=record label="{22497: return[v1]}" ] 
BB6418 [shape=record label="{22498: exceptional-return}" ] 
//#$~ 11905
}
