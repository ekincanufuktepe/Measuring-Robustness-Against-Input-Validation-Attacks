digraph {
rankdir="TD"
BB_entry47[shape=none,label=""];
BB_entry47 -> BB631 [tailport=s, headport=n, headlabel="    631"]
BB631 [shape=record label="{1614: constant[undefined,v1]|1615: vardecl['value']|1616: vardecl['i']|1617: vardecl['length']|1618: vardecl['isArray']|1619: vardecl['ret']}" ] 
BB631 -> BB632 [tailport=s, headport=n, headlabel="      632"]
BB632 [shape=record label="{1620: constant[0.0,v2]|1621: write-variable[v2,'i']*|1622: read-variable['elems',v4,-]|1623: read-property[v4,'length',v3]|1624: \<variable-non-null-undef\>['elems']|1625: write-variable[v3,'length']*|1626: read-variable['isArraylike',v7,v6]|1627: read-variable['elems',v8,-]}" ] 
BB632 -> BB633 [tailport=s, headport=n, headlabel="      633"]
BB632 -> BB656 [tailport=s, headport=n, color=gray, headlabel="      656"]
BB633 [shape=record label="{1628: call-isArraylike [v6,v7,v8,v5]}" ] 
BB633 -> BB634 [tailport=s, headport=n, headlabel="      634"]
BB633 -> BB656 [tailport=s, headport=n, color=gray]
BB634 [shape=record label="{1629: write-variable[v5,'isArray']*|1630: read-variable['Array',v10,-]}" ] 
BB634 -> BB635 [tailport=s, headport=n, headlabel="      635"]
BB634 -> BB656 [tailport=s, headport=n, color=gray]
BB635 [shape=record label="{1631: construct [-,v10,v9]}" ] 
BB635 -> BB636 [tailport=s, headport=n, headlabel="      636"]
BB635 -> BB656 [tailport=s, headport=n, color=gray]
BB636 [shape=record label="{1632: write-variable[v9,'ret']*|1633: read-variable['isArray',v11,-]|1634: if[v11](true-block:638,false-block:637)}" ] 
BB636 -> BB638 [tailport=s, headport=n, headlabel="      638"]
BB636 -> BB637 [tailport=s, headport=n, headlabel="      637"]
BB636 -> BB656 [tailport=s, headport=n, color=gray]
BB637 [shape=record label="{1635: read-variable['elems',v13,-]}" ] 
BB637 -> BB644 [tailport=s, headport=n, headlabel="      644"]
BB637 -> BB656 [tailport=s, headport=n, color=gray]
BB638 [shape=record label="{1636: read-variable['i',v13,-]|1637: read-variable['length',v14,-]|1638: \<[v13,v14,v12]|1639: if[v12](true-block:639,false-block:651)}" ] 
BB638 -> BB639 [tailport=s, headport=n, headlabel="      639"]
BB638 -> BB651 [tailport=s, headport=n, headlabel="      651"]
BB638 -> BB656 [tailport=s, headport=n, color=gray]
BB639 [shape=record label="{1640: read-variable['callback',v17,v16]|1641: read-variable['elems',v19,-]|1642: read-variable['i',v20,-]|1643: read-property[v19,v20,v18]|1644: \<variable-non-null-undef\>['elems']|1645: read-variable['i',v21,-]|1646: read-variable['arg',v22,-]}" ] 
BB639 -> BB640 [tailport=s, headport=n, headlabel="      640"]
BB639 -> BB656 [tailport=s, headport=n, color=gray]
BB640 [shape=record label="{1647: call-callback [v16,v17,v18,v21,v22,v15]}" ] 
BB640 -> BB641 [tailport=s, headport=n, headlabel="      641"]
BB640 -> BB656 [tailport=s, headport=n, color=gray]
BB641 [shape=record label="{1648: write-variable[v15,'value']*|1649: read-variable['value',v24,-]|1650: constant[null,v25]|1651: !=[v24,v25,v23]|1652: if[v23](true-block:642,false-block:643)}" ] 
BB641 -> BB642 [tailport=s, headport=n, headlabel="      642"]
BB641 -> BB643 [tailport=s, headport=n, headlabel="      643"]
BB641 -> BB656 [tailport=s, headport=n, color=gray]
BB642 [shape=record label="{1653: read-variable['ret',v27,-]|1654: read-variable['ret',v29,-]|1655: read-property[v29,'length',v28]|1656: \<variable-non-null-undef\>['ret']|1657: read-variable['value',v26,-]|1658: write-property[v27,v28,v26]|1659: \<variable-non-null-undef\>['ret']*}" ] 
BB642 -> BB643 [tailport=s, headport=n]
BB642 -> BB656 [tailport=s, headport=n, color=gray]
BB643 [shape=record label="{1660: constant[1.0,v26]|1661: read-variable['i',v27,-]|1662: +[v27,v28]|1663: +[v28,v26,v29]|1664: write-variable[v29,'i']}" ] 
BB643 -> BB638 [tailport=s, headport=n]
BB643 -> BB656 [tailport=s, headport=n, color=gray]
BB644 [shape=record label="{1665: begin-for-in[v13,v14]}" ] 
BB644 -> BB645 [tailport=s, headport=n, headlabel="      645"]
BB644 -> BB656 [tailport=s, headport=n, color=gray]
BB645 [shape=record label="{1666: has-next[v14,v15]|1667: if[v15](true-block:646,false-block:651)}" ] 
BB645 -> BB646 [tailport=s, headport=n, headlabel="      646"]
BB645 -> BB651 [tailport=s, headport=n]
BB646 [shape=record label="{1668: next-property[v14,v16]|1669: write-variable[v16,'i']|1670: read-variable['callback',v19,v18]|1671: read-variable['elems',v21,-]|1672: read-variable['i',v22,-]|1673: read-property[v21,v22,v20]|1674: \<variable-non-null-undef\>['elems']|1675: read-variable['i',v23,-]|1676: read-variable['arg',v24,-]}" ] 
BB646 -> BB647 [tailport=s, headport=n, headlabel="      647"]
BB646 -> BB656 [tailport=s, headport=n, color=gray]
BB647 [shape=record label="{1677: call-callback [v18,v19,v20,v23,v24,v17]}" ] 
BB647 -> BB648 [tailport=s, headport=n, headlabel="      648"]
BB647 -> BB656 [tailport=s, headport=n, color=gray]
BB648 [shape=record label="{1678: write-variable[v17,'value']*|1679: read-variable['value',v26,-]|1680: constant[null,v27]|1681: !=[v26,v27,v25]|1682: if[v25](true-block:649,false-block:650)}" ] 
BB648 -> BB649 [tailport=s, headport=n, headlabel="      649"]
BB648 -> BB650 [tailport=s, headport=n, headlabel="      650"]
BB648 -> BB656 [tailport=s, headport=n, color=gray]
BB649 [shape=record label="{1683: read-variable['ret',v29,-]|1684: read-variable['ret',v31,-]|1685: read-property[v31,'length',v30]|1686: \<variable-non-null-undef\>['ret']|1687: read-variable['value',v28,-]|1688: write-property[v29,v30,v28]|1689: \<variable-non-null-undef\>['ret']*}" ] 
BB649 -> BB650 [tailport=s, headport=n]
BB649 -> BB656 [tailport=s, headport=n, color=gray]
BB650 [shape=record label="{1690: end-for-in(begin-node:1665)}" ] 
BB650 -> BB645 [tailport=s, headport=n]
BB651 [shape=record label="{1691: read-variable['core_concat',v13,-]|1692: read-property[v13,'apply',-]|1693: \<variable-non-null-undef\>['core_concat']|1694: read-variable['Array',v15,-]}" ] 
BB651 -> BB652 [tailport=s, headport=n, headlabel="      652"]
BB651 -> BB656 [tailport=s, headport=n, color=gray]
BB652 [shape=record label="{1695: construct [-,v15,v14]}" ] 
BB652 -> BB653 [tailport=s, headport=n, headlabel="      653"]
BB652 -> BB656 [tailport=s, headport=n, color=gray]
BB653 [shape=record label="{1696: read-variable['ret',v16,-]}" ] 
BB653 -> BB654 [tailport=s, headport=n, headlabel="      654"]
BB653 -> BB656 [tailport=s, headport=n, color=gray]
BB654 [shape=record label="{1697: call-core_concat.apply [v13,'apply',v14,v16,v1]}" ] 
BB654 -> BB655 [tailport=s, headport=n, headlabel="      655"]
BB654 -> BB656 [tailport=s, headport=n, color=gray]
BB655 [shape=record label="{1698: return[v1]}" ] 
BB656 [shape=record label="{1699: exceptional-return}" ] 
}
