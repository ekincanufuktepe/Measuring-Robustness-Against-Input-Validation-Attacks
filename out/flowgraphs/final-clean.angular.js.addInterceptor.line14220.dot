digraph {
rankdir="TD"
BB_entry788[shape=none,label=""];
BB_entry788 -> BB10412 [tailport=s, headport=n, headlabel="    10412"]
BB10412 [shape=record label="{27111: constant[undefined,v1]|27112: vardecl['watchDelegate']|27113: vardecl['regularWatch']|27114: vardecl['fn']}" ] 
BB10412 -> BB10413 [tailport=s, headport=n, headlabel="      10413"]
BB10413 [shape=record label="{27115: read-variable['interceptorFn',v3,-]|27116: ![v3,v2]|27117: if[v2](true-block:10414,false-block:10415)}" ] 
BB10413 -> BB10414 [tailport=s, headport=n, headlabel="      10414"]
BB10413 -> BB10415 [tailport=s, headport=n, headlabel="      10415"]
BB10413 -> BB10432 [tailport=s, headport=n, color=gray, headlabel="      10432"]
BB10414 [shape=record label="{27118: read-variable['parsedExpression',v1,-]}" ] 
BB10414 -> BB10431 [tailport=s, headport=n, headlabel="      10431"]
BB10414 -> BB10432 [tailport=s, headport=n, color=gray]
BB10415 [shape=record label="{27119: read-variable['parsedExpression',v5,-]|27120: read-property[v5,'$$watchDelegate',v4]|27121: \<variable-non-null-undef\>['parsedExpression']|27122: write-variable[v4,'watchDelegate']*|27123: read-variable['watchDelegate',v7,-]|27124: read-variable['oneTimeLiteralWatchDelegate',v8,-]|27125: !==[v7,v8,v6]|27126: if[v6](true-block:10416,false-block:10417)}" ] 
BB10415 -> BB10417 [tailport=s, headport=n, headlabel="      10417"]
BB10415 -> BB10416 [tailport=s, headport=n, headlabel="      10416"]
BB10415 -> BB10432 [tailport=s, headport=n, color=gray]
BB10416 [shape=record label="{27127: read-variable['watchDelegate',v9,-]|27128: read-variable['oneTimeWatchDelegate',v10,-]|27129: !==[v9,v10,v6]}" ] 
BB10416 -> BB10417 [tailport=s, headport=n]
BB10416 -> BB10432 [tailport=s, headport=n, color=gray]
BB10417 [shape=record label="{27130: write-variable[v6,'regularWatch']*|27131: read-variable['regularWatch',v10,-]|27132: if[v10](true-block:10418,false-block:10419)}" ] 
BB10417 -> BB10418 [tailport=s, headport=n, headlabel="      10418"]
BB10417 -> BB10419 [tailport=s, headport=n, headlabel="      10419"]
BB10417 -> BB10432 [tailport=s, headport=n, color=gray]
BB10418 [shape=record label="{27133: function-expr[function regularInterceptedExpression ( scope locals assign inputs ),v9]}" ] 
BB10418 -> BB10420 [tailport=s, headport=n, headlabel="      10420"]
BB10419 [shape=record label="{27134: function-expr[function oneTimeInterceptedExpression ( scope locals assign inputs ),v9]}" ] 
BB10419 -> BB10420 [tailport=s, headport=n]
BB10420 [shape=record label="{27135: write-variable[v9,'fn']*|27136: read-variable['parsedExpression',v12,-]|27137: read-property[v12,'$$watchDelegate',v11]|27138: \<variable-non-null-undef\>['parsedExpression']|27139: if[v11](true-block:10421,false-block:10422)}" ] 
BB10420 -> BB10422 [tailport=s, headport=n, headlabel="      10422"]
BB10420 -> BB10421 [tailport=s, headport=n, headlabel="      10421"]
BB10420 -> BB10432 [tailport=s, headport=n, color=gray]
BB10421 [shape=record label="{27140: read-variable['parsedExpression',v15,-]|27141: read-property[v15,'$$watchDelegate',v13]|27142: \<variable-non-null-undef\>['parsedExpression']|27143: read-variable['inputsWatchDelegate',v14,-]|27144: !==[v13,v14,v11]}" ] 
BB10421 -> BB10422 [tailport=s, headport=n]
BB10421 -> BB10432 [tailport=s, headport=n, color=gray]
BB10422 [shape=record label="{27145: if[v11](true-block:10423,false-block:10424)}" ] 
BB10422 -> BB10423 [tailport=s, headport=n, headlabel="      10423"]
BB10422 -> BB10424 [tailport=s, headport=n, headlabel="      10424"]
BB10423 [shape=record label="{27146: read-variable['fn',v14,-]|27147: read-variable['parsedExpression',v15,-]|27148: read-property[v15,'$$watchDelegate',v13]|27149: \<variable-non-null-undef\>['parsedExpression']|27150: write-property[v14,'$$watchDelegate',v13]|27151: \<variable-non-null-undef\>['fn']*}" ] 
BB10423 -> BB10430 [tailport=s, headport=n, headlabel="      10430"]
BB10423 -> BB10432 [tailport=s, headport=n, color=gray]
BB10424 [shape=record label="{27152: read-variable['interceptorFn',v15,-]|27153: read-property[v15,'$stateful',v14]|27154: \<variable-non-null-undef\>['interceptorFn']|27155: ![v14,v13]|27156: if[v13](true-block:10425,false-block:10430)}" ] 
BB10424 -> BB10425 [tailport=s, headport=n, headlabel="      10425"]
BB10424 -> BB10430 [tailport=s, headport=n]
BB10424 -> BB10432 [tailport=s, headport=n, color=gray]
BB10425 [shape=record label="{27157: read-variable['fn',v17,-]|27158: read-variable['inputsWatchDelegate',v16,-]|27159: write-property[v17,'$$watchDelegate',v16]|27160: \<variable-non-null-undef\>['fn']*|27161: read-variable['fn',v19,-]|27162: read-variable['parsedExpression',v21,-]|27163: read-property[v21,'inputs',v20]|27164: \<variable-non-null-undef\>['parsedExpression']|27165: if[v20](true-block:10426,false-block:10427)}" ] 
BB10425 -> BB10426 [tailport=s, headport=n, headlabel="      10426"]
BB10425 -> BB10427 [tailport=s, headport=n, headlabel="      10427"]
BB10425 -> BB10432 [tailport=s, headport=n, color=gray]
BB10426 [shape=record label="{27166: read-variable['parsedExpression',v22,-]|27167: read-property[v22,'inputs',v18]|27168: \<variable-non-null-undef\>['parsedExpression']}" ] 
BB10426 -> BB10429 [tailport=s, headport=n, headlabel="      10429"]
BB10426 -> BB10432 [tailport=s, headport=n, color=gray]
BB10427 [shape=record label="{27169: read-variable['Array',v22,-]|27170: read-variable['parsedExpression',v23,-]}" ] 
BB10427 -> BB10428 [tailport=s, headport=n, headlabel="      10428"]
BB10427 -> BB10432 [tailport=s, headport=n, color=gray]
BB10428 [shape=record label="{27171: construct [-,v22,v23,v18]}" ] 
BB10428 -> BB10429 [tailport=s, headport=n]
BB10428 -> BB10432 [tailport=s, headport=n, color=gray]
BB10429 [shape=record label="{27172: write-property[v19,'inputs',v18]|27173: \<variable-non-null-undef\>['fn']*}" ] 
BB10429 -> BB10430 [tailport=s, headport=n]
BB10429 -> BB10432 [tailport=s, headport=n, color=gray]
BB10430 [shape=record label="{27174: read-variable['fn',v1,-]}" ] 
BB10430 -> BB10431 [tailport=s, headport=n]
BB10430 -> BB10432 [tailport=s, headport=n, color=gray]
BB10431 [shape=record label="{27175: return[v1]}" ] 
BB10432 [shape=record label="{27176: exceptional-return}" ] 
//#$~ 14250
}
