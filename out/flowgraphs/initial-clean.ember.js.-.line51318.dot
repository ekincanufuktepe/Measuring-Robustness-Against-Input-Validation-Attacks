digraph {
rankdir="TD"
BB_entry2532[shape=none,label=""];
BB_entry2532 -> BB28736 [tailport=s, headport=n, headlabel="    28736"]
BB28736 [shape=record label="{95560: constant[undefined,v1]|95561: vardecl['length']|95562: vardecl['filtered']|95563: vardecl['i']}" ] 
BB28736 -> BB28737 [tailport=s, headport=n, headlabel="      28737"]
BB28737 [shape=record label="{95564: read-variable['isFunction',v5,v4]|95565: read-variable['filterFn',v6,-]}" ] 
BB28737 -> BB28738 [tailport=s, headport=n, headlabel="      28738"]
BB28737 -> BB28755 [tailport=s, headport=n, color=gray, headlabel="      28755"]
BB28738 [shape=record label="{95566: call-isFunction [v4,v5,v6,v3]}" ] 
BB28738 -> BB28739 [tailport=s, headport=n, headlabel="      28739"]
BB28738 -> BB28755 [tailport=s, headport=n, color=gray]
BB28739 [shape=record label="{95567: ![v3,v2]|95568: if[v2](true-block:28740,false-block:28743)}" ] 
BB28739 -> BB28740 [tailport=s, headport=n, headlabel="      28740"]
BB28739 -> BB28743 [tailport=s, headport=n, headlabel="      28743"]
BB28739 -> BB28755 [tailport=s, headport=n, color=gray]
BB28740 [shape=record label="{95569: read-variable['TypeError',v8,-]|95570: constant[\"You must pass a function as filter's second argument.\",v9]}" ] 
BB28740 -> BB28741 [tailport=s, headport=n, headlabel="      28741"]
BB28740 -> BB28755 [tailport=s, headport=n, color=gray]
BB28741 [shape=record label="{95571: construct [-,v8,v9,v7]}" ] 
BB28741 -> BB28742 [tailport=s, headport=n, headlabel="      28742"]
BB28741 -> BB28755 [tailport=s, headport=n, color=gray]
BB28742 [shape=record label="{95572: throw[v7]*}" ] 
BB28742 -> BB28743 [tailport=s, headport=n]
BB28742 -> BB28755 [tailport=s, headport=n, color=gray]
BB28743 [shape=record label="{95573: read-variable['values',v8,-]|95574: read-property[v8,'length',v7]|95575: \<variable-non-null-undef\>['values']|95576: write-variable[v7,'length']*|95577: read-variable['Array',v10,-]|95578: read-variable['length',v11,-]}" ] 
BB28743 -> BB28744 [tailport=s, headport=n, headlabel="      28744"]
BB28743 -> BB28755 [tailport=s, headport=n, color=gray]
BB28744 [shape=record label="{95579: construct [-,v10,v11,v9]}" ] 
BB28744 -> BB28745 [tailport=s, headport=n, headlabel="      28745"]
BB28744 -> BB28755 [tailport=s, headport=n, color=gray]
BB28745 [shape=record label="{95580: write-variable[v9,'filtered']*|95581: constant[0.0,v13]|95582: write-variable[v13,'i']*}" ] 
BB28745 -> BB28746 [tailport=s, headport=n, headlabel="      28746"]
BB28746 [shape=record label="{95583: read-variable['i',v14,-]|95584: read-variable['length',v15,-]|95585: \<[v14,v15,v12]|95586: if[v12](true-block:28747,false-block:28748)}" ] 
BB28746 -> BB28747 [tailport=s, headport=n, headlabel="      28747"]
BB28746 -> BB28748 [tailport=s, headport=n, headlabel="      28748"]
BB28746 -> BB28755 [tailport=s, headport=n, color=gray]
BB28747 [shape=record label="{95587: read-variable['filtered',v17,-]|95588: read-variable['i',v18,-]|95589: read-variable['filterFn',v20,v19]|95590: read-variable['values',v22,-]|95591: read-variable['i',v23,-]|95592: read-property[v22,v23,v21]|95593: \<variable-non-null-undef\>['values']}" ] 
BB28747 -> BB28749 [tailport=s, headport=n, headlabel="      28749"]
BB28747 -> BB28755 [tailport=s, headport=n, color=gray]
BB28748 [shape=record label="{95594: read-variable['Promise',v19,-]|95595: read-property[v19,'all',-]|95596: \<variable-non-null-undef\>['Promise']|95597: read-variable['filtered',v20,-]|95598: read-variable['label',v21,-]}" ] 
BB28748 -> BB28751 [tailport=s, headport=n, headlabel="      28751"]
BB28748 -> BB28755 [tailport=s, headport=n, color=gray]
BB28749 [shape=record label="{95599: call-filterFn [v19,v20,v21,v16]}" ] 
BB28749 -> BB28750 [tailport=s, headport=n, headlabel="      28750"]
BB28749 -> BB28755 [tailport=s, headport=n, color=gray]
BB28750 [shape=record label="{95600: write-property[v17,v18,v16]|95601: \<variable-non-null-undef\>['filtered']*|95602: constant[1.0,v24]|95603: read-variable['i',v25,-]|95604: +[v25,v26]|95605: +[v26,v24,v27]|95606: write-variable[v27,'i']}" ] 
BB28750 -> BB28746 [tailport=s, headport=n]
BB28750 -> BB28755 [tailport=s, headport=n, color=gray]
BB28751 [shape=record label="{95607: call-Promise.all [v19,'all',v20,v21,v17]}" ] 
BB28751 -> BB28752 [tailport=s, headport=n, headlabel="      28752"]
BB28751 -> BB28755 [tailport=s, headport=n, color=gray]
BB28752 [shape=record label="{95608: read-property[v17,'then',-]|95609: function-expr[function ( filtered ),v22]}" ] 
BB28752 -> BB28753 [tailport=s, headport=n, headlabel="      28753"]
BB28752 -> BB28755 [tailport=s, headport=n, color=gray]
BB28753 [shape=record label="{95610: call-null [v17,'then',v22,v1]}" ] 
BB28753 -> BB28754 [tailport=s, headport=n, headlabel="      28754"]
BB28753 -> BB28755 [tailport=s, headport=n, color=gray]
BB28754 [shape=record label="{95611: return[v1]}" ] 
BB28755 [shape=record label="{95612: exceptional-return}" ] 
//#$~ 51343
}
