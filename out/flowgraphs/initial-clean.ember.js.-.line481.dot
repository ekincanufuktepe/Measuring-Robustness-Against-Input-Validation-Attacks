digraph {
rankdir="TD"
BB_entry24[shape=none,label=""];
BB_entry24 -> BB450 [tailport=s, headport=n, headlabel="    450"]
BB450 [shape=record label="{1365: constant[undefined,v1]|1366: vardecl['timerType']|1367: vardecl['i']|1368: vardecl['l']}" ] 
BB450 -> BB451 [tailport=s, headport=n, headlabel="      451"]
BB451 [shape=record label="{1369: typeof['timer',v2]|1370: write-variable[v2,'timerType']*|1371: read-variable['timer',v3,-]|1372: if[v3](true-block:452,false-block:455)}" ] 
BB451 -> BB455 [tailport=s, headport=n, headlabel="      455"]
BB451 -> BB452 [tailport=s, headport=n, headlabel="      452"]
BB451 -> BB486 [tailport=s, headport=n, color=gray, headlabel="      486"]
BB452 [shape=record label="{1373: read-variable['timerType',v4,-]|1374: constant[\"object\",v5]|1375: ===[v4,v5,v3]|1376: if[v3](true-block:453,false-block:455)}" ] 
BB452 -> BB455 [tailport=s, headport=n]
BB452 -> BB453 [tailport=s, headport=n, headlabel="      453"]
BB452 -> BB486 [tailport=s, headport=n, color=gray]
BB453 [shape=record label="{1377: read-variable['timer',v6,-]|1378: read-property[v6,'queue',v3]|1379: \<variable-non-null-undef\>['timer']|1380: if[v3](true-block:454,false-block:455)}" ] 
BB453 -> BB455 [tailport=s, headport=n]
BB453 -> BB454 [tailport=s, headport=n, headlabel="      454"]
BB453 -> BB486 [tailport=s, headport=n, color=gray]
BB454 [shape=record label="{1381: read-variable['timer',v7,-]|1382: read-property[v7,'method',v3]|1383: \<variable-non-null-undef\>['timer']}" ] 
BB454 -> BB455 [tailport=s, headport=n]
BB454 -> BB486 [tailport=s, headport=n, color=gray]
BB455 [shape=record label="{1384: if[v3](true-block:456,false-block:457)}" ] 
BB455 -> BB456 [tailport=s, headport=n, headlabel="      456"]
BB455 -> BB457 [tailport=s, headport=n, headlabel="      457"]
BB456 [shape=record label="{1385: read-variable['timer',v6,-]|1386: read-property[v6,'queue',v5]|1387: \<variable-non-null-undef\>['timer']|1388: read-property[v5,'cancel',-]|1389: \<property-non-null-undef\>[v6,'queue']|1390: read-variable['timer',v7,-]}" ] 
BB456 -> BB458 [tailport=s, headport=n, headlabel="      458"]
BB456 -> BB486 [tailport=s, headport=n, color=gray]
BB457 [shape=record label="{1391: read-variable['timerType',v5,-]|1392: constant[\"function\",v6]|1393: ===[v5,v6,v4]|1394: if[v4](true-block:459,false-block:460)}" ] 
BB457 -> BB459 [tailport=s, headport=n, headlabel="      459"]
BB457 -> BB460 [tailport=s, headport=n, headlabel="      460"]
BB457 -> BB486 [tailport=s, headport=n, color=gray]
BB458 [shape=record label="{1395: call-timer.queue.cancel [v5,'cancel',v7,v1]}" ] 
BB458 -> BB485 [tailport=s, headport=n, headlabel="      485"]
BB458 -> BB486 [tailport=s, headport=n, color=gray]
BB459 [shape=record label="{1396: constant[0.0,v8]|1397: write-variable[v8,'i']*|1398: read-variable['this',v11,-]|1399: read-property[v11,'_timers',v10]|1400: read-property[v10,'length',v9]|1401: \<property-non-null-undef\>[v11,'_timers']|1402: write-variable[v9,'l']*}" ] 
BB459 -> BB461 [tailport=s, headport=n, headlabel="      461"]
BB459 -> BB486 [tailport=s, headport=n, color=gray]
BB460 [shape=record label="{1403: read-variable['Object',v13,-]|1404: read-property[v13,'prototype',v12]|1405: \<variable-non-null-undef\>['Object']|1406: read-property[v12,'toString',v11]|1407: \<property-non-null-undef\>[v13,'prototype']|1408: read-property[v11,'call',-]|1409: \<property-non-null-undef\>[v12,'toString']|1410: read-variable['timer',v14,-]}" ] 
BB460 -> BB477 [tailport=s, headport=n, headlabel="      477"]
BB460 -> BB486 [tailport=s, headport=n, color=gray]
BB461 [shape=record label="{1411: read-variable['i',v12,-]|1412: read-variable['l',v13,-]|1413: \<[v12,v13,v7]|1414: if[v7](true-block:462,false-block:485)}" ] 
BB461 -> BB462 [tailport=s, headport=n, headlabel="      462"]
BB461 -> BB485 [tailport=s, headport=n]
BB461 -> BB486 [tailport=s, headport=n, color=gray]
BB462 [shape=record label="{1415: read-variable['this',v18,-]|1416: read-property[v18,'_timers',v17]|1417: read-variable['i',v20,-]|1418: constant[1.0,v21]|1419: +[v20,v21,v19]|1420: read-property[v17,v19,v15]|1421: \<property-non-null-undef\>[v18,'_timers']|1422: read-variable['timer',v16,-]|1423: ===[v15,v16,v14]|1424: if[v14](true-block:463,false-block:476)}" ] 
BB462 -> BB463 [tailport=s, headport=n, headlabel="      463"]
BB462 -> BB476 [tailport=s, headport=n, headlabel="      476"]
BB462 -> BB486 [tailport=s, headport=n, color=gray]
BB463 [shape=record label="{1425: read-variable['this',v24,-]|1426: read-property[v24,'_timers',v23]|1427: read-property[v23,'splice',-]|1428: \<property-non-null-undef\>[v24,'_timers']|1429: read-variable['i',v25,-]|1430: constant[2.0,v26]}" ] 
BB463 -> BB464 [tailport=s, headport=n, headlabel="      464"]
BB463 -> BB486 [tailport=s, headport=n, color=gray]
BB464 [shape=record label="{1431: call-this._timers.splice [v23,'splice',v25,v26,-]*}" ] 
BB464 -> BB465 [tailport=s, headport=n, headlabel="      465"]
BB464 -> BB486 [tailport=s, headport=n, color=gray]
BB465 [shape=record label="{1432: read-variable['i',v28,-]|1433: constant[0.0,v29]|1434: ===[v28,v29,v27]|1435: if[v27](true-block:466,false-block:475)}" ] 
BB465 -> BB466 [tailport=s, headport=n, headlabel="      466"]
BB465 -> BB475 [tailport=s, headport=n, headlabel="      475"]
BB465 -> BB486 [tailport=s, headport=n, color=gray]
BB466 [shape=record label="{1436: read-variable['this',v31,-]|1437: read-property[v31,'_laterTimer',v30]|1438: if[v30](true-block:467,false-block:470)}" ] 
BB466 -> BB467 [tailport=s, headport=n, headlabel="      467"]
BB466 -> BB470 [tailport=s, headport=n, headlabel="      470"]
BB466 -> BB486 [tailport=s, headport=n, color=gray]
BB467 [shape=record label="{1439: read-variable['clearTimeout',v33,v32]|1440: read-variable['this',v35,-]|1441: read-property[v35,'_laterTimer',v34]}" ] 
BB467 -> BB468 [tailport=s, headport=n, headlabel="      468"]
BB467 -> BB486 [tailport=s, headport=n, color=gray]
BB468 [shape=record label="{1442: call-clearTimeout [v32,v33,v34,-]*}" ] 
BB468 -> BB469 [tailport=s, headport=n, headlabel="      469"]
BB468 -> BB486 [tailport=s, headport=n, color=gray]
BB469 [shape=record label="{1443: read-variable['this',v37,-]|1444: constant[null,v36]|1445: write-property[v37,'_laterTimer',v36]*}" ] 
BB469 -> BB470 [tailport=s, headport=n]
BB469 -> BB486 [tailport=s, headport=n, color=gray]
BB470 [shape=record label="{1446: read-variable['this',v36,-]|1447: read-property[v36,'_timers',v35]|1448: read-property[v35,'length',v33]|1449: \<property-non-null-undef\>[v36,'_timers']|1450: constant[0.0,v34]|1451: \>[v33,v34,v32]|1452: if[v32](true-block:471,false-block:475)}" ] 
BB470 -> BB471 [tailport=s, headport=n, headlabel="      471"]
BB470 -> BB475 [tailport=s, headport=n]
BB470 -> BB486 [tailport=s, headport=n, color=gray]
BB471 [shape=record label="{1453: read-variable['updateLaterTimer',v38,v37]|1454: read-variable['this',v39,-]|1455: read-variable['this',v42,-]|1456: read-property[v42,'_timers',v41]|1457: constant[0.0,v43]|1458: read-property[v41,v43,v40]|1459: \<property-non-null-undef\>[v42,'_timers']|1460: read-variable['this',v48,-]|1461: read-property[v48,'_timers',v47]|1462: constant[0.0,v49]|1463: read-property[v47,v49,v45]|1464: \<property-non-null-undef\>[v48,'_timers']|1465: read-variable['now',v51,v50]}" ] 
BB471 -> BB472 [tailport=s, headport=n, headlabel="      472"]
BB471 -> BB486 [tailport=s, headport=n, color=gray]
BB472 [shape=record label="{1466: call-now [v50,v51,v46]}" ] 
BB472 -> BB473 [tailport=s, headport=n, headlabel="      473"]
BB472 -> BB486 [tailport=s, headport=n, color=gray]
BB473 [shape=record label="{1467: -[v45,v46,v44]}" ] 
BB473 -> BB474 [tailport=s, headport=n, headlabel="      474"]
BB473 -> BB486 [tailport=s, headport=n, color=gray]
BB474 [shape=record label="{1468: call-updateLaterTimer [v37,v38,v39,v40,v44,-]*}" ] 
BB474 -> BB475 [tailport=s, headport=n]
BB474 -> BB486 [tailport=s, headport=n, color=gray]
BB475 [shape=record label="{1469: constant[true,v1]}" ] 
BB475 -> BB485 [tailport=s, headport=n]
BB476 [shape=record label="{1470: read-variable['i',v23,-]|1471: constant[2.0,v24]|1472: +[v23,v24,v22]|1473: write-variable[v22,'i']}" ] 
BB476 -> BB461 [tailport=s, headport=n]
BB476 -> BB486 [tailport=s, headport=n, color=gray]
BB477 [shape=record label="{1474: call-Object.prototype.toString.call [v11,'call',v14,v8]}" ] 
BB477 -> BB478 [tailport=s, headport=n, headlabel="      478"]
BB477 -> BB486 [tailport=s, headport=n, color=gray]
BB478 [shape=record label="{1475: constant[\"[object Array]\",v9]|1476: ===[v8,v9,v7]|1477: if[v7](true-block:479,false-block:480)}" ] 
BB478 -> BB479 [tailport=s, headport=n, headlabel="      479"]
BB478 -> BB480 [tailport=s, headport=n, headlabel="      480"]
BB478 -> BB486 [tailport=s, headport=n, color=gray]
BB479 [shape=record label="{1478: read-variable['this',v16,-]|1479: read-property[v16,'_cancelItem',-]|1480: read-variable['findThrottler',v17,-]|1481: read-variable['this',v19,-]|1482: read-property[v19,'_throttlers',v18]|1483: read-variable['timer',v20,-]}" ] 
BB479 -> BB481 [tailport=s, headport=n, headlabel="      481"]
BB479 -> BB486 [tailport=s, headport=n, color=gray]
BB480 [shape=record label="{1484: constant[undefined,v1]}" ] 
BB480 -> BB485 [tailport=s, headport=n]
BB481 [shape=record label="{1485: call-this._cancelItem [v16,'_cancelItem',v17,v18,v20,v1]}" ] 
BB481 -> BB482 [tailport=s, headport=n, headlabel="      482"]
BB481 -> BB486 [tailport=s, headport=n, color=gray]
BB482 [shape=record label="{1486: if[v1](true-block:485,false-block:483)}" ] 
BB482 -> BB485 [tailport=s, headport=n]
BB482 -> BB483 [tailport=s, headport=n, headlabel="      483"]
BB483 [shape=record label="{1487: read-variable['this',v16,-]|1488: read-property[v16,'_cancelItem',-]|1489: read-variable['findDebouncee',v17,-]|1490: read-variable['this',v19,-]|1491: read-property[v19,'_debouncees',v18]|1492: read-variable['timer',v20,-]}" ] 
BB483 -> BB484 [tailport=s, headport=n, headlabel="      484"]
BB483 -> BB486 [tailport=s, headport=n, color=gray]
BB484 [shape=record label="{1493: call-this._cancelItem [v16,'_cancelItem',v17,v18,v20,v1]}" ] 
BB484 -> BB485 [tailport=s, headport=n]
BB484 -> BB486 [tailport=s, headport=n, color=gray]
BB485 [shape=record label="{1494: return[v1]}" ] 
BB486 [shape=record label="{1495: exceptional-return}" ] 
//#$~ 506
}
