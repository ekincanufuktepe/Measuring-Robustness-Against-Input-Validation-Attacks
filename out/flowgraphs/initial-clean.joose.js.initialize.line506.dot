digraph {
rankdir="TD"
BB_entry52[shape=none,label=""];
BB_entry52 -> BB459 [tailport=s, headport=n, headlabel="    459"]
BB459 [shape=record label="{1619: constant[undefined,v1]|1620: vardecl['me']|1621: vardecl['name']|1622: vardecl['attributes']|1623: vardecl['i']|1624: vardecl['attr']}" ] 
BB459 -> BB460 [tailport=s, headport=n, headlabel="      460"]
BB460 [shape=record label="{1625: read-variable['this',v2,-]|1626: write-variable[v2,'me']*|1627: read-variable['this',v5,-]|1628: read-property[v5,'meta',v4]|1629: read-property[v4,'isAbstract',v3]|1630: \<property-non-null-undef\>[v5,'meta']|1631: if[v3](true-block:461,false-block:464)}" ] 
BB460 -> BB461 [tailport=s, headport=n, headlabel="      461"]
BB460 -> BB464 [tailport=s, headport=n, headlabel="      464"]
BB460 -> BB476 [tailport=s, headport=n, color=gray, headlabel="      476"]
BB461 [shape=record label="{1632: read-variable['this',v9,-]|1633: read-property[v9,'meta',v8]|1634: read-property[v8,'className',-]|1635: \<property-non-null-undef\>[v9,'meta']}" ] 
BB461 -> BB462 [tailport=s, headport=n, headlabel="      462"]
BB461 -> BB476 [tailport=s, headport=n, color=gray]
BB462 [shape=record label="{1636: call-this.meta.className [v8,'className',v6]}" ] 
BB462 -> BB463 [tailport=s, headport=n, headlabel="      463"]
BB462 -> BB476 [tailport=s, headport=n, color=gray]
BB463 [shape=record label="{1637: write-variable[v6,'name']*|1638: constant[\"\",v13]|1639: read-variable['name',v14,-]|1640: +[v13,v14,v11]|1641: constant[\" is an abstract class and may not instantiated.\",v12]|1642: +[v11,v12,v10]|1643: throw[v10]*}" ] 
BB463 -> BB464 [tailport=s, headport=n]
BB463 -> BB476 [tailport=s, headport=n, color=gray]
BB464 [shape=record label="{1644: read-variable['this',v9,-]|1645: read-property[v9,'meta',v8]|1646: read-property[v8,'getAttributes',-]|1647: \<property-non-null-undef\>[v9,'meta']}" ] 
BB464 -> BB465 [tailport=s, headport=n, headlabel="      465"]
BB464 -> BB476 [tailport=s, headport=n, color=gray]
BB465 [shape=record label="{1648: call-this.meta.getAttributes [v8,'getAttributes',v6]}" ] 
BB465 -> BB466 [tailport=s, headport=n, headlabel="      466"]
BB465 -> BB476 [tailport=s, headport=n, color=gray]
BB466 [shape=record label="{1649: write-variable[v6,'attributes']*|1650: read-variable['attributes',v11,-]}" ] 
BB466 -> BB467 [tailport=s, headport=n, headlabel="      467"]
BB466 -> BB476 [tailport=s, headport=n, color=gray]
BB467 [shape=record label="{1651: begin-for-in[v11,v12]}" ] 
BB467 -> BB468 [tailport=s, headport=n, headlabel="      468"]
BB467 -> BB476 [tailport=s, headport=n, color=gray]
BB468 [shape=record label="{1652: has-next[v12,v13]|1653: if[v13](true-block:469,false-block:475)}" ] 
BB468 -> BB469 [tailport=s, headport=n, headlabel="      469"]
BB468 -> BB475 [tailport=s, headport=n, headlabel="      475"]
BB469 [shape=record label="{1654: next-property[v12,v14]|1655: write-variable[v14,'i']|1656: read-variable['attributes',v17,-]|1657: read-property[v17,'hasOwnProperty',-]|1658: \<variable-non-null-undef\>['attributes']|1659: read-variable['i',v18,-]}" ] 
BB469 -> BB470 [tailport=s, headport=n, headlabel="      470"]
BB469 -> BB476 [tailport=s, headport=n, color=gray]
BB470 [shape=record label="{1660: call-attributes.hasOwnProperty [v17,'hasOwnProperty',v18,v15]}" ] 
BB470 -> BB471 [tailport=s, headport=n, headlabel="      471"]
BB470 -> BB476 [tailport=s, headport=n, color=gray]
BB471 [shape=record label="{1661: if[v15](true-block:472,false-block:474)}" ] 
BB471 -> BB472 [tailport=s, headport=n, headlabel="      472"]
BB471 -> BB474 [tailport=s, headport=n, headlabel="      474"]
BB472 [shape=record label="{1662: read-variable['attributes',v20,-]|1663: read-variable['i',v21,-]|1664: read-property[v20,v21,v19]|1665: \<variable-non-null-undef\>['attributes']|1666: write-variable[v19,'attr']*|1667: read-variable['attr',v23,-]|1668: read-property[v23,'doInitialization',-]|1669: \<variable-non-null-undef\>['attr']|1670: read-variable['me',v24,-]|1671: read-variable['paras',v25,-]}" ] 
BB472 -> BB473 [tailport=s, headport=n, headlabel="      473"]
BB472 -> BB476 [tailport=s, headport=n, color=gray]
BB473 [shape=record label="{1672: call-attr.doInitialization [v23,'doInitialization',v24,v25,-]*}" ] 
BB473 -> BB474 [tailport=s, headport=n]
BB473 -> BB476 [tailport=s, headport=n, color=gray]
BB474 [shape=record label="{1673: end-for-in(begin-node:1651)}" ] 
BB474 -> BB468 [tailport=s, headport=n]
BB475 [shape=record label="{1674: return[v1]}" ] 
BB476 [shape=record label="{1675: exceptional-return}" ] 
//#$~ 516
}
