digraph {
rankdir="TD"
BB_entry56[shape=none,label=""];
BB_entry56 -> BB641 [tailport=s, headport=n, headlabel="    641"]
BB641 [shape=record label="{2183: constant[undefined,v1]|2184: vardecl['isTouch']|2185: vardecl['isMouse']}" ] 
BB641 -> BB642 [tailport=s, headport=n, headlabel="      642"]
BB642 [shape=record label="{2186: read-variable['inputData',v6,v2]|2187: read-property[v6,'pointerType',v4]|2188: \<variable-non-null-undef\>['inputData']|2189: read-variable['INPUT_TYPE_TOUCH',v5,v2]|2190: ==[v4,v5,v3]|2191: write-variable[v3,'isTouch']*|2192: read-variable['inputData',v10,v2]|2193: read-property[v10,'pointerType',v8]|2194: \<variable-non-null-undef\>['inputData']|2195: read-variable['INPUT_TYPE_MOUSE',v9,v2]|2196: ==[v8,v9,v7]|2197: write-variable[v7,'isMouse']*|2198: read-variable['isTouch',v11,v2]|2199: if[v11](true-block:643,false-block:644)}" ] 
BB642 -> BB643 [tailport=s, headport=n, headlabel="      643"]
BB642 -> BB644 [tailport=s, headport=n, headlabel="      644"]
BB642 -> BB653 [tailport=s, headport=n, color=gray, headlabel="      653"]
BB643 [shape=record label="{2200: read-variable['this',v14,-]|2201: read-property[v14,'mouse',v13]|2202: constant[false,v12]|2203: write-property[v13,'allow',v12]|2204: \<property-non-null-undef\>[v14,'mouse']*}" ] 
BB643 -> BB648 [tailport=s, headport=n, headlabel="      648"]
BB643 -> BB653 [tailport=s, headport=n, color=gray]
BB644 [shape=record label="{2205: read-variable['isMouse',v12,v2]|2206: if[v12](true-block:645,false-block:646)}" ] 
BB644 -> BB646 [tailport=s, headport=n, headlabel="      646"]
BB644 -> BB645 [tailport=s, headport=n, headlabel="      645"]
BB644 -> BB653 [tailport=s, headport=n, color=gray]
BB645 [shape=record label="{2207: read-variable['this',v15,-]|2208: read-property[v15,'mouse',v14]|2209: read-property[v14,'allow',v13]|2210: \<property-non-null-undef\>[v15,'mouse']|2211: ![v13,v12]}" ] 
BB645 -> BB646 [tailport=s, headport=n]
BB645 -> BB653 [tailport=s, headport=n, color=gray]
BB646 [shape=record label="{2212: if[v12](true-block:647,false-block:648)}" ] 
BB646 -> BB647 [tailport=s, headport=n, headlabel="      647"]
BB646 -> BB648 [tailport=s, headport=n]
BB647 [shape=record label="{2213: constant[undefined,v1]}" ] 
BB647 -> BB652 [tailport=s, headport=n, headlabel="      652"]
BB648 [shape=record label="{2214: read-variable['inputEvent',v13,v2]|2215: read-variable['INPUT_END',v15,v2]|2216: read-variable['INPUT_CANCEL',v16,v2]|2217: |[v15,v16,v14]|2218: &[v13,v14,v12]|2219: if[v12](true-block:649,false-block:650)}" ] 
BB648 -> BB649 [tailport=s, headport=n, headlabel="      649"]
BB648 -> BB650 [tailport=s, headport=n, headlabel="      650"]
BB648 -> BB653 [tailport=s, headport=n, color=gray]
BB649 [shape=record label="{2220: read-variable['this',v19,-]|2221: read-property[v19,'mouse',v18]|2222: constant[true,v17]|2223: write-property[v18,'allow',v17]|2224: \<property-non-null-undef\>[v19,'mouse']*}" ] 
BB649 -> BB650 [tailport=s, headport=n]
BB649 -> BB653 [tailport=s, headport=n, color=gray]
BB650 [shape=record label="{2225: read-variable['this',v18,-]|2226: read-property[v18,'callback',-]|2227: read-variable['manager',v19,v2]|2228: read-variable['inputEvent',v20,v2]|2229: read-variable['inputData',v21,v2]}" ] 
BB650 -> BB651 [tailport=s, headport=n, headlabel="      651"]
BB650 -> BB653 [tailport=s, headport=n, color=gray]
BB651 [shape=record label="{2230: call-this.callback [v18,'callback',v19,v20,v21,-]*}" ] 
BB651 -> BB652 [tailport=s, headport=n]
BB651 -> BB653 [tailport=s, headport=n, color=gray]
BB652 [shape=record label="{2231: return[v1]}" ] 
BB653 [shape=record label="{2232: exceptional-return}" ] 
//#$~ 1072
}
