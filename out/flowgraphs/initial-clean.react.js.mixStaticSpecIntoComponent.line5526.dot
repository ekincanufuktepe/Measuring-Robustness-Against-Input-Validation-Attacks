digraph {
rankdir="TD"
BB_entry203[shape=none,label=""];
BB_entry203 -> BB2793 [tailport=s, headport=n, headlabel="    2793"]
BB2793 [shape=record label="{9796: constant[undefined,v1]|9797: vardecl['name']|9798: vardecl['property']|9799: vardecl['isReserved']|9800: vardecl['isInherited']}" ] 
BB2793 -> BB2794 [tailport=s, headport=n, headlabel="      2794"]
BB2794 [shape=record label="{9801: read-variable['statics',v3,-]|9802: ![v3,v2]|9803: if[v2](true-block:2795,false-block:2796)}" ] 
BB2794 -> BB2795 [tailport=s, headport=n, headlabel="      2795"]
BB2794 -> BB2796 [tailport=s, headport=n, headlabel="      2796"]
BB2794 -> BB2815 [tailport=s, headport=n, color=gray, headlabel="      2815"]
BB2795 [shape=record label="{9804: constant[undefined,v1]}" ] 
BB2795 -> BB2814 [tailport=s, headport=n, headlabel="      2814"]
BB2796 [shape=record label="{9805: read-variable['statics',v5,-]}" ] 
BB2796 -> BB2797 [tailport=s, headport=n, headlabel="      2797"]
BB2796 -> BB2815 [tailport=s, headport=n, color=gray]
BB2797 [shape=record label="{9806: begin-for-in[v5,v6]}" ] 
BB2797 -> BB2798 [tailport=s, headport=n, headlabel="      2798"]
BB2797 -> BB2815 [tailport=s, headport=n, color=gray]
BB2798 [shape=record label="{9807: has-next[v6,v7]|9808: if[v7](true-block:2799,false-block:2814)}" ] 
BB2798 -> BB2799 [tailport=s, headport=n, headlabel="      2799"]
BB2798 -> BB2814 [tailport=s, headport=n]
BB2799 [shape=record label="{9809: next-property[v6,v8]|9810: write-variable[v8,'name']|9811: read-variable['statics',v10,-]|9812: read-variable['name',v11,-]|9813: read-property[v10,v11,v9]|9814: \<variable-non-null-undef\>['statics']|9815: write-variable[v9,'property']*|9816: read-variable['statics',v15,-]|9817: read-property[v15,'hasOwnProperty',-]|9818: \<variable-non-null-undef\>['statics']|9819: read-variable['name',v16,-]}" ] 
BB2799 -> BB2800 [tailport=s, headport=n, headlabel="      2800"]
BB2799 -> BB2815 [tailport=s, headport=n, color=gray]
BB2800 [shape=record label="{9820: call-statics.hasOwnProperty [v15,'hasOwnProperty',v16,v13]}" ] 
BB2800 -> BB2801 [tailport=s, headport=n, headlabel="      2801"]
BB2800 -> BB2815 [tailport=s, headport=n, color=gray]
BB2801 [shape=record label="{9821: ![v13,v12]|9822: if[v12](true-block:2813,false-block:2802)}" ] 
BB2801 -> BB2813 [tailport=s, headport=n, headlabel="      2813"]
BB2801 -> BB2802 [tailport=s, headport=n, headlabel="      2802"]
BB2801 -> BB2815 [tailport=s, headport=n, color=gray]
BB2802 [shape=record label="{9823: read-variable['name',v18,-]|9824: read-variable['RESERVED_SPEC_KEYS',v19,-]|9825: in[v18,v19,v17]|9826: write-variable[v17,'isReserved']*|9827: constant[\"production\",v21]|9828: constant[\"development\",v22]|9829: !==[v21,v22,v20]|9830: if[v20](true-block:2803,false-block:2804)}" ] 
BB2802 -> BB2803 [tailport=s, headport=n, headlabel="      2803"]
BB2802 -> BB2804 [tailport=s, headport=n, headlabel="      2804"]
BB2802 -> BB2815 [tailport=s, headport=n, color=gray]
BB2803 [shape=record label="{9831: read-variable['invariant',v24,v23]|9832: read-variable['isReserved',v26,-]|9833: ![v26,v25]|9834: constant[\"ReactClass: You are attempting to define a reserved \",v32]|9835: constant[\"property, `%s`, that shouldn't be on the \\\"statics\\\" key. Define it \",v33]|9836: +[v32,v33,v30]|9837: constant[\"as an instance property instead; it will still be accessible on the \",v31]|9838: +[v30,v31,v28]|9839: constant[\"constructor.\",v29]|9840: +[v28,v29,v27]|9841: read-variable['name',v34,-]}" ] 
BB2803 -> BB2805 [tailport=s, headport=n, headlabel="      2805"]
BB2803 -> BB2815 [tailport=s, headport=n, color=gray]
BB2804 [shape=record label="{9842: read-variable['invariant',v24,v23]|9843: read-variable['isReserved',v26,-]|9844: ![v26,v25]}" ] 
BB2804 -> BB2806 [tailport=s, headport=n, headlabel="      2806"]
BB2804 -> BB2815 [tailport=s, headport=n, color=gray]
BB2805 [shape=record label="{9845: call-invariant [v23,v24,v25,v27,v34,-]}" ] 
BB2805 -> BB2807 [tailport=s, headport=n, headlabel="      2807"]
BB2805 -> BB2815 [tailport=s, headport=n, color=gray]
BB2806 [shape=record label="{9846: call-invariant [v23,v24,v25,-]}" ] 
BB2806 -> BB2807 [tailport=s, headport=n]
BB2806 -> BB2815 [tailport=s, headport=n, color=gray]
BB2807 [shape=record label="{9847: read-variable['name',v24,-]|9848: read-variable['Constructor',v25,-]|9849: in[v24,v25,v23]|9850: write-variable[v23,'isInherited']*|9851: constant[\"production\",v27]|9852: constant[\"development\",v28]|9853: !==[v27,v28,v26]|9854: if[v26](true-block:2808,false-block:2809)}" ] 
BB2807 -> BB2808 [tailport=s, headport=n, headlabel="      2808"]
BB2807 -> BB2809 [tailport=s, headport=n, headlabel="      2809"]
BB2807 -> BB2815 [tailport=s, headport=n, color=gray]
BB2808 [shape=record label="{9855: read-variable['invariant',v30,v29]|9856: read-variable['isInherited',v32,-]|9857: ![v32,v31]|9858: constant[\"ReactClass: You are attempting to define \",v36]|9859: constant[\"`%s` on your component more than once. This conflict may be \",v37]|9860: +[v36,v37,v34]|9861: constant[\"due to a mixin.\",v35]|9862: +[v34,v35,v33]|9863: read-variable['name',v38,-]}" ] 
BB2808 -> BB2810 [tailport=s, headport=n, headlabel="      2810"]
BB2808 -> BB2815 [tailport=s, headport=n, color=gray]
BB2809 [shape=record label="{9864: read-variable['invariant',v30,v29]|9865: read-variable['isInherited',v32,-]|9866: ![v32,v31]}" ] 
BB2809 -> BB2811 [tailport=s, headport=n, headlabel="      2811"]
BB2809 -> BB2815 [tailport=s, headport=n, color=gray]
BB2810 [shape=record label="{9867: call-invariant [v29,v30,v31,v33,v38,-]}" ] 
BB2810 -> BB2812 [tailport=s, headport=n, headlabel="      2812"]
BB2810 -> BB2815 [tailport=s, headport=n, color=gray]
BB2811 [shape=record label="{9868: call-invariant [v29,v30,v31,-]}" ] 
BB2811 -> BB2812 [tailport=s, headport=n]
BB2811 -> BB2815 [tailport=s, headport=n, color=gray]
BB2812 [shape=record label="{9869: read-variable['Constructor',v30,-]|9870: read-variable['name',v31,-]|9871: read-variable['property',v29,-]|9872: write-property[v30,v31,v29]|9873: \<variable-non-null-undef\>['Constructor']*}" ] 
BB2812 -> BB2813 [tailport=s, headport=n]
BB2812 -> BB2815 [tailport=s, headport=n, color=gray]
BB2813 [shape=record label="{9874: end-for-in(begin-node:9806)}" ] 
BB2813 -> BB2798 [tailport=s, headport=n]
BB2814 [shape=record label="{9875: return[v1]}" ] 
BB2815 [shape=record label="{9876: exceptional-return}" ] 
//#$~ 5554
}
