digraph {
rankdir="TD"
BB_entry172[shape=none,label=""];
BB_entry172 -> BB2809 [tailport=s, headport=n, headlabel="    2809"]
BB2809 [shape=record label="{8830: constant[undefined,v1]|8831: vardecl['tok']|8832: vardecl['node']|8833: vardecl['block']}" ] 
BB2809 -> BB2810 [tailport=s, headport=n, headlabel="      2810"]
BB2810 [shape=record label="{8834: read-variable['this',v4,-]|8835: read-property[v4,'expect',-]|8836: constant[\"code\",v5]}" ] 
BB2810 -> BB2811 [tailport=s, headport=n, headlabel="      2811"]
BB2810 -> BB2855 [tailport=s, headport=n, color=gray, headlabel="      2855"]
BB2811 [shape=record label="{8837: call-this.expect [v4,'expect',v5,v2]}" ] 
BB2811 -> BB2812 [tailport=s, headport=n, headlabel="      2812"]
BB2811 -> BB2855 [tailport=s, headport=n, color=gray]
BB2812 [shape=record label="{8838: write-variable[v2,'tok']*|8839: read-variable['nodes',v8,-]|8840: read-property[v8,'Code',-]|8841: \<variable-non-null-undef\>['nodes']|8842: read-variable['tok',v10,-]|8843: read-property[v10,'val',v9]|8844: \<variable-non-null-undef\>['tok']|8845: read-variable['tok',v12,-]|8846: read-property[v12,'buffer',v11]|8847: \<variable-non-null-undef\>['tok']|8848: read-variable['tok',v14,-]|8849: read-property[v14,'escape',v13]|8850: \<variable-non-null-undef\>['tok']}" ] 
BB2812 -> BB2813 [tailport=s, headport=n, headlabel="      2813"]
BB2812 -> BB2855 [tailport=s, headport=n, color=gray]
BB2813 [shape=record label="{8851: construct [v8,'Code',v9,v11,v13,v6]}" ] 
BB2813 -> BB2814 [tailport=s, headport=n, headlabel="      2814"]
BB2813 -> BB2855 [tailport=s, headport=n, color=gray]
BB2814 [shape=record label="{8852: write-variable[v6,'node']*|8853: read-variable['node',v16,-]|8854: read-variable['this',v18,-]|8855: read-property[v18,'line',-]}" ] 
BB2814 -> BB2815 [tailport=s, headport=n, headlabel="      2815"]
BB2814 -> BB2855 [tailport=s, headport=n, color=gray]
BB2815 [shape=record label="{8856: call-this.line [v18,'line',v15]}" ] 
BB2815 -> BB2816 [tailport=s, headport=n, headlabel="      2816"]
BB2815 -> BB2855 [tailport=s, headport=n, color=gray]
BB2816 [shape=record label="{8857: write-property[v16,'line',v15]|8858: \<variable-non-null-undef\>['node']*|8859: read-variable['tok',v20,-]|8860: read-property[v20,'isElse',v19]|8861: \<variable-non-null-undef\>['tok']|8862: if[v19](true-block:2817,false-block:2818)}" ] 
BB2816 -> BB2818 [tailport=s, headport=n, headlabel="      2818"]
BB2816 -> BB2817 [tailport=s, headport=n, headlabel="      2817"]
BB2816 -> BB2855 [tailport=s, headport=n, color=gray]
BB2817 [shape=record label="{8863: read-variable['tok',v22,-]|8864: read-property[v22,'hasIf',v21]|8865: \<variable-non-null-undef\>['tok']|8866: ![v21,v19]}" ] 
BB2817 -> BB2818 [tailport=s, headport=n]
BB2817 -> BB2855 [tailport=s, headport=n, color=gray]
BB2818 [shape=record label="{8867: if[v19](true-block:2819,false-block:2822)}" ] 
BB2818 -> BB2819 [tailport=s, headport=n, headlabel="      2819"]
BB2818 -> BB2822 [tailport=s, headport=n, headlabel="      2822"]
BB2819 [shape=record label="{8868: read-variable['Error',v22,-]|8869: constant[\"Unexpected else without if\",v23]}" ] 
BB2819 -> BB2820 [tailport=s, headport=n, headlabel="      2820"]
BB2819 -> BB2855 [tailport=s, headport=n, color=gray]
BB2820 [shape=record label="{8870: construct [-,v22,v23,v21]}" ] 
BB2820 -> BB2821 [tailport=s, headport=n, headlabel="      2821"]
BB2820 -> BB2855 [tailport=s, headport=n, color=gray]
BB2821 [shape=record label="{8871: throw[v21]*}" ] 
BB2821 -> BB2822 [tailport=s, headport=n]
BB2821 -> BB2855 [tailport=s, headport=n, color=gray]
BB2822 [shape=record label="{8872: constant[\"indent\",v22]|8873: read-variable['this',v26,-]|8874: read-property[v26,'peek',-]}" ] 
BB2822 -> BB2823 [tailport=s, headport=n, headlabel="      2823"]
BB2822 -> BB2855 [tailport=s, headport=n, color=gray]
BB2823 [shape=record label="{8875: call-this.peek [v26,'peek',v24]}" ] 
BB2823 -> BB2824 [tailport=s, headport=n, headlabel="      2824"]
BB2823 -> BB2855 [tailport=s, headport=n, color=gray]
BB2824 [shape=record label="{8876: read-property[v24,'type',v23]|8877: ==[v22,v23,v21]|8878: write-variable[v21,'block']*|8879: read-variable['block',v27,-]|8880: if[v27](true-block:2825,false-block:2828)}" ] 
BB2824 -> BB2825 [tailport=s, headport=n, headlabel="      2825"]
BB2824 -> BB2828 [tailport=s, headport=n, headlabel="      2828"]
BB2824 -> BB2855 [tailport=s, headport=n, color=gray]
BB2825 [shape=record label="{8881: read-variable['node',v29,-]|8882: read-variable['this',v31,-]|8883: read-property[v31,'block',-]}" ] 
BB2825 -> BB2826 [tailport=s, headport=n, headlabel="      2826"]
BB2825 -> BB2855 [tailport=s, headport=n, color=gray]
BB2826 [shape=record label="{8884: call-this.block [v31,'block',v28]}" ] 
BB2826 -> BB2827 [tailport=s, headport=n, headlabel="      2827"]
BB2826 -> BB2855 [tailport=s, headport=n, color=gray]
BB2827 [shape=record label="{8885: write-property[v29,'block',v28]|8886: \<variable-non-null-undef\>['node']*}" ] 
BB2827 -> BB2828 [tailport=s, headport=n]
BB2827 -> BB2855 [tailport=s, headport=n, color=gray]
BB2828 [shape=record label="{8887: read-variable['tok',v29,-]|8888: read-property[v29,'requiresBlock',v28]|8889: \<variable-non-null-undef\>['tok']|8890: if[v28](true-block:2829,false-block:2830)}" ] 
BB2828 -> BB2830 [tailport=s, headport=n, headlabel="      2830"]
BB2828 -> BB2829 [tailport=s, headport=n, headlabel="      2829"]
BB2828 -> BB2855 [tailport=s, headport=n, color=gray]
BB2829 [shape=record label="{8891: read-variable['block',v30,-]|8892: ![v30,v28]}" ] 
BB2829 -> BB2830 [tailport=s, headport=n]
BB2829 -> BB2855 [tailport=s, headport=n, color=gray]
BB2830 [shape=record label="{8893: if[v28](true-block:2831,false-block:2834)}" ] 
BB2830 -> BB2831 [tailport=s, headport=n, headlabel="      2831"]
BB2830 -> BB2834 [tailport=s, headport=n, headlabel="      2834"]
BB2831 [shape=record label="{8894: read-variable['node',v31,-]|8895: read-variable['nodes',v33,-]|8896: read-property[v33,'Block',-]|8897: \<variable-non-null-undef\>['nodes']}" ] 
BB2831 -> BB2832 [tailport=s, headport=n, headlabel="      2832"]
BB2831 -> BB2855 [tailport=s, headport=n, color=gray]
BB2832 [shape=record label="{8898: construct [v33,'Block',v30]}" ] 
BB2832 -> BB2833 [tailport=s, headport=n, headlabel="      2833"]
BB2832 -> BB2855 [tailport=s, headport=n, color=gray]
BB2833 [shape=record label="{8899: write-property[v31,'block',v30]|8900: \<variable-non-null-undef\>['node']*}" ] 
BB2833 -> BB2834 [tailport=s, headport=n]
BB2833 -> BB2855 [tailport=s, headport=n, color=gray]
BB2834 [shape=record label="{8901: read-variable['tok',v31,-]|8902: read-property[v31,'isIf',v30]|8903: \<variable-non-null-undef\>['tok']|8904: if[v30](true-block:2835,false-block:2838)}" ] 
BB2834 -> BB2838 [tailport=s, headport=n, headlabel="      2838"]
BB2834 -> BB2835 [tailport=s, headport=n, headlabel="      2835"]
BB2834 -> BB2855 [tailport=s, headport=n, color=gray]
BB2835 [shape=record label="{8905: read-variable['this',v34,-]|8906: read-property[v34,'peek',-]}" ] 
BB2835 -> BB2836 [tailport=s, headport=n, headlabel="      2836"]
BB2835 -> BB2855 [tailport=s, headport=n, color=gray]
BB2836 [shape=record label="{8907: call-this.peek [v34,'peek',v32]}" ] 
BB2836 -> BB2837 [tailport=s, headport=n, headlabel="      2837"]
BB2836 -> BB2855 [tailport=s, headport=n, color=gray]
BB2837 [shape=record label="{8908: read-property[v32,'isElse',v30]}" ] 
BB2837 -> BB2838 [tailport=s, headport=n]
BB2837 -> BB2855 [tailport=s, headport=n, color=gray]
BB2838 [shape=record label="{8909: if[v30](true-block:2839,false-block:2840)}" ] 
BB2838 -> BB2839 [tailport=s, headport=n, headlabel="      2839"]
BB2838 -> BB2840 [tailport=s, headport=n, headlabel="      2840"]
BB2839 [shape=record label="{8910: read-variable['this',v35,-]|8911: read-property[v35,'peek',-]}" ] 
BB2839 -> BB2841 [tailport=s, headport=n, headlabel="      2841"]
BB2839 -> BB2855 [tailport=s, headport=n, color=gray]
BB2840 [shape=record label="{8912: read-variable['tok',v33,-]|8913: read-property[v33,'isIf',v32]|8914: \<variable-non-null-undef\>['tok']|8915: if[v32](true-block:2843,false-block:2849)}" ] 
BB2840 -> BB2849 [tailport=s, headport=n, headlabel="      2849"]
BB2840 -> BB2843 [tailport=s, headport=n, headlabel="      2843"]
BB2840 -> BB2855 [tailport=s, headport=n, color=gray]
BB2841 [shape=record label="{8916: call-this.peek [v35,'peek',v33]}" ] 
BB2841 -> BB2842 [tailport=s, headport=n, headlabel="      2842"]
BB2841 -> BB2855 [tailport=s, headport=n, color=gray]
BB2842 [shape=record label="{8917: constant[true,v32]|8918: write-property[v33,'hasIf',v32]*}" ] 
BB2842 -> BB2853 [tailport=s, headport=n, headlabel="      2853"]
BB2842 -> BB2855 [tailport=s, headport=n, color=gray]
BB2843 [shape=record label="{8919: read-variable['this',v38,-]|8920: read-property[v38,'peek',-]}" ] 
BB2843 -> BB2844 [tailport=s, headport=n, headlabel="      2844"]
BB2843 -> BB2855 [tailport=s, headport=n, color=gray]
BB2844 [shape=record label="{8921: call-this.peek [v38,'peek',v36]}" ] 
BB2844 -> BB2845 [tailport=s, headport=n, headlabel="      2845"]
BB2844 -> BB2855 [tailport=s, headport=n, color=gray]
BB2845 [shape=record label="{8922: read-property[v36,'type',v34]|8923: constant[\"newline\",v35]|8924: ===[v34,v35,v32]|8925: if[v32](true-block:2846,false-block:2849)}" ] 
BB2845 -> BB2849 [tailport=s, headport=n]
BB2845 -> BB2846 [tailport=s, headport=n, headlabel="      2846"]
BB2845 -> BB2855 [tailport=s, headport=n, color=gray]
BB2846 [shape=record label="{8926: read-variable['this',v41,-]|8927: read-property[v41,'lookahead',-]|8928: constant[2.0,v42]}" ] 
BB2846 -> BB2847 [tailport=s, headport=n, headlabel="      2847"]
BB2846 -> BB2855 [tailport=s, headport=n, color=gray]
BB2847 [shape=record label="{8929: call-this.lookahead [v41,'lookahead',v42,v39]}" ] 
BB2847 -> BB2848 [tailport=s, headport=n, headlabel="      2848"]
BB2847 -> BB2855 [tailport=s, headport=n, color=gray]
BB2848 [shape=record label="{8930: read-property[v39,'isElse',v32]}" ] 
BB2848 -> BB2849 [tailport=s, headport=n]
BB2848 -> BB2855 [tailport=s, headport=n, color=gray]
BB2849 [shape=record label="{8931: if[v32](true-block:2850,false-block:2853)}" ] 
BB2849 -> BB2850 [tailport=s, headport=n, headlabel="      2850"]
BB2849 -> BB2853 [tailport=s, headport=n]
BB2850 [shape=record label="{8932: read-variable['this',v37,-]|8933: read-property[v37,'lookahead',-]|8934: constant[2.0,v38]}" ] 
BB2850 -> BB2851 [tailport=s, headport=n, headlabel="      2851"]
BB2850 -> BB2855 [tailport=s, headport=n, color=gray]
BB2851 [shape=record label="{8935: call-this.lookahead [v37,'lookahead',v38,v35]}" ] 
BB2851 -> BB2852 [tailport=s, headport=n, headlabel="      2852"]
BB2851 -> BB2855 [tailport=s, headport=n, color=gray]
BB2852 [shape=record label="{8936: constant[true,v34]|8937: write-property[v35,'hasIf',v34]*}" ] 
BB2852 -> BB2853 [tailport=s, headport=n]
BB2852 -> BB2855 [tailport=s, headport=n, color=gray]
BB2853 [shape=record label="{8938: read-variable['node',v1,-]}" ] 
BB2853 -> BB2854 [tailport=s, headport=n, headlabel="      2854"]
BB2853 -> BB2855 [tailport=s, headport=n, color=gray]
BB2854 [shape=record label="{8939: return[v1]}" ] 
BB2855 [shape=record label="{8940: exceptional-return}" ] 
//#$~ 3118
}
