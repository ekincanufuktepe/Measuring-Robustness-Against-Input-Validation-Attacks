digraph {
rankdir="TD"
BB_entry48[shape=none,label=""];
BB_entry48 -> BB621 [tailport=s, headport=n, headlabel="    621"]
BB621 [shape=record label="{2055: constant[undefined,v1]|2056: vardecl['ret']|2057: vardecl['found']|2058: vardecl['extns']|2059: vardecl['i']}" ] 
BB621 -> BB622 [tailport=s, headport=n, headlabel="      622"]
BB622 [shape=record label="{2060: constant[false,v2]|2061: write-variable[v2,'ret']*|2062: constant[false,v3]|2063: write-variable[v3,'found']*|2064: read-variable['objValue',v8,-]|2065: read-property[v8,'value',v7]|2066: \<variable-non-null-undef\>['objValue']|2067: read-property[v7,'length',v5]|2068: \<property-non-null-undef\>[v8,'value']|2069: constant[0.0,v6]|2070: \<=[v5,v6,v4]|2071: if[v4](true-block:623,false-block:624)}" ] 
BB622 -> BB623 [tailport=s, headport=n, headlabel="      623"]
BB622 -> BB624 [tailport=s, headport=n, headlabel="      624"]
BB622 -> BB646 [tailport=s, headport=n, color=gray, headlabel="      646"]
BB623 [shape=record label="{2072: constant[true,v1]}" ] 
BB623 -> BB645 [tailport=s, headport=n, headlabel="      645"]
BB624 [shape=record label="{2073: read-variable['cmdvalue',v11,-]|2074: read-property[v11,'split',-]|2075: \<variable-non-null-undef\>['cmdvalue']|2076: constant[\";\",v12]}" ] 
BB624 -> BB625 [tailport=s, headport=n, headlabel="      625"]
BB624 -> BB646 [tailport=s, headport=n, color=gray]
BB625 [shape=record label="{2077: call-cmdvalue.split [v11,'split',v12,v9]}" ] 
BB625 -> BB626 [tailport=s, headport=n, headlabel="      626"]
BB625 -> BB646 [tailport=s, headport=n, color=gray]
BB626 [shape=record label="{2078: write-variable[v9,'extns']*|2079: constant[0.0,v14]|2080: write-variable[v14,'i']*}" ] 
BB626 -> BB627 [tailport=s, headport=n, headlabel="      627"]
BB627 [shape=record label="{2081: read-variable['i',v15,-]|2082: read-variable['extns',v17,-]|2083: read-property[v17,'length',v16]|2084: \<variable-non-null-undef\>['extns']|2085: \<[v15,v16,v13]|2086: if[v13](true-block:628,false-block:629)}" ] 
BB627 -> BB628 [tailport=s, headport=n, headlabel="      628"]
BB627 -> BB629 [tailport=s, headport=n, headlabel="      629"]
BB627 -> BB646 [tailport=s, headport=n, color=gray]
BB628 [shape=record label="{2087: read-variable['objValue',v21,-]|2088: read-property[v21,'value',v20]|2089: \<variable-non-null-undef\>['objValue']|2090: read-property[v20,'substr',-]|2091: \<property-non-null-undef\>[v21,'value']|2092: read-variable['objValue',v26,-]|2093: read-property[v26,'value',v25]|2094: \<variable-non-null-undef\>['objValue']|2095: read-property[v25,'length',v23]|2096: \<property-non-null-undef\>[v26,'value']|2097: read-variable['extns',v28,-]|2098: read-variable['i',v29,-]|2099: read-property[v28,v29,v27]|2100: \<variable-non-null-undef\>['extns']|2101: read-property[v27,'length',v24]|2102: \<property-non-null-undef\>[v28,v29]|2103: -[v23,v24,v22]|2104: read-variable['extns',v32,-]|2105: read-variable['i',v33,-]|2106: read-property[v32,v33,v31]|2107: \<variable-non-null-undef\>['extns']|2108: read-property[v31,'length',v30]|2109: \<property-non-null-undef\>[v32,v33]}" ] 
BB628 -> BB630 [tailport=s, headport=n, headlabel="      630"]
BB628 -> BB646 [tailport=s, headport=n, color=gray]
BB629 [shape=record label="{2110: read-variable['found',v19,-]|2111: ![v19,v18]|2112: if[v18](true-block:636,false-block:637)}" ] 
BB629 -> BB636 [tailport=s, headport=n, headlabel="      636"]
BB629 -> BB637 [tailport=s, headport=n, headlabel="      637"]
BB629 -> BB646 [tailport=s, headport=n, color=gray]
BB630 [shape=record label="{2113: call-objValue.value.substr [v20,'substr',v22,v30,v18]}" ] 
BB630 -> BB631 [tailport=s, headport=n, headlabel="      631"]
BB630 -> BB646 [tailport=s, headport=n, color=gray]
BB631 [shape=record label="{2114: write-variable[v18,'ext']*|2115: read-variable['ext',v36,-]|2116: read-property[v36,'toLowerCase',-]|2117: \<variable-non-null-undef\>['ext']}" ] 
BB631 -> BB632 [tailport=s, headport=n, headlabel="      632"]
BB631 -> BB646 [tailport=s, headport=n, color=gray]
BB632 [shape=record label="{2118: call-ext.toLowerCase [v36,'toLowerCase',v34]}" ] 
BB632 -> BB633 [tailport=s, headport=n, headlabel="      633"]
BB632 -> BB646 [tailport=s, headport=n, color=gray]
BB633 [shape=record label="{2119: write-variable[v34,'ext']*|2120: read-variable['ext',v38,-]|2121: read-variable['extns',v40,-]|2122: read-variable['i',v41,-]|2123: read-property[v40,v41,v39]|2124: \<variable-non-null-undef\>['extns']|2125: ==[v38,v39,v37]|2126: if[v37](true-block:634,false-block:635)}" ] 
BB633 -> BB634 [tailport=s, headport=n, headlabel="      634"]
BB633 -> BB635 [tailport=s, headport=n, headlabel="      635"]
BB633 -> BB646 [tailport=s, headport=n, color=gray]
BB634 [shape=record label="{2127: constant[true,v42]|2128: write-variable[v42,'found']*}" ] 
BB634 -> BB629 [tailport=s, headport=n]
BB635 [shape=record label="{2129: constant[1.0,v42]|2130: read-variable['i',v43,-]|2131: +[v43,v44]|2132: +[v44,v42,v45]|2133: write-variable[v45,'i']}" ] 
BB635 -> BB627 [tailport=s, headport=n]
BB635 -> BB646 [tailport=s, headport=n, color=gray]
BB636 [shape=record label="{2134: read-variable['strError',v21,-]|2135: ![v21,v20]|2136: if[v20](true-block:639,false-block:638)}" ] 
BB636 -> BB639 [tailport=s, headport=n, headlabel="      639"]
BB636 -> BB638 [tailport=s, headport=n, headlabel="      638"]
BB636 -> BB646 [tailport=s, headport=n, color=gray]
BB637 [shape=record label="{2137: constant[true,v20]|2138: write-variable[v20,'ret']*}" ] 
BB637 -> BB644 [tailport=s, headport=n, headlabel="      644"]
BB638 [shape=record label="{2139: read-variable['strError',v23,-]|2140: read-property[v23,'length',v21]|2141: \<variable-non-null-undef\>['strError']|2142: constant[0.0,v22]|2143: ==[v21,v22,v20]}" ] 
BB638 -> BB639 [tailport=s, headport=n]
BB638 -> BB646 [tailport=s, headport=n, color=gray]
BB639 [shape=record label="{2144: if[v20](true-block:640,false-block:641)}" ] 
BB639 -> BB640 [tailport=s, headport=n, headlabel="      640"]
BB639 -> BB641 [tailport=s, headport=n, headlabel="      641"]
BB640 [shape=record label="{2145: read-variable['objValue',v26,-]|2146: read-property[v26,'name',v24]|2147: \<variable-non-null-undef\>['objValue']|2148: constant[\" allowed file extensions are: \",v25]|2149: +[v24,v25,v22]|2150: read-variable['cmdvalue',v23,-]|2151: +[v22,v23,v21]|2152: write-variable[v21,'strError']*}" ] 
BB640 -> BB641 [tailport=s, headport=n]
BB640 -> BB646 [tailport=s, headport=n, color=gray]
BB641 [shape=record label="{2153: read-variable['sfm_show_error_msg',v22,v21]|2154: read-variable['strError',v23,-]|2155: read-variable['objValue',v24,-]}" ] 
BB641 -> BB642 [tailport=s, headport=n, headlabel="      642"]
BB641 -> BB646 [tailport=s, headport=n, color=gray]
BB642 [shape=record label="{2156: call-sfm_show_error_msg [v21,v22,v23,v24,-]*}" ] 
BB642 -> BB643 [tailport=s, headport=n, headlabel="      643"]
BB642 -> BB646 [tailport=s, headport=n, color=gray]
BB643 [shape=record label="{2157: constant[false,v25]|2158: write-variable[v25,'ret']*}" ] 
BB643 -> BB644 [tailport=s, headport=n]
BB644 [shape=record label="{2159: read-variable['ret',v1,-]}" ] 
BB644 -> BB645 [tailport=s, headport=n]
BB644 -> BB646 [tailport=s, headport=n, color=gray]
BB645 [shape=record label="{2160: return[v1]}" ] 
BB646 [shape=record label="{2161: exceptional-return}" ] 
//#$~ 872
}
