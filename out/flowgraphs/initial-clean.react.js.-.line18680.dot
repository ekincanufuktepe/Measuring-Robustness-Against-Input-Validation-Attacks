digraph {
rankdir="TD"
BB_entry782[shape=none,label=""];
BB_entry782 -> BB10377 [tailport=s, headport=n, headlabel="    10377"]
BB10377 [shape=record label="{34244: constant[undefined,v1]|34245: vardecl['ret']|34246: vardecl['key']}" ] 
BB10377 -> BB10378 [tailport=s, headport=n, headlabel="      10378"]
BB10378 [shape=record label="{34247: new[v2]|34248: write-variable[v2,'ret']*|34249: constant[\"production\",v4]|34250: constant[\"development\",v5]|34251: !==[v4,v5,v3]|34252: if[v3](true-block:10379,false-block:10380)}" ] 
BB10378 -> BB10379 [tailport=s, headport=n, headlabel="      10379"]
BB10378 -> BB10380 [tailport=s, headport=n, headlabel="      10380"]
BB10378 -> BB10400 [tailport=s, headport=n, color=gray, headlabel="      10400"]
BB10379 [shape=record label="{34253: read-variable['invariant',v7,v6]|34254: read-variable['obj',v9,-]|34255: read-variable['Object',v10,-]|34256: instanceof[v9,v10,v8]|34257: if[v8](true-block:10381,false-block:10384)}" ] 
BB10379 -> BB10384 [tailport=s, headport=n, headlabel="      10384"]
BB10379 -> BB10381 [tailport=s, headport=n, headlabel="      10381"]
BB10379 -> BB10400 [tailport=s, headport=n, color=gray]
BB10380 [shape=record label="{34258: read-variable['invariant',v7,v6]|34259: read-variable['obj',v9,-]|34260: read-variable['Object',v10,-]|34261: instanceof[v9,v10,v8]|34262: if[v8](true-block:10386,false-block:10389)}" ] 
BB10380 -> BB10389 [tailport=s, headport=n, headlabel="      10389"]
BB10380 -> BB10386 [tailport=s, headport=n, headlabel="      10386"]
BB10380 -> BB10400 [tailport=s, headport=n, color=gray]
BB10381 [shape=record label="{34263: read-variable['Array',v13,-]|34264: read-property[v13,'isArray',-]|34265: \<variable-non-null-undef\>['Array']|34266: read-variable['obj',v14,-]}" ] 
BB10381 -> BB10382 [tailport=s, headport=n, headlabel="      10382"]
BB10381 -> BB10400 [tailport=s, headport=n, color=gray]
BB10382 [shape=record label="{34267: call-Array.isArray [v13,'isArray',v14,v11]}" ] 
BB10382 -> BB10383 [tailport=s, headport=n, headlabel="      10383"]
BB10382 -> BB10400 [tailport=s, headport=n, color=gray]
BB10383 [shape=record label="{34268: ![v11,v8]}" ] 
BB10383 -> BB10384 [tailport=s, headport=n]
BB10383 -> BB10400 [tailport=s, headport=n, color=gray]
BB10384 [shape=record label="{34269: constant[\"keyMirror(...): Argument must be an object.\",v11]}" ] 
BB10384 -> BB10385 [tailport=s, headport=n, headlabel="      10385"]
BB10385 [shape=record label="{34270: call-invariant [v6,v7,v8,v11,-]}" ] 
BB10385 -> BB10390 [tailport=s, headport=n, headlabel="      10390"]
BB10385 -> BB10400 [tailport=s, headport=n, color=gray]
BB10386 [shape=record label="{34271: read-variable['Array',v13,-]|34272: read-property[v13,'isArray',-]|34273: \<variable-non-null-undef\>['Array']|34274: read-variable['obj',v14,-]}" ] 
BB10386 -> BB10387 [tailport=s, headport=n, headlabel="      10387"]
BB10386 -> BB10400 [tailport=s, headport=n, color=gray]
BB10387 [shape=record label="{34275: call-Array.isArray [v13,'isArray',v14,v11]}" ] 
BB10387 -> BB10388 [tailport=s, headport=n, headlabel="      10388"]
BB10387 -> BB10400 [tailport=s, headport=n, color=gray]
BB10388 [shape=record label="{34276: ![v11,v8]}" ] 
BB10388 -> BB10389 [tailport=s, headport=n]
BB10388 -> BB10400 [tailport=s, headport=n, color=gray]
BB10389 [shape=record label="{34277: call-invariant [v6,v7,v8,-]}" ] 
BB10389 -> BB10390 [tailport=s, headport=n]
BB10389 -> BB10400 [tailport=s, headport=n, color=gray]
BB10390 [shape=record label="{34278: read-variable['obj',v7,-]}" ] 
BB10390 -> BB10391 [tailport=s, headport=n, headlabel="      10391"]
BB10390 -> BB10400 [tailport=s, headport=n, color=gray]
BB10391 [shape=record label="{34279: begin-for-in[v7,v8]}" ] 
BB10391 -> BB10392 [tailport=s, headport=n, headlabel="      10392"]
BB10391 -> BB10400 [tailport=s, headport=n, color=gray]
BB10392 [shape=record label="{34280: has-next[v8,v9]|34281: if[v9](true-block:10393,false-block:10398)}" ] 
BB10392 -> BB10393 [tailport=s, headport=n, headlabel="      10393"]
BB10392 -> BB10398 [tailport=s, headport=n, headlabel="      10398"]
BB10393 [shape=record label="{34282: next-property[v8,v10]|34283: write-variable[v10,'key']|34284: read-variable['obj',v14,-]|34285: read-property[v14,'hasOwnProperty',-]|34286: \<variable-non-null-undef\>['obj']|34287: read-variable['key',v15,-]}" ] 
BB10393 -> BB10394 [tailport=s, headport=n, headlabel="      10394"]
BB10393 -> BB10400 [tailport=s, headport=n, color=gray]
BB10394 [shape=record label="{34288: call-obj.hasOwnProperty [v14,'hasOwnProperty',v15,v12]}" ] 
BB10394 -> BB10395 [tailport=s, headport=n, headlabel="      10395"]
BB10394 -> BB10400 [tailport=s, headport=n, color=gray]
BB10395 [shape=record label="{34289: ![v12,v11]|34290: if[v11](true-block:10397,false-block:10396)}" ] 
BB10395 -> BB10397 [tailport=s, headport=n, headlabel="      10397"]
BB10395 -> BB10396 [tailport=s, headport=n, headlabel="      10396"]
BB10395 -> BB10400 [tailport=s, headport=n, color=gray]
BB10396 [shape=record label="{34291: read-variable['ret',v17,-]|34292: read-variable['key',v18,-]|34293: read-variable['key',v16,-]|34294: write-property[v17,v18,v16]|34295: \<variable-non-null-undef\>['ret']*}" ] 
BB10396 -> BB10397 [tailport=s, headport=n]
BB10396 -> BB10400 [tailport=s, headport=n, color=gray]
BB10397 [shape=record label="{34296: end-for-in(begin-node:34279)}" ] 
BB10397 -> BB10392 [tailport=s, headport=n]
BB10398 [shape=record label="{34297: read-variable['ret',v1,-]}" ] 
BB10398 -> BB10399 [tailport=s, headport=n, headlabel="      10399"]
BB10398 -> BB10400 [tailport=s, headport=n, color=gray]
BB10399 [shape=record label="{34298: return[v1]}" ] 
BB10400 [shape=record label="{34299: exceptional-return}" ] 
//#$~ 18693
}
