digraph {
rankdir="TD"
BB_entry896[shape=none,label=""];
BB_entry896 -> BB10674 [tailport=s, headport=n, headlabel="    10674"]
BB10674 [shape=record label="{36447: constant[undefined,v1]|36448: vardecl['meta']|36449: vardecl['node']|36450: vardecl['nodes']|36451: vardecl['key']|36452: vardecl['nodeObject']}" ] 
BB10674 -> BB10675 [tailport=s, headport=n, headlabel="      10675"]
BB10675 [shape=record label="{36453: read-variable['obj',v3,-]|36454: read-property[v3,'__ember_meta__',v2]|36455: \<variable-non-null-undef\>['obj']|36456: write-variable[v2,'meta']*|36457: read-variable['meta',v4,-]|36458: if[v4](true-block:10676,false-block:10696)}" ] 
BB10675 -> BB10676 [tailport=s, headport=n, headlabel="      10676"]
BB10675 -> BB10696 [tailport=s, headport=n, headlabel="      10696"]
BB10675 -> BB10697 [tailport=s, headport=n, color=gray, headlabel="      10697"]
BB10676 [shape=record label="{36459: read-variable['obj',v6,-]|36460: constant[null,v5]|36461: write-property[v6,'__ember_meta__',v5]|36462: \<variable-non-null-undef\>['obj']*|36463: read-variable['meta',v8,-]|36464: read-property[v8,'chains',v7]|36465: \<variable-non-null-undef\>['meta']|36466: write-variable[v7,'node']*|36467: read-variable['node',v9,-]|36468: if[v9](true-block:10677,false-block:10696)}" ] 
BB10676 -> BB10677 [tailport=s, headport=n, headlabel="      10677"]
BB10676 -> BB10696 [tailport=s, headport=n]
BB10676 -> BB10697 [tailport=s, headport=n, color=gray]
BB10677 [shape=record label="{36469: read-variable['NODE_STACK',v11,-]|36470: read-property[v11,'push',-]|36471: \<variable-non-null-undef\>['NODE_STACK']|36472: read-variable['node',v12,-]}" ] 
BB10677 -> BB10678 [tailport=s, headport=n, headlabel="      10678"]
BB10677 -> BB10697 [tailport=s, headport=n, color=gray]
BB10678 [shape=record label="{36473: call-NODE_STACK.push [v11,'push',v12,-]*}" ] 
BB10678 -> BB10679 [tailport=s, headport=n, headlabel="      10679"]
BB10678 -> BB10697 [tailport=s, headport=n, color=gray]
BB10679 [shape=record label="{36474: read-variable['NODE_STACK',v16,-]|36475: read-property[v16,'length',v14]|36476: \<variable-non-null-undef\>['NODE_STACK']|36477: constant[0.0,v15]|36478: \>[v14,v15,v13]|36479: if[v13](true-block:10680,false-block:10696)}" ] 
BB10679 -> BB10680 [tailport=s, headport=n, headlabel="      10680"]
BB10679 -> BB10696 [tailport=s, headport=n]
BB10679 -> BB10697 [tailport=s, headport=n, color=gray]
BB10680 [shape=record label="{36480: read-variable['NODE_STACK',v19,-]|36481: read-property[v19,'pop',-]|36482: \<variable-non-null-undef\>['NODE_STACK']}" ] 
BB10680 -> BB10681 [tailport=s, headport=n, headlabel="      10681"]
BB10680 -> BB10697 [tailport=s, headport=n, color=gray]
BB10681 [shape=record label="{36483: call-NODE_STACK.pop [v19,'pop',v17]}" ] 
BB10681 -> BB10682 [tailport=s, headport=n, headlabel="      10682"]
BB10681 -> BB10697 [tailport=s, headport=n, color=gray]
BB10682 [shape=record label="{36484: write-variable[v17,'node']*|36485: read-variable['node',v21,-]|36486: read-property[v21,'_chains',v20]|36487: \<variable-non-null-undef\>['node']|36488: write-variable[v20,'nodes']*|36489: read-variable['nodes',v22,-]|36490: if[v22](true-block:10683,false-block:10692)}" ] 
BB10682 -> BB10683 [tailport=s, headport=n, headlabel="      10683"]
BB10682 -> BB10692 [tailport=s, headport=n, headlabel="      10692"]
BB10682 -> BB10697 [tailport=s, headport=n, color=gray]
BB10683 [shape=record label="{36491: read-variable['nodes',v24,-]}" ] 
BB10683 -> BB10684 [tailport=s, headport=n, headlabel="      10684"]
BB10683 -> BB10697 [tailport=s, headport=n, color=gray]
BB10684 [shape=record label="{36492: begin-for-in[v24,v25]}" ] 
BB10684 -> BB10685 [tailport=s, headport=n, headlabel="      10685"]
BB10684 -> BB10697 [tailport=s, headport=n, color=gray]
BB10685 [shape=record label="{36493: has-next[v25,v26]|36494: if[v26](true-block:10686,false-block:10692)}" ] 
BB10685 -> BB10686 [tailport=s, headport=n, headlabel="      10686"]
BB10685 -> BB10692 [tailport=s, headport=n]
BB10686 [shape=record label="{36495: next-property[v25,v27]|36496: write-variable[v27,'key']|36497: read-variable['nodes',v30,-]|36498: read-property[v30,'hasOwnProperty',-]|36499: \<variable-non-null-undef\>['nodes']|36500: read-variable['key',v31,-]}" ] 
BB10686 -> BB10687 [tailport=s, headport=n, headlabel="      10687"]
BB10686 -> BB10697 [tailport=s, headport=n, color=gray]
BB10687 [shape=record label="{36501: call-nodes.hasOwnProperty [v30,'hasOwnProperty',v31,v28]}" ] 
BB10687 -> BB10688 [tailport=s, headport=n, headlabel="      10688"]
BB10687 -> BB10697 [tailport=s, headport=n, color=gray]
BB10688 [shape=record label="{36502: if[v28](true-block:10689,false-block:10691)}" ] 
BB10688 -> BB10689 [tailport=s, headport=n, headlabel="      10689"]
BB10688 -> BB10691 [tailport=s, headport=n, headlabel="      10691"]
BB10689 [shape=record label="{36503: read-variable['NODE_STACK',v33,-]|36504: read-property[v33,'push',-]|36505: \<variable-non-null-undef\>['NODE_STACK']|36506: read-variable['nodes',v35,-]|36507: read-variable['key',v36,-]|36508: read-property[v35,v36,v34]|36509: \<variable-non-null-undef\>['nodes']}" ] 
BB10689 -> BB10690 [tailport=s, headport=n, headlabel="      10690"]
BB10689 -> BB10697 [tailport=s, headport=n, color=gray]
BB10690 [shape=record label="{36510: call-NODE_STACK.push [v33,'push',v34,-]*}" ] 
BB10690 -> BB10691 [tailport=s, headport=n]
BB10690 -> BB10697 [tailport=s, headport=n, color=gray]
BB10691 [shape=record label="{36511: end-for-in(begin-node:36492)}" ] 
BB10691 -> BB10685 [tailport=s, headport=n]
BB10692 [shape=record label="{36512: read-variable['node',v24,-]|36513: read-property[v24,'_watching',v23]|36514: \<variable-non-null-undef\>['node']|36515: if[v23](true-block:10693,false-block:10679)}" ] 
BB10692 -> BB10693 [tailport=s, headport=n, headlabel="      10693"]
BB10692 -> BB10679 [tailport=s, headport=n]
BB10692 -> BB10697 [tailport=s, headport=n, color=gray]
BB10693 [shape=record label="{36516: read-variable['node',v26,-]|36517: read-property[v26,'_object',v25]|36518: \<variable-non-null-undef\>['node']|36519: write-variable[v25,'nodeObject']*|36520: read-variable['nodeObject',v27,-]|36521: if[v27](true-block:10694,false-block:10679)}" ] 
BB10693 -> BB10694 [tailport=s, headport=n, headlabel="      10694"]
BB10693 -> BB10679 [tailport=s, headport=n]
BB10693 -> BB10697 [tailport=s, headport=n, color=gray]
BB10694 [shape=record label="{36522: read-variable['removeChainWatcher',v29,v28]|36523: read-variable['nodeObject',v30,-]|36524: read-variable['node',v32,-]|36525: read-property[v32,'_key',v31]|36526: \<variable-non-null-undef\>['node']|36527: read-variable['node',v33,-]}" ] 
BB10694 -> BB10695 [tailport=s, headport=n, headlabel="      10695"]
BB10694 -> BB10697 [tailport=s, headport=n, color=gray]
BB10695 [shape=record label="{36528: call-removeChainWatcher [v28,v29,v30,v31,v33,-]*}" ] 
BB10695 -> BB10679 [tailport=s, headport=n]
BB10695 -> BB10697 [tailport=s, headport=n, color=gray]
BB10696 [shape=record label="{36529: return[v1]}" ] 
BB10697 [shape=record label="{36530: exceptional-return}" ] 
//#$~ 19006
}
