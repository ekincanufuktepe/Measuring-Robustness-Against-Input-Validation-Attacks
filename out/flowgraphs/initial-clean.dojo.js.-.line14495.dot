digraph {
rankdir="TD"
BB_entry746[shape=none,label=""];
BB_entry746 -> BB10317 [tailport=s, headport=n, headlabel="    10317"]
BB10317 [shape=record label="{30501: constant[undefined,v1]|30502: vardecl['func']|30503: vardecl['deferred']|30504: vardecl['newResult']}" ] 
BB10317 -> BB10318 [tailport=s, headport=n, headlabel="      10318"]
BB10318 [shape=record label="{30505: read-variable['listener',v3,-]|30506: read-variable['type',v4,-]|30507: read-property[v3,v4,v2]|30508: \<variable-non-null-undef\>['listener']|30509: write-variable[v2,'func']*|30510: read-variable['listener',v6,-]|30511: read-property[v6,'deferred',v5]|30512: \<variable-non-null-undef\>['listener']|30513: write-variable[v5,'deferred']*|30514: read-variable['func',v7,-]|30515: if[v7](true-block:10320,false-block:10319)}" ] 
BB10318 -> BB10320 [tailport=s, headport=n, headlabel="      10320"]
BB10318 -> BB10319 [tailport=s, headport=n, headlabel="      10319"]
BB10318 -> BB10352 [tailport=s, headport=n, color=gray, headlabel="      10352"]
BB10319 [shape=record label="{30516: read-variable['signalDeferred',v9,v8]|30517: read-variable['deferred',v10,-]|30518: read-variable['type',v11,-]|30519: read-variable['result',v12,-]}" ] 
BB10319 -> BB10344 [tailport=s, headport=n, headlabel="      10344"]
BB10319 -> BB10352 [tailport=s, headport=n, color=gray]
BB10320 [shape=record label="{30520: read-variable['func',v10,v9]|30521: read-variable['result',v11,-]}" ] 
BB10320 -> BB10321 [tailport=s, headport=n, headlabel="      10321"]
BB10320 -> BB10339 [tailport=s, headport=n, color=gray, headlabel="      10339"]
BB10321 [shape=record label="{30522: call-func [v9,v10,v11,v8]}" ] 
BB10321 -> BB10322 [tailport=s, headport=n, headlabel="      10322"]
BB10321 -> BB10339 [tailport=s, headport=n, color=gray]
BB10322 [shape=record label="{30523: write-variable[v8,'newResult']*|30524: read-variable['type',v13,-]|30525: read-variable['PROGRESS',v14,-]|30526: ===[v13,v14,v12]|30527: if[v12](true-block:10323,false-block:10324)}" ] 
BB10322 -> BB10323 [tailport=s, headport=n, headlabel="      10323"]
BB10322 -> BB10324 [tailport=s, headport=n, headlabel="      10324"]
BB10322 -> BB10339 [tailport=s, headport=n, color=gray]
BB10323 [shape=record label="{30528: typeof['newResult',v16]|30529: constant[\"undefined\",v17]|30530: !==[v16,v17,v15]|30531: if[v15](true-block:10325,false-block:10345)}" ] 
BB10323 -> BB10325 [tailport=s, headport=n, headlabel="      10325"]
BB10323 -> BB10345 [tailport=s, headport=n, headlabel="      10345"]
BB10323 -> BB10339 [tailport=s, headport=n, color=gray]
BB10324 [shape=record label="{30532: read-variable['newResult',v15,-]|30533: if[v15](true-block:10327,false-block:10328)}" ] 
BB10324 -> BB10328 [tailport=s, headport=n, headlabel="      10328"]
BB10324 -> BB10327 [tailport=s, headport=n, headlabel="      10327"]
BB10324 -> BB10339 [tailport=s, headport=n, color=gray]
BB10325 [shape=record label="{30534: read-variable['signalDeferred',v19,v18]|30535: read-variable['deferred',v20,-]|30536: read-variable['type',v21,-]|30537: read-variable['newResult',v22,-]}" ] 
BB10325 -> BB10326 [tailport=s, headport=n, headlabel="      10326"]
BB10325 -> BB10339 [tailport=s, headport=n, color=gray]
BB10326 [shape=record label="{30538: call-signalDeferred [v18,v19,v20,v21,v22,-]*}" ] 
BB10326 -> BB10345 [tailport=s, headport=n]
BB10326 -> BB10339 [tailport=s, headport=n, color=gray]
BB10327 [shape=record label="{30539: read-variable['newResult',v19,-]|30540: read-property[v19,'then',v18]|30541: \<variable-non-null-undef\>['newResult']|30542: typeof[v18,v16]|30543: constant[\"function\",v17]|30544: ===[v16,v17,v15]}" ] 
BB10327 -> BB10328 [tailport=s, headport=n]
BB10327 -> BB10339 [tailport=s, headport=n, color=gray]
BB10328 [shape=record label="{30545: if[v15](true-block:10329,false-block:10337)}" ] 
BB10328 -> BB10329 [tailport=s, headport=n, headlabel="      10329"]
BB10328 -> BB10337 [tailport=s, headport=n, headlabel="      10337"]
BB10329 [shape=record label="{30546: read-variable['listener',v17,-]|30547: read-variable['newResult',v18,-]|30548: read-property[v18,'cancel',v16]|30549: \<variable-non-null-undef\>['newResult']|30550: write-property[v17,'cancel',v16]|30551: \<variable-non-null-undef\>['listener']*|30552: read-variable['newResult',v20,-]|30553: read-property[v20,'then',-]|30554: \<variable-non-null-undef\>['newResult']|30555: read-variable['makeDeferredSignaler',v23,v22]|30556: read-variable['deferred',v24,-]|30557: read-variable['RESOLVED',v25,-]}" ] 
BB10329 -> BB10330 [tailport=s, headport=n, headlabel="      10330"]
BB10329 -> BB10339 [tailport=s, headport=n, color=gray]
BB10330 [shape=record label="{30558: call-makeDeferredSignaler [v22,v23,v24,v25,v21]}" ] 
BB10330 -> BB10331 [tailport=s, headport=n, headlabel="      10331"]
BB10330 -> BB10339 [tailport=s, headport=n, color=gray]
BB10331 [shape=record label="{30559: read-variable['makeDeferredSignaler',v28,v27]|30560: read-variable['deferred',v29,-]|30561: read-variable['REJECTED',v30,-]}" ] 
BB10331 -> BB10332 [tailport=s, headport=n, headlabel="      10332"]
BB10331 -> BB10339 [tailport=s, headport=n, color=gray]
BB10332 [shape=record label="{30562: call-makeDeferredSignaler [v27,v28,v29,v30,v26]}" ] 
BB10332 -> BB10333 [tailport=s, headport=n, headlabel="      10333"]
BB10332 -> BB10339 [tailport=s, headport=n, color=gray]
BB10333 [shape=record label="{30563: read-variable['makeDeferredSignaler',v33,v32]|30564: read-variable['deferred',v34,-]|30565: read-variable['PROGRESS',v35,-]}" ] 
BB10333 -> BB10334 [tailport=s, headport=n, headlabel="      10334"]
BB10333 -> BB10339 [tailport=s, headport=n, color=gray]
BB10334 [shape=record label="{30566: call-makeDeferredSignaler [v32,v33,v34,v35,v31]}" ] 
BB10334 -> BB10335 [tailport=s, headport=n, headlabel="      10335"]
BB10334 -> BB10339 [tailport=s, headport=n, color=gray]
BB10335 [shape=record label="{30567: call-newResult.then [v20,'then',v21,v26,v31,-]*}" ] 
BB10335 -> BB10336 [tailport=s, headport=n, headlabel="      10336"]
BB10335 -> BB10339 [tailport=s, headport=n, color=gray]
BB10336 [shape=record label="{30568: constant[undefined,v1]}" ] 
BB10336 -> BB10351 [tailport=s, headport=n, headlabel="      10351"]
BB10337 [shape=record label="{30569: read-variable['signalDeferred',v17,v16]|30570: read-variable['deferred',v18,-]|30571: read-variable['RESOLVED',v19,-]|30572: read-variable['newResult',v20,-]}" ] 
BB10337 -> BB10338 [tailport=s, headport=n, headlabel="      10338"]
BB10337 -> BB10339 [tailport=s, headport=n, color=gray]
BB10338 [shape=record label="{30573: call-signalDeferred [v16,v17,v18,v19,v20,-]*}" ] 
BB10338 -> BB10345 [tailport=s, headport=n]
BB10338 -> BB10339 [tailport=s, headport=n, color=gray]
BB10339 [shape=record label="{30574: catch[error,v8]|30575: begin-with[v8]}" ] 
BB10339 -> BB10340 [tailport=s, headport=n, headlabel="      10340"]
BB10339 -> BB10352 [tailport=s, headport=n, color=gray]
BB10340 [shape=record label="{30576: read-variable['signalDeferred',v11,v10]|30577: read-variable['deferred',v12,v9]|30578: read-variable['REJECTED',v13,v9]|30579: read-variable['error',v14,v9]}" ] 
BB10340 -> BB10342 [tailport=s, headport=n, headlabel="      10342"]
BB10340 -> BB10341 [tailport=s, headport=n, color=gray, headlabel="      10341"]
BB10341 [shape=record label="{30580: end-with}" ] 
BB10341 -> BB10352 [tailport=s, headport=n]
BB10342 [shape=record label="{30581: call-signalDeferred [v10,v11,v12,v13,v14,-]*}" ] 
BB10342 -> BB10343 [tailport=s, headport=n, headlabel="      10343"]
BB10342 -> BB10341 [tailport=s, headport=n, color=gray]
BB10343 [shape=record label="{30582: end-with}" ] 
BB10343 -> BB10345 [tailport=s, headport=n]
BB10344 [shape=record label="{30583: call-signalDeferred [v8,v9,v10,v11,v12,-]*}" ] 
BB10344 -> BB10345 [tailport=s, headport=n]
BB10344 -> BB10352 [tailport=s, headport=n, color=gray]
BB10345 [shape=record label="{30584: constant[1.0,v8]|30585: if[v8](true-block:10346,false-block:10351)}" ] 
BB10345 -> BB10346 [tailport=s, headport=n, headlabel="      10346"]
BB10345 -> BB10351 [tailport=s, headport=n]
BB10346 [shape=record label="{30586: read-variable['type',v10,-]|30587: read-variable['REJECTED',v11,-]|30588: ===[v10,v11,v9]|30589: if[v9](true-block:10347,false-block:10348)}" ] 
BB10346 -> BB10348 [tailport=s, headport=n, headlabel="      10348"]
BB10346 -> BB10347 [tailport=s, headport=n, headlabel="      10347"]
BB10346 -> BB10352 [tailport=s, headport=n, color=gray]
BB10347 [shape=record label="{30590: read-variable['Deferred',v12,-]|30591: read-property[v12,'instrumentRejected',v9]|30592: \<variable-non-null-undef\>['Deferred']}" ] 
BB10347 -> BB10348 [tailport=s, headport=n]
BB10347 -> BB10352 [tailport=s, headport=n, color=gray]
BB10348 [shape=record label="{30593: if[v9](true-block:10349,false-block:10351)}" ] 
BB10348 -> BB10349 [tailport=s, headport=n, headlabel="      10349"]
BB10348 -> BB10351 [tailport=s, headport=n]
BB10349 [shape=record label="{30594: read-variable['Deferred',v13,-]|30595: read-property[v13,'instrumentRejected',-]|30596: \<variable-non-null-undef\>['Deferred']|30597: read-variable['result',v14,-]|30598: read-variable['func',v17,-]|30599: ![v17,v16]|30600: ![v16,v15]|30601: read-variable['rejection',v18,-]|30602: read-variable['deferred',v20,-]|30603: read-property[v20,'promise',v19]|30604: \<variable-non-null-undef\>['deferred']}" ] 
BB10349 -> BB10350 [tailport=s, headport=n, headlabel="      10350"]
BB10349 -> BB10352 [tailport=s, headport=n, color=gray]
BB10350 [shape=record label="{30605: call-Deferred.instrumentRejected [v13,'instrumentRejected',v14,v15,v18,v19,-]*}" ] 
BB10350 -> BB10351 [tailport=s, headport=n]
BB10350 -> BB10352 [tailport=s, headport=n, color=gray]
BB10351 [shape=record label="{30606: return[v1]}" ] 
BB10352 [shape=record label="{30607: exceptional-return}" ] 
//#$~ 14526
}
