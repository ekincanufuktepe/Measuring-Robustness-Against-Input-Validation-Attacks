digraph {
rankdir="TD"
BB_entry116[shape=none,label=""];
BB_entry116 -> BB1556 [tailport=s, headport=n, headlabel="    1556"]
BB1556 [shape=record label="{3503: constant[undefined,v1]}" ] 
BB1556 -> BB1557 [tailport=s, headport=n, headlabel="      1557"]
BB1557 [shape=record label="{3504: typeof['obj',v3]|3505: constant[\"function\",v4]|3506: ===[v3,v4,v2]|3507: if[v2](true-block:1558,false-block:1559)}" ] 
BB1557 -> BB1558 [tailport=s, headport=n, headlabel="      1558"]
BB1557 -> BB1559 [tailport=s, headport=n, headlabel="      1559"]
BB1557 -> BB1571 [tailport=s, headport=n, color=gray, headlabel="      1571"]
BB1558 [shape=record label="{3508: read-variable['obj',v8,-]|3509: read-property[v8,'toString',-]|3510: \<variable-non-null-undef\>['obj']}" ] 
BB1558 -> BB1560 [tailport=s, headport=n, headlabel="      1560"]
BB1558 -> BB1571 [tailport=s, headport=n, color=gray]
BB1559 [shape=record label="{3511: typeof['obj',v6]|3512: constant[\"undefined\",v7]|3513: ===[v6,v7,v5]|3514: if[v5](true-block:1565,false-block:1566)}" ] 
BB1559 -> BB1565 [tailport=s, headport=n, headlabel="      1565"]
BB1559 -> BB1566 [tailport=s, headport=n, headlabel="      1566"]
BB1559 -> BB1571 [tailport=s, headport=n, color=gray]
BB1560 [shape=record label="{3515: call-obj.toString [v8,'toString',v6]}" ] 
BB1560 -> BB1561 [tailport=s, headport=n, headlabel="      1561"]
BB1560 -> BB1571 [tailport=s, headport=n, color=gray]
BB1561 [shape=record label="{3516: read-property[v6,'replace',-]|3517: read-variable['RegExp',v10,-]|3518: constant[\" \\\\\\\{[\\\\s\\\\S]*$\",v11]}" ] 
BB1561 -> BB1562 [tailport=s, headport=n, headlabel="      1562"]
BB1561 -> BB1571 [tailport=s, headport=n, color=gray]
BB1562 [shape=record label="{3519: construct [-,v10,v11,v9]}" ] 
BB1562 -> BB1563 [tailport=s, headport=n, headlabel="      1563"]
BB1562 -> BB1571 [tailport=s, headport=n, color=gray]
BB1563 [shape=record label="{3520: constant[\"\",v12]}" ] 
BB1563 -> BB1564 [tailport=s, headport=n, headlabel="      1564"]
BB1564 [shape=record label="{3521: call-null [v6,'replace',v9,v12,v1]}" ] 
BB1564 -> BB1570 [tailport=s, headport=n, headlabel="      1570"]
BB1564 -> BB1571 [tailport=s, headport=n, color=gray]
BB1565 [shape=record label="{3522: constant[\"undefined\",v1]}" ] 
BB1565 -> BB1570 [tailport=s, headport=n]
BB1566 [shape=record label="{3523: typeof['obj',v9]|3524: constant[\"string\",v10]|3525: !==[v9,v10,v8]|3526: if[v8](true-block:1567,false-block:1569)}" ] 
BB1566 -> BB1567 [tailport=s, headport=n, headlabel="      1567"]
BB1566 -> BB1569 [tailport=s, headport=n, headlabel="      1569"]
BB1566 -> BB1571 [tailport=s, headport=n, color=gray]
BB1567 [shape=record label="{3527: read-variable['serializeObject',v12,v11]|3528: read-variable['obj',v13,-]}" ] 
BB1567 -> BB1568 [tailport=s, headport=n, headlabel="      1568"]
BB1567 -> BB1571 [tailport=s, headport=n, color=gray]
BB1568 [shape=record label="{3529: call-serializeObject [v11,v12,v13,v1]}" ] 
BB1568 -> BB1570 [tailport=s, headport=n]
BB1568 -> BB1571 [tailport=s, headport=n, color=gray]
BB1569 [shape=record label="{3530: read-variable['obj',v1,-]}" ] 
BB1569 -> BB1570 [tailport=s, headport=n]
BB1569 -> BB1571 [tailport=s, headport=n, color=gray]
BB1570 [shape=record label="{3531: return[v1]}" ] 
BB1571 [shape=record label="{3532: exceptional-return}" ] 
//#$~ 2241
}
