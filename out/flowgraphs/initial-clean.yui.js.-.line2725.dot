digraph {
rankdir="TD"
BB_entry96[shape=none,label=""];
BB_entry96 -> BB1560 [tailport=s, headport=n, headlabel="    1560"]
BB1560 [shape=record label="{5158: constant[undefined,v1]|5159: vardecl['keys']|5160: vardecl['i']|5161: vardecl['key']|5162: vardecl['len']}" ] 
BB1560 -> BB1561 [tailport=s, headport=n, headlabel="      1561"]
BB1561 [shape=record label="{5163: read-variable['Lang',v5,-]|5164: read-property[v5,'isObject',-]|5165: \<variable-non-null-undef\>['Lang']|5166: read-variable['obj',v6,-]}" ] 
BB1561 -> BB1562 [tailport=s, headport=n, headlabel="      1562"]
BB1561 -> BB1603 [tailport=s, headport=n, color=gray, headlabel="      1603"]
BB1562 [shape=record label="{5167: call-Lang.isObject [v5,'isObject',v6,v3]}" ] 
BB1562 -> BB1563 [tailport=s, headport=n, headlabel="      1563"]
BB1562 -> BB1603 [tailport=s, headport=n, color=gray]
BB1563 [shape=record label="{5168: ![v3,v2]|5169: if[v2](true-block:1564,false-block:1567)}" ] 
BB1563 -> BB1564 [tailport=s, headport=n, headlabel="      1564"]
BB1563 -> BB1567 [tailport=s, headport=n, headlabel="      1567"]
BB1563 -> BB1603 [tailport=s, headport=n, color=gray]
BB1564 [shape=record label="{5170: read-variable['TypeError',v8,-]|5171: constant[\"Object.keys called on a non-object\",v9]}" ] 
BB1564 -> BB1565 [tailport=s, headport=n, headlabel="      1565"]
BB1564 -> BB1603 [tailport=s, headport=n, color=gray]
BB1565 [shape=record label="{5172: construct [-,v8,v9,v7]}" ] 
BB1565 -> BB1566 [tailport=s, headport=n, headlabel="      1566"]
BB1565 -> BB1603 [tailport=s, headport=n, color=gray]
BB1566 [shape=record label="{5173: throw[v7]*}" ] 
BB1566 -> BB1567 [tailport=s, headport=n]
BB1566 -> BB1603 [tailport=s, headport=n, color=gray]
BB1567 [shape=record label="{5174: read-variable['Array',v8,-]}" ] 
BB1567 -> BB1568 [tailport=s, headport=n, headlabel="      1568"]
BB1567 -> BB1603 [tailport=s, headport=n, color=gray]
BB1568 [shape=record label="{5175: construct [-,v8,v7]}" ] 
BB1568 -> BB1569 [tailport=s, headport=n, headlabel="      1569"]
BB1568 -> BB1603 [tailport=s, headport=n, color=gray]
BB1569 [shape=record label="{5176: write-variable[v7,'keys']*|5177: read-variable['hasProtoEnumBug',v9,-]|5178: if[v9](true-block:1570,false-block:1571)}" ] 
BB1569 -> BB1571 [tailport=s, headport=n, headlabel="      1571"]
BB1569 -> BB1570 [tailport=s, headport=n, headlabel="      1570"]
BB1569 -> BB1603 [tailport=s, headport=n, color=gray]
BB1570 [shape=record label="{5179: typeof['obj',v10]|5180: constant[\"function\",v11]|5181: ===[v10,v11,v9]}" ] 
BB1570 -> BB1571 [tailport=s, headport=n]
BB1570 -> BB1603 [tailport=s, headport=n, color=gray]
BB1571 [shape=record label="{5182: if[v9](true-block:1572,false-block:1573)}" ] 
BB1571 -> BB1572 [tailport=s, headport=n, headlabel="      1572"]
BB1571 -> BB1573 [tailport=s, headport=n, headlabel="      1573"]
BB1572 [shape=record label="{5183: read-variable['obj',v11,-]}" ] 
BB1572 -> BB1574 [tailport=s, headport=n, headlabel="      1574"]
BB1572 -> BB1603 [tailport=s, headport=n, color=gray]
BB1573 [shape=record label="{5184: read-variable['obj',v11,-]}" ] 
BB1573 -> BB1584 [tailport=s, headport=n, headlabel="      1584"]
BB1573 -> BB1603 [tailport=s, headport=n, color=gray]
BB1574 [shape=record label="{5185: begin-for-in[v11,v12]}" ] 
BB1574 -> BB1575 [tailport=s, headport=n, headlabel="      1575"]
BB1574 -> BB1603 [tailport=s, headport=n, color=gray]
BB1575 [shape=record label="{5186: has-next[v12,v13]|5187: if[v13](true-block:1576,false-block:1592)}" ] 
BB1575 -> BB1576 [tailport=s, headport=n, headlabel="      1576"]
BB1575 -> BB1592 [tailport=s, headport=n, headlabel="      1592"]
BB1576 [shape=record label="{5188: next-property[v12,v14]|5189: write-variable[v14,'key']|5190: read-variable['owns',v17,v16]|5191: read-variable['obj',v18,-]|5192: read-variable['key',v19,-]}" ] 
BB1576 -> BB1577 [tailport=s, headport=n, headlabel="      1577"]
BB1576 -> BB1603 [tailport=s, headport=n, color=gray]
BB1577 [shape=record label="{5193: call-owns [v16,v17,v18,v19,v15]}" ] 
BB1577 -> BB1578 [tailport=s, headport=n, headlabel="      1578"]
BB1577 -> BB1603 [tailport=s, headport=n, color=gray]
BB1578 [shape=record label="{5194: if[v15](true-block:1579,false-block:1580)}" ] 
BB1578 -> BB1580 [tailport=s, headport=n, headlabel="      1580"]
BB1578 -> BB1579 [tailport=s, headport=n, headlabel="      1579"]
BB1579 [shape=record label="{5195: read-variable['key',v20,-]|5196: constant[\"prototype\",v21]|5197: !==[v20,v21,v15]}" ] 
BB1579 -> BB1580 [tailport=s, headport=n]
BB1579 -> BB1603 [tailport=s, headport=n, color=gray]
BB1580 [shape=record label="{5198: if[v15](true-block:1581,false-block:1583)}" ] 
BB1580 -> BB1581 [tailport=s, headport=n, headlabel="      1581"]
BB1580 -> BB1583 [tailport=s, headport=n, headlabel="      1583"]
BB1581 [shape=record label="{5199: read-variable['keys',v21,-]|5200: read-property[v21,'push',-]|5201: \<variable-non-null-undef\>['keys']|5202: read-variable['key',v22,-]}" ] 
BB1581 -> BB1582 [tailport=s, headport=n, headlabel="      1582"]
BB1581 -> BB1603 [tailport=s, headport=n, color=gray]
BB1582 [shape=record label="{5203: call-keys.push [v21,'push',v22,-]*}" ] 
BB1582 -> BB1583 [tailport=s, headport=n]
BB1582 -> BB1603 [tailport=s, headport=n, color=gray]
BB1583 [shape=record label="{5204: end-for-in(begin-node:5185)}" ] 
BB1583 -> BB1575 [tailport=s, headport=n]
BB1584 [shape=record label="{5205: begin-for-in[v11,v12]}" ] 
BB1584 -> BB1585 [tailport=s, headport=n, headlabel="      1585"]
BB1584 -> BB1603 [tailport=s, headport=n, color=gray]
BB1585 [shape=record label="{5206: has-next[v12,v13]|5207: if[v13](true-block:1586,false-block:1592)}" ] 
BB1585 -> BB1586 [tailport=s, headport=n, headlabel="      1586"]
BB1585 -> BB1592 [tailport=s, headport=n]
BB1586 [shape=record label="{5208: next-property[v12,v14]|5209: write-variable[v14,'key']|5210: read-variable['owns',v17,v16]|5211: read-variable['obj',v18,-]|5212: read-variable['key',v19,-]}" ] 
BB1586 -> BB1587 [tailport=s, headport=n, headlabel="      1587"]
BB1586 -> BB1603 [tailport=s, headport=n, color=gray]
BB1587 [shape=record label="{5213: call-owns [v16,v17,v18,v19,v15]}" ] 
BB1587 -> BB1588 [tailport=s, headport=n, headlabel="      1588"]
BB1587 -> BB1603 [tailport=s, headport=n, color=gray]
BB1588 [shape=record label="{5214: if[v15](true-block:1589,false-block:1591)}" ] 
BB1588 -> BB1589 [tailport=s, headport=n, headlabel="      1589"]
BB1588 -> BB1591 [tailport=s, headport=n, headlabel="      1591"]
BB1589 [shape=record label="{5215: read-variable['keys',v21,-]|5216: read-property[v21,'push',-]|5217: \<variable-non-null-undef\>['keys']|5218: read-variable['key',v22,-]}" ] 
BB1589 -> BB1590 [tailport=s, headport=n, headlabel="      1590"]
BB1589 -> BB1603 [tailport=s, headport=n, color=gray]
BB1590 [shape=record label="{5219: call-keys.push [v21,'push',v22,-]*}" ] 
BB1590 -> BB1591 [tailport=s, headport=n]
BB1590 -> BB1603 [tailport=s, headport=n, color=gray]
BB1591 [shape=record label="{5220: end-for-in(begin-node:5205)}" ] 
BB1591 -> BB1585 [tailport=s, headport=n]
BB1592 [shape=record label="{5221: read-variable['hasEnumBug',v10,-]|5222: if[v10](true-block:1593,false-block:1601)}" ] 
BB1592 -> BB1593 [tailport=s, headport=n, headlabel="      1593"]
BB1592 -> BB1601 [tailport=s, headport=n, headlabel="      1601"]
BB1592 -> BB1603 [tailport=s, headport=n, color=gray]
BB1593 [shape=record label="{5223: constant[0.0,v12]|5224: write-variable[v12,'i']|5225: read-variable['forceEnum',v14,-]|5226: read-property[v14,'length',v13]|5227: \<variable-non-null-undef\>['forceEnum']|5228: write-variable[v13,'len']}" ] 
BB1593 -> BB1594 [tailport=s, headport=n, headlabel="      1594"]
BB1593 -> BB1603 [tailport=s, headport=n, color=gray]
BB1594 [shape=record label="{5229: read-variable['i',v15,-]|5230: read-variable['len',v16,-]|5231: \<[v15,v16,v11]|5232: if[v11](true-block:1595,false-block:1601)}" ] 
BB1594 -> BB1595 [tailport=s, headport=n, headlabel="      1595"]
BB1594 -> BB1601 [tailport=s, headport=n]
BB1594 -> BB1603 [tailport=s, headport=n, color=gray]
BB1595 [shape=record label="{5233: read-variable['forceEnum',v18,-]|5234: read-variable['i',v19,-]|5235: read-property[v18,v19,v17]|5236: \<variable-non-null-undef\>['forceEnum']|5237: write-variable[v17,'key']*|5238: read-variable['owns',v22,v21]|5239: read-variable['obj',v23,-]|5240: read-variable['key',v24,-]}" ] 
BB1595 -> BB1596 [tailport=s, headport=n, headlabel="      1596"]
BB1595 -> BB1603 [tailport=s, headport=n, color=gray]
BB1596 [shape=record label="{5241: call-owns [v21,v22,v23,v24,v20]}" ] 
BB1596 -> BB1597 [tailport=s, headport=n, headlabel="      1597"]
BB1596 -> BB1603 [tailport=s, headport=n, color=gray]
BB1597 [shape=record label="{5242: if[v20](true-block:1598,false-block:1600)}" ] 
BB1597 -> BB1598 [tailport=s, headport=n, headlabel="      1598"]
BB1597 -> BB1600 [tailport=s, headport=n, headlabel="      1600"]
BB1598 [shape=record label="{5243: read-variable['keys',v26,-]|5244: read-property[v26,'push',-]|5245: \<variable-non-null-undef\>['keys']|5246: read-variable['key',v27,-]}" ] 
BB1598 -> BB1599 [tailport=s, headport=n, headlabel="      1599"]
BB1598 -> BB1603 [tailport=s, headport=n, color=gray]
BB1599 [shape=record label="{5247: call-keys.push [v26,'push',v27,-]*}" ] 
BB1599 -> BB1600 [tailport=s, headport=n]
BB1599 -> BB1603 [tailport=s, headport=n, color=gray]
BB1600 [shape=record label="{5248: constant[1.0,v25]|5249: read-variable['i',v26,-]|5250: +[v26,v27]|5251: +[v27,v25,v28]|5252: write-variable[v28,'i']}" ] 
BB1600 -> BB1594 [tailport=s, headport=n]
BB1600 -> BB1603 [tailport=s, headport=n, color=gray]
BB1601 [shape=record label="{5253: read-variable['keys',v1,-]}" ] 
BB1601 -> BB1602 [tailport=s, headport=n, headlabel="      1602"]
BB1601 -> BB1603 [tailport=s, headport=n, color=gray]
BB1602 [shape=record label="{5254: return[v1]}" ] 
BB1603 [shape=record label="{5255: exceptional-return}" ] 
//#$~ 2757
}
