digraph {
rankdir="TD"
BB_entry65[shape=none,label=""];
BB_entry65 -> BB720 [tailport=s, headport=n, headlabel="    720"]
BB720 [shape=record label="{1586: constant[undefined,v1]|1587: vardecl['nodes']|1588: vardecl['excludes']}" ] 
BB720 -> BB721 [tailport=s, headport=n, headlabel="      721"]
BB721 [shape=record label="{1589: read-variable['Array',v3,-]}" ] 
BB721 -> BB722 [tailport=s, headport=n, headlabel="      722"]
BB721 -> BB748 [tailport=s, headport=n, color=gray, headlabel="      748"]
BB722 [shape=record label="{1590: construct [-,v3,v2]}" ] 
BB722 -> BB723 [tailport=s, headport=n, headlabel="      723"]
BB722 -> BB748 [tailport=s, headport=n, color=gray]
BB723 [shape=record label="{1591: write-variable[v2,'nodes']*|1592: read-variable['isFunction',v6,v5]|1593: read-variable['selector',v7,-]}" ] 
BB723 -> BB724 [tailport=s, headport=n, headlabel="      724"]
BB723 -> BB748 [tailport=s, headport=n, color=gray]
BB724 [shape=record label="{1594: call-isFunction [v5,v6,v7,v4]}" ] 
BB724 -> BB725 [tailport=s, headport=n, headlabel="      725"]
BB724 -> BB748 [tailport=s, headport=n, color=gray]
BB725 [shape=record label="{1595: if[v4](true-block:726,false-block:727)}" ] 
BB725 -> BB727 [tailport=s, headport=n, headlabel="      727"]
BB725 -> BB726 [tailport=s, headport=n, headlabel="      726"]
BB726 [shape=record label="{1596: read-variable['selector',v10,-]|1597: read-property[v10,'call',v8]|1598: \<variable-non-null-undef\>['selector']|1599: read-variable['undefined',v9,-]|1600: !==[v8,v9,v4]}" ] 
BB726 -> BB727 [tailport=s, headport=n]
BB726 -> BB748 [tailport=s, headport=n, color=gray]
BB727 [shape=record label="{1601: if[v4](true-block:728,false-block:729)}" ] 
BB727 -> BB728 [tailport=s, headport=n, headlabel="      728"]
BB727 -> BB729 [tailport=s, headport=n, headlabel="      729"]
BB728 [shape=record label="{1602: read-variable['this',v9,-]|1603: read-property[v9,'each',-]|1604: function-expr[function ( idx ),v10]}" ] 
BB728 -> BB730 [tailport=s, headport=n, headlabel="      730"]
BB728 -> BB748 [tailport=s, headport=n, color=gray]
BB729 [shape=record label="{1605: typeof['selector',v10]|1606: constant[\"string\",v11]|1607: ==[v10,v11,v9]|1608: if[v9](true-block:731,false-block:732)}" ] 
BB729 -> BB731 [tailport=s, headport=n, headlabel="      731"]
BB729 -> BB732 [tailport=s, headport=n, headlabel="      732"]
BB729 -> BB748 [tailport=s, headport=n, color=gray]
BB730 [shape=record label="{1609: call-this.each [v9,'each',v10,-]*}" ] 
BB730 -> BB745 [tailport=s, headport=n, headlabel="      745"]
BB730 -> BB748 [tailport=s, headport=n, color=gray]
BB731 [shape=record label="{1610: read-variable['this',v13,-]|1611: read-property[v13,'filter',-]|1612: read-variable['selector',v14,-]}" ] 
BB731 -> BB733 [tailport=s, headport=n, headlabel="      733"]
BB731 -> BB748 [tailport=s, headport=n, color=gray]
BB732 [shape=record label="{1613: read-variable['likeArray',v14,v13]|1614: read-variable['selector',v15,-]}" ] 
BB732 -> BB734 [tailport=s, headport=n, headlabel="      734"]
BB732 -> BB748 [tailport=s, headport=n, color=gray]
BB733 [shape=record label="{1615: call-this.filter [v13,'filter',v14,v8]}" ] 
BB733 -> BB743 [tailport=s, headport=n, headlabel="      743"]
BB733 -> BB748 [tailport=s, headport=n, color=gray]
BB734 [shape=record label="{1616: call-likeArray [v13,v14,v15,v12]}" ] 
BB734 -> BB735 [tailport=s, headport=n, headlabel="      735"]
BB734 -> BB748 [tailport=s, headport=n, color=gray]
BB735 [shape=record label="{1617: if[v12](true-block:736,false-block:738)}" ] 
BB735 -> BB738 [tailport=s, headport=n, headlabel="      738"]
BB735 -> BB736 [tailport=s, headport=n, headlabel="      736"]
BB736 [shape=record label="{1618: read-variable['isFunction',v17,v16]|1619: read-variable['selector',v19,-]|1620: read-property[v19,'item',v18]|1621: \<variable-non-null-undef\>['selector']}" ] 
BB736 -> BB737 [tailport=s, headport=n, headlabel="      737"]
BB736 -> BB748 [tailport=s, headport=n, color=gray]
BB737 [shape=record label="{1622: call-isFunction [v16,v17,v18,v12]}" ] 
BB737 -> BB738 [tailport=s, headport=n]
BB737 -> BB748 [tailport=s, headport=n, color=gray]
BB738 [shape=record label="{1623: if[v12](true-block:739,false-block:740)}" ] 
BB738 -> BB739 [tailport=s, headport=n, headlabel="      739"]
BB738 -> BB740 [tailport=s, headport=n, headlabel="      740"]
BB739 [shape=record label="{1624: read-variable['slice',v17,-]|1625: read-property[v17,'call',-]|1626: \<variable-non-null-undef\>['slice']|1627: read-variable['selector',v18,-]}" ] 
BB739 -> BB741 [tailport=s, headport=n, headlabel="      741"]
BB739 -> BB748 [tailport=s, headport=n, color=gray]
BB740 [shape=record label="{1628: read-variable['$',v17,v16]|1629: read-variable['selector',v18,-]}" ] 
BB740 -> BB742 [tailport=s, headport=n, headlabel="      742"]
BB740 -> BB748 [tailport=s, headport=n, color=gray]
BB741 [shape=record label="{1630: call-slice.call [v17,'call',v18,v8]}" ] 
BB741 -> BB743 [tailport=s, headport=n]
BB741 -> BB748 [tailport=s, headport=n, color=gray]
BB742 [shape=record label="{1631: call-$ [v16,v17,v18,v8]}" ] 
BB742 -> BB743 [tailport=s, headport=n]
BB742 -> BB748 [tailport=s, headport=n, color=gray]
BB743 [shape=record label="{1632: write-variable[v8,'excludes']*|1633: read-variable['this',v13,-]|1634: read-property[v13,'forEach',-]|1635: function-expr[function ( el ),v14]}" ] 
BB743 -> BB744 [tailport=s, headport=n, headlabel="      744"]
BB743 -> BB748 [tailport=s, headport=n, color=gray]
BB744 [shape=record label="{1636: call-this.forEach [v13,'forEach',v14,-]*}" ] 
BB744 -> BB745 [tailport=s, headport=n]
BB744 -> BB748 [tailport=s, headport=n, color=gray]
BB745 [shape=record label="{1637: read-variable['$',v9,v8]|1638: read-variable['nodes',v10,-]}" ] 
BB745 -> BB746 [tailport=s, headport=n, headlabel="      746"]
BB745 -> BB748 [tailport=s, headport=n, color=gray]
BB746 [shape=record label="{1639: call-$ [v8,v9,v10,v1]}" ] 
BB746 -> BB747 [tailport=s, headport=n, headlabel="      747"]
BB746 -> BB748 [tailport=s, headport=n, color=gray]
BB747 [shape=record label="{1640: return[v1]}" ] 
BB748 [shape=record label="{1641: exceptional-return}" ] 
//#$~ 456
}
