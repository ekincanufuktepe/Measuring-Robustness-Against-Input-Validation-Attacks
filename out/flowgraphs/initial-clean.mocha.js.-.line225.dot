digraph {
rankdir="TD"
BB_entry24[shape=none,label=""];
BB_entry24 -> BB242 [tailport=s, headport=n, headlabel="    242"]
BB242 [shape=record label="{786: constant[undefined,v1]|787: vardecl['retLines']|788: vardecl['lines']|789: vardecl['i']|790: vardecl['line']|791: vardecl['lastLine']}" ] 
BB242 -> BB243 [tailport=s, headport=n, headlabel="      243"]
BB243 [shape=record label="{792: read-variable['Array',v3,-]}" ] 
BB243 -> BB244 [tailport=s, headport=n, headlabel="      244"]
BB243 -> BB261 [tailport=s, headport=n, color=gray, headlabel="      261"]
BB244 [shape=record label="{793: construct [-,v3,v2]}" ] 
BB244 -> BB245 [tailport=s, headport=n, headlabel="      245"]
BB244 -> BB261 [tailport=s, headport=n, color=gray]
BB245 [shape=record label="{794: write-variable[v2,'retLines']*|795: read-variable['value',v6,-]|796: read-property[v6,'split',-]|797: \<variable-non-null-undef\>['value']|798: read-variable['RegExp',v8,-]|799: constant[\"^\",v9]|800: constant[\"m\",v10]}" ] 
BB245 -> BB246 [tailport=s, headport=n, headlabel="      246"]
BB245 -> BB261 [tailport=s, headport=n, color=gray]
BB246 [shape=record label="{801: construct [-,v8,v9,v10,v7]}" ] 
BB246 -> BB247 [tailport=s, headport=n, headlabel="      247"]
BB246 -> BB261 [tailport=s, headport=n, color=gray]
BB247 [shape=record label="{802: call-value.split [v6,'split',v7,v4]}" ] 
BB247 -> BB248 [tailport=s, headport=n, headlabel="      248"]
BB247 -> BB261 [tailport=s, headport=n, color=gray]
BB248 [shape=record label="{803: write-variable[v4,'lines']*|804: constant[0.0,v12]|805: write-variable[v12,'i']*}" ] 
BB248 -> BB249 [tailport=s, headport=n, headlabel="      249"]
BB249 [shape=record label="{806: read-variable['i',v13,-]|807: read-variable['lines',v15,-]|808: read-property[v15,'length',v14]|809: \<variable-non-null-undef\>['lines']|810: \<[v13,v14,v11]|811: if[v11](true-block:250,false-block:251)}" ] 
BB249 -> BB250 [tailport=s, headport=n, headlabel="      250"]
BB249 -> BB251 [tailport=s, headport=n, headlabel="      251"]
BB249 -> BB261 [tailport=s, headport=n, color=gray]
BB250 [shape=record label="{812: read-variable['lines',v17,-]|813: read-variable['i',v18,-]|814: read-property[v17,v18,v16]|815: \<variable-non-null-undef\>['lines']|816: write-variable[v16,'line']*|817: read-variable['lines',v20,-]|818: read-variable['i',v22,-]|819: constant[1.0,v23]|820: -[v22,v23,v21]|821: read-property[v20,v21,v19]|822: \<variable-non-null-undef\>['lines']|823: write-variable[v19,'lastLine']*|824: read-variable['line',v25,-]|825: constant[\"\\n\",v26]|826: ==[v25,v26,v24]|827: if[v24](true-block:252,false-block:254)}" ] 
BB250 -> BB254 [tailport=s, headport=n, headlabel="      254"]
BB250 -> BB252 [tailport=s, headport=n, headlabel="      252"]
BB250 -> BB261 [tailport=s, headport=n, color=gray]
BB251 [shape=record label="{828: read-variable['retLines',v1,-]}" ] 
BB251 -> BB260 [tailport=s, headport=n, headlabel="      260"]
BB251 -> BB261 [tailport=s, headport=n, color=gray]
BB252 [shape=record label="{829: read-variable['lastLine',v24,-]|830: if[v24](true-block:253,false-block:254)}" ] 
BB252 -> BB254 [tailport=s, headport=n]
BB252 -> BB253 [tailport=s, headport=n, headlabel="      253"]
BB252 -> BB261 [tailport=s, headport=n, color=gray]
BB253 [shape=record label="{831: read-variable['lastLine',v29,-]|832: read-variable['lastLine',v33,-]|833: read-property[v33,'length',v31]|834: \<variable-non-null-undef\>['lastLine']|835: constant[1.0,v32]|836: -[v31,v32,v30]|837: read-property[v29,v30,v27]|838: \<variable-non-null-undef\>['lastLine']|839: constant[\"\\r\",v28]|840: ===[v27,v28,v24]}" ] 
BB253 -> BB254 [tailport=s, headport=n]
BB253 -> BB261 [tailport=s, headport=n, color=gray]
BB254 [shape=record label="{841: if[v24](true-block:255,false-block:256)}" ] 
BB254 -> BB255 [tailport=s, headport=n, headlabel="      255"]
BB254 -> BB256 [tailport=s, headport=n, headlabel="      256"]
BB255 [shape=record label="{842: read-variable['retLines',v29,-]|843: read-variable['retLines',v33,-]|844: read-property[v33,'length',v31]|845: \<variable-non-null-undef\>['retLines']|846: constant[1.0,v32]|847: -[v31,v32,v30]|848: read-property[v29,v30,v28]|849: \<variable-non-null-undef\>['retLines']|850: constant[\"\\n\",v34]|851: +[v28,v34,v27]|852: write-property[v29,v30,v27]|853: \<variable-non-null-undef\>['retLines']*}" ] 
BB255 -> BB259 [tailport=s, headport=n, headlabel="      259"]
BB255 -> BB261 [tailport=s, headport=n, color=gray]
BB256 [shape=record label="{854: read-variable['line',v27,-]|855: if[v27](true-block:257,false-block:259)}" ] 
BB256 -> BB257 [tailport=s, headport=n, headlabel="      257"]
BB256 -> BB259 [tailport=s, headport=n]
BB256 -> BB261 [tailport=s, headport=n, color=gray]
BB257 [shape=record label="{856: read-variable['retLines',v29,-]|857: read-property[v29,'push',-]|858: \<variable-non-null-undef\>['retLines']|859: read-variable['line',v30,-]}" ] 
BB257 -> BB258 [tailport=s, headport=n, headlabel="      258"]
BB257 -> BB261 [tailport=s, headport=n, color=gray]
BB258 [shape=record label="{860: call-retLines.push [v29,'push',v30,-]*}" ] 
BB258 -> BB259 [tailport=s, headport=n]
BB258 -> BB261 [tailport=s, headport=n, color=gray]
BB259 [shape=record label="{861: constant[1.0,v27]|862: read-variable['i',v28,-]|863: +[v28,v29]|864: +[v29,v27,v30]|865: write-variable[v30,'i']}" ] 
BB259 -> BB249 [tailport=s, headport=n]
BB259 -> BB261 [tailport=s, headport=n, color=gray]
BB260 [shape=record label="{866: return[v1]}" ] 
BB261 [shape=record label="{867: exceptional-return}" ] 
//#$~ 241
}
