digraph {
rankdir="TD"
BB_entry355[shape=none,label=""];
BB_entry355 -> BB3285 [tailport=s, headport=n, headlabel="    3285"]
BB3285 [shape=record label="{9724: constant[undefined,v1]|9725: vardecl['args']|9726: vardecl['self']|9727: vardecl['patterns']|9728: vardecl['item']|9729: vardecl['method']|9730: vardecl['sig']|9731: vardecl['matches']|9732: vardecl['i']}" ] 
BB3285 -> BB3286 [tailport=s, headport=n, headlabel="      3286"]
BB3286 [shape=record label="{9733: read-variable['arguments',v2,-]|9734: write-variable[v2,'args']*|9735: read-variable['this',v3,-]|9736: write-variable[v3,'self']*|9737: read-variable['self',v6,-]|9738: read-property[v6,'getPatterns',-]|9739: \<variable-non-null-undef\>['self']}" ] 
BB3286 -> BB3287 [tailport=s, headport=n, headlabel="      3287"]
BB3286 -> BB3315 [tailport=s, headport=n, color=gray, headlabel="      3315"]
BB3287 [shape=record label="{9740: call-self.getPatterns [v6,'getPatterns',v4]}" ] 
BB3287 -> BB3288 [tailport=s, headport=n, headlabel="      3288"]
BB3287 -> BB3315 [tailport=s, headport=n, color=gray]
BB3288 [shape=record label="{9741: write-variable[v4,'patterns']*|9742: read-variable['patterns',v8,-]}" ] 
BB3288 -> BB3289 [tailport=s, headport=n, headlabel="      3289"]
BB3288 -> BB3315 [tailport=s, headport=n, color=gray]
BB3289 [shape=record label="{9743: begin-for-in[v8,v9]}" ] 
BB3289 -> BB3290 [tailport=s, headport=n, headlabel="      3290"]
BB3289 -> BB3315 [tailport=s, headport=n, color=gray]
BB3290 [shape=record label="{9744: has-next[v9,v10]|9745: if[v10](true-block:3291,false-block:3313)}" ] 
BB3290 -> BB3291 [tailport=s, headport=n, headlabel="      3291"]
BB3290 -> BB3313 [tailport=s, headport=n, headlabel="      3313"]
BB3291 [shape=record label="{9746: next-property[v9,v11]|9747: write-variable[v11,'item']|9748: read-variable['patterns',v14,-]|9749: read-property[v14,'hasOwnProperty',-]|9750: \<variable-non-null-undef\>['patterns']|9751: read-variable['item',v15,-]}" ] 
BB3291 -> BB3292 [tailport=s, headport=n, headlabel="      3292"]
BB3291 -> BB3315 [tailport=s, headport=n, color=gray]
BB3292 [shape=record label="{9752: call-patterns.hasOwnProperty [v14,'hasOwnProperty',v15,v12]}" ] 
BB3292 -> BB3293 [tailport=s, headport=n, headlabel="      3293"]
BB3292 -> BB3315 [tailport=s, headport=n, color=gray]
BB3293 [shape=record label="{9753: if[v12](true-block:3294,false-block:3312)}" ] 
BB3293 -> BB3294 [tailport=s, headport=n, headlabel="      3294"]
BB3293 -> BB3312 [tailport=s, headport=n, headlabel="      3312"]
BB3294 [shape=record label="{9754: read-variable['patterns',v17,-]|9755: read-variable['item',v18,-]|9756: read-property[v17,v18,v16]|9757: \<variable-non-null-undef\>['patterns']|9758: write-variable[v16,'method']*|9759: read-variable['method',v20,-]|9760: read-property[v20,'signature',v19]|9761: \<variable-non-null-undef\>['method']|9762: write-variable[v19,'sig']*|9763: constant[0.0,v21]|9764: write-variable[v21,'matches']*|9765: read-variable['sig',v25,-]|9766: read-property[v25,'length',v23]|9767: \<variable-non-null-undef\>['sig']|9768: read-variable['args',v26,-]|9769: read-property[v26,'length',v24]|9770: \<variable-non-null-undef\>['args']|9771: ==[v23,v24,v22]|9772: if[v22](true-block:3295,false-block:3312)}" ] 
BB3294 -> BB3295 [tailport=s, headport=n, headlabel="      3295"]
BB3294 -> BB3312 [tailport=s, headport=n]
BB3294 -> BB3315 [tailport=s, headport=n, color=gray]
BB3295 [shape=record label="{9773: read-variable['sig',v30,-]|9774: read-property[v30,'length',v28]|9775: \<variable-non-null-undef\>['sig']|9776: constant[0.0,v29]|9777: \>[v28,v29,v27]|9778: if[v27](true-block:3296,false-block:3310)}" ] 
BB3295 -> BB3296 [tailport=s, headport=n, headlabel="      3296"]
BB3295 -> BB3310 [tailport=s, headport=n, headlabel="      3310"]
BB3295 -> BB3315 [tailport=s, headport=n, color=gray]
BB3296 [shape=record label="{9779: constant[0.0,v32]|9780: write-variable[v32,'i']*}" ] 
BB3296 -> BB3297 [tailport=s, headport=n, headlabel="      3297"]
BB3297 [shape=record label="{9781: read-variable['i',v33,-]|9782: read-variable['sig',v35,-]|9783: read-property[v35,'length',v34]|9784: \<variable-non-null-undef\>['sig']|9785: \<[v33,v34,v31]|9786: if[v31](true-block:3298,false-block:3310)}" ] 
BB3297 -> BB3298 [tailport=s, headport=n, headlabel="      3298"]
BB3297 -> BB3310 [tailport=s, headport=n]
BB3297 -> BB3315 [tailport=s, headport=n, color=gray]
BB3298 [shape=record label="{9787: read-variable['sig',v39,-]|9788: read-variable['i',v40,-]|9789: read-property[v39,v40,v37]|9790: \<variable-non-null-undef\>['sig']|9791: read-variable['Joose',v41,-]|9792: read-property[v41,'TypeConstraint',v38]|9793: \<variable-non-null-undef\>['Joose']|9794: instanceof[v37,v38,v36]|9795: if[v36](true-block:3299,false-block:3301)}" ] 
BB3298 -> BB3301 [tailport=s, headport=n, headlabel="      3301"]
BB3298 -> BB3299 [tailport=s, headport=n, headlabel="      3299"]
BB3298 -> BB3315 [tailport=s, headport=n, color=gray]
BB3299 [shape=record label="{9796: read-variable['sig',v44,-]|9797: read-variable['i',v45,-]|9798: read-property[v44,v45,v43]|9799: \<variable-non-null-undef\>['sig']|9800: read-property[v43,'validateBool',-]|9801: \<property-non-null-undef\>[v44,v45]|9802: read-variable['args',v47,-]|9803: read-variable['i',v48,-]|9804: read-property[v47,v48,v46]|9805: \<variable-non-null-undef\>['args']}" ] 
BB3299 -> BB3300 [tailport=s, headport=n, headlabel="      3300"]
BB3299 -> BB3315 [tailport=s, headport=n, color=gray]
BB3300 [shape=record label="{9806: call-null [v43,'validateBool',v46,v36]}" ] 
BB3300 -> BB3301 [tailport=s, headport=n]
BB3300 -> BB3315 [tailport=s, headport=n, color=gray]
BB3301 [shape=record label="{9807: if[v36](true-block:3302,false-block:3303)}" ] 
BB3301 -> BB3302 [tailport=s, headport=n, headlabel="      3302"]
BB3301 -> BB3303 [tailport=s, headport=n, headlabel="      3303"]
BB3302 [shape=record label="{9808: constant[1.0,v42]|9809: read-variable['matches',v43,-]|9810: +[v43,v44]|9811: +[v44,v42,v45]|9812: write-variable[v45,'matches']*}" ] 
BB3302 -> BB3309 [tailport=s, headport=n, headlabel="      3309"]
BB3302 -> BB3315 [tailport=s, headport=n, color=gray]
BB3303 [shape=record label="{9813: read-variable['sig',v45,-]|9814: read-variable['i',v46,-]|9815: read-property[v45,v46,v43]|9816: \<variable-non-null-undef\>['sig']|9817: read-variable['Object',v44,-]|9818: instanceof[v43,v44,v42]|9819: if[v42](true-block:3304,false-block:3305)}" ] 
BB3303 -> BB3305 [tailport=s, headport=n, headlabel="      3305"]
BB3303 -> BB3304 [tailport=s, headport=n, headlabel="      3304"]
BB3303 -> BB3315 [tailport=s, headport=n, color=gray]
BB3304 [shape=record label="{9820: read-variable['args',v49,-]|9821: read-variable['i',v50,-]|9822: read-property[v49,v50,v47]|9823: \<variable-non-null-undef\>['args']|9824: read-variable['sig',v51,-]|9825: read-variable['i',v52,-]|9826: read-property[v51,v52,v48]|9827: \<variable-non-null-undef\>['sig']|9828: instanceof[v47,v48,v42]}" ] 
BB3304 -> BB3305 [tailport=s, headport=n]
BB3304 -> BB3315 [tailport=s, headport=n, color=gray]
BB3305 [shape=record label="{9829: if[v42](true-block:3306,false-block:3307)}" ] 
BB3305 -> BB3306 [tailport=s, headport=n, headlabel="      3306"]
BB3305 -> BB3307 [tailport=s, headport=n, headlabel="      3307"]
BB3306 [shape=record label="{9830: constant[1.0,v47]|9831: read-variable['matches',v48,-]|9832: +[v48,v49]|9833: +[v49,v47,v50]|9834: write-variable[v50,'matches']*}" ] 
BB3306 -> BB3309 [tailport=s, headport=n]
BB3306 -> BB3315 [tailport=s, headport=n, color=gray]
BB3307 [shape=record label="{9835: read-variable['args',v50,-]|9836: read-variable['i',v51,-]|9837: read-property[v50,v51,v48]|9838: \<variable-non-null-undef\>['args']|9839: read-variable['sig',v52,-]|9840: read-variable['i',v53,-]|9841: read-property[v52,v53,v49]|9842: \<variable-non-null-undef\>['sig']|9843: ==[v48,v49,v47]|9844: if[v47](true-block:3308,false-block:3309)}" ] 
BB3307 -> BB3308 [tailport=s, headport=n, headlabel="      3308"]
BB3307 -> BB3309 [tailport=s, headport=n]
BB3307 -> BB3315 [tailport=s, headport=n, color=gray]
BB3308 [shape=record label="{9845: constant[1.0,v54]|9846: read-variable['matches',v55,-]|9847: +[v55,v56]|9848: +[v56,v54,v57]|9849: write-variable[v57,'matches']*}" ] 
BB3308 -> BB3309 [tailport=s, headport=n]
BB3308 -> BB3315 [tailport=s, headport=n, color=gray]
BB3309 [shape=record label="{9850: constant[1.0,v42]|9851: read-variable['i',v43,-]|9852: +[v43,v44]|9853: +[v44,v42,v45]|9854: write-variable[v45,'i']}" ] 
BB3309 -> BB3297 [tailport=s, headport=n]
BB3309 -> BB3315 [tailport=s, headport=n, color=gray]
BB3310 [shape=record label="{9855: read-variable['matches',v32,-]|9856: read-variable['sig',v34,-]|9857: read-property[v34,'length',v33]|9858: \<variable-non-null-undef\>['sig']|9859: ==[v32,v33,v31]|9860: if[v31](true-block:3311,false-block:3312)}" ] 
BB3310 -> BB3311 [tailport=s, headport=n, headlabel="      3311"]
BB3310 -> BB3312 [tailport=s, headport=n]
BB3310 -> BB3315 [tailport=s, headport=n, color=gray]
BB3311 [shape=record label="{9861: read-variable['method',v35,-]|9862: read-property[v35,'method',v1]|9863: \<variable-non-null-undef\>['method']}" ] 
BB3311 -> BB3314 [tailport=s, headport=n, headlabel="      3314"]
BB3311 -> BB3315 [tailport=s, headport=n, color=gray]
BB3312 [shape=record label="{9864: end-for-in(begin-node:9743)}" ] 
BB3312 -> BB3290 [tailport=s, headport=n]
BB3313 [shape=record label="{9865: function-expr[function ( ),v1]}" ] 
BB3313 -> BB3314 [tailport=s, headport=n]
BB3314 [shape=record label="{9866: return[v1]}" ] 
BB3315 [shape=record label="{9867: exceptional-return}" ] 
//#$~ 3779
}
