digraph {
rankdir="TD"
BB_entry393[shape=none,label=""];
BB_entry393 -> BB4987 [tailport=s, headport=n, headlabel="    4987"]
BB4987 [shape=record label="{16768: constant[undefined,v1]|16769: vardecl['viewId']}" ] 
BB4987 -> BB4988 [tailport=s, headport=n, headlabel="      4988"]
BB4988 [shape=record label="{16770: read-variable['view',v4,v2]|16771: read-property[v4,'_morph',v3]|16772: \<variable-non-null-undef\>['view']|16773: if[v3](true-block:4990,false-block:4989)}" ] 
BB4988 -> BB4990 [tailport=s, headport=n, headlabel="      4990"]
BB4988 -> BB4989 [tailport=s, headport=n, headlabel="      4989"]
BB4988 -> BB5002 [tailport=s, headport=n, color=gray, headlabel="      5002"]
BB4989 [shape=record label="{16774: read-variable['view',v4,v2]|16775: read-property[v4,'_elementCreated',v3]|16776: \<variable-non-null-undef\>['view']}" ] 
BB4989 -> BB4990 [tailport=s, headport=n]
BB4989 -> BB5002 [tailport=s, headport=n, color=gray]
BB4990 [shape=record label="{16777: if[v3](true-block:4991,false-block:4994)}" ] 
BB4990 -> BB4991 [tailport=s, headport=n, headlabel="      4991"]
BB4990 -> BB4994 [tailport=s, headport=n, headlabel="      4994"]
BB4991 [shape=record label="{16778: read-variable['Error',v5,-]|16779: constant[\"You cannot insert a View that has already been rendered\",v6]}" ] 
BB4991 -> BB4992 [tailport=s, headport=n, headlabel="      4992"]
BB4991 -> BB5002 [tailport=s, headport=n, color=gray]
BB4992 [shape=record label="{16780: construct [-,v5,v6,v4]}" ] 
BB4992 -> BB4993 [tailport=s, headport=n, headlabel="      4993"]
BB4992 -> BB5002 [tailport=s, headport=n, color=gray]
BB4993 [shape=record label="{16781: throw[v4]*}" ] 
BB4993 -> BB4994 [tailport=s, headport=n]
BB4993 -> BB5002 [tailport=s, headport=n, color=gray]
BB4994 [shape=record label="{16782: read-variable['Ember',v5,-]|16783: read-property[v5,'assert',-]|16784: \<variable-non-null-undef\>['Ember']|16785: constant[\"You cannot insert a View without a morph\",v6]|16786: read-variable['morph',v7,v2]}" ] 
BB4994 -> BB4995 [tailport=s, headport=n, headlabel="      4995"]
BB4994 -> BB5002 [tailport=s, headport=n, color=gray]
BB4995 [shape=record label="{16787: call-Ember.assert [v5,'assert',v6,v7,-]*}" ] 
BB4995 -> BB4996 [tailport=s, headport=n, headlabel="      4996"]
BB4995 -> BB5002 [tailport=s, headport=n, color=gray]
BB4996 [shape=record label="{16788: read-variable['view',v9,v2]|16789: read-variable['morph',v8,v2]|16790: write-property[v9,'_morph',v8]|16791: \<variable-non-null-undef\>['view']*|16792: read-variable['this',v12,-]|16793: read-property[v12,'uuid',-]|16794: read-variable['view',v13,v2]}" ] 
BB4996 -> BB4997 [tailport=s, headport=n, headlabel="      4997"]
BB4996 -> BB5002 [tailport=s, headport=n, color=gray]
BB4997 [shape=record label="{16795: call-this.uuid [v12,'uuid',v13,v10]}" ] 
BB4997 -> BB4998 [tailport=s, headport=n, headlabel="      4998"]
BB4997 -> BB5002 [tailport=s, headport=n, color=gray]
BB4998 [shape=record label="{16796: write-variable[v10,'viewId']*|16797: read-variable['this',v17,-]|16798: read-property[v17,'_inserts',v15]|16799: read-variable['viewId',v16,v2]|16800: read-variable['this',v19,-]|16801: read-property[v19,'scheduleRender',-]|16802: read-variable['this',v20,-]|16803: function-expr[function scheduledRenderTree ( ),v21]}" ] 
BB4998 -> BB4999 [tailport=s, headport=n, headlabel="      4999"]
BB4998 -> BB5002 [tailport=s, headport=n, color=gray]
BB4999 [shape=record label="{16804: call-this.scheduleRender [v19,'scheduleRender',v20,v21,v14]}" ] 
BB4999 -> BB5000 [tailport=s, headport=n, headlabel="      5000"]
BB4999 -> BB5002 [tailport=s, headport=n, color=gray]
BB5000 [shape=record label="{16805: write-property[v15,v16,v14]|16806: \<property-non-null-undef\>[v17,'_inserts']*}" ] 
BB5000 -> BB5001 [tailport=s, headport=n, headlabel="      5001"]
BB5000 -> BB5002 [tailport=s, headport=n, color=gray]
BB5001 [shape=record label="{16807: return[v1]}" ] 
BB5002 [shape=record label="{16808: exceptional-return}" ] 
//#$~ 8941
}
