digraph {
rankdir="TD"
BB_entry52[shape=none,label=""];
BB_entry52 -> BB479 [tailport=s, headport=n, headlabel="    479"]
BB479 [shape=record label="{1099: constant[undefined,v1]|1100: vardecl['index']|1101: vardecl['emptyObject']|1102: vardecl['result']|1103: vardecl['key']|1104: vardecl['i']|1105: vardecl['h']}" ] 
BB479 -> BB480 [tailport=s, headport=n, headlabel="      480"]
BB480 [shape=record label="{1106: read-variable['isWindow',v4,v3]|1107: read-variable['source',v5,-]}" ] 
BB480 -> BB481 [tailport=s, headport=n, headlabel="      481"]
BB480 -> BB615 [tailport=s, headport=n, color=gray, headlabel="      615"]
BB481 [shape=record label="{1108: call-isWindow [v3,v4,v5,v2]}" ] 
BB481 -> BB482 [tailport=s, headport=n, headlabel="      482"]
BB481 -> BB615 [tailport=s, headport=n, color=gray]
BB482 [shape=record label="{1109: if[v2](true-block:485,false-block:483)}" ] 
BB482 -> BB485 [tailport=s, headport=n, headlabel="      485"]
BB482 -> BB483 [tailport=s, headport=n, headlabel="      483"]
BB483 [shape=record label="{1110: read-variable['isScope',v4,v3]|1111: read-variable['source',v5,-]}" ] 
BB483 -> BB484 [tailport=s, headport=n, headlabel="      484"]
BB483 -> BB615 [tailport=s, headport=n, color=gray]
BB484 [shape=record label="{1112: call-isScope [v3,v4,v5,v2]}" ] 
BB484 -> BB485 [tailport=s, headport=n]
BB484 -> BB615 [tailport=s, headport=n, color=gray]
BB485 [shape=record label="{1113: if[v2](true-block:486,false-block:489)}" ] 
BB485 -> BB486 [tailport=s, headport=n, headlabel="      486"]
BB485 -> BB489 [tailport=s, headport=n, headlabel="      489"]
BB486 [shape=record label="{1114: read-variable['ngMinErr',v5,v4]|1115: constant[\"cpws\",v6]|1116: constant[\"Can't copy! Making copies of Window or Scope instances is not supported.\",v7]}" ] 
BB486 -> BB487 [tailport=s, headport=n, headlabel="      487"]
BB486 -> BB615 [tailport=s, headport=n, color=gray]
BB487 [shape=record label="{1117: call-ngMinErr [v4,v5,v6,v7,v3]}" ] 
BB487 -> BB488 [tailport=s, headport=n, headlabel="      488"]
BB487 -> BB615 [tailport=s, headport=n, color=gray]
BB488 [shape=record label="{1118: throw[v3]*}" ] 
BB488 -> BB489 [tailport=s, headport=n]
BB488 -> BB615 [tailport=s, headport=n, color=gray]
BB489 [shape=record label="{1119: read-variable['isTypedArray',v5,v4]|1120: read-variable['destination',v6,-]}" ] 
BB489 -> BB490 [tailport=s, headport=n, headlabel="      490"]
BB489 -> BB615 [tailport=s, headport=n, color=gray]
BB490 [shape=record label="{1121: call-isTypedArray [v4,v5,v6,v3]}" ] 
BB490 -> BB491 [tailport=s, headport=n, headlabel="      491"]
BB490 -> BB615 [tailport=s, headport=n, color=gray]
BB491 [shape=record label="{1122: if[v3](true-block:492,false-block:495)}" ] 
BB491 -> BB492 [tailport=s, headport=n, headlabel="      492"]
BB491 -> BB495 [tailport=s, headport=n, headlabel="      495"]
BB492 [shape=record label="{1123: read-variable['ngMinErr',v9,v8]|1124: constant[\"cpta\",v10]|1125: constant[\"Can't copy! TypedArray destination cannot be mutated.\",v11]}" ] 
BB492 -> BB493 [tailport=s, headport=n, headlabel="      493"]
BB492 -> BB615 [tailport=s, headport=n, color=gray]
BB493 [shape=record label="{1126: call-ngMinErr [v8,v9,v10,v11,v7]}" ] 
BB493 -> BB494 [tailport=s, headport=n, headlabel="      494"]
BB493 -> BB615 [tailport=s, headport=n, color=gray]
BB494 [shape=record label="{1127: throw[v7]*}" ] 
BB494 -> BB495 [tailport=s, headport=n]
BB494 -> BB615 [tailport=s, headport=n, color=gray]
BB495 [shape=record label="{1128: read-variable['destination',v8,-]|1129: ![v8,v7]|1130: if[v7](true-block:496,false-block:497)}" ] 
BB495 -> BB496 [tailport=s, headport=n, headlabel="      496"]
BB495 -> BB497 [tailport=s, headport=n, headlabel="      497"]
BB495 -> BB615 [tailport=s, headport=n, color=gray]
BB496 [shape=record label="{1131: read-variable['source',v9,-]|1132: write-variable[v9,'destination']*|1133: read-variable['isObject',v12,v11]|1134: read-variable['source',v13,-]}" ] 
BB496 -> BB498 [tailport=s, headport=n, headlabel="      498"]
BB496 -> BB615 [tailport=s, headport=n, color=gray]
BB497 [shape=record label="{1135: read-variable['source',v10,-]|1136: read-variable['destination',v11,-]|1137: ===[v10,v11,v9]|1138: if[v9](true-block:547,false-block:550)}" ] 
BB497 -> BB547 [tailport=s, headport=n, headlabel="      547"]
BB497 -> BB550 [tailport=s, headport=n, headlabel="      550"]
BB497 -> BB615 [tailport=s, headport=n, color=gray]
BB498 [shape=record label="{1139: call-isObject [v11,v12,v13,v10]}" ] 
BB498 -> BB499 [tailport=s, headport=n, headlabel="      499"]
BB498 -> BB615 [tailport=s, headport=n, color=gray]
BB499 [shape=record label="{1140: if[v10](true-block:500,false-block:613)}" ] 
BB499 -> BB500 [tailport=s, headport=n, headlabel="      500"]
BB499 -> BB613 [tailport=s, headport=n, headlabel="      613"]
BB500 [shape=record label="{1141: read-variable['stackSource',v14,-]|1142: if[v14](true-block:501,false-block:504)}" ] 
BB500 -> BB504 [tailport=s, headport=n, headlabel="      504"]
BB500 -> BB501 [tailport=s, headport=n, headlabel="      501"]
BB500 -> BB615 [tailport=s, headport=n, color=gray]
BB501 [shape=record label="{1143: read-variable['stackSource',v18,-]|1144: read-property[v18,'indexOf',-]|1145: \<variable-non-null-undef\>['stackSource']|1146: read-variable['source',v19,-]}" ] 
BB501 -> BB502 [tailport=s, headport=n, headlabel="      502"]
BB501 -> BB615 [tailport=s, headport=n, color=gray]
BB502 [shape=record label="{1147: call-stackSource.indexOf [v18,'indexOf',v19,v15]}" ] 
BB502 -> BB503 [tailport=s, headport=n, headlabel="      503"]
BB502 -> BB615 [tailport=s, headport=n, color=gray]
BB503 [shape=record label="{1148: write-variable[v15,'index']|1149: constant[-1.0,v16]|1150: !==[v15,v16,v14]}" ] 
BB503 -> BB504 [tailport=s, headport=n]
BB503 -> BB615 [tailport=s, headport=n, color=gray]
BB504 [shape=record label="{1151: if[v14](true-block:505,false-block:506)}" ] 
BB504 -> BB505 [tailport=s, headport=n, headlabel="      505"]
BB504 -> BB506 [tailport=s, headport=n, headlabel="      506"]
BB505 [shape=record label="{1152: read-variable['stackDest',v15,-]|1153: read-variable['index',v16,-]|1154: read-property[v15,v16,v1]|1155: \<variable-non-null-undef\>['stackDest']}" ] 
BB505 -> BB614 [tailport=s, headport=n, headlabel="      614"]
BB505 -> BB615 [tailport=s, headport=n, color=gray]
BB506 [shape=record label="{1156: read-variable['isArray',v17,v16]|1157: read-variable['source',v18,-]}" ] 
BB506 -> BB507 [tailport=s, headport=n, headlabel="      507"]
BB506 -> BB615 [tailport=s, headport=n, color=gray]
BB507 [shape=record label="{1158: call-isArray [v16,v17,v18,v15]}" ] 
BB507 -> BB508 [tailport=s, headport=n, headlabel="      508"]
BB507 -> BB615 [tailport=s, headport=n, color=gray]
BB508 [shape=record label="{1159: if[v15](true-block:509,false-block:510)}" ] 
BB508 -> BB509 [tailport=s, headport=n, headlabel="      509"]
BB508 -> BB510 [tailport=s, headport=n, headlabel="      510"]
BB509 [shape=record label="{1160: read-variable['copy',v20,v19]|1161: read-variable['source',v21,-]|1162: read-variable['Array',v23,-]}" ] 
BB509 -> BB511 [tailport=s, headport=n, headlabel="      511"]
BB509 -> BB615 [tailport=s, headport=n, color=gray]
BB510 [shape=record label="{1163: read-variable['isTypedArray',v21,v20]|1164: read-variable['source',v22,-]}" ] 
BB510 -> BB514 [tailport=s, headport=n, headlabel="      514"]
BB510 -> BB615 [tailport=s, headport=n, color=gray]
BB511 [shape=record label="{1165: construct [-,v23,v22]}" ] 
BB511 -> BB512 [tailport=s, headport=n, headlabel="      512"]
BB511 -> BB615 [tailport=s, headport=n, color=gray]
BB512 [shape=record label="{1166: read-variable['stackSource',v24,-]|1167: read-variable['stackDest',v25,-]}" ] 
BB512 -> BB513 [tailport=s, headport=n, headlabel="      513"]
BB512 -> BB615 [tailport=s, headport=n, color=gray]
BB513 [shape=record label="{1168: call-copy [v19,v20,v21,v22,v24,v25,v1]}" ] 
BB513 -> BB614 [tailport=s, headport=n]
BB513 -> BB615 [tailport=s, headport=n, color=gray]
BB514 [shape=record label="{1169: call-isTypedArray [v20,v21,v22,v19]}" ] 
BB514 -> BB515 [tailport=s, headport=n, headlabel="      515"]
BB514 -> BB615 [tailport=s, headport=n, color=gray]
BB515 [shape=record label="{1170: if[v19](true-block:516,false-block:517)}" ] 
BB515 -> BB516 [tailport=s, headport=n, headlabel="      516"]
BB515 -> BB517 [tailport=s, headport=n, headlabel="      517"]
BB516 [shape=record label="{1171: read-variable['source',v25,-]|1172: read-property[v25,'constructor',-]|1173: \<variable-non-null-undef\>['source']|1174: read-variable['source',v26,-]}" ] 
BB516 -> BB518 [tailport=s, headport=n, headlabel="      518"]
BB516 -> BB615 [tailport=s, headport=n, color=gray]
BB517 [shape=record label="{1175: read-variable['isDate',v25,v24]|1176: read-variable['source',v26,-]}" ] 
BB517 -> BB520 [tailport=s, headport=n, headlabel="      520"]
BB517 -> BB615 [tailport=s, headport=n, color=gray]
BB518 [shape=record label="{1177: construct [v25,'constructor',v26,v23]}" ] 
BB518 -> BB519 [tailport=s, headport=n, headlabel="      519"]
BB518 -> BB615 [tailport=s, headport=n, color=gray]
BB519 [shape=record label="{1178: write-variable[v23,'destination']*}" ] 
BB519 -> BB542 [tailport=s, headport=n, headlabel="      542"]
BB520 [shape=record label="{1179: call-isDate [v24,v25,v26,v23]}" ] 
BB520 -> BB521 [tailport=s, headport=n, headlabel="      521"]
BB520 -> BB615 [tailport=s, headport=n, color=gray]
BB521 [shape=record label="{1180: if[v23](true-block:522,false-block:523)}" ] 
BB521 -> BB522 [tailport=s, headport=n, headlabel="      522"]
BB521 -> BB523 [tailport=s, headport=n, headlabel="      523"]
BB522 [shape=record label="{1181: read-variable['Date',v28,-]|1182: read-variable['source',v31,-]|1183: read-property[v31,'getTime',-]|1184: \<variable-non-null-undef\>['source']}" ] 
BB522 -> BB524 [tailport=s, headport=n, headlabel="      524"]
BB522 -> BB615 [tailport=s, headport=n, color=gray]
BB523 [shape=record label="{1185: read-variable['isRegExp',v29,v28]|1186: read-variable['source',v30,-]}" ] 
BB523 -> BB527 [tailport=s, headport=n, headlabel="      527"]
BB523 -> BB615 [tailport=s, headport=n, color=gray]
BB524 [shape=record label="{1187: call-source.getTime [v31,'getTime',v29]}" ] 
BB524 -> BB525 [tailport=s, headport=n, headlabel="      525"]
BB524 -> BB615 [tailport=s, headport=n, color=gray]
BB525 [shape=record label="{1188: construct [-,v28,v29,v27]}" ] 
BB525 -> BB526 [tailport=s, headport=n, headlabel="      526"]
BB525 -> BB615 [tailport=s, headport=n, color=gray]
BB526 [shape=record label="{1189: write-variable[v27,'destination']*}" ] 
BB526 -> BB542 [tailport=s, headport=n]
BB527 [shape=record label="{1190: call-isRegExp [v28,v29,v30,v27]}" ] 
BB527 -> BB528 [tailport=s, headport=n, headlabel="      528"]
BB527 -> BB615 [tailport=s, headport=n, color=gray]
BB528 [shape=record label="{1191: if[v27](true-block:529,false-block:530)}" ] 
BB528 -> BB529 [tailport=s, headport=n, headlabel="      529"]
BB528 -> BB530 [tailport=s, headport=n, headlabel="      530"]
BB529 [shape=record label="{1192: read-variable['RegExp',v32,-]|1193: read-variable['source',v34,-]|1194: read-property[v34,'source',v33]|1195: \<variable-non-null-undef\>['source']|1196: read-variable['source',v40,-]|1197: read-property[v40,'toString',-]|1198: \<variable-non-null-undef\>['source']}" ] 
BB529 -> BB531 [tailport=s, headport=n, headlabel="      531"]
BB529 -> BB615 [tailport=s, headport=n, color=gray]
BB530 [shape=record label="{1199: read-variable['Object',v33,-]|1200: read-property[v33,'create',-]|1201: \<variable-non-null-undef\>['Object']|1202: read-variable['getPrototypeOf',v36,v35]|1203: read-variable['source',v37,-]}" ] 
BB530 -> BB538 [tailport=s, headport=n, headlabel="      538"]
BB530 -> BB615 [tailport=s, headport=n, color=gray]
BB531 [shape=record label="{1204: call-source.toString [v40,'toString',v38]}" ] 
BB531 -> BB532 [tailport=s, headport=n, headlabel="      532"]
BB531 -> BB615 [tailport=s, headport=n, color=gray]
BB532 [shape=record label="{1205: read-property[v38,'match',-]|1206: read-variable['RegExp',v42,-]|1207: constant[\"[^\\\\/]*$\",v43]}" ] 
BB532 -> BB533 [tailport=s, headport=n, headlabel="      533"]
BB532 -> BB615 [tailport=s, headport=n, color=gray]
BB533 [shape=record label="{1208: construct [-,v42,v43,v41]}" ] 
BB533 -> BB534 [tailport=s, headport=n, headlabel="      534"]
BB533 -> BB615 [tailport=s, headport=n, color=gray]
BB534 [shape=record label="{1209: call-null [v38,'match',v41,v36]}" ] 
BB534 -> BB535 [tailport=s, headport=n, headlabel="      535"]
BB534 -> BB615 [tailport=s, headport=n, color=gray]
BB535 [shape=record label="{1210: constant[0.0,v44]|1211: read-property[v36,v44,v35]}" ] 
BB535 -> BB536 [tailport=s, headport=n, headlabel="      536"]
BB535 -> BB615 [tailport=s, headport=n, color=gray]
BB536 [shape=record label="{1212: construct [-,v32,v33,v35,v31]}" ] 
BB536 -> BB537 [tailport=s, headport=n, headlabel="      537"]
BB536 -> BB615 [tailport=s, headport=n, color=gray]
BB537 [shape=record label="{1213: write-variable[v31,'destination']*|1214: read-variable['destination',v46,-]|1215: read-variable['source',v47,-]|1216: read-property[v47,'lastIndex',v45]|1217: \<variable-non-null-undef\>['source']|1218: write-property[v46,'lastIndex',v45]|1219: \<variable-non-null-undef\>['destination']*}" ] 
BB537 -> BB542 [tailport=s, headport=n]
BB537 -> BB615 [tailport=s, headport=n, color=gray]
BB538 [shape=record label="{1220: call-getPrototypeOf [v35,v36,v37,v34]}" ] 
BB538 -> BB539 [tailport=s, headport=n, headlabel="      539"]
BB538 -> BB615 [tailport=s, headport=n, color=gray]
BB539 [shape=record label="{1221: call-Object.create [v33,'create',v34,v31]}" ] 
BB539 -> BB540 [tailport=s, headport=n, headlabel="      540"]
BB539 -> BB615 [tailport=s, headport=n, color=gray]
BB540 [shape=record label="{1222: write-variable[v31,'emptyObject']*|1223: read-variable['copy',v39,v38]|1224: read-variable['source',v40,-]|1225: read-variable['emptyObject',v41,-]|1226: read-variable['stackSource',v42,-]|1227: read-variable['stackDest',v43,-]}" ] 
BB540 -> BB541 [tailport=s, headport=n, headlabel="      541"]
BB540 -> BB615 [tailport=s, headport=n, color=gray]
BB541 [shape=record label="{1228: call-copy [v38,v39,v40,v41,v42,v43,v1]}" ] 
BB541 -> BB614 [tailport=s, headport=n]
BB541 -> BB615 [tailport=s, headport=n, color=gray]
BB542 [shape=record label="{1229: read-variable['stackDest',v19,-]|1230: if[v19](true-block:543,false-block:613)}" ] 
BB542 -> BB543 [tailport=s, headport=n, headlabel="      543"]
BB542 -> BB613 [tailport=s, headport=n]
BB542 -> BB615 [tailport=s, headport=n, color=gray]
BB543 [shape=record label="{1231: read-variable['stackSource',v21,-]|1232: read-property[v21,'push',-]|1233: \<variable-non-null-undef\>['stackSource']|1234: read-variable['source',v22,-]}" ] 
BB543 -> BB544 [tailport=s, headport=n, headlabel="      544"]
BB543 -> BB615 [tailport=s, headport=n, color=gray]
BB544 [shape=record label="{1235: call-stackSource.push [v21,'push',v22,-]*}" ] 
BB544 -> BB545 [tailport=s, headport=n, headlabel="      545"]
BB544 -> BB615 [tailport=s, headport=n, color=gray]
BB545 [shape=record label="{1236: read-variable['stackDest',v24,-]|1237: read-property[v24,'push',-]|1238: \<variable-non-null-undef\>['stackDest']|1239: read-variable['destination',v25,-]}" ] 
BB545 -> BB546 [tailport=s, headport=n, headlabel="      546"]
BB545 -> BB615 [tailport=s, headport=n, color=gray]
BB546 [shape=record label="{1240: call-stackDest.push [v24,'push',v25,-]*}" ] 
BB546 -> BB613 [tailport=s, headport=n]
BB546 -> BB615 [tailport=s, headport=n, color=gray]
BB547 [shape=record label="{1241: read-variable['ngMinErr',v14,v13]|1242: constant[\"cpi\",v15]|1243: constant[\"Can't copy! Source and destination are identical.\",v16]}" ] 
BB547 -> BB548 [tailport=s, headport=n, headlabel="      548"]
BB547 -> BB615 [tailport=s, headport=n, color=gray]
BB548 [shape=record label="{1244: call-ngMinErr [v13,v14,v15,v16,v12]}" ] 
BB548 -> BB549 [tailport=s, headport=n, headlabel="      549"]
BB548 -> BB615 [tailport=s, headport=n, color=gray]
BB549 [shape=record label="{1245: throw[v12]*}" ] 
BB549 -> BB550 [tailport=s, headport=n]
BB549 -> BB615 [tailport=s, headport=n, color=gray]
BB550 [shape=record label="{1246: read-variable['stackSource',v12,-]|1247: if[v12](true-block:553,false-block:551)}" ] 
BB550 -> BB553 [tailport=s, headport=n, headlabel="      553"]
BB550 -> BB551 [tailport=s, headport=n, headlabel="      551"]
BB550 -> BB615 [tailport=s, headport=n, color=gray]
BB551 [shape=record label="{1248: read-variable['Array',v13,-]}" ] 
BB551 -> BB552 [tailport=s, headport=n, headlabel="      552"]
BB551 -> BB615 [tailport=s, headport=n, color=gray]
BB552 [shape=record label="{1249: construct [-,v13,v12]}" ] 
BB552 -> BB553 [tailport=s, headport=n]
BB552 -> BB615 [tailport=s, headport=n, color=gray]
BB553 [shape=record label="{1250: write-variable[v12,'stackSource']*|1251: read-variable['stackDest',v13,-]|1252: if[v13](true-block:556,false-block:554)}" ] 
BB553 -> BB556 [tailport=s, headport=n, headlabel="      556"]
BB553 -> BB554 [tailport=s, headport=n, headlabel="      554"]
BB553 -> BB615 [tailport=s, headport=n, color=gray]
BB554 [shape=record label="{1253: read-variable['Array',v14,-]}" ] 
BB554 -> BB555 [tailport=s, headport=n, headlabel="      555"]
BB554 -> BB615 [tailport=s, headport=n, color=gray]
BB555 [shape=record label="{1254: construct [-,v14,v13]}" ] 
BB555 -> BB556 [tailport=s, headport=n]
BB555 -> BB615 [tailport=s, headport=n, color=gray]
BB556 [shape=record label="{1255: write-variable[v13,'stackDest']*|1256: read-variable['isObject',v16,v15]|1257: read-variable['source',v17,-]}" ] 
BB556 -> BB557 [tailport=s, headport=n, headlabel="      557"]
BB556 -> BB615 [tailport=s, headport=n, color=gray]
BB557 [shape=record label="{1258: call-isObject [v15,v16,v17,v14]}" ] 
BB557 -> BB558 [tailport=s, headport=n, headlabel="      558"]
BB557 -> BB615 [tailport=s, headport=n, color=gray]
BB558 [shape=record label="{1259: if[v14](true-block:559,false-block:563)}" ] 
BB558 -> BB559 [tailport=s, headport=n, headlabel="      559"]
BB558 -> BB563 [tailport=s, headport=n, headlabel="      563"]
BB559 [shape=record label="{1260: read-variable['stackSource',v19,-]|1261: read-property[v19,'push',-]|1262: \<variable-non-null-undef\>['stackSource']|1263: read-variable['source',v20,-]}" ] 
BB559 -> BB560 [tailport=s, headport=n, headlabel="      560"]
BB559 -> BB615 [tailport=s, headport=n, color=gray]
BB560 [shape=record label="{1264: call-stackSource.push [v19,'push',v20,-]*}" ] 
BB560 -> BB561 [tailport=s, headport=n, headlabel="      561"]
BB560 -> BB615 [tailport=s, headport=n, color=gray]
BB561 [shape=record label="{1265: read-variable['stackDest',v22,-]|1266: read-property[v22,'push',-]|1267: \<variable-non-null-undef\>['stackDest']|1268: read-variable['destination',v23,-]}" ] 
BB561 -> BB562 [tailport=s, headport=n, headlabel="      562"]
BB561 -> BB615 [tailport=s, headport=n, color=gray]
BB562 [shape=record label="{1269: call-stackDest.push [v22,'push',v23,-]*}" ] 
BB562 -> BB563 [tailport=s, headport=n]
BB562 -> BB615 [tailport=s, headport=n, color=gray]
BB563 [shape=record label="{1270: read-variable['isArray',v20,v19]|1271: read-variable['source',v21,-]}" ] 
BB563 -> BB564 [tailport=s, headport=n, headlabel="      564"]
BB563 -> BB615 [tailport=s, headport=n, color=gray]
BB564 [shape=record label="{1272: call-isArray [v19,v20,v21,v18]}" ] 
BB564 -> BB565 [tailport=s, headport=n, headlabel="      565"]
BB564 -> BB615 [tailport=s, headport=n, color=gray]
BB565 [shape=record label="{1273: if[v18](true-block:566,false-block:567)}" ] 
BB565 -> BB566 [tailport=s, headport=n, headlabel="      566"]
BB565 -> BB567 [tailport=s, headport=n, headlabel="      567"]
BB566 [shape=record label="{1274: read-variable['destination',v23,-]|1275: constant[0.0,v22]|1276: write-property[v23,'length',v22]|1277: \<variable-non-null-undef\>['destination']*|1278: constant[0.0,v25]|1279: write-variable[v25,'i']*}" ] 
BB566 -> BB568 [tailport=s, headport=n, headlabel="      568"]
BB566 -> BB615 [tailport=s, headport=n, color=gray]
BB567 [shape=record label="{1280: read-variable['destination',v23,-]|1281: read-property[v23,'$$hashKey',v22]|1282: \<variable-non-null-undef\>['destination']|1283: write-variable[v22,'h']*|1284: read-variable['isArray',v26,v25]|1285: read-variable['destination',v27,-]}" ] 
BB567 -> BB573 [tailport=s, headport=n, headlabel="      573"]
BB567 -> BB615 [tailport=s, headport=n, color=gray]
BB568 [shape=record label="{1286: read-variable['i',v26,-]|1287: read-variable['source',v28,-]|1288: read-property[v28,'length',v27]|1289: \<variable-non-null-undef\>['source']|1290: \<[v26,v27,v24]|1291: if[v24](true-block:569,false-block:613)}" ] 
BB568 -> BB569 [tailport=s, headport=n, headlabel="      569"]
BB568 -> BB613 [tailport=s, headport=n]
BB568 -> BB615 [tailport=s, headport=n, color=gray]
BB569 [shape=record label="{1292: read-variable['destination',v30,-]|1293: read-property[v30,'push',-]|1294: \<variable-non-null-undef\>['destination']|1295: read-variable['copy',v33,v32]|1296: read-variable['source',v35,-]|1297: read-variable['i',v36,-]|1298: read-property[v35,v36,v34]|1299: \<variable-non-null-undef\>['source']|1300: constant[null,v37]|1301: read-variable['stackSource',v38,-]|1302: read-variable['stackDest',v39,-]}" ] 
BB569 -> BB570 [tailport=s, headport=n, headlabel="      570"]
BB569 -> BB615 [tailport=s, headport=n, color=gray]
BB570 [shape=record label="{1303: call-copy [v32,v33,v34,v37,v38,v39,v31]}" ] 
BB570 -> BB571 [tailport=s, headport=n, headlabel="      571"]
BB570 -> BB615 [tailport=s, headport=n, color=gray]
BB571 [shape=record label="{1304: call-destination.push [v30,'push',v31,-]*}" ] 
BB571 -> BB572 [tailport=s, headport=n, headlabel="      572"]
BB571 -> BB615 [tailport=s, headport=n, color=gray]
BB572 [shape=record label="{1305: constant[1.0,v40]|1306: read-variable['i',v41,-]|1307: +[v41,v42]|1308: +[v42,v40,v43]|1309: write-variable[v43,'i']}" ] 
BB572 -> BB568 [tailport=s, headport=n]
BB572 -> BB615 [tailport=s, headport=n, color=gray]
BB573 [shape=record label="{1310: call-isArray [v25,v26,v27,v24]}" ] 
BB573 -> BB574 [tailport=s, headport=n, headlabel="      574"]
BB573 -> BB615 [tailport=s, headport=n, color=gray]
BB574 [shape=record label="{1311: if[v24](true-block:575,false-block:576)}" ] 
BB574 -> BB575 [tailport=s, headport=n, headlabel="      575"]
BB574 -> BB576 [tailport=s, headport=n, headlabel="      576"]
BB575 [shape=record label="{1312: read-variable['destination',v29,-]|1313: constant[0.0,v28]|1314: write-property[v29,'length',v28]|1315: \<variable-non-null-undef\>['destination']*}" ] 
BB575 -> BB578 [tailport=s, headport=n, headlabel="      578"]
BB575 -> BB615 [tailport=s, headport=n, color=gray]
BB576 [shape=record label="{1316: read-variable['forEach',v29,v28]|1317: read-variable['destination',v30,-]|1318: function-expr[function ( value key ),v31]}" ] 
BB576 -> BB577 [tailport=s, headport=n, headlabel="      577"]
BB576 -> BB615 [tailport=s, headport=n, color=gray]
BB577 [shape=record label="{1319: call-forEach [v28,v29,v30,v31,-]*}" ] 
BB577 -> BB578 [tailport=s, headport=n]
BB577 -> BB615 [tailport=s, headport=n, color=gray]
BB578 [shape=record label="{1320: read-variable['isBlankObject',v30,v29]|1321: read-variable['source',v31,-]}" ] 
BB578 -> BB579 [tailport=s, headport=n, headlabel="      579"]
BB578 -> BB615 [tailport=s, headport=n, color=gray]
BB579 [shape=record label="{1322: call-isBlankObject [v29,v30,v31,v28]}" ] 
BB579 -> BB580 [tailport=s, headport=n, headlabel="      580"]
BB579 -> BB615 [tailport=s, headport=n, color=gray]
BB580 [shape=record label="{1323: if[v28](true-block:581,false-block:582)}" ] 
BB580 -> BB581 [tailport=s, headport=n, headlabel="      581"]
BB580 -> BB582 [tailport=s, headport=n, headlabel="      582"]
BB581 [shape=record label="{1324: read-variable['source',v33,-]}" ] 
BB581 -> BB583 [tailport=s, headport=n, headlabel="      583"]
BB581 -> BB615 [tailport=s, headport=n, color=gray]
BB582 [shape=record label="{1325: read-variable['source',v32,-]|1326: if[v32](true-block:589,false-block:590)}" ] 
BB582 -> BB590 [tailport=s, headport=n, headlabel="      590"]
BB582 -> BB589 [tailport=s, headport=n, headlabel="      589"]
BB582 -> BB615 [tailport=s, headport=n, color=gray]
BB583 [shape=record label="{1327: begin-for-in[v33,v34]}" ] 
BB583 -> BB584 [tailport=s, headport=n, headlabel="      584"]
BB583 -> BB615 [tailport=s, headport=n, color=gray]
BB584 [shape=record label="{1328: has-next[v34,v35]|1329: if[v35](true-block:585,false-block:611)}" ] 
BB584 -> BB585 [tailport=s, headport=n, headlabel="      585"]
BB584 -> BB611 [tailport=s, headport=n, headlabel="      611"]
BB585 [shape=record label="{1330: next-property[v34,v36]|1331: write-variable[v36,'key']|1332: read-variable['destination',v38,-]|1333: read-variable['key',v39,-]|1334: read-variable['copy',v41,v40]|1335: read-variable['source',v43,-]|1336: read-variable['key',v44,-]|1337: read-property[v43,v44,v42]|1338: \<variable-non-null-undef\>['source']|1339: constant[null,v45]|1340: read-variable['stackSource',v46,-]|1341: read-variable['stackDest',v47,-]}" ] 
BB585 -> BB586 [tailport=s, headport=n, headlabel="      586"]
BB585 -> BB615 [tailport=s, headport=n, color=gray]
BB586 [shape=record label="{1342: call-copy [v40,v41,v42,v45,v46,v47,v37]}" ] 
BB586 -> BB587 [tailport=s, headport=n, headlabel="      587"]
BB586 -> BB615 [tailport=s, headport=n, color=gray]
BB587 [shape=record label="{1343: write-property[v38,v39,v37]|1344: \<variable-non-null-undef\>['destination']*}" ] 
BB587 -> BB588 [tailport=s, headport=n, headlabel="      588"]
BB587 -> BB615 [tailport=s, headport=n, color=gray]
BB588 [shape=record label="{1345: end-for-in(begin-node:1327)}" ] 
BB588 -> BB584 [tailport=s, headport=n]
BB589 [shape=record label="{1346: read-variable['source',v36,-]|1347: read-property[v36,'hasOwnProperty',v35]|1348: \<variable-non-null-undef\>['source']|1349: typeof[v35,v33]|1350: constant[\"function\",v34]|1351: ===[v33,v34,v32]}" ] 
BB589 -> BB590 [tailport=s, headport=n]
BB589 -> BB615 [tailport=s, headport=n, color=gray]
BB590 [shape=record label="{1352: if[v32](true-block:591,false-block:592)}" ] 
BB590 -> BB591 [tailport=s, headport=n, headlabel="      591"]
BB590 -> BB592 [tailport=s, headport=n, headlabel="      592"]
BB591 [shape=record label="{1353: read-variable['source',v34,-]}" ] 
BB591 -> BB593 [tailport=s, headport=n, headlabel="      593"]
BB591 -> BB615 [tailport=s, headport=n, color=gray]
BB592 [shape=record label="{1354: read-variable['source',v34,-]}" ] 
BB592 -> BB602 [tailport=s, headport=n, headlabel="      602"]
BB592 -> BB615 [tailport=s, headport=n, color=gray]
BB593 [shape=record label="{1355: begin-for-in[v34,v35]}" ] 
BB593 -> BB594 [tailport=s, headport=n, headlabel="      594"]
BB593 -> BB615 [tailport=s, headport=n, color=gray]
BB594 [shape=record label="{1356: has-next[v35,v36]|1357: if[v36](true-block:595,false-block:611)}" ] 
BB594 -> BB595 [tailport=s, headport=n, headlabel="      595"]
BB594 -> BB611 [tailport=s, headport=n]
BB595 [shape=record label="{1358: next-property[v35,v37]|1359: write-variable[v37,'key']|1360: read-variable['source',v40,-]|1361: read-property[v40,'hasOwnProperty',-]|1362: \<variable-non-null-undef\>['source']|1363: read-variable['key',v41,-]}" ] 
BB595 -> BB596 [tailport=s, headport=n, headlabel="      596"]
BB595 -> BB615 [tailport=s, headport=n, color=gray]
BB596 [shape=record label="{1364: call-source.hasOwnProperty [v40,'hasOwnProperty',v41,v38]}" ] 
BB596 -> BB597 [tailport=s, headport=n, headlabel="      597"]
BB596 -> BB615 [tailport=s, headport=n, color=gray]
BB597 [shape=record label="{1365: if[v38](true-block:598,false-block:601)}" ] 
BB597 -> BB598 [tailport=s, headport=n, headlabel="      598"]
BB597 -> BB601 [tailport=s, headport=n, headlabel="      601"]
BB598 [shape=record label="{1366: read-variable['destination',v43,-]|1367: read-variable['key',v44,-]|1368: read-variable['copy',v46,v45]|1369: read-variable['source',v48,-]|1370: read-variable['key',v49,-]|1371: read-property[v48,v49,v47]|1372: \<variable-non-null-undef\>['source']|1373: constant[null,v50]|1374: read-variable['stackSource',v51,-]|1375: read-variable['stackDest',v52,-]}" ] 
BB598 -> BB599 [tailport=s, headport=n, headlabel="      599"]
BB598 -> BB615 [tailport=s, headport=n, color=gray]
BB599 [shape=record label="{1376: call-copy [v45,v46,v47,v50,v51,v52,v42]}" ] 
BB599 -> BB600 [tailport=s, headport=n, headlabel="      600"]
BB599 -> BB615 [tailport=s, headport=n, color=gray]
BB600 [shape=record label="{1377: write-property[v43,v44,v42]|1378: \<variable-non-null-undef\>['destination']*}" ] 
BB600 -> BB601 [tailport=s, headport=n]
BB600 -> BB615 [tailport=s, headport=n, color=gray]
BB601 [shape=record label="{1379: end-for-in(begin-node:1355)}" ] 
BB601 -> BB594 [tailport=s, headport=n]
BB602 [shape=record label="{1380: begin-for-in[v34,v35]}" ] 
BB602 -> BB603 [tailport=s, headport=n, headlabel="      603"]
BB602 -> BB615 [tailport=s, headport=n, color=gray]
BB603 [shape=record label="{1381: has-next[v35,v36]|1382: if[v36](true-block:604,false-block:611)}" ] 
BB603 -> BB604 [tailport=s, headport=n, headlabel="      604"]
BB603 -> BB611 [tailport=s, headport=n]
BB604 [shape=record label="{1383: next-property[v35,v37]|1384: write-variable[v37,'key']|1385: read-variable['hasOwnProperty',v40,-]|1386: read-property[v40,'call',-]|1387: \<variable-non-null-undef\>['hasOwnProperty']|1388: read-variable['source',v41,-]|1389: read-variable['key',v42,-]}" ] 
BB604 -> BB605 [tailport=s, headport=n, headlabel="      605"]
BB604 -> BB615 [tailport=s, headport=n, color=gray]
BB605 [shape=record label="{1390: call-hasOwnProperty.call [v40,'call',v41,v42,v38]}" ] 
BB605 -> BB606 [tailport=s, headport=n, headlabel="      606"]
BB605 -> BB615 [tailport=s, headport=n, color=gray]
BB606 [shape=record label="{1391: if[v38](true-block:607,false-block:610)}" ] 
BB606 -> BB607 [tailport=s, headport=n, headlabel="      607"]
BB606 -> BB610 [tailport=s, headport=n, headlabel="      610"]
BB607 [shape=record label="{1392: read-variable['destination',v44,-]|1393: read-variable['key',v45,-]|1394: read-variable['copy',v47,v46]|1395: read-variable['source',v49,-]|1396: read-variable['key',v50,-]|1397: read-property[v49,v50,v48]|1398: \<variable-non-null-undef\>['source']|1399: constant[null,v51]|1400: read-variable['stackSource',v52,-]|1401: read-variable['stackDest',v53,-]}" ] 
BB607 -> BB608 [tailport=s, headport=n, headlabel="      608"]
BB607 -> BB615 [tailport=s, headport=n, color=gray]
BB608 [shape=record label="{1402: call-copy [v46,v47,v48,v51,v52,v53,v43]}" ] 
BB608 -> BB609 [tailport=s, headport=n, headlabel="      609"]
BB608 -> BB615 [tailport=s, headport=n, color=gray]
BB609 [shape=record label="{1403: write-property[v44,v45,v43]|1404: \<variable-non-null-undef\>['destination']*}" ] 
BB609 -> BB610 [tailport=s, headport=n]
BB609 -> BB615 [tailport=s, headport=n, color=gray]
BB610 [shape=record label="{1405: end-for-in(begin-node:1380)}" ] 
BB610 -> BB603 [tailport=s, headport=n]
BB611 [shape=record label="{1406: read-variable['setHashKey',v33,v32]|1407: read-variable['destination',v34,-]|1408: read-variable['h',v35,-]}" ] 
BB611 -> BB612 [tailport=s, headport=n, headlabel="      612"]
BB611 -> BB615 [tailport=s, headport=n, color=gray]
BB612 [shape=record label="{1409: call-setHashKey [v32,v33,v34,v35,-]*}" ] 
BB612 -> BB613 [tailport=s, headport=n]
BB612 -> BB615 [tailport=s, headport=n, color=gray]
BB613 [shape=record label="{1410: read-variable['destination',v1,-]}" ] 
BB613 -> BB614 [tailport=s, headport=n]
BB613 -> BB615 [tailport=s, headport=n, color=gray]
BB614 [shape=record label="{1411: return[v1]}" ] 
BB615 [shape=record label="{1412: exceptional-return}" ] 
//#$~ 955
}
