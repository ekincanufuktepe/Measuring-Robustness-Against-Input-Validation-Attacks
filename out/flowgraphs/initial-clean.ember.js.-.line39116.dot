digraph {
rankdir="TD"
BB_entry1816[shape=none,label=""];
BB_entry1816 -> BB20741 [tailport=s, headport=n, headlabel="    20741"]
BB20741 [shape=record label="{69468: constant[undefined,v1]|69469: vardecl['oldTestResult']|69470: vardecl['newTestResult']}" ] 
BB20741 -> BB20742 [tailport=s, headport=n, headlabel="      20742"]
BB20742 [shape=record label="{69471: read-variable['this',v3,-]|69472: read-property[v3,'oldTestResult',v2]|69473: write-variable[v2,'oldTestResult']*|69474: read-variable['read',v8,v7]|69475: read-variable['this',v10,-]|69476: read-property[v10,'test',v9]}" ] 
BB20742 -> BB20743 [tailport=s, headport=n, headlabel="      20743"]
BB20742 -> BB20767 [tailport=s, headport=n, color=gray, headlabel="      20767"]
BB20743 [shape=record label="{69477: call-read [v7,v8,v9,v6]}" ] 
BB20743 -> BB20744 [tailport=s, headport=n, headlabel="      20744"]
BB20743 -> BB20767 [tailport=s, headport=n, color=gray]
BB20744 [shape=record label="{69478: ![v6,v5]|69479: ![v5,v4]|69480: write-variable[v4,'newTestResult']*|69481: read-variable['newTestResult',v12,-]|69482: read-variable['oldTestResult',v13,-]|69483: !==[v12,v13,v11]|69484: if[v11](true-block:20745,false-block:20761)}" ] 
BB20744 -> BB20745 [tailport=s, headport=n, headlabel="      20745"]
BB20744 -> BB20761 [tailport=s, headport=n, headlabel="      20761"]
BB20744 -> BB20767 [tailport=s, headport=n, color=gray]
BB20745 [shape=record label="{69485: read-variable['oldTestResult',v14,-]|69486: constant[true,v15]|69487: ==[v14,v15,v16]|69488: if[v16](true-block:20747,false-block:20748)}" ] 
BB20745 -> BB20747 [tailport=s, headport=n, headlabel="      20747"]
BB20745 -> BB20748 [tailport=s, headport=n, headlabel="      20748"]
BB20745 -> BB20767 [tailport=s, headport=n, color=gray]
BB20746 [shape=record label="{69489: read-variable['newTestResult',v17,-]|69490: constant[true,v18]|69491: ==[v17,v18,v19]|69492: if[v19](true-block:20756,false-block:20757)}" ] 
BB20746 -> BB20756 [tailport=s, headport=n, headlabel="      20756"]
BB20746 -> BB20757 [tailport=s, headport=n, headlabel="      20757"]
BB20746 -> BB20767 [tailport=s, headport=n, color=gray]
BB20747 [shape=record label="{69493: read-variable['unsubscribe',v18,v17]|69494: read-variable['this',v20,-]|69495: read-property[v20,'consequent',v19]|69496: read-variable['this',v22,-]|69497: read-property[v22,'notify',v21]|69498: read-variable['this',v23,-]}" ] 
BB20747 -> BB20749 [tailport=s, headport=n, headlabel="      20749"]
BB20747 -> BB20767 [tailport=s, headport=n, color=gray]
BB20748 [shape=record label="{69499: constant[false,v15]|69500: ==[v14,v15,v16]|69501: if[v16](true-block:20750,false-block:20751)}" ] 
BB20748 -> BB20750 [tailport=s, headport=n, headlabel="      20750"]
BB20748 -> BB20751 [tailport=s, headport=n, headlabel="      20751"]
BB20748 -> BB20767 [tailport=s, headport=n, color=gray]
BB20749 [shape=record label="{69502: call-unsubscribe [v17,v18,v19,v21,v23,-]*}" ] 
BB20749 -> BB20746 [tailport=s, headport=n, headlabel="      20746"]
BB20749 -> BB20767 [tailport=s, headport=n, color=gray]
BB20750 [shape=record label="{69503: read-variable['unsubscribe',v25,v24]|69504: read-variable['this',v27,-]|69505: read-property[v27,'alternate',v26]|69506: read-variable['this',v29,-]|69507: read-property[v29,'notify',v28]|69508: read-variable['this',v30,-]}" ] 
BB20750 -> BB20752 [tailport=s, headport=n, headlabel="      20752"]
BB20750 -> BB20767 [tailport=s, headport=n, color=gray]
BB20751 [shape=record label="{69509: read-variable['undefined',v15,-]|69510: ==[v14,v15,v16]|69511: if[v16](true-block:20753,false-block:20746)}" ] 
BB20751 -> BB20753 [tailport=s, headport=n, headlabel="      20753"]
BB20751 -> BB20746 [tailport=s, headport=n]
BB20751 -> BB20767 [tailport=s, headport=n, color=gray]
BB20752 [shape=record label="{69512: call-unsubscribe [v24,v25,v26,v28,v30,-]*}" ] 
BB20752 -> BB20746 [tailport=s, headport=n]
BB20752 -> BB20767 [tailport=s, headport=n, color=gray]
BB20753 [shape=record label="{69513: read-variable['subscribe',v32,v31]|69514: read-variable['this',v34,-]|69515: read-property[v34,'test',v33]|69516: read-variable['this',v36,-]|69517: read-property[v36,'notify',v35]|69518: read-variable['this',v37,-]}" ] 
BB20753 -> BB20754 [tailport=s, headport=n, headlabel="      20754"]
BB20753 -> BB20767 [tailport=s, headport=n, color=gray]
BB20754 [shape=record label="{69519: call-subscribe [v31,v32,v33,v35,v37,-]*}" ] 
BB20754 -> BB20746 [tailport=s, headport=n]
BB20754 -> BB20767 [tailport=s, headport=n, color=gray]
BB20755 [shape=record label="{69520: read-variable['this',v21,-]|69521: read-variable['newTestResult',v20,-]|69522: write-property[v21,'oldTestResult',v20]*}" ] 
BB20755 -> BB20761 [tailport=s, headport=n]
BB20755 -> BB20767 [tailport=s, headport=n, color=gray]
BB20756 [shape=record label="{69523: read-variable['subscribe',v21,v20]|69524: read-variable['this',v23,-]|69525: read-property[v23,'consequent',v22]|69526: read-variable['this',v25,-]|69527: read-property[v25,'notify',v24]|69528: read-variable['this',v26,-]}" ] 
BB20756 -> BB20758 [tailport=s, headport=n, headlabel="      20758"]
BB20756 -> BB20767 [tailport=s, headport=n, color=gray]
BB20757 [shape=record label="{69529: constant[false,v18]|69530: ==[v17,v18,v19]|69531: if[v19](true-block:20759,false-block:20755)}" ] 
BB20757 -> BB20759 [tailport=s, headport=n, headlabel="      20759"]
BB20757 -> BB20755 [tailport=s, headport=n, headlabel="      20755"]
BB20757 -> BB20767 [tailport=s, headport=n, color=gray]
BB20758 [shape=record label="{69532: call-subscribe [v20,v21,v22,v24,v26,-]*}" ] 
BB20758 -> BB20755 [tailport=s, headport=n]
BB20758 -> BB20767 [tailport=s, headport=n, color=gray]
BB20759 [shape=record label="{69533: read-variable['subscribe',v28,v27]|69534: read-variable['this',v30,-]|69535: read-property[v30,'alternate',v29]|69536: read-variable['this',v32,-]|69537: read-property[v32,'notify',v31]|69538: read-variable['this',v33,-]}" ] 
BB20759 -> BB20760 [tailport=s, headport=n, headlabel="      20760"]
BB20759 -> BB20767 [tailport=s, headport=n, color=gray]
BB20760 [shape=record label="{69539: call-subscribe [v27,v28,v29,v31,v33,-]*}" ] 
BB20760 -> BB20755 [tailport=s, headport=n]
BB20760 -> BB20767 [tailport=s, headport=n, color=gray]
BB20761 [shape=record label="{69540: read-variable['newTestResult',v14,-]|69541: if[v14](true-block:20762,false-block:20763)}" ] 
BB20761 -> BB20762 [tailport=s, headport=n, headlabel="      20762"]
BB20761 -> BB20763 [tailport=s, headport=n, headlabel="      20763"]
BB20761 -> BB20767 [tailport=s, headport=n, color=gray]
BB20762 [shape=record label="{69542: read-variable['read',v16,v15]|69543: read-variable['this',v18,-]|69544: read-property[v18,'consequent',v17]}" ] 
BB20762 -> BB20764 [tailport=s, headport=n, headlabel="      20764"]
BB20762 -> BB20767 [tailport=s, headport=n, color=gray]
BB20763 [shape=record label="{69545: read-variable['read',v16,v15]|69546: read-variable['this',v18,-]|69547: read-property[v18,'alternate',v17]}" ] 
BB20763 -> BB20765 [tailport=s, headport=n, headlabel="      20765"]
BB20763 -> BB20767 [tailport=s, headport=n, color=gray]
BB20764 [shape=record label="{69548: call-read [v15,v16,v17,v1]}" ] 
BB20764 -> BB20766 [tailport=s, headport=n, headlabel="      20766"]
BB20764 -> BB20767 [tailport=s, headport=n, color=gray]
BB20765 [shape=record label="{69549: call-read [v15,v16,v17,v1]}" ] 
BB20765 -> BB20766 [tailport=s, headport=n]
BB20765 -> BB20767 [tailport=s, headport=n, color=gray]
BB20766 [shape=record label="{69550: return[v1]}" ] 
BB20767 [shape=record label="{69551: exceptional-return}" ] 
//#$~ 39135
}
