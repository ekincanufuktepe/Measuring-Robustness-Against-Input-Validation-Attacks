digraph {
rankdir="TD"
BB_entry219[shape=none,label=""];
BB_entry219 -> BB2979 [tailport=s, headport=n, headlabel="    2979"]
BB2979 [shape=record label="{10360: constant[undefined,v1]|10361: vardecl['initialState']}" ] 
BB2979 -> BB2980 [tailport=s, headport=n, headlabel="      2980"]
BB2980 [shape=record label="{10362: constant[\"production\",v3]|10363: constant[\"development\",v4]|10364: !==[v3,v4,v2]|10365: if[v2](true-block:2981,false-block:2985)}" ] 
BB2980 -> BB2981 [tailport=s, headport=n, headlabel="      2981"]
BB2980 -> BB2985 [tailport=s, headport=n, headlabel="      2985"]
BB2980 -> BB3012 [tailport=s, headport=n, color=gray, headlabel="      3012"]
BB2981 [shape=record label="{10366: constant[\"production\",v6]|10367: constant[\"development\",v7]|10368: !==[v6,v7,v5]|10369: if[v5](true-block:2982,false-block:2983)}" ] 
BB2981 -> BB2982 [tailport=s, headport=n, headlabel="      2982"]
BB2981 -> BB2983 [tailport=s, headport=n, headlabel="      2983"]
BB2981 -> BB3012 [tailport=s, headport=n, color=gray]
BB2982 [shape=record label="{10370: read-variable['warning',v9,v8]|10371: read-variable['this',v11,-]|10372: read-variable['Constructor',v12,-]|10373: instanceof[v11,v12,v10]|10374: constant[\"Something is calling a React component directly. Use a factory or \",v14]|10375: constant[\"JSX instead. See: https://fb.me/react-legacyfactory\",v15]|10376: +[v14,v15,v13]}" ] 
BB2982 -> BB2984 [tailport=s, headport=n, headlabel="      2984"]
BB2982 -> BB3012 [tailport=s, headport=n, color=gray]
BB2983 [shape=record label="{10377: constant[null,-]}" ] 
BB2983 -> BB2985 [tailport=s, headport=n]
BB2984 [shape=record label="{10378: call-warning [v8,v9,v10,v13,-]}" ] 
BB2984 -> BB2985 [tailport=s, headport=n]
BB2984 -> BB3012 [tailport=s, headport=n, color=gray]
BB2985 [shape=record label="{10379: read-variable['this',v6,-]|10380: read-property[v6,'__reactAutoBindMap',v5]|10381: if[v5](true-block:2986,false-block:2988)}" ] 
BB2985 -> BB2986 [tailport=s, headport=n, headlabel="      2986"]
BB2985 -> BB2988 [tailport=s, headport=n, headlabel="      2988"]
BB2985 -> BB3012 [tailport=s, headport=n, color=gray]
BB2986 [shape=record label="{10382: read-variable['bindAutoBindMethods',v8,v7]|10383: read-variable['this',v9,-]}" ] 
BB2986 -> BB2987 [tailport=s, headport=n, headlabel="      2987"]
BB2986 -> BB3012 [tailport=s, headport=n, color=gray]
BB2987 [shape=record label="{10384: call-bindAutoBindMethods [v7,v8,v9,-]*}" ] 
BB2987 -> BB2988 [tailport=s, headport=n]
BB2987 -> BB3012 [tailport=s, headport=n, color=gray]
BB2988 [shape=record label="{10385: read-variable['this',v8,-]|10386: read-variable['props',v7,-]|10387: write-property[v8,'props',v7]*|10388: read-variable['this',v10,-]|10389: read-variable['context',v9,-]|10390: write-property[v10,'context',v9]*|10391: read-variable['this',v12,-]|10392: constant[null,v11]|10393: write-property[v12,'state',v11]*|10394: read-variable['this',v15,-]|10395: read-property[v15,'getInitialState',v14]|10396: if[v14](true-block:2989,false-block:2990)}" ] 
BB2988 -> BB2989 [tailport=s, headport=n, headlabel="      2989"]
BB2988 -> BB2990 [tailport=s, headport=n, headlabel="      2990"]
BB2988 -> BB3012 [tailport=s, headport=n, color=gray]
BB2989 [shape=record label="{10397: read-variable['this',v17,-]|10398: read-property[v17,'getInitialState',-]}" ] 
BB2989 -> BB2991 [tailport=s, headport=n, headlabel="      2991"]
BB2989 -> BB3012 [tailport=s, headport=n, color=gray]
BB2990 [shape=record label="{10399: constant[null,v13]}" ] 
BB2990 -> BB2992 [tailport=s, headport=n, headlabel="      2992"]
BB2991 [shape=record label="{10400: call-this.getInitialState [v17,'getInitialState',v13]}" ] 
BB2991 -> BB2992 [tailport=s, headport=n]
BB2991 -> BB3012 [tailport=s, headport=n, color=gray]
BB2992 [shape=record label="{10401: write-variable[v13,'initialState']*|10402: constant[\"production\",v17]|10403: constant[\"development\",v18]|10404: !==[v17,v18,v16]|10405: if[v16](true-block:2993,false-block:2997)}" ] 
BB2992 -> BB2993 [tailport=s, headport=n, headlabel="      2993"]
BB2992 -> BB2997 [tailport=s, headport=n, headlabel="      2997"]
BB2992 -> BB3012 [tailport=s, headport=n, color=gray]
BB2993 [shape=record label="{10406: typeof['initialState',v20]|10407: constant[\"undefined\",v21]|10408: ===[v20,v21,v19]|10409: if[v19](true-block:2994,false-block:2995)}" ] 
BB2993 -> BB2995 [tailport=s, headport=n, headlabel="      2995"]
BB2993 -> BB2994 [tailport=s, headport=n, headlabel="      2994"]
BB2993 -> BB3012 [tailport=s, headport=n, color=gray]
BB2994 [shape=record label="{10410: read-variable['this',v23,-]|10411: read-property[v23,'getInitialState',v22]|10412: read-property[v22,'_isMockFunction',v19]|10413: \<property-non-null-undef\>[v23,'getInitialState']}" ] 
BB2994 -> BB2995 [tailport=s, headport=n]
BB2994 -> BB3012 [tailport=s, headport=n, color=gray]
BB2995 [shape=record label="{10414: if[v19](true-block:2996,false-block:2997)}" ] 
BB2995 -> BB2996 [tailport=s, headport=n, headlabel="      2996"]
BB2995 -> BB2997 [tailport=s, headport=n]
BB2996 [shape=record label="{10415: constant[null,v22]|10416: write-variable[v22,'initialState']*}" ] 
BB2996 -> BB2997 [tailport=s, headport=n]
BB2997 [shape=record label="{10417: constant[\"production\",v20]|10418: constant[\"development\",v21]|10419: !==[v20,v21,v19]|10420: if[v19](true-block:2998,false-block:2999)}" ] 
BB2997 -> BB2998 [tailport=s, headport=n, headlabel="      2998"]
BB2997 -> BB2999 [tailport=s, headport=n, headlabel="      2999"]
BB2997 -> BB3012 [tailport=s, headport=n, color=gray]
BB2998 [shape=record label="{10421: read-variable['invariant',v23,v22]|10422: typeof['initialState',v25]|10423: constant[\"object\",v26]|10424: ===[v25,v26,v24]|10425: if[v24](true-block:3000,false-block:3003)}" ] 
BB2998 -> BB3003 [tailport=s, headport=n, headlabel="      3003"]
BB2998 -> BB3000 [tailport=s, headport=n, headlabel="      3000"]
BB2998 -> BB3012 [tailport=s, headport=n, color=gray]
BB2999 [shape=record label="{10426: read-variable['invariant',v23,v22]|10427: typeof['initialState',v25]|10428: constant[\"object\",v26]|10429: ===[v25,v26,v24]|10430: if[v24](true-block:3006,false-block:3009)}" ] 
BB2999 -> BB3009 [tailport=s, headport=n, headlabel="      3009"]
BB2999 -> BB3006 [tailport=s, headport=n, headlabel="      3006"]
BB2999 -> BB3012 [tailport=s, headport=n, color=gray]
BB3000 [shape=record label="{10431: read-variable['Array',v29,-]|10432: read-property[v29,'isArray',-]|10433: \<variable-non-null-undef\>['Array']|10434: read-variable['initialState',v30,-]}" ] 
BB3000 -> BB3001 [tailport=s, headport=n, headlabel="      3001"]
BB3000 -> BB3012 [tailport=s, headport=n, color=gray]
BB3001 [shape=record label="{10435: call-Array.isArray [v29,'isArray',v30,v27]}" ] 
BB3001 -> BB3002 [tailport=s, headport=n, headlabel="      3002"]
BB3001 -> BB3012 [tailport=s, headport=n, color=gray]
BB3002 [shape=record label="{10436: ![v27,v24]}" ] 
BB3002 -> BB3003 [tailport=s, headport=n]
BB3002 -> BB3012 [tailport=s, headport=n, color=gray]
BB3003 [shape=record label="{10437: constant[\"%s.getInitialState(): must return an object or null\",v27]|10438: read-variable['Constructor',v29,-]|10439: read-property[v29,'displayName',v28]|10440: \<variable-non-null-undef\>['Constructor']|10441: if[v28](true-block:3005,false-block:3004)}" ] 
BB3003 -> BB3005 [tailport=s, headport=n, headlabel="      3005"]
BB3003 -> BB3004 [tailport=s, headport=n, headlabel="      3004"]
BB3003 -> BB3012 [tailport=s, headport=n, color=gray]
BB3004 [shape=record label="{10442: constant[\"ReactCompositeComponent\",v28]}" ] 
BB3004 -> BB3005 [tailport=s, headport=n]
BB3005 [shape=record label="{10443: call-invariant [v22,v23,v24,v27,v28,-]}" ] 
BB3005 -> BB3010 [tailport=s, headport=n, headlabel="      3010"]
BB3005 -> BB3012 [tailport=s, headport=n, color=gray]
BB3006 [shape=record label="{10444: read-variable['Array',v29,-]|10445: read-property[v29,'isArray',-]|10446: \<variable-non-null-undef\>['Array']|10447: read-variable['initialState',v30,-]}" ] 
BB3006 -> BB3007 [tailport=s, headport=n, headlabel="      3007"]
BB3006 -> BB3012 [tailport=s, headport=n, color=gray]
BB3007 [shape=record label="{10448: call-Array.isArray [v29,'isArray',v30,v27]}" ] 
BB3007 -> BB3008 [tailport=s, headport=n, headlabel="      3008"]
BB3007 -> BB3012 [tailport=s, headport=n, color=gray]
BB3008 [shape=record label="{10449: ![v27,v24]}" ] 
BB3008 -> BB3009 [tailport=s, headport=n]
BB3008 -> BB3012 [tailport=s, headport=n, color=gray]
BB3009 [shape=record label="{10450: call-invariant [v22,v23,v24,-]}" ] 
BB3009 -> BB3010 [tailport=s, headport=n]
BB3009 -> BB3012 [tailport=s, headport=n, color=gray]
BB3010 [shape=record label="{10451: read-variable['this',v23,-]|10452: read-variable['initialState',v22,-]|10453: write-property[v23,'state',v22]*}" ] 
BB3010 -> BB3011 [tailport=s, headport=n, headlabel="      3011"]
BB3010 -> BB3012 [tailport=s, headport=n, color=gray]
BB3011 [shape=record label="{10454: return[v1]}" ] 
BB3012 [shape=record label="{10455: exceptional-return}" ] 
//#$~ 5853
}
