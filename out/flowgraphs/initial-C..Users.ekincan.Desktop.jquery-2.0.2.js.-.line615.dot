digraph {
rankdir="TD"
BB_entry37[shape=none,label=""];
BB_entry37 -> BB488 [tailport=s, headport=n, headlabel="    488"]
BB488 [shape=record label="{1205: constant[undefined,v1]|1206: vardecl['ret']}" ] 
BB488 -> BB489 [tailport=s, headport=n, headlabel="      489"]
BB489 [shape=record label="{1207: read-variable['results',v2,-]|1208: if[v2](true-block:492,false-block:490)}" ] 
BB489 -> BB492 [tailport=s, headport=n, headlabel="      492"]
BB489 -> BB490 [tailport=s, headport=n, headlabel="      490"]
BB489 -> BB506 [tailport=s, headport=n, color=gray, headlabel="      506"]
BB490 [shape=record label="{1209: read-variable['Array',v3,-]}" ] 
BB490 -> BB491 [tailport=s, headport=n, headlabel="      491"]
BB490 -> BB506 [tailport=s, headport=n, color=gray]
BB491 [shape=record label="{1210: construct[-,v3,v2]}" ] 
BB491 -> BB492 [tailport=s, headport=n]
BB491 -> BB506 [tailport=s, headport=n, color=gray]
BB492 [shape=record label="{1211: write-variable[v2,'ret']*|1212: read-variable['arr',v4,-]|1213: constant[null,v5]|1214: !=[v4,v5,v3]|1215: if[v3](true-block:493,false-block:504)}" ] 
BB492 -> BB493 [tailport=s, headport=n, headlabel="      493"]
BB492 -> BB504 [tailport=s, headport=n, headlabel="      504"]
BB492 -> BB506 [tailport=s, headport=n, color=gray]
BB493 [shape=record label="{1216: read-variable['isArraylike',v8,v7]|1217: read-variable['Object',v11,v10]|1218: read-variable['arr',v12,-]}" ] 
BB493 -> BB494 [tailport=s, headport=n, headlabel="      494"]
BB493 -> BB506 [tailport=s, headport=n, color=gray]
BB494 [shape=record label="{1219: call[v10,v11,v12,v9]}" ] 
BB494 -> BB495 [tailport=s, headport=n, headlabel="      495"]
BB494 -> BB506 [tailport=s, headport=n, color=gray]
BB495 [shape=record label="{1220: call[v7,v8,v9,v6]}" ] 
BB495 -> BB496 [tailport=s, headport=n, headlabel="      496"]
BB495 -> BB506 [tailport=s, headport=n, color=gray]
BB496 [shape=record label="{1221: if[v6](true-block:497,false-block:498)}" ] 
BB496 -> BB497 [tailport=s, headport=n, headlabel="      497"]
BB496 -> BB498 [tailport=s, headport=n, headlabel="      498"]
BB497 [shape=record label="{1222: read-variable['jQuery',v14,-]|1223: read-property[v14,'merge',-]|1224: \<variable-non-null-undef\>['jQuery']|1225: read-variable['ret',v15,-]|1226: typeof['arr',v18]|1227: constant[\"string\",v19]|1228: ===[v18,v19,v17]|1229: if[v17](true-block:499,false-block:500)}" ] 
BB497 -> BB499 [tailport=s, headport=n, headlabel="      499"]
BB497 -> BB500 [tailport=s, headport=n, headlabel="      500"]
BB497 -> BB506 [tailport=s, headport=n, color=gray]
BB498 [shape=record label="{1230: read-variable['core_push',v14,-]|1231: read-property[v14,'call',-]|1232: \<variable-non-null-undef\>['core_push']|1233: read-variable['ret',v15,-]|1234: read-variable['arr',v16,-]}" ] 
BB498 -> BB503 [tailport=s, headport=n, headlabel="      503"]
BB498 -> BB506 [tailport=s, headport=n, color=gray]
BB499 [shape=record label="{1235: read-variable['Array',v20,-]|1236: read-variable['arr',v21,-]}" ] 
BB499 -> BB501 [tailport=s, headport=n, headlabel="      501"]
BB499 -> BB506 [tailport=s, headport=n, color=gray]
BB500 [shape=record label="{1237: read-variable['arr',v16,-]}" ] 
BB500 -> BB502 [tailport=s, headport=n, headlabel="      502"]
BB500 -> BB506 [tailport=s, headport=n, color=gray]
BB501 [shape=record label="{1238: construct[-,v20,v21,v16]}" ] 
BB501 -> BB502 [tailport=s, headport=n]
BB501 -> BB506 [tailport=s, headport=n, color=gray]
BB502 [shape=record label="{1239: call[v14,'merge',v15,v16,-]*}" ] 
BB502 -> BB504 [tailport=s, headport=n]
BB502 -> BB506 [tailport=s, headport=n, color=gray]
BB503 [shape=record label="{1240: call[v14,'call',v15,v16,-]*}" ] 
BB503 -> BB504 [tailport=s, headport=n]
BB503 -> BB506 [tailport=s, headport=n, color=gray]
BB504 [shape=record label="{1241: read-variable['ret',v1,-]}" ] 
BB504 -> BB505 [tailport=s, headport=n, headlabel="      505"]
BB504 -> BB506 [tailport=s, headport=n, color=gray]
BB505 [shape=record label="{1242: return[v1]}" ] 
BB506 [shape=record label="{1243: exceptional-return}" ] 
}
