digraph {
rankdir="TD"
BB_entry638[shape=none,label=""];
BB_entry638 -> BB8710 [tailport=s, headport=n, headlabel="    8710"]
BB8710 [shape=record label="{22650: constant[undefined,v1]|22651: vardecl['self']|22652: vardecl['ast']|22653: vardecl['extra']|22654: vardecl['assignable']|22655: vardecl['result']|22656: vardecl['toWatch']|22657: vardecl['fnString']|22658: vardecl['fn']}" ] 
BB8710 -> BB8711 [tailport=s, headport=n, headlabel="      8711"]
BB8711 [shape=record label="{22659: read-variable['this',v2,-]|22660: write-variable[v2,'self']*|22661: read-variable['this',v6,-]|22662: read-property[v6,'astBuilder',v5]|22663: read-property[v5,'ast',-]|22664: \<property-non-null-undef\>[v6,'astBuilder']|22665: read-variable['expression',v7,-]}" ] 
BB8711 -> BB8712 [tailport=s, headport=n, headlabel="      8712"]
BB8711 -> BB8757 [tailport=s, headport=n, color=gray, headlabel="      8757"]
BB8712 [shape=record label="{22666: call-this.astBuilder.ast [v5,'ast',v7,v3]}" ] 
BB8712 -> BB8713 [tailport=s, headport=n, headlabel="      8713"]
BB8712 -> BB8757 [tailport=s, headport=n, color=gray]
BB8713 [shape=record label="{22667: write-variable[v3,'ast']*|22668: read-variable['this',v9,-]|22669: new[v8]|22670: constant[0.0,v10]|22671: write-property[v8,'nextId',v10]|22672: new[v11]|22673: write-property[v8,'filters',v11]|22674: read-variable['expensiveChecks',v12,-]|22675: write-property[v8,'expensiveChecks',v12]|22676: new[v13]|22677: read-variable['Array',v15,-]}" ] 
BB8713 -> BB8714 [tailport=s, headport=n, headlabel="      8714"]
BB8713 -> BB8757 [tailport=s, headport=n, color=gray]
BB8714 [shape=record label="{22678: construct [-,v15,v14]}" ] 
BB8714 -> BB8715 [tailport=s, headport=n, headlabel="      8715"]
BB8714 -> BB8757 [tailport=s, headport=n, color=gray]
BB8715 [shape=record label="{22679: write-property[v13,'vars',v14]|22680: read-variable['Array',v17,-]}" ] 
BB8715 -> BB8716 [tailport=s, headport=n, headlabel="      8716"]
BB8715 -> BB8757 [tailport=s, headport=n, color=gray]
BB8716 [shape=record label="{22681: construct [-,v17,v16]}" ] 
BB8716 -> BB8717 [tailport=s, headport=n, headlabel="      8717"]
BB8716 -> BB8757 [tailport=s, headport=n, color=gray]
BB8717 [shape=record label="{22682: write-property[v13,'body',v16]|22683: new[v18]|22684: write-property[v13,'own',v18]|22685: write-property[v8,'fn',v13]|22686: new[v19]|22687: read-variable['Array',v21,-]}" ] 
BB8717 -> BB8718 [tailport=s, headport=n, headlabel="      8718"]
BB8717 -> BB8757 [tailport=s, headport=n, color=gray]
BB8718 [shape=record label="{22688: construct [-,v21,v20]}" ] 
BB8718 -> BB8719 [tailport=s, headport=n, headlabel="      8719"]
BB8718 -> BB8757 [tailport=s, headport=n, color=gray]
BB8719 [shape=record label="{22689: write-property[v19,'vars',v20]|22690: read-variable['Array',v23,-]}" ] 
BB8719 -> BB8720 [tailport=s, headport=n, headlabel="      8720"]
BB8719 -> BB8757 [tailport=s, headport=n, color=gray]
BB8720 [shape=record label="{22691: construct [-,v23,v22]}" ] 
BB8720 -> BB8721 [tailport=s, headport=n, headlabel="      8721"]
BB8720 -> BB8757 [tailport=s, headport=n, color=gray]
BB8721 [shape=record label="{22692: write-property[v19,'body',v22]|22693: new[v24]|22694: write-property[v19,'own',v24]|22695: write-property[v8,'assign',v19]|22696: read-variable['Array',v26,-]}" ] 
BB8721 -> BB8722 [tailport=s, headport=n, headlabel="      8722"]
BB8721 -> BB8757 [tailport=s, headport=n, color=gray]
BB8722 [shape=record label="{22697: construct [-,v26,v25]}" ] 
BB8722 -> BB8723 [tailport=s, headport=n, headlabel="      8723"]
BB8722 -> BB8757 [tailport=s, headport=n, color=gray]
BB8723 [shape=record label="{22698: write-property[v8,'inputs',v25]|22699: write-property[v9,'state',v8]*|22700: read-variable['findConstantAndWatchExpressions',v28,v27]|22701: read-variable['ast',v29,-]|22702: read-variable['self',v31,-]|22703: read-property[v31,'$filter',v30]|22704: \<variable-non-null-undef\>['self']}" ] 
BB8723 -> BB8724 [tailport=s, headport=n, headlabel="      8724"]
BB8723 -> BB8757 [tailport=s, headport=n, color=gray]
BB8724 [shape=record label="{22705: call-findConstantAndWatchExpressions [v27,v28,v29,v30,-]*}" ] 
BB8724 -> BB8725 [tailport=s, headport=n, headlabel="      8725"]
BB8724 -> BB8757 [tailport=s, headport=n, color=gray]
BB8725 [shape=record label="{22706: constant[\"\",v32]|22707: write-variable[v32,'extra']*|22708: read-variable['this',v34,-]|22709: constant[\"assign\",v33]|22710: write-property[v34,'stage',v33]*|22711: read-variable['assignableAST',v37,v36]|22712: read-variable['ast',v38,-]}" ] 
BB8725 -> BB8726 [tailport=s, headport=n, headlabel="      8726"]
BB8725 -> BB8757 [tailport=s, headport=n, color=gray]
BB8726 [shape=record label="{22713: call-assignableAST [v36,v37,v38,v35]}" ] 
BB8726 -> BB8727 [tailport=s, headport=n, headlabel="      8727"]
BB8726 -> BB8757 [tailport=s, headport=n, color=gray]
BB8727 [shape=record label="{22714: write-variable[v35,'assignable']|22715: if[v35](true-block:8728,false-block:8735)}" ] 
BB8727 -> BB8728 [tailport=s, headport=n, headlabel="      8728"]
BB8727 -> BB8735 [tailport=s, headport=n, headlabel="      8735"]
BB8728 [shape=record label="{22716: read-variable['this',v41,-]|22717: read-property[v41,'state',v40]|22718: constant[\"assign\",v39]|22719: write-property[v40,'computing',v39]|22720: \<property-non-null-undef\>[v41,'state']*|22721: read-variable['this',v44,-]|22722: read-property[v44,'nextId',-]}" ] 
BB8728 -> BB8729 [tailport=s, headport=n, headlabel="      8729"]
BB8728 -> BB8757 [tailport=s, headport=n, color=gray]
BB8729 [shape=record label="{22723: call-this.nextId [v44,'nextId',v42]}" ] 
BB8729 -> BB8730 [tailport=s, headport=n, headlabel="      8730"]
BB8729 -> BB8757 [tailport=s, headport=n, color=gray]
BB8730 [shape=record label="{22724: write-variable[v42,'result']*|22725: read-variable['this',v46,-]|22726: read-property[v46,'recurse',-]|22727: read-variable['assignable',v47,-]|22728: read-variable['result',v48,-]}" ] 
BB8730 -> BB8731 [tailport=s, headport=n, headlabel="      8731"]
BB8730 -> BB8757 [tailport=s, headport=n, color=gray]
BB8731 [shape=record label="{22729: call-this.recurse [v46,'recurse',v47,v48,-]*}" ] 
BB8731 -> BB8732 [tailport=s, headport=n, headlabel="      8732"]
BB8731 -> BB8757 [tailport=s, headport=n, color=gray]
BB8732 [shape=record label="{22730: constant[\"fn.assign=\",v50]|22731: read-variable['this',v53,-]|22732: read-property[v53,'generateFunction',-]|22733: constant[\"assign\",v54]|22734: constant[\"s,v,l\",v55]}" ] 
BB8732 -> BB8733 [tailport=s, headport=n, headlabel="      8733"]
BB8732 -> BB8757 [tailport=s, headport=n, color=gray]
BB8733 [shape=record label="{22735: call-this.generateFunction [v53,'generateFunction',v54,v55,v51]}" ] 
BB8733 -> BB8734 [tailport=s, headport=n, headlabel="      8734"]
BB8733 -> BB8757 [tailport=s, headport=n, color=gray]
BB8734 [shape=record label="{22736: +[v50,v51,v49]|22737: write-variable[v49,'extra']*}" ] 
BB8734 -> BB8735 [tailport=s, headport=n]
BB8734 -> BB8757 [tailport=s, headport=n, color=gray]
BB8735 [shape=record label="{22738: read-variable['getInputs',v41,v40]|22739: read-variable['ast',v43,-]|22740: read-property[v43,'body',v42]|22741: \<variable-non-null-undef\>['ast']}" ] 
BB8735 -> BB8736 [tailport=s, headport=n, headlabel="      8736"]
BB8735 -> BB8757 [tailport=s, headport=n, color=gray]
BB8736 [shape=record label="{22742: call-getInputs [v40,v41,v42,v39]}" ] 
BB8736 -> BB8737 [tailport=s, headport=n, headlabel="      8737"]
BB8736 -> BB8757 [tailport=s, headport=n, color=gray]
BB8737 [shape=record label="{22743: write-variable[v39,'toWatch']*|22744: read-variable['self',v45,-]|22745: constant[\"inputs\",v44]|22746: write-property[v45,'stage',v44]|22747: \<variable-non-null-undef\>['self']*|22748: read-variable['forEach',v47,v46]|22749: read-variable['toWatch',v48,-]|22750: function-expr[function ( watch key ),v49]}" ] 
BB8737 -> BB8738 [tailport=s, headport=n, headlabel="      8738"]
BB8737 -> BB8757 [tailport=s, headport=n, color=gray]
BB8738 [shape=record label="{22751: call-forEach [v46,v47,v48,v49,-]*}" ] 
BB8738 -> BB8739 [tailport=s, headport=n, headlabel="      8739"]
BB8738 -> BB8757 [tailport=s, headport=n, color=gray]
BB8739 [shape=record label="{22752: read-variable['this',v52,-]|22753: read-property[v52,'state',v51]|22754: constant[\"fn\",v50]|22755: write-property[v51,'computing',v50]|22756: \<property-non-null-undef\>[v52,'state']*|22757: read-variable['this',v54,-]|22758: constant[\"main\",v53]|22759: write-property[v54,'stage',v53]*|22760: read-variable['this',v56,-]|22761: read-property[v56,'recurse',-]|22762: read-variable['ast',v57,-]}" ] 
BB8739 -> BB8740 [tailport=s, headport=n, headlabel="      8740"]
BB8739 -> BB8757 [tailport=s, headport=n, color=gray]
BB8740 [shape=record label="{22763: call-this.recurse [v56,'recurse',v57,-]*}" ] 
BB8740 -> BB8741 [tailport=s, headport=n, headlabel="      8741"]
BB8740 -> BB8757 [tailport=s, headport=n, color=gray]
BB8741 [shape=record label="{22764: constant[\"\\\"\",v77]|22765: read-variable['this',v79,-]|22766: read-property[v79,'USE',v78]|22767: +[v77,v78,v75]|22768: constant[\" \",v76]|22769: +[v75,v76,v73]|22770: read-variable['this',v80,-]|22771: read-property[v80,'STRICT',v74]|22772: +[v73,v74,v71]|22773: constant[\"\\\";\\n\",v72]|22774: +[v71,v72,v69]|22775: read-variable['this',v82,-]|22776: read-property[v82,'filterPrefix',-]}" ] 
BB8741 -> BB8742 [tailport=s, headport=n, headlabel="      8742"]
BB8741 -> BB8757 [tailport=s, headport=n, color=gray]
BB8742 [shape=record label="{22777: call-this.filterPrefix [v82,'filterPrefix',v70]}" ] 
BB8742 -> BB8743 [tailport=s, headport=n, headlabel="      8743"]
BB8742 -> BB8757 [tailport=s, headport=n, color=gray]
BB8743 [shape=record label="{22778: +[v69,v70,v67]|22779: constant[\"var fn=\",v68]|22780: +[v67,v68,v65]|22781: read-variable['this',v84,-]|22782: read-property[v84,'generateFunction',-]|22783: constant[\"fn\",v85]|22784: constant[\"s,l,a,i\",v86]}" ] 
BB8743 -> BB8744 [tailport=s, headport=n, headlabel="      8744"]
BB8743 -> BB8757 [tailport=s, headport=n, color=gray]
BB8744 [shape=record label="{22785: call-this.generateFunction [v84,'generateFunction',v85,v86,v66]}" ] 
BB8744 -> BB8745 [tailport=s, headport=n, headlabel="      8745"]
BB8744 -> BB8757 [tailport=s, headport=n, color=gray]
BB8745 [shape=record label="{22786: +[v65,v66,v63]|22787: read-variable['extra',v64,-]|22788: +[v63,v64,v61]|22789: read-variable['this',v88,-]|22790: read-property[v88,'watchFns',-]}" ] 
BB8745 -> BB8746 [tailport=s, headport=n, headlabel="      8746"]
BB8745 -> BB8757 [tailport=s, headport=n, color=gray]
BB8746 [shape=record label="{22791: call-this.watchFns [v88,'watchFns',v62]}" ] 
BB8746 -> BB8747 [tailport=s, headport=n, headlabel="      8747"]
BB8746 -> BB8757 [tailport=s, headport=n, color=gray]
BB8747 [shape=record label="{22792: +[v61,v62,v59]|22793: constant[\"return fn;\",v60]|22794: +[v59,v60,v58]|22795: write-variable[v58,'fnString']*|22796: read-variable['Function',v91,-]|22797: constant[\"$filter\",v92]|22798: constant[\"ensureSafeMemberName\",v93]|22799: constant[\"ensureSafeObject\",v94]|22800: constant[\"ensureSafeFunction\",v95]|22801: constant[\"ifDefined\",v96]|22802: constant[\"plus\",v97]|22803: constant[\"text\",v98]|22804: read-variable['fnString',v99,-]}" ] 
BB8747 -> BB8748 [tailport=s, headport=n, headlabel="      8748"]
BB8747 -> BB8757 [tailport=s, headport=n, color=gray]
BB8748 [shape=record label="{22805: construct [-,v91,v92,v93,v94,v95,v96,v97,v98,v99,v90]}" ] 
BB8748 -> BB8749 [tailport=s, headport=n, headlabel="      8749"]
BB8748 -> BB8757 [tailport=s, headport=n, color=gray]
BB8749 [shape=record label="{22806: read-variable['this',v101,-]|22807: read-property[v101,'$filter',v100]|22808: read-variable['ensureSafeMemberName',v102,-]|22809: read-variable['ensureSafeObject',v103,-]|22810: read-variable['ensureSafeFunction',v104,-]|22811: read-variable['ifDefined',v105,-]|22812: read-variable['plusFn',v106,-]|22813: read-variable['expression',v107,-]}" ] 
BB8749 -> BB8750 [tailport=s, headport=n, headlabel="      8750"]
BB8749 -> BB8757 [tailport=s, headport=n, color=gray]
BB8750 [shape=record label="{22814: call-null [-,v90,v100,v102,v103,v104,v105,v106,v107,v89]}" ] 
BB8750 -> BB8751 [tailport=s, headport=n, headlabel="      8751"]
BB8750 -> BB8757 [tailport=s, headport=n, color=gray]
BB8751 [shape=record label="{22815: write-variable[v89,'fn']*|22816: read-variable['this',v109,-]|22817: read-variable['this',v110,-]|22818: read-variable['undefined',v108,-]|22819: write-property[v110,'stage',v108]|22820: write-property[v109,'state',v108]*|22821: read-variable['fn',v112,-]|22822: read-variable['isLiteral',v114,v113]|22823: read-variable['ast',v115,-]}" ] 
BB8751 -> BB8752 [tailport=s, headport=n, headlabel="      8752"]
BB8751 -> BB8757 [tailport=s, headport=n, color=gray]
BB8752 [shape=record label="{22824: call-isLiteral [v113,v114,v115,v111]}" ] 
BB8752 -> BB8753 [tailport=s, headport=n, headlabel="      8753"]
BB8752 -> BB8757 [tailport=s, headport=n, color=gray]
BB8753 [shape=record label="{22825: write-property[v112,'literal',v111]|22826: \<variable-non-null-undef\>['fn']*|22827: read-variable['fn',v117,-]|22828: read-variable['isConstant',v119,v118]|22829: read-variable['ast',v120,-]}" ] 
BB8753 -> BB8754 [tailport=s, headport=n, headlabel="      8754"]
BB8753 -> BB8757 [tailport=s, headport=n, color=gray]
BB8754 [shape=record label="{22830: call-isConstant [v118,v119,v120,v116]}" ] 
BB8754 -> BB8755 [tailport=s, headport=n, headlabel="      8755"]
BB8754 -> BB8757 [tailport=s, headport=n, color=gray]
BB8755 [shape=record label="{22831: write-property[v117,'constant',v116]|22832: \<variable-non-null-undef\>['fn']*|22833: read-variable['fn',v1,-]}" ] 
BB8755 -> BB8756 [tailport=s, headport=n, headlabel="      8756"]
BB8755 -> BB8757 [tailport=s, headport=n, color=gray]
BB8756 [shape=record label="{22834: return[v1]}" ] 
BB8757 [shape=record label="{22835: exceptional-return}" ] 
//#$~ 13166
}
