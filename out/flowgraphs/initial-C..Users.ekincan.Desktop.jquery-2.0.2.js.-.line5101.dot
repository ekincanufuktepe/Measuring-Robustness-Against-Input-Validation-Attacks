digraph {
rankdir="TD"
BB_entry308[shape=none,label=""];
BB_entry308 -> BB4889 [tailport=s, headport=n, headlabel="    4889"]
BB4889 [shape=record label="{14477: constant[undefined,v1]|14478: vardecl['handleObj']|14479: vardecl['type']}" ] 
BB4889 -> BB4890 [tailport=s, headport=n, headlabel="      4890"]
BB4890 [shape=record label="{14480: read-variable['types',v2,-]|14481: if[v2](true-block:4891,false-block:4893)}" ] 
BB4890 -> BB4893 [tailport=s, headport=n, headlabel="      4893"]
BB4890 -> BB4891 [tailport=s, headport=n, headlabel="      4891"]
BB4890 -> BB4919 [tailport=s, headport=n, color=gray, headlabel="      4919"]
BB4891 [shape=record label="{14482: read-variable['types',v3,-]|14483: read-property[v3,'preventDefault',v2]|14484: \<variable-non-null-undef\>['types']|14485: if[v2](true-block:4892,false-block:4893)}" ] 
BB4891 -> BB4893 [tailport=s, headport=n]
BB4891 -> BB4892 [tailport=s, headport=n, headlabel="      4892"]
BB4891 -> BB4919 [tailport=s, headport=n, color=gray]
BB4892 [shape=record label="{14486: read-variable['types',v4,-]|14487: read-property[v4,'handleObj',v2]|14488: \<variable-non-null-undef\>['types']}" ] 
BB4892 -> BB4893 [tailport=s, headport=n]
BB4892 -> BB4919 [tailport=s, headport=n, color=gray]
BB4893 [shape=record label="{14489: if[v2](true-block:4894,false-block:4902)}" ] 
BB4893 -> BB4894 [tailport=s, headport=n, headlabel="      4894"]
BB4893 -> BB4902 [tailport=s, headport=n, headlabel="      4902"]
BB4894 [shape=record label="{14490: read-variable['types',v4,-]|14491: read-property[v4,'handleObj',v3]|14492: \<variable-non-null-undef\>['types']|14493: write-variable[v3,'handleObj']*|14494: read-variable['jQuery',v8,v7]|14495: read-variable['types',v10,-]|14496: read-property[v10,'delegateTarget',v9]|14497: \<variable-non-null-undef\>['types']}" ] 
BB4894 -> BB4895 [tailport=s, headport=n, headlabel="      4895"]
BB4894 -> BB4919 [tailport=s, headport=n, color=gray]
BB4895 [shape=record label="{14498: call[v7,v8,v9,v6]}" ] 
BB4895 -> BB4896 [tailport=s, headport=n, headlabel="      4896"]
BB4895 -> BB4919 [tailport=s, headport=n, color=gray]
BB4896 [shape=record label="{14499: read-property[v6,'off',-]|14500: read-variable['handleObj',v13,-]|14501: read-property[v13,'namespace',v12]|14502: \<variable-non-null-undef\>['handleObj']|14503: if[v12](true-block:4897,false-block:4898)}" ] 
BB4896 -> BB4897 [tailport=s, headport=n, headlabel="      4897"]
BB4896 -> BB4898 [tailport=s, headport=n, headlabel="      4898"]
BB4896 -> BB4919 [tailport=s, headport=n, color=gray]
BB4897 [shape=record label="{14504: read-variable['handleObj',v18,-]|14505: read-property[v18,'origType',v16]|14506: \<variable-non-null-undef\>['handleObj']|14507: constant[\".\",v17]|14508: +[v16,v17,v14]|14509: read-variable['handleObj',v19,-]|14510: read-property[v19,'namespace',v15]|14511: \<variable-non-null-undef\>['handleObj']|14512: +[v14,v15,v11]}" ] 
BB4897 -> BB4899 [tailport=s, headport=n, headlabel="      4899"]
BB4897 -> BB4919 [tailport=s, headport=n, color=gray]
BB4898 [shape=record label="{14513: read-variable['handleObj',v14,-]|14514: read-property[v14,'origType',v11]|14515: \<variable-non-null-undef\>['handleObj']}" ] 
BB4898 -> BB4899 [tailport=s, headport=n]
BB4898 -> BB4919 [tailport=s, headport=n, color=gray]
BB4899 [shape=record label="{14516: read-variable['handleObj',v15,-]|14517: read-property[v15,'selector',v14]|14518: \<variable-non-null-undef\>['handleObj']|14519: read-variable['handleObj',v17,-]|14520: read-property[v17,'handler',v16]|14521: \<variable-non-null-undef\>['handleObj']}" ] 
BB4899 -> BB4900 [tailport=s, headport=n, headlabel="      4900"]
BB4899 -> BB4919 [tailport=s, headport=n, color=gray]
BB4900 [shape=record label="{14522: call[v6,'off',v11,v14,v16,-]*}" ] 
BB4900 -> BB4901 [tailport=s, headport=n, headlabel="      4901"]
BB4900 -> BB4919 [tailport=s, headport=n, color=gray]
BB4901 [shape=record label="{14523: read-variable['this',v1,-]}" ] 
BB4901 -> BB4918 [tailport=s, headport=n, headlabel="      4918"]
BB4901 -> BB4919 [tailport=s, headport=n, color=gray]
BB4902 [shape=record label="{14524: typeof['types',v4]|14525: constant[\"object\",v5]|14526: ===[v4,v5,v3]|14527: if[v3](true-block:4903,false-block:4910)}" ] 
BB4902 -> BB4903 [tailport=s, headport=n, headlabel="      4903"]
BB4902 -> BB4910 [tailport=s, headport=n, headlabel="      4910"]
BB4902 -> BB4919 [tailport=s, headport=n, color=gray]
BB4903 [shape=record label="{14528: read-variable['types',v7,-]}" ] 
BB4903 -> BB4904 [tailport=s, headport=n, headlabel="      4904"]
BB4903 -> BB4919 [tailport=s, headport=n, color=gray]
BB4904 [shape=record label="{14529: begin-for-in[v7,v8]}" ] 
BB4904 -> BB4905 [tailport=s, headport=n, headlabel="      4905"]
BB4904 -> BB4919 [tailport=s, headport=n, color=gray]
BB4905 [shape=record label="{14530: has-next[v8,v9]|14531: if[v9](true-block:4906,false-block:4909)}" ] 
BB4905 -> BB4906 [tailport=s, headport=n, headlabel="      4906"]
BB4905 -> BB4909 [tailport=s, headport=n, headlabel="      4909"]
BB4906 [shape=record label="{14532: next-property[v8,v10]|14533: write-variable[v10,'type']|14534: read-variable['this',v12,-]|14535: read-property[v12,'off',-]|14536: read-variable['type',v13,-]|14537: read-variable['selector',v14,-]|14538: read-variable['types',v16,-]|14539: read-variable['type',v17,-]|14540: read-property[v16,v17,v15]|14541: \<variable-non-null-undef\>['types']}" ] 
BB4906 -> BB4907 [tailport=s, headport=n, headlabel="      4907"]
BB4906 -> BB4919 [tailport=s, headport=n, color=gray]
BB4907 [shape=record label="{14542: call[v12,'off',v13,v14,v15,-]*}" ] 
BB4907 -> BB4908 [tailport=s, headport=n, headlabel="      4908"]
BB4907 -> BB4919 [tailport=s, headport=n, color=gray]
BB4908 [shape=record label="{14543: end-for-in(begin-node:14529)}" ] 
BB4908 -> BB4905 [tailport=s, headport=n]
BB4909 [shape=record label="{14544: read-variable['this',v1,-]}" ] 
BB4909 -> BB4918 [tailport=s, headport=n]
BB4909 -> BB4919 [tailport=s, headport=n, color=gray]
BB4910 [shape=record label="{14545: read-variable['selector',v7,-]|14546: constant[false,v8]|14547: ===[v7,v8,v6]|14548: if[v6](true-block:4912,false-block:4911)}" ] 
BB4910 -> BB4912 [tailport=s, headport=n, headlabel="      4912"]
BB4910 -> BB4911 [tailport=s, headport=n, headlabel="      4911"]
BB4910 -> BB4919 [tailport=s, headport=n, color=gray]
BB4911 [shape=record label="{14549: typeof['selector',v7]|14550: constant[\"function\",v8]|14551: ===[v7,v8,v6]}" ] 
BB4911 -> BB4912 [tailport=s, headport=n]
BB4911 -> BB4919 [tailport=s, headport=n, color=gray]
BB4912 [shape=record label="{14552: if[v6](true-block:4913,false-block:4914)}" ] 
BB4912 -> BB4913 [tailport=s, headport=n, headlabel="      4913"]
BB4912 -> BB4914 [tailport=s, headport=n, headlabel="      4914"]
BB4913 [shape=record label="{14553: read-variable['selector',v7,-]|14554: write-variable[v7,'fn']*|14555: read-variable['undefined',v8,-]|14556: write-variable[v8,'selector']*}" ] 
BB4913 -> BB4914 [tailport=s, headport=n]
BB4913 -> BB4919 [tailport=s, headport=n, color=gray]
BB4914 [shape=record label="{14557: read-variable['fn',v8,-]|14558: constant[false,v9]|14559: ===[v8,v9,v7]|14560: if[v7](true-block:4915,false-block:4916)}" ] 
BB4914 -> BB4915 [tailport=s, headport=n, headlabel="      4915"]
BB4914 -> BB4916 [tailport=s, headport=n, headlabel="      4916"]
BB4914 -> BB4919 [tailport=s, headport=n, color=gray]
BB4915 [shape=record label="{14561: read-variable['returnFalse',v10,-]|14562: write-variable[v10,'fn']*}" ] 
BB4915 -> BB4916 [tailport=s, headport=n]
BB4915 -> BB4919 [tailport=s, headport=n, color=gray]
BB4916 [shape=record label="{14563: read-variable['this',v11,-]|14564: read-property[v11,'each',-]|14565: function-expr[function(),v12]}" ] 
BB4916 -> BB4917 [tailport=s, headport=n, headlabel="      4917"]
BB4916 -> BB4919 [tailport=s, headport=n, color=gray]
BB4917 [shape=record label="{14566: call[v11,'each',v12,v1]}" ] 
BB4917 -> BB4918 [tailport=s, headport=n]
BB4917 -> BB4919 [tailport=s, headport=n, color=gray]
BB4918 [shape=record label="{14567: return[v1]}" ] 
BB4919 [shape=record label="{14568: exceptional-return}" ] 
}
