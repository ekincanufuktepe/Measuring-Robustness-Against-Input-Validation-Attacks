digraph {
rankdir="TD"
BB_entry36[shape=none,label=""];
BB_entry36 -> BB333 [tailport=s, headport=n, headlabel="    333"]
BB333 [shape=record label="{843: constant[undefined,v1]|844: vardecl['i']|845: vardecl['value']|846: vardecl['single']|847: vardecl['multiple']}" ] 
BB333 -> BB334 [tailport=s, headport=n, headlabel="      334"]
BB334 [shape=record label="{848: read-variable['remove',v4,v2]|849: if[v4](true-block:335,false-block:336)}" ] 
BB334 -> BB335 [tailport=s, headport=n, headlabel="      335"]
BB334 -> BB336 [tailport=s, headport=n, headlabel="      336"]
BB334 -> BB363 [tailport=s, headport=n, color=gray, headlabel="      363"]
BB335 [shape=record label="{850: read-variable['this',v5,-]|851: read-property[v5,'removeListener',v3]}" ] 
BB335 -> BB337 [tailport=s, headport=n, headlabel="      337"]
BB335 -> BB363 [tailport=s, headport=n, color=gray]
BB336 [shape=record label="{852: read-variable['this',v5,-]|853: read-property[v5,'addListener',v3]}" ] 
BB336 -> BB337 [tailport=s, headport=n]
BB336 -> BB363 [tailport=s, headport=n, color=gray]
BB337 [shape=record label="{854: write-variable[v3,'single']*|855: read-variable['remove',v6,v2]|856: if[v6](true-block:338,false-block:339)}" ] 
BB337 -> BB338 [tailport=s, headport=n, headlabel="      338"]
BB337 -> BB339 [tailport=s, headport=n, headlabel="      339"]
BB337 -> BB363 [tailport=s, headport=n, color=gray]
BB338 [shape=record label="{857: read-variable['this',v7,-]|858: read-property[v7,'removeListeners',v5]}" ] 
BB338 -> BB340 [tailport=s, headport=n, headlabel="      340"]
BB338 -> BB363 [tailport=s, headport=n, color=gray]
BB339 [shape=record label="{859: read-variable['this',v7,-]|860: read-property[v7,'addListeners',v5]}" ] 
BB339 -> BB340 [tailport=s, headport=n]
BB339 -> BB363 [tailport=s, headport=n, color=gray]
BB340 [shape=record label="{861: write-variable[v5,'multiple']*|862: typeof['evt',v8]|863: constant[\"object\",v9]|864: ===[v8,v9,v7]|865: if[v7](true-block:341,false-block:342)}" ] 
BB340 -> BB342 [tailport=s, headport=n, headlabel="      342"]
BB340 -> BB341 [tailport=s, headport=n, headlabel="      341"]
BB340 -> BB363 [tailport=s, headport=n, color=gray]
BB341 [shape=record label="{866: read-variable['evt',v11,v2]|867: read-variable['RegExp',v12,v2]|868: instanceof[v11,v12,v10]|869: ![v10,v7]}" ] 
BB341 -> BB342 [tailport=s, headport=n]
BB341 -> BB363 [tailport=s, headport=n, color=gray]
BB342 [shape=record label="{870: if[v7](true-block:343,false-block:344)}" ] 
BB342 -> BB343 [tailport=s, headport=n, headlabel="      343"]
BB342 -> BB344 [tailport=s, headport=n, headlabel="      344"]
BB343 [shape=record label="{871: read-variable['evt',v11,v2]}" ] 
BB343 -> BB345 [tailport=s, headport=n, headlabel="      345"]
BB343 -> BB363 [tailport=s, headport=n, color=gray]
BB344 [shape=record label="{872: read-variable['listeners',v11,v2]|873: read-property[v11,'length',v10]|874: \<variable-non-null-undef\>['listeners']|875: write-variable[v10,'i']*}" ] 
BB344 -> BB358 [tailport=s, headport=n, headlabel="      358"]
BB344 -> BB363 [tailport=s, headport=n, color=gray]
BB345 [shape=record label="{876: begin-for-in[v11,v12]}" ] 
BB345 -> BB346 [tailport=s, headport=n, headlabel="      346"]
BB345 -> BB363 [tailport=s, headport=n, color=gray]
BB346 [shape=record label="{877: has-next[v12,v13]|878: if[v13](true-block:347,false-block:361)}" ] 
BB346 -> BB347 [tailport=s, headport=n, headlabel="      347"]
BB346 -> BB361 [tailport=s, headport=n, headlabel="      361"]
BB347 [shape=record label="{879: next-property[v12,v14]|880: write-variable[v14,'i']|881: read-variable['evt',v17,-]|882: read-property[v17,'hasOwnProperty',-]|883: \<variable-non-null-undef\>['evt']|884: read-variable['i',v18,v2]}" ] 
BB347 -> BB348 [tailport=s, headport=n, headlabel="      348"]
BB347 -> BB363 [tailport=s, headport=n, color=gray]
BB348 [shape=record label="{885: call-evt.hasOwnProperty [v17,'hasOwnProperty',v18,v15]}" ] 
BB348 -> BB349 [tailport=s, headport=n, headlabel="      349"]
BB348 -> BB363 [tailport=s, headport=n, color=gray]
BB349 [shape=record label="{886: if[v15](true-block:350,false-block:351)}" ] 
BB349 -> BB351 [tailport=s, headport=n, headlabel="      351"]
BB349 -> BB350 [tailport=s, headport=n, headlabel="      350"]
BB350 [shape=record label="{887: read-variable['evt',v19,v2]|888: read-variable['i',v20,v2]|889: read-property[v19,v20,v15]|890: \<variable-non-null-undef\>['evt']|891: write-variable[v15,'value']}" ] 
BB350 -> BB351 [tailport=s, headport=n]
BB350 -> BB363 [tailport=s, headport=n, color=gray]
BB351 [shape=record label="{892: if[v15](true-block:352,false-block:357)}" ] 
BB351 -> BB352 [tailport=s, headport=n, headlabel="      352"]
BB351 -> BB357 [tailport=s, headport=n, headlabel="      357"]
BB352 [shape=record label="{893: typeof['value',v20]|894: constant[\"function\",v21]|895: ===[v20,v21,v19]|896: if[v19](true-block:353,false-block:354)}" ] 
BB352 -> BB353 [tailport=s, headport=n, headlabel="      353"]
BB352 -> BB354 [tailport=s, headport=n, headlabel="      354"]
BB352 -> BB363 [tailport=s, headport=n, color=gray]
BB353 [shape=record label="{897: read-variable['single',v23,-]|898: read-property[v23,'call',-]|899: \<variable-non-null-undef\>['single']|900: read-variable['this',v24,-]|901: read-variable['i',v25,v2]|902: read-variable['value',v26,v2]}" ] 
BB353 -> BB355 [tailport=s, headport=n, headlabel="      355"]
BB353 -> BB363 [tailport=s, headport=n, color=gray]
BB354 [shape=record label="{903: read-variable['multiple',v23,-]|904: read-property[v23,'call',-]|905: \<variable-non-null-undef\>['multiple']|906: read-variable['this',v24,-]|907: read-variable['i',v25,v2]|908: read-variable['value',v26,v2]}" ] 
BB354 -> BB356 [tailport=s, headport=n, headlabel="      356"]
BB354 -> BB363 [tailport=s, headport=n, color=gray]
BB355 [shape=record label="{909: call-single.call [v23,'call',v24,v25,v26,-]*}" ] 
BB355 -> BB357 [tailport=s, headport=n]
BB355 -> BB363 [tailport=s, headport=n, color=gray]
BB356 [shape=record label="{910: call-multiple.call [v23,'call',v24,v25,v26,-]*}" ] 
BB356 -> BB357 [tailport=s, headport=n]
BB356 -> BB363 [tailport=s, headport=n, color=gray]
BB357 [shape=record label="{911: end-for-in(begin-node:876)}" ] 
BB357 -> BB346 [tailport=s, headport=n]
BB358 [shape=record label="{912: constant[1.0,v13]|913: read-variable['i',v14,v2]|914: +[v14,v12]|915: -[v12,v13,v15]|916: write-variable[v15,'i']|917: if[v12](true-block:359,false-block:361)}" ] 
BB358 -> BB359 [tailport=s, headport=n, headlabel="      359"]
BB358 -> BB361 [tailport=s, headport=n]
BB358 -> BB363 [tailport=s, headport=n, color=gray]
BB359 [shape=record label="{918: read-variable['single',v17,-]|919: read-property[v17,'call',-]|920: \<variable-non-null-undef\>['single']|921: read-variable['this',v18,-]|922: read-variable['evt',v19,v2]|923: read-variable['listeners',v21,v2]|924: read-variable['i',v22,v2]|925: read-property[v21,v22,v20]|926: \<variable-non-null-undef\>['listeners']}" ] 
BB359 -> BB360 [tailport=s, headport=n, headlabel="      360"]
BB359 -> BB363 [tailport=s, headport=n, color=gray]
BB360 [shape=record label="{927: call-single.call [v17,'call',v18,v19,v20,-]*}" ] 
BB360 -> BB358 [tailport=s, headport=n]
BB360 -> BB363 [tailport=s, headport=n, color=gray]
BB361 [shape=record label="{928: read-variable['this',v1,-]}" ] 
BB361 -> BB362 [tailport=s, headport=n, headlabel="      362"]
BB361 -> BB363 [tailport=s, headport=n, color=gray]
BB362 [shape=record label="{929: return[v1]}" ] 
BB363 [shape=record label="{930: exceptional-return}" ] 
//#$~ 534
}
