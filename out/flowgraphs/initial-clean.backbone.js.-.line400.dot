digraph {
rankdir="TD"
BB_entry26[shape=none,label=""];
BB_entry26 -> BB376 [tailport=s, headport=n, headlabel="    376"]
BB376 [shape=record label="{1186: constant[undefined,v1]|1187: vardecl['val']|1188: vardecl['changed']|1189: vardecl['old']|1190: vardecl['attr']}" ] 
BB376 -> BB377 [tailport=s, headport=n, headlabel="      377"]
BB377 [shape=record label="{1191: read-variable['diff',v3,-]|1192: ![v3,v2]|1193: if[v2](true-block:378,false-block:384)}" ] 
BB377 -> BB378 [tailport=s, headport=n, headlabel="      378"]
BB377 -> BB384 [tailport=s, headport=n, headlabel="      384"]
BB377 -> BB399 [tailport=s, headport=n, color=gray, headlabel="      399"]
BB378 [shape=record label="{1194: read-variable['this',v6,-]|1195: read-property[v6,'hasChanged',-]}" ] 
BB378 -> BB379 [tailport=s, headport=n, headlabel="      379"]
BB378 -> BB399 [tailport=s, headport=n, color=gray]
BB379 [shape=record label="{1196: call-this.hasChanged [v6,'hasChanged',v4]}" ] 
BB379 -> BB380 [tailport=s, headport=n, headlabel="      380"]
BB379 -> BB399 [tailport=s, headport=n, color=gray]
BB380 [shape=record label="{1197: if[v4](true-block:381,false-block:382)}" ] 
BB380 -> BB381 [tailport=s, headport=n, headlabel="      381"]
BB380 -> BB382 [tailport=s, headport=n, headlabel="      382"]
BB381 [shape=record label="{1198: read-variable['_',v8,-]|1199: read-property[v8,'clone',-]|1200: \<variable-non-null-undef\>['_']|1201: read-variable['this',v10,-]|1202: read-property[v10,'changed',v9]}" ] 
BB381 -> BB383 [tailport=s, headport=n, headlabel="      383"]
BB381 -> BB399 [tailport=s, headport=n, color=gray]
BB382 [shape=record label="{1203: constant[false,v1]}" ] 
BB382 -> BB398 [tailport=s, headport=n, headlabel="      398"]
BB383 [shape=record label="{1204: call-_.clone [v8,'clone',v9,v1]}" ] 
BB383 -> BB398 [tailport=s, headport=n]
BB383 -> BB399 [tailport=s, headport=n, color=gray]
BB384 [shape=record label="{1205: constant[false,v4]|1206: write-variable[v4,'changed']*|1207: read-variable['this',v7,-]|1208: read-property[v7,'_changing',v6]|1209: if[v6](true-block:385,false-block:386)}" ] 
BB384 -> BB385 [tailport=s, headport=n, headlabel="      385"]
BB384 -> BB386 [tailport=s, headport=n, headlabel="      386"]
BB384 -> BB399 [tailport=s, headport=n, color=gray]
BB385 [shape=record label="{1210: read-variable['this',v8,-]|1211: read-property[v8,'_previousAttributes',v5]}" ] 
BB385 -> BB387 [tailport=s, headport=n, headlabel="      387"]
BB385 -> BB399 [tailport=s, headport=n, color=gray]
BB386 [shape=record label="{1212: read-variable['this',v8,-]|1213: read-property[v8,'attributes',v5]}" ] 
BB386 -> BB387 [tailport=s, headport=n]
BB386 -> BB399 [tailport=s, headport=n, color=gray]
BB387 [shape=record label="{1214: write-variable[v5,'old']*|1215: read-variable['diff',v9,-]}" ] 
BB387 -> BB388 [tailport=s, headport=n, headlabel="      388"]
BB387 -> BB399 [tailport=s, headport=n, color=gray]
BB388 [shape=record label="{1216: begin-for-in[v9,v10]}" ] 
BB388 -> BB389 [tailport=s, headport=n, headlabel="      389"]
BB388 -> BB399 [tailport=s, headport=n, color=gray]
BB389 [shape=record label="{1217: has-next[v10,v11]|1218: if[v11](true-block:390,false-block:397)}" ] 
BB389 -> BB390 [tailport=s, headport=n, headlabel="      390"]
BB389 -> BB397 [tailport=s, headport=n, headlabel="      397"]
BB390 [shape=record label="{1219: next-property[v10,v12]|1220: write-variable[v12,'attr']|1221: read-variable['_',v15,-]|1222: read-property[v15,'isEqual',-]|1223: \<variable-non-null-undef\>['_']|1224: read-variable['old',v17,-]|1225: read-variable['attr',v18,-]|1226: read-property[v17,v18,v16]|1227: \<variable-non-null-undef\>['old']|1228: read-variable['diff',v20,-]|1229: read-variable['attr',v21,-]|1230: read-property[v20,v21,v19]|1231: \<variable-non-null-undef\>['diff']|1232: write-variable[v19,'val']}" ] 
BB390 -> BB391 [tailport=s, headport=n, headlabel="      391"]
BB390 -> BB399 [tailport=s, headport=n, color=gray]
BB391 [shape=record label="{1233: call-_.isEqual [v15,'isEqual',v16,v19,v13]}" ] 
BB391 -> BB392 [tailport=s, headport=n, headlabel="      392"]
BB391 -> BB399 [tailport=s, headport=n, color=gray]
BB392 [shape=record label="{1234: if[v13](true-block:396,false-block:393)}" ] 
BB392 -> BB396 [tailport=s, headport=n, headlabel="      396"]
BB392 -> BB393 [tailport=s, headport=n, headlabel="      393"]
BB393 [shape=record label="{1235: read-variable['changed',v23,-]|1236: if[v23](true-block:395,false-block:394)}" ] 
BB393 -> BB395 [tailport=s, headport=n, headlabel="      395"]
BB393 -> BB394 [tailport=s, headport=n, headlabel="      394"]
BB393 -> BB399 [tailport=s, headport=n, color=gray]
BB394 [shape=record label="{1237: new[v23]|1238: write-variable[v23,'changed']}" ] 
BB394 -> BB395 [tailport=s, headport=n]
BB395 [shape=record label="{1239: read-variable['attr',v24,-]|1240: read-variable['val',v22,-]|1241: write-property[v23,v24,v22]*}" ] 
BB395 -> BB396 [tailport=s, headport=n]
BB395 -> BB399 [tailport=s, headport=n, color=gray]
BB396 [shape=record label="{1242: end-for-in(begin-node:1216)}" ] 
BB396 -> BB389 [tailport=s, headport=n]
BB397 [shape=record label="{1243: read-variable['changed',v1,-]}" ] 
BB397 -> BB398 [tailport=s, headport=n]
BB397 -> BB399 [tailport=s, headport=n, color=gray]
BB398 [shape=record label="{1244: return[v1]}" ] 
BB399 [shape=record label="{1245: exceptional-return}" ] 
//#$~ 408
}
