digraph {
rankdir="TD"
BB_entry283[shape=none,label=""];
BB_entry283 -> BB3580 [tailport=s, headport=n, headlabel="    3580"]
BB3580 [shape=record label="{11819: constant[undefined,v1]|11820: vardecl['template']|11821: vardecl['inverse']|11822: vardecl['helperName']}" ] 
BB3580 -> BB3581 [tailport=s, headport=n, headlabel="      3581"]
BB3581 [shape=record label="{11823: read-variable['Ember',v3,-]|11824: read-property[v3,'assert',-]|11825: \<variable-non-null-undef\>['Ember']|11826: constant[\"You must pass exactly one argument to the unless helper\",v4]|11827: read-variable['params',v8,-]|11828: read-property[v8,'length',v6]|11829: \<variable-non-null-undef\>['params']|11830: constant[1.0,v7]|11831: ===[v6,v7,v5]}" ] 
BB3581 -> BB3582 [tailport=s, headport=n, headlabel="      3582"]
BB3581 -> BB3595 [tailport=s, headport=n, color=gray, headlabel="      3595"]
BB3582 [shape=record label="{11832: call-Ember.assert [v3,'assert',v4,v5,-]*}" ] 
BB3582 -> BB3583 [tailport=s, headport=n, headlabel="      3583"]
BB3582 -> BB3595 [tailport=s, headport=n, color=gray]
BB3583 [shape=record label="{11833: read-variable['Ember',v10,-]|11834: read-property[v10,'assert',-]|11835: \<variable-non-null-undef\>['Ember']|11836: constant[\"You must pass a block to the unless helper\",v11]|11837: read-variable['options',v15,-]|11838: read-property[v15,'template',v14]|11839: \<variable-non-null-undef\>['options']|11840: ![v14,v13]|11841: ![v13,v12]}" ] 
BB3583 -> BB3584 [tailport=s, headport=n, headlabel="      3584"]
BB3583 -> BB3595 [tailport=s, headport=n, color=gray]
BB3584 [shape=record label="{11842: call-Ember.assert [v10,'assert',v11,v12,-]*}" ] 
BB3584 -> BB3585 [tailport=s, headport=n, headlabel="      3585"]
BB3584 -> BB3595 [tailport=s, headport=n, color=gray]
BB3585 [shape=record label="{11843: read-variable['options',v17,-]|11844: read-property[v17,'template',v16]|11845: \<variable-non-null-undef\>['options']|11846: write-variable[v16,'template']*|11847: read-variable['options',v19,-]|11848: read-property[v19,'inverse',v18]|11849: \<variable-non-null-undef\>['options']|11850: if[v18](true-block:3587,false-block:3586)}" ] 
BB3585 -> BB3587 [tailport=s, headport=n, headlabel="      3587"]
BB3585 -> BB3586 [tailport=s, headport=n, headlabel="      3586"]
BB3585 -> BB3595 [tailport=s, headport=n, color=gray]
BB3586 [shape=record label="{11851: read-variable['EMPTY_TEMPLATE',v18,-]}" ] 
BB3586 -> BB3587 [tailport=s, headport=n]
BB3586 -> BB3595 [tailport=s, headport=n, color=gray]
BB3587 [shape=record label="{11852: write-variable[v18,'inverse']*|11853: constant[\"unless\",v19]|11854: write-variable[v19,'helperName']*|11855: read-variable['options',v21,-]|11856: read-variable['inverse',v20,-]|11857: write-property[v21,'template',v20]|11858: \<variable-non-null-undef\>['options']*|11859: read-variable['options',v23,-]|11860: read-variable['template',v22,-]|11861: write-property[v23,'inverse',v22]|11862: \<variable-non-null-undef\>['options']*|11863: read-variable['options',v25,-]|11864: read-variable['options',v26,-]|11865: read-property[v26,'helperName',v24]|11866: \<variable-non-null-undef\>['options']|11867: if[v24](true-block:3589,false-block:3588)}" ] 
BB3587 -> BB3589 [tailport=s, headport=n, headlabel="      3589"]
BB3587 -> BB3588 [tailport=s, headport=n, headlabel="      3588"]
BB3587 -> BB3595 [tailport=s, headport=n, color=gray]
BB3588 [shape=record label="{11868: read-variable['helperName',v24,-]}" ] 
BB3588 -> BB3589 [tailport=s, headport=n]
BB3588 -> BB3595 [tailport=s, headport=n, color=gray]
BB3589 [shape=record label="{11869: write-property[v25,'helperName',v24]|11870: \<variable-non-null-undef\>['options']*|11871: read-variable['env',v28,-]|11872: read-property[v28,'data',v27]|11873: \<variable-non-null-undef\>['env']|11874: read-property[v27,'isUnbound',v26]|11875: \<property-non-null-undef\>[v28,'data']|11876: if[v26](true-block:3590,false-block:3591)}" ] 
BB3589 -> BB3590 [tailport=s, headport=n, headlabel="      3590"]
BB3589 -> BB3591 [tailport=s, headport=n, headlabel="      3591"]
BB3589 -> BB3595 [tailport=s, headport=n, color=gray]
BB3590 [shape=record label="{11877: read-variable['env',v31,-]|11878: read-property[v31,'data',v30]|11879: \<variable-non-null-undef\>['env']|11880: constant[false,v29]|11881: write-property[v30,'isUnbound',v29]|11882: \<property-non-null-undef\>[v31,'data']*|11883: read-variable['env',v36,-]|11884: read-property[v36,'helpers',v35]|11885: \<variable-non-null-undef\>['env']|11886: read-property[v35,'unboundIf',v34]|11887: \<property-non-null-undef\>[v36,'helpers']|11888: read-property[v34,'helperFunction',v33]|11889: \<property-non-null-undef\>[v35,'unboundIf']|11890: read-property[v33,'call',-]|11891: \<property-non-null-undef\>[v34,'helperFunction']|11892: read-variable['this',v37,-]|11893: read-variable['params',v38,-]|11894: read-variable['hash',v39,-]|11895: read-variable['options',v40,-]|11896: read-variable['env',v41,-]}" ] 
BB3590 -> BB3592 [tailport=s, headport=n, headlabel="      3592"]
BB3590 -> BB3595 [tailport=s, headport=n, color=gray]
BB3591 [shape=record label="{11897: read-variable['env',v33,-]|11898: read-property[v33,'helpers',v32]|11899: \<variable-non-null-undef\>['env']|11900: read-property[v32,'boundIf',v31]|11901: \<property-non-null-undef\>[v33,'helpers']|11902: read-property[v31,'helperFunction',v30]|11903: \<property-non-null-undef\>[v32,'boundIf']|11904: read-property[v30,'call',-]|11905: \<property-non-null-undef\>[v31,'helperFunction']|11906: read-variable['this',v34,-]|11907: read-variable['params',v35,-]|11908: read-variable['hash',v36,-]|11909: read-variable['options',v37,-]|11910: read-variable['env',v38,-]}" ] 
BB3591 -> BB3593 [tailport=s, headport=n, headlabel="      3593"]
BB3591 -> BB3595 [tailport=s, headport=n, color=gray]
BB3592 [shape=record label="{11911: call-env.helpers.unboundIf.helperFunction.call [v33,'call',v37,v38,v39,v40,v41,v1]}" ] 
BB3592 -> BB3594 [tailport=s, headport=n, headlabel="      3594"]
BB3592 -> BB3595 [tailport=s, headport=n, color=gray]
BB3593 [shape=record label="{11912: call-env.helpers.boundIf.helperFunction.call [v30,'call',v34,v35,v36,v37,v38,v1]}" ] 
BB3593 -> BB3594 [tailport=s, headport=n]
BB3593 -> BB3595 [tailport=s, headport=n, color=gray]
BB3594 [shape=record label="{11913: return[v1]}" ] 
BB3595 [shape=record label="{11914: exceptional-return}" ] 
//#$~ 6401
}
