digraph {
rankdir="TD"
BB_entry656[shape=none,label=""];
BB_entry656 -> BB9540 [tailport=s, headport=n, headlabel="    9540"]
BB9540 [shape=record label="{28195: constant[undefined,v1]|28196: vardecl['def']|28197: function-decl[function errHandler ( error ),-]|28198: vardecl['responsePromise']|28199: vardecl['dataPromise']|28200: vardecl['promise']|28201: vardecl['prop']}" ] 
BB9540 -> BB9541 [tailport=s, headport=n, headlabel="      9541"]
BB9541 [shape=record label="{28202: read-variable['Deferred',v4,-]|28203: function-expr[function ( reason ),v5]}" ] 
BB9541 -> BB9542 [tailport=s, headport=n, headlabel="      9542"]
BB9541 -> BB9572 [tailport=s, headport=n, color=gray, headlabel="      9572"]
BB9542 [shape=record label="{28204: construct [-,v4,v5,v3]}" ] 
BB9542 -> BB9543 [tailport=s, headport=n, headlabel="      9543"]
BB9542 -> BB9572 [tailport=s, headport=n, color=gray]
BB9543 [shape=record label="{28205: write-variable[v3,'def']*|28206: read-variable['def',v7,v2]|28207: read-variable['response',v6,v2]|28208: write-property[v7,'response',v6]|28209: \<variable-non-null-undef\>['def']*|28210: read-variable['def',v9,v2]|28211: read-variable['isValid',v8,v2]|28212: write-property[v9,'isValid',v8]|28213: \<variable-non-null-undef\>['def']*|28214: read-variable['def',v11,v2]|28215: read-variable['isReady',v10,v2]|28216: write-property[v11,'isReady',v10]|28217: \<variable-non-null-undef\>['def']*|28218: read-variable['def',v13,v2]|28219: read-variable['handleResponse',v12,v2]|28220: write-property[v13,'handleResponse',v12]|28221: \<variable-non-null-undef\>['def']*|28222: read-variable['def',v18,-]|28223: read-property[v18,'then',-]|28224: \<variable-non-null-undef\>['def']|28225: read-variable['okHandler',v19,-]}" ] 
BB9543 -> BB9544 [tailport=s, headport=n, headlabel="      9544"]
BB9543 -> BB9572 [tailport=s, headport=n, color=gray]
BB9544 [shape=record label="{28226: call-def.then [v18,'then',v19,v16]}" ] 
BB9544 -> BB9545 [tailport=s, headport=n, headlabel="      9545"]
BB9544 -> BB9572 [tailport=s, headport=n, color=gray]
BB9545 [shape=record label="{28227: read-property[v16,'otherwise',-]|28228: read-variable['errHandler',v20,v2]}" ] 
BB9545 -> BB9546 [tailport=s, headport=n, headlabel="      9546"]
BB9545 -> BB9572 [tailport=s, headport=n, color=gray]
BB9546 [shape=record label="{28229: call-null [v16,'otherwise',v20,v14]}" ] 
BB9546 -> BB9547 [tailport=s, headport=n, headlabel="      9547"]
BB9546 -> BB9572 [tailport=s, headport=n, color=gray]
BB9547 [shape=record label="{28230: write-variable[v14,'responsePromise']*|28231: read-variable['exports',v22,v2]|28232: read-property[v22,'notify',v21]|28233: \<variable-non-null-undef\>['exports']|28234: if[v21](true-block:9548,false-block:9553)}" ] 
BB9547 -> BB9548 [tailport=s, headport=n, headlabel="      9548"]
BB9547 -> BB9553 [tailport=s, headport=n, headlabel="      9553"]
BB9547 -> BB9572 [tailport=s, headport=n, color=gray]
BB9548 [shape=record label="{28235: read-variable['responsePromise',v24,-]|28236: read-property[v24,'then',-]|28237: \<variable-non-null-undef\>['responsePromise']|28238: read-variable['lang',v27,-]|28239: read-property[v27,'hitch',-]|28240: \<variable-non-null-undef\>['lang']|28241: read-variable['exports',v29,v2]|28242: read-property[v29,'notify',v28]|28243: \<variable-non-null-undef\>['exports']|28244: constant[\"emit\",v30]|28245: constant[\"load\",v31]}" ] 
BB9548 -> BB9549 [tailport=s, headport=n, headlabel="      9549"]
BB9548 -> BB9572 [tailport=s, headport=n, color=gray]
BB9549 [shape=record label="{28246: call-lang.hitch [v27,'hitch',v28,v30,v31,v25]}" ] 
BB9549 -> BB9550 [tailport=s, headport=n, headlabel="      9550"]
BB9549 -> BB9572 [tailport=s, headport=n, color=gray]
BB9550 [shape=record label="{28247: read-variable['lang',v34,-]|28248: read-property[v34,'hitch',-]|28249: \<variable-non-null-undef\>['lang']|28250: read-variable['exports',v36,v2]|28251: read-property[v36,'notify',v35]|28252: \<variable-non-null-undef\>['exports']|28253: constant[\"emit\",v37]|28254: constant[\"error\",v38]}" ] 
BB9550 -> BB9551 [tailport=s, headport=n, headlabel="      9551"]
BB9550 -> BB9572 [tailport=s, headport=n, color=gray]
BB9551 [shape=record label="{28255: call-lang.hitch [v34,'hitch',v35,v37,v38,v32]}" ] 
BB9551 -> BB9552 [tailport=s, headport=n, headlabel="      9552"]
BB9551 -> BB9572 [tailport=s, headport=n, color=gray]
BB9552 [shape=record label="{28256: call-responsePromise.then [v24,'then',v25,v32,-]*}" ] 
BB9552 -> BB9553 [tailport=s, headport=n]
BB9552 -> BB9572 [tailport=s, headport=n, color=gray]
BB9553 [shape=record label="{28257: read-variable['responsePromise',v25,-]|28258: read-property[v25,'then',-]|28259: \<variable-non-null-undef\>['responsePromise']|28260: read-variable['dataHandler',v26,v2]}" ] 
BB9553 -> BB9554 [tailport=s, headport=n, headlabel="      9554"]
BB9553 -> BB9572 [tailport=s, headport=n, color=gray]
BB9554 [shape=record label="{28261: call-responsePromise.then [v25,'then',v26,v23]}" ] 
BB9554 -> BB9555 [tailport=s, headport=n, headlabel="      9555"]
BB9554 -> BB9572 [tailport=s, headport=n, color=gray]
BB9555 [shape=record label="{28262: write-variable[v23,'dataPromise']*|28263: read-variable['Promise',v28,-]}" ] 
BB9555 -> BB9556 [tailport=s, headport=n, headlabel="      9556"]
BB9555 -> BB9572 [tailport=s, headport=n, color=gray]
BB9556 [shape=record label="{28264: construct [-,v28,v27]}" ] 
BB9556 -> BB9557 [tailport=s, headport=n, headlabel="      9557"]
BB9556 -> BB9572 [tailport=s, headport=n, color=gray]
BB9557 [shape=record label="{28265: write-variable[v27,'promise']*|28266: read-variable['dataPromise',v30,v2]}" ] 
BB9557 -> BB9558 [tailport=s, headport=n, headlabel="      9558"]
BB9557 -> BB9572 [tailport=s, headport=n, color=gray]
BB9558 [shape=record label="{28267: begin-for-in[v30,v31]}" ] 
BB9558 -> BB9559 [tailport=s, headport=n, headlabel="      9559"]
BB9558 -> BB9572 [tailport=s, headport=n, color=gray]
BB9559 [shape=record label="{28268: has-next[v31,v32]|28269: if[v32](true-block:9560,false-block:9565)}" ] 
BB9559 -> BB9560 [tailport=s, headport=n, headlabel="      9560"]
BB9559 -> BB9565 [tailport=s, headport=n, headlabel="      9565"]
BB9560 [shape=record label="{28270: next-property[v31,v33]|28271: write-variable[v33,'prop']|28272: read-variable['dataPromise',v36,-]|28273: read-property[v36,'hasOwnProperty',-]|28274: \<variable-non-null-undef\>['dataPromise']|28275: read-variable['prop',v37,v2]}" ] 
BB9560 -> BB9561 [tailport=s, headport=n, headlabel="      9561"]
BB9560 -> BB9572 [tailport=s, headport=n, color=gray]
BB9561 [shape=record label="{28276: call-dataPromise.hasOwnProperty [v36,'hasOwnProperty',v37,v34]}" ] 
BB9561 -> BB9562 [tailport=s, headport=n, headlabel="      9562"]
BB9561 -> BB9572 [tailport=s, headport=n, color=gray]
BB9562 [shape=record label="{28277: if[v34](true-block:9563,false-block:9564)}" ] 
BB9562 -> BB9563 [tailport=s, headport=n, headlabel="      9563"]
BB9562 -> BB9564 [tailport=s, headport=n, headlabel="      9564"]
BB9563 [shape=record label="{28278: read-variable['promise',v39,v2]|28279: read-variable['prop',v40,v2]|28280: read-variable['dataPromise',v41,v2]|28281: read-variable['prop',v42,v2]|28282: read-property[v41,v42,v38]|28283: \<variable-non-null-undef\>['dataPromise']|28284: write-property[v39,v40,v38]|28285: \<variable-non-null-undef\>['promise']*}" ] 
BB9563 -> BB9564 [tailport=s, headport=n]
BB9563 -> BB9572 [tailport=s, headport=n, color=gray]
BB9564 [shape=record label="{28286: end-for-in(begin-node:28267)}" ] 
BB9564 -> BB9559 [tailport=s, headport=n]
BB9565 [shape=record label="{28287: read-variable['promise',v35,v2]|28288: read-variable['responsePromise',v34,v2]|28289: write-property[v35,'response',v34]|28290: \<variable-non-null-undef\>['promise']*|28291: read-variable['freeze',v37,v36]|28292: read-variable['promise',v38,v2]}" ] 
BB9565 -> BB9566 [tailport=s, headport=n, headlabel="      9566"]
BB9565 -> BB9572 [tailport=s, headport=n, color=gray]
BB9566 [shape=record label="{28293: call-freeze [v36,v37,v38,-]*}" ] 
BB9566 -> BB9567 [tailport=s, headport=n, headlabel="      9567"]
BB9566 -> BB9572 [tailport=s, headport=n, color=gray]
BB9567 [shape=record label="{28294: read-variable['last',v39,v2]|28295: if[v39](true-block:9568,false-block:9570)}" ] 
BB9567 -> BB9568 [tailport=s, headport=n, headlabel="      9568"]
BB9567 -> BB9570 [tailport=s, headport=n, headlabel="      9570"]
BB9567 -> BB9572 [tailport=s, headport=n, color=gray]
BB9568 [shape=record label="{28296: read-variable['def',v41,-]|28297: read-property[v41,'then',-]|28298: \<variable-non-null-undef\>['def']|28299: function-expr[function ( response ),v42]|28300: function-expr[function ( error ),v43]}" ] 
BB9568 -> BB9569 [tailport=s, headport=n, headlabel="      9569"]
BB9568 -> BB9572 [tailport=s, headport=n, color=gray]
BB9569 [shape=record label="{28301: call-def.then [v41,'then',v42,v43,-]*}" ] 
BB9569 -> BB9570 [tailport=s, headport=n]
BB9569 -> BB9572 [tailport=s, headport=n, color=gray]
BB9570 [shape=record label="{28302: read-variable['def',v41,v2]|28303: read-variable['promise',v40,v2]|28304: write-property[v41,'promise',v40]|28305: \<variable-non-null-undef\>['def']*|28306: read-variable['def',v43,v2]|28307: read-variable['promise',v44,v2]|28308: read-property[v44,'then',v42]|28309: \<variable-non-null-undef\>['promise']|28310: write-property[v43,'then',v42]|28311: \<variable-non-null-undef\>['def']*|28312: read-variable['def',v1,v2]}" ] 
BB9570 -> BB9571 [tailport=s, headport=n, headlabel="      9571"]
BB9570 -> BB9572 [tailport=s, headport=n, color=gray]
BB9571 [shape=record label="{28313: return[v1]}" ] 
BB9572 [shape=record label="{28314: exceptional-return}" ] 
//#$~ 13325
}
