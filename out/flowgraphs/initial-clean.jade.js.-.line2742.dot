digraph {
rankdir="TD"
BB_entry154[shape=none,label=""];
BB_entry154 -> BB3341 [tailport=s, headport=n, headlabel="    3341"]
BB3341 [shape=record label="{10510: constant[undefined,v1]|10511: vardecl['Lexer']|10512: vardecl['nodes']|10513: vardecl['utils']|10514: vardecl['filters']|10515: vardecl['path']|10516: vardecl['constantinople']|10517: vardecl['parseJSExpression']|10518: vardecl['extname']|10519: vardecl['Parser']}" ] 
BB3341 -> BB3342 [tailport=s, headport=n, headlabel="      3342"]
BB3342 [shape=record label="{10520: read-variable['require',v4,v3]|10521: constant[\"./lexer\",v5]}" ] 
BB3342 -> BB3343 [tailport=s, headport=n, headlabel="      3343"]
BB3342 -> BB3358 [tailport=s, headport=n, color=gray, headlabel="      3358"]
BB3343 [shape=record label="{10522: call-require [v3,v4,v5,v2]}" ] 
BB3343 -> BB3344 [tailport=s, headport=n, headlabel="      3344"]
BB3343 -> BB3358 [tailport=s, headport=n, color=gray]
BB3344 [shape=record label="{10523: write-variable[v2,'Lexer']*|10524: read-variable['require',v8,v7]|10525: constant[\"./nodes\",v9]}" ] 
BB3344 -> BB3345 [tailport=s, headport=n, headlabel="      3345"]
BB3344 -> BB3358 [tailport=s, headport=n, color=gray]
BB3345 [shape=record label="{10526: call-require [v7,v8,v9,v6]}" ] 
BB3345 -> BB3346 [tailport=s, headport=n, headlabel="      3346"]
BB3345 -> BB3358 [tailport=s, headport=n, color=gray]
BB3346 [shape=record label="{10527: write-variable[v6,'nodes']*|10528: read-variable['require',v12,v11]|10529: constant[\"./utils\",v13]}" ] 
BB3346 -> BB3347 [tailport=s, headport=n, headlabel="      3347"]
BB3346 -> BB3358 [tailport=s, headport=n, color=gray]
BB3347 [shape=record label="{10530: call-require [v11,v12,v13,v10]}" ] 
BB3347 -> BB3348 [tailport=s, headport=n, headlabel="      3348"]
BB3347 -> BB3358 [tailport=s, headport=n, color=gray]
BB3348 [shape=record label="{10531: write-variable[v10,'utils']*|10532: read-variable['require',v16,v15]|10533: constant[\"./filters\",v17]}" ] 
BB3348 -> BB3349 [tailport=s, headport=n, headlabel="      3349"]
BB3348 -> BB3358 [tailport=s, headport=n, color=gray]
BB3349 [shape=record label="{10534: call-require [v15,v16,v17,v14]}" ] 
BB3349 -> BB3350 [tailport=s, headport=n, headlabel="      3350"]
BB3349 -> BB3358 [tailport=s, headport=n, color=gray]
BB3350 [shape=record label="{10535: write-variable[v14,'filters']*|10536: read-variable['require',v20,v19]|10537: constant[\"path\",v21]}" ] 
BB3350 -> BB3351 [tailport=s, headport=n, headlabel="      3351"]
BB3350 -> BB3358 [tailport=s, headport=n, color=gray]
BB3351 [shape=record label="{10538: call-require [v19,v20,v21,v18]}" ] 
BB3351 -> BB3352 [tailport=s, headport=n, headlabel="      3352"]
BB3351 -> BB3358 [tailport=s, headport=n, color=gray]
BB3352 [shape=record label="{10539: write-variable[v18,'path']*|10540: read-variable['require',v24,v23]|10541: constant[\"constantinople\",v25]}" ] 
BB3352 -> BB3353 [tailport=s, headport=n, headlabel="      3353"]
BB3352 -> BB3358 [tailport=s, headport=n, color=gray]
BB3353 [shape=record label="{10542: call-require [v23,v24,v25,v22]}" ] 
BB3353 -> BB3354 [tailport=s, headport=n, headlabel="      3354"]
BB3353 -> BB3358 [tailport=s, headport=n, color=gray]
BB3354 [shape=record label="{10543: write-variable[v22,'constantinople']*|10544: read-variable['require',v29,v28]|10545: constant[\"character-parser\",v30]}" ] 
BB3354 -> BB3355 [tailport=s, headport=n, headlabel="      3355"]
BB3354 -> BB3358 [tailport=s, headport=n, color=gray]
BB3355 [shape=record label="{10546: call-require [v28,v29,v30,v27]}" ] 
BB3355 -> BB3356 [tailport=s, headport=n, headlabel="      3356"]
BB3355 -> BB3358 [tailport=s, headport=n, color=gray]
BB3356 [shape=record label="{10547: read-property[v27,'parseMax',v26]|10548: write-variable[v26,'parseJSExpression']*|10549: read-variable['path',v32,-]|10550: read-property[v32,'extname',v31]|10551: \<variable-non-null-undef\>['path']|10552: write-variable[v31,'extname']*|10553: read-variable['module',v34,-]|10554: function-expr[function Parser ( str filename options ),v33]|10555: write-property[v34,'exports',v33]|10556: \<variable-non-null-undef\>['module']|10557: write-variable[v33,'exports']|10558: write-variable[v33,'Parser']*|10559: read-variable['Parser',v36,-]|10560: new[v35]|10561: read-variable['Parser',v37,-]|10562: write-property[v35,'constructor',v37]|10563: function-expr[function ( parser ),v38]|10564: write-property[v35,'context',v38]|10565: function-expr[function ( ),v39]|10566: write-property[v35,'advance',v39]|10567: function-expr[function ( ),v40]|10568: write-property[v35,'peek',v40]|10569: function-expr[function ( ),v41]|10570: write-property[v35,'line',v41]|10571: function-expr[function ( n ),v42]|10572: write-property[v35,'lookahead',v42]|10573: function-expr[function ( ),v43]|10574: write-property[v35,'parse',v43]|10575: function-expr[function ( type ),v44]|10576: write-property[v35,'expect',v44]|10577: function-expr[function ( type ),v45]|10578: write-property[v35,'accept',v45]|10579: function-expr[function ( ),v46]|10580: write-property[v35,'parseExpr',v46]|10581: function-expr[function ( ),v47]|10582: write-property[v35,'parseText',v47]|10583: function-expr[function ( ),v48]|10584: write-property[v35,'parseBlockExpansion',v48]|10585: function-expr[function ( ),v49]|10586: write-property[v35,'parseCase',v49]|10587: function-expr[function ( ),v50]|10588: write-property[v35,'parseWhen',v50]|10589: function-expr[function ( ),v51]|10590: write-property[v35,'parseDefault',v51]|10591: function-expr[function ( afterIf ),v52]|10592: write-property[v35,'parseCode',v52]|10593: function-expr[function ( ),v53]|10594: write-property[v35,'parseComment',v53]|10595: function-expr[function ( ),v54]|10596: write-property[v35,'parseDoctype',v54]|10597: function-expr[function ( ),v55]|10598: write-property[v35,'parseFilter',v55]|10599: function-expr[function ( ),v56]|10600: write-property[v35,'parseEach',v56]|10601: function-expr[function ( path purpose ),v57]|10602: write-property[v35,'resolvePath',v57]|10603: function-expr[function ( ),v58]|10604: write-property[v35,'parseExtends',v58]|10605: function-expr[function ( ),v59]|10606: write-property[v35,'parseBlock',v59]|10607: function-expr[function ( ),v60]|10608: write-property[v35,'parseMixinBlock',v60]|10609: function-expr[function ( ),v61]|10610: write-property[v35,'parseInclude',v61]|10611: function-expr[function ( ),v62]|10612: write-property[v35,'parseCall',v62]|10613: function-expr[function ( ),v63]|10614: write-property[v35,'parseMixin',v63]|10615: function-expr[function ( str ),v64]|10616: write-property[v35,'parseInlineTagsInText',v64]|10617: function-expr[function ( ),v65]|10618: write-property[v35,'parseTextBlock',v65]|10619: function-expr[function ( ),v66]|10620: write-property[v35,'block',v66]|10621: function-expr[function ( ),v67]|10622: write-property[v35,'parseInterpolation',v67]|10623: function-expr[function ( ),v68]|10624: write-property[v35,'parseTag',v68]|10625: function-expr[function ( tag ),v69]|10626: write-property[v35,'tag',v69]|10627: write-property[v36,'prototype',v35]|10628: \<variable-non-null-undef\>['Parser']*}" ] 
BB3356 -> BB3357 [tailport=s, headport=n, headlabel="      3357"]
BB3356 -> BB3358 [tailport=s, headport=n, color=gray]
BB3357 [shape=record label="{10629: return[v1]}" ] 
BB3358 [shape=record label="{10630: exceptional-return}" ] 
//#$~ 3565
}
