digraph {
rankdir="TD"
BB_entry324[shape=none,label=""];
BB_entry324 -> BB5547 [tailport=s, headport=n, headlabel="    5547"]
BB5547 [shape=record label="{17074: constant[undefined,v1]|17075: vardecl['ch']|17076: vardecl['octal']}" ] 
BB5547 -> BB5548 [tailport=s, headport=n, headlabel="      5548"]
BB5548 [shape=record label="{17077: read-variable['input',v4,-]|17078: read-property[v4,'charCodeAt',-]|17079: \<variable-non-null-undef\>['input']|17080: constant[1.0,v6]|17081: read-variable['tokPos',v7,-]|17082: +[v7,v8]|17083: +[v8,v6,v5]|17084: write-variable[v5,'tokPos']}" ] 
BB5548 -> BB5549 [tailport=s, headport=n, headlabel="      5549"]
BB5548 -> BB5611 [tailport=s, headport=n, color=gray, headlabel="      5611"]
BB5549 [shape=record label="{17085: call-input.charCodeAt [v4,'charCodeAt',v5,v2]}" ] 
BB5549 -> BB5550 [tailport=s, headport=n, headlabel="      5550"]
BB5549 -> BB5611 [tailport=s, headport=n, color=gray]
BB5550 [shape=record label="{17086: write-variable[v2,'ch']*|17087: read-variable['RegExp',v12,-]|17088: constant[\"^[0-7]+\",v13]}" ] 
BB5550 -> BB5551 [tailport=s, headport=n, headlabel="      5551"]
BB5550 -> BB5611 [tailport=s, headport=n, color=gray]
BB5551 [shape=record label="{17089: construct [-,v12,v13,v11]}" ] 
BB5551 -> BB5552 [tailport=s, headport=n, headlabel="      5552"]
BB5551 -> BB5611 [tailport=s, headport=n, color=gray]
BB5552 [shape=record label="{17090: read-property[v11,'exec',-]|17091: read-variable['input',v16,-]|17092: read-property[v16,'slice',-]|17093: \<variable-non-null-undef\>['input']|17094: read-variable['tokPos',v17,-]|17095: read-variable['tokPos',v19,-]|17096: constant[3.0,v20]|17097: +[v19,v20,v18]}" ] 
BB5552 -> BB5553 [tailport=s, headport=n, headlabel="      5553"]
BB5552 -> BB5611 [tailport=s, headport=n, color=gray]
BB5553 [shape=record label="{17098: call-input.slice [v16,'slice',v17,v18,v14]}" ] 
BB5553 -> BB5554 [tailport=s, headport=n, headlabel="      5554"]
BB5553 -> BB5611 [tailport=s, headport=n, color=gray]
BB5554 [shape=record label="{17099: call-null [v11,'exec',v14,v9]}" ] 
BB5554 -> BB5555 [tailport=s, headport=n, headlabel="      5555"]
BB5554 -> BB5611 [tailport=s, headport=n, color=gray]
BB5555 [shape=record label="{17100: write-variable[v9,'octal']*|17101: read-variable['octal',v21,-]|17102: if[v21](true-block:5556,false-block:5557)}" ] 
BB5555 -> BB5556 [tailport=s, headport=n, headlabel="      5556"]
BB5555 -> BB5557 [tailport=s, headport=n, headlabel="      5557"]
BB5555 -> BB5611 [tailport=s, headport=n, color=gray]
BB5556 [shape=record label="{17103: read-variable['octal',v23,-]|17104: constant[0.0,v24]|17105: read-property[v23,v24,v22]|17106: \<variable-non-null-undef\>['octal']|17107: write-variable[v22,'octal']*}" ] 
BB5556 -> BB5557 [tailport=s, headport=n]
BB5556 -> BB5611 [tailport=s, headport=n, color=gray]
BB5557 [shape=record label="{17108: read-variable['octal',v22,-]|17109: if[v22](true-block:5558,false-block:5561)}" ] 
BB5557 -> BB5561 [tailport=s, headport=n, headlabel="      5561"]
BB5557 -> BB5558 [tailport=s, headport=n, headlabel="      5558"]
BB5557 -> BB5611 [tailport=s, headport=n, color=gray]
BB5558 [shape=record label="{17110: read-variable['parseInt',v26,v25]|17111: read-variable['octal',v27,-]|17112: constant[8.0,v28]}" ] 
BB5558 -> BB5559 [tailport=s, headport=n, headlabel="      5559"]
BB5558 -> BB5611 [tailport=s, headport=n, color=gray]
BB5559 [shape=record label="{17113: call-parseInt [v25,v26,v27,v28,v23]}" ] 
BB5559 -> BB5560 [tailport=s, headport=n, headlabel="      5560"]
BB5559 -> BB5611 [tailport=s, headport=n, color=gray]
BB5560 [shape=record label="{17114: constant[255.0,v24]|17115: \>[v23,v24,v22]}" ] 
BB5560 -> BB5561 [tailport=s, headport=n]
BB5560 -> BB5611 [tailport=s, headport=n, color=gray]
BB5561 [shape=record label="{17116: if[v22](true-block:5562,false-block:5563)}" ] 
BB5561 -> BB5562 [tailport=s, headport=n, headlabel="      5562"]
BB5561 -> BB5563 [tailport=s, headport=n, headlabel="      5563"]
BB5562 [shape=record label="{17117: read-variable['octal',v25,-]|17118: read-property[v25,'slice',-]|17119: \<variable-non-null-undef\>['octal']|17120: constant[0.0,v26]|17121: constant[-1.0,v27]}" ] 
BB5562 -> BB5564 [tailport=s, headport=n, headlabel="      5564"]
BB5562 -> BB5611 [tailport=s, headport=n, color=gray]
BB5563 [shape=record label="{17122: read-variable['octal',v24,-]|17123: constant[\"0\",v25]|17124: ===[v24,v25,v23]|17125: if[v23](true-block:5566,false-block:5567)}" ] 
BB5563 -> BB5566 [tailport=s, headport=n, headlabel="      5566"]
BB5563 -> BB5567 [tailport=s, headport=n, headlabel="      5567"]
BB5563 -> BB5611 [tailport=s, headport=n, color=gray]
BB5564 [shape=record label="{17126: call-octal.slice [v25,'slice',v26,v27,v23]}" ] 
BB5564 -> BB5565 [tailport=s, headport=n, headlabel="      5565"]
BB5564 -> BB5611 [tailport=s, headport=n, color=gray]
BB5565 [shape=record label="{17127: write-variable[v23,'octal']*}" ] 
BB5565 -> BB5557 [tailport=s, headport=n]
BB5566 [shape=record label="{17128: constant[null,v26]|17129: write-variable[v26,'octal']*}" ] 
BB5566 -> BB5567 [tailport=s, headport=n]
BB5567 [shape=record label="{17130: constant[1.0,v26]|17131: read-variable['tokPos',v27,-]|17132: +[v27,v28]|17133: +[v28,v26,v29]|17134: write-variable[v29,'tokPos']*|17135: read-variable['octal',v30,-]|17136: if[v30](true-block:5568,false-block:5569)}" ] 
BB5567 -> BB5568 [tailport=s, headport=n, headlabel="      5568"]
BB5567 -> BB5569 [tailport=s, headport=n, headlabel="      5569"]
BB5567 -> BB5611 [tailport=s, headport=n, color=gray]
BB5568 [shape=record label="{17137: read-variable['strict',v31,-]|17138: if[v31](true-block:5570,false-block:5572)}" ] 
BB5568 -> BB5570 [tailport=s, headport=n, headlabel="      5570"]
BB5568 -> BB5572 [tailport=s, headport=n, headlabel="      5572"]
BB5568 -> BB5611 [tailport=s, headport=n, color=gray]
BB5569 [shape=record label="{17139: read-variable['ch',v31,-]|17140: constant[110.0,v32]|17141: ==[v31,v32,v33]|17142: if[v33](true-block:5575,false-block:5576)}" ] 
BB5569 -> BB5575 [tailport=s, headport=n, headlabel="      5575"]
BB5569 -> BB5576 [tailport=s, headport=n, headlabel="      5576"]
BB5569 -> BB5611 [tailport=s, headport=n, color=gray]
BB5570 [shape=record label="{17143: read-variable['raise',v33,v32]|17144: read-variable['tokPos',v35,-]|17145: constant[2.0,v36]|17146: -[v35,v36,v34]|17147: constant[\"Octal literal in strict mode\",v37]}" ] 
BB5570 -> BB5571 [tailport=s, headport=n, headlabel="      5571"]
BB5570 -> BB5611 [tailport=s, headport=n, color=gray]
BB5571 [shape=record label="{17148: call-raise [v32,v33,v34,v37,-]*}" ] 
BB5571 -> BB5572 [tailport=s, headport=n]
BB5571 -> BB5611 [tailport=s, headport=n, color=gray]
BB5572 [shape=record label="{17149: read-variable['tokPos',v33,-]|17150: read-variable['octal',v37,-]|17151: read-property[v37,'length',v35]|17152: \<variable-non-null-undef\>['octal']|17153: constant[1.0,v36]|17154: -[v35,v36,v34]|17155: +[v33,v34,v32]|17156: write-variable[v32,'tokPos']*|17157: read-variable['String',v39,-]|17158: read-property[v39,'fromCharCode',-]|17159: \<variable-non-null-undef\>['String']|17160: read-variable['parseInt',v42,v41]|17161: read-variable['octal',v43,-]|17162: constant[8.0,v44]}" ] 
BB5572 -> BB5573 [tailport=s, headport=n, headlabel="      5573"]
BB5572 -> BB5611 [tailport=s, headport=n, color=gray]
BB5573 [shape=record label="{17163: call-parseInt [v41,v42,v43,v44,v40]}" ] 
BB5573 -> BB5574 [tailport=s, headport=n, headlabel="      5574"]
BB5573 -> BB5611 [tailport=s, headport=n, color=gray]
BB5574 [shape=record label="{17164: call-String.fromCharCode [v39,'fromCharCode',v40,v1]}" ] 
BB5574 -> BB5610 [tailport=s, headport=n, headlabel="      5610"]
BB5574 -> BB5611 [tailport=s, headport=n, color=gray]
BB5575 [shape=record label="{17165: constant[\"\\n\",v1]}" ] 
BB5575 -> BB5610 [tailport=s, headport=n]
BB5576 [shape=record label="{17166: constant[114.0,v32]|17167: ==[v31,v32,v33]|17168: if[v33](true-block:5577,false-block:5578)}" ] 
BB5576 -> BB5577 [tailport=s, headport=n, headlabel="      5577"]
BB5576 -> BB5578 [tailport=s, headport=n, headlabel="      5578"]
BB5576 -> BB5611 [tailport=s, headport=n, color=gray]
BB5577 [shape=record label="{17169: constant[\"\\r\",v1]}" ] 
BB5577 -> BB5610 [tailport=s, headport=n]
BB5578 [shape=record label="{17170: constant[120.0,v32]|17171: ==[v31,v32,v33]|17172: if[v33](true-block:5579,false-block:5580)}" ] 
BB5578 -> BB5579 [tailport=s, headport=n, headlabel="      5579"]
BB5578 -> BB5580 [tailport=s, headport=n, headlabel="      5580"]
BB5578 -> BB5611 [tailport=s, headport=n, color=gray]
BB5579 [shape=record label="{17173: read-variable['String',v35,-]|17174: read-property[v35,'fromCharCode',-]|17175: \<variable-non-null-undef\>['String']|17176: read-variable['readHexChar',v38,v37]|17177: constant[2.0,v39]}" ] 
BB5579 -> BB5581 [tailport=s, headport=n, headlabel="      5581"]
BB5579 -> BB5611 [tailport=s, headport=n, color=gray]
BB5580 [shape=record label="{17178: constant[117.0,v32]|17179: ==[v31,v32,v33]|17180: if[v33](true-block:5583,false-block:5584)}" ] 
BB5580 -> BB5583 [tailport=s, headport=n, headlabel="      5583"]
BB5580 -> BB5584 [tailport=s, headport=n, headlabel="      5584"]
BB5580 -> BB5611 [tailport=s, headport=n, color=gray]
BB5581 [shape=record label="{17181: call-readHexChar [v37,v38,v39,v36]}" ] 
BB5581 -> BB5582 [tailport=s, headport=n, headlabel="      5582"]
BB5581 -> BB5611 [tailport=s, headport=n, color=gray]
BB5582 [shape=record label="{17182: call-String.fromCharCode [v35,'fromCharCode',v36,v1]}" ] 
BB5582 -> BB5610 [tailport=s, headport=n]
BB5582 -> BB5611 [tailport=s, headport=n, color=gray]
BB5583 [shape=record label="{17183: read-variable['readCodePoint',v41,v40]}" ] 
BB5583 -> BB5585 [tailport=s, headport=n, headlabel="      5585"]
BB5583 -> BB5611 [tailport=s, headport=n, color=gray]
BB5584 [shape=record label="{17184: constant[85.0,v32]|17185: ==[v31,v32,v33]|17186: if[v33](true-block:5586,false-block:5587)}" ] 
BB5584 -> BB5586 [tailport=s, headport=n, headlabel="      5586"]
BB5584 -> BB5587 [tailport=s, headport=n, headlabel="      5587"]
BB5584 -> BB5611 [tailport=s, headport=n, color=gray]
BB5585 [shape=record label="{17187: call-readCodePoint [v40,v41,v1]}" ] 
BB5585 -> BB5610 [tailport=s, headport=n]
BB5585 -> BB5611 [tailport=s, headport=n, color=gray]
BB5586 [shape=record label="{17188: read-variable['String',v43,-]|17189: read-property[v43,'fromCharCode',-]|17190: \<variable-non-null-undef\>['String']|17191: read-variable['readHexChar',v46,v45]|17192: constant[8.0,v47]}" ] 
BB5586 -> BB5588 [tailport=s, headport=n, headlabel="      5588"]
BB5586 -> BB5611 [tailport=s, headport=n, color=gray]
BB5587 [shape=record label="{17193: constant[116.0,v32]|17194: ==[v31,v32,v33]|17195: if[v33](true-block:5590,false-block:5591)}" ] 
BB5587 -> BB5590 [tailport=s, headport=n, headlabel="      5590"]
BB5587 -> BB5591 [tailport=s, headport=n, headlabel="      5591"]
BB5587 -> BB5611 [tailport=s, headport=n, color=gray]
BB5588 [shape=record label="{17196: call-readHexChar [v45,v46,v47,v44]}" ] 
BB5588 -> BB5589 [tailport=s, headport=n, headlabel="      5589"]
BB5588 -> BB5611 [tailport=s, headport=n, color=gray]
BB5589 [shape=record label="{17197: call-String.fromCharCode [v43,'fromCharCode',v44,v1]}" ] 
BB5589 -> BB5610 [tailport=s, headport=n]
BB5589 -> BB5611 [tailport=s, headport=n, color=gray]
BB5590 [shape=record label="{17198: constant[\"\\t\",v1]}" ] 
BB5590 -> BB5610 [tailport=s, headport=n]
BB5591 [shape=record label="{17199: constant[98.0,v32]|17200: ==[v31,v32,v33]|17201: if[v33](true-block:5592,false-block:5593)}" ] 
BB5591 -> BB5592 [tailport=s, headport=n, headlabel="      5592"]
BB5591 -> BB5593 [tailport=s, headport=n, headlabel="      5593"]
BB5591 -> BB5611 [tailport=s, headport=n, color=gray]
BB5592 [shape=record label="{17202: constant[\"\\b\",v1]}" ] 
BB5592 -> BB5610 [tailport=s, headport=n]
BB5593 [shape=record label="{17203: constant[118.0,v32]|17204: ==[v31,v32,v33]|17205: if[v33](true-block:5594,false-block:5595)}" ] 
BB5593 -> BB5594 [tailport=s, headport=n, headlabel="      5594"]
BB5593 -> BB5595 [tailport=s, headport=n, headlabel="      5595"]
BB5593 -> BB5611 [tailport=s, headport=n, color=gray]
BB5594 [shape=record label="{17206: constant[\"\\u000b\",v1]}" ] 
BB5594 -> BB5610 [tailport=s, headport=n]
BB5595 [shape=record label="{17207: constant[102.0,v32]|17208: ==[v31,v32,v33]|17209: if[v33](true-block:5596,false-block:5597)}" ] 
BB5595 -> BB5596 [tailport=s, headport=n, headlabel="      5596"]
BB5595 -> BB5597 [tailport=s, headport=n, headlabel="      5597"]
BB5595 -> BB5611 [tailport=s, headport=n, color=gray]
BB5596 [shape=record label="{17210: constant[\"\\f\",v1]}" ] 
BB5596 -> BB5610 [tailport=s, headport=n]
BB5597 [shape=record label="{17211: constant[48.0,v32]|17212: ==[v31,v32,v33]|17213: if[v33](true-block:5598,false-block:5599)}" ] 
BB5597 -> BB5598 [tailport=s, headport=n, headlabel="      5598"]
BB5597 -> BB5599 [tailport=s, headport=n, headlabel="      5599"]
BB5597 -> BB5611 [tailport=s, headport=n, color=gray]
BB5598 [shape=record label="{17214: constant[\"\\u0000\",v1]}" ] 
BB5598 -> BB5610 [tailport=s, headport=n]
BB5599 [shape=record label="{17215: constant[13.0,v32]|17216: ==[v31,v32,v33]|17217: if[v33](true-block:5600,false-block:5601)}" ] 
BB5599 -> BB5600 [tailport=s, headport=n, headlabel="      5600"]
BB5599 -> BB5601 [tailport=s, headport=n, headlabel="      5601"]
BB5599 -> BB5611 [tailport=s, headport=n, color=gray]
BB5600 [shape=record label="{17218: read-variable['input',v52,-]|17219: read-property[v52,'charCodeAt',-]|17220: \<variable-non-null-undef\>['input']|17221: read-variable['tokPos',v53,-]}" ] 
BB5600 -> BB5602 [tailport=s, headport=n, headlabel="      5602"]
BB5600 -> BB5611 [tailport=s, headport=n, color=gray]
BB5601 [shape=record label="{17222: constant[10.0,v32]|17223: ==[v31,v32,v33]|17224: if[v33](true-block:5605,false-block:5608)}" ] 
BB5601 -> BB5605 [tailport=s, headport=n, headlabel="      5605"]
BB5601 -> BB5608 [tailport=s, headport=n, headlabel="      5608"]
BB5601 -> BB5611 [tailport=s, headport=n, color=gray]
BB5602 [shape=record label="{17225: call-input.charCodeAt [v52,'charCodeAt',v53,v49]}" ] 
BB5602 -> BB5603 [tailport=s, headport=n, headlabel="      5603"]
BB5602 -> BB5611 [tailport=s, headport=n, color=gray]
BB5603 [shape=record label="{17226: constant[10.0,v50]|17227: ===[v49,v50,v48]|17228: if[v48](true-block:5604,false-block:5605)}" ] 
BB5603 -> BB5604 [tailport=s, headport=n, headlabel="      5604"]
BB5603 -> BB5605 [tailport=s, headport=n]
BB5603 -> BB5611 [tailport=s, headport=n, color=gray]
BB5604 [shape=record label="{17229: constant[1.0,v54]|17230: read-variable['tokPos',v55,-]|17231: +[v55,v56]|17232: +[v56,v54,v57]|17233: write-variable[v57,'tokPos']*}" ] 
BB5604 -> BB5605 [tailport=s, headport=n]
BB5604 -> BB5611 [tailport=s, headport=n, color=gray]
BB5605 [shape=record label="{17234: read-variable['options',v55,-]|17235: read-property[v55,'locations',v54]|17236: \<variable-non-null-undef\>['options']|17237: if[v54](true-block:5606,false-block:5607)}" ] 
BB5605 -> BB5606 [tailport=s, headport=n, headlabel="      5606"]
BB5605 -> BB5607 [tailport=s, headport=n, headlabel="      5607"]
BB5605 -> BB5611 [tailport=s, headport=n, color=gray]
BB5606 [shape=record label="{17238: read-variable['tokPos',v56,-]|17239: write-variable[v56,'tokLineStart']*|17240: constant[1.0,v57]|17241: read-variable['tokCurLine',v58,-]|17242: +[v58,v59]|17243: +[v59,v57,v60]|17244: write-variable[v60,'tokCurLine']*}" ] 
BB5606 -> BB5607 [tailport=s, headport=n]
BB5606 -> BB5611 [tailport=s, headport=n, color=gray]
BB5607 [shape=record label="{17245: constant[\"\",v1]}" ] 
BB5607 -> BB5610 [tailport=s, headport=n]
BB5608 [shape=record label="{17246: read-variable['String',v57,-]|17247: read-property[v57,'fromCharCode',-]|17248: \<variable-non-null-undef\>['String']|17249: read-variable['ch',v58,-]}" ] 
BB5608 -> BB5609 [tailport=s, headport=n, headlabel="      5609"]
BB5608 -> BB5611 [tailport=s, headport=n, color=gray]
BB5609 [shape=record label="{17250: call-String.fromCharCode [v57,'fromCharCode',v58,v1]}" ] 
BB5609 -> BB5610 [tailport=s, headport=n]
BB5609 -> BB5611 [tailport=s, headport=n, color=gray]
BB5610 [shape=record label="{17251: return[v1]}" ] 
BB5611 [shape=record label="{17252: exceptional-return}" ] 
//#$~ 5629
}
