digraph {
rankdir="TD"
BB_entry288[shape=none,label=""];
BB_entry288 -> BB4689 [tailport=s, headport=n, headlabel="    4689"]
BB4689 [shape=record label="{14545: constant[undefined,v1]|14546: vardecl['line']|14547: vardecl['cur']|14548: vardecl['match']}" ] 
BB4689 -> BB4690 [tailport=s, headport=n, headlabel="      4690"]
BB4690 [shape=record label="{14549: constant[1.0,v3]|14550: write-variable[v3,'line']*|14551: constant[0.0,v4]|14552: write-variable[v4,'cur']*}" ] 
BB4690 -> BB4691 [tailport=s, headport=n, headlabel="      4691"]
BB4691 [shape=record label="{14553: constant[true,v2]}" ] 
BB4691 -> BB4692 [tailport=s, headport=n, headlabel="      4692"]
BB4692 [shape=record label="{14554: if[v2](true-block:4693,false-block:4694)}" ] 
BB4692 -> BB4693 [tailport=s, headport=n, headlabel="      4693"]
BB4692 -> BB4694 [tailport=s, headport=n, headlabel="      4694"]
BB4693 [shape=record label="{14555: read-variable['lineBreak',v6,-]|14556: read-variable['cur',v5,-]|14557: write-property[v6,'lastIndex',v5]|14558: \<variable-non-null-undef\>['lineBreak']*|14559: read-variable['lineBreak',v9,-]|14560: read-property[v9,'exec',-]|14561: \<variable-non-null-undef\>['lineBreak']|14562: read-variable['input',v10,-]}" ] 
BB4693 -> BB4695 [tailport=s, headport=n, headlabel="      4695"]
BB4693 -> BB4701 [tailport=s, headport=n, color=gray, headlabel="      4701"]
BB4694 [shape=record label="{14563: new[v1]|14564: read-variable['line',v5,-]|14565: write-property[v1,'line',v5]|14566: read-variable['offset',v7,-]|14567: read-variable['cur',v8,-]|14568: -[v7,v8,v6]|14569: write-property[v1,'column',v6]}" ] 
BB4694 -> BB4700 [tailport=s, headport=n, headlabel="      4700"]
BB4694 -> BB4701 [tailport=s, headport=n, color=gray]
BB4695 [shape=record label="{14570: call-lineBreak.exec [v9,'exec',v10,v7]}" ] 
BB4695 -> BB4696 [tailport=s, headport=n, headlabel="      4696"]
BB4695 -> BB4701 [tailport=s, headport=n, color=gray]
BB4696 [shape=record label="{14571: write-variable[v7,'match']*|14572: read-variable['match',v11,-]|14573: if[v11](true-block:4697,false-block:4698)}" ] 
BB4696 -> BB4698 [tailport=s, headport=n, headlabel="      4698"]
BB4696 -> BB4697 [tailport=s, headport=n, headlabel="      4697"]
BB4696 -> BB4701 [tailport=s, headport=n, color=gray]
BB4697 [shape=record label="{14574: read-variable['match',v14,-]|14575: read-property[v14,'index',v12]|14576: \<variable-non-null-undef\>['match']|14577: read-variable['offset',v13,-]|14578: \<[v12,v13,v11]}" ] 
BB4697 -> BB4698 [tailport=s, headport=n]
BB4697 -> BB4701 [tailport=s, headport=n, color=gray]
BB4698 [shape=record label="{14579: if[v11](true-block:4699,false-block:4694)}" ] 
BB4698 -> BB4699 [tailport=s, headport=n, headlabel="      4699"]
BB4698 -> BB4694 [tailport=s, headport=n]
BB4699 [shape=record label="{14580: constant[1.0,v12]|14581: read-variable['line',v13,-]|14582: +[v13,v14]|14583: +[v14,v12,v15]|14584: write-variable[v15,'line']*|14585: read-variable['match',v19,-]|14586: read-property[v19,'index',v17]|14587: \<variable-non-null-undef\>['match']|14588: read-variable['match',v21,-]|14589: constant[0.0,v22]|14590: read-property[v21,v22,v20]|14591: \<variable-non-null-undef\>['match']|14592: read-property[v20,'length',v18]|14593: \<property-non-null-undef\>[v21,v22]|14594: +[v17,v18,v16]|14595: write-variable[v16,'cur']*}" ] 
BB4699 -> BB4691 [tailport=s, headport=n]
BB4699 -> BB4701 [tailport=s, headport=n, color=gray]
BB4700 [shape=record label="{14596: return[v1]}" ] 
BB4701 [shape=record label="{14597: exceptional-return}" ] 
//#$~ 4724
}
