digraph {
rankdir="TD"
BB_entry355[shape=none,label=""];
BB_entry355 -> BB3283 [tailport=s, headport=n, headlabel="    3283"]
BB3283 [shape=record label="{9721: constant[undefined,v1]|9722: vardecl['args']|9723: vardecl['self']|9724: vardecl['patterns']|9725: vardecl['item']|9726: vardecl['method']|9727: vardecl['sig']|9728: vardecl['matches']|9729: vardecl['i']}" ] 
BB3283 -> BB3284 [tailport=s, headport=n, headlabel="      3284"]
BB3284 [shape=record label="{9730: read-variable['arguments',v2,-]|9731: write-variable[v2,'args']*|9732: read-variable['this',v3,-]|9733: write-variable[v3,'self']*|9734: read-variable['self',v6,-]|9735: read-property[v6,'getPatterns',-]|9736: \<variable-non-null-undef\>['self']}" ] 
BB3284 -> BB3285 [tailport=s, headport=n, headlabel="      3285"]
BB3284 -> BB3313 [tailport=s, headport=n, color=gray, headlabel="      3313"]
BB3285 [shape=record label="{9737: call-self.getPatterns [v6,'getPatterns',v4]}" ] 
BB3285 -> BB3286 [tailport=s, headport=n, headlabel="      3286"]
BB3285 -> BB3313 [tailport=s, headport=n, color=gray]
BB3286 [shape=record label="{9738: write-variable[v4,'patterns']*|9739: read-variable['patterns',v8,-]}" ] 
BB3286 -> BB3287 [tailport=s, headport=n, headlabel="      3287"]
BB3286 -> BB3313 [tailport=s, headport=n, color=gray]
BB3287 [shape=record label="{9740: begin-for-in[v8,v9]}" ] 
BB3287 -> BB3288 [tailport=s, headport=n, headlabel="      3288"]
BB3287 -> BB3313 [tailport=s, headport=n, color=gray]
BB3288 [shape=record label="{9741: has-next[v9,v10]|9742: if[v10](true-block:3289,false-block:3311)}" ] 
BB3288 -> BB3289 [tailport=s, headport=n, headlabel="      3289"]
BB3288 -> BB3311 [tailport=s, headport=n, headlabel="      3311"]
BB3289 [shape=record label="{9743: next-property[v9,v11]|9744: write-variable[v11,'item']|9745: read-variable['patterns',v14,-]|9746: read-property[v14,'hasOwnProperty',-]|9747: \<variable-non-null-undef\>['patterns']|9748: read-variable['item',v15,-]}" ] 
BB3289 -> BB3290 [tailport=s, headport=n, headlabel="      3290"]
BB3289 -> BB3313 [tailport=s, headport=n, color=gray]
BB3290 [shape=record label="{9749: call-patterns.hasOwnProperty [v14,'hasOwnProperty',v15,v12]}" ] 
BB3290 -> BB3291 [tailport=s, headport=n, headlabel="      3291"]
BB3290 -> BB3313 [tailport=s, headport=n, color=gray]
BB3291 [shape=record label="{9750: if[v12](true-block:3292,false-block:3310)}" ] 
BB3291 -> BB3292 [tailport=s, headport=n, headlabel="      3292"]
BB3291 -> BB3310 [tailport=s, headport=n, headlabel="      3310"]
BB3292 [shape=record label="{9751: read-variable['patterns',v17,-]|9752: read-variable['item',v18,-]|9753: read-property[v17,v18,v16]|9754: \<variable-non-null-undef\>['patterns']|9755: write-variable[v16,'method']*|9756: read-variable['method',v20,-]|9757: read-property[v20,'signature',v19]|9758: \<variable-non-null-undef\>['method']|9759: write-variable[v19,'sig']*|9760: constant[0.0,v21]|9761: write-variable[v21,'matches']*|9762: read-variable['sig',v25,-]|9763: read-property[v25,'length',v23]|9764: \<variable-non-null-undef\>['sig']|9765: read-variable['args',v26,-]|9766: read-property[v26,'length',v24]|9767: \<variable-non-null-undef\>['args']|9768: ==[v23,v24,v22]|9769: if[v22](true-block:3293,false-block:3310)}" ] 
BB3292 -> BB3293 [tailport=s, headport=n, headlabel="      3293"]
BB3292 -> BB3310 [tailport=s, headport=n]
BB3292 -> BB3313 [tailport=s, headport=n, color=gray]
BB3293 [shape=record label="{9770: read-variable['sig',v30,-]|9771: read-property[v30,'length',v28]|9772: \<variable-non-null-undef\>['sig']|9773: constant[0.0,v29]|9774: \>[v28,v29,v27]|9775: if[v27](true-block:3294,false-block:3308)}" ] 
BB3293 -> BB3294 [tailport=s, headport=n, headlabel="      3294"]
BB3293 -> BB3308 [tailport=s, headport=n, headlabel="      3308"]
BB3293 -> BB3313 [tailport=s, headport=n, color=gray]
BB3294 [shape=record label="{9776: constant[0.0,v32]|9777: write-variable[v32,'i']*}" ] 
BB3294 -> BB3295 [tailport=s, headport=n, headlabel="      3295"]
BB3295 [shape=record label="{9778: read-variable['i',v33,-]|9779: read-variable['sig',v35,-]|9780: read-property[v35,'length',v34]|9781: \<variable-non-null-undef\>['sig']|9782: \<[v33,v34,v31]|9783: if[v31](true-block:3296,false-block:3308)}" ] 
BB3295 -> BB3296 [tailport=s, headport=n, headlabel="      3296"]
BB3295 -> BB3308 [tailport=s, headport=n]
BB3295 -> BB3313 [tailport=s, headport=n, color=gray]
BB3296 [shape=record label="{9784: read-variable['sig',v39,-]|9785: read-variable['i',v40,-]|9786: read-property[v39,v40,v37]|9787: \<variable-non-null-undef\>['sig']|9788: read-variable['Joose',v41,-]|9789: read-property[v41,'TypeConstraint',v38]|9790: \<variable-non-null-undef\>['Joose']|9791: instanceof[v37,v38,v36]|9792: if[v36](true-block:3297,false-block:3299)}" ] 
BB3296 -> BB3299 [tailport=s, headport=n, headlabel="      3299"]
BB3296 -> BB3297 [tailport=s, headport=n, headlabel="      3297"]
BB3296 -> BB3313 [tailport=s, headport=n, color=gray]
BB3297 [shape=record label="{9793: read-variable['sig',v44,-]|9794: read-variable['i',v45,-]|9795: read-property[v44,v45,v43]|9796: \<variable-non-null-undef\>['sig']|9797: read-property[v43,'validateBool',-]|9798: \<property-non-null-undef\>[v44,v45]|9799: read-variable['args',v47,-]|9800: read-variable['i',v48,-]|9801: read-property[v47,v48,v46]|9802: \<variable-non-null-undef\>['args']}" ] 
BB3297 -> BB3298 [tailport=s, headport=n, headlabel="      3298"]
BB3297 -> BB3313 [tailport=s, headport=n, color=gray]
BB3298 [shape=record label="{9803: call-null [v43,'validateBool',v46,v36]}" ] 
BB3298 -> BB3299 [tailport=s, headport=n]
BB3298 -> BB3313 [tailport=s, headport=n, color=gray]
BB3299 [shape=record label="{9804: if[v36](true-block:3300,false-block:3301)}" ] 
BB3299 -> BB3300 [tailport=s, headport=n, headlabel="      3300"]
BB3299 -> BB3301 [tailport=s, headport=n, headlabel="      3301"]
BB3300 [shape=record label="{9805: constant[1.0,v42]|9806: read-variable['matches',v43,-]|9807: +[v43,v44]|9808: +[v44,v42,v45]|9809: write-variable[v45,'matches']*}" ] 
BB3300 -> BB3307 [tailport=s, headport=n, headlabel="      3307"]
BB3300 -> BB3313 [tailport=s, headport=n, color=gray]
BB3301 [shape=record label="{9810: read-variable['sig',v45,-]|9811: read-variable['i',v46,-]|9812: read-property[v45,v46,v43]|9813: \<variable-non-null-undef\>['sig']|9814: read-variable['Object',v44,-]|9815: instanceof[v43,v44,v42]|9816: if[v42](true-block:3302,false-block:3303)}" ] 
BB3301 -> BB3303 [tailport=s, headport=n, headlabel="      3303"]
BB3301 -> BB3302 [tailport=s, headport=n, headlabel="      3302"]
BB3301 -> BB3313 [tailport=s, headport=n, color=gray]
BB3302 [shape=record label="{9817: read-variable['args',v49,-]|9818: read-variable['i',v50,-]|9819: read-property[v49,v50,v47]|9820: \<variable-non-null-undef\>['args']|9821: read-variable['sig',v51,-]|9822: read-variable['i',v52,-]|9823: read-property[v51,v52,v48]|9824: \<variable-non-null-undef\>['sig']|9825: instanceof[v47,v48,v42]}" ] 
BB3302 -> BB3303 [tailport=s, headport=n]
BB3302 -> BB3313 [tailport=s, headport=n, color=gray]
BB3303 [shape=record label="{9826: if[v42](true-block:3304,false-block:3305)}" ] 
BB3303 -> BB3304 [tailport=s, headport=n, headlabel="      3304"]
BB3303 -> BB3305 [tailport=s, headport=n, headlabel="      3305"]
BB3304 [shape=record label="{9827: constant[1.0,v47]|9828: read-variable['matches',v48,-]|9829: +[v48,v49]|9830: +[v49,v47,v50]|9831: write-variable[v50,'matches']*}" ] 
BB3304 -> BB3307 [tailport=s, headport=n]
BB3304 -> BB3313 [tailport=s, headport=n, color=gray]
BB3305 [shape=record label="{9832: read-variable['args',v50,-]|9833: read-variable['i',v51,-]|9834: read-property[v50,v51,v48]|9835: \<variable-non-null-undef\>['args']|9836: read-variable['sig',v52,-]|9837: read-variable['i',v53,-]|9838: read-property[v52,v53,v49]|9839: \<variable-non-null-undef\>['sig']|9840: ==[v48,v49,v47]|9841: if[v47](true-block:3306,false-block:3307)}" ] 
BB3305 -> BB3306 [tailport=s, headport=n, headlabel="      3306"]
BB3305 -> BB3307 [tailport=s, headport=n]
BB3305 -> BB3313 [tailport=s, headport=n, color=gray]
BB3306 [shape=record label="{9842: constant[1.0,v54]|9843: read-variable['matches',v55,-]|9844: +[v55,v56]|9845: +[v56,v54,v57]|9846: write-variable[v57,'matches']*}" ] 
BB3306 -> BB3307 [tailport=s, headport=n]
BB3306 -> BB3313 [tailport=s, headport=n, color=gray]
BB3307 [shape=record label="{9847: constant[1.0,v42]|9848: read-variable['i',v43,-]|9849: +[v43,v44]|9850: +[v44,v42,v45]|9851: write-variable[v45,'i']}" ] 
BB3307 -> BB3295 [tailport=s, headport=n]
BB3307 -> BB3313 [tailport=s, headport=n, color=gray]
BB3308 [shape=record label="{9852: read-variable['matches',v32,-]|9853: read-variable['sig',v34,-]|9854: read-property[v34,'length',v33]|9855: \<variable-non-null-undef\>['sig']|9856: ==[v32,v33,v31]|9857: if[v31](true-block:3309,false-block:3310)}" ] 
BB3308 -> BB3309 [tailport=s, headport=n, headlabel="      3309"]
BB3308 -> BB3310 [tailport=s, headport=n]
BB3308 -> BB3313 [tailport=s, headport=n, color=gray]
BB3309 [shape=record label="{9858: read-variable['method',v35,-]|9859: read-property[v35,'method',v1]|9860: \<variable-non-null-undef\>['method']}" ] 
BB3309 -> BB3312 [tailport=s, headport=n, headlabel="      3312"]
BB3309 -> BB3313 [tailport=s, headport=n, color=gray]
BB3310 [shape=record label="{9861: end-for-in(begin-node:9740)}" ] 
BB3310 -> BB3288 [tailport=s, headport=n]
BB3311 [shape=record label="{9862: function-expr[function ( ),v1]}" ] 
BB3311 -> BB3312 [tailport=s, headport=n]
BB3312 [shape=record label="{9863: return[v1]}" ] 
BB3313 [shape=record label="{9864: exceptional-return}" ] 
//#$~ 3777
}
