digraph {
rankdir="TD"
BB_entry93[shape=none,label=""];
BB_entry93 -> BB1571 [tailport=s, headport=n, headlabel="    1571"]
BB1571 [shape=record label="{5040: constant[undefined,v1]|5041: vardecl['captures']|5042: vardecl['tok']}" ] 
BB1571 -> BB1572 [tailport=s, headport=n, headlabel="      1572"]
BB1572 [shape=record label="{5043: read-variable['RegExp',v5,-]|5044: constant[\"^while +([^\\\\n]+)\",v6]}" ] 
BB1572 -> BB1573 [tailport=s, headport=n, headlabel="      1573"]
BB1572 -> BB1585 [tailport=s, headport=n, color=gray, headlabel="      1585"]
BB1573 [shape=record label="{5045: construct [-,v5,v6,v4]}" ] 
BB1573 -> BB1574 [tailport=s, headport=n, headlabel="      1574"]
BB1573 -> BB1585 [tailport=s, headport=n, color=gray]
BB1574 [shape=record label="{5046: read-property[v4,'exec',-]|5047: read-variable['this',v8,-]|5048: read-property[v8,'input',v7]}" ] 
BB1574 -> BB1575 [tailport=s, headport=n, headlabel="      1575"]
BB1574 -> BB1585 [tailport=s, headport=n, color=gray]
BB1575 [shape=record label="{5049: call-null [v4,'exec',v7,v2]}" ] 
BB1575 -> BB1576 [tailport=s, headport=n, headlabel="      1576"]
BB1575 -> BB1585 [tailport=s, headport=n, color=gray]
BB1576 [shape=record label="{5050: write-variable[v2,'captures']|5051: if[v2](true-block:1577,false-block:1584)}" ] 
BB1576 -> BB1577 [tailport=s, headport=n, headlabel="      1577"]
BB1576 -> BB1584 [tailport=s, headport=n, headlabel="      1584"]
BB1577 [shape=record label="{5052: read-variable['this',v10,-]|5053: read-property[v10,'consume',-]|5054: read-variable['captures',v13,-]|5055: constant[0.0,v14]|5056: read-property[v13,v14,v12]|5057: \<variable-non-null-undef\>['captures']|5058: read-property[v12,'length',v11]|5059: \<property-non-null-undef\>[v13,v14]}" ] 
BB1577 -> BB1578 [tailport=s, headport=n, headlabel="      1578"]
BB1577 -> BB1585 [tailport=s, headport=n, color=gray]
BB1578 [shape=record label="{5060: call-this.consume [v10,'consume',v11,-]*}" ] 
BB1578 -> BB1579 [tailport=s, headport=n, headlabel="      1579"]
BB1578 -> BB1585 [tailport=s, headport=n, color=gray]
BB1579 [shape=record label="{5061: read-variable['assertExpression',v16,v15]|5062: read-variable['captures',v18,-]|5063: constant[1.0,v19]|5064: read-property[v18,v19,v17]|5065: \<variable-non-null-undef\>['captures']}" ] 
BB1579 -> BB1580 [tailport=s, headport=n, headlabel="      1580"]
BB1579 -> BB1585 [tailport=s, headport=n, color=gray]
BB1580 [shape=record label="{5066: call-assertExpression [v15,v16,v17,-]*}" ] 
BB1580 -> BB1581 [tailport=s, headport=n, headlabel="      1581"]
BB1580 -> BB1585 [tailport=s, headport=n, color=gray]
BB1581 [shape=record label="{5067: read-variable['this',v22,-]|5068: read-property[v22,'tok',-]|5069: constant[\"code\",v23]|5070: constant[\"while (\",v27]|5071: read-variable['captures',v29,-]|5072: constant[1.0,v30]|5073: read-property[v29,v30,v28]|5074: \<variable-non-null-undef\>['captures']|5075: +[v27,v28,v25]|5076: constant[\")\",v26]|5077: +[v25,v26,v24]}" ] 
BB1581 -> BB1582 [tailport=s, headport=n, headlabel="      1582"]
BB1581 -> BB1585 [tailport=s, headport=n, color=gray]
BB1582 [shape=record label="{5078: call-this.tok [v22,'tok',v23,v24,v20]}" ] 
BB1582 -> BB1583 [tailport=s, headport=n, headlabel="      1583"]
BB1582 -> BB1585 [tailport=s, headport=n, color=gray]
BB1583 [shape=record label="{5079: write-variable[v20,'tok']*|5080: read-variable['tok',v32,-]|5081: constant[true,v31]|5082: write-property[v32,'requiresBlock',v31]|5083: \<variable-non-null-undef\>['tok']*|5084: read-variable['tok',v1,-]}" ] 
BB1583 -> BB1584 [tailport=s, headport=n]
BB1583 -> BB1585 [tailport=s, headport=n, color=gray]
BB1584 [shape=record label="{5085: return[v1]}" ] 
BB1585 [shape=record label="{5086: exceptional-return}" ] 
//#$~ 1739
}
