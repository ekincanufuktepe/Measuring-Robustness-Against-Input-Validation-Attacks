digraph {
rankdir="TD"
BB_entry49[shape=none,label=""];
BB_entry49 -> BB641 [tailport=s, headport=n, headlabel="    641"]
BB641 [shape=record label="{2236: constant[undefined,v1]|2237: vardecl['handler']|2238: vardecl['args']|2239: vardecl['listeners']|2240: vardecl['i']|2241: vardecl['l']}" ] 
BB641 -> BB642 [tailport=s, headport=n, headlabel="      642"]
BB642 [shape=record label="{2242: read-variable['this',v4,-]|2243: read-property[v4,'$events',v3]|2244: ![v3,v2]|2245: if[v2](true-block:643,false-block:644)}" ] 
BB642 -> BB643 [tailport=s, headport=n, headlabel="      643"]
BB642 -> BB644 [tailport=s, headport=n, headlabel="      644"]
BB642 -> BB666 [tailport=s, headport=n, color=gray, headlabel="      666"]
BB643 [shape=record label="{2246: constant[false,v1]}" ] 
BB643 -> BB665 [tailport=s, headport=n, headlabel="      665"]
BB644 [shape=record label="{2247: read-variable['this',v7,-]|2248: read-property[v7,'$events',v6]|2249: read-variable['name',v8,-]|2250: read-property[v6,v8,v5]|2251: \<property-non-null-undef\>[v7,'$events']|2252: write-variable[v5,'handler']*|2253: read-variable['handler',v10,-]|2254: ![v10,v9]|2255: if[v9](true-block:645,false-block:646)}" ] 
BB644 -> BB645 [tailport=s, headport=n, headlabel="      645"]
BB644 -> BB646 [tailport=s, headport=n, headlabel="      646"]
BB644 -> BB666 [tailport=s, headport=n, color=gray]
BB645 [shape=record label="{2256: constant[false,v1]}" ] 
BB645 -> BB665 [tailport=s, headport=n]
BB646 [shape=record label="{2257: read-variable['Array',v15,-]}" ] 
BB646 -> BB647 [tailport=s, headport=n, headlabel="      647"]
BB646 -> BB666 [tailport=s, headport=n, color=gray]
BB647 [shape=record label="{2258: construct [-,v15,v14]}" ] 
BB647 -> BB648 [tailport=s, headport=n, headlabel="      648"]
BB647 -> BB666 [tailport=s, headport=n, color=gray]
BB648 [shape=record label="{2259: read-property[v14,'slice',v13]|2260: read-property[v13,'call',-]|2261: \<property-non-null-undef\>[v14,'slice']|2262: read-variable['arguments',v16,-]|2263: constant[1.0,v17]}" ] 
BB648 -> BB649 [tailport=s, headport=n, headlabel="      649"]
BB648 -> BB666 [tailport=s, headport=n, color=gray]
BB649 [shape=record label="{2264: call-null [v13,'call',v16,v17,v11]}" ] 
BB649 -> BB650 [tailport=s, headport=n, headlabel="      650"]
BB649 -> BB666 [tailport=s, headport=n, color=gray]
BB650 [shape=record label="{2265: write-variable[v11,'args']*|2266: constant[\"function\",v19]|2267: typeof['handler',v20]|2268: ==[v19,v20,v18]|2269: if[v18](true-block:651,false-block:652)}" ] 
BB650 -> BB651 [tailport=s, headport=n, headlabel="      651"]
BB650 -> BB652 [tailport=s, headport=n, headlabel="      652"]
BB650 -> BB666 [tailport=s, headport=n, color=gray]
BB651 [shape=record label="{2270: read-variable['handler',v22,-]|2271: read-property[v22,'apply',-]|2272: \<variable-non-null-undef\>['handler']|2273: read-variable['this',v23,-]|2274: read-variable['args',v24,-]}" ] 
BB651 -> BB653 [tailport=s, headport=n, headlabel="      653"]
BB651 -> BB666 [tailport=s, headport=n, color=gray]
BB652 [shape=record label="{2275: read-variable['isArray',v23,v22]|2276: read-variable['handler',v24,-]}" ] 
BB652 -> BB654 [tailport=s, headport=n, headlabel="      654"]
BB652 -> BB666 [tailport=s, headport=n, color=gray]
BB653 [shape=record label="{2277: call-handler.apply [v22,'apply',v23,v24,-]*}" ] 
BB653 -> BB664 [tailport=s, headport=n, headlabel="      664"]
BB653 -> BB666 [tailport=s, headport=n, color=gray]
BB654 [shape=record label="{2278: call-isArray [v22,v23,v24,v21]}" ] 
BB654 -> BB655 [tailport=s, headport=n, headlabel="      655"]
BB654 -> BB666 [tailport=s, headport=n, color=gray]
BB655 [shape=record label="{2279: if[v21](true-block:656,false-block:657)}" ] 
BB655 -> BB656 [tailport=s, headport=n, headlabel="      656"]
BB655 -> BB657 [tailport=s, headport=n, headlabel="      657"]
BB656 [shape=record label="{2280: read-variable['handler',v27,-]|2281: read-property[v27,'slice',-]|2282: \<variable-non-null-undef\>['handler']}" ] 
BB656 -> BB658 [tailport=s, headport=n, headlabel="      658"]
BB656 -> BB666 [tailport=s, headport=n, color=gray]
BB657 [shape=record label="{2283: constant[false,v1]}" ] 
BB657 -> BB665 [tailport=s, headport=n]
BB658 [shape=record label="{2284: call-handler.slice [v27,'slice',v25]}" ] 
BB658 -> BB659 [tailport=s, headport=n, headlabel="      659"]
BB658 -> BB666 [tailport=s, headport=n, color=gray]
BB659 [shape=record label="{2285: write-variable[v25,'listeners']*|2286: constant[0.0,v29]|2287: write-variable[v29,'i']*|2288: read-variable['listeners',v31,-]|2289: read-property[v31,'length',v30]|2290: \<variable-non-null-undef\>['listeners']|2291: write-variable[v30,'l']*}" ] 
BB659 -> BB660 [tailport=s, headport=n, headlabel="      660"]
BB659 -> BB666 [tailport=s, headport=n, color=gray]
BB660 [shape=record label="{2292: read-variable['i',v32,-]|2293: read-variable['l',v33,-]|2294: \<[v32,v33,v28]|2295: if[v28](true-block:661,false-block:664)}" ] 
BB660 -> BB661 [tailport=s, headport=n, headlabel="      661"]
BB660 -> BB664 [tailport=s, headport=n]
BB660 -> BB666 [tailport=s, headport=n, color=gray]
BB661 [shape=record label="{2296: read-variable['listeners',v36,-]|2297: read-variable['i',v37,-]|2298: read-property[v36,v37,v35]|2299: \<variable-non-null-undef\>['listeners']|2300: read-property[v35,'apply',-]|2301: \<property-non-null-undef\>[v36,v37]|2302: read-variable['this',v38,-]|2303: read-variable['args',v39,-]}" ] 
BB661 -> BB662 [tailport=s, headport=n, headlabel="      662"]
BB661 -> BB666 [tailport=s, headport=n, color=gray]
BB662 [shape=record label="{2304: call-null [v35,'apply',v38,v39,-]*}" ] 
BB662 -> BB663 [tailport=s, headport=n, headlabel="      663"]
BB662 -> BB666 [tailport=s, headport=n, color=gray]
BB663 [shape=record label="{2305: constant[1.0,v40]|2306: read-variable['i',v41,-]|2307: +[v41,v42]|2308: +[v42,v40,v43]|2309: write-variable[v43,'i']}" ] 
BB663 -> BB660 [tailport=s, headport=n]
BB663 -> BB666 [tailport=s, headport=n, color=gray]
BB664 [shape=record label="{2310: constant[true,v1]}" ] 
BB664 -> BB665 [tailport=s, headport=n]
BB665 [shape=record label="{2311: return[v1]}" ] 
BB666 [shape=record label="{2312: exceptional-return}" ] 
//#$~ 622
}
