digraph {
rankdir="TD"
BB_entry460[shape=none,label=""];
BB_entry460 -> BB5238 [tailport=s, headport=n, headlabel="    5238"]
BB5238 [shape=record label="{16018: constant[undefined,v1]}" ] 
BB5238 -> BB5239 [tailport=s, headport=n, headlabel="      5239"]
BB5239 [shape=record label="{16019: typeof['Buffer',v4]|16020: constant[\"undefined\",v5]|16021: !==[v4,v5,v3]|16022: if[v3](true-block:5240,false-block:5242)}" ] 
BB5239 -> BB5242 [tailport=s, headport=n, headlabel="      5242"]
BB5239 -> BB5240 [tailport=s, headport=n, headlabel="      5240"]
BB5239 -> BB5253 [tailport=s, headport=n, color=gray, headlabel="      5253"]
BB5240 [shape=record label="{16023: read-variable['Buffer',v7,-]|16024: read-property[v7,'isBuffer',-]|16025: \<variable-non-null-undef\>['Buffer']|16026: read-variable['value',v8,v2]}" ] 
BB5240 -> BB5241 [tailport=s, headport=n, headlabel="      5241"]
BB5240 -> BB5253 [tailport=s, headport=n, color=gray]
BB5241 [shape=record label="{16027: call-Buffer.isBuffer [v7,'isBuffer',v8,v3]}" ] 
BB5241 -> BB5242 [tailport=s, headport=n]
BB5241 -> BB5253 [tailport=s, headport=n, color=gray]
BB5242 [shape=record label="{16028: if[v3](true-block:5243,false-block:5244)}" ] 
BB5242 -> BB5243 [tailport=s, headport=n, headlabel="      5243"]
BB5242 -> BB5244 [tailport=s, headport=n, headlabel="      5244"]
BB5243 [shape=record label="{16029: constant[\"buffer\",v1]}" ] 
BB5243 -> BB5252 [tailport=s, headport=n, headlabel="      5252"]
BB5244 [shape=record label="{16030: read-variable['Object',v13,-]|16031: read-property[v13,'prototype',v12]|16032: \<variable-non-null-undef\>['Object']|16033: read-property[v12,'toString',v11]|16034: \<property-non-null-undef\>[v13,'prototype']|16035: read-property[v11,'call',-]|16036: \<property-non-null-undef\>[v12,'toString']|16037: read-variable['value',v14,-]}" ] 
BB5244 -> BB5245 [tailport=s, headport=n, headlabel="      5245"]
BB5244 -> BB5253 [tailport=s, headport=n, color=gray]
BB5245 [shape=record label="{16038: call-Object.prototype.toString.call [v11,'call',v14,v9]}" ] 
BB5245 -> BB5246 [tailport=s, headport=n, headlabel="      5246"]
BB5245 -> BB5253 [tailport=s, headport=n, color=gray]
BB5246 [shape=record label="{16039: read-property[v9,'replace',-]|16040: read-variable['RegExp',v16,-]|16041: constant[\"^\\\\[.+\\\\s(.+?)\\\\]$\",v17]}" ] 
BB5246 -> BB5247 [tailport=s, headport=n, headlabel="      5247"]
BB5246 -> BB5253 [tailport=s, headport=n, color=gray]
BB5247 [shape=record label="{16042: construct [-,v16,v17,v15]}" ] 
BB5247 -> BB5248 [tailport=s, headport=n, headlabel="      5248"]
BB5247 -> BB5253 [tailport=s, headport=n, color=gray]
BB5248 [shape=record label="{16043: constant[\"$1\",v18]}" ] 
BB5248 -> BB5249 [tailport=s, headport=n, headlabel="      5249"]
BB5249 [shape=record label="{16044: call-null [v9,'replace',v15,v18,v7]}" ] 
BB5249 -> BB5250 [tailport=s, headport=n, headlabel="      5250"]
BB5249 -> BB5253 [tailport=s, headport=n, color=gray]
BB5250 [shape=record label="{16045: read-property[v7,'toLowerCase',-]}" ] 
BB5250 -> BB5251 [tailport=s, headport=n, headlabel="      5251"]
BB5250 -> BB5253 [tailport=s, headport=n, color=gray]
BB5251 [shape=record label="{16046: call-null [v7,'toLowerCase',v1]}" ] 
BB5251 -> BB5252 [tailport=s, headport=n]
BB5251 -> BB5253 [tailport=s, headport=n, color=gray]
BB5252 [shape=record label="{16047: return[v1]}" ] 
BB5253 [shape=record label="{16048: exceptional-return}" ] 
//#$~ 6074
}
