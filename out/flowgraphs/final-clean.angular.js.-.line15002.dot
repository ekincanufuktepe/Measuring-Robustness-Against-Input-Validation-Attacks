digraph {
rankdir="TD"
BB_entry846[shape=none,label=""];
BB_entry846 -> BB11504 [tailport=s, headport=n, headlabel="    11504"]
BB11504 [shape=record label="{30214: constant[undefined,v1]|30215: function-decl[function destroyChildScope ( $event ),-]|30216: function-decl[function Scope ( ),-]|30217: vardecl['$rootScope']|30218: vardecl['asyncQueue']|30219: vardecl['postDigestQueue']|30220: vardecl['applyAsyncQueue']|30221: function-decl[function beginPhase ( phase ),-]|30222: function-decl[function clearPhase ( ),-]|30223: function-decl[function incrementWatchersCount ( current count ),-]|30224: function-decl[function decrementListenerCount ( current count name ),-]|30225: function-decl[function initWatchVal ( ),-]|30226: function-decl[function flushApplyAsync ( ),-]|30227: function-decl[function scheduleApplyAsync ( ),-]}" ] 
BB11504 -> BB11505 [tailport=s, headport=n, headlabel="      11505"]
BB11505 [shape=record label="{30228: read-variable['Scope',v3,-]|30229: new[v2]|30230: read-variable['Scope',v4,-]|30231: write-property[v2,'constructor',v4]|30232: function-expr[function ( isolate parent ),v5]|30233: write-property[v2,'$new',v5]|30234: function-expr[function ( watchExp listener objectEquality prettyPrintExpression ),v6]|30235: write-property[v2,'$watch',v6]|30236: function-expr[function ( watchExpressions listener ),v7]|30237: write-property[v2,'$watchGroup',v7]|30238: function-expr[function ( obj listener ),v8]|30239: write-property[v2,'$watchCollection',v8]|30240: function-expr[function ( ),v9]|30241: write-property[v2,'$digest',v9]|30242: function-expr[function ( ),v10]|30243: write-property[v2,'$destroy',v10]|30244: function-expr[function ( expr locals ),v11]|30245: write-property[v2,'$eval',v11]|30246: function-expr[function ( expr locals ),v12]|30247: write-property[v2,'$evalAsync',v12]|30248: function-expr[function ( fn ),v13]|30249: write-property[v2,'$$postDigest',v13]|30250: function-expr[function ( expr ),v14]|30251: write-property[v2,'$apply',v14]|30252: function-expr[function ( expr ),v15]|30253: write-property[v2,'$applyAsync',v15]|30254: function-expr[function ( name listener ),v16]|30255: write-property[v2,'$on',v16]|30256: function-expr[function ( name args ),v17]|30257: write-property[v2,'$emit',v17]|30258: function-expr[function ( name args ),v18]|30259: write-property[v2,'$broadcast',v18]|30260: write-property[v3,'prototype',v2]|30261: \<variable-non-null-undef\>['Scope']*|30262: read-variable['Scope',v20,-]}" ] 
BB11505 -> BB11506 [tailport=s, headport=n, headlabel="      11506"]
BB11505 -> BB11515 [tailport=s, headport=n, color=gray, headlabel="      11515"]
BB11506 [shape=record label="{30263: construct [-,v20,v19]}" ] 
BB11506 -> BB11507 [tailport=s, headport=n, headlabel="      11507"]
BB11506 -> BB11515 [tailport=s, headport=n, color=gray]
BB11507 [shape=record label="{30264: write-variable[v19,'$rootScope']*|30265: read-variable['$rootScope',v22,-]|30266: read-variable['Array',v23,-]}" ] 
BB11507 -> BB11508 [tailport=s, headport=n, headlabel="      11508"]
BB11507 -> BB11515 [tailport=s, headport=n, color=gray]
BB11508 [shape=record label="{30267: construct [-,v23,v21]}" ] 
BB11508 -> BB11509 [tailport=s, headport=n, headlabel="      11509"]
BB11508 -> BB11515 [tailport=s, headport=n, color=gray]
BB11509 [shape=record label="{30268: write-property[v22,'$$asyncQueue',v21]|30269: \<variable-non-null-undef\>['$rootScope']|30270: write-variable[v21,'asyncQueue']*|30271: read-variable['$rootScope',v25,-]|30272: read-variable['Array',v26,-]}" ] 
BB11509 -> BB11510 [tailport=s, headport=n, headlabel="      11510"]
BB11509 -> BB11515 [tailport=s, headport=n, color=gray]
BB11510 [shape=record label="{30273: construct [-,v26,v24]}" ] 
BB11510 -> BB11511 [tailport=s, headport=n, headlabel="      11511"]
BB11510 -> BB11515 [tailport=s, headport=n, color=gray]
BB11511 [shape=record label="{30274: write-property[v25,'$$postDigestQueue',v24]|30275: \<variable-non-null-undef\>['$rootScope']|30276: write-variable[v24,'postDigestQueue']*|30277: read-variable['$rootScope',v28,-]|30278: read-variable['Array',v29,-]}" ] 
BB11511 -> BB11512 [tailport=s, headport=n, headlabel="      11512"]
BB11511 -> BB11515 [tailport=s, headport=n, color=gray]
BB11512 [shape=record label="{30279: construct [-,v29,v27]}" ] 
BB11512 -> BB11513 [tailport=s, headport=n, headlabel="      11513"]
BB11512 -> BB11515 [tailport=s, headport=n, color=gray]
BB11513 [shape=record label="{30280: write-property[v28,'$$applyAsyncQueue',v27]|30281: \<variable-non-null-undef\>['$rootScope']|30282: write-variable[v27,'applyAsyncQueue']*|30283: read-variable['$rootScope',v1,-]}" ] 
BB11513 -> BB11514 [tailport=s, headport=n, headlabel="      11514"]
BB11513 -> BB11515 [tailport=s, headport=n, color=gray]
BB11514 [shape=record label="{30284: return[v1]}" ] 
BB11515 [shape=record label="{30285: exceptional-return}" ] 
//#$~ 16248
}
