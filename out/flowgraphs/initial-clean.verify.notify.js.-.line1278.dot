digraph {
rankdir="TD"
BB_entry121[shape=none,label=""];
BB_entry121 -> BB1495 [tailport=s, headport=n, headlabel="    1495"]
BB1495 [shape=record label="{4507: constant[undefined,v1]|4508: vardecl['name']}" ] 
BB1495 -> BB1496 [tailport=s, headport=n, headlabel="      1496"]
BB1496 [shape=record label="{4509: read-variable['obj',v3,-]}" ] 
BB1496 -> BB1497 [tailport=s, headport=n, headlabel="      1497"]
BB1496 -> BB1511 [tailport=s, headport=n, color=gray, headlabel="      1511"]
BB1497 [shape=record label="{4510: begin-for-in[v3,v4]}" ] 
BB1497 -> BB1498 [tailport=s, headport=n, headlabel="      1498"]
BB1497 -> BB1511 [tailport=s, headport=n, color=gray]
BB1498 [shape=record label="{4511: has-next[v4,v5]|4512: if[v5](true-block:1499,false-block:1508)}" ] 
BB1498 -> BB1499 [tailport=s, headport=n, headlabel="      1499"]
BB1498 -> BB1508 [tailport=s, headport=n, headlabel="      1508"]
BB1499 [shape=record label="{4513: next-property[v4,v6]|4514: write-variable[v6,'name']|4515: read-variable['rawRules',v8,-]|4516: read-variable['name',v9,-]|4517: read-property[v8,v9,v7]|4518: \<variable-non-null-undef\>['rawRules']|4519: if[v7](true-block:1500,false-block:1502)}" ] 
BB1499 -> BB1500 [tailport=s, headport=n, headlabel="      1500"]
BB1499 -> BB1502 [tailport=s, headport=n, headlabel="      1502"]
BB1499 -> BB1511 [tailport=s, headport=n, color=gray]
BB1500 [shape=record label="{4520: read-variable['warn',v11,v10]|4521: constant[\"validator '%s' already exists\",v12]|4522: read-variable['name',v13,-]}" ] 
BB1500 -> BB1501 [tailport=s, headport=n, headlabel="      1501"]
BB1500 -> BB1511 [tailport=s, headport=n, color=gray]
BB1501 [shape=record label="{4523: call-warn [v10,v11,v12,v13,-]*}" ] 
BB1501 -> BB1502 [tailport=s, headport=n]
BB1501 -> BB1511 [tailport=s, headport=n, color=gray]
BB1502 [shape=record label="{4524: read-variable['$',v12,-]|4525: read-property[v12,'isFunction',-]|4526: \<variable-non-null-undef\>['$']|4527: read-variable['obj',v14,-]|4528: read-variable['name',v15,-]|4529: read-property[v14,v15,v13]|4530: \<variable-non-null-undef\>['obj']}" ] 
BB1502 -> BB1503 [tailport=s, headport=n, headlabel="      1503"]
BB1502 -> BB1511 [tailport=s, headport=n, color=gray]
BB1503 [shape=record label="{4531: call-$.isFunction [v12,'isFunction',v13,v10]}" ] 
BB1503 -> BB1504 [tailport=s, headport=n, headlabel="      1504"]
BB1503 -> BB1511 [tailport=s, headport=n, color=gray]
BB1504 [shape=record label="{4532: if[v10](true-block:1505,false-block:1506)}" ] 
BB1504 -> BB1505 [tailport=s, headport=n, headlabel="      1505"]
BB1504 -> BB1506 [tailport=s, headport=n, headlabel="      1506"]
BB1505 [shape=record label="{4533: read-variable['obj',v17,-]|4534: read-variable['name',v18,-]|4535: new[v16]|4536: read-variable['obj',v20,-]|4537: read-variable['name',v21,-]|4538: read-property[v20,v21,v19]|4539: \<variable-non-null-undef\>['obj']|4540: write-property[v16,'fn',v19]|4541: write-property[v17,v18,v16]|4542: \<variable-non-null-undef\>['obj']*}" ] 
BB1505 -> BB1506 [tailport=s, headport=n]
BB1505 -> BB1511 [tailport=s, headport=n, color=gray]
BB1506 [shape=record label="{4543: read-variable['obj',v18,-]|4544: read-variable['name',v19,-]|4545: read-property[v18,v19,v17]|4546: \<variable-non-null-undef\>['obj']|4547: read-variable['type',v16,-]|4548: write-property[v17,'__ruleType',v16]|4549: \<property-non-null-undef\>[v18,v19]*}" ] 
BB1506 -> BB1507 [tailport=s, headport=n, headlabel="      1507"]
BB1506 -> BB1511 [tailport=s, headport=n, color=gray]
BB1507 [shape=record label="{4550: end-for-in(begin-node:4510)}" ] 
BB1507 -> BB1498 [tailport=s, headport=n]
BB1508 [shape=record label="{4551: read-variable['$',v8,-]|4552: read-property[v8,'extend',-]|4553: \<variable-non-null-undef\>['$']|4554: constant[true,v9]|4555: read-variable['rawRules',v10,-]|4556: read-variable['obj',v11,-]}" ] 
BB1508 -> BB1509 [tailport=s, headport=n, headlabel="      1509"]
BB1508 -> BB1511 [tailport=s, headport=n, color=gray]
BB1509 [shape=record label="{4557: call-$.extend [v8,'extend',v9,v10,v11,-]*}" ] 
BB1509 -> BB1510 [tailport=s, headport=n, headlabel="      1510"]
BB1509 -> BB1511 [tailport=s, headport=n, color=gray]
BB1510 [shape=record label="{4558: return[v1]}" ] 
BB1511 [shape=record label="{4559: exceptional-return}" ] 
//#$~ 1292
}
