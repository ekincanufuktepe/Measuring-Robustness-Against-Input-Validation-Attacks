digraph {
rankdir="TD"
BB_entry357[shape=none,label=""];
BB_entry357 -> BB6261 [tailport=s, headport=n, headlabel="    6261"]
BB6261 [shape=record label="{18943: constant[undefined,v1]}" ] 
BB6261 -> BB6262 [tailport=s, headport=n, headlabel="      6262"]
BB6262 [shape=record label="{18944: read-variable['next',v3,v2]}" ] 
BB6262 -> BB6263 [tailport=s, headport=n, headlabel="      6263"]
BB6262 -> BB6277 [tailport=s, headport=n, color=gray, headlabel="      6277"]
BB6263 [shape=record label="{18945: call-next [v2,v3,-]*}" ] 
BB6263 -> BB6264 [tailport=s, headport=n, headlabel="      6264"]
BB6263 -> BB6277 [tailport=s, headport=n, color=gray]
BB6264 [shape=record label="{18946: read-variable['newline',v6,-]|18947: read-property[v6,'test',-]|18948: \<variable-non-null-undef\>['newline']|18949: read-variable['input',v9,-]|18950: read-property[v9,'slice',-]|18951: \<variable-non-null-undef\>['input']|18952: read-variable['lastEnd',v10,-]|18953: read-variable['tokStart',v11,-]}" ] 
BB6264 -> BB6265 [tailport=s, headport=n, headlabel="      6265"]
BB6264 -> BB6277 [tailport=s, headport=n, color=gray]
BB6265 [shape=record label="{18954: call-input.slice [v9,'slice',v10,v11,v7]}" ] 
BB6265 -> BB6266 [tailport=s, headport=n, headlabel="      6266"]
BB6265 -> BB6277 [tailport=s, headport=n, color=gray]
BB6266 [shape=record label="{18955: call-newline.test [v6,'test',v7,v4]}" ] 
BB6266 -> BB6267 [tailport=s, headport=n, headlabel="      6267"]
BB6266 -> BB6277 [tailport=s, headport=n, color=gray]
BB6267 [shape=record label="{18956: if[v4](true-block:6268,false-block:6270)}" ] 
BB6267 -> BB6268 [tailport=s, headport=n, headlabel="      6268"]
BB6267 -> BB6270 [tailport=s, headport=n, headlabel="      6270"]
BB6268 [shape=record label="{18957: read-variable['raise',v13,v12]|18958: read-variable['lastEnd',v14,-]|18959: constant[\"Illegal newline after throw\",v15]}" ] 
BB6268 -> BB6269 [tailport=s, headport=n, headlabel="      6269"]
BB6268 -> BB6277 [tailport=s, headport=n, color=gray]
BB6269 [shape=record label="{18960: call-raise [v12,v13,v14,v15,-]*}" ] 
BB6269 -> BB6270 [tailport=s, headport=n]
BB6269 -> BB6277 [tailport=s, headport=n, color=gray]
BB6270 [shape=record label="{18961: read-variable['node',v13,-]|18962: read-variable['parseExpression',v15,v14]}" ] 
BB6270 -> BB6271 [tailport=s, headport=n, headlabel="      6271"]
BB6270 -> BB6277 [tailport=s, headport=n, color=gray]
BB6271 [shape=record label="{18963: call-parseExpression [v14,v15,v12]}" ] 
BB6271 -> BB6272 [tailport=s, headport=n, headlabel="      6272"]
BB6271 -> BB6277 [tailport=s, headport=n, color=gray]
BB6272 [shape=record label="{18964: write-property[v13,'argument',v12]|18965: \<variable-non-null-undef\>['node']*|18966: read-variable['semicolon',v17,v16]}" ] 
BB6272 -> BB6273 [tailport=s, headport=n, headlabel="      6273"]
BB6272 -> BB6277 [tailport=s, headport=n, color=gray]
BB6273 [shape=record label="{18967: call-semicolon [v16,v17,-]*}" ] 
BB6273 -> BB6274 [tailport=s, headport=n, headlabel="      6274"]
BB6273 -> BB6277 [tailport=s, headport=n, color=gray]
BB6274 [shape=record label="{18968: read-variable['finishNode',v19,v18]|18969: read-variable['node',v20,-]|18970: constant[\"ThrowStatement\",v21]}" ] 
BB6274 -> BB6275 [tailport=s, headport=n, headlabel="      6275"]
BB6274 -> BB6277 [tailport=s, headport=n, color=gray]
BB6275 [shape=record label="{18971: call-finishNode [v18,v19,v20,v21,v1]}" ] 
BB6275 -> BB6276 [tailport=s, headport=n, headlabel="      6276"]
BB6275 -> BB6277 [tailport=s, headport=n, color=gray]
BB6276 [shape=record label="{18972: return[v1]}" ] 
BB6277 [shape=record label="{18973: exceptional-return}" ] 
//#$~ 6202
}
