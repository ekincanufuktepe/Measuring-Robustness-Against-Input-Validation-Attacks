digraph {
rankdir="TD"
BB_entry36[shape=none,label=""];
BB_entry36 -> BB389 [tailport=s, headport=n, headlabel="    389"]
BB389 [shape=record label="{961: constant[undefined,v1]|962: vardecl['callbackInverse']|963: vardecl['matches']|964: vardecl['i']|965: vardecl['length']|966: vardecl['callbackExpect']}" ] 
BB389 -> BB390 [tailport=s, headport=n, headlabel="      390"]
BB390 [shape=record label="{967: read-variable['Array',v3,-]}" ] 
BB390 -> BB391 [tailport=s, headport=n, headlabel="      391"]
BB390 -> BB402 [tailport=s, headport=n, color=gray, headlabel="      402"]
BB391 [shape=record label="{968: construct[-,v3,v2]}" ] 
BB391 -> BB392 [tailport=s, headport=n, headlabel="      392"]
BB391 -> BB402 [tailport=s, headport=n, color=gray]
BB392 [shape=record label="{969: write-variable[v2,'matches']*|970: constant[0.0,v4]|971: write-variable[v4,'i']*|972: read-variable['elems',v6,-]|973: read-property[v6,'length',v5]|974: \<variable-non-null-undef\>['elems']|975: write-variable[v5,'length']*|976: read-variable['invert',v8,-]|977: ![v8,v7]|978: write-variable[v7,'callbackExpect']*}" ] 
BB392 -> BB393 [tailport=s, headport=n, headlabel="      393"]
BB392 -> BB402 [tailport=s, headport=n, color=gray]
BB393 [shape=record label="{979: read-variable['i',v10,-]|980: read-variable['length',v11,-]|981: \<[v10,v11,v9]|982: if[v9](true-block:394,false-block:395)}" ] 
BB393 -> BB394 [tailport=s, headport=n, headlabel="      394"]
BB393 -> BB395 [tailport=s, headport=n, headlabel="      395"]
BB393 -> BB402 [tailport=s, headport=n, color=gray]
BB394 [shape=record label="{983: read-variable['callback',v15,v14]|984: read-variable['elems',v17,-]|985: read-variable['i',v18,-]|986: read-property[v17,v18,v16]|987: \<variable-non-null-undef\>['elems']|988: read-variable['i',v19,-]}" ] 
BB394 -> BB396 [tailport=s, headport=n, headlabel="      396"]
BB394 -> BB402 [tailport=s, headport=n, color=gray]
BB395 [shape=record label="{989: read-variable['matches',v1,-]}" ] 
BB395 -> BB401 [tailport=s, headport=n, headlabel="      401"]
BB395 -> BB402 [tailport=s, headport=n, color=gray]
BB396 [shape=record label="{990: call-0:0[v14,v15,v16,v19,v13]}" ] 
BB396 -> BB397 [tailport=s, headport=n, headlabel="      397"]
BB396 -> BB402 [tailport=s, headport=n, color=gray]
BB397 [shape=record label="{991: ![v13,v12]|992: write-variable[v12,'callbackInverse']*|993: read-variable['callbackInverse',v21,-]|994: read-variable['callbackExpect',v22,-]|995: !==[v21,v22,v20]|996: if[v20](true-block:398,false-block:400)}" ] 
BB397 -> BB398 [tailport=s, headport=n, headlabel="      398"]
BB397 -> BB400 [tailport=s, headport=n, headlabel="      400"]
BB397 -> BB402 [tailport=s, headport=n, color=gray]
BB398 [shape=record label="{997: read-variable['matches',v24,-]|998: read-property[v24,'push',-]|999: \<variable-non-null-undef\>['matches']|1000: read-variable['elems',v26,-]|1001: read-variable['i',v27,-]|1002: read-property[v26,v27,v25]|1003: \<variable-non-null-undef\>['elems']}" ] 
BB398 -> BB399 [tailport=s, headport=n, headlabel="      399"]
BB398 -> BB402 [tailport=s, headport=n, color=gray]
BB399 [shape=record label="{1004: call-0:0[v24,'push',v25,-]*}" ] 
BB399 -> BB400 [tailport=s, headport=n]
BB399 -> BB402 [tailport=s, headport=n, color=gray]
BB400 [shape=record label="{1005: constant[1.0,v23]|1006: read-variable['i',v24,-]|1007: +[v24,v25]|1008: +[v25,v23,v26]|1009: write-variable[v26,'i']}" ] 
BB400 -> BB393 [tailport=s, headport=n]
BB400 -> BB402 [tailport=s, headport=n, color=gray]
BB401 [shape=record label="{1010: return[v1]}" ] 
BB402 [shape=record label="{1011: exceptional-return}" ] 
}
