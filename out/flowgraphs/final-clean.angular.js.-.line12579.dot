digraph {
rankdir="TD"
BB_entry595[shape=none,label=""];
BB_entry595 -> BB8044 [tailport=s, headport=n, headlabel="    8044"]
BB8044 [shape=record label="{20700: constant[undefined,v1]|20701: vardecl['start']|20702: vardecl['string']|20703: vardecl['rawString']|20704: vardecl['escape']|20705: vardecl['ch']|20706: vardecl['hex']|20707: vardecl['rep']}" ] 
BB8044 -> BB8045 [tailport=s, headport=n, headlabel="      8045"]
BB8045 [shape=record label="{20708: read-variable['this',v3,-]|20709: read-property[v3,'index',v2]|20710: write-variable[v2,'start']*|20711: constant[1.0,v4]|20712: read-variable['this',v6,-]|20713: read-property[v6,'index',v5]|20714: +[v5,v7]|20715: +[v7,v4,v8]|20716: write-property[v6,'index',v8]*|20717: constant[\"\",v9]|20718: write-variable[v9,'string']*|20719: read-variable['quote',v10,-]|20720: write-variable[v10,'rawString']*|20721: constant[false,v11]|20722: write-variable[v11,'escape']*}" ] 
BB8045 -> BB8046 [tailport=s, headport=n, headlabel="      8046"]
BB8045 -> BB8078 [tailport=s, headport=n, color=gray, headlabel="      8078"]
BB8046 [shape=record label="{20723: read-variable['this',v15,-]|20724: read-property[v15,'index',v13]|20725: read-variable['this',v17,-]|20726: read-property[v17,'text',v16]|20727: read-property[v16,'length',v14]|20728: \<property-non-null-undef\>[v17,'text']|20729: \<[v13,v14,v12]|20730: if[v12](true-block:8047,false-block:8048)}" ] 
BB8046 -> BB8047 [tailport=s, headport=n, headlabel="      8047"]
BB8046 -> BB8048 [tailport=s, headport=n, headlabel="      8048"]
BB8046 -> BB8078 [tailport=s, headport=n, color=gray]
BB8047 [shape=record label="{20731: read-variable['this',v21,-]|20732: read-property[v21,'text',v20]|20733: read-property[v20,'charAt',-]|20734: \<property-non-null-undef\>[v21,'text']|20735: read-variable['this',v23,-]|20736: read-property[v23,'index',v22]}" ] 
BB8047 -> BB8049 [tailport=s, headport=n, headlabel="      8049"]
BB8047 -> BB8078 [tailport=s, headport=n, color=gray]
BB8048 [shape=record label="{20737: read-variable['this',v19,-]|20738: read-property[v19,'throwError',-]|20739: constant[\"Unterminated quote\",v20]|20740: read-variable['start',v21,-]}" ] 
BB8048 -> BB8076 [tailport=s, headport=n, headlabel="      8076"]
BB8048 -> BB8078 [tailport=s, headport=n, color=gray]
BB8049 [shape=record label="{20741: call-this.text.charAt [v20,'charAt',v22,v18]}" ] 
BB8049 -> BB8050 [tailport=s, headport=n, headlabel="      8050"]
BB8049 -> BB8078 [tailport=s, headport=n, color=gray]
BB8050 [shape=record label="{20742: write-variable[v18,'ch']*|20743: read-variable['rawString',v25,-]|20744: read-variable['ch',v26,-]|20745: +[v25,v26,v24]|20746: write-variable[v24,'rawString']*|20747: read-variable['escape',v27,-]|20748: if[v27](true-block:8051,false-block:8052)}" ] 
BB8050 -> BB8051 [tailport=s, headport=n, headlabel="      8051"]
BB8050 -> BB8052 [tailport=s, headport=n, headlabel="      8052"]
BB8050 -> BB8078 [tailport=s, headport=n, color=gray]
BB8051 [shape=record label="{20749: read-variable['ch',v29,-]|20750: constant[\"u\",v30]|20751: ===[v29,v30,v28]|20752: if[v28](true-block:8053,false-block:8054)}" ] 
BB8051 -> BB8053 [tailport=s, headport=n, headlabel="      8053"]
BB8051 -> BB8054 [tailport=s, headport=n, headlabel="      8054"]
BB8051 -> BB8078 [tailport=s, headport=n, color=gray]
BB8052 [shape=record label="{20753: read-variable['ch',v29,-]|20754: constant[\"\\\\\",v30]|20755: ===[v29,v30,v28]|20756: if[v28](true-block:8069,false-block:8070)}" ] 
BB8052 -> BB8069 [tailport=s, headport=n, headlabel="      8069"]
BB8052 -> BB8070 [tailport=s, headport=n, headlabel="      8070"]
BB8052 -> BB8078 [tailport=s, headport=n, color=gray]
BB8053 [shape=record label="{20757: read-variable['this',v34,-]|20758: read-property[v34,'text',v33]|20759: read-property[v33,'substring',-]|20760: \<property-non-null-undef\>[v34,'text']|20761: read-variable['this',v38,-]|20762: read-property[v38,'index',v36]|20763: constant[1.0,v37]|20764: +[v36,v37,v35]|20765: read-variable['this',v42,-]|20766: read-property[v42,'index',v40]|20767: constant[5.0,v41]|20768: +[v40,v41,v39]}" ] 
BB8053 -> BB8055 [tailport=s, headport=n, headlabel="      8055"]
BB8053 -> BB8078 [tailport=s, headport=n, color=gray]
BB8054 [shape=record label="{20769: read-variable['ESCAPE',v32,-]|20770: read-variable['ch',v33,-]|20771: read-property[v32,v33,v31]|20772: \<variable-non-null-undef\>['ESCAPE']|20773: write-variable[v31,'rep']*|20774: read-variable['string',v35,-]|20775: read-variable['rep',v36,-]|20776: if[v36](true-block:8067,false-block:8066)}" ] 
BB8054 -> BB8067 [tailport=s, headport=n, headlabel="      8067"]
BB8054 -> BB8066 [tailport=s, headport=n, headlabel="      8066"]
BB8054 -> BB8078 [tailport=s, headport=n, color=gray]
BB8055 [shape=record label="{20777: call-this.text.substring [v33,'substring',v35,v39,v31]}" ] 
BB8055 -> BB8056 [tailport=s, headport=n, headlabel="      8056"]
BB8055 -> BB8078 [tailport=s, headport=n, color=gray]
BB8056 [shape=record label="{20778: write-variable[v31,'hex']*|20779: read-variable['hex',v46,-]|20780: read-property[v46,'match',-]|20781: \<variable-non-null-undef\>['hex']|20782: read-variable['RegExp',v48,-]|20783: constant[\"[\\\\da-f]\\\{4\\\}\",v49]|20784: constant[\"i\",v50]}" ] 
BB8056 -> BB8057 [tailport=s, headport=n, headlabel="      8057"]
BB8056 -> BB8078 [tailport=s, headport=n, color=gray]
BB8057 [shape=record label="{20785: construct [-,v48,v49,v50,v47]}" ] 
BB8057 -> BB8058 [tailport=s, headport=n, headlabel="      8058"]
BB8057 -> BB8078 [tailport=s, headport=n, color=gray]
BB8058 [shape=record label="{20786: call-hex.match [v46,'match',v47,v44]}" ] 
BB8058 -> BB8059 [tailport=s, headport=n, headlabel="      8059"]
BB8058 -> BB8078 [tailport=s, headport=n, color=gray]
BB8059 [shape=record label="{20787: ![v44,v43]|20788: if[v43](true-block:8060,false-block:8062)}" ] 
BB8059 -> BB8060 [tailport=s, headport=n, headlabel="      8060"]
BB8059 -> BB8062 [tailport=s, headport=n, headlabel="      8062"]
BB8059 -> BB8078 [tailport=s, headport=n, color=gray]
BB8060 [shape=record label="{20789: read-variable['this',v52,-]|20790: read-property[v52,'throwError',-]|20791: constant[\"Invalid unicode escape [\\\\u\",v56]|20792: read-variable['hex',v57,-]|20793: +[v56,v57,v54]|20794: constant[\"]\",v55]|20795: +[v54,v55,v53]}" ] 
BB8060 -> BB8061 [tailport=s, headport=n, headlabel="      8061"]
BB8060 -> BB8078 [tailport=s, headport=n, color=gray]
BB8061 [shape=record label="{20796: call-this.throwError [v52,'throwError',v53,-]*}" ] 
BB8061 -> BB8062 [tailport=s, headport=n]
BB8061 -> BB8078 [tailport=s, headport=n, color=gray]
BB8062 [shape=record label="{20797: read-variable['this',v53,-]|20798: read-property[v53,'index',v52]|20799: constant[4.0,v54]|20800: +[v52,v54,v51]|20801: write-property[v53,'index',v51]*|20802: read-variable['string',v56,-]|20803: read-variable['String',v59,-]|20804: read-property[v59,'fromCharCode',-]|20805: \<variable-non-null-undef\>['String']|20806: read-variable['parseInt',v62,v61]|20807: read-variable['hex',v63,-]|20808: constant[16.0,v64]}" ] 
BB8062 -> BB8063 [tailport=s, headport=n, headlabel="      8063"]
BB8062 -> BB8078 [tailport=s, headport=n, color=gray]
BB8063 [shape=record label="{20809: call-parseInt [v61,v62,v63,v64,v60]}" ] 
BB8063 -> BB8064 [tailport=s, headport=n, headlabel="      8064"]
BB8063 -> BB8078 [tailport=s, headport=n, color=gray]
BB8064 [shape=record label="{20810: call-String.fromCharCode [v59,'fromCharCode',v60,v57]}" ] 
BB8064 -> BB8065 [tailport=s, headport=n, headlabel="      8065"]
BB8064 -> BB8078 [tailport=s, headport=n, color=gray]
BB8065 [shape=record label="{20811: +[v56,v57,v55]|20812: write-variable[v55,'string']*}" ] 
BB8065 -> BB8068 [tailport=s, headport=n, headlabel="      8068"]
BB8065 -> BB8078 [tailport=s, headport=n, color=gray]
BB8066 [shape=record label="{20813: read-variable['ch',v36,-]}" ] 
BB8066 -> BB8067 [tailport=s, headport=n]
BB8066 -> BB8078 [tailport=s, headport=n, color=gray]
BB8067 [shape=record label="{20814: +[v35,v36,v34]|20815: write-variable[v34,'string']*}" ] 
BB8067 -> BB8068 [tailport=s, headport=n]
BB8067 -> BB8078 [tailport=s, headport=n, color=gray]
BB8068 [shape=record label="{20816: constant[false,v31]|20817: write-variable[v31,'escape']*}" ] 
BB8068 -> BB8075 [tailport=s, headport=n, headlabel="      8075"]
BB8069 [shape=record label="{20818: constant[true,v31]|20819: write-variable[v31,'escape']*}" ] 
BB8069 -> BB8075 [tailport=s, headport=n]
BB8070 [shape=record label="{20820: read-variable['ch',v32,-]|20821: read-variable['quote',v33,-]|20822: ===[v32,v33,v31]|20823: if[v31](true-block:8071,false-block:8072)}" ] 
BB8070 -> BB8071 [tailport=s, headport=n, headlabel="      8071"]
BB8070 -> BB8072 [tailport=s, headport=n, headlabel="      8072"]
BB8070 -> BB8078 [tailport=s, headport=n, color=gray]
BB8071 [shape=record label="{20824: constant[1.0,v34]|20825: read-variable['this',v36,-]|20826: read-property[v36,'index',v35]|20827: +[v35,v37]|20828: +[v37,v34,v38]|20829: write-property[v36,'index',v38]*|20830: read-variable['this',v41,-]|20831: read-property[v41,'tokens',v40]|20832: read-property[v40,'push',-]|20833: \<property-non-null-undef\>[v41,'tokens']|20834: new[v42]|20835: read-variable['start',v43,-]|20836: write-property[v42,'index',v43]|20837: read-variable['rawString',v44,-]|20838: write-property[v42,'text',v44]|20839: constant[true,v45]|20840: write-property[v42,'constant',v45]|20841: read-variable['string',v46,-]|20842: write-property[v42,'value',v46]}" ] 
BB8071 -> BB8073 [tailport=s, headport=n, headlabel="      8073"]
BB8071 -> BB8078 [tailport=s, headport=n, color=gray]
BB8072 [shape=record label="{20843: read-variable['string',v35,-]|20844: read-variable['ch',v36,-]|20845: +[v35,v36,v34]|20846: write-variable[v34,'string']*}" ] 
BB8072 -> BB8075 [tailport=s, headport=n]
BB8072 -> BB8078 [tailport=s, headport=n, color=gray]
BB8073 [shape=record label="{20847: call-this.tokens.push [v40,'push',v42,-]*}" ] 
BB8073 -> BB8074 [tailport=s, headport=n, headlabel="      8074"]
BB8073 -> BB8078 [tailport=s, headport=n, color=gray]
BB8074 [shape=record label="{20848: constant[undefined,v1]}" ] 
BB8074 -> BB8077 [tailport=s, headport=n, headlabel="      8077"]
BB8075 [shape=record label="{20849: constant[1.0,v28]|20850: read-variable['this',v30,-]|20851: read-property[v30,'index',v29]|20852: +[v29,v31]|20853: +[v31,v28,v32]|20854: write-property[v30,'index',v32]*}" ] 
BB8075 -> BB8046 [tailport=s, headport=n]
BB8075 -> BB8078 [tailport=s, headport=n, color=gray]
BB8076 [shape=record label="{20855: call-this.throwError [v19,'throwError',v20,v21,-]*}" ] 
BB8076 -> BB8077 [tailport=s, headport=n]
BB8076 -> BB8078 [tailport=s, headport=n, color=gray]
BB8077 [shape=record label="{20856: return[v1]}" ] 
BB8078 [shape=record label="{20857: exceptional-return}" ] 
//#$~ 12617
}
