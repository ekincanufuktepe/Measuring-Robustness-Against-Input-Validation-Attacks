digraph {
rankdir="TD"
BB_entry970[shape=none,label=""];
BB_entry970 -> BB12496 [tailport=s, headport=n, headlabel="    12496"]
BB12496 [shape=record label="{32688: constant[undefined,v1]|32689: vardecl['isNegative']|32690: vardecl['isInfinity']|32691: vardecl['numStr']|32692: vardecl['formatedText']|32693: vardecl['hasExponent']|32694: vardecl['parts']|32695: vardecl['match']|32696: vardecl['fractionLen']|32697: vardecl['fraction']|32698: vardecl['whole']|32699: vardecl['i']|32700: vardecl['pos']|32701: vardecl['lgroup']|32702: vardecl['group']}" ] 
BB12496 -> BB12497 [tailport=s, headport=n, headlabel="      12497"]
BB12497 [shape=record label="{32703: read-variable['isObject',v4,v3]|32704: read-variable['number',v5,-]}" ] 
BB12497 -> BB12498 [tailport=s, headport=n, headlabel="      12498"]
BB12497 -> BB12599 [tailport=s, headport=n, color=gray, headlabel="      12599"]
BB12498 [shape=record label="{32705: call-isObject [v3,v4,v5,v2]}" ] 
BB12498 -> BB12499 [tailport=s, headport=n, headlabel="      12499"]
BB12498 -> BB12599 [tailport=s, headport=n, color=gray]
BB12499 [shape=record label="{32706: if[v2](true-block:12500,false-block:12501)}" ] 
BB12499 -> BB12500 [tailport=s, headport=n, headlabel="      12500"]
BB12499 -> BB12501 [tailport=s, headport=n, headlabel="      12501"]
BB12500 [shape=record label="{32707: constant[\"\",v1]}" ] 
BB12500 -> BB12598 [tailport=s, headport=n, headlabel="      12598"]
BB12501 [shape=record label="{32708: read-variable['number',v7,-]|32709: constant[0.0,v8]|32710: \<[v7,v8,v6]|32711: write-variable[v6,'isNegative']*|32712: read-variable['Math',v11,-]|32713: read-property[v11,'abs',-]|32714: \<variable-non-null-undef\>['Math']|32715: read-variable['number',v12,-]}" ] 
BB12501 -> BB12502 [tailport=s, headport=n, headlabel="      12502"]
BB12501 -> BB12599 [tailport=s, headport=n, color=gray]
BB12502 [shape=record label="{32716: call-Math.abs [v11,'abs',v12,v9]}" ] 
BB12502 -> BB12503 [tailport=s, headport=n, headlabel="      12503"]
BB12502 -> BB12599 [tailport=s, headport=n, color=gray]
BB12503 [shape=record label="{32717: write-variable[v9,'number']*|32718: read-variable['number',v14,-]|32719: read-variable['Infinity',v15,-]|32720: ===[v14,v15,v13]|32721: write-variable[v13,'isInfinity']*|32722: read-variable['isInfinity',v17,-]|32723: ![v17,v16]|32724: if[v16](true-block:12504,false-block:12507)}" ] 
BB12503 -> BB12507 [tailport=s, headport=n, headlabel="      12507"]
BB12503 -> BB12504 [tailport=s, headport=n, headlabel="      12504"]
BB12503 -> BB12599 [tailport=s, headport=n, color=gray]
BB12504 [shape=record label="{32725: read-variable['isFinite',v20,v19]|32726: read-variable['number',v21,-]}" ] 
BB12504 -> BB12505 [tailport=s, headport=n, headlabel="      12505"]
BB12504 -> BB12599 [tailport=s, headport=n, color=gray]
BB12505 [shape=record label="{32727: call-isFinite [v19,v20,v21,v18]}" ] 
BB12505 -> BB12506 [tailport=s, headport=n, headlabel="      12506"]
BB12505 -> BB12599 [tailport=s, headport=n, color=gray]
BB12506 [shape=record label="{32728: ![v18,v16]}" ] 
BB12506 -> BB12507 [tailport=s, headport=n]
BB12506 -> BB12599 [tailport=s, headport=n, color=gray]
BB12507 [shape=record label="{32729: if[v16](true-block:12508,false-block:12509)}" ] 
BB12507 -> BB12508 [tailport=s, headport=n, headlabel="      12508"]
BB12507 -> BB12509 [tailport=s, headport=n, headlabel="      12509"]
BB12508 [shape=record label="{32730: constant[\"\",v1]}" ] 
BB12508 -> BB12598 [tailport=s, headport=n]
BB12509 [shape=record label="{32731: read-variable['number',v19,-]|32732: constant[\"\",v20]|32733: +[v19,v20,v18]|32734: write-variable[v18,'numStr']*|32735: constant[\"\",v21]|32736: write-variable[v21,'formatedText']*|32737: constant[false,v22]|32738: write-variable[v22,'hasExponent']*|32739: read-variable['Array',v24,-]}" ] 
BB12509 -> BB12510 [tailport=s, headport=n, headlabel="      12510"]
BB12509 -> BB12599 [tailport=s, headport=n, color=gray]
BB12510 [shape=record label="{32740: construct [-,v24,v23]}" ] 
BB12510 -> BB12511 [tailport=s, headport=n, headlabel="      12511"]
BB12510 -> BB12599 [tailport=s, headport=n, color=gray]
BB12511 [shape=record label="{32741: write-variable[v23,'parts']*|32742: read-variable['isInfinity',v25,-]|32743: if[v25](true-block:12512,false-block:12513)}" ] 
BB12511 -> BB12512 [tailport=s, headport=n, headlabel="      12512"]
BB12511 -> BB12513 [tailport=s, headport=n, headlabel="      12513"]
BB12511 -> BB12599 [tailport=s, headport=n, color=gray]
BB12512 [shape=record label="{32744: constant[\"\\u221e\",v26]|32745: write-variable[v26,'formatedText']*}" ] 
BB12512 -> BB12513 [tailport=s, headport=n]
BB12513 [shape=record label="{32746: read-variable['isInfinity',v27,-]|32747: ![v27,v26]|32748: if[v26](true-block:12514,false-block:12517)}" ] 
BB12513 -> BB12517 [tailport=s, headport=n, headlabel="      12517"]
BB12513 -> BB12514 [tailport=s, headport=n, headlabel="      12514"]
BB12513 -> BB12599 [tailport=s, headport=n, color=gray]
BB12514 [shape=record label="{32749: read-variable['numStr',v31,-]|32750: read-property[v31,'indexOf',-]|32751: \<variable-non-null-undef\>['numStr']|32752: constant[\"e\",v32]}" ] 
BB12514 -> BB12515 [tailport=s, headport=n, headlabel="      12515"]
BB12514 -> BB12599 [tailport=s, headport=n, color=gray]
BB12515 [shape=record label="{32753: call-numStr.indexOf [v31,'indexOf',v32,v28]}" ] 
BB12515 -> BB12516 [tailport=s, headport=n, headlabel="      12516"]
BB12515 -> BB12599 [tailport=s, headport=n, color=gray]
BB12516 [shape=record label="{32754: constant[-1.0,v29]|32755: !==[v28,v29,v26]}" ] 
BB12516 -> BB12517 [tailport=s, headport=n]
BB12516 -> BB12599 [tailport=s, headport=n, color=gray]
BB12517 [shape=record label="{32756: if[v26](true-block:12518,false-block:12527)}" ] 
BB12517 -> BB12518 [tailport=s, headport=n, headlabel="      12518"]
BB12517 -> BB12527 [tailport=s, headport=n, headlabel="      12527"]
BB12518 [shape=record label="{32757: read-variable['numStr',v30,-]|32758: read-property[v30,'match',-]|32759: \<variable-non-null-undef\>['numStr']|32760: read-variable['RegExp',v32,-]|32761: constant[\"([\\\\d\\\\.]+)e(-?)(\\\\d+)\",v33]}" ] 
BB12518 -> BB12519 [tailport=s, headport=n, headlabel="      12519"]
BB12518 -> BB12599 [tailport=s, headport=n, color=gray]
BB12519 [shape=record label="{32762: construct [-,v32,v33,v31]}" ] 
BB12519 -> BB12520 [tailport=s, headport=n, headlabel="      12520"]
BB12519 -> BB12599 [tailport=s, headport=n, color=gray]
BB12520 [shape=record label="{32763: call-numStr.match [v30,'match',v31,v28]}" ] 
BB12520 -> BB12521 [tailport=s, headport=n, headlabel="      12521"]
BB12520 -> BB12599 [tailport=s, headport=n, color=gray]
BB12521 [shape=record label="{32764: write-variable[v28,'match']*|32765: read-variable['match',v34,-]|32766: if[v34](true-block:12522,false-block:12524)}" ] 
BB12521 -> BB12524 [tailport=s, headport=n, headlabel="      12524"]
BB12521 -> BB12522 [tailport=s, headport=n, headlabel="      12522"]
BB12521 -> BB12599 [tailport=s, headport=n, color=gray]
BB12522 [shape=record label="{32767: read-variable['match',v37,-]|32768: constant[2.0,v38]|32769: read-property[v37,v38,v35]|32770: \<variable-non-null-undef\>['match']|32771: constant[\"-\",v36]|32772: ==[v35,v36,v34]|32773: if[v34](true-block:12523,false-block:12524)}" ] 
BB12522 -> BB12524 [tailport=s, headport=n]
BB12522 -> BB12523 [tailport=s, headport=n, headlabel="      12523"]
BB12522 -> BB12599 [tailport=s, headport=n, color=gray]
BB12523 [shape=record label="{32774: read-variable['match',v41,-]|32775: constant[3.0,v42]|32776: read-property[v41,v42,v39]|32777: \<variable-non-null-undef\>['match']|32778: read-variable['fractionSize',v43,-]|32779: constant[1.0,v44]|32780: +[v43,v44,v40]|32781: \>[v39,v40,v34]}" ] 
BB12523 -> BB12524 [tailport=s, headport=n]
BB12523 -> BB12599 [tailport=s, headport=n, color=gray]
BB12524 [shape=record label="{32782: if[v34](true-block:12525,false-block:12526)}" ] 
BB12524 -> BB12525 [tailport=s, headport=n, headlabel="      12525"]
BB12524 -> BB12526 [tailport=s, headport=n, headlabel="      12526"]
BB12525 [shape=record label="{32783: constant[0.0,v35]|32784: write-variable[v35,'number']*}" ] 
BB12525 -> BB12527 [tailport=s, headport=n]
BB12526 [shape=record label="{32785: read-variable['numStr',v35,-]|32786: write-variable[v35,'formatedText']*|32787: constant[true,v36]|32788: write-variable[v36,'hasExponent']*}" ] 
BB12526 -> BB12527 [tailport=s, headport=n]
BB12526 -> BB12599 [tailport=s, headport=n, color=gray]
BB12527 [shape=record label="{32789: read-variable['isInfinity',v29,-]|32790: ![v29,v28]|32791: if[v28](true-block:12528,false-block:12529)}" ] 
BB12527 -> BB12529 [tailport=s, headport=n, headlabel="      12529"]
BB12527 -> BB12528 [tailport=s, headport=n, headlabel="      12528"]
BB12527 -> BB12599 [tailport=s, headport=n, color=gray]
BB12528 [shape=record label="{32792: read-variable['hasExponent',v30,-]|32793: ![v30,v28]}" ] 
BB12528 -> BB12529 [tailport=s, headport=n]
BB12528 -> BB12599 [tailport=s, headport=n, color=gray]
BB12529 [shape=record label="{32794: if[v28](true-block:12530,false-block:12531)}" ] 
BB12529 -> BB12530 [tailport=s, headport=n, headlabel="      12530"]
BB12529 -> BB12531 [tailport=s, headport=n, headlabel="      12531"]
BB12530 [shape=record label="{32795: read-variable['numStr',v34,-]|32796: read-property[v34,'split',-]|32797: \<variable-non-null-undef\>['numStr']|32798: read-variable['DECIMAL_SEP',v35,-]}" ] 
BB12530 -> BB12532 [tailport=s, headport=n, headlabel="      12532"]
BB12530 -> BB12599 [tailport=s, headport=n, color=gray]
BB12531 [shape=record label="{32799: read-variable['fractionSize',v31,-]|32800: constant[0.0,v32]|32801: \>[v31,v32,v30]|32802: if[v30](true-block:12580,false-block:12581)}" ] 
BB12531 -> BB12581 [tailport=s, headport=n, headlabel="      12581"]
BB12531 -> BB12580 [tailport=s, headport=n, headlabel="      12580"]
BB12531 -> BB12599 [tailport=s, headport=n, color=gray]
BB12532 [shape=record label="{32803: call-numStr.split [v34,'split',v35,v32]}" ] 
BB12532 -> BB12533 [tailport=s, headport=n, headlabel="      12533"]
BB12532 -> BB12599 [tailport=s, headport=n, color=gray]
BB12533 [shape=record label="{32804: constant[1.0,v36]|32805: read-property[v32,v36,v31]|32806: if[v31](true-block:12535,false-block:12534)}" ] 
BB12533 -> BB12535 [tailport=s, headport=n, headlabel="      12535"]
BB12533 -> BB12534 [tailport=s, headport=n, headlabel="      12534"]
BB12533 -> BB12599 [tailport=s, headport=n, color=gray]
BB12534 [shape=record label="{32807: constant[\"\",v31]}" ] 
BB12534 -> BB12535 [tailport=s, headport=n]
BB12535 [shape=record label="{32808: read-property[v31,'length',v30]|32809: write-variable[v30,'fractionLen']*|32810: read-variable['isUndefined',v34,v33]|32811: read-variable['fractionSize',v35,-]}" ] 
BB12535 -> BB12536 [tailport=s, headport=n, headlabel="      12536"]
BB12535 -> BB12599 [tailport=s, headport=n, color=gray]
BB12536 [shape=record label="{32812: call-isUndefined [v33,v34,v35,v32]}" ] 
BB12536 -> BB12537 [tailport=s, headport=n, headlabel="      12537"]
BB12536 -> BB12599 [tailport=s, headport=n, color=gray]
BB12537 [shape=record label="{32813: if[v32](true-block:12538,false-block:12543)}" ] 
BB12537 -> BB12538 [tailport=s, headport=n, headlabel="      12538"]
BB12537 -> BB12543 [tailport=s, headport=n, headlabel="      12543"]
BB12538 [shape=record label="{32814: read-variable['Math',v38,-]|32815: read-property[v38,'min',-]|32816: \<variable-non-null-undef\>['Math']|32817: read-variable['Math',v41,-]|32818: read-property[v41,'max',-]|32819: \<variable-non-null-undef\>['Math']|32820: read-variable['pattern',v43,-]|32821: read-property[v43,'minFrac',v42]|32822: \<variable-non-null-undef\>['pattern']|32823: read-variable['fractionLen',v44,-]}" ] 
BB12538 -> BB12539 [tailport=s, headport=n, headlabel="      12539"]
BB12538 -> BB12599 [tailport=s, headport=n, color=gray]
BB12539 [shape=record label="{32824: call-Math.max [v41,'max',v42,v44,v39]}" ] 
BB12539 -> BB12540 [tailport=s, headport=n, headlabel="      12540"]
BB12539 -> BB12599 [tailport=s, headport=n, color=gray]
BB12540 [shape=record label="{32825: read-variable['pattern',v46,-]|32826: read-property[v46,'maxFrac',v45]|32827: \<variable-non-null-undef\>['pattern']}" ] 
BB12540 -> BB12541 [tailport=s, headport=n, headlabel="      12541"]
BB12540 -> BB12599 [tailport=s, headport=n, color=gray]
BB12541 [shape=record label="{32828: call-Math.min [v38,'min',v39,v45,v36]}" ] 
BB12541 -> BB12542 [tailport=s, headport=n, headlabel="      12542"]
BB12541 -> BB12599 [tailport=s, headport=n, color=gray]
BB12542 [shape=record label="{32829: write-variable[v36,'fractionSize']*}" ] 
BB12542 -> BB12543 [tailport=s, headport=n]
BB12543 [shape=record label="{32830: read-variable['Math',v45,-]|32831: read-property[v45,'round',-]|32832: \<variable-non-null-undef\>['Math']|32833: read-variable['number',v53,-]|32834: read-property[v53,'toString',-]|32835: \<variable-non-null-undef\>['number']}" ] 
BB12543 -> BB12544 [tailport=s, headport=n, headlabel="      12544"]
BB12543 -> BB12599 [tailport=s, headport=n, color=gray]
BB12544 [shape=record label="{32836: call-number.toString [v53,'toString',v50]}" ] 
BB12544 -> BB12545 [tailport=s, headport=n, headlabel="      12545"]
BB12544 -> BB12599 [tailport=s, headport=n, color=gray]
BB12545 [shape=record label="{32837: constant[\"e\",v51]|32838: +[v50,v51,v48]|32839: read-variable['fractionSize',v49,-]|32840: +[v48,v49,v47]|32841: +[v47,v46]}" ] 
BB12545 -> BB12546 [tailport=s, headport=n, headlabel="      12546"]
BB12545 -> BB12599 [tailport=s, headport=n, color=gray]
BB12546 [shape=record label="{32842: call-Math.round [v45,'round',v46,v43]}" ] 
BB12546 -> BB12547 [tailport=s, headport=n, headlabel="      12547"]
BB12546 -> BB12599 [tailport=s, headport=n, color=gray]
BB12547 [shape=record label="{32843: read-property[v43,'toString',-]}" ] 
BB12547 -> BB12548 [tailport=s, headport=n, headlabel="      12548"]
BB12547 -> BB12599 [tailport=s, headport=n, color=gray]
BB12548 [shape=record label="{32844: call-null [v43,'toString',v40]}" ] 
BB12548 -> BB12549 [tailport=s, headport=n, headlabel="      12549"]
BB12548 -> BB12599 [tailport=s, headport=n, color=gray]
BB12549 [shape=record label="{32845: constant[\"e\",v41]|32846: +[v40,v41,v38]|32847: read-variable['fractionSize',v54,-]|32848: -[v54,v39]|32849: +[v38,v39,v37]|32850: +[v37,v36]|32851: write-variable[v36,'number']*|32852: constant[\"\",v58]|32853: read-variable['number',v59,-]|32854: +[v58,v59,v57]|32855: read-property[v57,'split',-]|32856: read-variable['DECIMAL_SEP',v60,-]}" ] 
BB12549 -> BB12550 [tailport=s, headport=n, headlabel="      12550"]
BB12549 -> BB12599 [tailport=s, headport=n, color=gray]
BB12550 [shape=record label="{32857: call-null [v57,'split',v60,v55]}" ] 
BB12550 -> BB12551 [tailport=s, headport=n, headlabel="      12551"]
BB12550 -> BB12599 [tailport=s, headport=n, color=gray]
BB12551 [shape=record label="{32858: write-variable[v55,'fraction']*|32859: read-variable['fraction',v62,-]|32860: constant[0.0,v63]|32861: read-property[v62,v63,v61]|32862: \<variable-non-null-undef\>['fraction']|32863: write-variable[v61,'whole']*|32864: read-variable['fraction',v65,-]|32865: constant[1.0,v66]|32866: read-property[v65,v66,v64]|32867: \<variable-non-null-undef\>['fraction']|32868: if[v64](true-block:12553,false-block:12552)}" ] 
BB12551 -> BB12553 [tailport=s, headport=n, headlabel="      12553"]
BB12551 -> BB12552 [tailport=s, headport=n, headlabel="      12552"]
BB12551 -> BB12599 [tailport=s, headport=n, color=gray]
BB12552 [shape=record label="{32869: constant[\"\",v64]}" ] 
BB12552 -> BB12553 [tailport=s, headport=n]
BB12553 [shape=record label="{32870: write-variable[v64,'fraction']*|32871: constant[0.0,v65]|32872: write-variable[v65,'pos']*|32873: read-variable['pattern',v67,-]|32874: read-property[v67,'lgSize',v66]|32875: \<variable-non-null-undef\>['pattern']|32876: write-variable[v66,'lgroup']*|32877: read-variable['pattern',v69,-]|32878: read-property[v69,'gSize',v68]|32879: \<variable-non-null-undef\>['pattern']|32880: write-variable[v68,'group']*|32881: read-variable['whole',v73,-]|32882: read-property[v73,'length',v71]|32883: \<variable-non-null-undef\>['whole']|32884: read-variable['lgroup',v74,-]|32885: read-variable['group',v75,-]|32886: +[v74,v75,v72]|32887: \>=[v71,v72,v70]|32888: if[v70](true-block:12554,false-block:12563)}" ] 
BB12553 -> BB12554 [tailport=s, headport=n, headlabel="      12554"]
BB12553 -> BB12563 [tailport=s, headport=n, headlabel="      12563"]
BB12553 -> BB12599 [tailport=s, headport=n, color=gray]
BB12554 [shape=record label="{32889: read-variable['whole',v79,-]|32890: read-property[v79,'length',v77]|32891: \<variable-non-null-undef\>['whole']|32892: read-variable['lgroup',v78,-]|32893: -[v77,v78,v76]|32894: write-variable[v76,'pos']*|32895: constant[0.0,v81]|32896: write-variable[v81,'i']}" ] 
BB12554 -> BB12555 [tailport=s, headport=n, headlabel="      12555"]
BB12554 -> BB12599 [tailport=s, headport=n, color=gray]
BB12555 [shape=record label="{32897: read-variable['i',v82,-]|32898: read-variable['pos',v83,-]|32899: \<[v82,v83,v80]|32900: if[v80](true-block:12556,false-block:12563)}" ] 
BB12555 -> BB12556 [tailport=s, headport=n, headlabel="      12556"]
BB12555 -> BB12563 [tailport=s, headport=n]
BB12555 -> BB12599 [tailport=s, headport=n, color=gray]
BB12556 [shape=record label="{32901: read-variable['pos',v89,-]|32902: read-variable['i',v90,-]|32903: -[v89,v90,v87]|32904: read-variable['group',v88,-]|32905: %[v87,v88,v85]|32906: constant[0.0,v86]|32907: ===[v85,v86,v84]|32908: if[v84](true-block:12557,false-block:12558)}" ] 
BB12556 -> BB12558 [tailport=s, headport=n, headlabel="      12558"]
BB12556 -> BB12557 [tailport=s, headport=n, headlabel="      12557"]
BB12556 -> BB12599 [tailport=s, headport=n, color=gray]
BB12557 [shape=record label="{32909: read-variable['i',v91,-]|32910: constant[0.0,v92]|32911: !==[v91,v92,v84]}" ] 
BB12557 -> BB12558 [tailport=s, headport=n]
BB12557 -> BB12599 [tailport=s, headport=n, color=gray]
BB12558 [shape=record label="{32912: if[v84](true-block:12559,false-block:12560)}" ] 
BB12558 -> BB12559 [tailport=s, headport=n, headlabel="      12559"]
BB12558 -> BB12560 [tailport=s, headport=n, headlabel="      12560"]
BB12559 [shape=record label="{32913: read-variable['formatedText',v92,-]|32914: read-variable['groupSep',v93,-]|32915: +[v92,v93,v91]|32916: write-variable[v91,'formatedText']*}" ] 
BB12559 -> BB12560 [tailport=s, headport=n]
BB12559 -> BB12599 [tailport=s, headport=n, color=gray]
BB12560 [shape=record label="{32917: read-variable['formatedText',v92,-]|32918: read-variable['whole',v95,-]|32919: read-property[v95,'charAt',-]|32920: \<variable-non-null-undef\>['whole']|32921: read-variable['i',v96,-]}" ] 
BB12560 -> BB12561 [tailport=s, headport=n, headlabel="      12561"]
BB12560 -> BB12599 [tailport=s, headport=n, color=gray]
BB12561 [shape=record label="{32922: call-whole.charAt [v95,'charAt',v96,v93]}" ] 
BB12561 -> BB12562 [tailport=s, headport=n, headlabel="      12562"]
BB12561 -> BB12599 [tailport=s, headport=n, color=gray]
BB12562 [shape=record label="{32923: +[v92,v93,v91]|32924: write-variable[v91,'formatedText']*|32925: constant[1.0,v97]|32926: read-variable['i',v98,-]|32927: +[v98,v99]|32928: +[v99,v97,v100]|32929: write-variable[v100,'i']}" ] 
BB12562 -> BB12555 [tailport=s, headport=n]
BB12562 -> BB12599 [tailport=s, headport=n, color=gray]
BB12563 [shape=record label="{32930: read-variable['pos',v77,-]|32931: write-variable[v77,'i']}" ] 
BB12563 -> BB12564 [tailport=s, headport=n, headlabel="      12564"]
BB12563 -> BB12599 [tailport=s, headport=n, color=gray]
BB12564 [shape=record label="{32932: read-variable['i',v78,-]|32933: read-variable['whole',v80,-]|32934: read-property[v80,'length',v79]|32935: \<variable-non-null-undef\>['whole']|32936: \<[v78,v79,v76]|32937: if[v76](true-block:12565,false-block:12572)}" ] 
BB12564 -> BB12565 [tailport=s, headport=n, headlabel="      12565"]
BB12564 -> BB12572 [tailport=s, headport=n, headlabel="      12572"]
BB12564 -> BB12599 [tailport=s, headport=n, color=gray]
BB12565 [shape=record label="{32938: read-variable['whole',v88,-]|32939: read-property[v88,'length',v86]|32940: \<variable-non-null-undef\>['whole']|32941: read-variable['i',v87,-]|32942: -[v86,v87,v84]|32943: read-variable['lgroup',v85,-]|32944: %[v84,v85,v82]|32945: constant[0.0,v83]|32946: ===[v82,v83,v81]|32947: if[v81](true-block:12566,false-block:12567)}" ] 
BB12565 -> BB12567 [tailport=s, headport=n, headlabel="      12567"]
BB12565 -> BB12566 [tailport=s, headport=n, headlabel="      12566"]
BB12565 -> BB12599 [tailport=s, headport=n, color=gray]
BB12566 [shape=record label="{32948: read-variable['i',v89,-]|32949: constant[0.0,v90]|32950: !==[v89,v90,v81]}" ] 
BB12566 -> BB12567 [tailport=s, headport=n]
BB12566 -> BB12599 [tailport=s, headport=n, color=gray]
BB12567 [shape=record label="{32951: if[v81](true-block:12568,false-block:12569)}" ] 
BB12567 -> BB12568 [tailport=s, headport=n, headlabel="      12568"]
BB12567 -> BB12569 [tailport=s, headport=n, headlabel="      12569"]
BB12568 [shape=record label="{32952: read-variable['formatedText',v90,-]|32953: read-variable['groupSep',v91,-]|32954: +[v90,v91,v89]|32955: write-variable[v89,'formatedText']*}" ] 
BB12568 -> BB12569 [tailport=s, headport=n]
BB12568 -> BB12599 [tailport=s, headport=n, color=gray]
BB12569 [shape=record label="{32956: read-variable['formatedText',v90,-]|32957: read-variable['whole',v93,-]|32958: read-property[v93,'charAt',-]|32959: \<variable-non-null-undef\>['whole']|32960: read-variable['i',v94,-]}" ] 
BB12569 -> BB12570 [tailport=s, headport=n, headlabel="      12570"]
BB12569 -> BB12599 [tailport=s, headport=n, color=gray]
BB12570 [shape=record label="{32961: call-whole.charAt [v93,'charAt',v94,v91]}" ] 
BB12570 -> BB12571 [tailport=s, headport=n, headlabel="      12571"]
BB12570 -> BB12599 [tailport=s, headport=n, color=gray]
BB12571 [shape=record label="{32962: +[v90,v91,v89]|32963: write-variable[v89,'formatedText']*|32964: constant[1.0,v95]|32965: read-variable['i',v96,-]|32966: +[v96,v97]|32967: +[v97,v95,v98]|32968: write-variable[v98,'i']}" ] 
BB12571 -> BB12564 [tailport=s, headport=n]
BB12571 -> BB12599 [tailport=s, headport=n, color=gray]
BB12572 [shape=record label="{32969: read-variable['fraction',v84,-]|32970: read-property[v84,'length',v82]|32971: \<variable-non-null-undef\>['fraction']|32972: read-variable['fractionSize',v83,-]|32973: \<[v82,v83,v81]|32974: if[v81](true-block:12573,false-block:12574)}" ] 
BB12572 -> BB12573 [tailport=s, headport=n, headlabel="      12573"]
BB12572 -> BB12574 [tailport=s, headport=n, headlabel="      12574"]
BB12572 -> BB12599 [tailport=s, headport=n, color=gray]
BB12573 [shape=record label="{32975: read-variable['fraction',v86,-]|32976: constant[\"0\",v87]|32977: +[v86,v87,v85]|32978: write-variable[v85,'fraction']*}" ] 
BB12573 -> BB12572 [tailport=s, headport=n]
BB12573 -> BB12599 [tailport=s, headport=n, color=gray]
BB12574 [shape=record label="{32979: read-variable['fractionSize',v85,-]|32980: if[v85](true-block:12575,false-block:12576)}" ] 
BB12574 -> BB12576 [tailport=s, headport=n, headlabel="      12576"]
BB12574 -> BB12575 [tailport=s, headport=n, headlabel="      12575"]
BB12574 -> BB12599 [tailport=s, headport=n, color=gray]
BB12575 [shape=record label="{32981: read-variable['fractionSize',v86,-]|32982: constant[\"0\",v87]|32983: !==[v86,v87,v85]}" ] 
BB12575 -> BB12576 [tailport=s, headport=n]
BB12575 -> BB12599 [tailport=s, headport=n, color=gray]
BB12576 [shape=record label="{32984: if[v85](true-block:12577,false-block:12587)}" ] 
BB12576 -> BB12577 [tailport=s, headport=n, headlabel="      12577"]
BB12576 -> BB12587 [tailport=s, headport=n, headlabel="      12587"]
BB12577 [shape=record label="{32985: read-variable['formatedText',v87,-]|32986: read-variable['decimalSep',v89,-]|32987: read-variable['fraction',v92,-]|32988: read-property[v92,'substr',-]|32989: \<variable-non-null-undef\>['fraction']|32990: constant[0.0,v93]|32991: read-variable['fractionSize',v94,-]}" ] 
BB12577 -> BB12578 [tailport=s, headport=n, headlabel="      12578"]
BB12577 -> BB12599 [tailport=s, headport=n, color=gray]
BB12578 [shape=record label="{32992: call-fraction.substr [v92,'substr',v93,v94,v90]}" ] 
BB12578 -> BB12579 [tailport=s, headport=n, headlabel="      12579"]
BB12578 -> BB12599 [tailport=s, headport=n, color=gray]
BB12579 [shape=record label="{32993: +[v89,v90,v88]|32994: +[v87,v88,v86]|32995: write-variable[v86,'formatedText']*}" ] 
BB12579 -> BB12587 [tailport=s, headport=n]
BB12579 -> BB12599 [tailport=s, headport=n, color=gray]
BB12580 [shape=record label="{32996: read-variable['number',v33,-]|32997: constant[1.0,v34]|32998: \<[v33,v34,v30]}" ] 
BB12580 -> BB12581 [tailport=s, headport=n]
BB12580 -> BB12599 [tailport=s, headport=n, color=gray]
BB12581 [shape=record label="{32999: if[v30](true-block:12582,false-block:12587)}" ] 
BB12581 -> BB12582 [tailport=s, headport=n, headlabel="      12582"]
BB12581 -> BB12587 [tailport=s, headport=n]
BB12582 [shape=record label="{33000: read-variable['number',v35,-]|33001: read-property[v35,'toFixed',-]|33002: \<variable-non-null-undef\>['number']|33003: read-variable['fractionSize',v36,-]}" ] 
BB12582 -> BB12583 [tailport=s, headport=n, headlabel="      12583"]
BB12582 -> BB12599 [tailport=s, headport=n, color=gray]
BB12583 [shape=record label="{33004: call-number.toFixed [v35,'toFixed',v36,v33]}" ] 
BB12583 -> BB12584 [tailport=s, headport=n, headlabel="      12584"]
BB12583 -> BB12599 [tailport=s, headport=n, color=gray]
BB12584 [shape=record label="{33005: write-variable[v33,'formatedText']*|33006: read-variable['parseFloat',v39,v38]|33007: read-variable['formatedText',v40,-]}" ] 
BB12584 -> BB12585 [tailport=s, headport=n, headlabel="      12585"]
BB12584 -> BB12599 [tailport=s, headport=n, color=gray]
BB12585 [shape=record label="{33008: call-parseFloat [v38,v39,v40,v37]}" ] 
BB12585 -> BB12586 [tailport=s, headport=n, headlabel="      12586"]
BB12585 -> BB12599 [tailport=s, headport=n, color=gray]
BB12586 [shape=record label="{33009: write-variable[v37,'number']*}" ] 
BB12586 -> BB12587 [tailport=s, headport=n]
BB12587 [shape=record label="{33010: read-variable['number',v31,-]|33011: constant[0.0,v32]|33012: ===[v31,v32,v30]|33013: if[v30](true-block:12588,false-block:12589)}" ] 
BB12587 -> BB12588 [tailport=s, headport=n, headlabel="      12588"]
BB12587 -> BB12589 [tailport=s, headport=n, headlabel="      12589"]
BB12587 -> BB12599 [tailport=s, headport=n, color=gray]
BB12588 [shape=record label="{33014: constant[false,v33]|33015: write-variable[v33,'isNegative']*}" ] 
BB12588 -> BB12589 [tailport=s, headport=n]
BB12589 [shape=record label="{33016: read-variable['parts',v34,-]|33017: read-property[v34,'push',-]|33018: \<variable-non-null-undef\>['parts']|33019: read-variable['isNegative',v36,-]|33020: if[v36](true-block:12590,false-block:12591)}" ] 
BB12589 -> BB12590 [tailport=s, headport=n, headlabel="      12590"]
BB12589 -> BB12591 [tailport=s, headport=n, headlabel="      12591"]
BB12589 -> BB12599 [tailport=s, headport=n, color=gray]
BB12590 [shape=record label="{33021: read-variable['pattern',v37,-]|33022: read-property[v37,'negPre',v35]|33023: \<variable-non-null-undef\>['pattern']}" ] 
BB12590 -> BB12592 [tailport=s, headport=n, headlabel="      12592"]
BB12590 -> BB12599 [tailport=s, headport=n, color=gray]
BB12591 [shape=record label="{33024: read-variable['pattern',v37,-]|33025: read-property[v37,'posPre',v35]|33026: \<variable-non-null-undef\>['pattern']}" ] 
BB12591 -> BB12592 [tailport=s, headport=n]
BB12591 -> BB12599 [tailport=s, headport=n, color=gray]
BB12592 [shape=record label="{33027: read-variable['formatedText',v37,-]|33028: read-variable['isNegative',v39,-]|33029: if[v39](true-block:12593,false-block:12594)}" ] 
BB12592 -> BB12593 [tailport=s, headport=n, headlabel="      12593"]
BB12592 -> BB12594 [tailport=s, headport=n, headlabel="      12594"]
BB12592 -> BB12599 [tailport=s, headport=n, color=gray]
BB12593 [shape=record label="{33030: read-variable['pattern',v40,-]|33031: read-property[v40,'negSuf',v38]|33032: \<variable-non-null-undef\>['pattern']}" ] 
BB12593 -> BB12595 [tailport=s, headport=n, headlabel="      12595"]
BB12593 -> BB12599 [tailport=s, headport=n, color=gray]
BB12594 [shape=record label="{33033: read-variable['pattern',v40,-]|33034: read-property[v40,'posSuf',v38]|33035: \<variable-non-null-undef\>['pattern']}" ] 
BB12594 -> BB12595 [tailport=s, headport=n]
BB12594 -> BB12599 [tailport=s, headport=n, color=gray]
BB12595 [shape=record label="{33036: call-parts.push [v34,'push',v35,v37,v38,-]*}" ] 
BB12595 -> BB12596 [tailport=s, headport=n, headlabel="      12596"]
BB12595 -> BB12599 [tailport=s, headport=n, color=gray]
BB12596 [shape=record label="{33037: read-variable['parts',v41,-]|33038: read-property[v41,'join',-]|33039: \<variable-non-null-undef\>['parts']|33040: constant[\"\",v42]}" ] 
BB12596 -> BB12597 [tailport=s, headport=n, headlabel="      12597"]
BB12596 -> BB12599 [tailport=s, headport=n, color=gray]
BB12597 [shape=record label="{33041: call-parts.join [v41,'join',v42,v1]}" ] 
BB12597 -> BB12598 [tailport=s, headport=n]
BB12597 -> BB12599 [tailport=s, headport=n, color=gray]
BB12598 [shape=record label="{33042: return[v1]}" ] 
BB12599 [shape=record label="{33043: exceptional-return}" ] 
//#$~ 18599
}
