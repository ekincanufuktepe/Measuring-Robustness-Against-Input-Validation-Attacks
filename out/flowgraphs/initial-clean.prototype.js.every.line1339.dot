digraph {
rankdir="TD"
BB_entry181[shape=none,label=""];
BB_entry181 -> BB2052 [tailport=s, headport=n, headlabel="    2052"]
BB2052 [shape=record label="{5514: constant[undefined,v1]|5515: vardecl['context']|5516: vardecl['object']|5517: vardecl['i']|5518: vardecl['length']}" ] 
BB2052 -> BB2053 [tailport=s, headport=n, headlabel="      2053"]
BB2053 [shape=record label="{5519: read-variable['this',v3,-]|5520: constant[null,v4]|5521: ==[v3,v4,v2]|5522: if[v2](true-block:2054,false-block:2057)}" ] 
BB2053 -> BB2054 [tailport=s, headport=n, headlabel="      2054"]
BB2053 -> BB2057 [tailport=s, headport=n, headlabel="      2057"]
BB2053 -> BB2072 [tailport=s, headport=n, color=gray, headlabel="      2072"]
BB2054 [shape=record label="{5523: read-variable['TypeError',v6,-]}" ] 
BB2054 -> BB2055 [tailport=s, headport=n, headlabel="      2055"]
BB2054 -> BB2072 [tailport=s, headport=n, color=gray]
BB2055 [shape=record label="{5524: construct [-,v6,v5]}" ] 
BB2055 -> BB2056 [tailport=s, headport=n, headlabel="      2056"]
BB2055 -> BB2072 [tailport=s, headport=n, color=gray]
BB2056 [shape=record label="{5525: throw[v5]*}" ] 
BB2056 -> BB2057 [tailport=s, headport=n]
BB2056 -> BB2072 [tailport=s, headport=n, color=gray]
BB2057 [shape=record label="{5526: read-variable['iterator',v5,-]|5527: if[v5](true-block:2059,false-block:2058)}" ] 
BB2057 -> BB2059 [tailport=s, headport=n, headlabel="      2059"]
BB2057 -> BB2058 [tailport=s, headport=n, headlabel="      2058"]
BB2057 -> BB2072 [tailport=s, headport=n, color=gray]
BB2058 [shape=record label="{5528: read-variable['Prototype',v6,-]|5529: read-property[v6,'K',v5]|5530: \<variable-non-null-undef\>['Prototype']}" ] 
BB2058 -> BB2059 [tailport=s, headport=n]
BB2058 -> BB2072 [tailport=s, headport=n, color=gray]
BB2059 [shape=record label="{5531: write-variable[v5,'iterator']*|5532: read-variable['arguments',v7,-]|5533: constant[1.0,v8]|5534: read-property[v7,v8,v6]|5535: \<variable-non-null-undef\>['arguments']|5536: write-variable[v6,'context']*|5537: read-variable['Object',v11,v10]|5538: read-variable['this',v12,-]}" ] 
BB2059 -> BB2060 [tailport=s, headport=n, headlabel="      2060"]
BB2059 -> BB2072 [tailport=s, headport=n, color=gray]
BB2060 [shape=record label="{5539: call-Object [v10,v11,v12,v9]}" ] 
BB2060 -> BB2061 [tailport=s, headport=n, headlabel="      2061"]
BB2060 -> BB2072 [tailport=s, headport=n, color=gray]
BB2061 [shape=record label="{5540: write-variable[v9,'object']*|5541: constant[0.0,v14]|5542: write-variable[v14,'i']*|5543: read-variable['object',v18,-]|5544: read-property[v18,'length',v16]|5545: \<variable-non-null-undef\>['object']|5546: constant[0.0,v17]|5547: \>\>\>[v16,v17,v15]|5548: write-variable[v15,'length']*}" ] 
BB2061 -> BB2062 [tailport=s, headport=n, headlabel="      2062"]
BB2061 -> BB2072 [tailport=s, headport=n, color=gray]
BB2062 [shape=record label="{5549: read-variable['i',v19,-]|5550: read-variable['length',v20,-]|5551: \<[v19,v20,v13]|5552: if[v13](true-block:2063,false-block:2064)}" ] 
BB2062 -> BB2063 [tailport=s, headport=n, headlabel="      2063"]
BB2062 -> BB2064 [tailport=s, headport=n, headlabel="      2064"]
BB2062 -> BB2072 [tailport=s, headport=n, color=gray]
BB2063 [shape=record label="{5553: read-variable['i',v22,-]|5554: read-variable['object',v23,-]|5555: in[v22,v23,v21]|5556: if[v21](true-block:2065,false-block:2068)}" ] 
BB2063 -> BB2068 [tailport=s, headport=n, headlabel="      2068"]
BB2063 -> BB2065 [tailport=s, headport=n, headlabel="      2065"]
BB2063 -> BB2072 [tailport=s, headport=n, color=gray]
BB2064 [shape=record label="{5557: constant[true,v1]}" ] 
BB2064 -> BB2071 [tailport=s, headport=n, headlabel="      2071"]
BB2065 [shape=record label="{5558: read-variable['iterator',v26,-]|5559: read-property[v26,'call',-]|5560: \<variable-non-null-undef\>['iterator']|5561: read-variable['context',v27,-]|5562: read-variable['object',v29,-]|5563: read-variable['i',v30,-]|5564: read-property[v29,v30,v28]|5565: \<variable-non-null-undef\>['object']|5566: read-variable['i',v31,-]|5567: read-variable['object',v32,-]}" ] 
BB2065 -> BB2066 [tailport=s, headport=n, headlabel="      2066"]
BB2065 -> BB2072 [tailport=s, headport=n, color=gray]
BB2066 [shape=record label="{5568: call-iterator.call [v26,'call',v27,v28,v31,v32,v24]}" ] 
BB2066 -> BB2067 [tailport=s, headport=n, headlabel="      2067"]
BB2066 -> BB2072 [tailport=s, headport=n, color=gray]
BB2067 [shape=record label="{5569: ![v24,v21]}" ] 
BB2067 -> BB2068 [tailport=s, headport=n]
BB2067 -> BB2072 [tailport=s, headport=n, color=gray]
BB2068 [shape=record label="{5570: if[v21](true-block:2069,false-block:2070)}" ] 
BB2068 -> BB2069 [tailport=s, headport=n, headlabel="      2069"]
BB2068 -> BB2070 [tailport=s, headport=n, headlabel="      2070"]
BB2069 [shape=record label="{5571: constant[false,v1]}" ] 
BB2069 -> BB2071 [tailport=s, headport=n]
BB2070 [shape=record label="{5572: constant[1.0,v24]|5573: read-variable['i',v25,-]|5574: +[v25,v26]|5575: +[v26,v24,v27]|5576: write-variable[v27,'i']}" ] 
BB2070 -> BB2062 [tailport=s, headport=n]
BB2070 -> BB2072 [tailport=s, headport=n, color=gray]
BB2071 [shape=record label="{5577: return[v1]}" ] 
BB2072 [shape=record label="{5578: exceptional-return}" ] 
//#$~ 1351
}
