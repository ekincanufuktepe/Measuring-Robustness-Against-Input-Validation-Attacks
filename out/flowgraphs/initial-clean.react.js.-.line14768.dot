digraph {
rankdir="TD"
BB_entry618[shape=none,label=""];
BB_entry618 -> BB8598 [tailport=s, headport=n, headlabel="    8598"]
BB8598 [shape=record label="{28392: constant[undefined,v1]|28393: vardecl['CallbackQueue']|28394: vardecl['PooledClass']|28395: vardecl['ReactCurrentOwner']|28396: vardecl['ReactPerf']|28397: vardecl['ReactReconciler']|28398: vardecl['Transaction']|28399: vardecl['assign']|28400: vardecl['invariant']|28401: vardecl['warning']|28402: vardecl['dirtyComponents']|28403: vardecl['asapCallbackQueue']|28404: vardecl['asapEnqueued']|28405: vardecl['batchingStrategy']|28406: function-decl[function ensureInjected ( ),-]|28407: vardecl['NESTED_UPDATES']|28408: vardecl['UPDATE_QUEUEING']|28409: vardecl['TRANSACTION_WRAPPERS']|28410: function-decl[function ReactUpdatesFlushTransaction ( ),-]|28411: function-decl[function batchedUpdates ( callback a b c d ),-]|28412: function-decl[function mountOrderComparator ( c1 c2 ),-]|28413: function-decl[function runBatchedUpdates ( transaction ),-]|28414: vardecl['flushBatchedUpdates']|28415: function-decl[function enqueueUpdate ( component ),-]|28416: function-decl[function asap ( callback context ),-]|28417: vardecl['ReactUpdatesInjection']|28418: vardecl['ReactUpdates']}" ] 
BB8598 -> BB8599 [tailport=s, headport=n, headlabel="      8599"]
BB8599 [shape=record label="{28419: read-variable['_dereq_',v4,v3]|28420: constant[6.0,v5]}" ] 
BB8599 -> BB8600 [tailport=s, headport=n, headlabel="      8600"]
BB8599 -> BB8631 [tailport=s, headport=n, color=gray, headlabel="      8631"]
BB8600 [shape=record label="{28421: call-_dereq_ [v3,v4,v5,v2]}" ] 
BB8600 -> BB8601 [tailport=s, headport=n, headlabel="      8601"]
BB8600 -> BB8631 [tailport=s, headport=n, color=gray]
BB8601 [shape=record label="{28422: write-variable[v2,'CallbackQueue']*|28423: read-variable['_dereq_',v8,v7]|28424: constant[28.0,v9]}" ] 
BB8601 -> BB8602 [tailport=s, headport=n, headlabel="      8602"]
BB8601 -> BB8631 [tailport=s, headport=n, color=gray]
BB8602 [shape=record label="{28425: call-_dereq_ [v7,v8,v9,v6]}" ] 
BB8602 -> BB8603 [tailport=s, headport=n, headlabel="      8603"]
BB8602 -> BB8631 [tailport=s, headport=n, color=gray]
BB8603 [shape=record label="{28426: write-variable[v6,'PooledClass']*|28427: read-variable['_dereq_',v12,v11]|28428: constant[39.0,v13]}" ] 
BB8603 -> BB8604 [tailport=s, headport=n, headlabel="      8604"]
BB8603 -> BB8631 [tailport=s, headport=n, color=gray]
BB8604 [shape=record label="{28429: call-_dereq_ [v11,v12,v13,v10]}" ] 
BB8604 -> BB8605 [tailport=s, headport=n, headlabel="      8605"]
BB8604 -> BB8631 [tailport=s, headport=n, color=gray]
BB8605 [shape=record label="{28430: write-variable[v10,'ReactCurrentOwner']*|28431: read-variable['_dereq_',v16,v15]|28432: constant[75.0,v17]}" ] 
BB8605 -> BB8606 [tailport=s, headport=n, headlabel="      8606"]
BB8605 -> BB8631 [tailport=s, headport=n, color=gray]
BB8606 [shape=record label="{28433: call-_dereq_ [v15,v16,v17,v14]}" ] 
BB8606 -> BB8607 [tailport=s, headport=n, headlabel="      8607"]
BB8606 -> BB8631 [tailport=s, headport=n, color=gray]
BB8607 [shape=record label="{28434: write-variable[v14,'ReactPerf']*|28435: read-variable['_dereq_',v20,v19]|28436: constant[81.0,v21]}" ] 
BB8607 -> BB8608 [tailport=s, headport=n, headlabel="      8608"]
BB8607 -> BB8631 [tailport=s, headport=n, color=gray]
BB8608 [shape=record label="{28437: call-_dereq_ [v19,v20,v21,v18]}" ] 
BB8608 -> BB8609 [tailport=s, headport=n, headlabel="      8609"]
BB8608 -> BB8631 [tailport=s, headport=n, color=gray]
BB8609 [shape=record label="{28438: write-variable[v18,'ReactReconciler']*|28439: read-variable['_dereq_',v24,v23]|28440: constant[103.0,v25]}" ] 
BB8609 -> BB8610 [tailport=s, headport=n, headlabel="      8610"]
BB8609 -> BB8631 [tailport=s, headport=n, color=gray]
BB8610 [shape=record label="{28441: call-_dereq_ [v23,v24,v25,v22]}" ] 
BB8610 -> BB8611 [tailport=s, headport=n, headlabel="      8611"]
BB8610 -> BB8631 [tailport=s, headport=n, color=gray]
BB8611 [shape=record label="{28442: write-variable[v22,'Transaction']*|28443: read-variable['_dereq_',v28,v27]|28444: constant[27.0,v29]}" ] 
BB8611 -> BB8612 [tailport=s, headport=n, headlabel="      8612"]
BB8611 -> BB8631 [tailport=s, headport=n, color=gray]
BB8612 [shape=record label="{28445: call-_dereq_ [v27,v28,v29,v26]}" ] 
BB8612 -> BB8613 [tailport=s, headport=n, headlabel="      8613"]
BB8612 -> BB8631 [tailport=s, headport=n, color=gray]
BB8613 [shape=record label="{28446: write-variable[v26,'assign']*|28447: read-variable['_dereq_',v32,v31]|28448: constant[135.0,v33]}" ] 
BB8613 -> BB8614 [tailport=s, headport=n, headlabel="      8614"]
BB8613 -> BB8631 [tailport=s, headport=n, color=gray]
BB8614 [shape=record label="{28449: call-_dereq_ [v31,v32,v33,v30]}" ] 
BB8614 -> BB8615 [tailport=s, headport=n, headlabel="      8615"]
BB8614 -> BB8631 [tailport=s, headport=n, color=gray]
BB8615 [shape=record label="{28450: write-variable[v30,'invariant']*|28451: read-variable['_dereq_',v36,v35]|28452: constant[154.0,v37]}" ] 
BB8615 -> BB8616 [tailport=s, headport=n, headlabel="      8616"]
BB8615 -> BB8631 [tailport=s, headport=n, color=gray]
BB8616 [shape=record label="{28453: call-_dereq_ [v35,v36,v37,v34]}" ] 
BB8616 -> BB8617 [tailport=s, headport=n, headlabel="      8617"]
BB8616 -> BB8631 [tailport=s, headport=n, color=gray]
BB8617 [shape=record label="{28454: write-variable[v34,'warning']*|28455: read-variable['Array',v39,-]}" ] 
BB8617 -> BB8618 [tailport=s, headport=n, headlabel="      8618"]
BB8617 -> BB8631 [tailport=s, headport=n, color=gray]
BB8618 [shape=record label="{28456: construct [-,v39,v38]}" ] 
BB8618 -> BB8619 [tailport=s, headport=n, headlabel="      8619"]
BB8618 -> BB8631 [tailport=s, headport=n, color=gray]
BB8619 [shape=record label="{28457: write-variable[v38,'dirtyComponents']*|28458: read-variable['CallbackQueue',v42,-]|28459: read-property[v42,'getPooled',-]|28460: \<variable-non-null-undef\>['CallbackQueue']}" ] 
BB8619 -> BB8620 [tailport=s, headport=n, headlabel="      8620"]
BB8619 -> BB8631 [tailport=s, headport=n, color=gray]
BB8620 [shape=record label="{28461: call-CallbackQueue.getPooled [v42,'getPooled',v40]}" ] 
BB8620 -> BB8621 [tailport=s, headport=n, headlabel="      8621"]
BB8620 -> BB8631 [tailport=s, headport=n, color=gray]
BB8621 [shape=record label="{28462: write-variable[v40,'asapCallbackQueue']*|28463: constant[false,v43]|28464: write-variable[v43,'asapEnqueued']*|28465: constant[null,v44]|28466: write-variable[v44,'batchingStrategy']*|28467: new[v45]|28468: function-expr[function ( ),v46]|28469: write-property[v45,'initialize',v46]|28470: function-expr[function ( ),v47]|28471: write-property[v45,'close',v47]|28472: write-variable[v45,'NESTED_UPDATES']*|28473: new[v48]|28474: function-expr[function ( ),v49]|28475: write-property[v48,'initialize',v49]|28476: function-expr[function ( ),v50]|28477: write-property[v48,'close',v50]|28478: write-variable[v48,'UPDATE_QUEUEING']*|28479: read-variable['Array',v52,-]|28480: read-variable['NESTED_UPDATES',v53,-]|28481: read-variable['UPDATE_QUEUEING',v54,-]}" ] 
BB8621 -> BB8622 [tailport=s, headport=n, headlabel="      8622"]
BB8621 -> BB8631 [tailport=s, headport=n, color=gray]
BB8622 [shape=record label="{28482: construct [-,v52,v53,v54,v51]}" ] 
BB8622 -> BB8623 [tailport=s, headport=n, headlabel="      8623"]
BB8622 -> BB8631 [tailport=s, headport=n, color=gray]
BB8623 [shape=record label="{28483: write-variable[v51,'TRANSACTION_WRAPPERS']*|28484: read-variable['assign',v56,v55]|28485: read-variable['ReactUpdatesFlushTransaction',v58,-]|28486: read-property[v58,'prototype',v57]|28487: \<variable-non-null-undef\>['ReactUpdatesFlushTransaction']|28488: read-variable['Transaction',v60,-]|28489: read-property[v60,'Mixin',v59]|28490: \<variable-non-null-undef\>['Transaction']|28491: new[v61]|28492: function-expr[function ( ),v62]|28493: write-property[v61,'getTransactionWrappers',v62]|28494: function-expr[function ( ),v63]|28495: write-property[v61,'destructor',v63]|28496: function-expr[function ( method scope a ),v64]|28497: write-property[v61,'perform',v64]}" ] 
BB8623 -> BB8624 [tailport=s, headport=n, headlabel="      8624"]
BB8623 -> BB8631 [tailport=s, headport=n, color=gray]
BB8624 [shape=record label="{28498: call-assign [v55,v56,v57,v59,v61,-]*}" ] 
BB8624 -> BB8625 [tailport=s, headport=n, headlabel="      8625"]
BB8624 -> BB8631 [tailport=s, headport=n, color=gray]
BB8625 [shape=record label="{28499: read-variable['PooledClass',v66,-]|28500: read-property[v66,'addPoolingTo',-]|28501: \<variable-non-null-undef\>['PooledClass']|28502: read-variable['ReactUpdatesFlushTransaction',v67,-]}" ] 
BB8625 -> BB8626 [tailport=s, headport=n, headlabel="      8626"]
BB8625 -> BB8631 [tailport=s, headport=n, color=gray]
BB8626 [shape=record label="{28503: call-PooledClass.addPoolingTo [v66,'addPoolingTo',v67,-]*}" ] 
BB8626 -> BB8627 [tailport=s, headport=n, headlabel="      8627"]
BB8626 -> BB8631 [tailport=s, headport=n, color=gray]
BB8627 [shape=record label="{28504: function-expr[function ( ),v68]|28505: write-variable[v68,'flushBatchedUpdates']*|28506: read-variable['ReactPerf',v71,-]|28507: read-property[v71,'measure',-]|28508: \<variable-non-null-undef\>['ReactPerf']|28509: constant[\"ReactUpdates\",v72]|28510: constant[\"flushBatchedUpdates\",v73]|28511: read-variable['flushBatchedUpdates',v74,-]}" ] 
BB8627 -> BB8628 [tailport=s, headport=n, headlabel="      8628"]
BB8627 -> BB8631 [tailport=s, headport=n, color=gray]
BB8628 [shape=record label="{28512: call-ReactPerf.measure [v71,'measure',v72,v73,v74,v69]}" ] 
BB8628 -> BB8629 [tailport=s, headport=n, headlabel="      8629"]
BB8628 -> BB8631 [tailport=s, headport=n, color=gray]
BB8629 [shape=record label="{28513: write-variable[v69,'flushBatchedUpdates']*|28514: new[v75]|28515: function-expr[function ( ReconcileTransaction ),v76]|28516: write-property[v75,'injectReconcileTransaction',v76]|28517: function-expr[function ( _batchingStrategy ),v77]|28518: write-property[v75,'injectBatchingStrategy',v77]|28519: write-variable[v75,'ReactUpdatesInjection']*|28520: new[v78]|28521: constant[null,v79]|28522: write-property[v78,'ReactReconcileTransaction',v79]|28523: read-variable['batchedUpdates',v80,-]|28524: write-property[v78,'batchedUpdates',v80]|28525: read-variable['enqueueUpdate',v81,-]|28526: write-property[v78,'enqueueUpdate',v81]|28527: read-variable['flushBatchedUpdates',v82,-]|28528: write-property[v78,'flushBatchedUpdates',v82]|28529: read-variable['ReactUpdatesInjection',v83,-]|28530: write-property[v78,'injection',v83]|28531: read-variable['asap',v84,-]|28532: write-property[v78,'asap',v84]|28533: write-variable[v78,'ReactUpdates']*|28534: read-variable['module',v86,-]|28535: read-variable['ReactUpdates',v85,-]|28536: write-property[v86,'exports',v85]|28537: \<variable-non-null-undef\>['module']*}" ] 
BB8629 -> BB8630 [tailport=s, headport=n, headlabel="      8630"]
BB8629 -> BB8631 [tailport=s, headport=n, color=gray]
BB8630 [shape=record label="{28538: return[v1]}" ] 
BB8631 [shape=record label="{28539: exceptional-return}" ] 
//#$~ 15046
}
