digraph {
rankdir="TD"
BB_entry99[shape=none,label=""];
BB_entry99 -> BB1184 [tailport=s, headport=n, headlabel="    1184"]
BB1184 [shape=record label="{3335: constant[undefined,v1]|3336: vardecl['json']|3337: vardecl['cx']}" ] 
BB1184 -> BB1185 [tailport=s, headport=n, headlabel="      1185"]
BB1185 [shape=record label="{3338: read-variable['this',v4,-]|3339: read-property[v4,'unfilterJSON',-]}" ] 
BB1185 -> BB1186 [tailport=s, headport=n, headlabel="      1186"]
BB1185 -> BB1210 [tailport=s, headport=n, color=gray, headlabel="      1210"]
BB1186 [shape=record label="{3340: call-this.unfilterJSON [v4,'unfilterJSON',v2]}" ] 
BB1186 -> BB1187 [tailport=s, headport=n, headlabel="      1187"]
BB1186 -> BB1210 [tailport=s, headport=n, color=gray]
BB1187 [shape=record label="{3341: write-variable[v2,'json']*|3342: read-variable['RegExp',v6,-]|3343: constant[\"[\\\\u0000\\\\u00ad\\\\u0600-\\\\u0604\\\\u070f\\\\u17b4\\\\u17b5\\\\u200c-\\\\u200f\\\\u2028-\\\\u202f\\\\u2060-\\\\u206f\\\\ufeff\\\\ufff0-\\\\uffff]\",v7]|3344: constant[\"g\",v8]}" ] 
BB1187 -> BB1188 [tailport=s, headport=n, headlabel="      1188"]
BB1187 -> BB1210 [tailport=s, headport=n, color=gray]
BB1188 [shape=record label="{3345: construct [-,v6,v7,v8,v5]}" ] 
BB1188 -> BB1189 [tailport=s, headport=n, headlabel="      1189"]
BB1188 -> BB1210 [tailport=s, headport=n, color=gray]
BB1189 [shape=record label="{3346: write-variable[v5,'cx']*|3347: read-variable['cx',v11,-]|3348: read-property[v11,'test',-]|3349: \<variable-non-null-undef\>['cx']|3350: read-variable['json',v12,-]}" ] 
BB1189 -> BB1190 [tailport=s, headport=n, headlabel="      1190"]
BB1189 -> BB1210 [tailport=s, headport=n, color=gray]
BB1190 [shape=record label="{3351: call-cx.test [v11,'test',v12,v9]}" ] 
BB1190 -> BB1191 [tailport=s, headport=n, headlabel="      1191"]
BB1190 -> BB1210 [tailport=s, headport=n, color=gray]
BB1191 [shape=record label="{3352: if[v9](true-block:1192,false-block:1195)}" ] 
BB1191 -> BB1192 [tailport=s, headport=n, headlabel="      1192"]
BB1191 -> BB1195 [tailport=s, headport=n, headlabel="      1195"]
BB1192 [shape=record label="{3353: read-variable['json',v15,-]|3354: read-property[v15,'replace',-]|3355: \<variable-non-null-undef\>['json']|3356: read-variable['cx',v16,-]|3357: function-expr[function ( a ),v17]}" ] 
BB1192 -> BB1193 [tailport=s, headport=n, headlabel="      1193"]
BB1192 -> BB1210 [tailport=s, headport=n, color=gray]
BB1193 [shape=record label="{3358: call-json.replace [v15,'replace',v16,v17,v13]}" ] 
BB1193 -> BB1194 [tailport=s, headport=n, headlabel="      1194"]
BB1193 -> BB1210 [tailport=s, headport=n, color=gray]
BB1194 [shape=record label="{3359: write-variable[v13,'json']*}" ] 
BB1194 -> BB1195 [tailport=s, headport=n]
BB1195 [shape=record label="{3360: read-variable['sanitize',v14,-]|3361: ![v14,v13]|3362: if[v13](true-block:1198,false-block:1196)}" ] 
BB1195 -> BB1198 [tailport=s, headport=n, headlabel="      1198"]
BB1195 -> BB1196 [tailport=s, headport=n, headlabel="      1196"]
BB1195 -> BB1202 [tailport=s, headport=n, color=gray, headlabel="      1202"]
BB1196 [shape=record label="{3363: read-variable['json',v15,-]|3364: read-property[v15,'isJSON',-]|3365: \<variable-non-null-undef\>['json']}" ] 
BB1196 -> BB1197 [tailport=s, headport=n, headlabel="      1197"]
BB1196 -> BB1202 [tailport=s, headport=n, color=gray]
BB1197 [shape=record label="{3366: call-json.isJSON [v15,'isJSON',v13]}" ] 
BB1197 -> BB1198 [tailport=s, headport=n]
BB1197 -> BB1202 [tailport=s, headport=n, color=gray]
BB1198 [shape=record label="{3367: if[v13](true-block:1199,false-block:1201)}" ] 
BB1198 -> BB1199 [tailport=s, headport=n, headlabel="      1199"]
BB1198 -> BB1201 [tailport=s, headport=n, headlabel="      1201"]
BB1199 [shape=record label="{3368: read-variable['eval',v15,v14]|3369: constant[\"(\",v19]|3370: read-variable['json',v20,-]|3371: +[v19,v20,v17]|3372: constant[\")\",v18]|3373: +[v17,v18,v16]}" ] 
BB1199 -> BB1200 [tailport=s, headport=n, headlabel="      1200"]
BB1199 -> BB1202 [tailport=s, headport=n, color=gray]
BB1200 [shape=record label="{3374: call-eval [v14,v15,v16,v1]}" ] 
BB1200 -> BB1209 [tailport=s, headport=n, headlabel="      1209"]
BB1200 -> BB1202 [tailport=s, headport=n, color=gray]
BB1201 [shape=record label="{3375: read-variable['SyntaxError',v16,-]|3376: constant[\"Badly formed JSON string: \",v18]|3377: read-variable['this',v21,-]|3378: read-property[v21,'inspect',-]}" ] 
BB1201 -> BB1205 [tailport=s, headport=n, headlabel="      1205"]
BB1201 -> BB1210 [tailport=s, headport=n, color=gray]
BB1202 [shape=record label="{3379: catch[e,v13]|3380: begin-with[v13]}" ] 
BB1202 -> BB1203 [tailport=s, headport=n, headlabel="      1203"]
BB1202 -> BB1210 [tailport=s, headport=n, color=gray]
BB1203 [shape=record label="{3381: end-with}" ] 
BB1203 -> BB1201 [tailport=s, headport=n]
BB1204 [shape=record label="{3382: end-with}" ] 
BB1204 -> BB1210 [tailport=s, headport=n]
BB1205 [shape=record label="{3383: call-this.inspect [v21,'inspect',v19]}" ] 
BB1205 -> BB1206 [tailport=s, headport=n, headlabel="      1206"]
BB1205 -> BB1210 [tailport=s, headport=n, color=gray]
BB1206 [shape=record label="{3384: +[v18,v19,v17]}" ] 
BB1206 -> BB1207 [tailport=s, headport=n, headlabel="      1207"]
BB1206 -> BB1210 [tailport=s, headport=n, color=gray]
BB1207 [shape=record label="{3385: construct [-,v16,v17,v15]}" ] 
BB1207 -> BB1208 [tailport=s, headport=n, headlabel="      1208"]
BB1207 -> BB1210 [tailport=s, headport=n, color=gray]
BB1208 [shape=record label="{3386: throw[v15]*}" ] 
BB1208 -> BB1209 [tailport=s, headport=n]
BB1208 -> BB1210 [tailport=s, headport=n, color=gray]
BB1209 [shape=record label="{3387: return[v1]}" ] 
BB1210 [shape=record label="{3388: exceptional-return}" ] 
//#$~ 746
}
