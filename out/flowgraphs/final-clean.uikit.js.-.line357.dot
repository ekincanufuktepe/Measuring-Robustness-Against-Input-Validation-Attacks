digraph {
rankdir="TD"
BB_entry32[shape=none,label=""];
BB_entry32 -> BB476 [tailport=s, headport=n, headlabel="    476"]
BB476 [shape=record label="{1305: constant[undefined,v1]|1306: vardecl['args']|1307: vardecl['cmd']|1308: vardecl['component']|1309: vardecl['method']}" ] 
BB476 -> BB477 [tailport=s, headport=n, headlabel="      477"]
BB477 [shape=record label="{1310: read-variable['arguments',v2,-]|1311: write-variable[v2,'args']*|1312: read-variable['command',v5,-]|1313: read-property[v5,'match',-]|1314: \<variable-non-null-undef\>['command']|1315: read-variable['RegExp',v7,-]|1316: constant[\"^([a-z\\\\-]+)(?:\\\\.([a-z]+))?\",v8]|1317: constant[\"i\",v9]}" ] 
BB477 -> BB478 [tailport=s, headport=n, headlabel="      478"]
BB477 -> BB487 [tailport=s, headport=n, color=gray, headlabel="      487"]
BB478 [shape=record label="{1318: construct [-,v7,v8,v9,v6]}" ] 
BB478 -> BB479 [tailport=s, headport=n, headlabel="      479"]
BB478 -> BB487 [tailport=s, headport=n, color=gray]
BB479 [shape=record label="{1319: call-command.match [v5,'match',v6,v3]}" ] 
BB479 -> BB480 [tailport=s, headport=n, headlabel="      480"]
BB479 -> BB487 [tailport=s, headport=n, color=gray]
BB480 [shape=record label="{1320: write-variable[v3,'cmd']*|1321: read-variable['cmd',v11,-]|1322: constant[1.0,v12]|1323: read-property[v11,v12,v10]|1324: \<variable-non-null-undef\>['cmd']|1325: write-variable[v10,'component']*|1326: read-variable['cmd',v14,-]|1327: constant[2.0,v15]|1328: read-property[v14,v15,v13]|1329: \<variable-non-null-undef\>['cmd']|1330: write-variable[v13,'method']*|1331: read-variable['UI',v18,-]|1332: read-variable['component',v19,-]|1333: read-property[v18,v19,v17]|1334: \<variable-non-null-undef\>['UI']|1335: ![v17,v16]|1336: if[v16](true-block:481,false-block:484)}" ] 
BB480 -> BB481 [tailport=s, headport=n, headlabel="      481"]
BB480 -> BB484 [tailport=s, headport=n, headlabel="      484"]
BB480 -> BB487 [tailport=s, headport=n, color=gray]
BB481 [shape=record label="{1337: read-variable['$',v21,-]|1338: read-property[v21,'error',-]|1339: \<variable-non-null-undef\>['$']|1340: constant[\"UIkit component [\",v25]|1341: read-variable['component',v26,-]|1342: +[v25,v26,v23]|1343: constant[\"] does not exist.\",v24]|1344: +[v23,v24,v22]}" ] 
BB481 -> BB482 [tailport=s, headport=n, headlabel="      482"]
BB481 -> BB487 [tailport=s, headport=n, color=gray]
BB482 [shape=record label="{1345: call-$.error [v21,'error',v22,-]*}" ] 
BB482 -> BB483 [tailport=s, headport=n, headlabel="      483"]
BB482 -> BB487 [tailport=s, headport=n, color=gray]
BB483 [shape=record label="{1346: read-variable['this',v1,-]}" ] 
BB483 -> BB486 [tailport=s, headport=n, headlabel="      486"]
BB483 -> BB487 [tailport=s, headport=n, color=gray]
BB484 [shape=record label="{1347: read-variable['this',v21,-]|1348: read-property[v21,'each',-]|1349: function-expr[function ( ),v22]}" ] 
BB484 -> BB485 [tailport=s, headport=n, headlabel="      485"]
BB484 -> BB487 [tailport=s, headport=n, color=gray]
BB485 [shape=record label="{1350: call-this.each [v21,'each',v22,v1]}" ] 
BB485 -> BB486 [tailport=s, headport=n]
BB485 -> BB487 [tailport=s, headport=n, color=gray]
BB486 [shape=record label="{1351: return[v1]}" ] 
BB487 [shape=record label="{1352: exceptional-return}" ] 
//#$~ 369
}
