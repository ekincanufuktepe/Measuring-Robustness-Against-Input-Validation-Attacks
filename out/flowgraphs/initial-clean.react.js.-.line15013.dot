digraph {
rankdir="TD"
BB_entry635[shape=none,label=""];
BB_entry635 -> BB8579 [tailport=s, headport=n, headlabel="    8579"]
BB8579 [shape=record label="{28334: constant[undefined,v1]}" ] 
BB8579 -> BB8580 [tailport=s, headport=n, headlabel="      8580"]
BB8580 [shape=record label="{28335: constant[\"production\",v3]|28336: constant[\"development\",v4]|28337: !==[v3,v4,v2]|28338: if[v2](true-block:8581,false-block:8582)}" ] 
BB8580 -> BB8581 [tailport=s, headport=n, headlabel="      8581"]
BB8580 -> BB8582 [tailport=s, headport=n, headlabel="      8582"]
BB8580 -> BB8597 [tailport=s, headport=n, color=gray, headlabel="      8597"]
BB8581 [shape=record label="{28339: read-variable['invariant',v6,v5]|28340: read-variable['_batchingStrategy',v7,-]|28341: constant[\"ReactUpdates: must provide a batching strategy\",v8]}" ] 
BB8581 -> BB8583 [tailport=s, headport=n, headlabel="      8583"]
BB8581 -> BB8597 [tailport=s, headport=n, color=gray]
BB8582 [shape=record label="{28342: read-variable['invariant',v6,v5]|28343: read-variable['_batchingStrategy',v7,-]}" ] 
BB8582 -> BB8584 [tailport=s, headport=n, headlabel="      8584"]
BB8582 -> BB8597 [tailport=s, headport=n, color=gray]
BB8583 [shape=record label="{28344: call-invariant [v5,v6,v7,v8,-]}" ] 
BB8583 -> BB8585 [tailport=s, headport=n, headlabel="      8585"]
BB8583 -> BB8597 [tailport=s, headport=n, color=gray]
BB8584 [shape=record label="{28345: call-invariant [v5,v6,v7,-]}" ] 
BB8584 -> BB8585 [tailport=s, headport=n]
BB8584 -> BB8597 [tailport=s, headport=n, color=gray]
BB8585 [shape=record label="{28346: constant[\"production\",v6]|28347: constant[\"development\",v7]|28348: !==[v6,v7,v5]|28349: if[v5](true-block:8586,false-block:8587)}" ] 
BB8585 -> BB8586 [tailport=s, headport=n, headlabel="      8586"]
BB8585 -> BB8587 [tailport=s, headport=n, headlabel="      8587"]
BB8585 -> BB8597 [tailport=s, headport=n, color=gray]
BB8586 [shape=record label="{28350: read-variable['invariant',v9,v8]|28351: read-variable['_batchingStrategy',v14,-]|28352: read-property[v14,'batchedUpdates',v13]|28353: \<variable-non-null-undef\>['_batchingStrategy']|28354: typeof[v13,v11]|28355: constant[\"function\",v12]|28356: ===[v11,v12,v10]|28357: constant[\"ReactUpdates: must provide a batchedUpdates() function\",v15]}" ] 
BB8586 -> BB8588 [tailport=s, headport=n, headlabel="      8588"]
BB8586 -> BB8597 [tailport=s, headport=n, color=gray]
BB8587 [shape=record label="{28358: read-variable['invariant',v9,v8]|28359: read-variable['_batchingStrategy',v14,-]|28360: read-property[v14,'batchedUpdates',v13]|28361: \<variable-non-null-undef\>['_batchingStrategy']|28362: typeof[v13,v11]|28363: constant[\"function\",v12]|28364: ===[v11,v12,v10]}" ] 
BB8587 -> BB8589 [tailport=s, headport=n, headlabel="      8589"]
BB8587 -> BB8597 [tailport=s, headport=n, color=gray]
BB8588 [shape=record label="{28365: call-invariant [v8,v9,v10,v15,-]}" ] 
BB8588 -> BB8590 [tailport=s, headport=n, headlabel="      8590"]
BB8588 -> BB8597 [tailport=s, headport=n, color=gray]
BB8589 [shape=record label="{28366: call-invariant [v8,v9,v10,-]}" ] 
BB8589 -> BB8590 [tailport=s, headport=n]
BB8589 -> BB8597 [tailport=s, headport=n, color=gray]
BB8590 [shape=record label="{28367: constant[\"production\",v9]|28368: constant[\"development\",v10]|28369: !==[v9,v10,v8]|28370: if[v8](true-block:8591,false-block:8592)}" ] 
BB8590 -> BB8591 [tailport=s, headport=n, headlabel="      8591"]
BB8590 -> BB8592 [tailport=s, headport=n, headlabel="      8592"]
BB8590 -> BB8597 [tailport=s, headport=n, color=gray]
BB8591 [shape=record label="{28371: read-variable['invariant',v12,v11]|28372: read-variable['_batchingStrategy',v17,-]|28373: read-property[v17,'isBatchingUpdates',v16]|28374: \<variable-non-null-undef\>['_batchingStrategy']|28375: typeof[v16,v14]|28376: constant[\"boolean\",v15]|28377: ===[v14,v15,v13]|28378: constant[\"ReactUpdates: must provide an isBatchingUpdates boolean attribute\",v18]}" ] 
BB8591 -> BB8593 [tailport=s, headport=n, headlabel="      8593"]
BB8591 -> BB8597 [tailport=s, headport=n, color=gray]
BB8592 [shape=record label="{28379: read-variable['invariant',v12,v11]|28380: read-variable['_batchingStrategy',v17,-]|28381: read-property[v17,'isBatchingUpdates',v16]|28382: \<variable-non-null-undef\>['_batchingStrategy']|28383: typeof[v16,v14]|28384: constant[\"boolean\",v15]|28385: ===[v14,v15,v13]}" ] 
BB8592 -> BB8594 [tailport=s, headport=n, headlabel="      8594"]
BB8592 -> BB8597 [tailport=s, headport=n, color=gray]
BB8593 [shape=record label="{28386: call-invariant [v11,v12,v13,v18,-]}" ] 
BB8593 -> BB8595 [tailport=s, headport=n, headlabel="      8595"]
BB8593 -> BB8597 [tailport=s, headport=n, color=gray]
BB8594 [shape=record label="{28387: call-invariant [v11,v12,v13,-]}" ] 
BB8594 -> BB8595 [tailport=s, headport=n]
BB8594 -> BB8597 [tailport=s, headport=n, color=gray]
BB8595 [shape=record label="{28388: read-variable['_batchingStrategy',v11,-]|28389: write-variable[v11,'batchingStrategy']*}" ] 
BB8595 -> BB8596 [tailport=s, headport=n, headlabel="      8596"]
BB8595 -> BB8597 [tailport=s, headport=n, color=gray]
BB8596 [shape=record label="{28390: return[v1]}" ] 
BB8597 [shape=record label="{28391: exceptional-return}" ] 
//#$~ 15026
}
