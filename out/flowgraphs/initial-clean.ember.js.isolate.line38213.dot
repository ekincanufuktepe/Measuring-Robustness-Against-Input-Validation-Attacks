digraph {
rankdir="TD"
BB_entry1777[shape=none,label=""];
BB_entry1777 -> BB20374 [tailport=s, headport=n, headlabel="    20374"]
BB20374 [shape=record label="{67920: constant[undefined,v1]|67921: vardecl['value']|67922: vardecl['lastPromise']}" ] 
BB20374 -> BB20375 [tailport=s, headport=n, headlabel="      20375"]
BB20375 [shape=record label="{67923: read-variable['Test',v3,-]|67924: constant[null,v2]|67925: write-property[v3,'lastPromise',v2]|67926: \<variable-non-null-undef\>['Test']*|67927: read-variable['fn',v6,v5]|67928: read-variable['val',v7,-]}" ] 
BB20375 -> BB20376 [tailport=s, headport=n, headlabel="      20376"]
BB20375 -> BB20387 [tailport=s, headport=n, color=gray, headlabel="      20387"]
BB20376 [shape=record label="{67929: call-fn [v5,v6,v7,v4]}" ] 
BB20376 -> BB20377 [tailport=s, headport=n, headlabel="      20377"]
BB20376 -> BB20387 [tailport=s, headport=n, color=gray]
BB20377 [shape=record label="{67930: write-variable[v4,'value']*|67931: read-variable['Test',v9,-]|67932: read-property[v9,'lastPromise',v8]|67933: \<variable-non-null-undef\>['Test']|67934: write-variable[v8,'lastPromise']*|67935: read-variable['value',v10,-]|67936: if[v10](true-block:20378,false-block:20379)}" ] 
BB20377 -> BB20379 [tailport=s, headport=n, headlabel="      20379"]
BB20377 -> BB20378 [tailport=s, headport=n, headlabel="      20378"]
BB20377 -> BB20387 [tailport=s, headport=n, color=gray]
BB20378 [shape=record label="{67937: read-variable['value',v11,-]|67938: read-variable['Test',v13,-]|67939: read-property[v13,'Promise',v12]|67940: \<variable-non-null-undef\>['Test']|67941: instanceof[v11,v12,v10]}" ] 
BB20378 -> BB20379 [tailport=s, headport=n]
BB20378 -> BB20387 [tailport=s, headport=n, color=gray]
BB20379 [shape=record label="{67942: if[v10](true-block:20381,false-block:20380)}" ] 
BB20379 -> BB20381 [tailport=s, headport=n, headlabel="      20381"]
BB20379 -> BB20380 [tailport=s, headport=n, headlabel="      20380"]
BB20380 [shape=record label="{67943: read-variable['lastPromise',v11,-]|67944: ![v11,v10]}" ] 
BB20380 -> BB20381 [tailport=s, headport=n]
BB20380 -> BB20387 [tailport=s, headport=n, color=gray]
BB20381 [shape=record label="{67945: if[v10](true-block:20382,false-block:20383)}" ] 
BB20381 -> BB20382 [tailport=s, headport=n, headlabel="      20382"]
BB20381 -> BB20383 [tailport=s, headport=n, headlabel="      20383"]
BB20382 [shape=record label="{67946: read-variable['value',v1,-]}" ] 
BB20382 -> BB20386 [tailport=s, headport=n, headlabel="      20386"]
BB20382 -> BB20387 [tailport=s, headport=n, color=gray]
BB20383 [shape=record label="{67947: read-variable['run',v12,v11]|67948: function-expr[function ( ),v13]}" ] 
BB20383 -> BB20384 [tailport=s, headport=n, headlabel="      20384"]
BB20383 -> BB20387 [tailport=s, headport=n, color=gray]
BB20384 [shape=record label="{67949: call-run [v11,v12,v13,-]*}" ] 
BB20384 -> BB20385 [tailport=s, headport=n, headlabel="      20385"]
BB20384 -> BB20387 [tailport=s, headport=n, color=gray]
BB20385 [shape=record label="{67950: read-variable['lastPromise',v1,-]}" ] 
BB20385 -> BB20386 [tailport=s, headport=n]
BB20385 -> BB20387 [tailport=s, headport=n, color=gray]
BB20386 [shape=record label="{67951: return[v1]}" ] 
BB20387 [shape=record label="{67952: exceptional-return}" ] 
//#$~ 38234
}
