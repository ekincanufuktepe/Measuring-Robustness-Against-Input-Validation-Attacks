digraph {
rankdir="TD"
BB_entry198[shape=none,label=""];
BB_entry198 -> BB2567 [tailport=s, headport=n, headlabel="    2567"]
BB2567 [shape=record label="{8362: constant[undefined,v1]|8363: vardecl['key']|8364: vardecl['klass']}" ] 
BB2567 -> BB2568 [tailport=s, headport=n, headlabel="      2568"]
BB2568 [shape=record label="{8365: read-variable['namespace',v3,-]|8366: read-variable['Ember',v4,-]|8367: !==[v3,v4,v2]|8368: if[v2](true-block:2569,false-block:2586)}" ] 
BB2568 -> BB2569 [tailport=s, headport=n, headlabel="      2569"]
BB2568 -> BB2586 [tailport=s, headport=n, headlabel="      2586"]
BB2568 -> BB2587 [tailport=s, headport=n, color=gray, headlabel="      2587"]
BB2569 [shape=record label="{8369: read-variable['namespace',v6,-]}" ] 
BB2569 -> BB2570 [tailport=s, headport=n, headlabel="      2570"]
BB2569 -> BB2587 [tailport=s, headport=n, color=gray]
BB2570 [shape=record label="{8370: begin-for-in[v6,v7]}" ] 
BB2570 -> BB2571 [tailport=s, headport=n, headlabel="      2571"]
BB2570 -> BB2587 [tailport=s, headport=n, color=gray]
BB2571 [shape=record label="{8371: has-next[v7,v8]|8372: if[v8](true-block:2572,false-block:2586)}" ] 
BB2571 -> BB2572 [tailport=s, headport=n, headlabel="      2572"]
BB2571 -> BB2586 [tailport=s, headport=n]
BB2572 [shape=record label="{8373: next-property[v7,v9]|8374: write-variable[v9,'key']|8375: read-variable['namespace',v13,-]|8376: read-property[v13,'hasOwnProperty',-]|8377: \<variable-non-null-undef\>['namespace']|8378: read-variable['key',v14,-]}" ] 
BB2572 -> BB2573 [tailport=s, headport=n, headlabel="      2573"]
BB2572 -> BB2587 [tailport=s, headport=n, color=gray]
BB2573 [shape=record label="{8379: call-namespace.hasOwnProperty [v13,'hasOwnProperty',v14,v11]}" ] 
BB2573 -> BB2574 [tailport=s, headport=n, headlabel="      2574"]
BB2573 -> BB2587 [tailport=s, headport=n, color=gray]
BB2574 [shape=record label="{8380: ![v11,v10]|8381: if[v10](true-block:2585,false-block:2575)}" ] 
BB2574 -> BB2585 [tailport=s, headport=n, headlabel="      2585"]
BB2574 -> BB2575 [tailport=s, headport=n, headlabel="      2575"]
BB2574 -> BB2587 [tailport=s, headport=n, color=gray]
BB2575 [shape=record label="{8382: read-variable['typeSuffixRegex',v17,-]|8383: read-property[v17,'test',-]|8384: \<variable-non-null-undef\>['typeSuffixRegex']|8385: read-variable['key',v18,-]}" ] 
BB2575 -> BB2576 [tailport=s, headport=n, headlabel="      2576"]
BB2575 -> BB2587 [tailport=s, headport=n, color=gray]
BB2576 [shape=record label="{8386: call-typeSuffixRegex.test [v17,'test',v18,v15]}" ] 
BB2576 -> BB2577 [tailport=s, headport=n, headlabel="      2577"]
BB2576 -> BB2587 [tailport=s, headport=n, color=gray]
BB2577 [shape=record label="{8387: if[v15](true-block:2578,false-block:2585)}" ] 
BB2577 -> BB2578 [tailport=s, headport=n, headlabel="      2578"]
BB2577 -> BB2585 [tailport=s, headport=n]
BB2578 [shape=record label="{8388: read-variable['namespace',v20,-]|8389: read-variable['key',v21,-]|8390: read-property[v20,v21,v19]|8391: \<variable-non-null-undef\>['namespace']|8392: write-variable[v19,'klass']*|8393: read-variable['typeOf',v26,v25]|8394: read-variable['klass',v27,-]}" ] 
BB2578 -> BB2579 [tailport=s, headport=n, headlabel="      2579"]
BB2578 -> BB2587 [tailport=s, headport=n, color=gray]
BB2579 [shape=record label="{8395: call-typeOf [v25,v26,v27,v23]}" ] 
BB2579 -> BB2580 [tailport=s, headport=n, headlabel="      2580"]
BB2579 -> BB2587 [tailport=s, headport=n, color=gray]
BB2580 [shape=record label="{8396: constant[\"class\",v24]|8397: ===[v23,v24,v22]|8398: if[v22](true-block:2581,false-block:2585)}" ] 
BB2580 -> BB2581 [tailport=s, headport=n, headlabel="      2581"]
BB2580 -> BB2585 [tailport=s, headport=n]
BB2580 -> BB2587 [tailport=s, headport=n, color=gray]
BB2581 [shape=record label="{8399: read-variable['types',v29,-]|8400: read-property[v29,'push',-]|8401: \<variable-non-null-undef\>['types']|8402: read-variable['dasherize',v32,v31]|8403: read-variable['key',v35,-]|8404: read-property[v35,'replace',-]|8405: \<variable-non-null-undef\>['key']|8406: read-variable['typeSuffixRegex',v36,-]|8407: constant[\"\",v37]}" ] 
BB2581 -> BB2582 [tailport=s, headport=n, headlabel="      2582"]
BB2581 -> BB2587 [tailport=s, headport=n, color=gray]
BB2582 [shape=record label="{8408: call-key.replace [v35,'replace',v36,v37,v33]}" ] 
BB2582 -> BB2583 [tailport=s, headport=n, headlabel="      2583"]
BB2582 -> BB2587 [tailport=s, headport=n, color=gray]
BB2583 [shape=record label="{8409: call-dasherize [v31,v32,v33,v30]}" ] 
BB2583 -> BB2584 [tailport=s, headport=n, headlabel="      2584"]
BB2583 -> BB2587 [tailport=s, headport=n, color=gray]
BB2584 [shape=record label="{8410: call-types.push [v29,'push',v30,-]*}" ] 
BB2584 -> BB2585 [tailport=s, headport=n]
BB2584 -> BB2587 [tailport=s, headport=n, color=gray]
BB2585 [shape=record label="{8411: end-for-in(begin-node:8370)}" ] 
BB2585 -> BB2571 [tailport=s, headport=n]
BB2586 [shape=record label="{8412: return[v1]}" ] 
BB2587 [shape=record label="{8413: exceptional-return}" ] 
//#$~ 4276
}
