digraph {
rankdir="TD"
BB_entry96[shape=none,label=""];
BB_entry96 -> BB1561 [tailport=s, headport=n, headlabel="    1561"]
BB1561 [shape=record label="{5152: constant[undefined,v1]|5153: vardecl['keys']|5154: vardecl['i']|5155: vardecl['key']|5156: vardecl['len']}" ] 
BB1561 -> BB1562 [tailport=s, headport=n, headlabel="      1562"]
BB1562 [shape=record label="{5157: read-variable['Lang',v5,-]|5158: read-property[v5,'isObject',-]|5159: \<variable-non-null-undef\>['Lang']|5160: read-variable['obj',v6,-]}" ] 
BB1562 -> BB1563 [tailport=s, headport=n, headlabel="      1563"]
BB1562 -> BB1604 [tailport=s, headport=n, color=gray, headlabel="      1604"]
BB1563 [shape=record label="{5161: call-Lang.isObject [v5,'isObject',v6,v3]}" ] 
BB1563 -> BB1564 [tailport=s, headport=n, headlabel="      1564"]
BB1563 -> BB1604 [tailport=s, headport=n, color=gray]
BB1564 [shape=record label="{5162: ![v3,v2]|5163: if[v2](true-block:1565,false-block:1568)}" ] 
BB1564 -> BB1565 [tailport=s, headport=n, headlabel="      1565"]
BB1564 -> BB1568 [tailport=s, headport=n, headlabel="      1568"]
BB1564 -> BB1604 [tailport=s, headport=n, color=gray]
BB1565 [shape=record label="{5164: read-variable['TypeError',v8,-]|5165: constant[\"Object.keys called on a non-object\",v9]}" ] 
BB1565 -> BB1566 [tailport=s, headport=n, headlabel="      1566"]
BB1565 -> BB1604 [tailport=s, headport=n, color=gray]
BB1566 [shape=record label="{5166: construct [-,v8,v9,v7]}" ] 
BB1566 -> BB1567 [tailport=s, headport=n, headlabel="      1567"]
BB1566 -> BB1604 [tailport=s, headport=n, color=gray]
BB1567 [shape=record label="{5167: throw[v7]*}" ] 
BB1567 -> BB1568 [tailport=s, headport=n]
BB1567 -> BB1604 [tailport=s, headport=n, color=gray]
BB1568 [shape=record label="{5168: read-variable['Array',v8,-]}" ] 
BB1568 -> BB1569 [tailport=s, headport=n, headlabel="      1569"]
BB1568 -> BB1604 [tailport=s, headport=n, color=gray]
BB1569 [shape=record label="{5169: construct [-,v8,v7]}" ] 
BB1569 -> BB1570 [tailport=s, headport=n, headlabel="      1570"]
BB1569 -> BB1604 [tailport=s, headport=n, color=gray]
BB1570 [shape=record label="{5170: write-variable[v7,'keys']*|5171: read-variable['hasProtoEnumBug',v9,-]|5172: if[v9](true-block:1571,false-block:1572)}" ] 
BB1570 -> BB1572 [tailport=s, headport=n, headlabel="      1572"]
BB1570 -> BB1571 [tailport=s, headport=n, headlabel="      1571"]
BB1570 -> BB1604 [tailport=s, headport=n, color=gray]
BB1571 [shape=record label="{5173: typeof['obj',v10]|5174: constant[\"function\",v11]|5175: ===[v10,v11,v9]}" ] 
BB1571 -> BB1572 [tailport=s, headport=n]
BB1571 -> BB1604 [tailport=s, headport=n, color=gray]
BB1572 [shape=record label="{5176: if[v9](true-block:1573,false-block:1574)}" ] 
BB1572 -> BB1573 [tailport=s, headport=n, headlabel="      1573"]
BB1572 -> BB1574 [tailport=s, headport=n, headlabel="      1574"]
BB1573 [shape=record label="{5177: read-variable['obj',v11,-]}" ] 
BB1573 -> BB1575 [tailport=s, headport=n, headlabel="      1575"]
BB1573 -> BB1604 [tailport=s, headport=n, color=gray]
BB1574 [shape=record label="{5178: read-variable['obj',v11,-]}" ] 
BB1574 -> BB1585 [tailport=s, headport=n, headlabel="      1585"]
BB1574 -> BB1604 [tailport=s, headport=n, color=gray]
BB1575 [shape=record label="{5179: begin-for-in[v11,v12]}" ] 
BB1575 -> BB1576 [tailport=s, headport=n, headlabel="      1576"]
BB1575 -> BB1604 [tailport=s, headport=n, color=gray]
BB1576 [shape=record label="{5180: has-next[v12,v13]|5181: if[v13](true-block:1577,false-block:1593)}" ] 
BB1576 -> BB1577 [tailport=s, headport=n, headlabel="      1577"]
BB1576 -> BB1593 [tailport=s, headport=n, headlabel="      1593"]
BB1577 [shape=record label="{5182: next-property[v12,v14]|5183: write-variable[v14,'key']|5184: read-variable['owns',v17,v16]|5185: read-variable['obj',v18,-]|5186: read-variable['key',v19,-]}" ] 
BB1577 -> BB1578 [tailport=s, headport=n, headlabel="      1578"]
BB1577 -> BB1604 [tailport=s, headport=n, color=gray]
BB1578 [shape=record label="{5187: call-owns [v16,v17,v18,v19,v15]}" ] 
BB1578 -> BB1579 [tailport=s, headport=n, headlabel="      1579"]
BB1578 -> BB1604 [tailport=s, headport=n, color=gray]
BB1579 [shape=record label="{5188: if[v15](true-block:1580,false-block:1581)}" ] 
BB1579 -> BB1581 [tailport=s, headport=n, headlabel="      1581"]
BB1579 -> BB1580 [tailport=s, headport=n, headlabel="      1580"]
BB1580 [shape=record label="{5189: read-variable['key',v20,-]|5190: constant[\"prototype\",v21]|5191: !==[v20,v21,v15]}" ] 
BB1580 -> BB1581 [tailport=s, headport=n]
BB1580 -> BB1604 [tailport=s, headport=n, color=gray]
BB1581 [shape=record label="{5192: if[v15](true-block:1582,false-block:1584)}" ] 
BB1581 -> BB1582 [tailport=s, headport=n, headlabel="      1582"]
BB1581 -> BB1584 [tailport=s, headport=n, headlabel="      1584"]
BB1582 [shape=record label="{5193: read-variable['keys',v21,-]|5194: read-property[v21,'push',-]|5195: \<variable-non-null-undef\>['keys']|5196: read-variable['key',v22,-]}" ] 
BB1582 -> BB1583 [tailport=s, headport=n, headlabel="      1583"]
BB1582 -> BB1604 [tailport=s, headport=n, color=gray]
BB1583 [shape=record label="{5197: call-keys.push [v21,'push',v22,-]*}" ] 
BB1583 -> BB1584 [tailport=s, headport=n]
BB1583 -> BB1604 [tailport=s, headport=n, color=gray]
BB1584 [shape=record label="{5198: end-for-in(begin-node:5179)}" ] 
BB1584 -> BB1576 [tailport=s, headport=n]
BB1585 [shape=record label="{5199: begin-for-in[v11,v12]}" ] 
BB1585 -> BB1586 [tailport=s, headport=n, headlabel="      1586"]
BB1585 -> BB1604 [tailport=s, headport=n, color=gray]
BB1586 [shape=record label="{5200: has-next[v12,v13]|5201: if[v13](true-block:1587,false-block:1593)}" ] 
BB1586 -> BB1587 [tailport=s, headport=n, headlabel="      1587"]
BB1586 -> BB1593 [tailport=s, headport=n]
BB1587 [shape=record label="{5202: next-property[v12,v14]|5203: write-variable[v14,'key']|5204: read-variable['owns',v17,v16]|5205: read-variable['obj',v18,-]|5206: read-variable['key',v19,-]}" ] 
BB1587 -> BB1588 [tailport=s, headport=n, headlabel="      1588"]
BB1587 -> BB1604 [tailport=s, headport=n, color=gray]
BB1588 [shape=record label="{5207: call-owns [v16,v17,v18,v19,v15]}" ] 
BB1588 -> BB1589 [tailport=s, headport=n, headlabel="      1589"]
BB1588 -> BB1604 [tailport=s, headport=n, color=gray]
BB1589 [shape=record label="{5208: if[v15](true-block:1590,false-block:1592)}" ] 
BB1589 -> BB1590 [tailport=s, headport=n, headlabel="      1590"]
BB1589 -> BB1592 [tailport=s, headport=n, headlabel="      1592"]
BB1590 [shape=record label="{5209: read-variable['keys',v21,-]|5210: read-property[v21,'push',-]|5211: \<variable-non-null-undef\>['keys']|5212: read-variable['key',v22,-]}" ] 
BB1590 -> BB1591 [tailport=s, headport=n, headlabel="      1591"]
BB1590 -> BB1604 [tailport=s, headport=n, color=gray]
BB1591 [shape=record label="{5213: call-keys.push [v21,'push',v22,-]*}" ] 
BB1591 -> BB1592 [tailport=s, headport=n]
BB1591 -> BB1604 [tailport=s, headport=n, color=gray]
BB1592 [shape=record label="{5214: end-for-in(begin-node:5199)}" ] 
BB1592 -> BB1586 [tailport=s, headport=n]
BB1593 [shape=record label="{5215: read-variable['hasEnumBug',v10,-]|5216: if[v10](true-block:1594,false-block:1602)}" ] 
BB1593 -> BB1594 [tailport=s, headport=n, headlabel="      1594"]
BB1593 -> BB1602 [tailport=s, headport=n, headlabel="      1602"]
BB1593 -> BB1604 [tailport=s, headport=n, color=gray]
BB1594 [shape=record label="{5217: constant[0.0,v12]|5218: write-variable[v12,'i']|5219: read-variable['forceEnum',v14,-]|5220: read-property[v14,'length',v13]|5221: \<variable-non-null-undef\>['forceEnum']|5222: write-variable[v13,'len']}" ] 
BB1594 -> BB1595 [tailport=s, headport=n, headlabel="      1595"]
BB1594 -> BB1604 [tailport=s, headport=n, color=gray]
BB1595 [shape=record label="{5223: read-variable['i',v15,-]|5224: read-variable['len',v16,-]|5225: \<[v15,v16,v11]|5226: if[v11](true-block:1596,false-block:1602)}" ] 
BB1595 -> BB1596 [tailport=s, headport=n, headlabel="      1596"]
BB1595 -> BB1602 [tailport=s, headport=n]
BB1595 -> BB1604 [tailport=s, headport=n, color=gray]
BB1596 [shape=record label="{5227: read-variable['forceEnum',v18,-]|5228: read-variable['i',v19,-]|5229: read-property[v18,v19,v17]|5230: \<variable-non-null-undef\>['forceEnum']|5231: write-variable[v17,'key']*|5232: read-variable['owns',v22,v21]|5233: read-variable['obj',v23,-]|5234: read-variable['key',v24,-]}" ] 
BB1596 -> BB1597 [tailport=s, headport=n, headlabel="      1597"]
BB1596 -> BB1604 [tailport=s, headport=n, color=gray]
BB1597 [shape=record label="{5235: call-owns [v21,v22,v23,v24,v20]}" ] 
BB1597 -> BB1598 [tailport=s, headport=n, headlabel="      1598"]
BB1597 -> BB1604 [tailport=s, headport=n, color=gray]
BB1598 [shape=record label="{5236: if[v20](true-block:1599,false-block:1601)}" ] 
BB1598 -> BB1599 [tailport=s, headport=n, headlabel="      1599"]
BB1598 -> BB1601 [tailport=s, headport=n, headlabel="      1601"]
BB1599 [shape=record label="{5237: read-variable['keys',v26,-]|5238: read-property[v26,'push',-]|5239: \<variable-non-null-undef\>['keys']|5240: read-variable['key',v27,-]}" ] 
BB1599 -> BB1600 [tailport=s, headport=n, headlabel="      1600"]
BB1599 -> BB1604 [tailport=s, headport=n, color=gray]
BB1600 [shape=record label="{5241: call-keys.push [v26,'push',v27,-]*}" ] 
BB1600 -> BB1601 [tailport=s, headport=n]
BB1600 -> BB1604 [tailport=s, headport=n, color=gray]
BB1601 [shape=record label="{5242: constant[1.0,v25]|5243: read-variable['i',v26,-]|5244: +[v26,v27]|5245: +[v27,v25,v28]|5246: write-variable[v28,'i']}" ] 
BB1601 -> BB1595 [tailport=s, headport=n]
BB1601 -> BB1604 [tailport=s, headport=n, color=gray]
BB1602 [shape=record label="{5247: read-variable['keys',v1,-]}" ] 
BB1602 -> BB1603 [tailport=s, headport=n, headlabel="      1603"]
BB1602 -> BB1604 [tailport=s, headport=n, color=gray]
BB1603 [shape=record label="{5248: return[v1]}" ] 
BB1604 [shape=record label="{5249: exceptional-return}" ] 
//#$~ 3228
}
