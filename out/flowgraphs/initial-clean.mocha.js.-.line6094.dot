digraph {
rankdir="TD"
BB_entry461[shape=none,label=""];
BB_entry461 -> BB5254 [tailport=s, headport=n, headlabel="    5254"]
BB5254 [shape=record label="{16049: constant[undefined,v1]|16050: vardecl['type']|16051: vardecl['json']|16052: vardecl['prop']}" ] 
BB5254 -> BB5255 [tailport=s, headport=n, headlabel="      5255"]
BB5255 [shape=record label="{16053: read-variable['exports',v4,-]|16054: read-property[v4,'type',-]|16055: \<variable-non-null-undef\>['exports']|16056: read-variable['value',v5,-]}" ] 
BB5255 -> BB5256 [tailport=s, headport=n, headlabel="      5256"]
BB5255 -> BB5296 [tailport=s, headport=n, color=gray, headlabel="      5296"]
BB5256 [shape=record label="{16057: call-exports.type [v4,'type',v5,v2]}" ] 
BB5256 -> BB5257 [tailport=s, headport=n, headlabel="      5257"]
BB5256 -> BB5296 [tailport=s, headport=n, color=gray]
BB5257 [shape=record label="{16058: write-variable[v2,'type']*|16059: read-variable['exports',v10,-]|16060: read-property[v10,'indexOf',-]|16061: \<variable-non-null-undef\>['exports']|16062: read-variable['Array',v12,-]|16063: constant[\"object\",v13]|16064: constant[\"array\",v14]|16065: constant[\"function\",v15]}" ] 
BB5257 -> BB5258 [tailport=s, headport=n, headlabel="      5258"]
BB5257 -> BB5296 [tailport=s, headport=n, color=gray]
BB5258 [shape=record label="{16066: construct [-,v12,v13,v14,v15,v11]}" ] 
BB5258 -> BB5259 [tailport=s, headport=n, headlabel="      5259"]
BB5258 -> BB5296 [tailport=s, headport=n, color=gray]
BB5259 [shape=record label="{16067: read-variable['type',v16,-]}" ] 
BB5259 -> BB5260 [tailport=s, headport=n, headlabel="      5260"]
BB5259 -> BB5296 [tailport=s, headport=n, color=gray]
BB5260 [shape=record label="{16068: call-exports.indexOf [v10,'indexOf',v11,v16,v8]}" ] 
BB5260 -> BB5261 [tailport=s, headport=n, headlabel="      5261"]
BB5260 -> BB5296 [tailport=s, headport=n, color=gray]
BB5261 [shape=record label="{16069: ~[v8,v7]|16070: ![v7,v6]|16071: if[v6](true-block:5262,false-block:5278)}" ] 
BB5261 -> BB5262 [tailport=s, headport=n, headlabel="      5262"]
BB5261 -> BB5278 [tailport=s, headport=n, headlabel="      5278"]
BB5261 -> BB5296 [tailport=s, headport=n, color=gray]
BB5262 [shape=record label="{16072: read-variable['type',v18,-]|16073: constant[\"buffer\",v19]|16074: !=[v18,v19,v17]|16075: if[v17](true-block:5263,false-block:5265)}" ] 
BB5262 -> BB5263 [tailport=s, headport=n, headlabel="      5263"]
BB5262 -> BB5265 [tailport=s, headport=n, headlabel="      5265"]
BB5262 -> BB5296 [tailport=s, headport=n, color=gray]
BB5263 [shape=record label="{16076: read-variable['jsonStringify',v21,v20]|16077: read-variable['value',v22,-]}" ] 
BB5263 -> BB5264 [tailport=s, headport=n, headlabel="      5264"]
BB5263 -> BB5296 [tailport=s, headport=n, color=gray]
BB5264 [shape=record label="{16078: call-jsonStringify [v20,v21,v22,v1]}" ] 
BB5264 -> BB5295 [tailport=s, headport=n, headlabel="      5295"]
BB5264 -> BB5296 [tailport=s, headport=n, color=gray]
BB5265 [shape=record label="{16079: read-variable['value',v22,-]|16080: read-property[v22,'toJSON',-]|16081: \<variable-non-null-undef\>['value']}" ] 
BB5265 -> BB5266 [tailport=s, headport=n, headlabel="      5266"]
BB5265 -> BB5296 [tailport=s, headport=n, color=gray]
BB5266 [shape=record label="{16082: call-value.toJSON [v22,'toJSON',v20]}" ] 
BB5266 -> BB5267 [tailport=s, headport=n, headlabel="      5267"]
BB5266 -> BB5296 [tailport=s, headport=n, color=gray]
BB5267 [shape=record label="{16083: write-variable[v20,'json']*|16084: read-variable['jsonStringify',v26,v25]|16085: read-variable['json',v29,-]|16086: read-property[v29,'data',v28]|16087: \<variable-non-null-undef\>['json']|16088: if[v28](true-block:5268,false-block:5269)}" ] 
BB5267 -> BB5269 [tailport=s, headport=n, headlabel="      5269"]
BB5267 -> BB5268 [tailport=s, headport=n, headlabel="      5268"]
BB5267 -> BB5296 [tailport=s, headport=n, color=gray]
BB5268 [shape=record label="{16089: read-variable['json',v30,-]|16090: read-property[v30,'type',v28]|16091: \<variable-non-null-undef\>['json']}" ] 
BB5268 -> BB5269 [tailport=s, headport=n]
BB5268 -> BB5296 [tailport=s, headport=n, color=gray]
BB5269 [shape=record label="{16092: if[v28](true-block:5270,false-block:5271)}" ] 
BB5269 -> BB5270 [tailport=s, headport=n, headlabel="      5270"]
BB5269 -> BB5271 [tailport=s, headport=n, headlabel="      5271"]
BB5270 [shape=record label="{16093: read-variable['json',v30,-]|16094: read-property[v30,'data',v27]|16095: \<variable-non-null-undef\>['json']}" ] 
BB5270 -> BB5272 [tailport=s, headport=n, headlabel="      5272"]
BB5270 -> BB5296 [tailport=s, headport=n, color=gray]
BB5271 [shape=record label="{16096: read-variable['json',v27,-]}" ] 
BB5271 -> BB5272 [tailport=s, headport=n]
BB5271 -> BB5296 [tailport=s, headport=n, color=gray]
BB5272 [shape=record label="{16097: constant[2.0,v30]}" ] 
BB5272 -> BB5273 [tailport=s, headport=n, headlabel="      5273"]
BB5273 [shape=record label="{16098: call-jsonStringify [v25,v26,v27,v30,v24]}" ] 
BB5273 -> BB5274 [tailport=s, headport=n, headlabel="      5274"]
BB5273 -> BB5296 [tailport=s, headport=n, color=gray]
BB5274 [shape=record label="{16099: read-property[v24,'replace',-]|16100: read-variable['RegExp',v32,-]|16101: constant[\",(\\\\n|$)\",v33]|16102: constant[\"g\",v34]}" ] 
BB5274 -> BB5275 [tailport=s, headport=n, headlabel="      5275"]
BB5274 -> BB5296 [tailport=s, headport=n, color=gray]
BB5275 [shape=record label="{16103: construct [-,v32,v33,v34,v31]}" ] 
BB5275 -> BB5276 [tailport=s, headport=n, headlabel="      5276"]
BB5275 -> BB5296 [tailport=s, headport=n, color=gray]
BB5276 [shape=record label="{16104: constant[\"$1\",v35]}" ] 
BB5276 -> BB5277 [tailport=s, headport=n, headlabel="      5277"]
BB5277 [shape=record label="{16105: call-null [v24,'replace',v31,v35,v1]}" ] 
BB5277 -> BB5295 [tailport=s, headport=n]
BB5277 -> BB5296 [tailport=s, headport=n, color=gray]
BB5278 [shape=record label="{16106: read-variable['value',v18,-]}" ] 
BB5278 -> BB5279 [tailport=s, headport=n, headlabel="      5279"]
BB5278 -> BB5296 [tailport=s, headport=n, color=gray]
BB5279 [shape=record label="{16107: begin-for-in[v18,v19]}" ] 
BB5279 -> BB5280 [tailport=s, headport=n, headlabel="      5280"]
BB5279 -> BB5296 [tailport=s, headport=n, color=gray]
BB5280 [shape=record label="{16108: has-next[v19,v20]|16109: if[v20](true-block:5281,false-block:5293)}" ] 
BB5280 -> BB5281 [tailport=s, headport=n, headlabel="      5281"]
BB5280 -> BB5293 [tailport=s, headport=n, headlabel="      5293"]
BB5281 [shape=record label="{16110: next-property[v19,v21]|16111: write-variable[v21,'prop']|16112: read-variable['Object',v26,-]|16113: read-property[v26,'prototype',v25]|16114: \<variable-non-null-undef\>['Object']|16115: read-property[v25,'hasOwnProperty',v24]|16116: \<property-non-null-undef\>[v26,'prototype']|16117: read-property[v24,'call',-]|16118: \<property-non-null-undef\>[v25,'hasOwnProperty']|16119: read-variable['value',v27,-]|16120: read-variable['prop',v28,-]}" ] 
BB5281 -> BB5282 [tailport=s, headport=n, headlabel="      5282"]
BB5281 -> BB5296 [tailport=s, headport=n, color=gray]
BB5282 [shape=record label="{16121: call-Object.prototype.hasOwnProperty.call [v24,'call',v27,v28,v22]}" ] 
BB5282 -> BB5283 [tailport=s, headport=n, headlabel="      5283"]
BB5282 -> BB5296 [tailport=s, headport=n, color=gray]
BB5283 [shape=record label="{16122: if[v22](true-block:5284,false-block:5292)}" ] 
BB5283 -> BB5284 [tailport=s, headport=n, headlabel="      5284"]
BB5283 -> BB5292 [tailport=s, headport=n, headlabel="      5292"]
BB5284 [shape=record label="{16123: read-variable['jsonStringify',v32,v31]|16124: read-variable['exports',v35,-]|16125: read-property[v35,'canonicalize',-]|16126: \<variable-non-null-undef\>['exports']|16127: read-variable['value',v36,-]}" ] 
BB5284 -> BB5285 [tailport=s, headport=n, headlabel="      5285"]
BB5284 -> BB5296 [tailport=s, headport=n, color=gray]
BB5285 [shape=record label="{16128: call-exports.canonicalize [v35,'canonicalize',v36,v33]}" ] 
BB5285 -> BB5286 [tailport=s, headport=n, headlabel="      5286"]
BB5285 -> BB5296 [tailport=s, headport=n, color=gray]
BB5286 [shape=record label="{16129: constant[2.0,v37]}" ] 
BB5286 -> BB5287 [tailport=s, headport=n, headlabel="      5287"]
BB5287 [shape=record label="{16130: call-jsonStringify [v31,v32,v33,v37,v30]}" ] 
BB5287 -> BB5288 [tailport=s, headport=n, headlabel="      5288"]
BB5287 -> BB5296 [tailport=s, headport=n, color=gray]
BB5288 [shape=record label="{16131: read-property[v30,'replace',-]|16132: read-variable['RegExp',v39,-]|16133: constant[\",(\\\\n|$)\",v40]|16134: constant[\"g\",v41]}" ] 
BB5288 -> BB5289 [tailport=s, headport=n, headlabel="      5289"]
BB5288 -> BB5296 [tailport=s, headport=n, color=gray]
BB5289 [shape=record label="{16135: construct [-,v39,v40,v41,v38]}" ] 
BB5289 -> BB5290 [tailport=s, headport=n, headlabel="      5290"]
BB5289 -> BB5296 [tailport=s, headport=n, color=gray]
BB5290 [shape=record label="{16136: constant[\"$1\",v42]}" ] 
BB5290 -> BB5291 [tailport=s, headport=n, headlabel="      5291"]
BB5291 [shape=record label="{16137: call-null [v30,'replace',v38,v42,v1]}" ] 
BB5291 -> BB5295 [tailport=s, headport=n]
BB5291 -> BB5296 [tailport=s, headport=n, color=gray]
BB5292 [shape=record label="{16138: end-for-in(begin-node:16107)}" ] 
BB5292 -> BB5280 [tailport=s, headport=n]
BB5293 [shape=record label="{16139: read-variable['emptyRepresentation',v23,v22]|16140: read-variable['value',v24,-]|16141: read-variable['type',v25,-]}" ] 
BB5293 -> BB5294 [tailport=s, headport=n, headlabel="      5294"]
BB5293 -> BB5296 [tailport=s, headport=n, color=gray]
BB5294 [shape=record label="{16142: call-emptyRepresentation [v22,v23,v24,v25,v1]}" ] 
BB5294 -> BB5295 [tailport=s, headport=n]
BB5294 -> BB5296 [tailport=s, headport=n, color=gray]
BB5295 [shape=record label="{16143: return[v1]}" ] 
BB5296 [shape=record label="{16144: exceptional-return}" ] 
//#$~ 6113
}
