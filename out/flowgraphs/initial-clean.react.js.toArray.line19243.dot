digraph {
rankdir="TD"
BB_entry809[shape=none,label=""];
BB_entry809 -> BB10706 [tailport=s, headport=n, headlabel="    10706"]
BB10706 [shape=record label="{35139: constant[undefined,v1]|35140: vardecl['length']|35141: vardecl['ret']|35142: vardecl['ii']}" ] 
BB10706 -> BB10707 [tailport=s, headport=n, headlabel="      10707"]
BB10707 [shape=record label="{35143: read-variable['obj',v3,-]|35144: read-property[v3,'length',v2]|35145: \<variable-non-null-undef\>['obj']|35146: write-variable[v2,'length']*|35147: constant[\"production\",v5]|35148: constant[\"development\",v6]|35149: !==[v5,v6,v4]|35150: if[v4](true-block:10708,false-block:10709)}" ] 
BB10707 -> BB10708 [tailport=s, headport=n, headlabel="      10708"]
BB10707 -> BB10709 [tailport=s, headport=n, headlabel="      10709"]
BB10707 -> BB10747 [tailport=s, headport=n, color=gray, headlabel="      10747"]
BB10708 [shape=record label="{35151: read-variable['invariant',v8,v7]|35152: read-variable['Array',v12,-]|35153: read-property[v12,'isArray',-]|35154: \<variable-non-null-undef\>['Array']|35155: read-variable['obj',v13,-]}" ] 
BB10708 -> BB10710 [tailport=s, headport=n, headlabel="      10710"]
BB10708 -> BB10747 [tailport=s, headport=n, color=gray]
BB10709 [shape=record label="{35156: read-variable['invariant',v8,v7]|35157: read-variable['Array',v12,-]|35158: read-property[v12,'isArray',-]|35159: \<variable-non-null-undef\>['Array']|35160: read-variable['obj',v13,-]}" ] 
BB10709 -> BB10716 [tailport=s, headport=n, headlabel="      10716"]
BB10709 -> BB10747 [tailport=s, headport=n, color=gray]
BB10710 [shape=record label="{35161: call-Array.isArray [v12,'isArray',v13,v10]}" ] 
BB10710 -> BB10711 [tailport=s, headport=n, headlabel="      10711"]
BB10710 -> BB10747 [tailport=s, headport=n, color=gray]
BB10711 [shape=record label="{35162: ![v10,v9]|35163: if[v9](true-block:10712,false-block:10714)}" ] 
BB10711 -> BB10714 [tailport=s, headport=n, headlabel="      10714"]
BB10711 -> BB10712 [tailport=s, headport=n, headlabel="      10712"]
BB10711 -> BB10747 [tailport=s, headport=n, color=gray]
BB10712 [shape=record label="{35164: typeof['obj',v14]|35165: constant[\"object\",v15]|35166: ===[v14,v15,v9]|35167: if[v9](true-block:10714,false-block:10713)}" ] 
BB10712 -> BB10714 [tailport=s, headport=n]
BB10712 -> BB10713 [tailport=s, headport=n, headlabel="      10713"]
BB10712 -> BB10747 [tailport=s, headport=n, color=gray]
BB10713 [shape=record label="{35168: typeof['obj',v14]|35169: constant[\"function\",v15]|35170: ===[v14,v15,v9]}" ] 
BB10713 -> BB10714 [tailport=s, headport=n]
BB10713 -> BB10747 [tailport=s, headport=n, color=gray]
BB10714 [shape=record label="{35171: constant[\"toArray: Array-like object expected\",v14]}" ] 
BB10714 -> BB10715 [tailport=s, headport=n, headlabel="      10715"]
BB10715 [shape=record label="{35172: call-invariant [v7,v8,v9,v14,-]}" ] 
BB10715 -> BB10721 [tailport=s, headport=n, headlabel="      10721"]
BB10715 -> BB10747 [tailport=s, headport=n, color=gray]
BB10716 [shape=record label="{35173: call-Array.isArray [v12,'isArray',v13,v10]}" ] 
BB10716 -> BB10717 [tailport=s, headport=n, headlabel="      10717"]
BB10716 -> BB10747 [tailport=s, headport=n, color=gray]
BB10717 [shape=record label="{35174: ![v10,v9]|35175: if[v9](true-block:10718,false-block:10720)}" ] 
BB10717 -> BB10720 [tailport=s, headport=n, headlabel="      10720"]
BB10717 -> BB10718 [tailport=s, headport=n, headlabel="      10718"]
BB10717 -> BB10747 [tailport=s, headport=n, color=gray]
BB10718 [shape=record label="{35176: typeof['obj',v14]|35177: constant[\"object\",v15]|35178: ===[v14,v15,v9]|35179: if[v9](true-block:10720,false-block:10719)}" ] 
BB10718 -> BB10720 [tailport=s, headport=n]
BB10718 -> BB10719 [tailport=s, headport=n, headlabel="      10719"]
BB10718 -> BB10747 [tailport=s, headport=n, color=gray]
BB10719 [shape=record label="{35180: typeof['obj',v14]|35181: constant[\"function\",v15]|35182: ===[v14,v15,v9]}" ] 
BB10719 -> BB10720 [tailport=s, headport=n]
BB10719 -> BB10747 [tailport=s, headport=n, color=gray]
BB10720 [shape=record label="{35183: call-invariant [v7,v8,v9,-]}" ] 
BB10720 -> BB10721 [tailport=s, headport=n]
BB10720 -> BB10747 [tailport=s, headport=n, color=gray]
BB10721 [shape=record label="{35184: constant[\"production\",v8]|35185: constant[\"development\",v9]|35186: !==[v8,v9,v7]|35187: if[v7](true-block:10722,false-block:10723)}" ] 
BB10721 -> BB10722 [tailport=s, headport=n, headlabel="      10722"]
BB10721 -> BB10723 [tailport=s, headport=n, headlabel="      10723"]
BB10721 -> BB10747 [tailport=s, headport=n, color=gray]
BB10722 [shape=record label="{35188: read-variable['invariant',v11,v10]|35189: typeof['length',v13]|35190: constant[\"number\",v14]|35191: ===[v13,v14,v12]|35192: constant[\"toArray: Object needs a length property\",v15]}" ] 
BB10722 -> BB10724 [tailport=s, headport=n, headlabel="      10724"]
BB10722 -> BB10747 [tailport=s, headport=n, color=gray]
BB10723 [shape=record label="{35193: read-variable['invariant',v11,v10]|35194: typeof['length',v13]|35195: constant[\"number\",v14]|35196: ===[v13,v14,v12]}" ] 
BB10723 -> BB10725 [tailport=s, headport=n, headlabel="      10725"]
BB10723 -> BB10747 [tailport=s, headport=n, color=gray]
BB10724 [shape=record label="{35197: call-invariant [v10,v11,v12,v15,-]}" ] 
BB10724 -> BB10726 [tailport=s, headport=n, headlabel="      10726"]
BB10724 -> BB10747 [tailport=s, headport=n, color=gray]
BB10725 [shape=record label="{35198: call-invariant [v10,v11,v12,-]}" ] 
BB10725 -> BB10726 [tailport=s, headport=n]
BB10725 -> BB10747 [tailport=s, headport=n, color=gray]
BB10726 [shape=record label="{35199: constant[\"production\",v11]|35200: constant[\"development\",v12]|35201: !==[v11,v12,v10]|35202: if[v10](true-block:10727,false-block:10728)}" ] 
BB10726 -> BB10727 [tailport=s, headport=n, headlabel="      10727"]
BB10726 -> BB10728 [tailport=s, headport=n, headlabel="      10728"]
BB10726 -> BB10747 [tailport=s, headport=n, color=gray]
BB10727 [shape=record label="{35203: read-variable['invariant',v14,v13]|35204: read-variable['length',v16,-]|35205: constant[0.0,v17]|35206: ===[v16,v17,v15]|35207: if[v15](true-block:10730,false-block:10729)}" ] 
BB10727 -> BB10730 [tailport=s, headport=n, headlabel="      10730"]
BB10727 -> BB10729 [tailport=s, headport=n, headlabel="      10729"]
BB10727 -> BB10747 [tailport=s, headport=n, color=gray]
BB10728 [shape=record label="{35208: read-variable['invariant',v14,v13]|35209: read-variable['length',v16,-]|35210: constant[0.0,v17]|35211: ===[v16,v17,v15]|35212: if[v15](true-block:10733,false-block:10732)}" ] 
BB10728 -> BB10733 [tailport=s, headport=n, headlabel="      10733"]
BB10728 -> BB10732 [tailport=s, headport=n, headlabel="      10732"]
BB10728 -> BB10747 [tailport=s, headport=n, color=gray]
BB10729 [shape=record label="{35213: read-variable['length',v18,-]|35214: constant[1.0,v19]|35215: -[v18,v19,v16]|35216: read-variable['obj',v17,-]|35217: in[v16,v17,v15]}" ] 
BB10729 -> BB10730 [tailport=s, headport=n]
BB10729 -> BB10747 [tailport=s, headport=n, color=gray]
BB10730 [shape=record label="{35218: constant[\"toArray: Object should have keys for indices\",v16]}" ] 
BB10730 -> BB10731 [tailport=s, headport=n, headlabel="      10731"]
BB10731 [shape=record label="{35219: call-invariant [v13,v14,v15,v16,-]}" ] 
BB10731 -> BB10734 [tailport=s, headport=n, headlabel="      10734"]
BB10731 -> BB10747 [tailport=s, headport=n, color=gray]
BB10732 [shape=record label="{35220: read-variable['length',v18,-]|35221: constant[1.0,v19]|35222: -[v18,v19,v16]|35223: read-variable['obj',v17,-]|35224: in[v16,v17,v15]}" ] 
BB10732 -> BB10733 [tailport=s, headport=n]
BB10732 -> BB10747 [tailport=s, headport=n, color=gray]
BB10733 [shape=record label="{35225: call-invariant [v13,v14,v15,-]}" ] 
BB10733 -> BB10734 [tailport=s, headport=n]
BB10733 -> BB10747 [tailport=s, headport=n, color=gray]
BB10734 [shape=record label="{35226: read-variable['obj',v14,-]|35227: read-property[v14,'hasOwnProperty',v13]|35228: \<variable-non-null-undef\>['obj']|35229: if[v13](true-block:10735,false-block:10740)}" ] 
BB10734 -> BB10735 [tailport=s, headport=n, headlabel="      10735"]
BB10734 -> BB10740 [tailport=s, headport=n, headlabel="      10740"]
BB10734 -> BB10747 [tailport=s, headport=n, color=gray]
BB10735 [shape=record label="{35230: read-variable['Array',v18,-]|35231: read-property[v18,'prototype',v17]|35232: \<variable-non-null-undef\>['Array']|35233: read-property[v17,'slice',v16]|35234: \<property-non-null-undef\>[v18,'prototype']|35235: read-property[v16,'call',-]|35236: \<property-non-null-undef\>[v17,'slice']|35237: read-variable['obj',v19,-]}" ] 
BB10735 -> BB10736 [tailport=s, headport=n, headlabel="      10736"]
BB10735 -> BB10737 [tailport=s, headport=n, color=gray, headlabel="      10737"]
BB10736 [shape=record label="{35238: call-Array.prototype.slice.call [v16,'call',v19,v1]}" ] 
BB10736 -> BB10746 [tailport=s, headport=n, headlabel="      10746"]
BB10736 -> BB10737 [tailport=s, headport=n, color=gray]
BB10737 [shape=record label="{35239: catch[e,v15]|35240: begin-with[v15]}" ] 
BB10737 -> BB10738 [tailport=s, headport=n, headlabel="      10738"]
BB10737 -> BB10747 [tailport=s, headport=n, color=gray]
BB10738 [shape=record label="{35241: end-with}" ] 
BB10738 -> BB10740 [tailport=s, headport=n]
BB10739 [shape=record label="{35242: end-with}" ] 
BB10739 -> BB10747 [tailport=s, headport=n]
BB10740 [shape=record label="{35243: read-variable['Array',v17,v16]|35244: read-variable['length',v18,-]}" ] 
BB10740 -> BB10741 [tailport=s, headport=n, headlabel="      10741"]
BB10740 -> BB10747 [tailport=s, headport=n, color=gray]
BB10741 [shape=record label="{35245: call-Array [v16,v17,v18,v15]}" ] 
BB10741 -> BB10742 [tailport=s, headport=n, headlabel="      10742"]
BB10741 -> BB10747 [tailport=s, headport=n, color=gray]
BB10742 [shape=record label="{35246: write-variable[v15,'ret']*|35247: constant[0.0,v20]|35248: write-variable[v20,'ii']*}" ] 
BB10742 -> BB10743 [tailport=s, headport=n, headlabel="      10743"]
BB10743 [shape=record label="{35249: read-variable['ii',v21,-]|35250: read-variable['length',v22,-]|35251: \<[v21,v22,v19]|35252: if[v19](true-block:10744,false-block:10745)}" ] 
BB10743 -> BB10744 [tailport=s, headport=n, headlabel="      10744"]
BB10743 -> BB10745 [tailport=s, headport=n, headlabel="      10745"]
BB10743 -> BB10747 [tailport=s, headport=n, color=gray]
BB10744 [shape=record label="{35253: read-variable['ret',v24,-]|35254: read-variable['ii',v25,-]|35255: read-variable['obj',v26,-]|35256: read-variable['ii',v27,-]|35257: read-property[v26,v27,v23]|35258: \<variable-non-null-undef\>['obj']|35259: write-property[v24,v25,v23]|35260: \<variable-non-null-undef\>['ret']*|35261: constant[1.0,v28]|35262: read-variable['ii',v29,-]|35263: +[v29,v30]|35264: +[v30,v28,v31]|35265: write-variable[v31,'ii']}" ] 
BB10744 -> BB10743 [tailport=s, headport=n]
BB10744 -> BB10747 [tailport=s, headport=n, color=gray]
BB10745 [shape=record label="{35266: read-variable['ret',v1,-]}" ] 
BB10745 -> BB10746 [tailport=s, headport=n]
BB10745 -> BB10747 [tailport=s, headport=n, color=gray]
BB10746 [shape=record label="{35267: return[v1]}" ] 
BB10747 [shape=record label="{35268: exceptional-return}" ] 
//#$~ 19284
}
