digraph {
rankdir="TD"
BB_entry217[shape=none,label=""];
BB_entry217 -> BB3417 [tailport=s, headport=n, headlabel="    3417"]
BB3417 [shape=record label="{10398: constant[undefined,v1]|10399: vardecl['i']|10400: vardecl['p']|10401: vardecl['global']|10402: vardecl['dijit']|10403: vardecl['dojox']|10404: vardecl['dojo']|10405: vardecl['scopeMap']|10406: vardecl['packageMap']|10407: vardecl['item']|10408: vardecl['rev']|10409: vardecl['cn']|10410: vardecl['tn']|10411: vardecl['paths']}" ] 
BB3417 -> BB3418 [tailport=s, headport=n, headlabel="      3418"]
BB3418 [shape=record label="{10412: function-expr[function ( ),v3]}" ] 
BB3418 -> BB3419 [tailport=s, headport=n, headlabel="      3419"]
BB3419 [shape=record label="{10413: call-null [-,v3,v2]}" ] 
BB3419 -> BB3420 [tailport=s, headport=n, headlabel="      3420"]
BB3419 -> BB3508 [tailport=s, headport=n, color=gray, headlabel="      3508"]
BB3420 [shape=record label="{10414: write-variable[v2,'global']*|10415: new[v4]|10416: write-variable[v4,'dijit']*|10417: new[v5]|10418: write-variable[v5,'dojox']*|10419: new[v6]|10420: read-variable['config',v7,-]|10421: write-property[v6,'config',v7]|10422: read-variable['global',v8,-]|10423: write-property[v6,'global',v8]|10424: read-variable['dijit',v9,-]|10425: write-property[v6,'dijit',v9]|10426: read-variable['dojox',v10,-]|10427: write-property[v6,'dojox',v10]|10428: write-variable[v6,'dojo']*|10429: new[v11]|10430: read-variable['Array',v13,-]|10431: constant[\"dojo\",v14]|10432: read-variable['dojo',v15,-]}" ] 
BB3420 -> BB3421 [tailport=s, headport=n, headlabel="      3421"]
BB3420 -> BB3508 [tailport=s, headport=n, color=gray]
BB3421 [shape=record label="{10433: construct [-,v13,v14,v15,v12]}" ] 
BB3421 -> BB3422 [tailport=s, headport=n, headlabel="      3422"]
BB3421 -> BB3508 [tailport=s, headport=n, color=gray]
BB3422 [shape=record label="{10434: write-property[v11,'dojo',v12]|10435: read-variable['Array',v17,-]|10436: constant[\"dijit\",v18]|10437: read-variable['dijit',v19,-]}" ] 
BB3422 -> BB3423 [tailport=s, headport=n, headlabel="      3423"]
BB3422 -> BB3508 [tailport=s, headport=n, color=gray]
BB3423 [shape=record label="{10438: construct [-,v17,v18,v19,v16]}" ] 
BB3423 -> BB3424 [tailport=s, headport=n, headlabel="      3424"]
BB3423 -> BB3508 [tailport=s, headport=n, color=gray]
BB3424 [shape=record label="{10439: write-property[v11,'dijit',v16]|10440: read-variable['Array',v21,-]|10441: constant[\"dojox\",v22]|10442: read-variable['dojox',v23,-]}" ] 
BB3424 -> BB3425 [tailport=s, headport=n, headlabel="      3425"]
BB3424 -> BB3508 [tailport=s, headport=n, color=gray]
BB3425 [shape=record label="{10443: construct [-,v21,v22,v23,v20]}" ] 
BB3425 -> BB3426 [tailport=s, headport=n, headlabel="      3426"]
BB3425 -> BB3508 [tailport=s, headport=n, color=gray]
BB3426 [shape=record label="{10444: write-property[v11,'dojox',v20]|10445: write-variable[v11,'scopeMap']*|10446: read-variable['require',v25,-]|10447: read-property[v25,'map',v24]|10448: \<variable-non-null-undef\>['require']|10449: if[v24](true-block:3427,false-block:3431)}" ] 
BB3426 -> BB3431 [tailport=s, headport=n, headlabel="      3431"]
BB3426 -> BB3427 [tailport=s, headport=n, headlabel="      3427"]
BB3426 -> BB3508 [tailport=s, headport=n, color=gray]
BB3427 [shape=record label="{10450: read-variable['require',v27,-]|10451: read-property[v27,'map',v26]|10452: \<variable-non-null-undef\>['require']|10453: read-variable['module',v32,-]|10454: read-property[v32,'id',v31]|10455: \<variable-non-null-undef\>['module']|10456: read-property[v31,'match',-]|10457: \<property-non-null-undef\>[v32,'id']|10458: read-variable['RegExp',v34,-]|10459: constant[\"[^\\\\/]+\",v35]}" ] 
BB3427 -> BB3428 [tailport=s, headport=n, headlabel="      3428"]
BB3427 -> BB3508 [tailport=s, headport=n, color=gray]
BB3428 [shape=record label="{10460: construct [-,v34,v35,v33]}" ] 
BB3428 -> BB3429 [tailport=s, headport=n, headlabel="      3429"]
BB3428 -> BB3508 [tailport=s, headport=n, color=gray]
BB3429 [shape=record label="{10461: call-module.id.match [v31,'match',v33,v29]}" ] 
BB3429 -> BB3430 [tailport=s, headport=n, headlabel="      3430"]
BB3429 -> BB3508 [tailport=s, headport=n, color=gray]
BB3430 [shape=record label="{10462: constant[0.0,v36]|10463: read-property[v29,v36,v28]|10464: read-property[v26,v28,v24]|10465: \<property-non-null-undef\>[v27,'map']}" ] 
BB3430 -> BB3431 [tailport=s, headport=n]
BB3430 -> BB3508 [tailport=s, headport=n, color=gray]
BB3431 [shape=record label="{10466: write-variable[v24,'packageMap']*|10467: read-variable['packageMap',v27,-]}" ] 
BB3431 -> BB3432 [tailport=s, headport=n, headlabel="      3432"]
BB3431 -> BB3508 [tailport=s, headport=n, color=gray]
BB3432 [shape=record label="{10468: begin-for-in[v27,v28]}" ] 
BB3432 -> BB3433 [tailport=s, headport=n, headlabel="      3433"]
BB3432 -> BB3508 [tailport=s, headport=n, color=gray]
BB3433 [shape=record label="{10469: has-next[v28,v29]|10470: if[v29](true-block:3434,false-block:3440)}" ] 
BB3433 -> BB3434 [tailport=s, headport=n, headlabel="      3434"]
BB3433 -> BB3440 [tailport=s, headport=n, headlabel="      3440"]
BB3434 [shape=record label="{10471: next-property[v28,v30]|10472: write-variable[v30,'p']|10473: read-variable['scopeMap',v32,-]|10474: read-variable['p',v33,-]|10475: read-property[v32,v33,v31]|10476: \<variable-non-null-undef\>['scopeMap']|10477: if[v31](true-block:3435,false-block:3436)}" ] 
BB3434 -> BB3435 [tailport=s, headport=n, headlabel="      3435"]
BB3434 -> BB3436 [tailport=s, headport=n, headlabel="      3436"]
BB3434 -> BB3508 [tailport=s, headport=n, color=gray]
BB3435 [shape=record label="{10478: read-variable['scopeMap',v37,-]|10479: read-variable['p',v38,-]|10480: read-property[v37,v38,v35]|10481: \<variable-non-null-undef\>['scopeMap']|10482: constant[0.0,v36]|10483: read-variable['packageMap',v39,-]|10484: read-variable['p',v40,-]|10485: read-property[v39,v40,v34]|10486: \<variable-non-null-undef\>['packageMap']|10487: write-property[v35,v36,v34]|10488: \<property-non-null-undef\>[v37,v38]*}" ] 
BB3435 -> BB3439 [tailport=s, headport=n, headlabel="      3439"]
BB3435 -> BB3508 [tailport=s, headport=n, color=gray]
BB3436 [shape=record label="{10489: read-variable['scopeMap',v35,-]|10490: read-variable['p',v36,-]|10491: read-variable['Array',v37,-]|10492: read-variable['packageMap',v39,-]|10493: read-variable['p',v40,-]|10494: read-property[v39,v40,v38]|10495: \<variable-non-null-undef\>['packageMap']|10496: new[v41]}" ] 
BB3436 -> BB3437 [tailport=s, headport=n, headlabel="      3437"]
BB3436 -> BB3508 [tailport=s, headport=n, color=gray]
BB3437 [shape=record label="{10497: construct [-,v37,v38,v41,v34]}" ] 
BB3437 -> BB3438 [tailport=s, headport=n, headlabel="      3438"]
BB3437 -> BB3508 [tailport=s, headport=n, color=gray]
BB3438 [shape=record label="{10498: write-property[v35,v36,v34]|10499: \<variable-non-null-undef\>['scopeMap']*}" ] 
BB3438 -> BB3439 [tailport=s, headport=n]
BB3438 -> BB3508 [tailport=s, headport=n, color=gray]
BB3439 [shape=record label="{10500: end-for-in(begin-node:10468)}" ] 
BB3439 -> BB3433 [tailport=s, headport=n]
BB3440 [shape=record label="{10501: read-variable['scopeMap',v32,-]}" ] 
BB3440 -> BB3441 [tailport=s, headport=n, headlabel="      3441"]
BB3440 -> BB3508 [tailport=s, headport=n, color=gray]
BB3441 [shape=record label="{10502: begin-for-in[v32,v33]}" ] 
BB3441 -> BB3442 [tailport=s, headport=n, headlabel="      3442"]
BB3441 -> BB3508 [tailport=s, headport=n, color=gray]
BB3442 [shape=record label="{10503: has-next[v33,v34]|10504: if[v34](true-block:3443,false-block:3446)}" ] 
BB3442 -> BB3443 [tailport=s, headport=n, headlabel="      3443"]
BB3442 -> BB3446 [tailport=s, headport=n, headlabel="      3446"]
BB3443 [shape=record label="{10505: next-property[v33,v35]|10506: write-variable[v35,'p']|10507: read-variable['scopeMap',v37,-]|10508: read-variable['p',v38,-]|10509: read-property[v37,v38,v36]|10510: \<variable-non-null-undef\>['scopeMap']|10511: write-variable[v36,'item']*|10512: read-variable['item',v41,-]|10513: constant[1.0,v42]|10514: read-property[v41,v42,v40]|10515: \<variable-non-null-undef\>['item']|10516: read-variable['item',v43,-]|10517: constant[0.0,v44]|10518: read-property[v43,v44,v39]|10519: \<variable-non-null-undef\>['item']|10520: write-property[v40,'_scopeName',v39]|10521: \<property-non-null-undef\>[v41,v42]*|10522: read-variable['config',v47,-]|10523: read-property[v47,'noGlobals',v46]|10524: \<variable-non-null-undef\>['config']|10525: ![v46,v45]|10526: if[v45](true-block:3444,false-block:3445)}" ] 
BB3443 -> BB3444 [tailport=s, headport=n, headlabel="      3444"]
BB3443 -> BB3445 [tailport=s, headport=n, headlabel="      3445"]
BB3443 -> BB3508 [tailport=s, headport=n, color=gray]
BB3444 [shape=record label="{10527: read-variable['global',v49,-]|10528: read-variable['item',v51,-]|10529: constant[0.0,v52]|10530: read-property[v51,v52,v50]|10531: \<variable-non-null-undef\>['item']|10532: read-variable['item',v53,-]|10533: constant[1.0,v54]|10534: read-property[v53,v54,v48]|10535: \<variable-non-null-undef\>['item']|10536: write-property[v49,v50,v48]|10537: \<variable-non-null-undef\>['global']*}" ] 
BB3444 -> BB3445 [tailport=s, headport=n]
BB3444 -> BB3508 [tailport=s, headport=n, color=gray]
BB3445 [shape=record label="{10538: end-for-in(begin-node:10502)}" ] 
BB3445 -> BB3442 [tailport=s, headport=n]
BB3446 [shape=record label="{10539: read-variable['dojo',v37,-]|10540: read-variable['scopeMap',v36,-]|10541: write-property[v37,'scopeMap',v36]|10542: \<variable-non-null-undef\>['dojo']*|10543: read-variable['dojo',v39,-]|10544: read-variable['dojo',v41,-]|10545: read-property[v41,'config',v40]|10546: \<variable-non-null-undef\>['dojo']|10547: read-variable['require',v42,-]|10548: read-property[v42,'baseUrl',v38]|10549: \<variable-non-null-undef\>['require']|10550: write-property[v40,'baseUrl',v38]|10551: \<property-non-null-undef\>[v41,'config']|10552: write-property[v39,'baseUrl',v38]|10553: \<variable-non-null-undef\>['dojo']*|10554: read-variable['dojo',v44,-]|10555: constant[1.0,v45]|10556: ![v45,v43]|10557: if[v43](true-block:3448,false-block:3447)}" ] 
BB3446 -> BB3448 [tailport=s, headport=n, headlabel="      3448"]
BB3446 -> BB3447 [tailport=s, headport=n, headlabel="      3447"]
BB3446 -> BB3508 [tailport=s, headport=n, color=gray]
BB3447 [shape=record label="{10558: read-variable['require',v45,-]|10559: read-property[v45,'async',v43]|10560: \<variable-non-null-undef\>['require']}" ] 
BB3447 -> BB3448 [tailport=s, headport=n]
BB3447 -> BB3508 [tailport=s, headport=n, color=gray]
BB3448 [shape=record label="{10561: write-property[v44,'isAsync',v43]|10562: \<variable-non-null-undef\>['dojo']*|10563: read-variable['dojo',v46,-]|10564: read-variable['config',v47,-]|10565: read-property[v47,'locale',v45]|10566: \<variable-non-null-undef\>['config']|10567: write-property[v46,'locale',v45]|10568: \<variable-non-null-undef\>['dojo']*|10569: constant[\"$Rev: f4fef70 $\",v50]|10570: read-property[v50,'match',-]|10571: read-variable['RegExp',v52,-]|10572: constant[\"[0-9a-f]\\\{7,\\\}\",v53]}" ] 
BB3448 -> BB3449 [tailport=s, headport=n, headlabel="      3449"]
BB3448 -> BB3508 [tailport=s, headport=n, color=gray]
BB3449 [shape=record label="{10573: construct [-,v52,v53,v51]}" ] 
BB3449 -> BB3450 [tailport=s, headport=n, headlabel="      3450"]
BB3449 -> BB3508 [tailport=s, headport=n, color=gray]
BB3450 [shape=record label="{10574: call-null [v50,'match',v51,v48]}" ] 
BB3450 -> BB3451 [tailport=s, headport=n, headlabel="      3451"]
BB3450 -> BB3508 [tailport=s, headport=n, color=gray]
BB3451 [shape=record label="{10575: write-variable[v48,'rev']*|10576: read-variable['dojo',v55,-]|10577: new[v54]|10578: constant[1.0,v56]|10579: write-property[v54,'major',v56]|10580: constant[10.0,v57]|10581: write-property[v54,'minor',v57]|10582: constant[4.0,v58]|10583: write-property[v54,'patch',v58]|10584: constant[\"\",v59]|10585: write-property[v54,'flag',v59]|10586: read-variable['rev',v61,-]|10587: if[v61](true-block:3452,false-block:3453)}" ] 
BB3451 -> BB3452 [tailport=s, headport=n, headlabel="      3452"]
BB3451 -> BB3453 [tailport=s, headport=n, headlabel="      3453"]
BB3451 -> BB3508 [tailport=s, headport=n, color=gray]
BB3452 [shape=record label="{10588: read-variable['rev',v62,-]|10589: constant[0.0,v63]|10590: read-property[v62,v63,v60]|10591: \<variable-non-null-undef\>['rev']}" ] 
BB3452 -> BB3454 [tailport=s, headport=n, headlabel="      3454"]
BB3452 -> BB3508 [tailport=s, headport=n, color=gray]
BB3453 [shape=record label="{10592: read-variable['NaN',v60,-]}" ] 
BB3453 -> BB3454 [tailport=s, headport=n]
BB3453 -> BB3508 [tailport=s, headport=n, color=gray]
BB3454 [shape=record label="{10593: write-property[v54,'revision',v60]|10594: function-expr[function ( ),v62]|10595: write-property[v54,'toString',v62]|10596: write-property[v55,'version',v54]|10597: \<variable-non-null-undef\>['dojo']*|10598: constant[1.0,v63]|10599: if[v63](true-block:3457,false-block:3455)}" ] 
BB3454 -> BB3457 [tailport=s, headport=n, headlabel="      3457"]
BB3454 -> BB3455 [tailport=s, headport=n, headlabel="      3455"]
BB3454 -> BB3508 [tailport=s, headport=n, color=gray]
BB3455 [shape=record label="{10600: read-variable['has',v65,-]|10601: read-property[v65,'add',-]|10602: \<variable-non-null-undef\>['has']|10603: constant[\"extend-dojo\",v66]|10604: constant[1.0,v67]}" ] 
BB3455 -> BB3456 [tailport=s, headport=n, headlabel="      3456"]
BB3455 -> BB3508 [tailport=s, headport=n, color=gray]
BB3456 [shape=record label="{10605: call-has.add [v65,'add',v66,v67,-]}" ] 
BB3456 -> BB3457 [tailport=s, headport=n]
BB3456 -> BB3508 [tailport=s, headport=n, color=gray]
BB3457 [shape=record label="{10606: read-variable['Function',v66,v65]|10607: constant[\"d\",v67]|10608: constant[\"d.eval = function()\\\{return d.global.eval ? d.global.eval(arguments[0]) : eval(arguments[0]);\\\}\",v68]}" ] 
BB3457 -> BB3458 [tailport=s, headport=n, headlabel="      3458"]
BB3457 -> BB3508 [tailport=s, headport=n, color=gray]
BB3458 [shape=record label="{10609: call-Function [v65,v66,v67,v68,v64]}" ] 
BB3458 -> BB3459 [tailport=s, headport=n, headlabel="      3459"]
BB3458 -> BB3508 [tailport=s, headport=n, color=gray]
BB3459 [shape=record label="{10610: read-variable['dojo',v69,-]}" ] 
BB3459 -> BB3460 [tailport=s, headport=n, headlabel="      3460"]
BB3459 -> BB3508 [tailport=s, headport=n, color=gray]
BB3460 [shape=record label="{10611: call-null [-,v64,v69,-]*}" ] 
BB3460 -> BB3461 [tailport=s, headport=n, headlabel="      3461"]
BB3460 -> BB3508 [tailport=s, headport=n, color=gray]
BB3461 [shape=record label="{10612: constant[0.0,v70]|10613: if[v70](true-block:3462,false-block:3463)}" ] 
BB3461 -> BB3462 [tailport=s, headport=n, headlabel="      3462"]
BB3461 -> BB3463 [tailport=s, headport=n, headlabel="      3463"]
BB3462 [shape=record label="{10614: read-variable['dojo',v72,-]|10615: function-expr[function ( exitcode ),v71]|10616: write-property[v72,'exit',v71]|10617: \<variable-non-null-undef\>['dojo']*}" ] 
BB3462 -> BB3464 [tailport=s, headport=n, headlabel="      3464"]
BB3462 -> BB3508 [tailport=s, headport=n, color=gray]
BB3463 [shape=record label="{10618: read-variable['dojo',v72,-]|10619: function-expr[function ( ),v71]|10620: write-property[v72,'exit',v71]|10621: \<variable-non-null-undef\>['dojo']*}" ] 
BB3463 -> BB3464 [tailport=s, headport=n]
BB3463 -> BB3508 [tailport=s, headport=n, color=gray]
BB3464 [shape=record label="{10622: constant[1.0,v71]|10623: if[v71](true-block:3467,false-block:3465)}" ] 
BB3464 -> BB3467 [tailport=s, headport=n, headlabel="      3467"]
BB3464 -> BB3465 [tailport=s, headport=n, headlabel="      3465"]
BB3465 [shape=record label="{10624: read-variable['has',v73,-]|10625: read-property[v73,'add',-]|10626: \<variable-non-null-undef\>['has']|10627: constant[\"dojo-guarantee-console\",v74]|10628: constant[1.0,v75]}" ] 
BB3465 -> BB3466 [tailport=s, headport=n, headlabel="      3466"]
BB3465 -> BB3508 [tailport=s, headport=n, color=gray]
BB3466 [shape=record label="{10629: call-has.add [v73,'add',v74,v75,-]}" ] 
BB3466 -> BB3467 [tailport=s, headport=n]
BB3466 -> BB3508 [tailport=s, headport=n, color=gray]
BB3467 [shape=record label="{10630: constant[1.0,v72]|10631: if[v72](true-block:3468,false-block:3477)}" ] 
BB3467 -> BB3468 [tailport=s, headport=n, headlabel="      3468"]
BB3467 -> BB3477 [tailport=s, headport=n, headlabel="      3477"]
BB3468 [shape=record label="{10632: typeof['console',v74]|10633: constant[\"undefined\",v75]|10634: !=[v74,v75,v73]|10635: if[v73](true-block:3470,false-block:3469)}" ] 
BB3468 -> BB3470 [tailport=s, headport=n, headlabel="      3470"]
BB3468 -> BB3469 [tailport=s, headport=n, headlabel="      3469"]
BB3468 -> BB3508 [tailport=s, headport=n, color=gray]
BB3469 [shape=record label="{10636: new[v74]|10637: write-variable[v74,'console']}" ] 
BB3469 -> BB3470 [tailport=s, headport=n]
BB3470 [shape=record label="{10638: read-variable['Array',v75,-]|10639: constant[\"assert\",v76]|10640: constant[\"count\",v77]|10641: constant[\"debug\",v78]|10642: constant[\"dir\",v79]|10643: constant[\"dirxml\",v80]|10644: constant[\"error\",v81]|10645: constant[\"group\",v82]|10646: constant[\"groupEnd\",v83]|10647: constant[\"info\",v84]|10648: constant[\"profile\",v85]|10649: constant[\"profileEnd\",v86]|10650: constant[\"time\",v87]|10651: constant[\"timeEnd\",v88]|10652: constant[\"trace\",v89]|10653: constant[\"warn\",v90]|10654: constant[\"log\",v91]}" ] 
BB3470 -> BB3471 [tailport=s, headport=n, headlabel="      3471"]
BB3470 -> BB3508 [tailport=s, headport=n, color=gray]
BB3471 [shape=record label="{10655: construct [-,v75,v76,v77,v78,v79,v80,v81,v82,v83,v84,v85,v86,v87,v88,v89,v90,v91,v74]}" ] 
BB3471 -> BB3472 [tailport=s, headport=n, headlabel="      3472"]
BB3471 -> BB3508 [tailport=s, headport=n, color=gray]
BB3472 [shape=record label="{10656: write-variable[v74,'cn']*|10657: constant[0.0,v92]|10658: write-variable[v92,'i']*}" ] 
BB3472 -> BB3473 [tailport=s, headport=n, headlabel="      3473"]
BB3473 [shape=record label="{10659: read-variable['cn',v94,-]|10660: constant[1.0,v96]|10661: read-variable['i',v97,-]|10662: +[v97,v95]|10663: +[v95,v96,v98]|10664: write-variable[v98,'i']|10665: read-property[v94,v95,v93]|10666: \<variable-non-null-undef\>['cn']|10667: write-variable[v93,'tn']|10668: if[v93](true-block:3474,false-block:3477)}" ] 
BB3473 -> BB3474 [tailport=s, headport=n, headlabel="      3474"]
BB3473 -> BB3477 [tailport=s, headport=n]
BB3473 -> BB3508 [tailport=s, headport=n, color=gray]
BB3474 [shape=record label="{10669: read-variable['console',v101,-]|10670: read-variable['tn',v102,-]|10671: read-property[v101,v102,v100]|10672: \<variable-non-null-undef\>['console']|10673: ![v100,v99]|10674: if[v99](true-block:3475,false-block:3473)}" ] 
BB3474 -> BB3475 [tailport=s, headport=n, headlabel="      3475"]
BB3474 -> BB3473 [tailport=s, headport=n]
BB3474 -> BB3508 [tailport=s, headport=n, color=gray]
BB3475 [shape=record label="{10675: function-expr[function ( ),v103]}" ] 
BB3475 -> BB3476 [tailport=s, headport=n, headlabel="      3476"]
BB3476 [shape=record label="{10676: call-null [-,v103,-]*}" ] 
BB3476 -> BB3473 [tailport=s, headport=n]
BB3476 -> BB3508 [tailport=s, headport=n, color=gray]
BB3477 [shape=record label="{10677: read-variable['has',v74,-]|10678: read-property[v74,'add',-]|10679: \<variable-non-null-undef\>['has']|10680: constant[\"dojo-debug-messages\",v75]|10681: read-variable['config',v79,-]|10682: read-property[v79,'isDebug',v78]|10683: \<variable-non-null-undef\>['config']|10684: ![v78,v77]|10685: ![v77,v76]}" ] 
BB3477 -> BB3478 [tailport=s, headport=n, headlabel="      3478"]
BB3477 -> BB3508 [tailport=s, headport=n, color=gray]
BB3478 [shape=record label="{10686: call-has.add [v74,'add',v75,v76,-]*}" ] 
BB3478 -> BB3479 [tailport=s, headport=n, headlabel="      3479"]
BB3478 -> BB3508 [tailport=s, headport=n, color=gray]
BB3479 [shape=record label="{10687: read-variable['dojo',v81,-]|10688: read-variable['dojo',v82,-]|10689: function-expr[function ( ),v80]|10690: write-property[v82,'experimental',v80]|10691: \<variable-non-null-undef\>['dojo']|10692: write-property[v81,'deprecated',v80]|10693: \<variable-non-null-undef\>['dojo']*|10694: read-variable['has',v85,v84]|10695: constant[\"dojo-debug-messages\",v86]}" ] 
BB3479 -> BB3480 [tailport=s, headport=n, headlabel="      3480"]
BB3479 -> BB3508 [tailport=s, headport=n, color=gray]
BB3480 [shape=record label="{10696: call-has [v84,v85,v86,v83]}" ] 
BB3480 -> BB3481 [tailport=s, headport=n, headlabel="      3481"]
BB3480 -> BB3508 [tailport=s, headport=n, color=gray]
BB3481 [shape=record label="{10697: if[v83](true-block:3482,false-block:3483)}" ] 
BB3481 -> BB3482 [tailport=s, headport=n, headlabel="      3482"]
BB3481 -> BB3483 [tailport=s, headport=n, headlabel="      3483"]
BB3482 [shape=record label="{10698: read-variable['dojo',v88,-]|10699: function-expr[function ( behaviour extra removal ),v87]|10700: write-property[v88,'deprecated',v87]|10701: \<variable-non-null-undef\>['dojo']*|10702: read-variable['dojo',v90,-]|10703: function-expr[function ( moduleName extra ),v89]|10704: write-property[v90,'experimental',v89]|10705: \<variable-non-null-undef\>['dojo']*}" ] 
BB3482 -> BB3483 [tailport=s, headport=n]
BB3482 -> BB3508 [tailport=s, headport=n, color=gray]
BB3483 [shape=record label="{10706: constant[1.0,v87]|10707: if[v87](true-block:3486,false-block:3484)}" ] 
BB3483 -> BB3486 [tailport=s, headport=n, headlabel="      3486"]
BB3483 -> BB3484 [tailport=s, headport=n, headlabel="      3484"]
BB3484 [shape=record label="{10708: read-variable['has',v89,-]|10709: read-property[v89,'add',-]|10710: \<variable-non-null-undef\>['has']|10711: constant[\"dojo-modulePaths\",v90]|10712: constant[1.0,v91]}" ] 
BB3484 -> BB3485 [tailport=s, headport=n, headlabel="      3485"]
BB3484 -> BB3508 [tailport=s, headport=n, color=gray]
BB3485 [shape=record label="{10713: call-has.add [v89,'add',v90,v91,-]}" ] 
BB3485 -> BB3486 [tailport=s, headport=n]
BB3485 -> BB3508 [tailport=s, headport=n, color=gray]
BB3486 [shape=record label="{10714: constant[1.0,v88]|10715: if[v88](true-block:3487,false-block:3501)}" ] 
BB3486 -> BB3487 [tailport=s, headport=n, headlabel="      3487"]
BB3486 -> BB3501 [tailport=s, headport=n, headlabel="      3501"]
BB3487 [shape=record label="{10716: read-variable['config',v90,-]|10717: read-property[v90,'modulePaths',v89]|10718: \<variable-non-null-undef\>['config']|10719: if[v89](true-block:3488,false-block:3501)}" ] 
BB3487 -> BB3488 [tailport=s, headport=n, headlabel="      3488"]
BB3487 -> BB3501 [tailport=s, headport=n]
BB3487 -> BB3508 [tailport=s, headport=n, color=gray]
BB3488 [shape=record label="{10720: read-variable['dojo',v92,-]|10721: read-property[v92,'deprecated',-]|10722: \<variable-non-null-undef\>['dojo']|10723: constant[\"dojo.modulePaths\",v93]|10724: constant[\"use paths configuration\",v94]}" ] 
BB3488 -> BB3489 [tailport=s, headport=n, headlabel="      3489"]
BB3488 -> BB3508 [tailport=s, headport=n, color=gray]
BB3489 [shape=record label="{10725: call-dojo.deprecated [v92,'deprecated',v93,v94,-]*}" ] 
BB3489 -> BB3490 [tailport=s, headport=n, headlabel="      3490"]
BB3489 -> BB3508 [tailport=s, headport=n, color=gray]
BB3490 [shape=record label="{10726: new[v95]|10727: write-variable[v95,'paths']*|10728: read-variable['config',v101,-]|10729: read-property[v101,'modulePaths',v97]|10730: \<variable-non-null-undef\>['config']}" ] 
BB3490 -> BB3491 [tailport=s, headport=n, headlabel="      3491"]
BB3490 -> BB3508 [tailport=s, headport=n, color=gray]
BB3491 [shape=record label="{10731: begin-for-in[v97,v98]}" ] 
BB3491 -> BB3492 [tailport=s, headport=n, headlabel="      3492"]
BB3491 -> BB3508 [tailport=s, headport=n, color=gray]
BB3492 [shape=record label="{10732: has-next[v98,v99]|10733: if[v99](true-block:3493,false-block:3499)}" ] 
BB3492 -> BB3493 [tailport=s, headport=n, headlabel="      3493"]
BB3492 -> BB3499 [tailport=s, headport=n, headlabel="      3499"]
BB3493 [shape=record label="{10734: next-property[v98,v100]|10735: write-variable[v100,'p']|10736: read-variable['paths',v103,-]|10737: read-variable['p',v106,-]|10738: read-property[v106,'replace',-]|10739: \<variable-non-null-undef\>['p']|10740: read-variable['RegExp',v108,-]|10741: constant[\"\\\\.\",v109]|10742: constant[\"g\",v110]}" ] 
BB3493 -> BB3494 [tailport=s, headport=n, headlabel="      3494"]
BB3493 -> BB3508 [tailport=s, headport=n, color=gray]
BB3494 [shape=record label="{10743: construct [-,v108,v109,v110,v107]}" ] 
BB3494 -> BB3495 [tailport=s, headport=n, headlabel="      3495"]
BB3494 -> BB3508 [tailport=s, headport=n, color=gray]
BB3495 [shape=record label="{10744: constant[\"/\",v111]}" ] 
BB3495 -> BB3496 [tailport=s, headport=n, headlabel="      3496"]
BB3496 [shape=record label="{10745: call-p.replace [v106,'replace',v107,v111,v104]}" ] 
BB3496 -> BB3497 [tailport=s, headport=n, headlabel="      3497"]
BB3496 -> BB3508 [tailport=s, headport=n, color=gray]
BB3497 [shape=record label="{10746: read-variable['config',v113,-]|10747: read-property[v113,'modulePaths',v112]|10748: \<variable-non-null-undef\>['config']|10749: read-variable['p',v114,-]|10750: read-property[v112,v114,v102]|10751: \<property-non-null-undef\>[v113,'modulePaths']|10752: write-property[v103,v104,v102]|10753: \<variable-non-null-undef\>['paths']*}" ] 
BB3497 -> BB3498 [tailport=s, headport=n, headlabel="      3498"]
BB3497 -> BB3508 [tailport=s, headport=n, color=gray]
BB3498 [shape=record label="{10754: end-for-in(begin-node:10731)}" ] 
BB3498 -> BB3492 [tailport=s, headport=n]
BB3499 [shape=record label="{10755: read-variable['require',v103,v102]|10756: new[v104]|10757: read-variable['paths',v105,-]|10758: write-property[v104,'paths',v105]}" ] 
BB3499 -> BB3500 [tailport=s, headport=n, headlabel="      3500"]
BB3499 -> BB3508 [tailport=s, headport=n, color=gray]
BB3500 [shape=record label="{10759: call-require [v102,v103,v104,-]*}" ] 
BB3500 -> BB3501 [tailport=s, headport=n]
BB3500 -> BB3508 [tailport=s, headport=n, color=gray]
BB3501 [shape=record label="{10760: constant[1.0,v89]|10761: if[v89](true-block:3504,false-block:3502)}" ] 
BB3501 -> BB3504 [tailport=s, headport=n, headlabel="      3504"]
BB3501 -> BB3502 [tailport=s, headport=n, headlabel="      3502"]
BB3502 [shape=record label="{10762: read-variable['has',v91,-]|10763: read-property[v91,'add',-]|10764: \<variable-non-null-undef\>['has']|10765: constant[\"dojo-moduleUrl\",v92]|10766: constant[1.0,v93]}" ] 
BB3502 -> BB3503 [tailport=s, headport=n, headlabel="      3503"]
BB3502 -> BB3508 [tailport=s, headport=n, color=gray]
BB3503 [shape=record label="{10767: call-has.add [v91,'add',v92,v93,-]}" ] 
BB3503 -> BB3504 [tailport=s, headport=n]
BB3503 -> BB3508 [tailport=s, headport=n, color=gray]
BB3504 [shape=record label="{10768: constant[1.0,v90]|10769: if[v90](true-block:3505,false-block:3506)}" ] 
BB3504 -> BB3505 [tailport=s, headport=n, headlabel="      3505"]
BB3504 -> BB3506 [tailport=s, headport=n, headlabel="      3506"]
BB3505 [shape=record label="{10770: read-variable['dojo',v92,-]|10771: function-expr[function ( module url ),v91]|10772: write-property[v92,'moduleUrl',v91]|10773: \<variable-non-null-undef\>['dojo']*}" ] 
BB3505 -> BB3506 [tailport=s, headport=n]
BB3505 -> BB3508 [tailport=s, headport=n, color=gray]
BB3506 [shape=record label="{10774: read-variable['dojo',v92,-]|10775: new[v91]|10776: write-property[v92,'_hasResource',v91]|10777: \<variable-non-null-undef\>['dojo']*|10778: read-variable['dojo',v1,-]}" ] 
BB3506 -> BB3507 [tailport=s, headport=n, headlabel="      3507"]
BB3506 -> BB3508 [tailport=s, headport=n, color=gray]
BB3507 [shape=record label="{10779: return[v1]}" ] 
BB3508 [shape=record label="{10780: exceptional-return}" ] 
//#$~ 4301
}
