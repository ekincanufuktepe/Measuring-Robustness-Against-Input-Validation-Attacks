digraph {
rankdir="TD"
BB_entry297[shape=none,label=""];
BB_entry297 -> BB4800 [tailport=s, headport=n, headlabel="    4800"]
BB4800 [shape=record label="{14984: constant[undefined,v1]}" ] 
BB4800 -> BB4801 [tailport=s, headport=n, headlabel="      4801"]
BB4801 [shape=record label="{14985: read-variable['code',v3,-]|14986: constant[65.0,v4]|14987: \<[v3,v4,v2]|14988: if[v2](true-block:4802,false-block:4803)}" ] 
BB4801 -> BB4802 [tailport=s, headport=n, headlabel="      4802"]
BB4801 -> BB4803 [tailport=s, headport=n, headlabel="      4803"]
BB4801 -> BB4814 [tailport=s, headport=n, color=gray, headlabel="      4814"]
BB4802 [shape=record label="{14989: read-variable['code',v5,-]|14990: constant[36.0,v6]|14991: ===[v5,v6,v1]}" ] 
BB4802 -> BB4813 [tailport=s, headport=n, headlabel="      4813"]
BB4802 -> BB4814 [tailport=s, headport=n, color=gray]
BB4803 [shape=record label="{14992: read-variable['code',v6,-]|14993: constant[91.0,v7]|14994: \<[v6,v7,v5]|14995: if[v5](true-block:4804,false-block:4805)}" ] 
BB4803 -> BB4804 [tailport=s, headport=n, headlabel="      4804"]
BB4803 -> BB4805 [tailport=s, headport=n, headlabel="      4805"]
BB4803 -> BB4814 [tailport=s, headport=n, color=gray]
BB4804 [shape=record label="{14996: constant[true,v1]}" ] 
BB4804 -> BB4813 [tailport=s, headport=n]
BB4805 [shape=record label="{14997: read-variable['code',v9,-]|14998: constant[97.0,v10]|14999: \<[v9,v10,v8]|15000: if[v8](true-block:4806,false-block:4807)}" ] 
BB4805 -> BB4806 [tailport=s, headport=n, headlabel="      4806"]
BB4805 -> BB4807 [tailport=s, headport=n, headlabel="      4807"]
BB4805 -> BB4814 [tailport=s, headport=n, color=gray]
BB4806 [shape=record label="{15001: read-variable['code',v11,-]|15002: constant[95.0,v12]|15003: ===[v11,v12,v1]}" ] 
BB4806 -> BB4813 [tailport=s, headport=n]
BB4806 -> BB4814 [tailport=s, headport=n, color=gray]
BB4807 [shape=record label="{15004: read-variable['code',v12,-]|15005: constant[123.0,v13]|15006: \<[v12,v13,v11]|15007: if[v11](true-block:4808,false-block:4809)}" ] 
BB4807 -> BB4808 [tailport=s, headport=n, headlabel="      4808"]
BB4807 -> BB4809 [tailport=s, headport=n, headlabel="      4809"]
BB4807 -> BB4814 [tailport=s, headport=n, color=gray]
BB4808 [shape=record label="{15008: constant[true,v1]}" ] 
BB4808 -> BB4813 [tailport=s, headport=n]
BB4809 [shape=record label="{15009: read-variable['code',v14,-]|15010: constant[170.0,v15]|15011: \>=[v14,v15,v1]|15012: if[v1](true-block:4810,false-block:4813)}" ] 
BB4809 -> BB4813 [tailport=s, headport=n]
BB4809 -> BB4810 [tailport=s, headport=n, headlabel="      4810"]
BB4809 -> BB4814 [tailport=s, headport=n, color=gray]
BB4810 [shape=record label="{15013: read-variable['nonASCIIidentifierStart',v17,-]|15014: read-property[v17,'test',-]|15015: \<variable-non-null-undef\>['nonASCIIidentifierStart']|15016: read-variable['String',v20,-]|15017: read-property[v20,'fromCharCode',-]|15018: \<variable-non-null-undef\>['String']|15019: read-variable['code',v21,-]}" ] 
BB4810 -> BB4811 [tailport=s, headport=n, headlabel="      4811"]
BB4810 -> BB4814 [tailport=s, headport=n, color=gray]
BB4811 [shape=record label="{15020: call-String.fromCharCode [v20,'fromCharCode',v21,v18]}" ] 
BB4811 -> BB4812 [tailport=s, headport=n, headlabel="      4812"]
BB4811 -> BB4814 [tailport=s, headport=n, color=gray]
BB4812 [shape=record label="{15021: call-nonASCIIidentifierStart.test [v17,'test',v18,v1]}" ] 
BB4812 -> BB4813 [tailport=s, headport=n]
BB4812 -> BB4814 [tailport=s, headport=n, color=gray]
BB4813 [shape=record label="{15022: return[v1]}" ] 
BB4814 [shape=record label="{15023: exceptional-return}" ] 
//#$~ 5085
}
