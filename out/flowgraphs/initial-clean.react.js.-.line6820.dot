digraph {
rankdir="TD"
BB_entry246[shape=none,label=""];
BB_entry246 -> BB3523 [tailport=s, headport=n, headlabel="    3523"]
BB3523 [shape=record label="{12333: constant[undefined,v1]|12334: vardecl['inst']|12335: vardecl['queue']|12336: vardecl['replace']|12337: vardecl['nextState']|12338: vardecl['i']|12339: vardecl['partial']}" ] 
BB3523 -> BB3524 [tailport=s, headport=n, headlabel="      3524"]
BB3524 [shape=record label="{12340: read-variable['this',v3,-]|12341: read-property[v3,'_instance',v2]|12342: write-variable[v2,'inst']*|12343: read-variable['this',v5,-]|12344: read-property[v5,'_pendingStateQueue',v4]|12345: write-variable[v4,'queue']*|12346: read-variable['this',v7,-]|12347: read-property[v7,'_pendingReplaceState',v6]|12348: write-variable[v6,'replace']*|12349: read-variable['this',v9,-]|12350: constant[false,v8]|12351: write-property[v9,'_pendingReplaceState',v8]*|12352: read-variable['this',v11,-]|12353: constant[null,v10]|12354: write-property[v11,'_pendingStateQueue',v10]*|12355: read-variable['queue',v13,-]|12356: ![v13,v12]|12357: if[v12](true-block:3525,false-block:3526)}" ] 
BB3524 -> BB3525 [tailport=s, headport=n, headlabel="      3525"]
BB3524 -> BB3526 [tailport=s, headport=n, headlabel="      3526"]
BB3524 -> BB3543 [tailport=s, headport=n, color=gray, headlabel="      3543"]
BB3525 [shape=record label="{12358: read-variable['inst',v14,-]|12359: read-property[v14,'state',v1]|12360: \<variable-non-null-undef\>['inst']}" ] 
BB3525 -> BB3542 [tailport=s, headport=n, headlabel="      3542"]
BB3525 -> BB3543 [tailport=s, headport=n, color=gray]
BB3526 [shape=record label="{12361: read-variable['assign',v16,v15]|12362: new[v17]|12363: read-variable['replace',v19,-]|12364: if[v19](true-block:3527,false-block:3528)}" ] 
BB3526 -> BB3527 [tailport=s, headport=n, headlabel="      3527"]
BB3526 -> BB3528 [tailport=s, headport=n, headlabel="      3528"]
BB3526 -> BB3543 [tailport=s, headport=n, color=gray]
BB3527 [shape=record label="{12365: read-variable['queue',v20,-]|12366: constant[0.0,v21]|12367: read-property[v20,v21,v18]|12368: \<variable-non-null-undef\>['queue']}" ] 
BB3527 -> BB3529 [tailport=s, headport=n, headlabel="      3529"]
BB3527 -> BB3543 [tailport=s, headport=n, color=gray]
BB3528 [shape=record label="{12369: read-variable['inst',v20,-]|12370: read-property[v20,'state',v18]|12371: \<variable-non-null-undef\>['inst']}" ] 
BB3528 -> BB3529 [tailport=s, headport=n]
BB3528 -> BB3543 [tailport=s, headport=n, color=gray]
BB3529 [shape=record label="{12372: call-assign [v15,v16,v17,v18,v14]}" ] 
BB3529 -> BB3530 [tailport=s, headport=n, headlabel="      3530"]
BB3529 -> BB3543 [tailport=s, headport=n, color=gray]
BB3530 [shape=record label="{12373: write-variable[v14,'nextState']*|12374: read-variable['replace',v22,-]|12375: if[v22](true-block:3531,false-block:3532)}" ] 
BB3530 -> BB3531 [tailport=s, headport=n, headlabel="      3531"]
BB3530 -> BB3532 [tailport=s, headport=n, headlabel="      3532"]
BB3530 -> BB3543 [tailport=s, headport=n, color=gray]
BB3531 [shape=record label="{12376: constant[1.0,v21]}" ] 
BB3531 -> BB3533 [tailport=s, headport=n, headlabel="      3533"]
BB3532 [shape=record label="{12377: constant[0.0,v21]}" ] 
BB3532 -> BB3533 [tailport=s, headport=n]
BB3533 [shape=record label="{12378: write-variable[v21,'i']*}" ] 
BB3533 -> BB3534 [tailport=s, headport=n, headlabel="      3534"]
BB3534 [shape=record label="{12379: read-variable['i',v23,-]|12380: read-variable['queue',v25,-]|12381: read-property[v25,'length',v24]|12382: \<variable-non-null-undef\>['queue']|12383: \<[v23,v24,v20]|12384: if[v20](true-block:3535,false-block:3536)}" ] 
BB3534 -> BB3535 [tailport=s, headport=n, headlabel="      3535"]
BB3534 -> BB3536 [tailport=s, headport=n, headlabel="      3536"]
BB3534 -> BB3543 [tailport=s, headport=n, color=gray]
BB3535 [shape=record label="{12385: read-variable['queue',v27,-]|12386: read-variable['i',v28,-]|12387: read-property[v27,v28,v26]|12388: \<variable-non-null-undef\>['queue']|12389: write-variable[v26,'partial']*|12390: read-variable['assign',v30,v29]|12391: read-variable['nextState',v31,-]|12392: typeof['partial',v34]|12393: constant[\"function\",v35]|12394: ===[v34,v35,v33]|12395: if[v33](true-block:3537,false-block:3538)}" ] 
BB3535 -> BB3537 [tailport=s, headport=n, headlabel="      3537"]
BB3535 -> BB3538 [tailport=s, headport=n, headlabel="      3538"]
BB3535 -> BB3543 [tailport=s, headport=n, color=gray]
BB3536 [shape=record label="{12396: read-variable['nextState',v1,-]}" ] 
BB3536 -> BB3542 [tailport=s, headport=n]
BB3536 -> BB3543 [tailport=s, headport=n, color=gray]
BB3537 [shape=record label="{12397: read-variable['partial',v37,-]|12398: read-property[v37,'call',-]|12399: \<variable-non-null-undef\>['partial']|12400: read-variable['inst',v38,-]|12401: read-variable['nextState',v39,-]|12402: read-variable['props',v40,-]|12403: read-variable['context',v41,-]}" ] 
BB3537 -> BB3539 [tailport=s, headport=n, headlabel="      3539"]
BB3537 -> BB3543 [tailport=s, headport=n, color=gray]
BB3538 [shape=record label="{12404: read-variable['partial',v32,-]}" ] 
BB3538 -> BB3540 [tailport=s, headport=n, headlabel="      3540"]
BB3538 -> BB3543 [tailport=s, headport=n, color=gray]
BB3539 [shape=record label="{12405: call-partial.call [v37,'call',v38,v39,v40,v41,v32]}" ] 
BB3539 -> BB3540 [tailport=s, headport=n]
BB3539 -> BB3543 [tailport=s, headport=n, color=gray]
BB3540 [shape=record label="{12406: call-assign [v29,v30,v31,v32,-]*}" ] 
BB3540 -> BB3541 [tailport=s, headport=n, headlabel="      3541"]
BB3540 -> BB3543 [tailport=s, headport=n, color=gray]
BB3541 [shape=record label="{12407: constant[1.0,v36]|12408: read-variable['i',v37,-]|12409: +[v37,v38]|12410: +[v38,v36,v39]|12411: write-variable[v39,'i']}" ] 
BB3541 -> BB3534 [tailport=s, headport=n]
BB3541 -> BB3543 [tailport=s, headport=n, color=gray]
BB3542 [shape=record label="{12412: return[v1]}" ] 
BB3543 [shape=record label="{12413: exceptional-return}" ] 
//#$~ 6842
}
