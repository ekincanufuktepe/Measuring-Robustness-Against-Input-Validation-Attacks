digraph {
rankdir="TD"
BB_entry475[shape=none,label=""];
BB_entry475 -> BB5916 [tailport=s, headport=n, headlabel="    5916"]
BB5916 [shape=record label="{21086: constant[undefined,v1]}" ] 
BB5916 -> BB5917 [tailport=s, headport=n, headlabel="      5917"]
BB5917 [shape=record label="{21087: read-variable['func',v3,-]|21088: read-variable['func',v4,-]|21089: read-property[v4,'length',v2]|21090: \<variable-non-null-undef\>['func']|21091: write-property[v3,'__ember_arity__',v2]|21092: \<variable-non-null-undef\>['func']*|21093: read-variable['this',v6,-]|21094: read-variable['func',v5,-]|21095: write-property[v6,'func',v5]*|21096: read-variable['this',v8,-]|21097: read-variable['undefined',v7,-]|21098: write-property[v8,'_dependentKeys',v7]*|21099: read-variable['this',v10,-]|21100: read-variable['undefined',v9,-]|21101: write-property[v10,'_suspended',v9]*|21102: read-variable['this',v12,-]|21103: read-variable['undefined',v11,-]|21104: write-property[v12,'_meta',v11]*|21105: read-variable['Ember',v14,-]|21106: read-property[v14,'deprecate',-]|21107: \<variable-non-null-undef\>['Ember']|21108: constant[\"Passing opts.cacheable to the CP constructor is deprecated. Invoke `volatile()` on the CP instead.\",v15]|21109: read-variable['opts',v17,-]|21110: ![v17,v16]|21111: if[v16](true-block:5921,false-block:5918)}" ] 
BB5917 -> BB5921 [tailport=s, headport=n, headlabel="      5921"]
BB5917 -> BB5918 [tailport=s, headport=n, headlabel="      5918"]
BB5917 -> BB5941 [tailport=s, headport=n, color=gray, headlabel="      5941"]
BB5918 [shape=record label="{21112: read-variable['opts',v19,-]|21113: read-property[v19,'hasOwnProperty',-]|21114: \<variable-non-null-undef\>['opts']|21115: constant[\"cacheable\",v20]}" ] 
BB5918 -> BB5919 [tailport=s, headport=n, headlabel="      5919"]
BB5918 -> BB5941 [tailport=s, headport=n, color=gray]
BB5919 [shape=record label="{21116: call-opts.hasOwnProperty [v19,'hasOwnProperty',v20,v17]}" ] 
BB5919 -> BB5920 [tailport=s, headport=n, headlabel="      5920"]
BB5919 -> BB5941 [tailport=s, headport=n, color=gray]
BB5920 [shape=record label="{21117: ![v17,v16]}" ] 
BB5920 -> BB5921 [tailport=s, headport=n]
BB5920 -> BB5941 [tailport=s, headport=n, color=gray]
BB5921 [shape=record label="{21118: call-Ember.deprecate [v14,'deprecate',v15,v16,-]*}" ] 
BB5921 -> BB5922 [tailport=s, headport=n, headlabel="      5922"]
BB5921 -> BB5941 [tailport=s, headport=n, color=gray]
BB5922 [shape=record label="{21119: read-variable['this',v18,-]|21120: read-variable['opts',v19,-]|21121: if[v19](true-block:5923,false-block:5924)}" ] 
BB5922 -> BB5924 [tailport=s, headport=n, headlabel="      5924"]
BB5922 -> BB5923 [tailport=s, headport=n, headlabel="      5923"]
BB5922 -> BB5941 [tailport=s, headport=n, color=gray]
BB5923 [shape=record label="{21122: read-variable['opts',v22,-]|21123: read-property[v22,'cacheable',v20]|21124: \<variable-non-null-undef\>['opts']|21125: read-variable['undefined',v21,-]|21126: !==[v20,v21,v19]}" ] 
BB5923 -> BB5924 [tailport=s, headport=n]
BB5923 -> BB5941 [tailport=s, headport=n, color=gray]
BB5924 [shape=record label="{21127: if[v19](true-block:5925,false-block:5926)}" ] 
BB5924 -> BB5925 [tailport=s, headport=n, headlabel="      5925"]
BB5924 -> BB5926 [tailport=s, headport=n, headlabel="      5926"]
BB5925 [shape=record label="{21128: read-variable['opts',v20,-]|21129: read-property[v20,'cacheable',v17]|21130: \<variable-non-null-undef\>['opts']}" ] 
BB5925 -> BB5927 [tailport=s, headport=n, headlabel="      5927"]
BB5925 -> BB5941 [tailport=s, headport=n, color=gray]
BB5926 [shape=record label="{21131: constant[true,v17]}" ] 
BB5926 -> BB5927 [tailport=s, headport=n]
BB5927 [shape=record label="{21132: write-property[v18,'_cacheable',v17]*|21133: read-variable['this',v21,-]|21134: read-variable['opts',v20,-]|21135: if[v20](true-block:5928,false-block:5929)}" ] 
BB5927 -> BB5929 [tailport=s, headport=n, headlabel="      5929"]
BB5927 -> BB5928 [tailport=s, headport=n, headlabel="      5928"]
BB5927 -> BB5941 [tailport=s, headport=n, color=gray]
BB5928 [shape=record label="{21136: read-variable['opts',v22,-]|21137: read-property[v22,'dependentKeys',v20]|21138: \<variable-non-null-undef\>['opts']}" ] 
BB5928 -> BB5929 [tailport=s, headport=n]
BB5928 -> BB5941 [tailport=s, headport=n, color=gray]
BB5929 [shape=record label="{21139: write-property[v21,'_dependentKeys',v20]*|21140: read-variable['Ember',v23,-]|21141: read-property[v23,'deprecate',-]|21142: \<variable-non-null-undef\>['Ember']|21143: constant[\"Passing opts.readOnly to the CP constructor is deprecated. All CPs are writable by default. Yo can invoke `readOnly()` on the CP to change this.\",v24]|21144: read-variable['opts',v26,-]|21145: ![v26,v25]|21146: if[v25](true-block:5933,false-block:5930)}" ] 
BB5929 -> BB5933 [tailport=s, headport=n, headlabel="      5933"]
BB5929 -> BB5930 [tailport=s, headport=n, headlabel="      5930"]
BB5929 -> BB5941 [tailport=s, headport=n, color=gray]
BB5930 [shape=record label="{21147: read-variable['opts',v28,-]|21148: read-property[v28,'hasOwnProperty',-]|21149: \<variable-non-null-undef\>['opts']|21150: constant[\"readOnly\",v29]}" ] 
BB5930 -> BB5931 [tailport=s, headport=n, headlabel="      5931"]
BB5930 -> BB5941 [tailport=s, headport=n, color=gray]
BB5931 [shape=record label="{21151: call-opts.hasOwnProperty [v28,'hasOwnProperty',v29,v26]}" ] 
BB5931 -> BB5932 [tailport=s, headport=n, headlabel="      5932"]
BB5931 -> BB5941 [tailport=s, headport=n, color=gray]
BB5932 [shape=record label="{21152: ![v26,v25]}" ] 
BB5932 -> BB5933 [tailport=s, headport=n]
BB5932 -> BB5941 [tailport=s, headport=n, color=gray]
BB5933 [shape=record label="{21153: call-Ember.deprecate [v23,'deprecate',v24,v25,-]*}" ] 
BB5933 -> BB5934 [tailport=s, headport=n, headlabel="      5934"]
BB5933 -> BB5941 [tailport=s, headport=n, color=gray]
BB5934 [shape=record label="{21154: read-variable['this',v27,-]|21155: read-variable['opts',v26,-]|21156: if[v26](true-block:5935,false-block:5937)}" ] 
BB5934 -> BB5937 [tailport=s, headport=n, headlabel="      5937"]
BB5934 -> BB5935 [tailport=s, headport=n, headlabel="      5935"]
BB5934 -> BB5941 [tailport=s, headport=n, color=gray]
BB5935 [shape=record label="{21157: read-variable['opts',v30,-]|21158: read-property[v30,'readOnly',v28]|21159: \<variable-non-null-undef\>['opts']|21160: read-variable['undefined',v29,-]|21161: !==[v28,v29,v26]|21162: if[v26](true-block:5937,false-block:5936)}" ] 
BB5935 -> BB5937 [tailport=s, headport=n]
BB5935 -> BB5936 [tailport=s, headport=n, headlabel="      5936"]
BB5935 -> BB5941 [tailport=s, headport=n, color=gray]
BB5936 [shape=record label="{21163: read-variable['opts',v30,-]|21164: read-property[v30,'readOnly',v29]|21165: \<variable-non-null-undef\>['opts']|21166: ![v29,v28]|21167: ![v28,v26]}" ] 
BB5936 -> BB5937 [tailport=s, headport=n]
BB5936 -> BB5941 [tailport=s, headport=n, color=gray]
BB5937 [shape=record label="{21168: if[v26](true-block:5939,false-block:5938)}" ] 
BB5937 -> BB5939 [tailport=s, headport=n, headlabel="      5939"]
BB5937 -> BB5938 [tailport=s, headport=n, headlabel="      5938"]
BB5938 [shape=record label="{21169: constant[false,v26]}" ] 
BB5938 -> BB5939 [tailport=s, headport=n]
BB5939 [shape=record label="{21170: write-property[v27,'_readOnly',v26]*}" ] 
BB5939 -> BB5940 [tailport=s, headport=n, headlabel="      5940"]
BB5939 -> BB5941 [tailport=s, headport=n, color=gray]
BB5940 [shape=record label="{21171: return[v1]}" ] 
BB5941 [shape=record label="{21172: exceptional-return}" ] 
//#$~ 10708
}
