digraph {
rankdir="TD"
BB_entry25[shape=none,label=""];
BB_entry25 -> BB257 [tailport=s, headport=n, headlabel="    257"]
BB257 [shape=record label="{804: constant[undefined,v1]|805: vardecl['_super']|806: vardecl['prototype']|807: vardecl['name']|808: function-decl[function Class ( ),-]}" ] 
BB257 -> BB258 [tailport=s, headport=n, headlabel="      258"]
BB258 [shape=record label="{809: read-variable['this',v3,-]|810: read-property[v3,'prototype',v2]|811: write-variable[v2,'_super']*|812: constant[true,v4]|813: write-variable[v4,'initializing']*|814: read-variable['this',v6,-]}" ] 
BB258 -> BB259 [tailport=s, headport=n, headlabel="      259"]
BB258 -> BB275 [tailport=s, headport=n, color=gray, headlabel="      275"]
BB259 [shape=record label="{815: construct [-,v6,v5]}" ] 
BB259 -> BB260 [tailport=s, headport=n, headlabel="      260"]
BB259 -> BB275 [tailport=s, headport=n, color=gray]
BB260 [shape=record label="{816: write-variable[v5,'prototype']*|817: constant[false,v7]|818: write-variable[v7,'initializing']*|819: read-variable['prop',v9,-]}" ] 
BB260 -> BB261 [tailport=s, headport=n, headlabel="      261"]
BB260 -> BB275 [tailport=s, headport=n, color=gray]
BB261 [shape=record label="{820: begin-for-in[v9,v10]}" ] 
BB261 -> BB262 [tailport=s, headport=n, headlabel="      262"]
BB261 -> BB275 [tailport=s, headport=n, color=gray]
BB262 [shape=record label="{821: has-next[v10,v11]|822: if[v11](true-block:263,false-block:273)}" ] 
BB262 -> BB263 [tailport=s, headport=n, headlabel="      263"]
BB262 -> BB273 [tailport=s, headport=n, headlabel="      273"]
BB263 [shape=record label="{823: next-property[v10,v12]|824: write-variable[v12,'name']|825: read-variable['prototype',v14,-]|826: read-variable['name',v15,-]|827: read-variable['prop',v20,-]|828: read-variable['name',v21,-]|829: read-property[v20,v21,v19]|830: \<variable-non-null-undef\>['prop']|831: typeof[v19,v17]|832: constant[\"function\",v18]|833: ==[v17,v18,v16]|834: if[v16](true-block:264,false-block:267)}" ] 
BB263 -> BB267 [tailport=s, headport=n, headlabel="      267"]
BB263 -> BB264 [tailport=s, headport=n, headlabel="      264"]
BB263 -> BB275 [tailport=s, headport=n, color=gray]
BB264 [shape=record label="{835: read-variable['_super',v25,-]|836: read-variable['name',v26,-]|837: read-property[v25,v26,v24]|838: \<variable-non-null-undef\>['_super']|839: typeof[v24,v22]|840: constant[\"function\",v23]|841: ==[v22,v23,v16]|842: if[v16](true-block:265,false-block:267)}" ] 
BB264 -> BB267 [tailport=s, headport=n]
BB264 -> BB265 [tailport=s, headport=n, headlabel="      265"]
BB264 -> BB275 [tailport=s, headport=n, color=gray]
BB265 [shape=record label="{843: read-variable['fnTest',v28,-]|844: read-property[v28,'test',-]|845: \<variable-non-null-undef\>['fnTest']|846: read-variable['prop',v30,-]|847: read-variable['name',v31,-]|848: read-property[v30,v31,v29]|849: \<variable-non-null-undef\>['prop']}" ] 
BB265 -> BB266 [tailport=s, headport=n, headlabel="      266"]
BB265 -> BB275 [tailport=s, headport=n, color=gray]
BB266 [shape=record label="{850: call-fnTest.test [v28,'test',v29,v16]}" ] 
BB266 -> BB267 [tailport=s, headport=n]
BB266 -> BB275 [tailport=s, headport=n, color=gray]
BB267 [shape=record label="{851: if[v16](true-block:268,false-block:269)}" ] 
BB267 -> BB268 [tailport=s, headport=n, headlabel="      268"]
BB267 -> BB269 [tailport=s, headport=n, headlabel="      269"]
BB268 [shape=record label="{852: function-expr[function ( name fn ),v22]|853: read-variable['name',v23,-]|854: read-variable['prop',v25,-]|855: read-variable['name',v26,-]|856: read-property[v25,v26,v24]|857: \<variable-non-null-undef\>['prop']}" ] 
BB268 -> BB270 [tailport=s, headport=n, headlabel="      270"]
BB268 -> BB275 [tailport=s, headport=n, color=gray]
BB269 [shape=record label="{858: read-variable['prop',v22,-]|859: read-variable['name',v23,-]|860: read-property[v22,v23,v13]|861: \<variable-non-null-undef\>['prop']}" ] 
BB269 -> BB271 [tailport=s, headport=n, headlabel="      271"]
BB269 -> BB275 [tailport=s, headport=n, color=gray]
BB270 [shape=record label="{862: call-null [-,v22,v23,v24,v13]}" ] 
BB270 -> BB271 [tailport=s, headport=n]
BB270 -> BB275 [tailport=s, headport=n, color=gray]
BB271 [shape=record label="{863: write-property[v14,v15,v13]|864: \<variable-non-null-undef\>['prototype']*}" ] 
BB271 -> BB272 [tailport=s, headport=n, headlabel="      272"]
BB271 -> BB275 [tailport=s, headport=n, color=gray]
BB272 [shape=record label="{865: end-for-in(begin-node:820)}" ] 
BB272 -> BB262 [tailport=s, headport=n]
BB273 [shape=record label="{866: read-variable['Class',v14,-]|867: read-variable['prototype',v13,-]|868: write-property[v14,'prototype',v13]|869: \<variable-non-null-undef\>['Class']*|870: read-variable['Class',v17,-]|871: read-property[v17,'prototype',v16]|872: \<variable-non-null-undef\>['Class']|873: read-variable['Class',v15,-]|874: write-property[v16,'constructor',v15]|875: \<property-non-null-undef\>[v17,'prototype']*|876: read-variable['Class',v19,-]|877: read-variable['arguments',v20,-]|878: read-property[v20,'callee',v18]|879: \<variable-non-null-undef\>['arguments']|880: write-property[v19,'extend',v18]|881: \<variable-non-null-undef\>['Class']*|882: read-variable['Class',v1,-]}" ] 
BB273 -> BB274 [tailport=s, headport=n, headlabel="      274"]
BB273 -> BB275 [tailport=s, headport=n, color=gray]
BB274 [shape=record label="{883: return[v1]}" ] 
BB275 [shape=record label="{884: exceptional-return}" ] 
//#$~ 253
}
