digraph {
rankdir="TD"
BB_entry347[shape=none,label=""];
BB_entry347 -> BB5935 [tailport=s, headport=n, headlabel="    5935"]
BB5935 [shape=record label="{18225: constant[undefined,v1]|18226: vardecl['node']|18227: vardecl['first']|18228: vardecl['stmt']}" ] 
BB5935 -> BB5936 [tailport=s, headport=n, headlabel="      5936"]
BB5936 [shape=record label="{18229: read-variable['tokPos',v2,-]|18230: write-variable[v2,'lastEnd']|18231: write-variable[v2,'lastStart']*|18232: read-variable['options',v4,-]|18233: read-property[v4,'locations',v3]|18234: \<variable-non-null-undef\>['options']|18235: if[v3](true-block:5937,false-block:5940)}" ] 
BB5936 -> BB5937 [tailport=s, headport=n, headlabel="      5937"]
BB5936 -> BB5940 [tailport=s, headport=n, headlabel="      5940"]
BB5936 -> BB5966 [tailport=s, headport=n, color=gray, headlabel="      5966"]
BB5937 [shape=record label="{18236: read-variable['Position',v6,-]}" ] 
BB5937 -> BB5938 [tailport=s, headport=n, headlabel="      5938"]
BB5937 -> BB5966 [tailport=s, headport=n, color=gray]
BB5938 [shape=record label="{18237: construct [-,v6,v5]}" ] 
BB5938 -> BB5939 [tailport=s, headport=n, headlabel="      5939"]
BB5938 -> BB5966 [tailport=s, headport=n, color=gray]
BB5939 [shape=record label="{18238: write-variable[v5,'lastEndLoc']*}" ] 
BB5939 -> BB5940 [tailport=s, headport=n]
BB5940 [shape=record label="{18239: constant[null,v5]|18240: write-variable[v5,'strict']|18241: write-variable[v5,'inGenerator']|18242: write-variable[v5,'inFunction']*|18243: read-variable['Array',v7,-]}" ] 
BB5940 -> BB5941 [tailport=s, headport=n, headlabel="      5941"]
BB5940 -> BB5966 [tailport=s, headport=n, color=gray]
BB5941 [shape=record label="{18244: construct [-,v7,v6]}" ] 
BB5941 -> BB5942 [tailport=s, headport=n, headlabel="      5942"]
BB5941 -> BB5966 [tailport=s, headport=n, color=gray]
BB5942 [shape=record label="{18245: write-variable[v6,'labels']*|18246: read-variable['readToken',v9,v8]}" ] 
BB5942 -> BB5943 [tailport=s, headport=n, headlabel="      5943"]
BB5942 -> BB5966 [tailport=s, headport=n, color=gray]
BB5943 [shape=record label="{18247: call-readToken [v8,v9,-]*}" ] 
BB5943 -> BB5944 [tailport=s, headport=n, headlabel="      5944"]
BB5943 -> BB5966 [tailport=s, headport=n, color=gray]
BB5944 [shape=record label="{18248: read-variable['program',v10,-]|18249: if[v10](true-block:5947,false-block:5945)}" ] 
BB5944 -> BB5947 [tailport=s, headport=n, headlabel="      5947"]
BB5944 -> BB5945 [tailport=s, headport=n, headlabel="      5945"]
BB5944 -> BB5966 [tailport=s, headport=n, color=gray]
BB5945 [shape=record label="{18250: read-variable['startNode',v12,v11]}" ] 
BB5945 -> BB5946 [tailport=s, headport=n, headlabel="      5946"]
BB5945 -> BB5966 [tailport=s, headport=n, color=gray]
BB5946 [shape=record label="{18251: call-startNode [v11,v12,v10]}" ] 
BB5946 -> BB5947 [tailport=s, headport=n]
BB5946 -> BB5966 [tailport=s, headport=n, color=gray]
BB5947 [shape=record label="{18252: write-variable[v10,'node']*|18253: constant[true,v11]|18254: write-variable[v11,'first']*|18255: read-variable['program',v13,-]|18256: ![v13,v12]|18257: if[v12](true-block:5948,false-block:5951)}" ] 
BB5947 -> BB5948 [tailport=s, headport=n, headlabel="      5948"]
BB5947 -> BB5951 [tailport=s, headport=n, headlabel="      5951"]
BB5947 -> BB5966 [tailport=s, headport=n, color=gray]
BB5948 [shape=record label="{18258: read-variable['node',v15,-]|18259: read-variable['Array',v16,-]}" ] 
BB5948 -> BB5949 [tailport=s, headport=n, headlabel="      5949"]
BB5948 -> BB5966 [tailport=s, headport=n, color=gray]
BB5949 [shape=record label="{18260: construct [-,v16,v14]}" ] 
BB5949 -> BB5950 [tailport=s, headport=n, headlabel="      5950"]
BB5949 -> BB5966 [tailport=s, headport=n, color=gray]
BB5950 [shape=record label="{18261: write-property[v15,'body',v14]|18262: \<variable-non-null-undef\>['node']*}" ] 
BB5950 -> BB5951 [tailport=s, headport=n]
BB5950 -> BB5966 [tailport=s, headport=n, color=gray]
BB5951 [shape=record label="{18263: read-variable['tokType',v15,-]|18264: read-variable['_eof',v16,-]|18265: !==[v15,v16,v14]|18266: if[v14](true-block:5952,false-block:5953)}" ] 
BB5951 -> BB5952 [tailport=s, headport=n, headlabel="      5952"]
BB5951 -> BB5953 [tailport=s, headport=n, headlabel="      5953"]
BB5951 -> BB5966 [tailport=s, headport=n, color=gray]
BB5952 [shape=record label="{18267: read-variable['parseStatement',v19,v18]}" ] 
BB5952 -> BB5954 [tailport=s, headport=n, headlabel="      5954"]
BB5952 -> BB5966 [tailport=s, headport=n, color=gray]
BB5953 [shape=record label="{18268: read-variable['finishNode',v18,v17]|18269: read-variable['node',v19,-]|18270: constant[\"Program\",v20]}" ] 
BB5953 -> BB5964 [tailport=s, headport=n, headlabel="      5964"]
BB5953 -> BB5966 [tailport=s, headport=n, color=gray]
BB5954 [shape=record label="{18271: call-parseStatement [v18,v19,v17]}" ] 
BB5954 -> BB5955 [tailport=s, headport=n, headlabel="      5955"]
BB5954 -> BB5966 [tailport=s, headport=n, color=gray]
BB5955 [shape=record label="{18272: write-variable[v17,'stmt']*|18273: read-variable['node',v22,-]|18274: read-property[v22,'body',v21]|18275: \<variable-non-null-undef\>['node']|18276: read-property[v21,'push',-]|18277: \<property-non-null-undef\>[v22,'body']|18278: read-variable['stmt',v23,-]}" ] 
BB5955 -> BB5956 [tailport=s, headport=n, headlabel="      5956"]
BB5955 -> BB5966 [tailport=s, headport=n, color=gray]
BB5956 [shape=record label="{18279: call-node.body.push [v21,'push',v23,-]*}" ] 
BB5956 -> BB5957 [tailport=s, headport=n, headlabel="      5957"]
BB5956 -> BB5966 [tailport=s, headport=n, color=gray]
BB5957 [shape=record label="{18280: read-variable['first',v24,-]|18281: if[v24](true-block:5958,false-block:5960)}" ] 
BB5957 -> BB5960 [tailport=s, headport=n, headlabel="      5960"]
BB5957 -> BB5958 [tailport=s, headport=n, headlabel="      5958"]
BB5957 -> BB5966 [tailport=s, headport=n, color=gray]
BB5958 [shape=record label="{18282: read-variable['isUseStrict',v26,v25]|18283: read-variable['stmt',v27,-]}" ] 
BB5958 -> BB5959 [tailport=s, headport=n, headlabel="      5959"]
BB5958 -> BB5966 [tailport=s, headport=n, color=gray]
BB5959 [shape=record label="{18284: call-isUseStrict [v25,v26,v27,v24]}" ] 
BB5959 -> BB5960 [tailport=s, headport=n]
BB5959 -> BB5966 [tailport=s, headport=n, color=gray]
BB5960 [shape=record label="{18285: if[v24](true-block:5961,false-block:5963)}" ] 
BB5960 -> BB5961 [tailport=s, headport=n, headlabel="      5961"]
BB5960 -> BB5963 [tailport=s, headport=n, headlabel="      5963"]
BB5961 [shape=record label="{18286: read-variable['setStrict',v26,v25]|18287: constant[true,v27]}" ] 
BB5961 -> BB5962 [tailport=s, headport=n, headlabel="      5962"]
BB5961 -> BB5966 [tailport=s, headport=n, color=gray]
BB5962 [shape=record label="{18288: call-setStrict [v25,v26,v27,-]*}" ] 
BB5962 -> BB5963 [tailport=s, headport=n]
BB5962 -> BB5966 [tailport=s, headport=n, color=gray]
BB5963 [shape=record label="{18289: constant[false,v25]|18290: write-variable[v25,'first']*}" ] 
BB5963 -> BB5951 [tailport=s, headport=n]
BB5964 [shape=record label="{18291: call-finishNode [v17,v18,v19,v20,v1]}" ] 
BB5964 -> BB5965 [tailport=s, headport=n, headlabel="      5965"]
BB5964 -> BB5966 [tailport=s, headport=n, color=gray]
BB5965 [shape=record label="{18292: return[v1]}" ] 
BB5966 [shape=record label="{18293: exceptional-return}" ] 
//#$~ 6008
}
