digraph {
rankdir="TD"
BB_entry87[shape=none,label=""];
BB_entry87 -> BB1144 [tailport=s, headport=n, headlabel="    1144"]
BB1144 [shape=record label="{3700: constant[undefined,v1]|3701: vardecl['fullNameType']}" ] 
BB1144 -> BB1145 [tailport=s, headport=n, headlabel="      1145"]
BB1145 [shape=record label="{3702: read-variable['Ember',v3,-]|3703: read-property[v3,'assert',-]|3704: \<variable-non-null-undef\>['Ember']|3705: constant[\"fullName must be a proper full name\",v4]|3706: read-variable['validateFullName',v7,v6]|3707: read-variable['fullName',v8,-]}" ] 
BB1145 -> BB1146 [tailport=s, headport=n, headlabel="      1146"]
BB1145 -> BB1160 [tailport=s, headport=n, color=gray, headlabel="      1160"]
BB1146 [shape=record label="{3708: call-validateFullName [v6,v7,v8,v5]}" ] 
BB1146 -> BB1147 [tailport=s, headport=n, headlabel="      1147"]
BB1146 -> BB1160 [tailport=s, headport=n, color=gray]
BB1147 [shape=record label="{3709: call-Ember.assert [v3,'assert',v4,v5,-]*}" ] 
BB1147 -> BB1148 [tailport=s, headport=n, headlabel="      1148"]
BB1147 -> BB1160 [tailport=s, headport=n, color=gray]
BB1148 [shape=record label="{3710: read-variable['this',v10,-]|3711: read-property[v10,'parent',v9]|3712: if[v9](true-block:1149,false-block:1151)}" ] 
BB1148 -> BB1149 [tailport=s, headport=n, headlabel="      1149"]
BB1148 -> BB1151 [tailport=s, headport=n, headlabel="      1151"]
BB1148 -> BB1160 [tailport=s, headport=n, color=gray]
BB1149 [shape=record label="{3713: read-variable['illegalChildOperation',v12,v11]|3714: constant[\"typeInjection\",v13]}" ] 
BB1149 -> BB1150 [tailport=s, headport=n, headlabel="      1150"]
BB1149 -> BB1160 [tailport=s, headport=n, color=gray]
BB1150 [shape=record label="{3715: call-illegalChildOperation [v11,v12,v13,-]*}" ] 
BB1150 -> BB1151 [tailport=s, headport=n]
BB1150 -> BB1160 [tailport=s, headport=n, color=gray]
BB1151 [shape=record label="{3716: read-variable['fullName',v14,-]|3717: read-property[v14,'split',-]|3718: \<variable-non-null-undef\>['fullName']|3719: constant[\":\",v15]}" ] 
BB1151 -> BB1152 [tailport=s, headport=n, headlabel="      1152"]
BB1151 -> BB1160 [tailport=s, headport=n, color=gray]
BB1152 [shape=record label="{3720: call-fullName.split [v14,'split',v15,v12]}" ] 
BB1152 -> BB1153 [tailport=s, headport=n, headlabel="      1153"]
BB1152 -> BB1160 [tailport=s, headport=n, color=gray]
BB1153 [shape=record label="{3721: constant[0.0,v16]|3722: read-property[v12,v16,v11]|3723: write-variable[v11,'fullNameType']*|3724: read-variable['fullNameType',v18,-]|3725: read-variable['type',v19,-]|3726: ===[v18,v19,v17]|3727: if[v17](true-block:1154,false-block:1157)}" ] 
BB1153 -> BB1154 [tailport=s, headport=n, headlabel="      1154"]
BB1153 -> BB1157 [tailport=s, headport=n, headlabel="      1157"]
BB1153 -> BB1160 [tailport=s, headport=n, color=gray]
BB1154 [shape=record label="{3728: read-variable['Error',v21,-]|3729: constant[\"Cannot inject a `\",v33]|3730: read-variable['fullName',v34,-]|3731: +[v33,v34,v31]|3732: constant[\"` on other \",v32]|3733: +[v31,v32,v29]|3734: read-variable['type',v30,-]|3735: +[v29,v30,v27]|3736: constant[\"(s). Register the `\",v28]|3737: +[v27,v28,v25]|3738: read-variable['fullName',v26,-]|3739: +[v25,v26,v23]|3740: constant[\"` as a different type and perform the typeInjection.\",v24]|3741: +[v23,v24,v22]}" ] 
BB1154 -> BB1155 [tailport=s, headport=n, headlabel="      1155"]
BB1154 -> BB1160 [tailport=s, headport=n, color=gray]
BB1155 [shape=record label="{3742: construct [-,v21,v22,v20]}" ] 
BB1155 -> BB1156 [tailport=s, headport=n, headlabel="      1156"]
BB1155 -> BB1160 [tailport=s, headport=n, color=gray]
BB1156 [shape=record label="{3743: throw[v20]*}" ] 
BB1156 -> BB1157 [tailport=s, headport=n]
BB1156 -> BB1160 [tailport=s, headport=n, color=gray]
BB1157 [shape=record label="{3744: read-variable['addTypeInjection',v21,v20]|3745: read-variable['this',v23,-]|3746: read-property[v23,'typeInjections',v22]|3747: read-variable['type',v24,-]|3748: read-variable['property',v25,-]|3749: read-variable['fullName',v26,-]}" ] 
BB1157 -> BB1158 [tailport=s, headport=n, headlabel="      1158"]
BB1157 -> BB1160 [tailport=s, headport=n, color=gray]
BB1158 [shape=record label="{3750: call-addTypeInjection [v20,v21,v22,v24,v25,v26,-]*}" ] 
BB1158 -> BB1159 [tailport=s, headport=n, headlabel="      1159"]
BB1158 -> BB1160 [tailport=s, headport=n, color=gray]
BB1159 [shape=record label="{3751: return[v1]}" ] 
BB1160 [shape=record label="{3752: exceptional-return}" ] 
//#$~ 1530
}
