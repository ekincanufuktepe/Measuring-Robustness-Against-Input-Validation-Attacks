digraph {
rankdir="TD"
BB_entry61[shape=none,label=""];
BB_entry61 -> BB578 [tailport=s, headport=n, headlabel="    578"]
BB578 [shape=record label="{1994: constant[undefined,v1]|1995: vardecl['superMeta']|1996: vardecl['superMetaName']|1997: vardecl['patched']|1998: vardecl['i']}" ] 
BB578 -> BB579 [tailport=s, headport=n, headlabel="      579"]
BB579 [shape=record label="{1999: read-variable['superClass',v3,-]|2000: read-property[v3,'meta',v2]|2001: \<variable-non-null-undef\>['superClass']|2002: write-variable[v2,'superMeta']*|2003: read-variable['superMeta',v7,-]|2004: read-property[v7,'meta',v6]|2005: \<variable-non-null-undef\>['superMeta']|2006: read-property[v6,'className',-]|2007: \<property-non-null-undef\>[v7,'meta']}" ] 
BB579 -> BB580 [tailport=s, headport=n, headlabel="      580"]
BB579 -> BB598 [tailport=s, headport=n, color=gray, headlabel="      598"]
BB580 [shape=record label="{2008: call-superMeta.meta.className [v6,'className',v4]}" ] 
BB580 -> BB581 [tailport=s, headport=n, headlabel="      581"]
BB580 -> BB598 [tailport=s, headport=n, color=gray]
BB581 [shape=record label="{2009: write-variable[v4,'superMetaName']*|2010: read-variable['superMetaName',v9,-]|2011: constant[\"Joose.Class\",v10]|2012: ==[v9,v10,v8]|2013: if[v8](true-block:584,false-block:582)}" ] 
BB581 -> BB584 [tailport=s, headport=n, headlabel="      584"]
BB581 -> BB582 [tailport=s, headport=n, headlabel="      582"]
BB581 -> BB598 [tailport=s, headport=n, color=gray]
BB582 [shape=record label="{2014: read-variable['superMetaName',v9,-]|2015: constant[\"Joose.MetaClass\",v10]|2016: ==[v9,v10,v8]|2017: if[v8](true-block:584,false-block:583)}" ] 
BB582 -> BB584 [tailport=s, headport=n]
BB582 -> BB583 [tailport=s, headport=n, headlabel="      583"]
BB582 -> BB598 [tailport=s, headport=n, color=gray]
BB583 [shape=record label="{2018: read-variable['superMetaName',v9,-]|2019: constant[\"Joose.MetaClassBootstrap\",v10]|2020: ==[v9,v10,v8]}" ] 
BB583 -> BB584 [tailport=s, headport=n]
BB583 -> BB598 [tailport=s, headport=n, color=gray]
BB584 [shape=record label="{2021: if[v8](true-block:585,false-block:586)}" ] 
BB584 -> BB585 [tailport=s, headport=n, headlabel="      585"]
BB584 -> BB586 [tailport=s, headport=n, headlabel="      586"]
BB585 [shape=record label="{2022: constant[undefined,v1]}" ] 
BB585 -> BB597 [tailport=s, headport=n, headlabel="      597"]
BB586 [shape=record label="{2023: read-variable['this',v13,-]|2024: read-property[v13,'meta',v12]|2025: read-property[v12,'meta',v11]|2026: \<property-non-null-undef\>[v13,'meta']|2027: read-property[v11,'isa',-]|2028: \<property-non-null-undef\>[v12,'meta']|2029: read-variable['superMeta',v14,-]}" ] 
BB586 -> BB587 [tailport=s, headport=n, headlabel="      587"]
BB586 -> BB598 [tailport=s, headport=n, color=gray]
BB587 [shape=record label="{2030: call-this.meta.meta.isa [v11,'isa',v14,v9]}" ] 
BB587 -> BB588 [tailport=s, headport=n, headlabel="      588"]
BB587 -> BB598 [tailport=s, headport=n, color=gray]
BB588 [shape=record label="{2031: if[v9](true-block:589,false-block:590)}" ] 
BB588 -> BB589 [tailport=s, headport=n, headlabel="      589"]
BB588 -> BB590 [tailport=s, headport=n, headlabel="      590"]
BB589 [shape=record label="{2032: constant[undefined,v1]}" ] 
BB589 -> BB597 [tailport=s, headport=n]
BB590 [shape=record label="{2033: read-variable['superMeta',v18,-]|2034: read-property[v18,'meta',v17]|2035: \<variable-non-null-undef\>['superMeta']|2036: read-property[v17,'instantiate',-]|2037: \<property-non-null-undef\>[v18,'meta']|2038: read-variable['this',v19,-]}" ] 
BB590 -> BB591 [tailport=s, headport=n, headlabel="      591"]
BB590 -> BB598 [tailport=s, headport=n, color=gray]
BB591 [shape=record label="{2039: call-superMeta.meta.instantiate [v17,'instantiate',v19,v15]}" ] 
BB591 -> BB592 [tailport=s, headport=n, headlabel="      592"]
BB591 -> BB598 [tailport=s, headport=n, color=gray]
BB592 [shape=record label="{2040: write-variable[v15,'patched']*|2041: read-variable['patched',v21,-]}" ] 
BB592 -> BB593 [tailport=s, headport=n, headlabel="      593"]
BB592 -> BB598 [tailport=s, headport=n, color=gray]
BB593 [shape=record label="{2042: begin-for-in[v21,v22]}" ] 
BB593 -> BB594 [tailport=s, headport=n, headlabel="      594"]
BB593 -> BB598 [tailport=s, headport=n, color=gray]
BB594 [shape=record label="{2043: has-next[v22,v23]|2044: if[v23](true-block:595,false-block:597)}" ] 
BB594 -> BB595 [tailport=s, headport=n, headlabel="      595"]
BB594 -> BB597 [tailport=s, headport=n]
BB595 [shape=record label="{2045: next-property[v22,v24]|2046: write-variable[v24,'i']|2047: read-variable['this',v26,-]|2048: read-variable['i',v27,-]|2049: read-variable['patched',v28,-]|2050: read-variable['i',v29,-]|2051: read-property[v28,v29,v25]|2052: \<variable-non-null-undef\>['patched']|2053: write-property[v26,v27,v25]*}" ] 
BB595 -> BB596 [tailport=s, headport=n, headlabel="      596"]
BB595 -> BB598 [tailport=s, headport=n, color=gray]
BB596 [shape=record label="{2054: end-for-in(begin-node:2042)}" ] 
BB596 -> BB594 [tailport=s, headport=n]
BB597 [shape=record label="{2055: return[v1]}" ] 
BB598 [shape=record label="{2056: exceptional-return}" ] 
//#$~ 633
}
