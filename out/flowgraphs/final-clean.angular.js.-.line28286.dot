digraph {
rankdir="TD"
BB_entry1339[shape=none,label=""];
BB_entry1339 -> BB16514 [tailport=s, headport=n, headlabel="    16514"]
BB16514 [shape=record label="{43312: constant[undefined,v1]}" ] 
BB16514 -> BB16515 [tailport=s, headport=n, headlabel="      16515"]
BB16515 [shape=record label="{43313: read-variable['isString',v4,v3]|43314: read-variable['regex',v5,-]}" ] 
BB16515 -> BB16516 [tailport=s, headport=n, headlabel="      16516"]
BB16515 -> BB16537 [tailport=s, headport=n, color=gray, headlabel="      16537"]
BB16516 [shape=record label="{43315: call-isString [v3,v4,v5,v2]}" ] 
BB16516 -> BB16517 [tailport=s, headport=n, headlabel="      16517"]
BB16516 -> BB16537 [tailport=s, headport=n, color=gray]
BB16517 [shape=record label="{43316: if[v2](true-block:16518,false-block:16519)}" ] 
BB16517 -> BB16519 [tailport=s, headport=n, headlabel="      16519"]
BB16517 -> BB16518 [tailport=s, headport=n, headlabel="      16518"]
BB16518 [shape=record label="{43317: read-variable['regex',v8,-]|43318: read-property[v8,'length',v6]|43319: \<variable-non-null-undef\>['regex']|43320: constant[0.0,v7]|43321: \>[v6,v7,v2]}" ] 
BB16518 -> BB16519 [tailport=s, headport=n]
BB16518 -> BB16537 [tailport=s, headport=n, color=gray]
BB16519 [shape=record label="{43322: if[v2](true-block:16520,false-block:16523)}" ] 
BB16519 -> BB16520 [tailport=s, headport=n, headlabel="      16520"]
BB16519 -> BB16523 [tailport=s, headport=n, headlabel="      16523"]
BB16520 [shape=record label="{43323: read-variable['RegExp',v7,-]|43324: constant[\"^\",v11]|43325: read-variable['regex',v12,-]|43326: +[v11,v12,v9]|43327: constant[\"$\",v10]|43328: +[v9,v10,v8]}" ] 
BB16520 -> BB16521 [tailport=s, headport=n, headlabel="      16521"]
BB16520 -> BB16537 [tailport=s, headport=n, color=gray]
BB16521 [shape=record label="{43329: construct [-,v7,v8,v6]}" ] 
BB16521 -> BB16522 [tailport=s, headport=n, headlabel="      16522"]
BB16521 -> BB16537 [tailport=s, headport=n, color=gray]
BB16522 [shape=record label="{43330: write-variable[v6,'regex']*}" ] 
BB16522 -> BB16523 [tailport=s, headport=n]
BB16523 [shape=record label="{43331: read-variable['regex',v6,-]|43332: if[v6](true-block:16524,false-block:16525)}" ] 
BB16523 -> BB16525 [tailport=s, headport=n, headlabel="      16525"]
BB16523 -> BB16524 [tailport=s, headport=n, headlabel="      16524"]
BB16523 -> BB16537 [tailport=s, headport=n, color=gray]
BB16524 [shape=record label="{43333: read-variable['regex',v8,-]|43334: read-property[v8,'test',v7]|43335: \<variable-non-null-undef\>['regex']|43336: ![v7,v6]}" ] 
BB16524 -> BB16525 [tailport=s, headport=n]
BB16524 -> BB16537 [tailport=s, headport=n, color=gray]
BB16525 [shape=record label="{43337: if[v6](true-block:16526,false-block:16532)}" ] 
BB16525 -> BB16526 [tailport=s, headport=n, headlabel="      16526"]
BB16525 -> BB16532 [tailport=s, headport=n, headlabel="      16532"]
BB16526 [shape=record label="{43338: read-variable['minErr',v10,v9]|43339: constant[\"ngPattern\",v11]}" ] 
BB16526 -> BB16527 [tailport=s, headport=n, headlabel="      16527"]
BB16526 -> BB16537 [tailport=s, headport=n, color=gray]
BB16527 [shape=record label="{43340: call-minErr [v9,v10,v11,v8]}" ] 
BB16527 -> BB16528 [tailport=s, headport=n, headlabel="      16528"]
BB16527 -> BB16537 [tailport=s, headport=n, color=gray]
BB16528 [shape=record label="{43341: constant[\"noregexp\",v12]|43342: constant[\"Expected \\\{0\\\} to be a RegExp but was \\\{1\\\}. Element: \\\{2\\\}\",v13]|43343: read-variable['patternExp',v14,-]|43344: read-variable['regex',v15,-]|43345: read-variable['startingTag',v18,v17]|43346: read-variable['elm',v19,-]}" ] 
BB16528 -> BB16529 [tailport=s, headport=n, headlabel="      16529"]
BB16528 -> BB16537 [tailport=s, headport=n, color=gray]
BB16529 [shape=record label="{43347: call-startingTag [v17,v18,v19,v16]}" ] 
BB16529 -> BB16530 [tailport=s, headport=n, headlabel="      16530"]
BB16529 -> BB16537 [tailport=s, headport=n, color=gray]
BB16530 [shape=record label="{43348: call-null [-,v8,v12,v13,v14,v15,v16,v7]}" ] 
BB16530 -> BB16531 [tailport=s, headport=n, headlabel="      16531"]
BB16530 -> BB16537 [tailport=s, headport=n, color=gray]
BB16531 [shape=record label="{43349: throw[v7]*}" ] 
BB16531 -> BB16532 [tailport=s, headport=n]
BB16531 -> BB16537 [tailport=s, headport=n, color=gray]
BB16532 [shape=record label="{43350: read-variable['regex',v7,-]|43351: if[v7](true-block:16534,false-block:16533)}" ] 
BB16532 -> BB16534 [tailport=s, headport=n, headlabel="      16534"]
BB16532 -> BB16533 [tailport=s, headport=n, headlabel="      16533"]
BB16532 -> BB16537 [tailport=s, headport=n, color=gray]
BB16533 [shape=record label="{43352: read-variable['undefined',v7,-]}" ] 
BB16533 -> BB16534 [tailport=s, headport=n]
BB16533 -> BB16537 [tailport=s, headport=n, color=gray]
BB16534 [shape=record label="{43353: write-variable[v7,'regexp']*|43354: read-variable['ctrl',v9,-]|43355: read-property[v9,'$validate',-]|43356: \<variable-non-null-undef\>['ctrl']}" ] 
BB16534 -> BB16535 [tailport=s, headport=n, headlabel="      16535"]
BB16534 -> BB16537 [tailport=s, headport=n, color=gray]
BB16535 [shape=record label="{43357: call-ctrl.$validate [v9,'$validate',-]*}" ] 
BB16535 -> BB16536 [tailport=s, headport=n, headlabel="      16536"]
BB16535 -> BB16537 [tailport=s, headport=n, color=gray]
BB16536 [shape=record label="{43358: return[v1]}" ] 
BB16537 [shape=record label="{43359: exceptional-return}" ] 
//#$~ 28298
}
