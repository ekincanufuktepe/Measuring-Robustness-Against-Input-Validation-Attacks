digraph {
rankdir="TD"
BB_entry77[shape=none,label=""];
BB_entry77 -> BB835 [tailport=s, headport=n, headlabel="    835"]
BB835 [shape=record label="{1808: constant[undefined,v1]|1809: vardecl['node']|1810: vardecl['collection']}" ] 
BB835 -> BB836 [tailport=s, headport=n, headlabel="      836"]
BB836 [shape=record label="{1811: read-variable['this',v3,-]|1812: constant[0.0,v4]|1813: read-property[v3,v4,v2]|1814: write-variable[v2,'node']*|1815: constant[false,v5]|1816: write-variable[v5,'collection']*|1817: typeof['selector',v7]|1818: constant[\"object\",v8]|1819: ==[v7,v8,v6]|1820: if[v6](true-block:837,false-block:840)}" ] 
BB836 -> BB837 [tailport=s, headport=n, headlabel="      837"]
BB836 -> BB840 [tailport=s, headport=n, headlabel="      840"]
BB836 -> BB858 [tailport=s, headport=n, color=gray, headlabel="      858"]
BB837 [shape=record label="{1821: read-variable['$',v11,v10]|1822: read-variable['selector',v12,-]}" ] 
BB837 -> BB838 [tailport=s, headport=n, headlabel="      838"]
BB837 -> BB858 [tailport=s, headport=n, color=gray]
BB838 [shape=record label="{1823: call-$ [v10,v11,v12,v9]}" ] 
BB838 -> BB839 [tailport=s, headport=n, headlabel="      839"]
BB838 -> BB858 [tailport=s, headport=n, color=gray]
BB839 [shape=record label="{1824: write-variable[v9,'collection']*}" ] 
BB839 -> BB840 [tailport=s, headport=n]
BB840 [shape=record label="{1825: read-variable['node',v9,-]|1826: if[v9](true-block:841,false-block:848)}" ] 
BB840 -> BB848 [tailport=s, headport=n, headlabel="      848"]
BB840 -> BB841 [tailport=s, headport=n, headlabel="      841"]
BB840 -> BB858 [tailport=s, headport=n, color=gray]
BB841 [shape=record label="{1827: read-variable['collection',v11,-]|1828: if[v11](true-block:842,false-block:843)}" ] 
BB841 -> BB842 [tailport=s, headport=n, headlabel="      842"]
BB841 -> BB843 [tailport=s, headport=n, headlabel="      843"]
BB841 -> BB858 [tailport=s, headport=n, color=gray]
BB842 [shape=record label="{1829: read-variable['collection',v15,-]|1830: read-property[v15,'indexOf',-]|1831: \<variable-non-null-undef\>['collection']|1832: read-variable['node',v16,-]}" ] 
BB842 -> BB844 [tailport=s, headport=n, headlabel="      844"]
BB842 -> BB858 [tailport=s, headport=n, color=gray]
BB843 [shape=record label="{1833: read-variable['zepto',v13,-]|1834: read-property[v13,'matches',-]|1835: \<variable-non-null-undef\>['zepto']|1836: read-variable['node',v14,-]|1837: read-variable['selector',v15,-]}" ] 
BB843 -> BB846 [tailport=s, headport=n, headlabel="      846"]
BB843 -> BB858 [tailport=s, headport=n, color=gray]
BB844 [shape=record label="{1838: call-collection.indexOf [v15,'indexOf',v16,v12]}" ] 
BB844 -> BB845 [tailport=s, headport=n, headlabel="      845"]
BB844 -> BB858 [tailport=s, headport=n, color=gray]
BB845 [shape=record label="{1839: constant[0.0,v13]|1840: \>=[v12,v13,v10]}" ] 
BB845 -> BB847 [tailport=s, headport=n, headlabel="      847"]
BB845 -> BB858 [tailport=s, headport=n, color=gray]
BB846 [shape=record label="{1841: call-zepto.matches [v13,'matches',v14,v15,v10]}" ] 
BB846 -> BB847 [tailport=s, headport=n]
BB846 -> BB858 [tailport=s, headport=n, color=gray]
BB847 [shape=record label="{1842: ![v10,v9]}" ] 
BB847 -> BB848 [tailport=s, headport=n]
BB847 -> BB858 [tailport=s, headport=n, color=gray]
BB848 [shape=record label="{1843: if[v9](true-block:849,false-block:850)}" ] 
BB848 -> BB849 [tailport=s, headport=n, headlabel="      849"]
BB848 -> BB850 [tailport=s, headport=n, headlabel="      850"]
BB849 [shape=record label="{1844: read-variable['node',v11,-]|1845: read-variable['context',v12,-]|1846: !==[v11,v12,v10]|1847: if[v10](true-block:851,false-block:855)}" ] 
BB849 -> BB855 [tailport=s, headport=n, headlabel="      855"]
BB849 -> BB851 [tailport=s, headport=n, headlabel="      851"]
BB849 -> BB858 [tailport=s, headport=n, color=gray]
BB850 [shape=record label="{1848: read-variable['$',v11,v10]|1849: read-variable['node',v12,-]}" ] 
BB850 -> BB856 [tailport=s, headport=n, headlabel="      856"]
BB850 -> BB858 [tailport=s, headport=n, color=gray]
BB851 [shape=record label="{1850: read-variable['isDocument',v15,v14]|1851: read-variable['node',v16,-]}" ] 
BB851 -> BB852 [tailport=s, headport=n, headlabel="      852"]
BB851 -> BB858 [tailport=s, headport=n, color=gray]
BB852 [shape=record label="{1852: call-isDocument [v14,v15,v16,v13]}" ] 
BB852 -> BB853 [tailport=s, headport=n, headlabel="      853"]
BB852 -> BB858 [tailport=s, headport=n, color=gray]
BB853 [shape=record label="{1853: ![v13,v10]|1854: if[v10](true-block:854,false-block:855)}" ] 
BB853 -> BB855 [tailport=s, headport=n]
BB853 -> BB854 [tailport=s, headport=n, headlabel="      854"]
BB853 -> BB858 [tailport=s, headport=n, color=gray]
BB854 [shape=record label="{1855: read-variable['node',v17,-]|1856: read-property[v17,'parentNode',v10]|1857: \<variable-non-null-undef\>['node']}" ] 
BB854 -> BB855 [tailport=s, headport=n]
BB854 -> BB858 [tailport=s, headport=n, color=gray]
BB855 [shape=record label="{1858: write-variable[v10,'node']*}" ] 
BB855 -> BB840 [tailport=s, headport=n]
BB856 [shape=record label="{1859: call-$ [v10,v11,v12,v1]}" ] 
BB856 -> BB857 [tailport=s, headport=n, headlabel="      857"]
BB856 -> BB858 [tailport=s, headport=n, color=gray]
BB857 [shape=record label="{1860: return[v1]}" ] 
BB858 [shape=record label="{1861: exceptional-return}" ] 
//#$~ 495
}
