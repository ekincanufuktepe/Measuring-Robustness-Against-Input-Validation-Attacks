digraph {
rankdir="TD"
BB_entry167[shape=none,label=""];
BB_entry167 -> BB2178 [tailport=s, headport=n, headlabel="    2178"]
BB2178 [shape=record label="{7138: constant[undefined,v1]|7139: vardecl['split']|7140: vardecl['type']|7141: vardecl['name']|7142: vardecl['result']}" ] 
BB2178 -> BB2179 [tailport=s, headport=n, headlabel="      2179"]
BB2179 [shape=record label="{7143: read-variable['fullName',v4,-]|7144: read-property[v4,'split',-]|7145: \<variable-non-null-undef\>['fullName']|7146: constant[\":\",v5]|7147: constant[2.0,v6]}" ] 
BB2179 -> BB2180 [tailport=s, headport=n, headlabel="      2180"]
BB2179 -> BB2203 [tailport=s, headport=n, color=gray, headlabel="      2203"]
BB2180 [shape=record label="{7148: call-fullName.split [v4,'split',v5,v6,v2]}" ] 
BB2180 -> BB2181 [tailport=s, headport=n, headlabel="      2181"]
BB2180 -> BB2203 [tailport=s, headport=n, color=gray]
BB2181 [shape=record label="{7149: write-variable[v2,'split']*|7150: read-variable['split',v8,-]|7151: constant[0.0,v9]|7152: read-property[v8,v9,v7]|7153: \<variable-non-null-undef\>['split']|7154: write-variable[v7,'type']*|7155: read-variable['split',v11,-]|7156: constant[1.0,v12]|7157: read-property[v11,v12,v10]|7158: \<variable-non-null-undef\>['split']|7159: write-variable[v10,'name']*|7160: read-variable['Ember',v14,-]|7161: read-property[v14,'assert',-]|7162: \<variable-non-null-undef\>['Ember']|7163: constant[\"Tried to normalize a container name without a colon (:) in it.\",v18]|7164: constant[\" You probably tried to lookup a name that did not contain a type,\",v19]|7165: +[v18,v19,v16]|7166: constant[\" a colon, and a name. A proper lookup name would be `view:post`.\",v17]|7167: +[v16,v17,v15]|7168: read-variable['split',v23,-]|7169: read-property[v23,'length',v21]|7170: \<variable-non-null-undef\>['split']|7171: constant[2.0,v22]|7172: ===[v21,v22,v20]}" ] 
BB2181 -> BB2182 [tailport=s, headport=n, headlabel="      2182"]
BB2181 -> BB2203 [tailport=s, headport=n, color=gray]
BB2182 [shape=record label="{7173: call-Ember.assert [v14,'assert',v15,v20,-]*}" ] 
BB2182 -> BB2183 [tailport=s, headport=n, headlabel="      2183"]
BB2182 -> BB2203 [tailport=s, headport=n, color=gray]
BB2183 [shape=record label="{7174: read-variable['type',v25,-]|7175: constant[\"template\",v26]|7176: !==[v25,v26,v24]|7177: if[v24](true-block:2184,false-block:2185)}" ] 
BB2183 -> BB2184 [tailport=s, headport=n, headlabel="      2184"]
BB2183 -> BB2185 [tailport=s, headport=n, headlabel="      2185"]
BB2183 -> BB2203 [tailport=s, headport=n, color=gray]
BB2184 [shape=record label="{7178: read-variable['name',v27,-]|7179: write-variable[v27,'result']*|7180: read-variable['result',v32,-]|7181: read-property[v32,'indexOf',-]|7182: \<variable-non-null-undef\>['result']|7183: constant[\".\",v33]}" ] 
BB2184 -> BB2186 [tailport=s, headport=n, headlabel="      2186"]
BB2184 -> BB2203 [tailport=s, headport=n, color=gray]
BB2185 [shape=record label="{7184: read-variable['fullName',v1,-]}" ] 
BB2185 -> BB2202 [tailport=s, headport=n, headlabel="      2202"]
BB2185 -> BB2203 [tailport=s, headport=n, color=gray]
BB2186 [shape=record label="{7185: call-result.indexOf [v32,'indexOf',v33,v29]}" ] 
BB2186 -> BB2187 [tailport=s, headport=n, headlabel="      2187"]
BB2186 -> BB2203 [tailport=s, headport=n, color=gray]
BB2187 [shape=record label="{7186: constant[-1.0,v30]|7187: \>[v29,v30,v28]|7188: if[v28](true-block:2188,false-block:2193)}" ] 
BB2187 -> BB2188 [tailport=s, headport=n, headlabel="      2188"]
BB2187 -> BB2193 [tailport=s, headport=n, headlabel="      2193"]
BB2187 -> BB2203 [tailport=s, headport=n, color=gray]
BB2188 [shape=record label="{7189: read-variable['result',v36,-]|7190: read-property[v36,'replace',-]|7191: \<variable-non-null-undef\>['result']|7192: read-variable['RegExp',v38,-]|7193: constant[\"\\\\.(.)\",v39]|7194: constant[\"g\",v40]}" ] 
BB2188 -> BB2189 [tailport=s, headport=n, headlabel="      2189"]
BB2188 -> BB2203 [tailport=s, headport=n, color=gray]
BB2189 [shape=record label="{7195: construct [-,v38,v39,v40,v37]}" ] 
BB2189 -> BB2190 [tailport=s, headport=n, headlabel="      2190"]
BB2189 -> BB2203 [tailport=s, headport=n, color=gray]
BB2190 [shape=record label="{7196: function-expr[function ( m ),v41]}" ] 
BB2190 -> BB2191 [tailport=s, headport=n, headlabel="      2191"]
BB2191 [shape=record label="{7197: call-result.replace [v36,'replace',v37,v41,v34]}" ] 
BB2191 -> BB2192 [tailport=s, headport=n, headlabel="      2192"]
BB2191 -> BB2203 [tailport=s, headport=n, color=gray]
BB2192 [shape=record label="{7198: write-variable[v34,'result']*}" ] 
BB2192 -> BB2193 [tailport=s, headport=n]
BB2193 [shape=record label="{7199: read-variable['name',v38,-]|7200: read-property[v38,'indexOf',-]|7201: \<variable-non-null-undef\>['name']|7202: constant[\"_\",v39]}" ] 
BB2193 -> BB2194 [tailport=s, headport=n, headlabel="      2194"]
BB2193 -> BB2203 [tailport=s, headport=n, color=gray]
BB2194 [shape=record label="{7203: call-name.indexOf [v38,'indexOf',v39,v35]}" ] 
BB2194 -> BB2195 [tailport=s, headport=n, headlabel="      2195"]
BB2194 -> BB2203 [tailport=s, headport=n, color=gray]
BB2195 [shape=record label="{7204: constant[-1.0,v36]|7205: \>[v35,v36,v34]|7206: if[v34](true-block:2196,false-block:2201)}" ] 
BB2195 -> BB2196 [tailport=s, headport=n, headlabel="      2196"]
BB2195 -> BB2201 [tailport=s, headport=n, headlabel="      2201"]
BB2195 -> BB2203 [tailport=s, headport=n, color=gray]
BB2196 [shape=record label="{7207: read-variable['result',v42,-]|7208: read-property[v42,'replace',-]|7209: \<variable-non-null-undef\>['result']|7210: read-variable['RegExp',v44,-]|7211: constant[\"_(.)\",v45]|7212: constant[\"g\",v46]}" ] 
BB2196 -> BB2197 [tailport=s, headport=n, headlabel="      2197"]
BB2196 -> BB2203 [tailport=s, headport=n, color=gray]
BB2197 [shape=record label="{7213: construct [-,v44,v45,v46,v43]}" ] 
BB2197 -> BB2198 [tailport=s, headport=n, headlabel="      2198"]
BB2197 -> BB2203 [tailport=s, headport=n, color=gray]
BB2198 [shape=record label="{7214: function-expr[function ( m ),v47]}" ] 
BB2198 -> BB2199 [tailport=s, headport=n, headlabel="      2199"]
BB2199 [shape=record label="{7215: call-result.replace [v42,'replace',v43,v47,v40]}" ] 
BB2199 -> BB2200 [tailport=s, headport=n, headlabel="      2200"]
BB2199 -> BB2203 [tailport=s, headport=n, color=gray]
BB2200 [shape=record label="{7216: write-variable[v40,'result']*}" ] 
BB2200 -> BB2201 [tailport=s, headport=n]
BB2201 [shape=record label="{7217: read-variable['type',v42,-]|7218: constant[\":\",v43]|7219: +[v42,v43,v40]|7220: read-variable['result',v41,-]|7221: +[v40,v41,v1]}" ] 
BB2201 -> BB2202 [tailport=s, headport=n]
BB2201 -> BB2203 [tailport=s, headport=n, color=gray]
BB2202 [shape=record label="{7222: return[v1]}" ] 
BB2203 [shape=record label="{7223: exceptional-return}" ] 
//#$~ 3642
}
