digraph {
rankdir="TD"
BB_entry200[shape=none,label=""];
BB_entry200 -> BB2673 [tailport=s, headport=n, headlabel="    2673"]
BB2673 [shape=record label="{9384: constant[undefined,v1]|9385: vardecl['propName']}" ] 
BB2673 -> BB2674 [tailport=s, headport=n, headlabel="      2674"]
BB2674 [shape=record label="{9386: read-variable['typeDef',v3,-]}" ] 
BB2674 -> BB2675 [tailport=s, headport=n, headlabel="      2675"]
BB2674 -> BB2688 [tailport=s, headport=n, color=gray, headlabel="      2688"]
BB2675 [shape=record label="{9387: begin-for-in[v3,v4]}" ] 
BB2675 -> BB2676 [tailport=s, headport=n, headlabel="      2676"]
BB2675 -> BB2688 [tailport=s, headport=n, color=gray]
BB2676 [shape=record label="{9388: has-next[v4,v5]|9389: if[v5](true-block:2677,false-block:2687)}" ] 
BB2676 -> BB2677 [tailport=s, headport=n, headlabel="      2677"]
BB2676 -> BB2687 [tailport=s, headport=n, headlabel="      2687"]
BB2677 [shape=record label="{9390: next-property[v4,v6]|9391: write-variable[v6,'propName']|9392: read-variable['typeDef',v9,-]|9393: read-property[v9,'hasOwnProperty',-]|9394: \<variable-non-null-undef\>['typeDef']|9395: read-variable['propName',v10,-]}" ] 
BB2677 -> BB2678 [tailport=s, headport=n, headlabel="      2678"]
BB2677 -> BB2688 [tailport=s, headport=n, color=gray]
BB2678 [shape=record label="{9396: call-typeDef.hasOwnProperty [v9,'hasOwnProperty',v10,v7]}" ] 
BB2678 -> BB2679 [tailport=s, headport=n, headlabel="      2679"]
BB2678 -> BB2688 [tailport=s, headport=n, color=gray]
BB2679 [shape=record label="{9397: if[v7](true-block:2680,false-block:2686)}" ] 
BB2679 -> BB2680 [tailport=s, headport=n, headlabel="      2680"]
BB2679 -> BB2686 [tailport=s, headport=n, headlabel="      2686"]
BB2680 [shape=record label="{9398: constant[\"production\",v12]|9399: constant[\"development\",v13]|9400: !==[v12,v13,v11]|9401: if[v11](true-block:2681,false-block:2682)}" ] 
BB2680 -> BB2681 [tailport=s, headport=n, headlabel="      2681"]
BB2680 -> BB2682 [tailport=s, headport=n, headlabel="      2682"]
BB2680 -> BB2688 [tailport=s, headport=n, color=gray]
BB2681 [shape=record label="{9402: read-variable['warning',v15,v14]|9403: read-variable['typeDef',v20,-]|9404: read-variable['propName',v21,-]|9405: read-property[v20,v21,v19]|9406: \<variable-non-null-undef\>['typeDef']|9407: typeof[v19,v17]|9408: constant[\"function\",v18]|9409: ===[v17,v18,v16]|9410: constant[\"%s: %s type `%s` is invalid; it must be a function, usually from \",v23]|9411: constant[\"React.PropTypes.\",v24]|9412: +[v23,v24,v22]|9413: read-variable['Constructor',v26,-]|9414: read-property[v26,'displayName',v25]|9415: \<variable-non-null-undef\>['Constructor']|9416: if[v25](true-block:2684,false-block:2683)}" ] 
BB2681 -> BB2684 [tailport=s, headport=n, headlabel="      2684"]
BB2681 -> BB2683 [tailport=s, headport=n, headlabel="      2683"]
BB2681 -> BB2688 [tailport=s, headport=n, color=gray]
BB2682 [shape=record label="{9417: constant[null,-]}" ] 
BB2682 -> BB2686 [tailport=s, headport=n]
BB2683 [shape=record label="{9418: constant[\"ReactClass\",v25]}" ] 
BB2683 -> BB2684 [tailport=s, headport=n]
BB2684 [shape=record label="{9419: read-variable['ReactPropTypeLocationNames',v27,-]|9420: read-variable['location',v28,-]|9421: read-property[v27,v28,v26]|9422: \<variable-non-null-undef\>['ReactPropTypeLocationNames']|9423: read-variable['propName',v29,-]}" ] 
BB2684 -> BB2685 [tailport=s, headport=n, headlabel="      2685"]
BB2684 -> BB2688 [tailport=s, headport=n, color=gray]
BB2685 [shape=record label="{9424: call-warning [v14,v15,v16,v22,v25,v26,v29,-]}" ] 
BB2685 -> BB2686 [tailport=s, headport=n]
BB2685 -> BB2688 [tailport=s, headport=n, color=gray]
BB2686 [shape=record label="{9425: end-for-in(begin-node:9387)}" ] 
BB2686 -> BB2676 [tailport=s, headport=n]
BB2687 [shape=record label="{9426: return[v1]}" ] 
BB2688 [shape=record label="{9427: exceptional-return}" ] 
//#$~ 5386
}
