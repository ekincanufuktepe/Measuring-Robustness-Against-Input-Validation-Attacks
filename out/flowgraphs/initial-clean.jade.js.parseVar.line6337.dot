digraph {
rankdir="TD"
BB_entry369[shape=none,label=""];
BB_entry369 -> BB6478 [tailport=s, headport=n, headlabel="    6478"]
BB6478 [shape=record label="{19418: constant[undefined,v1]|19419: vardecl['decl']}" ] 
BB6478 -> BB6479 [tailport=s, headport=n, headlabel="      6479"]
BB6479 [shape=record label="{19420: read-variable['node',v3,-]|19421: read-variable['Array',v4,-]}" ] 
BB6479 -> BB6480 [tailport=s, headport=n, headlabel="      6480"]
BB6479 -> BB6511 [tailport=s, headport=n, color=gray, headlabel="      6511"]
BB6480 [shape=record label="{19422: construct [-,v4,v2]}" ] 
BB6480 -> BB6481 [tailport=s, headport=n, headlabel="      6481"]
BB6480 -> BB6511 [tailport=s, headport=n, color=gray]
BB6481 [shape=record label="{19423: write-property[v3,'declarations',v2]|19424: \<variable-non-null-undef\>['node']*|19425: read-variable['node',v6,-]|19426: read-variable['kind',v5,-]|19427: write-property[v6,'kind',v5]|19428: \<variable-non-null-undef\>['node']*}" ] 
BB6481 -> BB6482 [tailport=s, headport=n, headlabel="      6482"]
BB6481 -> BB6511 [tailport=s, headport=n, color=gray]
BB6482 [shape=record label="{19429: constant[true,v7]}" ] 
BB6482 -> BB6483 [tailport=s, headport=n, headlabel="      6483"]
BB6483 [shape=record label="{19430: if[v7](true-block:6484,false-block:6485)}" ] 
BB6483 -> BB6484 [tailport=s, headport=n, headlabel="      6484"]
BB6483 -> BB6485 [tailport=s, headport=n, headlabel="      6485"]
BB6484 [shape=record label="{19431: read-variable['startNode',v10,v9]}" ] 
BB6484 -> BB6486 [tailport=s, headport=n, headlabel="      6486"]
BB6484 -> BB6511 [tailport=s, headport=n, color=gray]
BB6485 [shape=record label="{19432: read-variable['node',v1,-]}" ] 
BB6485 -> BB6510 [tailport=s, headport=n, headlabel="      6510"]
BB6485 -> BB6511 [tailport=s, headport=n, color=gray]
BB6486 [shape=record label="{19433: call-startNode [v9,v10,v8]}" ] 
BB6486 -> BB6487 [tailport=s, headport=n, headlabel="      6487"]
BB6486 -> BB6511 [tailport=s, headport=n, color=gray]
BB6487 [shape=record label="{19434: write-variable[v8,'decl']*|19435: read-variable['decl',v12,-]|19436: read-variable['options',v16,-]|19437: read-property[v16,'ecmaVersion',v14]|19438: \<variable-non-null-undef\>['options']|19439: constant[6.0,v15]|19440: \>=[v14,v15,v13]|19441: if[v13](true-block:6488,false-block:6489)}" ] 
BB6487 -> BB6488 [tailport=s, headport=n, headlabel="      6488"]
BB6487 -> BB6489 [tailport=s, headport=n, headlabel="      6489"]
BB6487 -> BB6511 [tailport=s, headport=n, color=gray]
BB6488 [shape=record label="{19442: read-variable['toAssignable',v18,v17]|19443: read-variable['parseExprAtom',v21,v20]}" ] 
BB6488 -> BB6490 [tailport=s, headport=n, headlabel="      6490"]
BB6488 -> BB6511 [tailport=s, headport=n, color=gray]
BB6489 [shape=record label="{19444: read-variable['parseIdent',v18,v17]}" ] 
BB6489 -> BB6492 [tailport=s, headport=n, headlabel="      6492"]
BB6489 -> BB6511 [tailport=s, headport=n, color=gray]
BB6490 [shape=record label="{19445: call-parseExprAtom [v20,v21,v19]}" ] 
BB6490 -> BB6491 [tailport=s, headport=n, headlabel="      6491"]
BB6490 -> BB6511 [tailport=s, headport=n, color=gray]
BB6491 [shape=record label="{19446: call-toAssignable [v17,v18,v19,v11]}" ] 
BB6491 -> BB6493 [tailport=s, headport=n, headlabel="      6493"]
BB6491 -> BB6511 [tailport=s, headport=n, color=gray]
BB6492 [shape=record label="{19447: call-parseIdent [v17,v18,v11]}" ] 
BB6492 -> BB6493 [tailport=s, headport=n]
BB6492 -> BB6511 [tailport=s, headport=n, color=gray]
BB6493 [shape=record label="{19448: write-property[v12,'id',v11]|19449: \<variable-non-null-undef\>['decl']*|19450: read-variable['checkLVal',v18,v17]|19451: read-variable['decl',v20,-]|19452: read-property[v20,'id',v19]|19453: \<variable-non-null-undef\>['decl']|19454: constant[true,v21]}" ] 
BB6493 -> BB6494 [tailport=s, headport=n, headlabel="      6494"]
BB6493 -> BB6511 [tailport=s, headport=n, color=gray]
BB6494 [shape=record label="{19455: call-checkLVal [v17,v18,v19,v21,-]*}" ] 
BB6494 -> BB6495 [tailport=s, headport=n, headlabel="      6495"]
BB6494 -> BB6511 [tailport=s, headport=n, color=gray]
BB6495 [shape=record label="{19456: read-variable['decl',v23,-]|19457: read-variable['eat',v26,v25]|19458: read-variable['_eq',v27,-]}" ] 
BB6495 -> BB6496 [tailport=s, headport=n, headlabel="      6496"]
BB6495 -> BB6511 [tailport=s, headport=n, color=gray]
BB6496 [shape=record label="{19459: call-eat [v25,v26,v27,v24]}" ] 
BB6496 -> BB6497 [tailport=s, headport=n, headlabel="      6497"]
BB6496 -> BB6511 [tailport=s, headport=n, color=gray]
BB6497 [shape=record label="{19460: if[v24](true-block:6498,false-block:6499)}" ] 
BB6497 -> BB6498 [tailport=s, headport=n, headlabel="      6498"]
BB6497 -> BB6499 [tailport=s, headport=n, headlabel="      6499"]
BB6498 [shape=record label="{19461: read-variable['parseExpression',v29,v28]|19462: constant[true,v30]|19463: read-variable['noIn',v31,-]}" ] 
BB6498 -> BB6500 [tailport=s, headport=n, headlabel="      6500"]
BB6498 -> BB6511 [tailport=s, headport=n, color=gray]
BB6499 [shape=record label="{19464: read-variable['kind',v29,-]|19465: read-variable['_const',v31,-]|19466: read-property[v31,'keyword',v30]|19467: \<variable-non-null-undef\>['_const']|19468: ===[v29,v30,v28]|19469: if[v28](true-block:6501,false-block:6502)}" ] 
BB6499 -> BB6501 [tailport=s, headport=n, headlabel="      6501"]
BB6499 -> BB6502 [tailport=s, headport=n, headlabel="      6502"]
BB6499 -> BB6511 [tailport=s, headport=n, color=gray]
BB6500 [shape=record label="{19470: call-parseExpression [v28,v29,v30,v31,v22]}" ] 
BB6500 -> BB6504 [tailport=s, headport=n, headlabel="      6504"]
BB6500 -> BB6511 [tailport=s, headport=n, color=gray]
BB6501 [shape=record label="{19471: read-variable['unexpected',v33,v32]}" ] 
BB6501 -> BB6503 [tailport=s, headport=n, headlabel="      6503"]
BB6501 -> BB6511 [tailport=s, headport=n, color=gray]
BB6502 [shape=record label="{19472: constant[null,v22]}" ] 
BB6502 -> BB6504 [tailport=s, headport=n]
BB6503 [shape=record label="{19473: call-unexpected [v32,v33,v22]}" ] 
BB6503 -> BB6504 [tailport=s, headport=n]
BB6503 -> BB6511 [tailport=s, headport=n, color=gray]
BB6504 [shape=record label="{19474: write-property[v23,'init',v22]|19475: \<variable-non-null-undef\>['decl']*|19476: read-variable['node',v30,-]|19477: read-property[v30,'declarations',v29]|19478: \<variable-non-null-undef\>['node']|19479: read-property[v29,'push',-]|19480: \<property-non-null-undef\>[v30,'declarations']|19481: read-variable['finishNode',v33,v32]|19482: read-variable['decl',v34,-]|19483: constant[\"VariableDeclarator\",v35]}" ] 
BB6504 -> BB6505 [tailport=s, headport=n, headlabel="      6505"]
BB6504 -> BB6511 [tailport=s, headport=n, color=gray]
BB6505 [shape=record label="{19484: call-finishNode [v32,v33,v34,v35,v31]}" ] 
BB6505 -> BB6506 [tailport=s, headport=n, headlabel="      6506"]
BB6505 -> BB6511 [tailport=s, headport=n, color=gray]
BB6506 [shape=record label="{19485: call-node.declarations.push [v29,'push',v31,-]*}" ] 
BB6506 -> BB6507 [tailport=s, headport=n, headlabel="      6507"]
BB6506 -> BB6511 [tailport=s, headport=n, color=gray]
BB6507 [shape=record label="{19486: read-variable['eat',v39,v38]|19487: read-variable['_comma',v40,-]}" ] 
BB6507 -> BB6508 [tailport=s, headport=n, headlabel="      6508"]
BB6507 -> BB6511 [tailport=s, headport=n, color=gray]
BB6508 [shape=record label="{19488: call-eat [v38,v39,v40,v37]}" ] 
BB6508 -> BB6509 [tailport=s, headport=n, headlabel="      6509"]
BB6508 -> BB6511 [tailport=s, headport=n, color=gray]
BB6509 [shape=record label="{19489: ![v37,v36]|19490: if[v36](true-block:6485,false-block:6482)}" ] 
BB6509 -> BB6485 [tailport=s, headport=n]
BB6509 -> BB6482 [tailport=s, headport=n]
BB6509 -> BB6511 [tailport=s, headport=n, color=gray]
BB6510 [shape=record label="{19491: return[v1]}" ] 
BB6511 [shape=record label="{19492: exceptional-return}" ] 
//#$~ 6348
}
