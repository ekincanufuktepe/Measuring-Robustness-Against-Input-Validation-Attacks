digraph {
rankdir="TD"
BB_entry78[shape=none,label=""];
BB_entry78 -> BB885 [tailport=s, headport=n, headlabel="    885"]
BB885 [shape=record label="{2779: constant[undefined,v1]|2780: vardecl['inputDataClone']}" ] 
BB885 -> BB886 [tailport=s, headport=n, headlabel="      886"]
BB886 [shape=record label="{2781: read-variable['extend',v4,v3]|2782: new[v5]|2783: read-variable['inputData',v6,-]}" ] 
BB886 -> BB887 [tailport=s, headport=n, headlabel="      887"]
BB886 -> BB903 [tailport=s, headport=n, color=gray, headlabel="      903"]
BB887 [shape=record label="{2784: call-extend [v3,v4,v5,v6,v2]}" ] 
BB887 -> BB888 [tailport=s, headport=n, headlabel="      888"]
BB887 -> BB903 [tailport=s, headport=n, color=gray]
BB888 [shape=record label="{2785: write-variable[v2,'inputDataClone']*|2786: read-variable['boolOrFn',v10,v9]|2787: read-variable['this',v13,-]|2788: read-property[v13,'options',v12]|2789: read-property[v12,'enable',v11]|2790: \<property-non-null-undef\>[v13,'options']|2791: read-variable['Array',v15,-]|2792: read-variable['this',v16,-]|2793: read-variable['inputDataClone',v17,-]}" ] 
BB888 -> BB889 [tailport=s, headport=n, headlabel="      889"]
BB888 -> BB903 [tailport=s, headport=n, color=gray]
BB889 [shape=record label="{2794: construct [-,v15,v16,v17,v14]}" ] 
BB889 -> BB890 [tailport=s, headport=n, headlabel="      890"]
BB889 -> BB903 [tailport=s, headport=n, color=gray]
BB890 [shape=record label="{2795: call-boolOrFn [v9,v10,v11,v14,v8]}" ] 
BB890 -> BB891 [tailport=s, headport=n, headlabel="      891"]
BB890 -> BB903 [tailport=s, headport=n, color=gray]
BB891 [shape=record label="{2796: ![v8,v7]|2797: if[v7](true-block:892,false-block:895)}" ] 
BB891 -> BB892 [tailport=s, headport=n, headlabel="      892"]
BB891 -> BB895 [tailport=s, headport=n, headlabel="      895"]
BB891 -> BB903 [tailport=s, headport=n, color=gray]
BB892 [shape=record label="{2798: read-variable['this',v19,-]|2799: read-property[v19,'reset',-]}" ] 
BB892 -> BB893 [tailport=s, headport=n, headlabel="      893"]
BB892 -> BB903 [tailport=s, headport=n, color=gray]
BB893 [shape=record label="{2800: call-this.reset [v19,'reset',-]*}" ] 
BB893 -> BB894 [tailport=s, headport=n, headlabel="      894"]
BB893 -> BB903 [tailport=s, headport=n, color=gray]
BB894 [shape=record label="{2801: read-variable['this',v21,-]|2802: read-variable['STATE_FAILED',v20,-]|2803: write-property[v21,'state',v20]*|2804: constant[undefined,v1]}" ] 
BB894 -> BB902 [tailport=s, headport=n, headlabel="      902"]
BB894 -> BB903 [tailport=s, headport=n, color=gray]
BB895 [shape=record label="{2805: read-variable['this',v21,-]|2806: read-property[v21,'state',v19]|2807: read-variable['STATE_RECOGNIZED',v24,-]|2808: read-variable['STATE_CANCELLED',v25,-]|2809: |[v24,v25,v22]|2810: read-variable['STATE_FAILED',v23,-]|2811: |[v22,v23,v20]|2812: &[v19,v20,v18]|2813: if[v18](true-block:896,false-block:897)}" ] 
BB895 -> BB896 [tailport=s, headport=n, headlabel="      896"]
BB895 -> BB897 [tailport=s, headport=n, headlabel="      897"]
BB895 -> BB903 [tailport=s, headport=n, color=gray]
BB896 [shape=record label="{2814: read-variable['this',v27,-]|2815: read-variable['STATE_POSSIBLE',v26,-]|2816: write-property[v27,'state',v26]*}" ] 
BB896 -> BB897 [tailport=s, headport=n]
BB896 -> BB903 [tailport=s, headport=n, color=gray]
BB897 [shape=record label="{2817: read-variable['this',v27,-]|2818: read-variable['this',v29,-]|2819: read-property[v29,'process',-]|2820: read-variable['inputDataClone',v30,-]}" ] 
BB897 -> BB898 [tailport=s, headport=n, headlabel="      898"]
BB897 -> BB903 [tailport=s, headport=n, color=gray]
BB898 [shape=record label="{2821: call-this.process [v29,'process',v30,v26]}" ] 
BB898 -> BB899 [tailport=s, headport=n, headlabel="      899"]
BB898 -> BB903 [tailport=s, headport=n, color=gray]
BB899 [shape=record label="{2822: write-property[v27,'state',v26]*|2823: read-variable['this',v34,-]|2824: read-property[v34,'state',v32]|2825: read-variable['STATE_BEGAN',v39,-]|2826: read-variable['STATE_CHANGED',v40,-]|2827: |[v39,v40,v37]|2828: read-variable['STATE_ENDED',v38,-]|2829: |[v37,v38,v35]|2830: read-variable['STATE_CANCELLED',v36,-]|2831: |[v35,v36,v33]|2832: &[v32,v33,v31]|2833: if[v31](true-block:900,false-block:902)}" ] 
BB899 -> BB900 [tailport=s, headport=n, headlabel="      900"]
BB899 -> BB902 [tailport=s, headport=n]
BB899 -> BB903 [tailport=s, headport=n, color=gray]
BB900 [shape=record label="{2834: read-variable['this',v42,-]|2835: read-property[v42,'tryEmit',-]|2836: read-variable['inputDataClone',v43,-]}" ] 
BB900 -> BB901 [tailport=s, headport=n, headlabel="      901"]
BB900 -> BB903 [tailport=s, headport=n, color=gray]
BB901 [shape=record label="{2837: call-this.tryEmit [v42,'tryEmit',v43,-]*}" ] 
BB901 -> BB902 [tailport=s, headport=n]
BB901 -> BB903 [tailport=s, headport=n, color=gray]
BB902 [shape=record label="{2838: return[v1]}" ] 
BB903 [shape=record label="{2839: exceptional-return}" ] 
//#$~ 1463
}
