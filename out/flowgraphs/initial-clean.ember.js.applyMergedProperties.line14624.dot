digraph {
rankdir="TD"
BB_entry673[shape=none,label=""];
BB_entry673 -> BB7947 [tailport=s, headport=n, headlabel="    7947"]
BB7947 [shape=record label="{27531: constant[undefined,v1]|27532: vardecl['baseValue']|27533: vardecl['newBase']|27534: vardecl['hasFunction']|27535: vardecl['prop']|27536: vardecl['propValue']}" ] 
BB7947 -> BB7948 [tailport=s, headport=n, headlabel="      7948"]
BB7948 [shape=record label="{27537: read-variable['values',v3,-]|27538: read-variable['key',v4,-]|27539: read-property[v3,v4,v2]|27540: \<variable-non-null-undef\>['values']|27541: if[v2](true-block:7950,false-block:7949)}" ] 
BB7948 -> BB7950 [tailport=s, headport=n, headlabel="      7950"]
BB7948 -> BB7949 [tailport=s, headport=n, headlabel="      7949"]
BB7948 -> BB7978 [tailport=s, headport=n, color=gray, headlabel="      7978"]
BB7949 [shape=record label="{27542: read-variable['obj',v3,-]|27543: read-variable['key',v4,-]|27544: read-property[v3,v4,v2]|27545: \<variable-non-null-undef\>['obj']}" ] 
BB7949 -> BB7950 [tailport=s, headport=n]
BB7949 -> BB7978 [tailport=s, headport=n, color=gray]
BB7950 [shape=record label="{27546: write-variable[v2,'baseValue']*|27547: read-variable['Ember',v4,-]|27548: read-property[v4,'assert',-]|27549: \<variable-non-null-undef\>['Ember']|27550: constant[\"You passed in `\",v16]|27551: read-variable['JSON',v19,-]|27552: read-property[v19,'stringify',-]|27553: \<variable-non-null-undef\>['JSON']|27554: read-variable['value',v20,-]}" ] 
BB7950 -> BB7951 [tailport=s, headport=n, headlabel="      7951"]
BB7950 -> BB7978 [tailport=s, headport=n, color=gray]
BB7951 [shape=record label="{27555: call-JSON.stringify [v19,'stringify',v20,v17]}" ] 
BB7951 -> BB7952 [tailport=s, headport=n, headlabel="      7952"]
BB7951 -> BB7978 [tailport=s, headport=n, color=gray]
BB7952 [shape=record label="{27556: +[v16,v17,v14]|27557: constant[\"` as the value for `\",v15]|27558: +[v14,v15,v12]|27559: read-variable['key',v13,-]|27560: +[v12,v13,v10]|27561: constant[\"` but `\",v11]|27562: +[v10,v11,v8]|27563: read-variable['key',v9,-]|27564: +[v8,v9,v6]|27565: constant[\"` cannot be an Array\",v7]|27566: +[v6,v7,v5]|27567: read-variable['isArray',v24,v23]|27568: read-variable['value',v25,-]}" ] 
BB7952 -> BB7953 [tailport=s, headport=n, headlabel="      7953"]
BB7952 -> BB7978 [tailport=s, headport=n, color=gray]
BB7953 [shape=record label="{27569: call-isArray [v23,v24,v25,v22]}" ] 
BB7953 -> BB7954 [tailport=s, headport=n, headlabel="      7954"]
BB7953 -> BB7978 [tailport=s, headport=n, color=gray]
BB7954 [shape=record label="{27570: ![v22,v21]}" ] 
BB7954 -> BB7955 [tailport=s, headport=n, headlabel="      7955"]
BB7954 -> BB7978 [tailport=s, headport=n, color=gray]
BB7955 [shape=record label="{27571: call-Ember.assert [v4,'assert',v5,v21,-]*}" ] 
BB7955 -> BB7956 [tailport=s, headport=n, headlabel="      7956"]
BB7955 -> BB7978 [tailport=s, headport=n, color=gray]
BB7956 [shape=record label="{27572: read-variable['baseValue',v27,-]|27573: ![v27,v26]|27574: if[v26](true-block:7957,false-block:7958)}" ] 
BB7956 -> BB7957 [tailport=s, headport=n, headlabel="      7957"]
BB7956 -> BB7958 [tailport=s, headport=n, headlabel="      7958"]
BB7956 -> BB7978 [tailport=s, headport=n, color=gray]
BB7957 [shape=record label="{27575: read-variable['value',v1,-]}" ] 
BB7957 -> BB7977 [tailport=s, headport=n, headlabel="      7977"]
BB7957 -> BB7978 [tailport=s, headport=n, color=gray]
BB7958 [shape=record label="{27576: read-variable['merge',v30,v29]|27577: new[v31]|27578: read-variable['baseValue',v32,-]}" ] 
BB7958 -> BB7959 [tailport=s, headport=n, headlabel="      7959"]
BB7958 -> BB7978 [tailport=s, headport=n, color=gray]
BB7959 [shape=record label="{27579: call-merge [v29,v30,v31,v32,v28]}" ] 
BB7959 -> BB7960 [tailport=s, headport=n, headlabel="      7960"]
BB7959 -> BB7978 [tailport=s, headport=n, color=gray]
BB7960 [shape=record label="{27580: write-variable[v28,'newBase']*|27581: constant[false,v33]|27582: write-variable[v33,'hasFunction']*|27583: read-variable['value',v35,-]}" ] 
BB7960 -> BB7961 [tailport=s, headport=n, headlabel="      7961"]
BB7960 -> BB7978 [tailport=s, headport=n, color=gray]
BB7961 [shape=record label="{27584: begin-for-in[v35,v36]}" ] 
BB7961 -> BB7962 [tailport=s, headport=n, headlabel="      7962"]
BB7961 -> BB7978 [tailport=s, headport=n, color=gray]
BB7962 [shape=record label="{27585: has-next[v36,v37]|27586: if[v37](true-block:7963,false-block:7974)}" ] 
BB7962 -> BB7963 [tailport=s, headport=n, headlabel="      7963"]
BB7962 -> BB7974 [tailport=s, headport=n, headlabel="      7974"]
BB7963 [shape=record label="{27587: next-property[v36,v38]|27588: write-variable[v38,'prop']|27589: read-variable['value',v42,-]|27590: read-property[v42,'hasOwnProperty',-]|27591: \<variable-non-null-undef\>['value']|27592: read-variable['prop',v43,-]}" ] 
BB7963 -> BB7964 [tailport=s, headport=n, headlabel="      7964"]
BB7963 -> BB7978 [tailport=s, headport=n, color=gray]
BB7964 [shape=record label="{27593: call-value.hasOwnProperty [v42,'hasOwnProperty',v43,v40]}" ] 
BB7964 -> BB7965 [tailport=s, headport=n, headlabel="      7965"]
BB7964 -> BB7978 [tailport=s, headport=n, color=gray]
BB7965 [shape=record label="{27594: ![v40,v39]|27595: if[v39](true-block:7973,false-block:7966)}" ] 
BB7965 -> BB7973 [tailport=s, headport=n, headlabel="      7973"]
BB7965 -> BB7966 [tailport=s, headport=n, headlabel="      7966"]
BB7965 -> BB7978 [tailport=s, headport=n, color=gray]
BB7966 [shape=record label="{27596: read-variable['value',v45,-]|27597: read-variable['prop',v46,-]|27598: read-property[v45,v46,v44]|27599: \<variable-non-null-undef\>['value']|27600: write-variable[v44,'propValue']*|27601: read-variable['isMethod',v49,v48]|27602: read-variable['propValue',v50,-]}" ] 
BB7966 -> BB7967 [tailport=s, headport=n, headlabel="      7967"]
BB7966 -> BB7978 [tailport=s, headport=n, color=gray]
BB7967 [shape=record label="{27603: call-isMethod [v48,v49,v50,v47]}" ] 
BB7967 -> BB7968 [tailport=s, headport=n, headlabel="      7968"]
BB7967 -> BB7978 [tailport=s, headport=n, color=gray]
BB7968 [shape=record label="{27604: if[v47](true-block:7969,false-block:7970)}" ] 
BB7968 -> BB7969 [tailport=s, headport=n, headlabel="      7969"]
BB7968 -> BB7970 [tailport=s, headport=n, headlabel="      7970"]
BB7969 [shape=record label="{27605: constant[true,v51]|27606: write-variable[v51,'hasFunction']*|27607: read-variable['newBase',v53,-]|27608: read-variable['prop',v54,-]|27609: read-variable['giveMethodSuper',v56,v55]|27610: read-variable['obj',v57,-]|27611: read-variable['prop',v58,-]|27612: read-variable['propValue',v59,-]|27613: read-variable['baseValue',v60,-]|27614: new[v61]}" ] 
BB7969 -> BB7971 [tailport=s, headport=n, headlabel="      7971"]
BB7969 -> BB7978 [tailport=s, headport=n, color=gray]
BB7970 [shape=record label="{27615: read-variable['newBase',v52,-]|27616: read-variable['prop',v53,-]|27617: read-variable['propValue',v51,-]|27618: write-property[v52,v53,v51]|27619: \<variable-non-null-undef\>['newBase']*}" ] 
BB7970 -> BB7973 [tailport=s, headport=n]
BB7970 -> BB7978 [tailport=s, headport=n, color=gray]
BB7971 [shape=record label="{27620: call-giveMethodSuper [v55,v56,v57,v58,v59,v60,v61,v52]}" ] 
BB7971 -> BB7972 [tailport=s, headport=n, headlabel="      7972"]
BB7971 -> BB7978 [tailport=s, headport=n, color=gray]
BB7972 [shape=record label="{27621: write-property[v53,v54,v52]|27622: \<variable-non-null-undef\>['newBase']*}" ] 
BB7972 -> BB7973 [tailport=s, headport=n]
BB7972 -> BB7978 [tailport=s, headport=n, color=gray]
BB7973 [shape=record label="{27623: end-for-in(begin-node:27584)}" ] 
BB7973 -> BB7962 [tailport=s, headport=n]
BB7974 [shape=record label="{27624: read-variable['hasFunction',v39,-]|27625: if[v39](true-block:7975,false-block:7976)}" ] 
BB7974 -> BB7975 [tailport=s, headport=n, headlabel="      7975"]
BB7974 -> BB7976 [tailport=s, headport=n, headlabel="      7976"]
BB7974 -> BB7978 [tailport=s, headport=n, color=gray]
BB7975 [shape=record label="{27626: read-variable['newBase',v41,-]|27627: read-variable['superFunction',v40,-]|27628: write-property[v41,'_super',v40]|27629: \<variable-non-null-undef\>['newBase']*}" ] 
BB7975 -> BB7976 [tailport=s, headport=n]
BB7975 -> BB7978 [tailport=s, headport=n, color=gray]
BB7976 [shape=record label="{27630: read-variable['newBase',v1,-]}" ] 
BB7976 -> BB7977 [tailport=s, headport=n]
BB7976 -> BB7978 [tailport=s, headport=n, color=gray]
BB7977 [shape=record label="{27631: return[v1]}" ] 
BB7978 [shape=record label="{27632: exceptional-return}" ] 
//#$~ 14652
}
