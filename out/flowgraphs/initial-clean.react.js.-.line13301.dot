digraph {
rankdir="TD"
BB_entry528[shape=none,label=""];
BB_entry528 -> BB7537 [tailport=s, headport=n, headlabel="    7537"]
BB7537 [shape=record label="{25365: constant[undefined,v1]}" ] 
BB7537 -> BB7538 [tailport=s, headport=n, headlabel="      7538"]
BB7538 [shape=record label="{25366: constant[\"production\",v3]|25367: constant[\"development\",v4]|25368: !==[v3,v4,v2]|25369: if[v2](true-block:7539,false-block:7540)}" ] 
BB7538 -> BB7539 [tailport=s, headport=n, headlabel="      7539"]
BB7538 -> BB7540 [tailport=s, headport=n, headlabel="      7540"]
BB7538 -> BB7554 [tailport=s, headport=n, color=gray, headlabel="      7554"]
BB7539 [shape=record label="{25370: read-variable['invariant',v6,v5]|25371: read-variable['ReactOwner',v9,-]|25372: read-property[v9,'isValidOwner',-]|25373: \<variable-non-null-undef\>['ReactOwner']|25374: read-variable['owner',v10,-]}" ] 
BB7539 -> BB7541 [tailport=s, headport=n, headlabel="      7541"]
BB7539 -> BB7554 [tailport=s, headport=n, color=gray]
BB7540 [shape=record label="{25375: read-variable['invariant',v6,v5]|25376: read-variable['ReactOwner',v9,-]|25377: read-property[v9,'isValidOwner',-]|25378: \<variable-non-null-undef\>['ReactOwner']|25379: read-variable['owner',v10,-]}" ] 
BB7540 -> BB7544 [tailport=s, headport=n, headlabel="      7544"]
BB7540 -> BB7554 [tailport=s, headport=n, color=gray]
BB7541 [shape=record label="{25380: call-ReactOwner.isValidOwner [v9,'isValidOwner',v10,v7]}" ] 
BB7541 -> BB7542 [tailport=s, headport=n, headlabel="      7542"]
BB7541 -> BB7554 [tailport=s, headport=n, color=gray]
BB7542 [shape=record label="{25381: constant[\"removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This \",v18]|25382: constant[\"usually means that you're trying to remove a ref to a component that \",v19]|25383: +[v18,v19,v16]|25384: constant[\"doesn't have an owner (that is, was not created inside of another \",v17]|25385: +[v16,v17,v14]|25386: constant[\"component's `render` method). Try rendering this component inside of \",v15]|25387: +[v14,v15,v12]|25388: constant[\"a new top-level component which will hold the ref.\",v13]|25389: +[v12,v13,v11]}" ] 
BB7542 -> BB7543 [tailport=s, headport=n, headlabel="      7543"]
BB7542 -> BB7554 [tailport=s, headport=n, color=gray]
BB7543 [shape=record label="{25390: call-invariant [v5,v6,v7,v11,-]}" ] 
BB7543 -> BB7546 [tailport=s, headport=n, headlabel="      7546"]
BB7543 -> BB7554 [tailport=s, headport=n, color=gray]
BB7544 [shape=record label="{25391: call-ReactOwner.isValidOwner [v9,'isValidOwner',v10,v7]}" ] 
BB7544 -> BB7545 [tailport=s, headport=n, headlabel="      7545"]
BB7544 -> BB7554 [tailport=s, headport=n, color=gray]
BB7545 [shape=record label="{25392: call-invariant [v5,v6,v7,-]}" ] 
BB7545 -> BB7546 [tailport=s, headport=n]
BB7545 -> BB7554 [tailport=s, headport=n, color=gray]
BB7546 [shape=record label="{25393: read-variable['owner',v11,-]|25394: read-property[v11,'getPublicInstance',-]|25395: \<variable-non-null-undef\>['owner']}" ] 
BB7546 -> BB7547 [tailport=s, headport=n, headlabel="      7547"]
BB7546 -> BB7554 [tailport=s, headport=n, color=gray]
BB7547 [shape=record label="{25396: call-owner.getPublicInstance [v11,'getPublicInstance',v9]}" ] 
BB7547 -> BB7548 [tailport=s, headport=n, headlabel="      7548"]
BB7547 -> BB7554 [tailport=s, headport=n, color=gray]
BB7548 [shape=record label="{25397: read-property[v9,'refs',v8]|25398: read-variable['ref',v12,-]|25399: read-property[v8,v12,v6]|25400: \<property-non-null-undef\>[v9,'refs']|25401: read-variable['component',v14,-]|25402: read-property[v14,'getPublicInstance',-]|25403: \<variable-non-null-undef\>['component']}" ] 
BB7548 -> BB7549 [tailport=s, headport=n, headlabel="      7549"]
BB7548 -> BB7554 [tailport=s, headport=n, color=gray]
BB7549 [shape=record label="{25404: call-component.getPublicInstance [v14,'getPublicInstance',v7]}" ] 
BB7549 -> BB7550 [tailport=s, headport=n, headlabel="      7550"]
BB7549 -> BB7554 [tailport=s, headport=n, color=gray]
BB7550 [shape=record label="{25405: ===[v6,v7,v5]|25406: if[v5](true-block:7551,false-block:7553)}" ] 
BB7550 -> BB7551 [tailport=s, headport=n, headlabel="      7551"]
BB7550 -> BB7553 [tailport=s, headport=n, headlabel="      7553"]
BB7550 -> BB7554 [tailport=s, headport=n, color=gray]
BB7551 [shape=record label="{25407: read-variable['owner',v16,-]|25408: read-property[v16,'detachRef',-]|25409: \<variable-non-null-undef\>['owner']|25410: read-variable['ref',v17,-]}" ] 
BB7551 -> BB7552 [tailport=s, headport=n, headlabel="      7552"]
BB7551 -> BB7554 [tailport=s, headport=n, color=gray]
BB7552 [shape=record label="{25411: call-owner.detachRef [v16,'detachRef',v17,-]*}" ] 
BB7552 -> BB7553 [tailport=s, headport=n]
BB7552 -> BB7554 [tailport=s, headport=n, color=gray]
BB7553 [shape=record label="{25412: return[v1]}" ] 
BB7554 [shape=record label="{25413: exceptional-return}" ] 
//#$~ 13313
}
