digraph {
rankdir="TD"
BB_entry42[shape=none,label=""];
BB_entry42 -> BB480 [tailport=s, headport=n, headlabel="    480"]
BB480 [shape=record label="{1359: constant[undefined,v1]|1360: vardecl['module']|1361: vardecl['syntheticMid']|1362: vardecl['mid']|1363: vardecl['deps']|1364: vardecl['i']|1365: vardecl['strict']}" ] 
BB480 -> BB481 [tailport=s, headport=n, headlabel="      481"]
BB481 [shape=record label="{1366: read-variable['isString',v4,v3]|1367: read-variable['a1',v5,-]}" ] 
BB481 -> BB482 [tailport=s, headport=n, headlabel="      482"]
BB481 -> BB537 [tailport=s, headport=n, color=gray, headlabel="      537"]
BB482 [shape=record label="{1368: call-isString [v3,v4,v5,v2]}" ] 
BB482 -> BB483 [tailport=s, headport=n, headlabel="      483"]
BB482 -> BB537 [tailport=s, headport=n, color=gray]
BB483 [shape=record label="{1369: if[v2](true-block:484,false-block:493)}" ] 
BB483 -> BB484 [tailport=s, headport=n, headlabel="      484"]
BB483 -> BB493 [tailport=s, headport=n, headlabel="      493"]
BB484 [shape=record label="{1370: read-variable['getModule',v8,v7]|1371: read-variable['a1',v9,-]|1372: read-variable['referenceModule',v10,-]|1373: constant[true,v11]}" ] 
BB484 -> BB485 [tailport=s, headport=n, headlabel="      485"]
BB484 -> BB537 [tailport=s, headport=n, color=gray]
BB485 [shape=record label="{1374: call-getModule [v7,v8,v9,v10,v11,v6]}" ] 
BB485 -> BB486 [tailport=s, headport=n, headlabel="      486"]
BB485 -> BB537 [tailport=s, headport=n, color=gray]
BB486 [shape=record label="{1375: write-variable[v6,'module']*|1376: read-variable['module',v12,-]|1377: if[v12](true-block:487,false-block:488)}" ] 
BB486 -> BB488 [tailport=s, headport=n, headlabel="      488"]
BB486 -> BB487 [tailport=s, headport=n, headlabel="      487"]
BB486 -> BB537 [tailport=s, headport=n, color=gray]
BB487 [shape=record label="{1378: read-variable['module',v13,-]|1379: read-property[v13,'executed',v12]|1380: \<variable-non-null-undef\>['module']}" ] 
BB487 -> BB488 [tailport=s, headport=n]
BB487 -> BB537 [tailport=s, headport=n, color=gray]
BB488 [shape=record label="{1381: if[v12](true-block:489,false-block:490)}" ] 
BB488 -> BB489 [tailport=s, headport=n, headlabel="      489"]
BB488 -> BB490 [tailport=s, headport=n, headlabel="      490"]
BB489 [shape=record label="{1382: read-variable['module',v13,-]|1383: read-property[v13,'result',v1]|1384: \<variable-non-null-undef\>['module']}" ] 
BB489 -> BB536 [tailport=s, headport=n, headlabel="      536"]
BB489 -> BB537 [tailport=s, headport=n, color=gray]
BB490 [shape=record label="{1385: read-variable['makeError',v15,v14]|1386: constant[\"undefinedModule\",v16]|1387: read-variable['a1',v17,-]}" ] 
BB490 -> BB491 [tailport=s, headport=n, headlabel="      491"]
BB490 -> BB537 [tailport=s, headport=n, color=gray]
BB491 [shape=record label="{1388: call-makeError [v14,v15,v16,v17,v13]}" ] 
BB491 -> BB492 [tailport=s, headport=n, headlabel="      492"]
BB491 -> BB537 [tailport=s, headport=n, color=gray]
BB492 [shape=record label="{1389: throw[v13]*}" ] 
BB492 -> BB493 [tailport=s, headport=n]
BB492 -> BB537 [tailport=s, headport=n, color=gray]
BB493 [shape=record label="{1390: read-variable['isArray',v9,v8]|1391: read-variable['a1',v10,-]}" ] 
BB493 -> BB494 [tailport=s, headport=n, headlabel="      494"]
BB493 -> BB537 [tailport=s, headport=n, color=gray]
BB494 [shape=record label="{1392: call-isArray [v8,v9,v10,v7]}" ] 
BB494 -> BB495 [tailport=s, headport=n, headlabel="      495"]
BB494 -> BB537 [tailport=s, headport=n, color=gray]
BB495 [shape=record label="{1393: ![v7,v6]|1394: if[v6](true-block:496,false-block:499)}" ] 
BB495 -> BB496 [tailport=s, headport=n, headlabel="      496"]
BB495 -> BB499 [tailport=s, headport=n, headlabel="      499"]
BB495 -> BB537 [tailport=s, headport=n, color=gray]
BB496 [shape=record label="{1395: read-variable['config',v12,v11]|1396: read-variable['a1',v13,-]|1397: constant[0.0,v14]|1398: read-variable['referenceModule',v15,-]}" ] 
BB496 -> BB497 [tailport=s, headport=n, headlabel="      497"]
BB496 -> BB537 [tailport=s, headport=n, color=gray]
BB497 [shape=record label="{1399: call-config [v11,v12,v13,v14,v15,-]*}" ] 
BB497 -> BB498 [tailport=s, headport=n, headlabel="      498"]
BB497 -> BB537 [tailport=s, headport=n, color=gray]
BB498 [shape=record label="{1400: read-variable['a2',v16,-]|1401: write-variable[v16,'a1']*|1402: read-variable['a3',v17,-]|1403: write-variable[v17,'a2']*}" ] 
BB498 -> BB499 [tailport=s, headport=n]
BB498 -> BB537 [tailport=s, headport=n, color=gray]
BB499 [shape=record label="{1404: read-variable['isArray',v13,v12]|1405: read-variable['a1',v14,-]}" ] 
BB499 -> BB500 [tailport=s, headport=n, headlabel="      500"]
BB499 -> BB537 [tailport=s, headport=n, color=gray]
BB500 [shape=record label="{1406: call-isArray [v12,v13,v14,v11]}" ] 
BB500 -> BB501 [tailport=s, headport=n, headlabel="      501"]
BB500 -> BB537 [tailport=s, headport=n, color=gray]
BB501 [shape=record label="{1407: if[v11](true-block:502,false-block:535)}" ] 
BB501 -> BB502 [tailport=s, headport=n, headlabel="      502"]
BB501 -> BB535 [tailport=s, headport=n, headlabel="      535"]
BB502 [shape=record label="{1408: read-variable['a1',v17,-]|1409: read-property[v17,'length',v16]|1410: \<variable-non-null-undef\>['a1']|1411: ![v16,v15]|1412: if[v15](true-block:503,false-block:504)}" ] 
BB502 -> BB503 [tailport=s, headport=n, headlabel="      503"]
BB502 -> BB504 [tailport=s, headport=n, headlabel="      504"]
BB502 -> BB537 [tailport=s, headport=n, color=gray]
BB503 [shape=record label="{1413: read-variable['a2',v18,-]|1414: if[v18](true-block:505,false-block:535)}" ] 
BB503 -> BB535 [tailport=s, headport=n]
BB503 -> BB505 [tailport=s, headport=n, headlabel="      505"]
BB503 -> BB537 [tailport=s, headport=n, color=gray]
BB504 [shape=record label="{1415: constant[\"require*\",v19]|1416: read-variable['uid',v22,v21]}" ] 
BB504 -> BB507 [tailport=s, headport=n, headlabel="      507"]
BB504 -> BB537 [tailport=s, headport=n, color=gray]
BB505 [shape=record label="{1417: read-variable['a2',v20,v19]}" ] 
BB505 -> BB506 [tailport=s, headport=n, headlabel="      506"]
BB505 -> BB537 [tailport=s, headport=n, color=gray]
BB506 [shape=record label="{1418: call-a2 [v19,v20,-]}" ] 
BB506 -> BB535 [tailport=s, headport=n]
BB506 -> BB537 [tailport=s, headport=n, color=gray]
BB507 [shape=record label="{1419: call-uid [v21,v22,v20]}" ] 
BB507 -> BB508 [tailport=s, headport=n, headlabel="      508"]
BB507 -> BB537 [tailport=s, headport=n, color=gray]
BB508 [shape=record label="{1420: +[v19,v20,v18]|1421: write-variable[v18,'syntheticMid']*|1422: read-variable['Array',v25,-]}" ] 
BB508 -> BB509 [tailport=s, headport=n, headlabel="      509"]
BB508 -> BB537 [tailport=s, headport=n, color=gray]
BB509 [shape=record label="{1423: construct [-,v25,v24]}" ] 
BB509 -> BB510 [tailport=s, headport=n, headlabel="      510"]
BB509 -> BB537 [tailport=s, headport=n, color=gray]
BB510 [shape=record label="{1424: write-variable[v24,'deps']*|1425: constant[0.0,v26]|1426: write-variable[v26,'i']*}" ] 
BB510 -> BB511 [tailport=s, headport=n, headlabel="      511"]
BB511 [shape=record label="{1427: read-variable['i',v27,-]|1428: read-variable['a1',v29,-]|1429: read-property[v29,'length',v28]|1430: \<variable-non-null-undef\>['a1']|1431: \<[v27,v28,v23]|1432: if[v23](true-block:512,false-block:513)}" ] 
BB511 -> BB512 [tailport=s, headport=n, headlabel="      512"]
BB511 -> BB513 [tailport=s, headport=n, headlabel="      513"]
BB511 -> BB537 [tailport=s, headport=n, color=gray]
BB512 [shape=record label="{1433: read-variable['a1',v31,-]|1434: constant[1.0,v33]|1435: read-variable['i',v34,-]|1436: +[v34,v32]|1437: +[v32,v33,v35]|1438: write-variable[v35,'i']|1439: read-property[v31,v32,v30]|1440: \<variable-non-null-undef\>['a1']|1441: write-variable[v30,'mid']*|1442: read-variable['deps',v37,-]|1443: read-property[v37,'push',-]|1444: \<variable-non-null-undef\>['deps']|1445: read-variable['getModule',v40,v39]|1446: read-variable['mid',v41,-]|1447: read-variable['referenceModule',v42,-]}" ] 
BB512 -> BB514 [tailport=s, headport=n, headlabel="      514"]
BB512 -> BB537 [tailport=s, headport=n, color=gray]
BB513 [shape=record label="{1448: read-variable['mix',v32,v31]|1449: read-variable['makeModuleInfo',v35,v34]|1450: constant[\"\",v36]|1451: read-variable['syntheticMid',v37,-]|1452: constant[0.0,v38]|1453: constant[\"\",v39]}" ] 
BB513 -> BB516 [tailport=s, headport=n, headlabel="      516"]
BB513 -> BB537 [tailport=s, headport=n, color=gray]
BB514 [shape=record label="{1454: call-getModule [v39,v40,v41,v42,v38]}" ] 
BB514 -> BB515 [tailport=s, headport=n, headlabel="      515"]
BB514 -> BB537 [tailport=s, headport=n, color=gray]
BB515 [shape=record label="{1455: call-deps.push [v37,'push',v38,-]*}" ] 
BB515 -> BB511 [tailport=s, headport=n]
BB515 -> BB537 [tailport=s, headport=n, color=gray]
BB516 [shape=record label="{1456: call-makeModuleInfo [v34,v35,v36,v37,v38,v39,v33]}" ] 
BB516 -> BB517 [tailport=s, headport=n, headlabel="      517"]
BB516 -> BB537 [tailport=s, headport=n, color=gray]
BB517 [shape=record label="{1457: new[v40]|1458: read-variable['arrived',v41,-]|1459: write-property[v40,'injected',v41]|1460: read-variable['deps',v42,-]|1461: write-property[v40,'deps',v42]|1462: read-variable['a2',v43,-]|1463: if[v43](true-block:519,false-block:518)}" ] 
BB517 -> BB519 [tailport=s, headport=n, headlabel="      519"]
BB517 -> BB518 [tailport=s, headport=n, headlabel="      518"]
BB517 -> BB537 [tailport=s, headport=n, color=gray]
BB518 [shape=record label="{1464: read-variable['noop',v43,-]}" ] 
BB518 -> BB519 [tailport=s, headport=n]
BB518 -> BB537 [tailport=s, headport=n, color=gray]
BB519 [shape=record label="{1465: write-property[v40,'def',v43]|1466: read-variable['referenceModule',v45,-]|1467: if[v45](true-block:520,false-block:521)}" ] 
BB519 -> BB520 [tailport=s, headport=n, headlabel="      520"]
BB519 -> BB521 [tailport=s, headport=n, headlabel="      521"]
BB519 -> BB537 [tailport=s, headport=n, color=gray]
BB520 [shape=record label="{1468: read-variable['referenceModule',v46,-]|1469: read-property[v46,'require',v44]|1470: \<variable-non-null-undef\>['referenceModule']}" ] 
BB520 -> BB522 [tailport=s, headport=n, headlabel="      522"]
BB520 -> BB537 [tailport=s, headport=n, color=gray]
BB521 [shape=record label="{1471: read-variable['req',v44,-]}" ] 
BB521 -> BB522 [tailport=s, headport=n]
BB521 -> BB537 [tailport=s, headport=n, color=gray]
BB522 [shape=record label="{1472: write-property[v40,'require',v44]|1473: constant[1.0,v46]|1474: write-property[v40,'gc',v46]}" ] 
BB522 -> BB523 [tailport=s, headport=n, headlabel="      523"]
BB522 -> BB537 [tailport=s, headport=n, color=gray]
BB523 [shape=record label="{1475: call-mix [v31,v32,v33,v40,v30]}" ] 
BB523 -> BB524 [tailport=s, headport=n, headlabel="      524"]
BB523 -> BB537 [tailport=s, headport=n, color=gray]
BB524 [shape=record label="{1476: write-variable[v30,'module']*|1477: read-variable['modules',v48,-]|1478: read-variable['module',v50,-]|1479: read-property[v50,'mid',v49]|1480: \<variable-non-null-undef\>['module']|1481: read-variable['module',v47,-]|1482: write-property[v48,v49,v47]|1483: \<variable-non-null-undef\>['modules']*|1484: read-variable['injectDependencies',v52,v51]|1485: read-variable['module',v53,-]}" ] 
BB524 -> BB525 [tailport=s, headport=n, headlabel="      525"]
BB524 -> BB537 [tailport=s, headport=n, color=gray]
BB525 [shape=record label="{1486: call-injectDependencies [v51,v52,v53,-]*}" ] 
BB525 -> BB526 [tailport=s, headport=n, headlabel="      526"]
BB525 -> BB537 [tailport=s, headport=n, color=gray]
BB526 [shape=record label="{1487: read-variable['checkCompleteGuard',v54,-]|1488: if[v54](true-block:527,false-block:528)}" ] 
BB526 -> BB528 [tailport=s, headport=n, headlabel="      528"]
BB526 -> BB527 [tailport=s, headport=n, headlabel="      527"]
BB526 -> BB537 [tailport=s, headport=n, color=gray]
BB527 [shape=record label="{1489: read-variable['legacyMode',v55,-]|1490: read-variable['sync',v56,-]|1491: !=[v55,v56,v54]}" ] 
BB527 -> BB528 [tailport=s, headport=n]
BB527 -> BB537 [tailport=s, headport=n, color=gray]
BB528 [shape=record label="{1492: write-variable[v54,'strict']*|1493: read-variable['guardCheckComplete',v56,v55]|1494: function-expr[function ( ),v57]}" ] 
BB528 -> BB529 [tailport=s, headport=n, headlabel="      529"]
BB528 -> BB537 [tailport=s, headport=n, color=gray]
BB529 [shape=record label="{1495: call-guardCheckComplete [v55,v56,v57,-]*}" ] 
BB529 -> BB530 [tailport=s, headport=n, headlabel="      530"]
BB529 -> BB537 [tailport=s, headport=n, color=gray]
BB530 [shape=record label="{1496: read-variable['module',v60,-]|1497: read-property[v60,'executed',v59]|1498: \<variable-non-null-undef\>['module']|1499: ![v59,v58]|1500: if[v58](true-block:531,false-block:533)}" ] 
BB530 -> BB531 [tailport=s, headport=n, headlabel="      531"]
BB530 -> BB533 [tailport=s, headport=n, headlabel="      533"]
BB530 -> BB537 [tailport=s, headport=n, color=gray]
BB531 [shape=record label="{1501: read-variable['execQ',v62,-]|1502: read-property[v62,'push',-]|1503: \<variable-non-null-undef\>['execQ']|1504: read-variable['module',v63,-]}" ] 
BB531 -> BB532 [tailport=s, headport=n, headlabel="      532"]
BB531 -> BB537 [tailport=s, headport=n, color=gray]
BB532 [shape=record label="{1505: call-execQ.push [v62,'push',v63,-]*}" ] 
BB532 -> BB533 [tailport=s, headport=n]
BB532 -> BB537 [tailport=s, headport=n, color=gray]
BB533 [shape=record label="{1506: read-variable['checkComplete',v62,v61]}" ] 
BB533 -> BB534 [tailport=s, headport=n, headlabel="      534"]
BB533 -> BB537 [tailport=s, headport=n, color=gray]
BB534 [shape=record label="{1507: call-checkComplete [v61,v62,-]*}" ] 
BB534 -> BB535 [tailport=s, headport=n]
BB534 -> BB537 [tailport=s, headport=n, color=gray]
BB535 [shape=record label="{1508: read-variable['contextRequire',v1,-]}" ] 
BB535 -> BB536 [tailport=s, headport=n]
BB535 -> BB537 [tailport=s, headport=n, color=gray]
BB536 [shape=record label="{1509: return[v1]}" ] 
BB537 [shape=record label="{1510: exceptional-return}" ] 
//#$~ 851
}
