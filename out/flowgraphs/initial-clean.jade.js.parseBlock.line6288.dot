digraph {
rankdir="TD"
BB_entry366[shape=none,label=""];
BB_entry366 -> BB6406 [tailport=s, headport=n, headlabel="    6406"]
BB6406 [shape=record label="{19265: constant[undefined,v1]|19266: vardecl['node']|19267: vardecl['first']|19268: vardecl['strict']|19269: vardecl['oldStrict']|19270: vardecl['stmt']}" ] 
BB6406 -> BB6407 [tailport=s, headport=n, headlabel="      6407"]
BB6407 [shape=record label="{19271: read-variable['startNode',v4,v3]}" ] 
BB6407 -> BB6408 [tailport=s, headport=n, headlabel="      6408"]
BB6407 -> BB6436 [tailport=s, headport=n, color=gray, headlabel="      6436"]
BB6408 [shape=record label="{19272: call-startNode [v3,v4,v2]}" ] 
BB6408 -> BB6409 [tailport=s, headport=n, headlabel="      6409"]
BB6408 -> BB6436 [tailport=s, headport=n, color=gray]
BB6409 [shape=record label="{19273: write-variable[v2,'node']*|19274: constant[true,v5]|19275: write-variable[v5,'first']*|19276: constant[false,v6]|19277: write-variable[v6,'strict']*|19278: read-variable['node',v8,-]|19279: read-variable['Array',v9,-]}" ] 
BB6409 -> BB6410 [tailport=s, headport=n, headlabel="      6410"]
BB6409 -> BB6436 [tailport=s, headport=n, color=gray]
BB6410 [shape=record label="{19280: construct [-,v9,v7]}" ] 
BB6410 -> BB6411 [tailport=s, headport=n, headlabel="      6411"]
BB6410 -> BB6436 [tailport=s, headport=n, color=gray]
BB6411 [shape=record label="{19281: write-property[v8,'body',v7]|19282: \<variable-non-null-undef\>['node']*|19283: read-variable['expect',v11,v10]|19284: read-variable['_braceL',v12,-]}" ] 
BB6411 -> BB6412 [tailport=s, headport=n, headlabel="      6412"]
BB6411 -> BB6436 [tailport=s, headport=n, color=gray]
BB6412 [shape=record label="{19285: call-expect [v10,v11,v12,-]*}" ] 
BB6412 -> BB6413 [tailport=s, headport=n, headlabel="      6413"]
BB6412 -> BB6436 [tailport=s, headport=n, color=gray]
BB6413 [shape=record label="{19286: read-variable['eat',v16,v15]|19287: read-variable['_braceR',v17,-]}" ] 
BB6413 -> BB6414 [tailport=s, headport=n, headlabel="      6414"]
BB6413 -> BB6436 [tailport=s, headport=n, color=gray]
BB6414 [shape=record label="{19288: call-eat [v15,v16,v17,v14]}" ] 
BB6414 -> BB6415 [tailport=s, headport=n, headlabel="      6415"]
BB6414 -> BB6436 [tailport=s, headport=n, color=gray]
BB6415 [shape=record label="{19289: ![v14,v13]|19290: if[v13](true-block:6416,false-block:6417)}" ] 
BB6415 -> BB6416 [tailport=s, headport=n, headlabel="      6416"]
BB6415 -> BB6417 [tailport=s, headport=n, headlabel="      6417"]
BB6415 -> BB6436 [tailport=s, headport=n, color=gray]
BB6416 [shape=record label="{19291: read-variable['parseStatement',v20,v19]}" ] 
BB6416 -> BB6418 [tailport=s, headport=n, headlabel="      6418"]
BB6416 -> BB6436 [tailport=s, headport=n, color=gray]
BB6417 [shape=record label="{19292: read-variable['strict',v18,-]|19293: if[v18](true-block:6429,false-block:6430)}" ] 
BB6417 -> BB6430 [tailport=s, headport=n, headlabel="      6430"]
BB6417 -> BB6429 [tailport=s, headport=n, headlabel="      6429"]
BB6417 -> BB6436 [tailport=s, headport=n, color=gray]
BB6418 [shape=record label="{19294: call-parseStatement [v19,v20,v18]}" ] 
BB6418 -> BB6419 [tailport=s, headport=n, headlabel="      6419"]
BB6418 -> BB6436 [tailport=s, headport=n, color=gray]
BB6419 [shape=record label="{19295: write-variable[v18,'stmt']*|19296: read-variable['node',v23,-]|19297: read-property[v23,'body',v22]|19298: \<variable-non-null-undef\>['node']|19299: read-property[v22,'push',-]|19300: \<property-non-null-undef\>[v23,'body']|19301: read-variable['stmt',v24,-]}" ] 
BB6419 -> BB6420 [tailport=s, headport=n, headlabel="      6420"]
BB6419 -> BB6436 [tailport=s, headport=n, color=gray]
BB6420 [shape=record label="{19302: call-node.body.push [v22,'push',v24,-]*}" ] 
BB6420 -> BB6421 [tailport=s, headport=n, headlabel="      6421"]
BB6420 -> BB6436 [tailport=s, headport=n, color=gray]
BB6421 [shape=record label="{19303: read-variable['first',v25,-]|19304: if[v25](true-block:6422,false-block:6425)}" ] 
BB6421 -> BB6425 [tailport=s, headport=n, headlabel="      6425"]
BB6421 -> BB6422 [tailport=s, headport=n, headlabel="      6422"]
BB6421 -> BB6436 [tailport=s, headport=n, color=gray]
BB6422 [shape=record label="{19305: read-variable['allowStrict',v25,-]|19306: if[v25](true-block:6423,false-block:6425)}" ] 
BB6422 -> BB6425 [tailport=s, headport=n]
BB6422 -> BB6423 [tailport=s, headport=n, headlabel="      6423"]
BB6422 -> BB6436 [tailport=s, headport=n, color=gray]
BB6423 [shape=record label="{19307: read-variable['isUseStrict',v27,v26]|19308: read-variable['stmt',v28,-]}" ] 
BB6423 -> BB6424 [tailport=s, headport=n, headlabel="      6424"]
BB6423 -> BB6436 [tailport=s, headport=n, color=gray]
BB6424 [shape=record label="{19309: call-isUseStrict [v26,v27,v28,v25]}" ] 
BB6424 -> BB6425 [tailport=s, headport=n]
BB6424 -> BB6436 [tailport=s, headport=n, color=gray]
BB6425 [shape=record label="{19310: if[v25](true-block:6426,false-block:6428)}" ] 
BB6425 -> BB6426 [tailport=s, headport=n, headlabel="      6426"]
BB6425 -> BB6428 [tailport=s, headport=n, headlabel="      6428"]
BB6426 [shape=record label="{19311: read-variable['strict',v26,-]|19312: write-variable[v26,'oldStrict']*|19313: read-variable['setStrict',v28,v27]|19314: constant[true,v29]|19315: write-variable[v29,'strict']}" ] 
BB6426 -> BB6427 [tailport=s, headport=n, headlabel="      6427"]
BB6426 -> BB6436 [tailport=s, headport=n, color=gray]
BB6427 [shape=record label="{19316: call-setStrict [v27,v28,v29,-]*}" ] 
BB6427 -> BB6428 [tailport=s, headport=n]
BB6427 -> BB6436 [tailport=s, headport=n, color=gray]
BB6428 [shape=record label="{19317: constant[false,v26]|19318: write-variable[v26,'first']*}" ] 
BB6428 -> BB6413 [tailport=s, headport=n]
BB6429 [shape=record label="{19319: read-variable['oldStrict',v19,-]|19320: ![v19,v18]}" ] 
BB6429 -> BB6430 [tailport=s, headport=n]
BB6429 -> BB6436 [tailport=s, headport=n, color=gray]
BB6430 [shape=record label="{19321: if[v18](true-block:6431,false-block:6433)}" ] 
BB6430 -> BB6431 [tailport=s, headport=n, headlabel="      6431"]
BB6430 -> BB6433 [tailport=s, headport=n, headlabel="      6433"]
BB6431 [shape=record label="{19322: read-variable['setStrict',v20,v19]|19323: constant[false,v21]}" ] 
BB6431 -> BB6432 [tailport=s, headport=n, headlabel="      6432"]
BB6431 -> BB6436 [tailport=s, headport=n, color=gray]
BB6432 [shape=record label="{19324: call-setStrict [v19,v20,v21,-]*}" ] 
BB6432 -> BB6433 [tailport=s, headport=n]
BB6432 -> BB6436 [tailport=s, headport=n, color=gray]
BB6433 [shape=record label="{19325: read-variable['finishNode',v20,v19]|19326: read-variable['node',v21,-]|19327: constant[\"BlockStatement\",v22]}" ] 
BB6433 -> BB6434 [tailport=s, headport=n, headlabel="      6434"]
BB6433 -> BB6436 [tailport=s, headport=n, color=gray]
BB6434 [shape=record label="{19328: call-finishNode [v19,v20,v21,v22,v1]}" ] 
BB6434 -> BB6435 [tailport=s, headport=n, headlabel="      6435"]
BB6434 -> BB6436 [tailport=s, headport=n, color=gray]
BB6435 [shape=record label="{19329: return[v1]}" ] 
BB6436 [shape=record label="{19330: exceptional-return}" ] 
//#$~ 6302
}
