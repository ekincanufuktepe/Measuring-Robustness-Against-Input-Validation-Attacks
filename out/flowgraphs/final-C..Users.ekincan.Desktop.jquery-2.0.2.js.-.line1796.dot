digraph {
rankdir="TD"
BB_entry103[shape=none,label=""];
BB_entry103 -> BB1477 [tailport=s, headport=n, headlabel="    1477"]
BB1477 [shape=record label="{3921: constant[undefined,v1]|3922: vardecl['elem']|3923: vardecl['duplicates']|3924: vardecl['j']|3925: vardecl['i']}" ] 
BB1477 -> BB1478 [tailport=s, headport=n, headlabel="      1478"]
BB1478 [shape=record label="{3926: read-variable['Array',v3,-]}" ] 
BB1478 -> BB1479 [tailport=s, headport=n, headlabel="      1479"]
BB1478 -> BB1496 [tailport=s, headport=n, color=gray, headlabel="      1496"]
BB1479 [shape=record label="{3927: construct[-,v3,v2]}" ] 
BB1479 -> BB1480 [tailport=s, headport=n, headlabel="      1480"]
BB1479 -> BB1496 [tailport=s, headport=n, color=gray]
BB1480 [shape=record label="{3928: write-variable[v2,'duplicates']*|3929: constant[0.0,v4]|3930: write-variable[v4,'j']*|3931: constant[0.0,v5]|3932: write-variable[v5,'i']*|3933: read-variable['support',v8,-]|3934: read-property[v8,'detectDuplicates',v7]|3935: \<variable-non-null-undef\>['support']|3936: ![v7,v6]|3937: write-variable[v6,'hasDuplicate']*|3938: read-variable['support',v11,-]|3939: read-property[v11,'sortStable',v10]|3940: \<variable-non-null-undef\>['support']|3941: ![v10,v9]|3942: if[v9](true-block:1481,false-block:1483)}" ] 
BB1480 -> BB1483 [tailport=s, headport=n, headlabel="      1483"]
BB1480 -> BB1481 [tailport=s, headport=n, headlabel="      1481"]
BB1480 -> BB1496 [tailport=s, headport=n, color=gray]
BB1481 [shape=record label="{3943: read-variable['results',v13,-]|3944: read-property[v13,'slice',-]|3945: \<variable-non-null-undef\>['results']|3946: constant[0.0,v14]}" ] 
BB1481 -> BB1482 [tailport=s, headport=n, headlabel="      1482"]
BB1481 -> BB1496 [tailport=s, headport=n, color=gray]
BB1482 [shape=record label="{3947: call[v13,'slice',v14,v9]}" ] 
BB1482 -> BB1483 [tailport=s, headport=n]
BB1482 -> BB1496 [tailport=s, headport=n, color=gray]
BB1483 [shape=record label="{3948: write-variable[v9,'sortInput']*|3949: read-variable['results',v13,-]|3950: read-property[v13,'sort',-]|3951: \<variable-non-null-undef\>['results']|3952: read-variable['sortOrder',v14,-]}" ] 
BB1483 -> BB1484 [tailport=s, headport=n, headlabel="      1484"]
BB1483 -> BB1496 [tailport=s, headport=n, color=gray]
BB1484 [shape=record label="{3953: call[v13,'sort',v14,-]*}" ] 
BB1484 -> BB1485 [tailport=s, headport=n, headlabel="      1485"]
BB1484 -> BB1496 [tailport=s, headport=n, color=gray]
BB1485 [shape=record label="{3954: read-variable['hasDuplicate',v15,-]|3955: if[v15](true-block:1486,false-block:1494)}" ] 
BB1485 -> BB1486 [tailport=s, headport=n, headlabel="      1486"]
BB1485 -> BB1494 [tailport=s, headport=n, headlabel="      1494"]
BB1485 -> BB1496 [tailport=s, headport=n, color=gray]
BB1486 [shape=record label="{3956: read-variable['results',v17,-]|3957: constant[1.0,v19]|3958: read-variable['i',v20,-]|3959: +[v20,v18]|3960: +[v18,v19,v21]|3961: write-variable[v21,'i']|3962: read-property[v17,v18,v16]|3963: \<variable-non-null-undef\>['results']|3964: write-variable[v16,'elem']|3965: if[v16](true-block:1487,false-block:1491)}" ] 
BB1486 -> BB1487 [tailport=s, headport=n, headlabel="      1487"]
BB1486 -> BB1491 [tailport=s, headport=n, headlabel="      1491"]
BB1486 -> BB1496 [tailport=s, headport=n, color=gray]
BB1487 [shape=record label="{3966: read-variable['elem',v23,-]|3967: read-variable['results',v25,-]|3968: read-variable['i',v26,-]|3969: read-property[v25,v26,v24]|3970: \<variable-non-null-undef\>['results']|3971: ===[v23,v24,v22]|3972: if[v22](true-block:1488,false-block:1486)}" ] 
BB1487 -> BB1488 [tailport=s, headport=n, headlabel="      1488"]
BB1487 -> BB1486 [tailport=s, headport=n]
BB1487 -> BB1496 [tailport=s, headport=n, color=gray]
BB1488 [shape=record label="{3973: read-variable['duplicates',v29,-]|3974: read-property[v29,'push',-]|3975: \<variable-non-null-undef\>['duplicates']|3976: read-variable['i',v30,-]}" ] 
BB1488 -> BB1489 [tailport=s, headport=n, headlabel="      1489"]
BB1488 -> BB1496 [tailport=s, headport=n, color=gray]
BB1489 [shape=record label="{3977: call[v29,'push',v30,v27]}" ] 
BB1489 -> BB1490 [tailport=s, headport=n, headlabel="      1490"]
BB1489 -> BB1496 [tailport=s, headport=n, color=gray]
BB1490 [shape=record label="{3978: write-variable[v27,'j']*}" ] 
BB1490 -> BB1486 [tailport=s, headport=n]
BB1491 [shape=record label="{3979: constant[1.0,v23]|3980: read-variable['j',v24,-]|3981: +[v24,v22]|3982: -[v22,v23,v25]|3983: write-variable[v25,'j']|3984: if[v22](true-block:1492,false-block:1494)}" ] 
BB1491 -> BB1492 [tailport=s, headport=n, headlabel="      1492"]
BB1491 -> BB1494 [tailport=s, headport=n]
BB1491 -> BB1496 [tailport=s, headport=n, color=gray]
BB1492 [shape=record label="{3985: read-variable['results',v27,-]|3986: read-property[v27,'splice',-]|3987: \<variable-non-null-undef\>['results']|3988: read-variable['duplicates',v29,-]|3989: read-variable['j',v30,-]|3990: read-property[v29,v30,v28]|3991: \<variable-non-null-undef\>['duplicates']|3992: constant[1.0,v31]}" ] 
BB1492 -> BB1493 [tailport=s, headport=n, headlabel="      1493"]
BB1492 -> BB1496 [tailport=s, headport=n, color=gray]
BB1493 [shape=record label="{3993: call[v27,'splice',v28,v31,-]*}" ] 
BB1493 -> BB1491 [tailport=s, headport=n]
BB1493 -> BB1496 [tailport=s, headport=n, color=gray]
BB1494 [shape=record label="{3994: read-variable['results',v1,-]}" ] 
BB1494 -> BB1495 [tailport=s, headport=n, headlabel="      1495"]
BB1494 -> BB1496 [tailport=s, headport=n, color=gray]
BB1495 [shape=record label="{3995: return[v1]}" ] 
BB1496 [shape=record label="{3996: exceptional-return}" ] 
}
