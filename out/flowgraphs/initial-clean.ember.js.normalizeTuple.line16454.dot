digraph {
rankdir="TD"
BB_entry783[shape=none,label=""];
BB_entry783 -> BB9275 [tailport=s, headport=n, headlabel="    9275"]
BB9275 [shape=record label="{31895: constant[undefined,v1]|31896: vardecl['hasThis']|31897: vardecl['isGlobal']|31898: vardecl['key']}" ] 
BB9275 -> BB9276 [tailport=s, headport=n, headlabel="      9276"]
BB9276 [shape=record label="{31899: read-variable['pathHasThis',v4,v3]|31900: read-variable['path',v5,-]}" ] 
BB9276 -> BB9277 [tailport=s, headport=n, headlabel="      9277"]
BB9276 -> BB9314 [tailport=s, headport=n, color=gray, headlabel="      9314"]
BB9277 [shape=record label="{31901: call-pathHasThis [v3,v4,v5,v2]}" ] 
BB9277 -> BB9278 [tailport=s, headport=n, headlabel="      9278"]
BB9277 -> BB9314 [tailport=s, headport=n, color=gray]
BB9278 [shape=record label="{31902: write-variable[v2,'hasThis']*|31903: read-variable['hasThis',v7,-]|31904: ![v7,v6]|31905: if[v6](true-block:9279,false-block:9281)}" ] 
BB9278 -> BB9281 [tailport=s, headport=n, headlabel="      9281"]
BB9278 -> BB9279 [tailport=s, headport=n, headlabel="      9279"]
BB9278 -> BB9314 [tailport=s, headport=n, color=gray]
BB9279 [shape=record label="{31906: read-variable['isGlobalPath',v9,v8]|31907: read-variable['path',v10,-]}" ] 
BB9279 -> BB9280 [tailport=s, headport=n, headlabel="      9280"]
BB9279 -> BB9314 [tailport=s, headport=n, color=gray]
BB9280 [shape=record label="{31908: call-isGlobalPath [v8,v9,v10,v6]}" ] 
BB9280 -> BB9281 [tailport=s, headport=n]
BB9280 -> BB9314 [tailport=s, headport=n, color=gray]
BB9281 [shape=record label="{31909: write-variable[v6,'isGlobal']*|31910: read-variable['target',v9,-]|31911: ![v9,v8]|31912: if[v8](true-block:9283,false-block:9282)}" ] 
BB9281 -> BB9283 [tailport=s, headport=n, headlabel="      9283"]
BB9281 -> BB9282 [tailport=s, headport=n, headlabel="      9282"]
BB9281 -> BB9314 [tailport=s, headport=n, color=gray]
BB9282 [shape=record label="{31913: read-variable['isGlobal',v8,-]}" ] 
BB9282 -> BB9283 [tailport=s, headport=n]
BB9282 -> BB9314 [tailport=s, headport=n, color=gray]
BB9283 [shape=record label="{31914: if[v8](true-block:9284,false-block:9285)}" ] 
BB9283 -> BB9284 [tailport=s, headport=n, headlabel="      9284"]
BB9283 -> BB9285 [tailport=s, headport=n, headlabel="      9285"]
BB9284 [shape=record label="{31915: read-variable['Ember',v10,-]|31916: read-property[v10,'lookup',v9]|31917: \<variable-non-null-undef\>['Ember']|31918: write-variable[v9,'target']*}" ] 
BB9284 -> BB9285 [tailport=s, headport=n]
BB9284 -> BB9314 [tailport=s, headport=n, color=gray]
BB9285 [shape=record label="{31919: read-variable['hasThis',v9,-]|31920: if[v9](true-block:9286,false-block:9289)}" ] 
BB9285 -> BB9286 [tailport=s, headport=n, headlabel="      9286"]
BB9285 -> BB9289 [tailport=s, headport=n, headlabel="      9289"]
BB9285 -> BB9314 [tailport=s, headport=n, color=gray]
BB9286 [shape=record label="{31921: read-variable['path',v12,-]|31922: read-property[v12,'slice',-]|31923: \<variable-non-null-undef\>['path']|31924: constant[5.0,v13]}" ] 
BB9286 -> BB9287 [tailport=s, headport=n, headlabel="      9287"]
BB9286 -> BB9314 [tailport=s, headport=n, color=gray]
BB9287 [shape=record label="{31925: call-path.slice [v12,'slice',v13,v10]}" ] 
BB9287 -> BB9288 [tailport=s, headport=n, headlabel="      9288"]
BB9287 -> BB9314 [tailport=s, headport=n, color=gray]
BB9288 [shape=record label="{31926: write-variable[v10,'path']*}" ] 
BB9288 -> BB9289 [tailport=s, headport=n]
BB9289 [shape=record label="{31927: read-variable['Ember',v11,-]|31928: read-property[v11,'deprecate',-]|31929: \<variable-non-null-undef\>['Ember']|31930: constant[\"normalizeTuple will return '\",v15]|31931: read-variable['path',v16,-]|31932: +[v15,v16,v13]|31933: constant[\"' as a non-global. This behavior will change in the future (issue #3852)\",v14]|31934: +[v13,v14,v12]|31935: read-variable['target',v18,-]|31936: read-variable['Ember',v20,-]|31937: read-property[v20,'lookup',v19]|31938: \<variable-non-null-undef\>['Ember']|31939: ===[v18,v19,v17]|31940: if[v17](true-block:9296,false-block:9290)}" ] 
BB9289 -> BB9296 [tailport=s, headport=n, headlabel="      9296"]
BB9289 -> BB9290 [tailport=s, headport=n, headlabel="      9290"]
BB9289 -> BB9314 [tailport=s, headport=n, color=gray]
BB9290 [shape=record label="{31941: read-variable['target',v18,-]|31942: ![v18,v17]|31943: if[v17](true-block:9296,false-block:9291)}" ] 
BB9290 -> BB9296 [tailport=s, headport=n]
BB9290 -> BB9291 [tailport=s, headport=n, headlabel="      9291"]
BB9290 -> BB9314 [tailport=s, headport=n, color=gray]
BB9291 [shape=record label="{31944: read-variable['hasThis',v17,-]|31945: if[v17](true-block:9296,false-block:9292)}" ] 
BB9291 -> BB9296 [tailport=s, headport=n]
BB9291 -> BB9292 [tailport=s, headport=n, headlabel="      9292"]
BB9291 -> BB9314 [tailport=s, headport=n, color=gray]
BB9292 [shape=record label="{31946: read-variable['isGlobal',v17,-]|31947: if[v17](true-block:9296,false-block:9293)}" ] 
BB9292 -> BB9296 [tailport=s, headport=n]
BB9292 -> BB9293 [tailport=s, headport=n, headlabel="      9293"]
BB9292 -> BB9314 [tailport=s, headport=n, color=gray]
BB9293 [shape=record label="{31948: read-variable['isGlobalPath',v20,v19]|31949: read-variable['path',v22,-]|31950: constant[\".\",v23]|31951: +[v22,v23,v21]}" ] 
BB9293 -> BB9294 [tailport=s, headport=n, headlabel="      9294"]
BB9293 -> BB9314 [tailport=s, headport=n, color=gray]
BB9294 [shape=record label="{31952: call-isGlobalPath [v19,v20,v21,v18]}" ] 
BB9294 -> BB9295 [tailport=s, headport=n, headlabel="      9295"]
BB9294 -> BB9314 [tailport=s, headport=n, color=gray]
BB9295 [shape=record label="{31953: ![v18,v17]}" ] 
BB9295 -> BB9296 [tailport=s, headport=n]
BB9295 -> BB9314 [tailport=s, headport=n, color=gray]
BB9296 [shape=record label="{31954: call-Ember.deprecate [v11,'deprecate',v12,v17,-]*}" ] 
BB9296 -> BB9297 [tailport=s, headport=n, headlabel="      9297"]
BB9296 -> BB9314 [tailport=s, headport=n, color=gray]
BB9297 [shape=record label="{31955: read-variable['target',v19,-]|31956: read-variable['Ember',v21,-]|31957: read-property[v21,'lookup',v20]|31958: \<variable-non-null-undef\>['Ember']|31959: ===[v19,v20,v18]|31960: if[v18](true-block:9298,false-block:9305)}" ] 
BB9297 -> BB9298 [tailport=s, headport=n, headlabel="      9298"]
BB9297 -> BB9305 [tailport=s, headport=n, headlabel="      9305"]
BB9297 -> BB9314 [tailport=s, headport=n, color=gray]
BB9298 [shape=record label="{31961: read-variable['path',v25,-]|31962: read-property[v25,'match',-]|31963: \<variable-non-null-undef\>['path']|31964: read-variable['FIRST_KEY',v26,-]}" ] 
BB9298 -> BB9299 [tailport=s, headport=n, headlabel="      9299"]
BB9298 -> BB9314 [tailport=s, headport=n, color=gray]
BB9299 [shape=record label="{31965: call-path.match [v25,'match',v26,v23]}" ] 
BB9299 -> BB9300 [tailport=s, headport=n, headlabel="      9300"]
BB9299 -> BB9314 [tailport=s, headport=n, color=gray]
BB9300 [shape=record label="{31966: constant[0.0,v27]|31967: read-property[v23,v27,v22]|31968: write-variable[v22,'key']*|31969: read-variable['get',v30,v29]|31970: read-variable['target',v31,-]|31971: read-variable['key',v32,-]}" ] 
BB9300 -> BB9301 [tailport=s, headport=n, headlabel="      9301"]
BB9300 -> BB9314 [tailport=s, headport=n, color=gray]
BB9301 [shape=record label="{31972: call-get [v29,v30,v31,v32,v28]}" ] 
BB9301 -> BB9302 [tailport=s, headport=n, headlabel="      9302"]
BB9301 -> BB9314 [tailport=s, headport=n, color=gray]
BB9302 [shape=record label="{31973: write-variable[v28,'target']*|31974: read-variable['path',v35,-]|31975: read-property[v35,'slice',-]|31976: \<variable-non-null-undef\>['path']|31977: read-variable['key',v39,-]|31978: read-property[v39,'length',v37]|31979: \<variable-non-null-undef\>['key']|31980: constant[1.0,v38]|31981: +[v37,v38,v36]}" ] 
BB9302 -> BB9303 [tailport=s, headport=n, headlabel="      9303"]
BB9302 -> BB9314 [tailport=s, headport=n, color=gray]
BB9303 [shape=record label="{31982: call-path.slice [v35,'slice',v36,v33]}" ] 
BB9303 -> BB9304 [tailport=s, headport=n, headlabel="      9304"]
BB9303 -> BB9314 [tailport=s, headport=n, color=gray]
BB9304 [shape=record label="{31983: write-variable[v33,'path']*}" ] 
BB9304 -> BB9305 [tailport=s, headport=n]
BB9305 [shape=record label="{31984: read-variable['path',v23,-]|31985: ![v23,v22]|31986: if[v22](true-block:9307,false-block:9306)}" ] 
BB9305 -> BB9307 [tailport=s, headport=n, headlabel="      9307"]
BB9305 -> BB9306 [tailport=s, headport=n, headlabel="      9306"]
BB9305 -> BB9314 [tailport=s, headport=n, color=gray]
BB9306 [shape=record label="{31987: read-variable['path',v25,-]|31988: read-property[v25,'length',v23]|31989: \<variable-non-null-undef\>['path']|31990: constant[0.0,v24]|31991: ===[v23,v24,v22]}" ] 
BB9306 -> BB9307 [tailport=s, headport=n]
BB9306 -> BB9314 [tailport=s, headport=n, color=gray]
BB9307 [shape=record label="{31992: if[v22](true-block:9308,false-block:9311)}" ] 
BB9307 -> BB9308 [tailport=s, headport=n, headlabel="      9308"]
BB9307 -> BB9311 [tailport=s, headport=n, headlabel="      9311"]
BB9308 [shape=record label="{31993: read-variable['EmberError',v24,-]|31994: constant[\"Path cannot be empty\",v25]}" ] 
BB9308 -> BB9309 [tailport=s, headport=n, headlabel="      9309"]
BB9308 -> BB9314 [tailport=s, headport=n, color=gray]
BB9309 [shape=record label="{31995: construct [-,v24,v25,v23]}" ] 
BB9309 -> BB9310 [tailport=s, headport=n, headlabel="      9310"]
BB9309 -> BB9314 [tailport=s, headport=n, color=gray]
BB9310 [shape=record label="{31996: throw[v23]*}" ] 
BB9310 -> BB9311 [tailport=s, headport=n]
BB9310 -> BB9314 [tailport=s, headport=n, color=gray]
BB9311 [shape=record label="{31997: read-variable['Array',v23,-]|31998: read-variable['target',v24,-]|31999: read-variable['path',v25,-]}" ] 
BB9311 -> BB9312 [tailport=s, headport=n, headlabel="      9312"]
BB9311 -> BB9314 [tailport=s, headport=n, color=gray]
BB9312 [shape=record label="{32000: construct [-,v23,v24,v25,v1]}" ] 
BB9312 -> BB9313 [tailport=s, headport=n, headlabel="      9313"]
BB9312 -> BB9314 [tailport=s, headport=n, color=gray]
BB9313 [shape=record label="{32001: return[v1]}" ] 
BB9314 [shape=record label="{32002: exceptional-return}" ] 
//#$~ 16476
}
