digraph {
rankdir="TD"
BB_entry465[shape=none,label=""];
BB_entry465 -> BB6201 [tailport=s, headport=n, headlabel="    6201"]
BB6201 [shape=record label="{15927: constant[undefined,v1]}" ] 
BB6201 -> BB6202 [tailport=s, headport=n, headlabel="      6202"]
BB6202 [shape=record label="{15928: read-variable['assertArgFn',v3,v2]|15929: read-variable['fn',v4,-]|15930: constant[\"fn\",v5]}" ] 
BB6202 -> BB6203 [tailport=s, headport=n, headlabel="      6203"]
BB6202 -> BB6208 [tailport=s, headport=n, color=gray, headlabel="      6208"]
BB6203 [shape=record label="{15931: call-assertArgFn [v2,v3,v4,v5,-]*}" ] 
BB6203 -> BB6204 [tailport=s, headport=n, headlabel="      6204"]
BB6203 -> BB6208 [tailport=s, headport=n, color=gray]
BB6204 [shape=record label="{15932: read-variable['promise',v7,-]|15933: read-property[v7,'then',-]|15934: \<variable-non-null-undef\>['promise']|15935: function-expr[function ( response ),v8]}" ] 
BB6204 -> BB6205 [tailport=s, headport=n, headlabel="      6205"]
BB6204 -> BB6208 [tailport=s, headport=n, color=gray]
BB6205 [shape=record label="{15936: call-promise.then [v7,'then',v8,-]*}" ] 
BB6205 -> BB6206 [tailport=s, headport=n, headlabel="      6206"]
BB6205 -> BB6208 [tailport=s, headport=n, color=gray]
BB6206 [shape=record label="{15937: read-variable['promise',v1,-]}" ] 
BB6206 -> BB6207 [tailport=s, headport=n, headlabel="      6207"]
BB6206 -> BB6208 [tailport=s, headport=n, color=gray]
BB6207 [shape=record label="{15938: return[v1]}" ] 
BB6208 [shape=record label="{15939: exceptional-return}" ] 
//#$~ 10076
}
