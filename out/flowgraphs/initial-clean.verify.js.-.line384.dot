digraph {
rankdir="TD"
BB_entry51[shape=none,label=""];
BB_entry51 -> BB473 [tailport=s, headport=n, headlabel="    473"]
BB473 [shape=record label="{1318: constant[undefined,v1]|1319: vardecl['args']|1320: vardecl['hash']|1321: vardecl['i']|1322: vardecl['currentArg']}" ] 
BB473 -> BB474 [tailport=s, headport=n, headlabel="      474"]
BB474 [shape=record label="{1323: read-variable['Array',v6,-]|1324: read-property[v6,'prototype',v5]|1325: \<variable-non-null-undef\>['Array']|1326: read-property[v5,'slice',v4]|1327: \<property-non-null-undef\>[v6,'prototype']|1328: read-property[v4,'call',-]|1329: \<property-non-null-undef\>[v5,'slice']|1330: read-variable['arguments',v7,-]}" ] 
BB474 -> BB475 [tailport=s, headport=n, headlabel="      475"]
BB474 -> BB492 [tailport=s, headport=n, color=gray, headlabel="      492"]
BB475 [shape=record label="{1331: call-Array.prototype.slice.call [v4,'call',v7,v2]}" ] 
BB475 -> BB476 [tailport=s, headport=n, headlabel="      476"]
BB475 -> BB492 [tailport=s, headport=n, color=gray]
BB476 [shape=record label="{1332: write-variable[v2,'args']*|1333: constant[\"\",v8]|1334: write-variable[v8,'hash']*|1335: read-variable['args',v10,-]|1336: read-property[v10,'length',v9]|1337: \<variable-non-null-undef\>['args']|1338: write-variable[v9,'i']*|1339: constant[null,v11]|1340: write-variable[v11,'currentArg']*}" ] 
BB476 -> BB477 [tailport=s, headport=n, headlabel="      477"]
BB476 -> BB492 [tailport=s, headport=n, color=gray]
BB477 [shape=record label="{1341: constant[1.0,v13]|1342: read-variable['i',v14,-]|1343: +[v14,v12]|1344: -[v12,v13,v15]|1345: write-variable[v15,'i']|1346: if[v12](true-block:478,false-block:479)}" ] 
BB477 -> BB478 [tailport=s, headport=n, headlabel="      478"]
BB477 -> BB479 [tailport=s, headport=n, headlabel="      479"]
BB477 -> BB492 [tailport=s, headport=n, color=gray]
BB478 [shape=record label="{1347: read-variable['args',v17,-]|1348: read-variable['i',v18,-]|1349: read-property[v17,v18,v16]|1350: \<variable-non-null-undef\>['args']|1351: write-variable[v16,'currentArg']*|1352: read-variable['hash',v20,-]|1353: read-variable['currentArg',v23,-]|1354: read-variable['Object',v26,v25]|1355: read-variable['currentArg',v27,-]}" ] 
BB478 -> BB480 [tailport=s, headport=n, headlabel="      480"]
BB478 -> BB492 [tailport=s, headport=n, color=gray]
BB479 [shape=record label="{1356: read-variable['hash',v17,-]|1357: read-variable['fn',v19,-]|1358: read-property[v19,'memoize',v18]|1359: \<variable-non-null-undef\>['fn']|1360: in[v17,v18,v16]|1361: if[v16](true-block:487,false-block:488)}" ] 
BB479 -> BB487 [tailport=s, headport=n, headlabel="      487"]
BB479 -> BB488 [tailport=s, headport=n, headlabel="      488"]
BB479 -> BB492 [tailport=s, headport=n, color=gray]
BB480 [shape=record label="{1362: call-Object [v25,v26,v27,v24]}" ] 
BB480 -> BB481 [tailport=s, headport=n, headlabel="      481"]
BB480 -> BB492 [tailport=s, headport=n, color=gray]
BB481 [shape=record label="{1363: ===[v23,v24,v22]|1364: if[v22](true-block:482,false-block:483)}" ] 
BB481 -> BB482 [tailport=s, headport=n, headlabel="      482"]
BB481 -> BB483 [tailport=s, headport=n, headlabel="      483"]
BB481 -> BB492 [tailport=s, headport=n, color=gray]
BB482 [shape=record label="{1365: read-variable['JSON',v29,-]|1366: read-property[v29,'stringify',-]|1367: \<variable-non-null-undef\>['JSON']|1368: read-variable['currentArg',v30,-]}" ] 
BB482 -> BB484 [tailport=s, headport=n, headlabel="      484"]
BB482 -> BB492 [tailport=s, headport=n, color=gray]
BB483 [shape=record label="{1369: read-variable['currentArg',v21,-]}" ] 
BB483 -> BB485 [tailport=s, headport=n, headlabel="      485"]
BB483 -> BB492 [tailport=s, headport=n, color=gray]
BB484 [shape=record label="{1370: call-JSON.stringify [v29,'stringify',v30,v21]}" ] 
BB484 -> BB485 [tailport=s, headport=n]
BB484 -> BB492 [tailport=s, headport=n, color=gray]
BB485 [shape=record label="{1371: +[v20,v21,v19]|1372: write-variable[v19,'hash']*|1373: read-variable['fn',v29,-]|1374: read-property[v29,'memoize',v28]|1375: \<variable-non-null-undef\>['fn']|1376: if[v28](true-block:477,false-block:486)}" ] 
BB485 -> BB477 [tailport=s, headport=n]
BB485 -> BB486 [tailport=s, headport=n, headlabel="      486"]
BB485 -> BB492 [tailport=s, headport=n, color=gray]
BB486 [shape=record label="{1377: read-variable['fn',v30,-]|1378: new[v29]|1379: write-property[v30,'memoize',v29]|1380: \<variable-non-null-undef\>['fn']}" ] 
BB486 -> BB477 [tailport=s, headport=n]
BB486 -> BB492 [tailport=s, headport=n, color=gray]
BB487 [shape=record label="{1381: read-variable['fn',v21,-]|1382: read-property[v21,'memoize',v20]|1383: \<variable-non-null-undef\>['fn']|1384: read-variable['hash',v22,-]|1385: read-property[v20,v22,v1]|1386: \<property-non-null-undef\>[v21,'memoize']}" ] 
BB487 -> BB491 [tailport=s, headport=n, headlabel="      491"]
BB487 -> BB492 [tailport=s, headport=n, color=gray]
BB488 [shape=record label="{1387: read-variable['fn',v22,-]|1388: read-property[v22,'memoize',v20]|1389: \<variable-non-null-undef\>['fn']|1390: read-variable['hash',v21,-]|1391: read-variable['fn',v24,-]|1392: read-property[v24,'apply',-]|1393: \<variable-non-null-undef\>['fn']|1394: read-variable['this',v25,-]|1395: read-variable['args',v26,-]}" ] 
BB488 -> BB489 [tailport=s, headport=n, headlabel="      489"]
BB488 -> BB492 [tailport=s, headport=n, color=gray]
BB489 [shape=record label="{1396: call-fn.apply [v24,'apply',v25,v26,v1]}" ] 
BB489 -> BB490 [tailport=s, headport=n, headlabel="      490"]
BB489 -> BB492 [tailport=s, headport=n, color=gray]
BB490 [shape=record label="{1397: write-property[v20,v21,v1]|1398: \<property-non-null-undef\>[v22,'memoize']}" ] 
BB490 -> BB491 [tailport=s, headport=n]
BB490 -> BB492 [tailport=s, headport=n, color=gray]
BB491 [shape=record label="{1399: return[v1]}" ] 
BB492 [shape=record label="{1400: exceptional-return}" ] 
//#$~ 396
}
