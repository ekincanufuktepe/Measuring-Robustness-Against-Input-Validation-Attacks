digraph {
rankdir="TD"
BB_entry374[shape=none,label=""];
BB_entry374 -> BB4914 [tailport=s, headport=n, headlabel="    4914"]
BB4914 [shape=record label="{12361: constant[undefined,v1]|12362: vardecl['terminalPriority']|12363: vardecl['newScopeDirective']|12364: vardecl['controllerDirectives']|12365: vardecl['newIsolateScopeDirective']|12366: vardecl['templateDirective']|12367: vardecl['nonTlbTranscludeDirective']|12368: vardecl['hasTranscludeDirective']|12369: vardecl['hasTemplate']|12370: vardecl['hasElementTranscludeDirective']|12371: vardecl['$compileNode']|12372: vardecl['directive']|12373: vardecl['directiveName']|12374: vardecl['$template']|12375: vardecl['replaceDirective']|12376: vardecl['childTranscludeFn']|12377: vardecl['linkFn']|12378: vardecl['directiveValue']|12379: vardecl['i']|12380: vardecl['ii']|12381: vardecl['attrStart']|12382: vardecl['attrEnd']|12383: vardecl['newTemplateAttrs']|12384: vardecl['templateDirectives']|12385: vardecl['unprocessedDirectives']|12386: function-decl[function addLinkFns ( pre post attrStart attrEnd ),-]|12387: function-decl[function getControllers ( directiveName require $element elementControllers ),-]|12388: function-decl[function setupControllers ( $element attrs transcludeFn controllerDirectives isolateScope scope ),-]|12389: function-decl[function nodeLinkFn ( childLinkFn scope linkNode $rootElement boundTranscludeFn thisLinkFn ),-]}" ] 
BB4914 -> BB4915 [tailport=s, headport=n, headlabel="      4915"]
BB4915 [shape=record label="{12390: read-variable['previousCompileContext',v2,-]|12391: if[v2](true-block:4917,false-block:4916)}" ] 
BB4915 -> BB4917 [tailport=s, headport=n, headlabel="      4917"]
BB4915 -> BB4916 [tailport=s, headport=n, headlabel="      4916"]
BB4915 -> BB5067 [tailport=s, headport=n, color=gray, headlabel="      5067"]
BB4916 [shape=record label="{12392: new[v2]}" ] 
BB4916 -> BB4917 [tailport=s, headport=n]
BB4917 [shape=record label="{12393: write-variable[v2,'previousCompileContext']*|12394: read-variable['Number',v5,-]|12395: read-property[v5,'MAX_VALUE',v4]|12396: \<variable-non-null-undef\>['Number']|12397: -[v4,v3]|12398: write-variable[v3,'terminalPriority']*|12399: read-variable['previousCompileContext',v7,-]|12400: read-property[v7,'newScopeDirective',v6]|12401: \<variable-non-null-undef\>['previousCompileContext']|12402: write-variable[v6,'newScopeDirective']*|12403: read-variable['previousCompileContext',v9,-]|12404: read-property[v9,'controllerDirectives',v8]|12405: \<variable-non-null-undef\>['previousCompileContext']|12406: write-variable[v8,'controllerDirectives']*|12407: read-variable['previousCompileContext',v11,-]|12408: read-property[v11,'newIsolateScopeDirective',v10]|12409: \<variable-non-null-undef\>['previousCompileContext']|12410: write-variable[v10,'newIsolateScopeDirective']*|12411: read-variable['previousCompileContext',v13,-]|12412: read-property[v13,'templateDirective',v12]|12413: \<variable-non-null-undef\>['previousCompileContext']|12414: write-variable[v12,'templateDirective']*|12415: read-variable['previousCompileContext',v15,-]|12416: read-property[v15,'nonTlbTranscludeDirective',v14]|12417: \<variable-non-null-undef\>['previousCompileContext']|12418: write-variable[v14,'nonTlbTranscludeDirective']*|12419: constant[false,v16]|12420: write-variable[v16,'hasTranscludeDirective']*|12421: constant[false,v17]|12422: write-variable[v17,'hasTemplate']*|12423: read-variable['previousCompileContext',v19,-]|12424: read-property[v19,'hasElementTranscludeDirective',v18]|12425: \<variable-non-null-undef\>['previousCompileContext']|12426: write-variable[v18,'hasElementTranscludeDirective']*|12427: read-variable['templateAttrs',v21,-]|12428: read-variable['jqLite',v23,v22]|12429: read-variable['compileNode',v24,-]}" ] 
BB4917 -> BB4918 [tailport=s, headport=n, headlabel="      4918"]
BB4917 -> BB5067 [tailport=s, headport=n, color=gray]
BB4918 [shape=record label="{12430: call-jqLite [v22,v23,v24,v20]}" ] 
BB4918 -> BB4919 [tailport=s, headport=n, headlabel="      4919"]
BB4918 -> BB5067 [tailport=s, headport=n, color=gray]
BB4919 [shape=record label="{12431: write-property[v21,'$$element',v20]|12432: \<variable-non-null-undef\>['templateAttrs']|12433: write-variable[v20,'$compileNode']*|12434: read-variable['originalReplaceDirective',v25,-]|12435: write-variable[v25,'replaceDirective']*|12436: read-variable['transcludeFn',v26,-]|12437: write-variable[v26,'childTranscludeFn']*|12438: constant[0.0,v28]|12439: write-variable[v28,'i']*|12440: read-variable['directives',v30,-]|12441: read-property[v30,'length',v29]|12442: \<variable-non-null-undef\>['directives']|12443: write-variable[v29,'ii']*}" ] 
BB4919 -> BB4920 [tailport=s, headport=n, headlabel="      4920"]
BB4919 -> BB5067 [tailport=s, headport=n, color=gray]
BB4920 [shape=record label="{12444: read-variable['i',v31,-]|12445: read-variable['ii',v32,-]|12446: \<[v31,v32,v27]|12447: if[v27](true-block:4921,false-block:4922)}" ] 
BB4920 -> BB4921 [tailport=s, headport=n, headlabel="      4921"]
BB4920 -> BB4922 [tailport=s, headport=n, headlabel="      4922"]
BB4920 -> BB5067 [tailport=s, headport=n, color=gray]
BB4921 [shape=record label="{12448: read-variable['directives',v34,-]|12449: read-variable['i',v35,-]|12450: read-property[v34,v35,v33]|12451: \<variable-non-null-undef\>['directives']|12452: write-variable[v33,'directive']*|12453: read-variable['directive',v37,-]|12454: read-property[v37,'$$start',v36]|12455: \<variable-non-null-undef\>['directive']|12456: write-variable[v36,'attrStart']*|12457: read-variable['directive',v39,-]|12458: read-property[v39,'$$end',v38]|12459: \<variable-non-null-undef\>['directive']|12460: write-variable[v38,'attrEnd']*|12461: read-variable['attrStart',v40,-]|12462: if[v40](true-block:4923,false-block:4926)}" ] 
BB4921 -> BB4923 [tailport=s, headport=n, headlabel="      4923"]
BB4921 -> BB4926 [tailport=s, headport=n, headlabel="      4926"]
BB4921 -> BB5067 [tailport=s, headport=n, color=gray]
BB4922 [shape=record label="{12463: read-variable['nodeLinkFn',v34,-]|12464: read-variable['newScopeDirective',v33,-]|12465: if[v33](true-block:5064,false-block:5065)}" ] 
BB4922 -> BB5065 [tailport=s, headport=n, headlabel="      5065"]
BB4922 -> BB5064 [tailport=s, headport=n, headlabel="      5064"]
BB4922 -> BB5067 [tailport=s, headport=n, color=gray]
BB4923 [shape=record label="{12466: read-variable['groupScan',v43,v42]|12467: read-variable['compileNode',v44,-]|12468: read-variable['attrStart',v45,-]|12469: read-variable['attrEnd',v46,-]}" ] 
BB4923 -> BB4924 [tailport=s, headport=n, headlabel="      4924"]
BB4923 -> BB5067 [tailport=s, headport=n, color=gray]
BB4924 [shape=record label="{12470: call-groupScan [v42,v43,v44,v45,v46,v41]}" ] 
BB4924 -> BB4925 [tailport=s, headport=n, headlabel="      4925"]
BB4924 -> BB5067 [tailport=s, headport=n, color=gray]
BB4925 [shape=record label="{12471: write-variable[v41,'$compileNode']*}" ] 
BB4925 -> BB4926 [tailport=s, headport=n]
BB4926 [shape=record label="{12472: read-variable['undefined',v41,-]|12473: write-variable[v41,'$template']*|12474: read-variable['terminalPriority',v43,-]|12475: read-variable['directive',v45,-]|12476: read-property[v45,'priority',v44]|12477: \<variable-non-null-undef\>['directive']|12478: \>[v43,v44,v42]|12479: if[v42](true-block:4922,false-block:4927)}" ] 
BB4926 -> BB4922 [tailport=s, headport=n]
BB4926 -> BB4927 [tailport=s, headport=n, headlabel="      4927"]
BB4926 -> BB5067 [tailport=s, headport=n, color=gray]
BB4927 [shape=record label="{12480: read-variable['directive',v47,-]|12481: read-property[v47,'scope',v46]|12482: \<variable-non-null-undef\>['directive']|12483: write-variable[v46,'directiveValue']|12484: if[v46](true-block:4928,false-block:4942)}" ] 
BB4927 -> BB4928 [tailport=s, headport=n, headlabel="      4928"]
BB4927 -> BB4942 [tailport=s, headport=n, headlabel="      4942"]
BB4927 -> BB5067 [tailport=s, headport=n, color=gray]
BB4928 [shape=record label="{12485: read-variable['directive',v50,-]|12486: read-property[v50,'templateUrl',v49]|12487: \<variable-non-null-undef\>['directive']|12488: ![v49,v48]|12489: if[v48](true-block:4929,false-block:4939)}" ] 
BB4928 -> BB4929 [tailport=s, headport=n, headlabel="      4929"]
BB4928 -> BB4939 [tailport=s, headport=n, headlabel="      4939"]
BB4928 -> BB5067 [tailport=s, headport=n, color=gray]
BB4929 [shape=record label="{12490: read-variable['isObject',v53,v52]|12491: read-variable['directiveValue',v54,-]}" ] 
BB4929 -> BB4930 [tailport=s, headport=n, headlabel="      4930"]
BB4929 -> BB5067 [tailport=s, headport=n, color=gray]
BB4930 [shape=record label="{12492: call-isObject [v52,v53,v54,v51]}" ] 
BB4930 -> BB4931 [tailport=s, headport=n, headlabel="      4931"]
BB4930 -> BB5067 [tailport=s, headport=n, color=gray]
BB4931 [shape=record label="{12493: if[v51](true-block:4932,false-block:4933)}" ] 
BB4931 -> BB4932 [tailport=s, headport=n, headlabel="      4932"]
BB4931 -> BB4933 [tailport=s, headport=n, headlabel="      4933"]
BB4932 [shape=record label="{12494: read-variable['assertNoDuplicate',v56,v55]|12495: constant[\"new/isolated scope\",v57]|12496: read-variable['newIsolateScopeDirective',v58,-]|12497: if[v58](true-block:4935,false-block:4934)}" ] 
BB4932 -> BB4935 [tailport=s, headport=n, headlabel="      4935"]
BB4932 -> BB4934 [tailport=s, headport=n, headlabel="      4934"]
BB4932 -> BB5067 [tailport=s, headport=n, color=gray]
BB4933 [shape=record label="{12498: read-variable['assertNoDuplicate',v56,v55]|12499: constant[\"new/isolated scope\",v57]|12500: read-variable['newIsolateScopeDirective',v58,-]|12501: read-variable['directive',v59,-]|12502: read-variable['$compileNode',v60,-]}" ] 
BB4933 -> BB4938 [tailport=s, headport=n, headlabel="      4938"]
BB4933 -> BB5067 [tailport=s, headport=n, color=gray]
BB4934 [shape=record label="{12503: read-variable['newScopeDirective',v58,-]}" ] 
BB4934 -> BB4935 [tailport=s, headport=n]
BB4934 -> BB5067 [tailport=s, headport=n, color=gray]
BB4935 [shape=record label="{12504: read-variable['directive',v59,-]|12505: read-variable['$compileNode',v60,-]}" ] 
BB4935 -> BB4936 [tailport=s, headport=n, headlabel="      4936"]
BB4935 -> BB5067 [tailport=s, headport=n, color=gray]
BB4936 [shape=record label="{12506: call-assertNoDuplicate [v55,v56,v57,v58,v59,v60,-]*}" ] 
BB4936 -> BB4937 [tailport=s, headport=n, headlabel="      4937"]
BB4936 -> BB5067 [tailport=s, headport=n, color=gray]
BB4937 [shape=record label="{12507: read-variable['directive',v61,-]|12508: write-variable[v61,'newIsolateScopeDirective']*}" ] 
BB4937 -> BB4939 [tailport=s, headport=n]
BB4937 -> BB5067 [tailport=s, headport=n, color=gray]
BB4938 [shape=record label="{12509: call-assertNoDuplicate [v55,v56,v57,v58,v59,v60,-]*}" ] 
BB4938 -> BB4939 [tailport=s, headport=n]
BB4938 -> BB5067 [tailport=s, headport=n, color=gray]
BB4939 [shape=record label="{12510: read-variable['newScopeDirective',v51,-]|12511: if[v51](true-block:4941,false-block:4940)}" ] 
BB4939 -> BB4941 [tailport=s, headport=n, headlabel="      4941"]
BB4939 -> BB4940 [tailport=s, headport=n, headlabel="      4940"]
BB4939 -> BB5067 [tailport=s, headport=n, color=gray]
BB4940 [shape=record label="{12512: read-variable['directive',v51,-]}" ] 
BB4940 -> BB4941 [tailport=s, headport=n]
BB4940 -> BB5067 [tailport=s, headport=n, color=gray]
BB4941 [shape=record label="{12513: write-variable[v51,'newScopeDirective']*}" ] 
BB4941 -> BB4942 [tailport=s, headport=n]
BB4942 [shape=record label="{12514: read-variable['directive',v49,-]|12515: read-property[v49,'name',v48]|12516: \<variable-non-null-undef\>['directive']|12517: write-variable[v48,'directiveName']*|12518: read-variable['directive',v52,-]|12519: read-property[v52,'templateUrl',v51]|12520: \<variable-non-null-undef\>['directive']|12521: ![v51,v50]|12522: if[v50](true-block:4943,false-block:4944)}" ] 
BB4942 -> BB4944 [tailport=s, headport=n, headlabel="      4944"]
BB4942 -> BB4943 [tailport=s, headport=n, headlabel="      4943"]
BB4942 -> BB5067 [tailport=s, headport=n, color=gray]
BB4943 [shape=record label="{12523: read-variable['directive',v53,-]|12524: read-property[v53,'controller',v50]|12525: \<variable-non-null-undef\>['directive']}" ] 
BB4943 -> BB4944 [tailport=s, headport=n]
BB4943 -> BB5067 [tailport=s, headport=n, color=gray]
BB4944 [shape=record label="{12526: if[v50](true-block:4945,false-block:4951)}" ] 
BB4944 -> BB4945 [tailport=s, headport=n, headlabel="      4945"]
BB4944 -> BB4951 [tailport=s, headport=n, headlabel="      4951"]
BB4945 [shape=record label="{12527: read-variable['directive',v54,-]|12528: read-property[v54,'controller',v53]|12529: \<variable-non-null-undef\>['directive']|12530: write-variable[v53,'directiveValue']*|12531: read-variable['controllerDirectives',v55,-]|12532: if[v55](true-block:4948,false-block:4946)}" ] 
BB4945 -> BB4948 [tailport=s, headport=n, headlabel="      4948"]
BB4945 -> BB4946 [tailport=s, headport=n, headlabel="      4946"]
BB4945 -> BB5067 [tailport=s, headport=n, color=gray]
BB4946 [shape=record label="{12533: read-variable['createMap',v57,v56]}" ] 
BB4946 -> BB4947 [tailport=s, headport=n, headlabel="      4947"]
BB4946 -> BB5067 [tailport=s, headport=n, color=gray]
BB4947 [shape=record label="{12534: call-createMap [v56,v57,v55]}" ] 
BB4947 -> BB4948 [tailport=s, headport=n]
BB4947 -> BB5067 [tailport=s, headport=n, color=gray]
BB4948 [shape=record label="{12535: write-variable[v55,'controllerDirectives']*|12536: read-variable['assertNoDuplicate',v57,v56]|12537: constant[\"'\",v61]|12538: read-variable['directiveName',v62,-]|12539: +[v61,v62,v59]|12540: constant[\"' controller\",v60]|12541: +[v59,v60,v58]|12542: read-variable['controllerDirectives',v64,-]|12543: read-variable['directiveName',v65,-]|12544: read-property[v64,v65,v63]|12545: \<variable-non-null-undef\>['controllerDirectives']|12546: read-variable['directive',v66,-]|12547: read-variable['$compileNode',v67,-]}" ] 
BB4948 -> BB4949 [tailport=s, headport=n, headlabel="      4949"]
BB4948 -> BB5067 [tailport=s, headport=n, color=gray]
BB4949 [shape=record label="{12548: call-assertNoDuplicate [v56,v57,v58,v63,v66,v67,-]*}" ] 
BB4949 -> BB4950 [tailport=s, headport=n, headlabel="      4950"]
BB4949 -> BB5067 [tailport=s, headport=n, color=gray]
BB4950 [shape=record label="{12549: read-variable['controllerDirectives',v69,-]|12550: read-variable['directiveName',v70,-]|12551: read-variable['directive',v68,-]|12552: write-property[v69,v70,v68]|12553: \<variable-non-null-undef\>['controllerDirectives']*}" ] 
BB4950 -> BB4951 [tailport=s, headport=n]
BB4950 -> BB5067 [tailport=s, headport=n, color=gray]
BB4951 [shape=record label="{12554: read-variable['directive',v54,-]|12555: read-property[v54,'transclude',v53]|12556: \<variable-non-null-undef\>['directive']|12557: write-variable[v53,'directiveValue']|12558: if[v53](true-block:4952,false-block:4979)}" ] 
BB4951 -> BB4952 [tailport=s, headport=n, headlabel="      4952"]
BB4951 -> BB4979 [tailport=s, headport=n, headlabel="      4979"]
BB4951 -> BB5067 [tailport=s, headport=n, color=gray]
BB4952 [shape=record label="{12559: constant[true,v55]|12560: write-variable[v55,'hasTranscludeDirective']*|12561: read-variable['directive',v58,-]|12562: read-property[v58,'$$tlb',v57]|12563: \<variable-non-null-undef\>['directive']|12564: ![v57,v56]|12565: if[v56](true-block:4953,false-block:4956)}" ] 
BB4952 -> BB4953 [tailport=s, headport=n, headlabel="      4953"]
BB4952 -> BB4956 [tailport=s, headport=n, headlabel="      4956"]
BB4952 -> BB5067 [tailport=s, headport=n, color=gray]
BB4953 [shape=record label="{12566: read-variable['assertNoDuplicate',v60,v59]|12567: constant[\"transclusion\",v61]|12568: read-variable['nonTlbTranscludeDirective',v62,-]|12569: read-variable['directive',v63,-]|12570: read-variable['$compileNode',v64,-]}" ] 
BB4953 -> BB4954 [tailport=s, headport=n, headlabel="      4954"]
BB4953 -> BB5067 [tailport=s, headport=n, color=gray]
BB4954 [shape=record label="{12571: call-assertNoDuplicate [v59,v60,v61,v62,v63,v64,-]*}" ] 
BB4954 -> BB4955 [tailport=s, headport=n, headlabel="      4955"]
BB4954 -> BB5067 [tailport=s, headport=n, color=gray]
BB4955 [shape=record label="{12572: read-variable['directive',v65,-]|12573: write-variable[v65,'nonTlbTranscludeDirective']*}" ] 
BB4955 -> BB4956 [tailport=s, headport=n]
BB4955 -> BB5067 [tailport=s, headport=n, color=gray]
BB4956 [shape=record label="{12574: read-variable['directiveValue',v60,-]|12575: constant[\"element\",v61]|12576: ==[v60,v61,v59]|12577: if[v59](true-block:4957,false-block:4958)}" ] 
BB4956 -> BB4957 [tailport=s, headport=n, headlabel="      4957"]
BB4956 -> BB4958 [tailport=s, headport=n, headlabel="      4958"]
BB4956 -> BB5067 [tailport=s, headport=n, color=gray]
BB4957 [shape=record label="{12578: constant[true,v62]|12579: write-variable[v62,'hasElementTranscludeDirective']*|12580: read-variable['directive',v64,-]|12581: read-property[v64,'priority',v63]|12582: \<variable-non-null-undef\>['directive']|12583: write-variable[v63,'terminalPriority']*|12584: read-variable['$compileNode',v65,-]|12585: write-variable[v65,'$template']*|12586: read-variable['templateAttrs',v67,-]|12587: read-variable['jqLite',v69,v68]|12588: read-variable['document',v72,-]|12589: read-property[v72,'createComment',-]|12590: \<variable-non-null-undef\>['document']|12591: constant[\" \",v80]|12592: read-variable['directiveName',v81,-]|12593: +[v80,v81,v78]|12594: constant[\": \",v79]|12595: +[v78,v79,v76]|12596: read-variable['templateAttrs',v82,-]|12597: read-variable['directiveName',v83,-]|12598: read-property[v82,v83,v77]|12599: \<variable-non-null-undef\>['templateAttrs']|12600: +[v76,v77,v74]|12601: constant[\" \",v75]|12602: +[v74,v75,v73]}" ] 
BB4957 -> BB4959 [tailport=s, headport=n, headlabel="      4959"]
BB4957 -> BB5067 [tailport=s, headport=n, color=gray]
BB4958 [shape=record label="{12603: read-variable['jqLite',v66,v65]|12604: read-variable['jqLiteClone',v69,v68]|12605: read-variable['compileNode',v70,-]}" ] 
BB4958 -> BB4970 [tailport=s, headport=n, headlabel="      4970"]
BB4958 -> BB5067 [tailport=s, headport=n, color=gray]
BB4959 [shape=record label="{12606: call-document.createComment [v72,'createComment',v73,v70]}" ] 
BB4959 -> BB4960 [tailport=s, headport=n, headlabel="      4960"]
BB4959 -> BB5067 [tailport=s, headport=n, color=gray]
BB4960 [shape=record label="{12607: call-jqLite [v68,v69,v70,v66]}" ] 
BB4960 -> BB4961 [tailport=s, headport=n, headlabel="      4961"]
BB4960 -> BB5067 [tailport=s, headport=n, color=gray]
BB4961 [shape=record label="{12608: write-property[v67,'$$element',v66]|12609: \<variable-non-null-undef\>['templateAttrs']|12610: write-variable[v66,'$compileNode']*|12611: read-variable['$compileNode',v85,-]|12612: constant[0.0,v86]|12613: read-property[v85,v86,v84]|12614: \<variable-non-null-undef\>['$compileNode']|12615: write-variable[v84,'compileNode']*|12616: read-variable['replaceWith',v88,v87]|12617: read-variable['jqCollection',v89,-]|12618: read-variable['sliceArgs',v92,v91]|12619: read-variable['$template',v93,-]}" ] 
BB4961 -> BB4962 [tailport=s, headport=n, headlabel="      4962"]
BB4961 -> BB5067 [tailport=s, headport=n, color=gray]
BB4962 [shape=record label="{12620: call-sliceArgs [v91,v92,v93,v90]}" ] 
BB4962 -> BB4963 [tailport=s, headport=n, headlabel="      4963"]
BB4962 -> BB5067 [tailport=s, headport=n, color=gray]
BB4963 [shape=record label="{12621: read-variable['compileNode',v94,-]}" ] 
BB4963 -> BB4964 [tailport=s, headport=n, headlabel="      4964"]
BB4963 -> BB5067 [tailport=s, headport=n, color=gray]
BB4964 [shape=record label="{12622: call-replaceWith [v87,v88,v89,v90,v94,-]*}" ] 
BB4964 -> BB4965 [tailport=s, headport=n, headlabel="      4965"]
BB4964 -> BB5067 [tailport=s, headport=n, color=gray]
BB4965 [shape=record label="{12623: read-variable['compile',v97,v96]|12624: read-variable['$template',v98,-]|12625: read-variable['transcludeFn',v99,-]|12626: read-variable['terminalPriority',v100,-]|12627: read-variable['replaceDirective',v101,-]|12628: if[v101](true-block:4966,false-block:4967)}" ] 
BB4965 -> BB4967 [tailport=s, headport=n, headlabel="      4967"]
BB4965 -> BB4966 [tailport=s, headport=n, headlabel="      4966"]
BB4965 -> BB5067 [tailport=s, headport=n, color=gray]
BB4966 [shape=record label="{12629: read-variable['replaceDirective',v102,-]|12630: read-property[v102,'name',v101]|12631: \<variable-non-null-undef\>['replaceDirective']}" ] 
BB4966 -> BB4967 [tailport=s, headport=n]
BB4966 -> BB5067 [tailport=s, headport=n, color=gray]
BB4967 [shape=record label="{12632: new[v102]|12633: read-variable['nonTlbTranscludeDirective',v103,-]|12634: write-property[v102,'nonTlbTranscludeDirective',v103]}" ] 
BB4967 -> BB4968 [tailport=s, headport=n, headlabel="      4968"]
BB4967 -> BB5067 [tailport=s, headport=n, color=gray]
BB4968 [shape=record label="{12635: call-compile [v96,v97,v98,v99,v100,v101,v102,v95]}" ] 
BB4968 -> BB4969 [tailport=s, headport=n, headlabel="      4969"]
BB4968 -> BB5067 [tailport=s, headport=n, color=gray]
BB4969 [shape=record label="{12636: write-variable[v95,'childTranscludeFn']*}" ] 
BB4969 -> BB4979 [tailport=s, headport=n]
BB4970 [shape=record label="{12637: call-jqLiteClone [v68,v69,v70,v67]}" ] 
BB4970 -> BB4971 [tailport=s, headport=n, headlabel="      4971"]
BB4970 -> BB5067 [tailport=s, headport=n, color=gray]
BB4971 [shape=record label="{12638: call-jqLite [v65,v66,v67,v64]}" ] 
BB4971 -> BB4972 [tailport=s, headport=n, headlabel="      4972"]
BB4971 -> BB5067 [tailport=s, headport=n, color=gray]
BB4972 [shape=record label="{12639: read-property[v64,'contents',-]}" ] 
BB4972 -> BB4973 [tailport=s, headport=n, headlabel="      4973"]
BB4972 -> BB5067 [tailport=s, headport=n, color=gray]
BB4973 [shape=record label="{12640: call-null [v64,'contents',v62]}" ] 
BB4973 -> BB4974 [tailport=s, headport=n, headlabel="      4974"]
BB4973 -> BB5067 [tailport=s, headport=n, color=gray]
BB4974 [shape=record label="{12641: write-variable[v62,'$template']*|12642: read-variable['$compileNode',v72,-]|12643: read-property[v72,'empty',-]|12644: \<variable-non-null-undef\>['$compileNode']}" ] 
BB4974 -> BB4975 [tailport=s, headport=n, headlabel="      4975"]
BB4974 -> BB5067 [tailport=s, headport=n, color=gray]
BB4975 [shape=record label="{12645: call-$compileNode.empty [v72,'empty',-]*}" ] 
BB4975 -> BB4976 [tailport=s, headport=n, headlabel="      4976"]
BB4975 -> BB5067 [tailport=s, headport=n, color=gray]
BB4976 [shape=record label="{12646: read-variable['compile',v75,v74]|12647: read-variable['$template',v76,-]|12648: read-variable['transcludeFn',v77,-]}" ] 
BB4976 -> BB4977 [tailport=s, headport=n, headlabel="      4977"]
BB4976 -> BB5067 [tailport=s, headport=n, color=gray]
BB4977 [shape=record label="{12649: call-compile [v74,v75,v76,v77,v73]}" ] 
BB4977 -> BB4978 [tailport=s, headport=n, headlabel="      4978"]
BB4977 -> BB5067 [tailport=s, headport=n, color=gray]
BB4978 [shape=record label="{12650: write-variable[v73,'childTranscludeFn']*}" ] 
BB4978 -> BB4979 [tailport=s, headport=n]
BB4979 [shape=record label="{12651: read-variable['directive',v56,-]|12652: read-property[v56,'template',v55]|12653: \<variable-non-null-undef\>['directive']|12654: if[v55](true-block:4980,false-block:5028)}" ] 
BB4979 -> BB4980 [tailport=s, headport=n, headlabel="      4980"]
BB4979 -> BB5028 [tailport=s, headport=n, headlabel="      5028"]
BB4979 -> BB5067 [tailport=s, headport=n, color=gray]
BB4980 [shape=record label="{12655: constant[true,v57]|12656: write-variable[v57,'hasTemplate']*|12657: read-variable['assertNoDuplicate',v59,v58]|12658: constant[\"template\",v60]|12659: read-variable['templateDirective',v61,-]|12660: read-variable['directive',v62,-]|12661: read-variable['$compileNode',v63,-]}" ] 
BB4980 -> BB4981 [tailport=s, headport=n, headlabel="      4981"]
BB4980 -> BB5067 [tailport=s, headport=n, color=gray]
BB4981 [shape=record label="{12662: call-assertNoDuplicate [v58,v59,v60,v61,v62,v63,-]*}" ] 
BB4981 -> BB4982 [tailport=s, headport=n, headlabel="      4982"]
BB4981 -> BB5067 [tailport=s, headport=n, color=gray]
BB4982 [shape=record label="{12663: read-variable['directive',v64,-]|12664: write-variable[v64,'templateDirective']*|12665: read-variable['isFunction',v68,v67]|12666: read-variable['directive',v70,-]|12667: read-property[v70,'template',v69]|12668: \<variable-non-null-undef\>['directive']}" ] 
BB4982 -> BB4983 [tailport=s, headport=n, headlabel="      4983"]
BB4982 -> BB5067 [tailport=s, headport=n, color=gray]
BB4983 [shape=record label="{12669: call-isFunction [v67,v68,v69,v66]}" ] 
BB4983 -> BB4984 [tailport=s, headport=n, headlabel="      4984"]
BB4983 -> BB5067 [tailport=s, headport=n, color=gray]
BB4984 [shape=record label="{12670: if[v66](true-block:4985,false-block:4986)}" ] 
BB4984 -> BB4985 [tailport=s, headport=n, headlabel="      4985"]
BB4984 -> BB4986 [tailport=s, headport=n, headlabel="      4986"]
BB4985 [shape=record label="{12671: read-variable['directive',v72,-]|12672: read-property[v72,'template',-]|12673: \<variable-non-null-undef\>['directive']|12674: read-variable['$compileNode',v73,-]|12675: read-variable['templateAttrs',v74,-]}" ] 
BB4985 -> BB4987 [tailport=s, headport=n, headlabel="      4987"]
BB4985 -> BB5067 [tailport=s, headport=n, color=gray]
BB4986 [shape=record label="{12676: read-variable['directive',v71,-]|12677: read-property[v71,'template',v65]|12678: \<variable-non-null-undef\>['directive']}" ] 
BB4986 -> BB4988 [tailport=s, headport=n, headlabel="      4988"]
BB4986 -> BB5067 [tailport=s, headport=n, color=gray]
BB4987 [shape=record label="{12679: call-directive.template [v72,'template',v73,v74,v65]}" ] 
BB4987 -> BB4988 [tailport=s, headport=n]
BB4987 -> BB5067 [tailport=s, headport=n, color=gray]
BB4988 [shape=record label="{12680: write-variable[v65,'directiveValue']*|12681: read-variable['denormalizeTemplate',v73,v72]|12682: read-variable['directiveValue',v74,-]}" ] 
BB4988 -> BB4989 [tailport=s, headport=n, headlabel="      4989"]
BB4988 -> BB5067 [tailport=s, headport=n, color=gray]
BB4989 [shape=record label="{12683: call-denormalizeTemplate [v72,v73,v74,v71]}" ] 
BB4989 -> BB4990 [tailport=s, headport=n, headlabel="      4990"]
BB4989 -> BB5067 [tailport=s, headport=n, color=gray]
BB4990 [shape=record label="{12684: write-variable[v71,'directiveValue']*|12685: read-variable['directive',v76,-]|12686: read-property[v76,'replace',v75]|12687: \<variable-non-null-undef\>['directive']|12688: if[v75](true-block:4991,false-block:4992)}" ] 
BB4990 -> BB4991 [tailport=s, headport=n, headlabel="      4991"]
BB4990 -> BB4992 [tailport=s, headport=n, headlabel="      4992"]
BB4990 -> BB5067 [tailport=s, headport=n, color=gray]
BB4991 [shape=record label="{12689: read-variable['directive',v77,-]|12690: write-variable[v77,'replaceDirective']*|12691: read-variable['jqLiteIsTextNode',v80,v79]|12692: read-variable['directiveValue',v81,-]}" ] 
BB4991 -> BB4993 [tailport=s, headport=n, headlabel="      4993"]
BB4991 -> BB5067 [tailport=s, headport=n, color=gray]
BB4992 [shape=record label="{12693: read-variable['$compileNode',v78,-]|12694: read-property[v78,'html',-]|12695: \<variable-non-null-undef\>['$compileNode']|12696: read-variable['directiveValue',v79,-]}" ] 
BB4992 -> BB5027 [tailport=s, headport=n, headlabel="      5027"]
BB4992 -> BB5067 [tailport=s, headport=n, color=gray]
BB4993 [shape=record label="{12697: call-jqLiteIsTextNode [v79,v80,v81,v78]}" ] 
BB4993 -> BB4994 [tailport=s, headport=n, headlabel="      4994"]
BB4993 -> BB5067 [tailport=s, headport=n, color=gray]
BB4994 [shape=record label="{12698: if[v78](true-block:4995,false-block:4996)}" ] 
BB4994 -> BB4995 [tailport=s, headport=n, headlabel="      4995"]
BB4994 -> BB4996 [tailport=s, headport=n, headlabel="      4996"]
BB4995 [shape=record label="{12699: read-variable['Array',v83,-]}" ] 
BB4995 -> BB4997 [tailport=s, headport=n, headlabel="      4997"]
BB4995 -> BB5067 [tailport=s, headport=n, color=gray]
BB4996 [shape=record label="{12700: read-variable['removeComments',v84,v83]|12701: read-variable['wrapTemplate',v87,v86]|12702: read-variable['directive',v89,-]|12703: read-property[v89,'templateNamespace',v88]|12704: \<variable-non-null-undef\>['directive']|12705: read-variable['trim',v92,v91]|12706: read-variable['directiveValue',v93,-]}" ] 
BB4996 -> BB4999 [tailport=s, headport=n, headlabel="      4999"]
BB4996 -> BB5067 [tailport=s, headport=n, color=gray]
BB4997 [shape=record label="{12707: construct [-,v83,v82]}" ] 
BB4997 -> BB4998 [tailport=s, headport=n, headlabel="      4998"]
BB4997 -> BB5067 [tailport=s, headport=n, color=gray]
BB4998 [shape=record label="{12708: write-variable[v82,'$template']*}" ] 
BB4998 -> BB5003 [tailport=s, headport=n, headlabel="      5003"]
BB4999 [shape=record label="{12709: call-trim [v91,v92,v93,v90]}" ] 
BB4999 -> BB5000 [tailport=s, headport=n, headlabel="      5000"]
BB4999 -> BB5067 [tailport=s, headport=n, color=gray]
BB5000 [shape=record label="{12710: call-wrapTemplate [v86,v87,v88,v90,v85]}" ] 
BB5000 -> BB5001 [tailport=s, headport=n, headlabel="      5001"]
BB5000 -> BB5067 [tailport=s, headport=n, color=gray]
BB5001 [shape=record label="{12711: call-removeComments [v83,v84,v85,v82]}" ] 
BB5001 -> BB5002 [tailport=s, headport=n, headlabel="      5002"]
BB5001 -> BB5067 [tailport=s, headport=n, color=gray]
BB5002 [shape=record label="{12712: write-variable[v82,'$template']*}" ] 
BB5002 -> BB5003 [tailport=s, headport=n]
BB5003 [shape=record label="{12713: read-variable['$template',v83,-]|12714: constant[0.0,v84]|12715: read-property[v83,v84,v82]|12716: \<variable-non-null-undef\>['$template']|12717: write-variable[v82,'compileNode']*|12718: read-variable['$template',v88,-]|12719: read-property[v88,'length',v86]|12720: \<variable-non-null-undef\>['$template']|12721: constant[1.0,v87]|12722: !=[v86,v87,v85]|12723: if[v85](true-block:5005,false-block:5004)}" ] 
BB5003 -> BB5005 [tailport=s, headport=n, headlabel="      5005"]
BB5003 -> BB5004 [tailport=s, headport=n, headlabel="      5004"]
BB5003 -> BB5067 [tailport=s, headport=n, color=gray]
BB5004 [shape=record label="{12724: read-variable['compileNode',v88,-]|12725: read-property[v88,'nodeType',v86]|12726: \<variable-non-null-undef\>['compileNode']|12727: read-variable['NODE_TYPE_ELEMENT',v87,-]|12728: !==[v86,v87,v85]}" ] 
BB5004 -> BB5005 [tailport=s, headport=n]
BB5004 -> BB5067 [tailport=s, headport=n, color=gray]
BB5005 [shape=record label="{12729: if[v85](true-block:5006,false-block:5009)}" ] 
BB5005 -> BB5006 [tailport=s, headport=n, headlabel="      5006"]
BB5005 -> BB5009 [tailport=s, headport=n, headlabel="      5009"]
BB5006 [shape=record label="{12730: read-variable['$compileMinErr',v88,v87]|12731: constant[\"tplrt\",v89]|12732: constant[\"Template for directive '\\\{0\\\}' must have exactly one root element. \\\{1\\\}\",v90]|12733: read-variable['directiveName',v91,-]|12734: constant[\"\",v92]}" ] 
BB5006 -> BB5007 [tailport=s, headport=n, headlabel="      5007"]
BB5006 -> BB5067 [tailport=s, headport=n, color=gray]
BB5007 [shape=record label="{12735: call-$compileMinErr [v87,v88,v89,v90,v91,v92,v86]}" ] 
BB5007 -> BB5008 [tailport=s, headport=n, headlabel="      5008"]
BB5007 -> BB5067 [tailport=s, headport=n, color=gray]
BB5008 [shape=record label="{12736: throw[v86]*}" ] 
BB5008 -> BB5009 [tailport=s, headport=n]
BB5008 -> BB5067 [tailport=s, headport=n, color=gray]
BB5009 [shape=record label="{12737: read-variable['replaceWith',v87,v86]|12738: read-variable['jqCollection',v88,-]|12739: read-variable['$compileNode',v89,-]|12740: read-variable['compileNode',v90,-]}" ] 
BB5009 -> BB5010 [tailport=s, headport=n, headlabel="      5010"]
BB5009 -> BB5067 [tailport=s, headport=n, color=gray]
BB5010 [shape=record label="{12741: call-replaceWith [v86,v87,v88,v89,v90,-]*}" ] 
BB5010 -> BB5011 [tailport=s, headport=n, headlabel="      5011"]
BB5010 -> BB5067 [tailport=s, headport=n, color=gray]
BB5011 [shape=record label="{12742: new[v91]|12743: new[v92]|12744: write-property[v91,'$attr',v92]|12745: write-variable[v91,'newTemplateAttrs']*|12746: read-variable['collectDirectives',v95,v94]|12747: read-variable['compileNode',v96,-]|12748: read-variable['Array',v98,-]}" ] 
BB5011 -> BB5012 [tailport=s, headport=n, headlabel="      5012"]
BB5011 -> BB5067 [tailport=s, headport=n, color=gray]
BB5012 [shape=record label="{12749: construct [-,v98,v97]}" ] 
BB5012 -> BB5013 [tailport=s, headport=n, headlabel="      5013"]
BB5012 -> BB5067 [tailport=s, headport=n, color=gray]
BB5013 [shape=record label="{12750: read-variable['newTemplateAttrs',v99,-]}" ] 
BB5013 -> BB5014 [tailport=s, headport=n, headlabel="      5014"]
BB5013 -> BB5067 [tailport=s, headport=n, color=gray]
BB5014 [shape=record label="{12751: call-collectDirectives [v94,v95,v96,v97,v99,v93]}" ] 
BB5014 -> BB5015 [tailport=s, headport=n, headlabel="      5015"]
BB5014 -> BB5067 [tailport=s, headport=n, color=gray]
BB5015 [shape=record label="{12752: write-variable[v93,'templateDirectives']*|12753: read-variable['directives',v102,-]|12754: read-property[v102,'splice',-]|12755: \<variable-non-null-undef\>['directives']|12756: read-variable['i',v104,-]|12757: constant[1.0,v105]|12758: +[v104,v105,v103]|12759: read-variable['directives',v109,-]|12760: read-property[v109,'length',v107]|12761: \<variable-non-null-undef\>['directives']|12762: read-variable['i',v110,-]|12763: constant[1.0,v111]|12764: +[v110,v111,v108]|12765: -[v107,v108,v106]}" ] 
BB5015 -> BB5016 [tailport=s, headport=n, headlabel="      5016"]
BB5015 -> BB5067 [tailport=s, headport=n, color=gray]
BB5016 [shape=record label="{12766: call-directives.splice [v102,'splice',v103,v106,v100]}" ] 
BB5016 -> BB5017 [tailport=s, headport=n, headlabel="      5017"]
BB5016 -> BB5067 [tailport=s, headport=n, color=gray]
BB5017 [shape=record label="{12767: write-variable[v100,'unprocessedDirectives']*|12768: read-variable['newIsolateScopeDirective',v112,-]|12769: if[v112](true-block:5018,false-block:5020)}" ] 
BB5017 -> BB5018 [tailport=s, headport=n, headlabel="      5018"]
BB5017 -> BB5020 [tailport=s, headport=n, headlabel="      5020"]
BB5017 -> BB5067 [tailport=s, headport=n, color=gray]
BB5018 [shape=record label="{12770: read-variable['markDirectivesAsIsolate',v114,v113]|12771: read-variable['templateDirectives',v115,-]}" ] 
BB5018 -> BB5019 [tailport=s, headport=n, headlabel="      5019"]
BB5018 -> BB5067 [tailport=s, headport=n, color=gray]
BB5019 [shape=record label="{12772: call-markDirectivesAsIsolate [v113,v114,v115,-]*}" ] 
BB5019 -> BB5020 [tailport=s, headport=n]
BB5019 -> BB5067 [tailport=s, headport=n, color=gray]
BB5020 [shape=record label="{12773: read-variable['directives',v117,-]|12774: read-property[v117,'concat',-]|12775: \<variable-non-null-undef\>['directives']|12776: read-variable['templateDirectives',v118,-]}" ] 
BB5020 -> BB5021 [tailport=s, headport=n, headlabel="      5021"]
BB5020 -> BB5067 [tailport=s, headport=n, color=gray]
BB5021 [shape=record label="{12777: call-directives.concat [v117,'concat',v118,v115]}" ] 
BB5021 -> BB5022 [tailport=s, headport=n, headlabel="      5022"]
BB5021 -> BB5067 [tailport=s, headport=n, color=gray]
BB5022 [shape=record label="{12778: read-property[v115,'concat',-]|12779: read-variable['unprocessedDirectives',v119,-]}" ] 
BB5022 -> BB5023 [tailport=s, headport=n, headlabel="      5023"]
BB5022 -> BB5067 [tailport=s, headport=n, color=gray]
BB5023 [shape=record label="{12780: call-null [v115,'concat',v119,v113]}" ] 
BB5023 -> BB5024 [tailport=s, headport=n, headlabel="      5024"]
BB5023 -> BB5067 [tailport=s, headport=n, color=gray]
BB5024 [shape=record label="{12781: write-variable[v113,'directives']*|12782: read-variable['mergeTemplateAttributes',v121,v120]|12783: read-variable['templateAttrs',v122,-]|12784: read-variable['newTemplateAttrs',v123,-]}" ] 
BB5024 -> BB5025 [tailport=s, headport=n, headlabel="      5025"]
BB5024 -> BB5067 [tailport=s, headport=n, color=gray]
BB5025 [shape=record label="{12785: call-mergeTemplateAttributes [v120,v121,v122,v123,-]*}" ] 
BB5025 -> BB5026 [tailport=s, headport=n, headlabel="      5026"]
BB5025 -> BB5067 [tailport=s, headport=n, color=gray]
BB5026 [shape=record label="{12786: read-variable['directives',v125,-]|12787: read-property[v125,'length',v124]|12788: \<variable-non-null-undef\>['directives']|12789: write-variable[v124,'ii']*}" ] 
BB5026 -> BB5028 [tailport=s, headport=n]
BB5026 -> BB5067 [tailport=s, headport=n, color=gray]
BB5027 [shape=record label="{12790: call-$compileNode.html [v78,'html',v79,-]*}" ] 
BB5027 -> BB5028 [tailport=s, headport=n]
BB5027 -> BB5067 [tailport=s, headport=n, color=gray]
BB5028 [shape=record label="{12791: read-variable['directive',v58,-]|12792: read-property[v58,'templateUrl',v57]|12793: \<variable-non-null-undef\>['directive']|12794: if[v57](true-block:5029,false-block:5030)}" ] 
BB5028 -> BB5029 [tailport=s, headport=n, headlabel="      5029"]
BB5028 -> BB5030 [tailport=s, headport=n, headlabel="      5030"]
BB5028 -> BB5067 [tailport=s, headport=n, color=gray]
BB5029 [shape=record label="{12795: constant[true,v59]|12796: write-variable[v59,'hasTemplate']*|12797: read-variable['assertNoDuplicate',v61,v60]|12798: constant[\"template\",v62]|12799: read-variable['templateDirective',v63,-]|12800: read-variable['directive',v64,-]|12801: read-variable['$compileNode',v65,-]}" ] 
BB5029 -> BB5031 [tailport=s, headport=n, headlabel="      5031"]
BB5029 -> BB5067 [tailport=s, headport=n, color=gray]
BB5030 [shape=record label="{12802: read-variable['directive',v60,-]|12803: read-property[v60,'compile',v59]|12804: \<variable-non-null-undef\>['directive']|12805: if[v59](true-block:5043,false-block:5059)}" ] 
BB5030 -> BB5043 [tailport=s, headport=n, headlabel="      5043"]
BB5030 -> BB5059 [tailport=s, headport=n, headlabel="      5059"]
BB5030 -> BB5067 [tailport=s, headport=n, color=gray]
BB5031 [shape=record label="{12806: call-assertNoDuplicate [v60,v61,v62,v63,v64,v65,-]*}" ] 
BB5031 -> BB5032 [tailport=s, headport=n, headlabel="      5032"]
BB5031 -> BB5067 [tailport=s, headport=n, color=gray]
BB5032 [shape=record label="{12807: read-variable['directive',v66,-]|12808: write-variable[v66,'templateDirective']*|12809: read-variable['directive',v68,-]|12810: read-property[v68,'replace',v67]|12811: \<variable-non-null-undef\>['directive']|12812: if[v67](true-block:5033,false-block:5034)}" ] 
BB5032 -> BB5033 [tailport=s, headport=n, headlabel="      5033"]
BB5032 -> BB5034 [tailport=s, headport=n, headlabel="      5034"]
BB5032 -> BB5067 [tailport=s, headport=n, color=gray]
BB5033 [shape=record label="{12813: read-variable['directive',v69,-]|12814: write-variable[v69,'replaceDirective']*}" ] 
BB5033 -> BB5034 [tailport=s, headport=n]
BB5033 -> BB5067 [tailport=s, headport=n, color=gray]
BB5034 [shape=record label="{12815: read-variable['compileTemplateUrl',v71,v70]|12816: read-variable['directives',v74,-]|12817: read-property[v74,'splice',-]|12818: \<variable-non-null-undef\>['directives']|12819: read-variable['i',v75,-]|12820: read-variable['directives',v79,-]|12821: read-property[v79,'length',v77]|12822: \<variable-non-null-undef\>['directives']|12823: read-variable['i',v78,-]|12824: -[v77,v78,v76]}" ] 
BB5034 -> BB5035 [tailport=s, headport=n, headlabel="      5035"]
BB5034 -> BB5067 [tailport=s, headport=n, color=gray]
BB5035 [shape=record label="{12825: call-directives.splice [v74,'splice',v75,v76,v72]}" ] 
BB5035 -> BB5036 [tailport=s, headport=n, headlabel="      5036"]
BB5035 -> BB5067 [tailport=s, headport=n, color=gray]
BB5036 [shape=record label="{12826: read-variable['$compileNode',v80,-]|12827: read-variable['templateAttrs',v81,-]|12828: read-variable['jqCollection',v82,-]|12829: read-variable['hasTranscludeDirective',v83,-]|12830: if[v83](true-block:5037,false-block:5038)}" ] 
BB5036 -> BB5038 [tailport=s, headport=n, headlabel="      5038"]
BB5036 -> BB5037 [tailport=s, headport=n, headlabel="      5037"]
BB5036 -> BB5067 [tailport=s, headport=n, color=gray]
BB5037 [shape=record label="{12831: read-variable['childTranscludeFn',v83,-]}" ] 
BB5037 -> BB5038 [tailport=s, headport=n]
BB5037 -> BB5067 [tailport=s, headport=n, color=gray]
BB5038 [shape=record label="{12832: read-variable['preLinkFns',v84,-]|12833: read-variable['postLinkFns',v85,-]|12834: new[v86]|12835: read-variable['controllerDirectives',v87,-]|12836: write-property[v86,'controllerDirectives',v87]|12837: read-variable['newScopeDirective',v89,-]|12838: read-variable['directive',v90,-]|12839: !==[v89,v90,v88]|12840: if[v88](true-block:5039,false-block:5040)}" ] 
BB5038 -> BB5040 [tailport=s, headport=n, headlabel="      5040"]
BB5038 -> BB5039 [tailport=s, headport=n, headlabel="      5039"]
BB5038 -> BB5067 [tailport=s, headport=n, color=gray]
BB5039 [shape=record label="{12841: read-variable['newScopeDirective',v88,-]}" ] 
BB5039 -> BB5040 [tailport=s, headport=n]
BB5039 -> BB5067 [tailport=s, headport=n, color=gray]
BB5040 [shape=record label="{12842: write-property[v86,'newScopeDirective',v88]|12843: read-variable['newIsolateScopeDirective',v91,-]|12844: write-property[v86,'newIsolateScopeDirective',v91]|12845: read-variable['templateDirective',v92,-]|12846: write-property[v86,'templateDirective',v92]|12847: read-variable['nonTlbTranscludeDirective',v93,-]|12848: write-property[v86,'nonTlbTranscludeDirective',v93]}" ] 
BB5040 -> BB5041 [tailport=s, headport=n, headlabel="      5041"]
BB5040 -> BB5067 [tailport=s, headport=n, color=gray]
BB5041 [shape=record label="{12849: call-compileTemplateUrl [v70,v71,v72,v80,v81,v82,v83,v84,v85,v86,v69]}" ] 
BB5041 -> BB5042 [tailport=s, headport=n, headlabel="      5042"]
BB5041 -> BB5067 [tailport=s, headport=n, color=gray]
BB5042 [shape=record label="{12850: write-variable[v69,'nodeLinkFn']*|12851: read-variable['directives',v95,-]|12852: read-property[v95,'length',v94]|12853: \<variable-non-null-undef\>['directives']|12854: write-variable[v94,'ii']*}" ] 
BB5042 -> BB5059 [tailport=s, headport=n]
BB5042 -> BB5067 [tailport=s, headport=n, color=gray]
BB5043 [shape=record label="{12855: read-variable['directive',v63,-]|12856: read-property[v63,'compile',-]|12857: \<variable-non-null-undef\>['directive']|12858: read-variable['$compileNode',v64,-]|12859: read-variable['templateAttrs',v65,-]|12860: read-variable['childTranscludeFn',v66,-]}" ] 
BB5043 -> BB5044 [tailport=s, headport=n, headlabel="      5044"]
BB5043 -> BB5053 [tailport=s, headport=n, color=gray, headlabel="      5053"]
BB5044 [shape=record label="{12861: call-directive.compile [v63,'compile',v64,v65,v66,v61]}" ] 
BB5044 -> BB5045 [tailport=s, headport=n, headlabel="      5045"]
BB5044 -> BB5053 [tailport=s, headport=n, color=gray]
BB5045 [shape=record label="{12862: write-variable[v61,'linkFn']*|12863: read-variable['isFunction',v69,v68]|12864: read-variable['linkFn',v70,-]}" ] 
BB5045 -> BB5046 [tailport=s, headport=n, headlabel="      5046"]
BB5045 -> BB5053 [tailport=s, headport=n, color=gray]
BB5046 [shape=record label="{12865: call-isFunction [v68,v69,v70,v67]}" ] 
BB5046 -> BB5047 [tailport=s, headport=n, headlabel="      5047"]
BB5046 -> BB5053 [tailport=s, headport=n, color=gray]
BB5047 [shape=record label="{12866: if[v67](true-block:5048,false-block:5049)}" ] 
BB5047 -> BB5048 [tailport=s, headport=n, headlabel="      5048"]
BB5047 -> BB5049 [tailport=s, headport=n, headlabel="      5049"]
BB5048 [shape=record label="{12867: read-variable['addLinkFns',v72,v71]|12868: constant[null,v73]|12869: read-variable['linkFn',v74,-]|12870: read-variable['attrStart',v75,-]|12871: read-variable['attrEnd',v76,-]}" ] 
BB5048 -> BB5050 [tailport=s, headport=n, headlabel="      5050"]
BB5048 -> BB5053 [tailport=s, headport=n, color=gray]
BB5049 [shape=record label="{12872: read-variable['linkFn',v71,-]|12873: if[v71](true-block:5051,false-block:5059)}" ] 
BB5049 -> BB5051 [tailport=s, headport=n, headlabel="      5051"]
BB5049 -> BB5059 [tailport=s, headport=n]
BB5049 -> BB5053 [tailport=s, headport=n, color=gray]
BB5050 [shape=record label="{12874: call-addLinkFns [v71,v72,v73,v74,v75,v76,-]*}" ] 
BB5050 -> BB5059 [tailport=s, headport=n]
BB5050 -> BB5053 [tailport=s, headport=n, color=gray]
BB5051 [shape=record label="{12875: read-variable['addLinkFns',v73,v72]|12876: read-variable['linkFn',v75,-]|12877: read-property[v75,'pre',v74]|12878: \<variable-non-null-undef\>['linkFn']|12879: read-variable['linkFn',v77,-]|12880: read-property[v77,'post',v76]|12881: \<variable-non-null-undef\>['linkFn']|12882: read-variable['attrStart',v78,-]|12883: read-variable['attrEnd',v79,-]}" ] 
BB5051 -> BB5052 [tailport=s, headport=n, headlabel="      5052"]
BB5051 -> BB5053 [tailport=s, headport=n, color=gray]
BB5052 [shape=record label="{12884: call-addLinkFns [v72,v73,v74,v76,v78,v79,-]*}" ] 
BB5052 -> BB5059 [tailport=s, headport=n]
BB5052 -> BB5053 [tailport=s, headport=n, color=gray]
BB5053 [shape=record label="{12885: catch[e,v61]|12886: begin-with[v61]}" ] 
BB5053 -> BB5054 [tailport=s, headport=n, headlabel="      5054"]
BB5053 -> BB5067 [tailport=s, headport=n, color=gray]
BB5054 [shape=record label="{12887: read-variable['$exceptionHandler',v64,v63]|12888: read-variable['e',v65,v62]|12889: read-variable['startingTag',v68,v67]|12890: read-variable['$compileNode',v69,v62]}" ] 
BB5054 -> BB5056 [tailport=s, headport=n, headlabel="      5056"]
BB5054 -> BB5055 [tailport=s, headport=n, color=gray, headlabel="      5055"]
BB5055 [shape=record label="{12891: end-with}" ] 
BB5055 -> BB5067 [tailport=s, headport=n]
BB5056 [shape=record label="{12892: call-startingTag [v67,v68,v69,v66]}" ] 
BB5056 -> BB5057 [tailport=s, headport=n, headlabel="      5057"]
BB5056 -> BB5055 [tailport=s, headport=n, color=gray]
BB5057 [shape=record label="{12893: call-$exceptionHandler [v63,v64,v65,v66,-]*}" ] 
BB5057 -> BB5058 [tailport=s, headport=n, headlabel="      5058"]
BB5057 -> BB5055 [tailport=s, headport=n, color=gray]
BB5058 [shape=record label="{12894: end-with}" ] 
BB5058 -> BB5059 [tailport=s, headport=n]
BB5059 [shape=record label="{12895: read-variable['directive',v60,-]|12896: read-property[v60,'terminal',v59]|12897: \<variable-non-null-undef\>['directive']|12898: if[v59](true-block:5060,false-block:5063)}" ] 
BB5059 -> BB5060 [tailport=s, headport=n, headlabel="      5060"]
BB5059 -> BB5063 [tailport=s, headport=n, headlabel="      5063"]
BB5059 -> BB5067 [tailport=s, headport=n, color=gray]
BB5060 [shape=record label="{12899: read-variable['nodeLinkFn',v62,-]|12900: constant[true,v61]|12901: write-property[v62,'terminal',v61]|12902: \<variable-non-null-undef\>['nodeLinkFn']*|12903: read-variable['Math',v65,-]|12904: read-property[v65,'max',-]|12905: \<variable-non-null-undef\>['Math']|12906: read-variable['terminalPriority',v66,-]|12907: read-variable['directive',v68,-]|12908: read-property[v68,'priority',v67]|12909: \<variable-non-null-undef\>['directive']}" ] 
BB5060 -> BB5061 [tailport=s, headport=n, headlabel="      5061"]
BB5060 -> BB5067 [tailport=s, headport=n, color=gray]
BB5061 [shape=record label="{12910: call-Math.max [v65,'max',v66,v67,v63]}" ] 
BB5061 -> BB5062 [tailport=s, headport=n, headlabel="      5062"]
BB5061 -> BB5067 [tailport=s, headport=n, color=gray]
BB5062 [shape=record label="{12911: write-variable[v63,'terminalPriority']*}" ] 
BB5062 -> BB5063 [tailport=s, headport=n]
BB5063 [shape=record label="{12912: constant[1.0,v61]|12913: read-variable['i',v62,-]|12914: +[v62,v63]|12915: +[v63,v61,v64]|12916: write-variable[v64,'i']}" ] 
BB5063 -> BB4920 [tailport=s, headport=n]
BB5063 -> BB5067 [tailport=s, headport=n, color=gray]
BB5064 [shape=record label="{12917: read-variable['newScopeDirective',v37,-]|12918: read-property[v37,'scope',v35]|12919: \<variable-non-null-undef\>['newScopeDirective']|12920: constant[true,v36]|12921: ===[v35,v36,v33]}" ] 
BB5064 -> BB5065 [tailport=s, headport=n]
BB5064 -> BB5067 [tailport=s, headport=n, color=gray]
BB5065 [shape=record label="{12922: write-property[v34,'scope',v33]|12923: \<variable-non-null-undef\>['nodeLinkFn']*|12924: read-variable['nodeLinkFn',v36,-]|12925: read-variable['hasTranscludeDirective',v35,-]|12926: write-property[v36,'transcludeOnThisElement',v35]|12927: \<variable-non-null-undef\>['nodeLinkFn']*|12928: read-variable['nodeLinkFn',v38,-]|12929: read-variable['hasTemplate',v37,-]|12930: write-property[v38,'templateOnThisElement',v37]|12931: \<variable-non-null-undef\>['nodeLinkFn']*|12932: read-variable['nodeLinkFn',v40,-]|12933: read-variable['childTranscludeFn',v39,-]|12934: write-property[v40,'transclude',v39]|12935: \<variable-non-null-undef\>['nodeLinkFn']*|12936: read-variable['previousCompileContext',v42,-]|12937: read-variable['hasElementTranscludeDirective',v41,-]|12938: write-property[v42,'hasElementTranscludeDirective',v41]|12939: \<variable-non-null-undef\>['previousCompileContext']*|12940: read-variable['nodeLinkFn',v1,-]}" ] 
BB5065 -> BB5066 [tailport=s, headport=n, headlabel="      5066"]
BB5065 -> BB5067 [tailport=s, headport=n, color=gray]
BB5066 [shape=record label="{12941: return[v1]}" ] 
BB5067 [shape=record label="{12942: exceptional-return}" ] 
//#$~ 8179
}
