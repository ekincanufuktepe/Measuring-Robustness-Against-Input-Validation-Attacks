digraph {
rankdir="TD"
BB_entry750[shape=none,label=""];
BB_entry750 -> BB9996 [tailport=s, headport=n, headlabel="    9996"]
BB9996 [shape=record label="{33067: constant[undefined,v1]}" ] 
BB9996 -> BB9997 [tailport=s, headport=n, headlabel="      9997"]
BB9997 [shape=record label="{33068: constant[\"production\",v3]|33069: constant[\"development\",v4]|33070: !==[v3,v4,v2]|33071: if[v2](true-block:9998,false-block:9999)}" ] 
BB9997 -> BB9998 [tailport=s, headport=n, headlabel="      9998"]
BB9997 -> BB9999 [tailport=s, headport=n, headlabel="      9999"]
BB9997 -> BB10017 [tailport=s, headport=n, color=gray, headlabel="      10017"]
BB9998 [shape=record label="{33072: read-variable['invariant',v6,v5]|33073: read-variable['dummyNode',v9,-]|33074: ![v9,v8]|33075: ![v8,v7]|33076: constant[\"Markup wrapping node not initialized\",v10]}" ] 
BB9998 -> BB10000 [tailport=s, headport=n, headlabel="      10000"]
BB9998 -> BB10017 [tailport=s, headport=n, color=gray]
BB9999 [shape=record label="{33077: read-variable['invariant',v6,v5]|33078: read-variable['dummyNode',v9,-]|33079: ![v9,v8]|33080: ![v8,v7]}" ] 
BB9999 -> BB10001 [tailport=s, headport=n, headlabel="      10001"]
BB9999 -> BB10017 [tailport=s, headport=n, color=gray]
BB10000 [shape=record label="{33081: call-invariant [v5,v6,v7,v10,-]}" ] 
BB10000 -> BB10002 [tailport=s, headport=n, headlabel="      10002"]
BB10000 -> BB10017 [tailport=s, headport=n, color=gray]
BB10001 [shape=record label="{33082: call-invariant [v5,v6,v7,-]}" ] 
BB10001 -> BB10002 [tailport=s, headport=n]
BB10001 -> BB10017 [tailport=s, headport=n, color=gray]
BB10002 [shape=record label="{33083: read-variable['markupWrap',v8,-]|33084: read-property[v8,'hasOwnProperty',-]|33085: \<variable-non-null-undef\>['markupWrap']|33086: read-variable['nodeName',v9,-]}" ] 
BB10002 -> BB10003 [tailport=s, headport=n, headlabel="      10003"]
BB10002 -> BB10017 [tailport=s, headport=n, color=gray]
BB10003 [shape=record label="{33087: call-markupWrap.hasOwnProperty [v8,'hasOwnProperty',v9,v6]}" ] 
BB10003 -> BB10004 [tailport=s, headport=n, headlabel="      10004"]
BB10003 -> BB10017 [tailport=s, headport=n, color=gray]
BB10004 [shape=record label="{33088: ![v6,v5]|33089: if[v5](true-block:10005,false-block:10006)}" ] 
BB10004 -> BB10005 [tailport=s, headport=n, headlabel="      10005"]
BB10004 -> BB10006 [tailport=s, headport=n, headlabel="      10006"]
BB10004 -> BB10017 [tailport=s, headport=n, color=gray]
BB10005 [shape=record label="{33090: constant[\"*\",v10]|33091: write-variable[v10,'nodeName']*}" ] 
BB10005 -> BB10006 [tailport=s, headport=n]
BB10006 [shape=record label="{33092: read-variable['shouldWrap',v13,-]|33093: read-property[v13,'hasOwnProperty',-]|33094: \<variable-non-null-undef\>['shouldWrap']|33095: read-variable['nodeName',v14,-]}" ] 
BB10006 -> BB10007 [tailport=s, headport=n, headlabel="      10007"]
BB10006 -> BB10017 [tailport=s, headport=n, color=gray]
BB10007 [shape=record label="{33096: call-shouldWrap.hasOwnProperty [v13,'hasOwnProperty',v14,v11]}" ] 
BB10007 -> BB10008 [tailport=s, headport=n, headlabel="      10008"]
BB10007 -> BB10017 [tailport=s, headport=n, color=gray]
BB10008 [shape=record label="{33097: ![v11,v10]|33098: if[v10](true-block:10009,false-block:10013)}" ] 
BB10008 -> BB10009 [tailport=s, headport=n, headlabel="      10009"]
BB10008 -> BB10013 [tailport=s, headport=n, headlabel="      10013"]
BB10008 -> BB10017 [tailport=s, headport=n, color=gray]
BB10009 [shape=record label="{33099: read-variable['nodeName',v16,-]|33100: constant[\"*\",v17]|33101: ===[v16,v17,v15]|33102: if[v15](true-block:10010,false-block:10011)}" ] 
BB10009 -> BB10010 [tailport=s, headport=n, headlabel="      10010"]
BB10009 -> BB10011 [tailport=s, headport=n, headlabel="      10011"]
BB10009 -> BB10017 [tailport=s, headport=n, color=gray]
BB10010 [shape=record label="{33103: read-variable['dummyNode',v19,-]|33104: constant[\"\\\<link /\\\>\",v18]|33105: write-property[v19,'innerHTML',v18]|33106: \<variable-non-null-undef\>['dummyNode']*}" ] 
BB10010 -> BB10012 [tailport=s, headport=n, headlabel="      10012"]
BB10010 -> BB10017 [tailport=s, headport=n, color=gray]
BB10011 [shape=record label="{33107: read-variable['dummyNode',v19,-]|33108: constant[\"\\\<\",v26]|33109: read-variable['nodeName',v27,-]|33110: +[v26,v27,v24]|33111: constant[\"\\\>\\\</\",v25]|33112: +[v24,v25,v22]|33113: read-variable['nodeName',v23,-]|33114: +[v22,v23,v20]|33115: constant[\"\\\>\",v21]|33116: +[v20,v21,v18]|33117: write-property[v19,'innerHTML',v18]|33118: \<variable-non-null-undef\>['dummyNode']*}" ] 
BB10011 -> BB10012 [tailport=s, headport=n]
BB10011 -> BB10017 [tailport=s, headport=n, color=gray]
BB10012 [shape=record label="{33119: read-variable['shouldWrap',v19,-]|33120: read-variable['nodeName',v20,-]|33121: read-variable['dummyNode',v22,-]|33122: read-property[v22,'firstChild',v21]|33123: \<variable-non-null-undef\>['dummyNode']|33124: ![v21,v18]|33125: write-property[v19,v20,v18]|33126: \<variable-non-null-undef\>['shouldWrap']*}" ] 
BB10012 -> BB10013 [tailport=s, headport=n]
BB10012 -> BB10017 [tailport=s, headport=n, color=gray]
BB10013 [shape=record label="{33127: read-variable['shouldWrap',v16,-]|33128: read-variable['nodeName',v17,-]|33129: read-property[v16,v17,v15]|33130: \<variable-non-null-undef\>['shouldWrap']|33131: if[v15](true-block:10014,false-block:10015)}" ] 
BB10013 -> BB10014 [tailport=s, headport=n, headlabel="      10014"]
BB10013 -> BB10015 [tailport=s, headport=n, headlabel="      10015"]
BB10013 -> BB10017 [tailport=s, headport=n, color=gray]
BB10014 [shape=record label="{33132: read-variable['markupWrap',v18,-]|33133: read-variable['nodeName',v19,-]|33134: read-property[v18,v19,v1]|33135: \<variable-non-null-undef\>['markupWrap']}" ] 
BB10014 -> BB10016 [tailport=s, headport=n, headlabel="      10016"]
BB10014 -> BB10017 [tailport=s, headport=n, color=gray]
BB10015 [shape=record label="{33136: constant[null,v1]}" ] 
BB10015 -> BB10016 [tailport=s, headport=n]
BB10016 [shape=record label="{33137: return[v1]}" ] 
BB10017 [shape=record label="{33138: exceptional-return}" ] 
//#$~ 17987
}
