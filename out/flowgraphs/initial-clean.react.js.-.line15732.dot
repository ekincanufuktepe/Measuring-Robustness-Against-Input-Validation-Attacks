digraph {
rankdir="TD"
BB_entry646[shape=none,label=""];
BB_entry646 -> BB8781 [tailport=s, headport=n, headlabel="    8781"]
BB8781 [shape=record label="{29171: constant[undefined,v1]|29172: vardecl['dispatchConfig']|29173: vardecl['EventConstructor']|29174: vardecl['event']}" ] 
BB8781 -> BB8782 [tailport=s, headport=n, headlabel="      8782"]
BB8782 [shape=record label="{29175: read-variable['topLevelEventsToDispatchConfig',v3,-]|29176: read-variable['topLevelType',v4,-]|29177: read-property[v3,v4,v2]|29178: \<variable-non-null-undef\>['topLevelEventsToDispatchConfig']|29179: write-variable[v2,'dispatchConfig']*|29180: read-variable['dispatchConfig',v6,-]|29181: ![v6,v5]|29182: if[v5](true-block:8783,false-block:8784)}" ] 
BB8782 -> BB8783 [tailport=s, headport=n, headlabel="      8783"]
BB8782 -> BB8784 [tailport=s, headport=n, headlabel="      8784"]
BB8782 -> BB8845 [tailport=s, headport=n, color=gray, headlabel="      8845"]
BB8783 [shape=record label="{29183: constant[null,v1]}" ] 
BB8783 -> BB8844 [tailport=s, headport=n, headlabel="      8844"]
BB8784 [shape=record label="{29184: read-variable['topLevelType',v7,-]|29185: read-variable['topLevelTypes',v10,-]|29186: read-property[v10,'topInput',v8]|29187: \<variable-non-null-undef\>['topLevelTypes']|29188: ==[v7,v8,v9]|29189: if[v9](true-block:8790,false-block:8786)}" ] 
BB8784 -> BB8790 [tailport=s, headport=n, headlabel="      8790"]
BB8784 -> BB8786 [tailport=s, headport=n, headlabel="      8786"]
BB8784 -> BB8845 [tailport=s, headport=n, color=gray]
BB8785 [shape=record label="{29190: constant[\"production\",v11]|29191: constant[\"development\",v12]|29192: !==[v11,v12,v10]|29193: if[v10](true-block:8835,false-block:8836)}" ] 
BB8785 -> BB8835 [tailport=s, headport=n, headlabel="      8835"]
BB8785 -> BB8836 [tailport=s, headport=n, headlabel="      8836"]
BB8785 -> BB8845 [tailport=s, headport=n, color=gray]
BB8786 [shape=record label="{29194: read-variable['topLevelTypes',v11,-]|29195: read-property[v11,'topLoad',v8]|29196: \<variable-non-null-undef\>['topLevelTypes']|29197: ==[v7,v8,v9]|29198: if[v9](true-block:8790,false-block:8787)}" ] 
BB8786 -> BB8790 [tailport=s, headport=n]
BB8786 -> BB8787 [tailport=s, headport=n, headlabel="      8787"]
BB8786 -> BB8845 [tailport=s, headport=n, color=gray]
BB8787 [shape=record label="{29199: read-variable['topLevelTypes',v12,-]|29200: read-property[v12,'topError',v8]|29201: \<variable-non-null-undef\>['topLevelTypes']|29202: ==[v7,v8,v9]|29203: if[v9](true-block:8790,false-block:8788)}" ] 
BB8787 -> BB8790 [tailport=s, headport=n]
BB8787 -> BB8788 [tailport=s, headport=n, headlabel="      8788"]
BB8787 -> BB8845 [tailport=s, headport=n, color=gray]
BB8788 [shape=record label="{29204: read-variable['topLevelTypes',v13,-]|29205: read-property[v13,'topReset',v8]|29206: \<variable-non-null-undef\>['topLevelTypes']|29207: ==[v7,v8,v9]|29208: if[v9](true-block:8790,false-block:8789)}" ] 
BB8788 -> BB8790 [tailport=s, headport=n]
BB8788 -> BB8789 [tailport=s, headport=n, headlabel="      8789"]
BB8788 -> BB8845 [tailport=s, headport=n, color=gray]
BB8789 [shape=record label="{29209: read-variable['topLevelTypes',v14,-]|29210: read-property[v14,'topSubmit',v8]|29211: \<variable-non-null-undef\>['topLevelTypes']|29212: ==[v7,v8,v9]|29213: if[v9](true-block:8790,false-block:8791)}" ] 
BB8789 -> BB8790 [tailport=s, headport=n]
BB8789 -> BB8791 [tailport=s, headport=n, headlabel="      8791"]
BB8789 -> BB8845 [tailport=s, headport=n, color=gray]
BB8790 [shape=record label="{29214: read-variable['SyntheticEvent',v15,-]|29215: write-variable[v15,'EventConstructor']*}" ] 
BB8790 -> BB8785 [tailport=s, headport=n, headlabel="      8785"]
BB8790 -> BB8845 [tailport=s, headport=n, color=gray]
BB8791 [shape=record label="{29216: read-variable['topLevelTypes',v16,-]|29217: read-property[v16,'topKeyPress',v8]|29218: \<variable-non-null-undef\>['topLevelTypes']|29219: ==[v7,v8,v9]|29220: if[v9](true-block:8792,false-block:8793)}" ] 
BB8791 -> BB8792 [tailport=s, headport=n, headlabel="      8792"]
BB8791 -> BB8793 [tailport=s, headport=n, headlabel="      8793"]
BB8791 -> BB8845 [tailport=s, headport=n, color=gray]
BB8792 [shape=record label="{29221: read-variable['getEventCharCode',v21,v20]|29222: read-variable['nativeEvent',v22,-]}" ] 
BB8792 -> BB8794 [tailport=s, headport=n, headlabel="      8794"]
BB8792 -> BB8845 [tailport=s, headport=n, color=gray]
BB8793 [shape=record label="{29223: read-variable['topLevelTypes',v23,-]|29224: read-property[v23,'topKeyDown',v8]|29225: \<variable-non-null-undef\>['topLevelTypes']|29226: ==[v7,v8,v9]|29227: if[v9](true-block:8798,false-block:8797)}" ] 
BB8793 -> BB8798 [tailport=s, headport=n, headlabel="      8798"]
BB8793 -> BB8797 [tailport=s, headport=n, headlabel="      8797"]
BB8793 -> BB8845 [tailport=s, headport=n, color=gray]
BB8794 [shape=record label="{29228: call-getEventCharCode [v20,v21,v22,v18]}" ] 
BB8794 -> BB8795 [tailport=s, headport=n, headlabel="      8795"]
BB8794 -> BB8845 [tailport=s, headport=n, color=gray]
BB8795 [shape=record label="{29229: constant[0.0,v19]|29230: ===[v18,v19,v17]|29231: if[v17](true-block:8796,false-block:8798)}" ] 
BB8795 -> BB8796 [tailport=s, headport=n, headlabel="      8796"]
BB8795 -> BB8798 [tailport=s, headport=n]
BB8795 -> BB8845 [tailport=s, headport=n, color=gray]
BB8796 [shape=record label="{29232: constant[null,v1]}" ] 
BB8796 -> BB8844 [tailport=s, headport=n]
BB8797 [shape=record label="{29233: read-variable['topLevelTypes',v24,-]|29234: read-property[v24,'topKeyUp',v8]|29235: \<variable-non-null-undef\>['topLevelTypes']|29236: ==[v7,v8,v9]|29237: if[v9](true-block:8798,false-block:8799)}" ] 
BB8797 -> BB8798 [tailport=s, headport=n]
BB8797 -> BB8799 [tailport=s, headport=n, headlabel="      8799"]
BB8797 -> BB8845 [tailport=s, headport=n, color=gray]
BB8798 [shape=record label="{29238: read-variable['SyntheticKeyboardEvent',v25,-]|29239: write-variable[v25,'EventConstructor']*}" ] 
BB8798 -> BB8785 [tailport=s, headport=n]
BB8798 -> BB8845 [tailport=s, headport=n, color=gray]
BB8799 [shape=record label="{29240: read-variable['topLevelTypes',v26,-]|29241: read-property[v26,'topBlur',v8]|29242: \<variable-non-null-undef\>['topLevelTypes']|29243: ==[v7,v8,v9]|29244: if[v9](true-block:8801,false-block:8800)}" ] 
BB8799 -> BB8801 [tailport=s, headport=n, headlabel="      8801"]
BB8799 -> BB8800 [tailport=s, headport=n, headlabel="      8800"]
BB8799 -> BB8845 [tailport=s, headport=n, color=gray]
BB8800 [shape=record label="{29245: read-variable['topLevelTypes',v27,-]|29246: read-property[v27,'topFocus',v8]|29247: \<variable-non-null-undef\>['topLevelTypes']|29248: ==[v7,v8,v9]|29249: if[v9](true-block:8801,false-block:8802)}" ] 
BB8800 -> BB8801 [tailport=s, headport=n]
BB8800 -> BB8802 [tailport=s, headport=n, headlabel="      8802"]
BB8800 -> BB8845 [tailport=s, headport=n, color=gray]
BB8801 [shape=record label="{29250: read-variable['SyntheticFocusEvent',v28,-]|29251: write-variable[v28,'EventConstructor']*}" ] 
BB8801 -> BB8785 [tailport=s, headport=n]
BB8801 -> BB8845 [tailport=s, headport=n, color=gray]
BB8802 [shape=record label="{29252: read-variable['topLevelTypes',v29,-]|29253: read-property[v29,'topClick',v8]|29254: \<variable-non-null-undef\>['topLevelTypes']|29255: ==[v7,v8,v9]|29256: if[v9](true-block:8803,false-block:8804)}" ] 
BB8802 -> BB8803 [tailport=s, headport=n, headlabel="      8803"]
BB8802 -> BB8804 [tailport=s, headport=n, headlabel="      8804"]
BB8802 -> BB8845 [tailport=s, headport=n, color=gray]
BB8803 [shape=record label="{29257: read-variable['nativeEvent',v33,-]|29258: read-property[v33,'button',v31]|29259: \<variable-non-null-undef\>['nativeEvent']|29260: constant[2.0,v32]|29261: ===[v31,v32,v30]|29262: if[v30](true-block:8805,false-block:8812)}" ] 
BB8803 -> BB8805 [tailport=s, headport=n, headlabel="      8805"]
BB8803 -> BB8812 [tailport=s, headport=n, headlabel="      8812"]
BB8803 -> BB8845 [tailport=s, headport=n, color=gray]
BB8804 [shape=record label="{29263: read-variable['topLevelTypes',v34,-]|29264: read-property[v34,'topContextMenu',v8]|29265: \<variable-non-null-undef\>['topLevelTypes']|29266: ==[v7,v8,v9]|29267: if[v9](true-block:8812,false-block:8806)}" ] 
BB8804 -> BB8812 [tailport=s, headport=n]
BB8804 -> BB8806 [tailport=s, headport=n, headlabel="      8806"]
BB8804 -> BB8845 [tailport=s, headport=n, color=gray]
BB8805 [shape=record label="{29268: constant[null,v1]}" ] 
BB8805 -> BB8844 [tailport=s, headport=n]
BB8806 [shape=record label="{29269: read-variable['topLevelTypes',v35,-]|29270: read-property[v35,'topDoubleClick',v8]|29271: \<variable-non-null-undef\>['topLevelTypes']|29272: ==[v7,v8,v9]|29273: if[v9](true-block:8812,false-block:8807)}" ] 
BB8806 -> BB8812 [tailport=s, headport=n]
BB8806 -> BB8807 [tailport=s, headport=n, headlabel="      8807"]
BB8806 -> BB8845 [tailport=s, headport=n, color=gray]
BB8807 [shape=record label="{29274: read-variable['topLevelTypes',v36,-]|29275: read-property[v36,'topMouseDown',v8]|29276: \<variable-non-null-undef\>['topLevelTypes']|29277: ==[v7,v8,v9]|29278: if[v9](true-block:8812,false-block:8808)}" ] 
BB8807 -> BB8812 [tailport=s, headport=n]
BB8807 -> BB8808 [tailport=s, headport=n, headlabel="      8808"]
BB8807 -> BB8845 [tailport=s, headport=n, color=gray]
BB8808 [shape=record label="{29279: read-variable['topLevelTypes',v37,-]|29280: read-property[v37,'topMouseMove',v8]|29281: \<variable-non-null-undef\>['topLevelTypes']|29282: ==[v7,v8,v9]|29283: if[v9](true-block:8812,false-block:8809)}" ] 
BB8808 -> BB8812 [tailport=s, headport=n]
BB8808 -> BB8809 [tailport=s, headport=n, headlabel="      8809"]
BB8808 -> BB8845 [tailport=s, headport=n, color=gray]
BB8809 [shape=record label="{29284: read-variable['topLevelTypes',v38,-]|29285: read-property[v38,'topMouseOut',v8]|29286: \<variable-non-null-undef\>['topLevelTypes']|29287: ==[v7,v8,v9]|29288: if[v9](true-block:8812,false-block:8810)}" ] 
BB8809 -> BB8812 [tailport=s, headport=n]
BB8809 -> BB8810 [tailport=s, headport=n, headlabel="      8810"]
BB8809 -> BB8845 [tailport=s, headport=n, color=gray]
BB8810 [shape=record label="{29289: read-variable['topLevelTypes',v39,-]|29290: read-property[v39,'topMouseOver',v8]|29291: \<variable-non-null-undef\>['topLevelTypes']|29292: ==[v7,v8,v9]|29293: if[v9](true-block:8812,false-block:8811)}" ] 
BB8810 -> BB8812 [tailport=s, headport=n]
BB8810 -> BB8811 [tailport=s, headport=n, headlabel="      8811"]
BB8810 -> BB8845 [tailport=s, headport=n, color=gray]
BB8811 [shape=record label="{29294: read-variable['topLevelTypes',v40,-]|29295: read-property[v40,'topMouseUp',v8]|29296: \<variable-non-null-undef\>['topLevelTypes']|29297: ==[v7,v8,v9]|29298: if[v9](true-block:8812,false-block:8813)}" ] 
BB8811 -> BB8812 [tailport=s, headport=n]
BB8811 -> BB8813 [tailport=s, headport=n, headlabel="      8813"]
BB8811 -> BB8845 [tailport=s, headport=n, color=gray]
BB8812 [shape=record label="{29299: read-variable['SyntheticMouseEvent',v41,-]|29300: write-variable[v41,'EventConstructor']*}" ] 
BB8812 -> BB8785 [tailport=s, headport=n]
BB8812 -> BB8845 [tailport=s, headport=n, color=gray]
BB8813 [shape=record label="{29301: read-variable['topLevelTypes',v42,-]|29302: read-property[v42,'topDrag',v8]|29303: \<variable-non-null-undef\>['topLevelTypes']|29304: ==[v7,v8,v9]|29305: if[v9](true-block:8821,false-block:8814)}" ] 
BB8813 -> BB8821 [tailport=s, headport=n, headlabel="      8821"]
BB8813 -> BB8814 [tailport=s, headport=n, headlabel="      8814"]
BB8813 -> BB8845 [tailport=s, headport=n, color=gray]
BB8814 [shape=record label="{29306: read-variable['topLevelTypes',v43,-]|29307: read-property[v43,'topDragEnd',v8]|29308: \<variable-non-null-undef\>['topLevelTypes']|29309: ==[v7,v8,v9]|29310: if[v9](true-block:8821,false-block:8815)}" ] 
BB8814 -> BB8821 [tailport=s, headport=n]
BB8814 -> BB8815 [tailport=s, headport=n, headlabel="      8815"]
BB8814 -> BB8845 [tailport=s, headport=n, color=gray]
BB8815 [shape=record label="{29311: read-variable['topLevelTypes',v44,-]|29312: read-property[v44,'topDragEnter',v8]|29313: \<variable-non-null-undef\>['topLevelTypes']|29314: ==[v7,v8,v9]|29315: if[v9](true-block:8821,false-block:8816)}" ] 
BB8815 -> BB8821 [tailport=s, headport=n]
BB8815 -> BB8816 [tailport=s, headport=n, headlabel="      8816"]
BB8815 -> BB8845 [tailport=s, headport=n, color=gray]
BB8816 [shape=record label="{29316: read-variable['topLevelTypes',v45,-]|29317: read-property[v45,'topDragExit',v8]|29318: \<variable-non-null-undef\>['topLevelTypes']|29319: ==[v7,v8,v9]|29320: if[v9](true-block:8821,false-block:8817)}" ] 
BB8816 -> BB8821 [tailport=s, headport=n]
BB8816 -> BB8817 [tailport=s, headport=n, headlabel="      8817"]
BB8816 -> BB8845 [tailport=s, headport=n, color=gray]
BB8817 [shape=record label="{29321: read-variable['topLevelTypes',v46,-]|29322: read-property[v46,'topDragLeave',v8]|29323: \<variable-non-null-undef\>['topLevelTypes']|29324: ==[v7,v8,v9]|29325: if[v9](true-block:8821,false-block:8818)}" ] 
BB8817 -> BB8821 [tailport=s, headport=n]
BB8817 -> BB8818 [tailport=s, headport=n, headlabel="      8818"]
BB8817 -> BB8845 [tailport=s, headport=n, color=gray]
BB8818 [shape=record label="{29326: read-variable['topLevelTypes',v47,-]|29327: read-property[v47,'topDragOver',v8]|29328: \<variable-non-null-undef\>['topLevelTypes']|29329: ==[v7,v8,v9]|29330: if[v9](true-block:8821,false-block:8819)}" ] 
BB8818 -> BB8821 [tailport=s, headport=n]
BB8818 -> BB8819 [tailport=s, headport=n, headlabel="      8819"]
BB8818 -> BB8845 [tailport=s, headport=n, color=gray]
BB8819 [shape=record label="{29331: read-variable['topLevelTypes',v48,-]|29332: read-property[v48,'topDragStart',v8]|29333: \<variable-non-null-undef\>['topLevelTypes']|29334: ==[v7,v8,v9]|29335: if[v9](true-block:8821,false-block:8820)}" ] 
BB8819 -> BB8821 [tailport=s, headport=n]
BB8819 -> BB8820 [tailport=s, headport=n, headlabel="      8820"]
BB8819 -> BB8845 [tailport=s, headport=n, color=gray]
BB8820 [shape=record label="{29336: read-variable['topLevelTypes',v49,-]|29337: read-property[v49,'topDrop',v8]|29338: \<variable-non-null-undef\>['topLevelTypes']|29339: ==[v7,v8,v9]|29340: if[v9](true-block:8821,false-block:8822)}" ] 
BB8820 -> BB8821 [tailport=s, headport=n]
BB8820 -> BB8822 [tailport=s, headport=n, headlabel="      8822"]
BB8820 -> BB8845 [tailport=s, headport=n, color=gray]
BB8821 [shape=record label="{29341: read-variable['SyntheticDragEvent',v50,-]|29342: write-variable[v50,'EventConstructor']*}" ] 
BB8821 -> BB8785 [tailport=s, headport=n]
BB8821 -> BB8845 [tailport=s, headport=n, color=gray]
BB8822 [shape=record label="{29343: read-variable['topLevelTypes',v51,-]|29344: read-property[v51,'topTouchCancel',v8]|29345: \<variable-non-null-undef\>['topLevelTypes']|29346: ==[v7,v8,v9]|29347: if[v9](true-block:8826,false-block:8823)}" ] 
BB8822 -> BB8826 [tailport=s, headport=n, headlabel="      8826"]
BB8822 -> BB8823 [tailport=s, headport=n, headlabel="      8823"]
BB8822 -> BB8845 [tailport=s, headport=n, color=gray]
BB8823 [shape=record label="{29348: read-variable['topLevelTypes',v52,-]|29349: read-property[v52,'topTouchEnd',v8]|29350: \<variable-non-null-undef\>['topLevelTypes']|29351: ==[v7,v8,v9]|29352: if[v9](true-block:8826,false-block:8824)}" ] 
BB8823 -> BB8826 [tailport=s, headport=n]
BB8823 -> BB8824 [tailport=s, headport=n, headlabel="      8824"]
BB8823 -> BB8845 [tailport=s, headport=n, color=gray]
BB8824 [shape=record label="{29353: read-variable['topLevelTypes',v53,-]|29354: read-property[v53,'topTouchMove',v8]|29355: \<variable-non-null-undef\>['topLevelTypes']|29356: ==[v7,v8,v9]|29357: if[v9](true-block:8826,false-block:8825)}" ] 
BB8824 -> BB8826 [tailport=s, headport=n]
BB8824 -> BB8825 [tailport=s, headport=n, headlabel="      8825"]
BB8824 -> BB8845 [tailport=s, headport=n, color=gray]
BB8825 [shape=record label="{29358: read-variable['topLevelTypes',v54,-]|29359: read-property[v54,'topTouchStart',v8]|29360: \<variable-non-null-undef\>['topLevelTypes']|29361: ==[v7,v8,v9]|29362: if[v9](true-block:8826,false-block:8827)}" ] 
BB8825 -> BB8826 [tailport=s, headport=n]
BB8825 -> BB8827 [tailport=s, headport=n, headlabel="      8827"]
BB8825 -> BB8845 [tailport=s, headport=n, color=gray]
BB8826 [shape=record label="{29363: read-variable['SyntheticTouchEvent',v55,-]|29364: write-variable[v55,'EventConstructor']*}" ] 
BB8826 -> BB8785 [tailport=s, headport=n]
BB8826 -> BB8845 [tailport=s, headport=n, color=gray]
BB8827 [shape=record label="{29365: read-variable['topLevelTypes',v56,-]|29366: read-property[v56,'topScroll',v8]|29367: \<variable-non-null-undef\>['topLevelTypes']|29368: ==[v7,v8,v9]|29369: if[v9](true-block:8828,false-block:8829)}" ] 
BB8827 -> BB8828 [tailport=s, headport=n, headlabel="      8828"]
BB8827 -> BB8829 [tailport=s, headport=n, headlabel="      8829"]
BB8827 -> BB8845 [tailport=s, headport=n, color=gray]
BB8828 [shape=record label="{29370: read-variable['SyntheticUIEvent',v57,-]|29371: write-variable[v57,'EventConstructor']*}" ] 
BB8828 -> BB8785 [tailport=s, headport=n]
BB8828 -> BB8845 [tailport=s, headport=n, color=gray]
BB8829 [shape=record label="{29372: read-variable['topLevelTypes',v58,-]|29373: read-property[v58,'topWheel',v8]|29374: \<variable-non-null-undef\>['topLevelTypes']|29375: ==[v7,v8,v9]|29376: if[v9](true-block:8830,false-block:8831)}" ] 
BB8829 -> BB8830 [tailport=s, headport=n, headlabel="      8830"]
BB8829 -> BB8831 [tailport=s, headport=n, headlabel="      8831"]
BB8829 -> BB8845 [tailport=s, headport=n, color=gray]
BB8830 [shape=record label="{29377: read-variable['SyntheticWheelEvent',v59,-]|29378: write-variable[v59,'EventConstructor']*}" ] 
BB8830 -> BB8785 [tailport=s, headport=n]
BB8830 -> BB8845 [tailport=s, headport=n, color=gray]
BB8831 [shape=record label="{29379: read-variable['topLevelTypes',v60,-]|29380: read-property[v60,'topCopy',v8]|29381: \<variable-non-null-undef\>['topLevelTypes']|29382: ==[v7,v8,v9]|29383: if[v9](true-block:8834,false-block:8832)}" ] 
BB8831 -> BB8834 [tailport=s, headport=n, headlabel="      8834"]
BB8831 -> BB8832 [tailport=s, headport=n, headlabel="      8832"]
BB8831 -> BB8845 [tailport=s, headport=n, color=gray]
BB8832 [shape=record label="{29384: read-variable['topLevelTypes',v61,-]|29385: read-property[v61,'topCut',v8]|29386: \<variable-non-null-undef\>['topLevelTypes']|29387: ==[v7,v8,v9]|29388: if[v9](true-block:8834,false-block:8833)}" ] 
BB8832 -> BB8834 [tailport=s, headport=n]
BB8832 -> BB8833 [tailport=s, headport=n, headlabel="      8833"]
BB8832 -> BB8845 [tailport=s, headport=n, color=gray]
BB8833 [shape=record label="{29389: read-variable['topLevelTypes',v62,-]|29390: read-property[v62,'topPaste',v8]|29391: \<variable-non-null-undef\>['topLevelTypes']|29392: ==[v7,v8,v9]|29393: if[v9](true-block:8834,false-block:8785)}" ] 
BB8833 -> BB8834 [tailport=s, headport=n]
BB8833 -> BB8785 [tailport=s, headport=n]
BB8833 -> BB8845 [tailport=s, headport=n, color=gray]
BB8834 [shape=record label="{29394: read-variable['SyntheticClipboardEvent',v63,-]|29395: write-variable[v63,'EventConstructor']*}" ] 
BB8834 -> BB8785 [tailport=s, headport=n]
BB8834 -> BB8845 [tailport=s, headport=n, color=gray]
BB8835 [shape=record label="{29396: read-variable['invariant',v14,v13]|29397: read-variable['EventConstructor',v15,-]|29398: constant[\"SimpleEventPlugin: Unhandled event type, `%s`.\",v16]|29399: read-variable['topLevelType',v17,-]}" ] 
BB8835 -> BB8837 [tailport=s, headport=n, headlabel="      8837"]
BB8835 -> BB8845 [tailport=s, headport=n, color=gray]
BB8836 [shape=record label="{29400: read-variable['invariant',v14,v13]|29401: read-variable['EventConstructor',v15,-]}" ] 
BB8836 -> BB8838 [tailport=s, headport=n, headlabel="      8838"]
BB8836 -> BB8845 [tailport=s, headport=n, color=gray]
BB8837 [shape=record label="{29402: call-invariant [v13,v14,v15,v16,v17,-]}" ] 
BB8837 -> BB8839 [tailport=s, headport=n, headlabel="      8839"]
BB8837 -> BB8845 [tailport=s, headport=n, color=gray]
BB8838 [shape=record label="{29403: call-invariant [v13,v14,v15,-]}" ] 
BB8838 -> BB8839 [tailport=s, headport=n]
BB8838 -> BB8845 [tailport=s, headport=n, color=gray]
BB8839 [shape=record label="{29404: read-variable['EventConstructor',v15,-]|29405: read-property[v15,'getPooled',-]|29406: \<variable-non-null-undef\>['EventConstructor']|29407: read-variable['dispatchConfig',v16,-]|29408: read-variable['topLevelTargetID',v17,-]|29409: read-variable['nativeEvent',v18,-]}" ] 
BB8839 -> BB8840 [tailport=s, headport=n, headlabel="      8840"]
BB8839 -> BB8845 [tailport=s, headport=n, color=gray]
BB8840 [shape=record label="{29410: call-EventConstructor.getPooled [v15,'getPooled',v16,v17,v18,v13]}" ] 
BB8840 -> BB8841 [tailport=s, headport=n, headlabel="      8841"]
BB8840 -> BB8845 [tailport=s, headport=n, color=gray]
BB8841 [shape=record label="{29411: write-variable[v13,'event']*|29412: read-variable['EventPropagators',v20,-]|29413: read-property[v20,'accumulateTwoPhaseDispatches',-]|29414: \<variable-non-null-undef\>['EventPropagators']|29415: read-variable['event',v21,-]}" ] 
BB8841 -> BB8842 [tailport=s, headport=n, headlabel="      8842"]
BB8841 -> BB8845 [tailport=s, headport=n, color=gray]
BB8842 [shape=record label="{29416: call-EventPropagators.accumulateTwoPhaseDispatches [v20,'accumulateTwoPhaseDispatches',v21,-]*}" ] 
BB8842 -> BB8843 [tailport=s, headport=n, headlabel="      8843"]
BB8842 -> BB8845 [tailport=s, headport=n, color=gray]
BB8843 [shape=record label="{29417: read-variable['event',v1,-]}" ] 
BB8843 -> BB8844 [tailport=s, headport=n]
BB8843 -> BB8845 [tailport=s, headport=n, color=gray]
BB8844 [shape=record label="{29418: return[v1]}" ] 
BB8845 [shape=record label="{29419: exceptional-return}" ] 
//#$~ 15823
}
