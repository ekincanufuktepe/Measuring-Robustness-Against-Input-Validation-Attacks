digraph {
rankdir="TD"
BB_entry120[shape=none,label=""];
BB_entry120 -> BB1592 [tailport=s, headport=n, headlabel="    1592"]
BB1592 [shape=record label="{5116: constant[undefined,v1]|5117: vardecl['from']|5118: vardecl['to']|5119: function-decl[function checkCycle ( vertex path ),-]}" ] 
BB1592 -> BB1593 [tailport=s, headport=n, headlabel="      1593"]
BB1593 [shape=record label="{5120: read-variable['fromName',v3,-]|5121: ![v3,v2]|5122: if[v2](true-block:1596,false-block:1594)}" ] 
BB1593 -> BB1596 [tailport=s, headport=n, headlabel="      1596"]
BB1593 -> BB1594 [tailport=s, headport=n, headlabel="      1594"]
BB1593 -> BB1611 [tailport=s, headport=n, color=gray, headlabel="      1611"]
BB1594 [shape=record label="{5123: read-variable['toName',v3,-]|5124: ![v3,v2]|5125: if[v2](true-block:1596,false-block:1595)}" ] 
BB1594 -> BB1596 [tailport=s, headport=n]
BB1594 -> BB1595 [tailport=s, headport=n, headlabel="      1595"]
BB1594 -> BB1611 [tailport=s, headport=n, color=gray]
BB1595 [shape=record label="{5126: read-variable['fromName',v3,-]|5127: read-variable['toName',v4,-]|5128: ===[v3,v4,v2]}" ] 
BB1595 -> BB1596 [tailport=s, headport=n]
BB1595 -> BB1611 [tailport=s, headport=n, color=gray]
BB1596 [shape=record label="{5129: if[v2](true-block:1597,false-block:1598)}" ] 
BB1596 -> BB1597 [tailport=s, headport=n, headlabel="      1597"]
BB1596 -> BB1598 [tailport=s, headport=n, headlabel="      1598"]
BB1597 [shape=record label="{5130: constant[undefined,v1]}" ] 
BB1597 -> BB1610 [tailport=s, headport=n, headlabel="      1610"]
BB1598 [shape=record label="{5131: read-variable['this',v5,-]|5132: read-property[v5,'add',-]|5133: read-variable['fromName',v6,-]}" ] 
BB1598 -> BB1599 [tailport=s, headport=n, headlabel="      1599"]
BB1598 -> BB1611 [tailport=s, headport=n, color=gray]
BB1599 [shape=record label="{5134: call-this.add [v5,'add',v6,v3]}" ] 
BB1599 -> BB1600 [tailport=s, headport=n, headlabel="      1600"]
BB1599 -> BB1611 [tailport=s, headport=n, color=gray]
BB1600 [shape=record label="{5135: write-variable[v3,'from']*|5136: read-variable['this',v9,-]|5137: read-property[v9,'add',-]|5138: read-variable['toName',v10,-]}" ] 
BB1600 -> BB1601 [tailport=s, headport=n, headlabel="      1601"]
BB1600 -> BB1611 [tailport=s, headport=n, color=gray]
BB1601 [shape=record label="{5139: call-this.add [v9,'add',v10,v7]}" ] 
BB1601 -> BB1602 [tailport=s, headport=n, headlabel="      1602"]
BB1601 -> BB1611 [tailport=s, headport=n, color=gray]
BB1602 [shape=record label="{5140: write-variable[v7,'to']*|5141: read-variable['to',v14,-]|5142: read-property[v14,'incoming',v13]|5143: \<variable-non-null-undef\>['to']|5144: read-property[v13,'hasOwnProperty',-]|5145: \<property-non-null-undef\>[v14,'incoming']|5146: read-variable['fromName',v15,-]}" ] 
BB1602 -> BB1603 [tailport=s, headport=n, headlabel="      1603"]
BB1602 -> BB1611 [tailport=s, headport=n, color=gray]
BB1603 [shape=record label="{5147: call-to.incoming.hasOwnProperty [v13,'hasOwnProperty',v15,v11]}" ] 
BB1603 -> BB1604 [tailport=s, headport=n, headlabel="      1604"]
BB1603 -> BB1611 [tailport=s, headport=n, color=gray]
BB1604 [shape=record label="{5148: if[v11](true-block:1605,false-block:1606)}" ] 
BB1604 -> BB1605 [tailport=s, headport=n, headlabel="      1605"]
BB1604 -> BB1606 [tailport=s, headport=n, headlabel="      1606"]
BB1605 [shape=record label="{5149: constant[undefined,v1]}" ] 
BB1605 -> BB1610 [tailport=s, headport=n]
BB1606 [shape=record label="{5150: read-variable['visit',v17,v16]|5151: read-variable['from',v18,-]|5152: read-variable['checkCycle',v19,-]}" ] 
BB1606 -> BB1607 [tailport=s, headport=n, headlabel="      1607"]
BB1606 -> BB1611 [tailport=s, headport=n, color=gray]
BB1607 [shape=record label="{5153: call-visit [v16,v17,v18,v19,-]*}" ] 
BB1607 -> BB1608 [tailport=s, headport=n, headlabel="      1608"]
BB1607 -> BB1611 [tailport=s, headport=n, color=gray]
BB1608 [shape=record label="{5154: read-variable['from',v21,-]|5155: constant[true,v20]|5156: write-property[v21,'hasOutgoing',v20]|5157: \<variable-non-null-undef\>['from']*|5158: read-variable['to',v25,-]|5159: read-property[v25,'incoming',v23]|5160: \<variable-non-null-undef\>['to']|5161: read-variable['fromName',v24,-]|5162: read-variable['from',v22,-]|5163: write-property[v23,v24,v22]|5164: \<property-non-null-undef\>[v25,'incoming']*|5165: read-variable['to',v28,-]|5166: read-property[v28,'incomingNames',v27]|5167: \<variable-non-null-undef\>['to']|5168: read-property[v27,'push',-]|5169: \<property-non-null-undef\>[v28,'incomingNames']|5170: read-variable['fromName',v29,-]}" ] 
BB1608 -> BB1609 [tailport=s, headport=n, headlabel="      1609"]
BB1608 -> BB1611 [tailport=s, headport=n, color=gray]
BB1609 [shape=record label="{5171: call-to.incomingNames.push [v27,'push',v29,-]*}" ] 
BB1609 -> BB1610 [tailport=s, headport=n]
BB1609 -> BB1611 [tailport=s, headport=n, color=gray]
BB1610 [shape=record label="{5172: return[v1]}" ] 
BB1611 [shape=record label="{5173: exceptional-return}" ] 
//#$~ 2126
}
