digraph {
rankdir="TD"
BB_entry30[shape=none,label=""];
BB_entry30 -> BB286 [tailport=s, headport=n, headlabel="    286"]
BB286 [shape=record label="{943: constant[undefined,v1]|944: vardecl['fileName']|945: vardecl['moduleName']|946: vardecl['_this']}" ] 
BB286 -> BB287 [tailport=s, headport=n, headlabel="      287"]
BB287 [shape=record label="{947: read-variable['this',v2,-]|948: write-variable[v2,'_this']*|949: read-variable['name',v4,-]|950: read-variable['this',v7,-]|951: read-property[v7,'settings',v6]|952: read-property[v6,'controllerSuffix',v5]|953: \<property-non-null-undef\>[v7,'settings']|954: +[v4,v5,v3]|955: write-variable[v3,'fileName']*|956: read-variable['this',v12,-]|957: read-property[v12,'settings',v11]|958: read-property[v11,'controllerPath',v9]|959: \<property-non-null-undef\>[v12,'settings']|960: read-variable['fileName',v10,-]|961: +[v9,v10,v8]|962: write-variable[v8,'moduleName']*|963: typeof['define',v15]|964: constant[\"undefined\",v16]|965: !==[v15,v16,v14]|966: if[v14](true-block:288,false-block:289)}" ] 
BB287 -> BB289 [tailport=s, headport=n, headlabel="      289"]
BB287 -> BB288 [tailport=s, headport=n, headlabel="      288"]
BB287 -> BB300 [tailport=s, headport=n, color=gray, headlabel="      300"]
BB288 [shape=record label="{967: read-variable['define',v17,-]|968: constant[null,v18]|969: !==[v17,v18,v14]}" ] 
BB288 -> BB289 [tailport=s, headport=n]
BB288 -> BB300 [tailport=s, headport=n, color=gray]
BB289 [shape=record label="{970: if[v14](true-block:290,false-block:291)}" ] 
BB289 -> BB290 [tailport=s, headport=n, headlabel="      290"]
BB289 -> BB291 [tailport=s, headport=n, headlabel="      291"]
BB290 [shape=record label="{971: read-variable['define',v17,-]|972: read-property[v17,'amd',v13]|973: \<variable-non-null-undef\>['define']}" ] 
BB290 -> BB292 [tailport=s, headport=n, headlabel="      292"]
BB290 -> BB300 [tailport=s, headport=n, color=gray]
BB291 [shape=record label="{974: constant[0.0,-]|975: constant[undefined,v13]}" ] 
BB291 -> BB292 [tailport=s, headport=n]
BB292 [shape=record label="{976: if[v13](true-block:293,false-block:294)}" ] 
BB292 -> BB293 [tailport=s, headport=n, headlabel="      293"]
BB292 -> BB294 [tailport=s, headport=n, headlabel="      294"]
BB293 [shape=record label="{977: read-variable['require',v18,v17]|978: read-variable['Array',v20,-]|979: read-variable['moduleName',v21,-]}" ] 
BB293 -> BB295 [tailport=s, headport=n, headlabel="      295"]
BB293 -> BB300 [tailport=s, headport=n, color=gray]
BB294 [shape=record label="{980: read-variable['setTimeout',v18,v17]|981: function-expr[function ( ),v19]|982: constant[0.0,v20]}" ] 
BB294 -> BB298 [tailport=s, headport=n, headlabel="      298"]
BB294 -> BB300 [tailport=s, headport=n, color=gray]
BB295 [shape=record label="{983: construct [-,v20,v21,v19]}" ] 
BB295 -> BB296 [tailport=s, headport=n, headlabel="      296"]
BB295 -> BB300 [tailport=s, headport=n, color=gray]
BB296 [shape=record label="{984: read-variable['handler',v22,-]}" ] 
BB296 -> BB297 [tailport=s, headport=n, headlabel="      297"]
BB296 -> BB300 [tailport=s, headport=n, color=gray]
BB297 [shape=record label="{985: call-require [v17,v18,v19,v22,v1]}" ] 
BB297 -> BB299 [tailport=s, headport=n, headlabel="      299"]
BB297 -> BB300 [tailport=s, headport=n, color=gray]
BB298 [shape=record label="{986: call-setTimeout [v17,v18,v19,v20,v1]}" ] 
BB298 -> BB299 [tailport=s, headport=n]
BB298 -> BB300 [tailport=s, headport=n, color=gray]
BB299 [shape=record label="{987: return[v1]}" ] 
BB300 [shape=record label="{988: exceptional-return}" ] 
//#$~ 315
}
