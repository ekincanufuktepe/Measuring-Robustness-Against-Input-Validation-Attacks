digraph {
rankdir="TD"
BB_entry616[shape=none,label=""];
BB_entry616 -> BB8387 [tailport=s, headport=n, headlabel="    8387"]
BB8387 [shape=record label="{27788: constant[undefined,v1]|27789: vardecl['internalInstance']|27790: vardecl['element']}" ] 
BB8387 -> BB8388 [tailport=s, headport=n, headlabel="      8388"]
BB8388 [shape=record label="{27791: read-variable['getInternalInstanceReadyForUpdate',v4,v3]|27792: read-variable['publicInstance',v5,-]|27793: constant[\"replaceProps\",v6]}" ] 
BB8388 -> BB8389 [tailport=s, headport=n, headlabel="      8389"]
BB8388 -> BB8404 [tailport=s, headport=n, color=gray, headlabel="      8404"]
BB8389 [shape=record label="{27794: call-getInternalInstanceReadyForUpdate [v3,v4,v5,v6,v2]}" ] 
BB8389 -> BB8390 [tailport=s, headport=n, headlabel="      8390"]
BB8389 -> BB8404 [tailport=s, headport=n, color=gray]
BB8390 [shape=record label="{27795: write-variable[v2,'internalInstance']*|27796: read-variable['internalInstance',v8,-]|27797: ![v8,v7]|27798: if[v7](true-block:8391,false-block:8392)}" ] 
BB8390 -> BB8391 [tailport=s, headport=n, headlabel="      8391"]
BB8390 -> BB8392 [tailport=s, headport=n, headlabel="      8392"]
BB8390 -> BB8404 [tailport=s, headport=n, color=gray]
BB8391 [shape=record label="{27799: constant[undefined,v1]}" ] 
BB8391 -> BB8403 [tailport=s, headport=n, headlabel="      8403"]
BB8392 [shape=record label="{27800: constant[\"production\",v10]|27801: constant[\"development\",v11]|27802: !==[v10,v11,v9]|27803: if[v9](true-block:8393,false-block:8394)}" ] 
BB8392 -> BB8393 [tailport=s, headport=n, headlabel="      8393"]
BB8392 -> BB8394 [tailport=s, headport=n, headlabel="      8394"]
BB8392 -> BB8404 [tailport=s, headport=n, color=gray]
BB8393 [shape=record label="{27804: read-variable['invariant',v13,v12]|27805: read-variable['internalInstance',v15,-]|27806: read-property[v15,'_isTopLevel',v14]|27807: \<variable-non-null-undef\>['internalInstance']|27808: constant[\"replaceProps(...): You called `replaceProps` on a \",v23]|27809: constant[\"component with a parent. This is an anti-pattern since props will \",v24]|27810: +[v23,v24,v21]|27811: constant[\"get reactively updated when rendered. Instead, change the owner's \",v22]|27812: +[v21,v22,v19]|27813: constant[\"`render` method to pass the correct value as props to the component \",v20]|27814: +[v19,v20,v17]|27815: constant[\"where it is created.\",v18]|27816: +[v17,v18,v16]}" ] 
BB8393 -> BB8395 [tailport=s, headport=n, headlabel="      8395"]
BB8393 -> BB8404 [tailport=s, headport=n, color=gray]
BB8394 [shape=record label="{27817: read-variable['invariant',v13,v12]|27818: read-variable['internalInstance',v15,-]|27819: read-property[v15,'_isTopLevel',v14]|27820: \<variable-non-null-undef\>['internalInstance']}" ] 
BB8394 -> BB8396 [tailport=s, headport=n, headlabel="      8396"]
BB8394 -> BB8404 [tailport=s, headport=n, color=gray]
BB8395 [shape=record label="{27821: call-invariant [v12,v13,v14,v16,-]}" ] 
BB8395 -> BB8397 [tailport=s, headport=n, headlabel="      8397"]
BB8395 -> BB8404 [tailport=s, headport=n, color=gray]
BB8396 [shape=record label="{27822: call-invariant [v12,v13,v14,-]}" ] 
BB8396 -> BB8397 [tailport=s, headport=n]
BB8396 -> BB8404 [tailport=s, headport=n, color=gray]
BB8397 [shape=record label="{27823: read-variable['internalInstance',v13,-]|27824: read-property[v13,'_pendingElement',v12]|27825: \<variable-non-null-undef\>['internalInstance']|27826: if[v12](true-block:8399,false-block:8398)}" ] 
BB8397 -> BB8399 [tailport=s, headport=n, headlabel="      8399"]
BB8397 -> BB8398 [tailport=s, headport=n, headlabel="      8398"]
BB8397 -> BB8404 [tailport=s, headport=n, color=gray]
BB8398 [shape=record label="{27827: read-variable['internalInstance',v13,-]|27828: read-property[v13,'_currentElement',v12]|27829: \<variable-non-null-undef\>['internalInstance']}" ] 
BB8398 -> BB8399 [tailport=s, headport=n]
BB8398 -> BB8404 [tailport=s, headport=n, color=gray]
BB8399 [shape=record label="{27830: write-variable[v12,'element']*|27831: read-variable['internalInstance',v14,-]|27832: read-variable['ReactElement',v16,-]|27833: read-property[v16,'cloneAndReplaceProps',-]|27834: \<variable-non-null-undef\>['ReactElement']|27835: read-variable['element',v17,-]|27836: read-variable['props',v18,-]}" ] 
BB8399 -> BB8400 [tailport=s, headport=n, headlabel="      8400"]
BB8399 -> BB8404 [tailport=s, headport=n, color=gray]
BB8400 [shape=record label="{27837: call-ReactElement.cloneAndReplaceProps [v16,'cloneAndReplaceProps',v17,v18,v13]}" ] 
BB8400 -> BB8401 [tailport=s, headport=n, headlabel="      8401"]
BB8400 -> BB8404 [tailport=s, headport=n, color=gray]
BB8401 [shape=record label="{27838: write-property[v14,'_pendingElement',v13]|27839: \<variable-non-null-undef\>['internalInstance']*|27840: read-variable['enqueueUpdate',v20,v19]|27841: read-variable['internalInstance',v21,-]}" ] 
BB8401 -> BB8402 [tailport=s, headport=n, headlabel="      8402"]
BB8401 -> BB8404 [tailport=s, headport=n, color=gray]
BB8402 [shape=record label="{27842: call-enqueueUpdate [v19,v20,v21,-]*}" ] 
BB8402 -> BB8403 [tailport=s, headport=n]
BB8402 -> BB8404 [tailport=s, headport=n, color=gray]
BB8403 [shape=record label="{27843: return[v1]}" ] 
BB8404 [shape=record label="{27844: exceptional-return}" ] 
//#$~ 14756
}
