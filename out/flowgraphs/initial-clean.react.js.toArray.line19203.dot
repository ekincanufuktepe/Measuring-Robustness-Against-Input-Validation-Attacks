digraph {
rankdir="TD"
BB_entry808[shape=none,label=""];
BB_entry808 -> BB10679 [tailport=s, headport=n, headlabel="    10679"]
BB10679 [shape=record label="{35055: constant[undefined,v1]|35056: vardecl['length']|35057: vardecl['ret']|35058: vardecl['ii']}" ] 
BB10679 -> BB10680 [tailport=s, headport=n, headlabel="      10680"]
BB10680 [shape=record label="{35059: read-variable['obj',v3,-]|35060: read-property[v3,'length',v2]|35061: \<variable-non-null-undef\>['obj']|35062: write-variable[v2,'length']*|35063: constant[\"production\",v5]|35064: constant[\"development\",v6]|35065: !==[v5,v6,v4]|35066: if[v4](true-block:10681,false-block:10682)}" ] 
BB10680 -> BB10681 [tailport=s, headport=n, headlabel="      10681"]
BB10680 -> BB10682 [tailport=s, headport=n, headlabel="      10682"]
BB10680 -> BB10720 [tailport=s, headport=n, color=gray, headlabel="      10720"]
BB10681 [shape=record label="{35067: read-variable['invariant',v8,v7]|35068: read-variable['Array',v12,-]|35069: read-property[v12,'isArray',-]|35070: \<variable-non-null-undef\>['Array']|35071: read-variable['obj',v13,-]}" ] 
BB10681 -> BB10683 [tailport=s, headport=n, headlabel="      10683"]
BB10681 -> BB10720 [tailport=s, headport=n, color=gray]
BB10682 [shape=record label="{35072: read-variable['invariant',v8,v7]|35073: read-variable['Array',v12,-]|35074: read-property[v12,'isArray',-]|35075: \<variable-non-null-undef\>['Array']|35076: read-variable['obj',v13,-]}" ] 
BB10682 -> BB10689 [tailport=s, headport=n, headlabel="      10689"]
BB10682 -> BB10720 [tailport=s, headport=n, color=gray]
BB10683 [shape=record label="{35077: call-Array.isArray [v12,'isArray',v13,v10]}" ] 
BB10683 -> BB10684 [tailport=s, headport=n, headlabel="      10684"]
BB10683 -> BB10720 [tailport=s, headport=n, color=gray]
BB10684 [shape=record label="{35078: ![v10,v9]|35079: if[v9](true-block:10685,false-block:10687)}" ] 
BB10684 -> BB10687 [tailport=s, headport=n, headlabel="      10687"]
BB10684 -> BB10685 [tailport=s, headport=n, headlabel="      10685"]
BB10684 -> BB10720 [tailport=s, headport=n, color=gray]
BB10685 [shape=record label="{35080: typeof['obj',v14]|35081: constant[\"object\",v15]|35082: ===[v14,v15,v9]|35083: if[v9](true-block:10687,false-block:10686)}" ] 
BB10685 -> BB10687 [tailport=s, headport=n]
BB10685 -> BB10686 [tailport=s, headport=n, headlabel="      10686"]
BB10685 -> BB10720 [tailport=s, headport=n, color=gray]
BB10686 [shape=record label="{35084: typeof['obj',v14]|35085: constant[\"function\",v15]|35086: ===[v14,v15,v9]}" ] 
BB10686 -> BB10687 [tailport=s, headport=n]
BB10686 -> BB10720 [tailport=s, headport=n, color=gray]
BB10687 [shape=record label="{35087: constant[\"toArray: Array-like object expected\",v14]}" ] 
BB10687 -> BB10688 [tailport=s, headport=n, headlabel="      10688"]
BB10688 [shape=record label="{35088: call-invariant [v7,v8,v9,v14,-]}" ] 
BB10688 -> BB10694 [tailport=s, headport=n, headlabel="      10694"]
BB10688 -> BB10720 [tailport=s, headport=n, color=gray]
BB10689 [shape=record label="{35089: call-Array.isArray [v12,'isArray',v13,v10]}" ] 
BB10689 -> BB10690 [tailport=s, headport=n, headlabel="      10690"]
BB10689 -> BB10720 [tailport=s, headport=n, color=gray]
BB10690 [shape=record label="{35090: ![v10,v9]|35091: if[v9](true-block:10691,false-block:10693)}" ] 
BB10690 -> BB10693 [tailport=s, headport=n, headlabel="      10693"]
BB10690 -> BB10691 [tailport=s, headport=n, headlabel="      10691"]
BB10690 -> BB10720 [tailport=s, headport=n, color=gray]
BB10691 [shape=record label="{35092: typeof['obj',v14]|35093: constant[\"object\",v15]|35094: ===[v14,v15,v9]|35095: if[v9](true-block:10693,false-block:10692)}" ] 
BB10691 -> BB10693 [tailport=s, headport=n]
BB10691 -> BB10692 [tailport=s, headport=n, headlabel="      10692"]
BB10691 -> BB10720 [tailport=s, headport=n, color=gray]
BB10692 [shape=record label="{35096: typeof['obj',v14]|35097: constant[\"function\",v15]|35098: ===[v14,v15,v9]}" ] 
BB10692 -> BB10693 [tailport=s, headport=n]
BB10692 -> BB10720 [tailport=s, headport=n, color=gray]
BB10693 [shape=record label="{35099: call-invariant [v7,v8,v9,-]}" ] 
BB10693 -> BB10694 [tailport=s, headport=n]
BB10693 -> BB10720 [tailport=s, headport=n, color=gray]
BB10694 [shape=record label="{35100: constant[\"production\",v8]|35101: constant[\"development\",v9]|35102: !==[v8,v9,v7]|35103: if[v7](true-block:10695,false-block:10696)}" ] 
BB10694 -> BB10695 [tailport=s, headport=n, headlabel="      10695"]
BB10694 -> BB10696 [tailport=s, headport=n, headlabel="      10696"]
BB10694 -> BB10720 [tailport=s, headport=n, color=gray]
BB10695 [shape=record label="{35104: read-variable['invariant',v11,v10]|35105: typeof['length',v13]|35106: constant[\"number\",v14]|35107: ===[v13,v14,v12]|35108: constant[\"toArray: Object needs a length property\",v15]}" ] 
BB10695 -> BB10697 [tailport=s, headport=n, headlabel="      10697"]
BB10695 -> BB10720 [tailport=s, headport=n, color=gray]
BB10696 [shape=record label="{35109: read-variable['invariant',v11,v10]|35110: typeof['length',v13]|35111: constant[\"number\",v14]|35112: ===[v13,v14,v12]}" ] 
BB10696 -> BB10698 [tailport=s, headport=n, headlabel="      10698"]
BB10696 -> BB10720 [tailport=s, headport=n, color=gray]
BB10697 [shape=record label="{35113: call-invariant [v10,v11,v12,v15,-]}" ] 
BB10697 -> BB10699 [tailport=s, headport=n, headlabel="      10699"]
BB10697 -> BB10720 [tailport=s, headport=n, color=gray]
BB10698 [shape=record label="{35114: call-invariant [v10,v11,v12,-]}" ] 
BB10698 -> BB10699 [tailport=s, headport=n]
BB10698 -> BB10720 [tailport=s, headport=n, color=gray]
BB10699 [shape=record label="{35115: constant[\"production\",v11]|35116: constant[\"development\",v12]|35117: !==[v11,v12,v10]|35118: if[v10](true-block:10700,false-block:10701)}" ] 
BB10699 -> BB10700 [tailport=s, headport=n, headlabel="      10700"]
BB10699 -> BB10701 [tailport=s, headport=n, headlabel="      10701"]
BB10699 -> BB10720 [tailport=s, headport=n, color=gray]
BB10700 [shape=record label="{35119: read-variable['invariant',v14,v13]|35120: read-variable['length',v16,-]|35121: constant[0.0,v17]|35122: ===[v16,v17,v15]|35123: if[v15](true-block:10703,false-block:10702)}" ] 
BB10700 -> BB10703 [tailport=s, headport=n, headlabel="      10703"]
BB10700 -> BB10702 [tailport=s, headport=n, headlabel="      10702"]
BB10700 -> BB10720 [tailport=s, headport=n, color=gray]
BB10701 [shape=record label="{35124: read-variable['invariant',v14,v13]|35125: read-variable['length',v16,-]|35126: constant[0.0,v17]|35127: ===[v16,v17,v15]|35128: if[v15](true-block:10706,false-block:10705)}" ] 
BB10701 -> BB10706 [tailport=s, headport=n, headlabel="      10706"]
BB10701 -> BB10705 [tailport=s, headport=n, headlabel="      10705"]
BB10701 -> BB10720 [tailport=s, headport=n, color=gray]
BB10702 [shape=record label="{35129: read-variable['length',v18,-]|35130: constant[1.0,v19]|35131: -[v18,v19,v16]|35132: read-variable['obj',v17,-]|35133: in[v16,v17,v15]}" ] 
BB10702 -> BB10703 [tailport=s, headport=n]
BB10702 -> BB10720 [tailport=s, headport=n, color=gray]
BB10703 [shape=record label="{35134: constant[\"toArray: Object should have keys for indices\",v16]}" ] 
BB10703 -> BB10704 [tailport=s, headport=n, headlabel="      10704"]
BB10704 [shape=record label="{35135: call-invariant [v13,v14,v15,v16,-]}" ] 
BB10704 -> BB10707 [tailport=s, headport=n, headlabel="      10707"]
BB10704 -> BB10720 [tailport=s, headport=n, color=gray]
BB10705 [shape=record label="{35136: read-variable['length',v18,-]|35137: constant[1.0,v19]|35138: -[v18,v19,v16]|35139: read-variable['obj',v17,-]|35140: in[v16,v17,v15]}" ] 
BB10705 -> BB10706 [tailport=s, headport=n]
BB10705 -> BB10720 [tailport=s, headport=n, color=gray]
BB10706 [shape=record label="{35141: call-invariant [v13,v14,v15,-]}" ] 
BB10706 -> BB10707 [tailport=s, headport=n]
BB10706 -> BB10720 [tailport=s, headport=n, color=gray]
BB10707 [shape=record label="{35142: read-variable['obj',v14,-]|35143: read-property[v14,'hasOwnProperty',v13]|35144: \<variable-non-null-undef\>['obj']|35145: if[v13](true-block:10708,false-block:10713)}" ] 
BB10707 -> BB10708 [tailport=s, headport=n, headlabel="      10708"]
BB10707 -> BB10713 [tailport=s, headport=n, headlabel="      10713"]
BB10707 -> BB10720 [tailport=s, headport=n, color=gray]
BB10708 [shape=record label="{35146: read-variable['Array',v18,-]|35147: read-property[v18,'prototype',v17]|35148: \<variable-non-null-undef\>['Array']|35149: read-property[v17,'slice',v16]|35150: \<property-non-null-undef\>[v18,'prototype']|35151: read-property[v16,'call',-]|35152: \<property-non-null-undef\>[v17,'slice']|35153: read-variable['obj',v19,-]}" ] 
BB10708 -> BB10709 [tailport=s, headport=n, headlabel="      10709"]
BB10708 -> BB10710 [tailport=s, headport=n, color=gray, headlabel="      10710"]
BB10709 [shape=record label="{35154: call-Array.prototype.slice.call [v16,'call',v19,v1]}" ] 
BB10709 -> BB10719 [tailport=s, headport=n, headlabel="      10719"]
BB10709 -> BB10710 [tailport=s, headport=n, color=gray]
BB10710 [shape=record label="{35155: catch[e,v15]|35156: begin-with[v15]}" ] 
BB10710 -> BB10711 [tailport=s, headport=n, headlabel="      10711"]
BB10710 -> BB10720 [tailport=s, headport=n, color=gray]
BB10711 [shape=record label="{35157: end-with}" ] 
BB10711 -> BB10713 [tailport=s, headport=n]
BB10712 [shape=record label="{35158: end-with}" ] 
BB10712 -> BB10720 [tailport=s, headport=n]
BB10713 [shape=record label="{35159: read-variable['Array',v17,v16]|35160: read-variable['length',v18,-]}" ] 
BB10713 -> BB10714 [tailport=s, headport=n, headlabel="      10714"]
BB10713 -> BB10720 [tailport=s, headport=n, color=gray]
BB10714 [shape=record label="{35161: call-Array [v16,v17,v18,v15]}" ] 
BB10714 -> BB10715 [tailport=s, headport=n, headlabel="      10715"]
BB10714 -> BB10720 [tailport=s, headport=n, color=gray]
BB10715 [shape=record label="{35162: write-variable[v15,'ret']*|35163: constant[0.0,v20]|35164: write-variable[v20,'ii']*}" ] 
BB10715 -> BB10716 [tailport=s, headport=n, headlabel="      10716"]
BB10716 [shape=record label="{35165: read-variable['ii',v21,-]|35166: read-variable['length',v22,-]|35167: \<[v21,v22,v19]|35168: if[v19](true-block:10717,false-block:10718)}" ] 
BB10716 -> BB10717 [tailport=s, headport=n, headlabel="      10717"]
BB10716 -> BB10718 [tailport=s, headport=n, headlabel="      10718"]
BB10716 -> BB10720 [tailport=s, headport=n, color=gray]
BB10717 [shape=record label="{35169: read-variable['ret',v24,-]|35170: read-variable['ii',v25,-]|35171: read-variable['obj',v26,-]|35172: read-variable['ii',v27,-]|35173: read-property[v26,v27,v23]|35174: \<variable-non-null-undef\>['obj']|35175: write-property[v24,v25,v23]|35176: \<variable-non-null-undef\>['ret']*|35177: constant[1.0,v28]|35178: read-variable['ii',v29,-]|35179: +[v29,v30]|35180: +[v30,v28,v31]|35181: write-variable[v31,'ii']}" ] 
BB10717 -> BB10716 [tailport=s, headport=n]
BB10717 -> BB10720 [tailport=s, headport=n, color=gray]
BB10718 [shape=record label="{35182: read-variable['ret',v1,-]}" ] 
BB10718 -> BB10719 [tailport=s, headport=n]
BB10718 -> BB10720 [tailport=s, headport=n, color=gray]
BB10719 [shape=record label="{35183: return[v1]}" ] 
BB10720 [shape=record label="{35184: exceptional-return}" ] 
//#$~ 19244
}
