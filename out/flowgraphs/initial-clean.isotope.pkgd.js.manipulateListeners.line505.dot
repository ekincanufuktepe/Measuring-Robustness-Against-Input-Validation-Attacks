digraph {
rankdir="TD"
BB_entry36[shape=none,label=""];
BB_entry36 -> BB345 [tailport=s, headport=n, headlabel="    345"]
BB345 [shape=record label="{867: constant[undefined,v1]|868: vardecl['i']|869: vardecl['value']|870: vardecl['single']|871: vardecl['multiple']}" ] 
BB345 -> BB346 [tailport=s, headport=n, headlabel="      346"]
BB346 [shape=record label="{872: read-variable['remove',v4,v2]|873: if[v4](true-block:347,false-block:348)}" ] 
BB346 -> BB347 [tailport=s, headport=n, headlabel="      347"]
BB346 -> BB348 [tailport=s, headport=n, headlabel="      348"]
BB346 -> BB375 [tailport=s, headport=n, color=gray, headlabel="      375"]
BB347 [shape=record label="{874: read-variable['this',v5,-]|875: read-property[v5,'removeListener',v3]}" ] 
BB347 -> BB349 [tailport=s, headport=n, headlabel="      349"]
BB347 -> BB375 [tailport=s, headport=n, color=gray]
BB348 [shape=record label="{876: read-variable['this',v5,-]|877: read-property[v5,'addListener',v3]}" ] 
BB348 -> BB349 [tailport=s, headport=n]
BB348 -> BB375 [tailport=s, headport=n, color=gray]
BB349 [shape=record label="{878: write-variable[v3,'single']*|879: read-variable['remove',v6,v2]|880: if[v6](true-block:350,false-block:351)}" ] 
BB349 -> BB350 [tailport=s, headport=n, headlabel="      350"]
BB349 -> BB351 [tailport=s, headport=n, headlabel="      351"]
BB349 -> BB375 [tailport=s, headport=n, color=gray]
BB350 [shape=record label="{881: read-variable['this',v7,-]|882: read-property[v7,'removeListeners',v5]}" ] 
BB350 -> BB352 [tailport=s, headport=n, headlabel="      352"]
BB350 -> BB375 [tailport=s, headport=n, color=gray]
BB351 [shape=record label="{883: read-variable['this',v7,-]|884: read-property[v7,'addListeners',v5]}" ] 
BB351 -> BB352 [tailport=s, headport=n]
BB351 -> BB375 [tailport=s, headport=n, color=gray]
BB352 [shape=record label="{885: write-variable[v5,'multiple']*|886: typeof['evt',v8]|887: constant[\"object\",v9]|888: ===[v8,v9,v7]|889: if[v7](true-block:353,false-block:354)}" ] 
BB352 -> BB354 [tailport=s, headport=n, headlabel="      354"]
BB352 -> BB353 [tailport=s, headport=n, headlabel="      353"]
BB352 -> BB375 [tailport=s, headport=n, color=gray]
BB353 [shape=record label="{890: read-variable['evt',v11,v2]|891: read-variable['RegExp',v12,v2]|892: instanceof[v11,v12,v10]|893: ![v10,v7]}" ] 
BB353 -> BB354 [tailport=s, headport=n]
BB353 -> BB375 [tailport=s, headport=n, color=gray]
BB354 [shape=record label="{894: if[v7](true-block:355,false-block:356)}" ] 
BB354 -> BB355 [tailport=s, headport=n, headlabel="      355"]
BB354 -> BB356 [tailport=s, headport=n, headlabel="      356"]
BB355 [shape=record label="{895: read-variable['evt',v11,v2]}" ] 
BB355 -> BB357 [tailport=s, headport=n, headlabel="      357"]
BB355 -> BB375 [tailport=s, headport=n, color=gray]
BB356 [shape=record label="{896: read-variable['listeners',v11,v2]|897: read-property[v11,'length',v10]|898: \<variable-non-null-undef\>['listeners']|899: write-variable[v10,'i']*}" ] 
BB356 -> BB370 [tailport=s, headport=n, headlabel="      370"]
BB356 -> BB375 [tailport=s, headport=n, color=gray]
BB357 [shape=record label="{900: begin-for-in[v11,v12]}" ] 
BB357 -> BB358 [tailport=s, headport=n, headlabel="      358"]
BB357 -> BB375 [tailport=s, headport=n, color=gray]
BB358 [shape=record label="{901: has-next[v12,v13]|902: if[v13](true-block:359,false-block:373)}" ] 
BB358 -> BB359 [tailport=s, headport=n, headlabel="      359"]
BB358 -> BB373 [tailport=s, headport=n, headlabel="      373"]
BB359 [shape=record label="{903: next-property[v12,v14]|904: write-variable[v14,'i']|905: read-variable['evt',v17,-]|906: read-property[v17,'hasOwnProperty',-]|907: \<variable-non-null-undef\>['evt']|908: read-variable['i',v18,v2]}" ] 
BB359 -> BB360 [tailport=s, headport=n, headlabel="      360"]
BB359 -> BB375 [tailport=s, headport=n, color=gray]
BB360 [shape=record label="{909: call-evt.hasOwnProperty [v17,'hasOwnProperty',v18,v15]}" ] 
BB360 -> BB361 [tailport=s, headport=n, headlabel="      361"]
BB360 -> BB375 [tailport=s, headport=n, color=gray]
BB361 [shape=record label="{910: if[v15](true-block:362,false-block:363)}" ] 
BB361 -> BB363 [tailport=s, headport=n, headlabel="      363"]
BB361 -> BB362 [tailport=s, headport=n, headlabel="      362"]
BB362 [shape=record label="{911: read-variable['evt',v19,v2]|912: read-variable['i',v20,v2]|913: read-property[v19,v20,v15]|914: \<variable-non-null-undef\>['evt']|915: write-variable[v15,'value']}" ] 
BB362 -> BB363 [tailport=s, headport=n]
BB362 -> BB375 [tailport=s, headport=n, color=gray]
BB363 [shape=record label="{916: if[v15](true-block:364,false-block:369)}" ] 
BB363 -> BB364 [tailport=s, headport=n, headlabel="      364"]
BB363 -> BB369 [tailport=s, headport=n, headlabel="      369"]
BB364 [shape=record label="{917: typeof['value',v20]|918: constant[\"function\",v21]|919: ===[v20,v21,v19]|920: if[v19](true-block:365,false-block:366)}" ] 
BB364 -> BB365 [tailport=s, headport=n, headlabel="      365"]
BB364 -> BB366 [tailport=s, headport=n, headlabel="      366"]
BB364 -> BB375 [tailport=s, headport=n, color=gray]
BB365 [shape=record label="{921: read-variable['single',v23,-]|922: read-property[v23,'call',-]|923: \<variable-non-null-undef\>['single']|924: read-variable['this',v24,-]|925: read-variable['i',v25,v2]|926: read-variable['value',v26,v2]}" ] 
BB365 -> BB367 [tailport=s, headport=n, headlabel="      367"]
BB365 -> BB375 [tailport=s, headport=n, color=gray]
BB366 [shape=record label="{927: read-variable['multiple',v23,-]|928: read-property[v23,'call',-]|929: \<variable-non-null-undef\>['multiple']|930: read-variable['this',v24,-]|931: read-variable['i',v25,v2]|932: read-variable['value',v26,v2]}" ] 
BB366 -> BB368 [tailport=s, headport=n, headlabel="      368"]
BB366 -> BB375 [tailport=s, headport=n, color=gray]
BB367 [shape=record label="{933: call-single.call [v23,'call',v24,v25,v26,-]*}" ] 
BB367 -> BB369 [tailport=s, headport=n]
BB367 -> BB375 [tailport=s, headport=n, color=gray]
BB368 [shape=record label="{934: call-multiple.call [v23,'call',v24,v25,v26,-]*}" ] 
BB368 -> BB369 [tailport=s, headport=n]
BB368 -> BB375 [tailport=s, headport=n, color=gray]
BB369 [shape=record label="{935: end-for-in(begin-node:900)}" ] 
BB369 -> BB358 [tailport=s, headport=n]
BB370 [shape=record label="{936: constant[1.0,v13]|937: read-variable['i',v14,v2]|938: +[v14,v12]|939: -[v12,v13,v15]|940: write-variable[v15,'i']|941: if[v12](true-block:371,false-block:373)}" ] 
BB370 -> BB371 [tailport=s, headport=n, headlabel="      371"]
BB370 -> BB373 [tailport=s, headport=n]
BB370 -> BB375 [tailport=s, headport=n, color=gray]
BB371 [shape=record label="{942: read-variable['single',v17,-]|943: read-property[v17,'call',-]|944: \<variable-non-null-undef\>['single']|945: read-variable['this',v18,-]|946: read-variable['evt',v19,v2]|947: read-variable['listeners',v21,v2]|948: read-variable['i',v22,v2]|949: read-property[v21,v22,v20]|950: \<variable-non-null-undef\>['listeners']}" ] 
BB371 -> BB372 [tailport=s, headport=n, headlabel="      372"]
BB371 -> BB375 [tailport=s, headport=n, color=gray]
BB372 [shape=record label="{951: call-single.call [v17,'call',v18,v19,v20,-]*}" ] 
BB372 -> BB370 [tailport=s, headport=n]
BB372 -> BB375 [tailport=s, headport=n, color=gray]
BB373 [shape=record label="{952: read-variable['this',v1,-]}" ] 
BB373 -> BB374 [tailport=s, headport=n, headlabel="      374"]
BB373 -> BB375 [tailport=s, headport=n, color=gray]
BB374 [shape=record label="{953: return[v1]}" ] 
BB375 [shape=record label="{954: exceptional-return}" ] 
//#$~ 536
}
