digraph {
rankdir="TD"
BB_entry311[shape=none,label=""];
BB_entry311 -> BB5054 [tailport=s, headport=n, headlabel="    5054"]
BB5054 [shape=record label="{15736: constant[undefined,v1]|15737: vardecl['next']|15738: vardecl['size']}" ] 
BB5054 -> BB5055 [tailport=s, headport=n, headlabel="      5055"]
BB5055 [shape=record label="{15739: read-variable['input',v4,-]|15740: read-property[v4,'charCodeAt',-]|15741: \<variable-non-null-undef\>['input']|15742: read-variable['tokPos',v6,-]|15743: constant[1.0,v7]|15744: +[v6,v7,v5]}" ] 
BB5055 -> BB5056 [tailport=s, headport=n, headlabel="      5056"]
BB5055 -> BB5097 [tailport=s, headport=n, color=gray, headlabel="      5097"]
BB5056 [shape=record label="{15745: call-input.charCodeAt [v4,'charCodeAt',v5,v2]}" ] 
BB5056 -> BB5057 [tailport=s, headport=n, headlabel="      5057"]
BB5056 -> BB5097 [tailport=s, headport=n, color=gray]
BB5057 [shape=record label="{15746: write-variable[v2,'next']*|15747: constant[1.0,v8]|15748: write-variable[v8,'size']*|15749: read-variable['next',v10,-]|15750: read-variable['code',v11,-]|15751: ===[v10,v11,v9]|15752: if[v9](true-block:5058,false-block:5072)}" ] 
BB5057 -> BB5058 [tailport=s, headport=n, headlabel="      5058"]
BB5057 -> BB5072 [tailport=s, headport=n, headlabel="      5072"]
BB5057 -> BB5097 [tailport=s, headport=n, color=gray]
BB5058 [shape=record label="{15753: read-variable['code',v14,-]|15754: constant[62.0,v15]|15755: ===[v14,v15,v13]|15756: if[v13](true-block:5059,false-block:5062)}" ] 
BB5058 -> BB5062 [tailport=s, headport=n, headlabel="      5062"]
BB5058 -> BB5059 [tailport=s, headport=n, headlabel="      5059"]
BB5058 -> BB5097 [tailport=s, headport=n, color=gray]
BB5059 [shape=record label="{15757: read-variable['input',v19,-]|15758: read-property[v19,'charCodeAt',-]|15759: \<variable-non-null-undef\>['input']|15760: read-variable['tokPos',v21,-]|15761: constant[2.0,v22]|15762: +[v21,v22,v20]}" ] 
BB5059 -> BB5060 [tailport=s, headport=n, headlabel="      5060"]
BB5059 -> BB5097 [tailport=s, headport=n, color=gray]
BB5060 [shape=record label="{15763: call-input.charCodeAt [v19,'charCodeAt',v20,v16]}" ] 
BB5060 -> BB5061 [tailport=s, headport=n, headlabel="      5061"]
BB5060 -> BB5097 [tailport=s, headport=n, color=gray]
BB5061 [shape=record label="{15764: constant[62.0,v17]|15765: ===[v16,v17,v13]}" ] 
BB5061 -> BB5062 [tailport=s, headport=n]
BB5061 -> BB5097 [tailport=s, headport=n, color=gray]
BB5062 [shape=record label="{15766: if[v13](true-block:5063,false-block:5064)}" ] 
BB5062 -> BB5063 [tailport=s, headport=n, headlabel="      5063"]
BB5062 -> BB5064 [tailport=s, headport=n, headlabel="      5064"]
BB5063 [shape=record label="{15767: constant[3.0,v12]}" ] 
BB5063 -> BB5065 [tailport=s, headport=n, headlabel="      5065"]
BB5064 [shape=record label="{15768: constant[2.0,v12]}" ] 
BB5064 -> BB5065 [tailport=s, headport=n]
BB5065 [shape=record label="{15769: write-variable[v12,'size']*|15770: read-variable['input',v20,-]|15771: read-property[v20,'charCodeAt',-]|15772: \<variable-non-null-undef\>['input']|15773: read-variable['tokPos',v22,-]|15774: read-variable['size',v23,-]|15775: +[v22,v23,v21]}" ] 
BB5065 -> BB5066 [tailport=s, headport=n, headlabel="      5066"]
BB5065 -> BB5097 [tailport=s, headport=n, color=gray]
BB5066 [shape=record label="{15776: call-input.charCodeAt [v20,'charCodeAt',v21,v17]}" ] 
BB5066 -> BB5067 [tailport=s, headport=n, headlabel="      5067"]
BB5066 -> BB5097 [tailport=s, headport=n, color=gray]
BB5067 [shape=record label="{15777: constant[61.0,v18]|15778: ===[v17,v18,v16]|15779: if[v16](true-block:5068,false-block:5070)}" ] 
BB5067 -> BB5068 [tailport=s, headport=n, headlabel="      5068"]
BB5067 -> BB5070 [tailport=s, headport=n, headlabel="      5070"]
BB5067 -> BB5097 [tailport=s, headport=n, color=gray]
BB5068 [shape=record label="{15780: read-variable['finishOp',v25,v24]|15781: read-variable['_assign',v26,-]|15782: read-variable['size',v28,-]|15783: constant[1.0,v29]|15784: +[v28,v29,v27]}" ] 
BB5068 -> BB5069 [tailport=s, headport=n, headlabel="      5069"]
BB5068 -> BB5097 [tailport=s, headport=n, color=gray]
BB5069 [shape=record label="{15785: call-finishOp [v24,v25,v26,v27,v1]}" ] 
BB5069 -> BB5096 [tailport=s, headport=n, headlabel="      5096"]
BB5069 -> BB5097 [tailport=s, headport=n, color=gray]
BB5070 [shape=record label="{15786: read-variable['finishOp',v25,v24]|15787: read-variable['_bitShift',v26,-]|15788: read-variable['size',v27,-]}" ] 
BB5070 -> BB5071 [tailport=s, headport=n, headlabel="      5071"]
BB5070 -> BB5097 [tailport=s, headport=n, color=gray]
BB5071 [shape=record label="{15789: call-finishOp [v24,v25,v26,v27,v1]}" ] 
BB5071 -> BB5096 [tailport=s, headport=n]
BB5071 -> BB5097 [tailport=s, headport=n, color=gray]
BB5072 [shape=record label="{15790: read-variable['next',v13,-]|15791: constant[33.0,v14]|15792: ==[v13,v14,v12]|15793: if[v12](true-block:5073,false-block:5080)}" ] 
BB5072 -> BB5080 [tailport=s, headport=n, headlabel="      5080"]
BB5072 -> BB5073 [tailport=s, headport=n, headlabel="      5073"]
BB5072 -> BB5097 [tailport=s, headport=n, color=gray]
BB5073 [shape=record label="{15794: read-variable['code',v15,-]|15795: constant[60.0,v16]|15796: ==[v15,v16,v12]|15797: if[v12](true-block:5074,false-block:5080)}" ] 
BB5073 -> BB5080 [tailport=s, headport=n]
BB5073 -> BB5074 [tailport=s, headport=n, headlabel="      5074"]
BB5073 -> BB5097 [tailport=s, headport=n, color=gray]
BB5074 [shape=record label="{15798: read-variable['input',v20,-]|15799: read-property[v20,'charCodeAt',-]|15800: \<variable-non-null-undef\>['input']|15801: read-variable['tokPos',v22,-]|15802: constant[2.0,v23]|15803: +[v22,v23,v21]}" ] 
BB5074 -> BB5075 [tailport=s, headport=n, headlabel="      5075"]
BB5074 -> BB5097 [tailport=s, headport=n, color=gray]
BB5075 [shape=record label="{15804: call-input.charCodeAt [v20,'charCodeAt',v21,v17]}" ] 
BB5075 -> BB5076 [tailport=s, headport=n, headlabel="      5076"]
BB5075 -> BB5097 [tailport=s, headport=n, color=gray]
BB5076 [shape=record label="{15805: constant[45.0,v18]|15806: ==[v17,v18,v12]|15807: if[v12](true-block:5077,false-block:5080)}" ] 
BB5076 -> BB5080 [tailport=s, headport=n]
BB5076 -> BB5077 [tailport=s, headport=n, headlabel="      5077"]
BB5076 -> BB5097 [tailport=s, headport=n, color=gray]
BB5077 [shape=record label="{15808: read-variable['input',v27,-]|15809: read-property[v27,'charCodeAt',-]|15810: \<variable-non-null-undef\>['input']|15811: read-variable['tokPos',v29,-]|15812: constant[3.0,v30]|15813: +[v29,v30,v28]}" ] 
BB5077 -> BB5078 [tailport=s, headport=n, headlabel="      5078"]
BB5077 -> BB5097 [tailport=s, headport=n, color=gray]
BB5078 [shape=record label="{15814: call-input.charCodeAt [v27,'charCodeAt',v28,v24]}" ] 
BB5078 -> BB5079 [tailport=s, headport=n, headlabel="      5079"]
BB5078 -> BB5097 [tailport=s, headport=n, color=gray]
BB5079 [shape=record label="{15815: constant[45.0,v25]|15816: ==[v24,v25,v12]}" ] 
BB5079 -> BB5080 [tailport=s, headport=n]
BB5079 -> BB5097 [tailport=s, headport=n, color=gray]
BB5080 [shape=record label="{15817: if[v12](true-block:5081,false-block:5087)}" ] 
BB5080 -> BB5081 [tailport=s, headport=n, headlabel="      5081"]
BB5080 -> BB5087 [tailport=s, headport=n, headlabel="      5087"]
BB5081 [shape=record label="{15818: read-variable['skipLineComment',v16,v15]|15819: constant[4.0,v17]}" ] 
BB5081 -> BB5082 [tailport=s, headport=n, headlabel="      5082"]
BB5081 -> BB5097 [tailport=s, headport=n, color=gray]
BB5082 [shape=record label="{15820: call-skipLineComment [v15,v16,v17,-]*}" ] 
BB5082 -> BB5083 [tailport=s, headport=n, headlabel="      5083"]
BB5082 -> BB5097 [tailport=s, headport=n, color=gray]
BB5083 [shape=record label="{15821: read-variable['skipSpace',v19,v18]}" ] 
BB5083 -> BB5084 [tailport=s, headport=n, headlabel="      5084"]
BB5083 -> BB5097 [tailport=s, headport=n, color=gray]
BB5084 [shape=record label="{15822: call-skipSpace [v18,v19,-]*}" ] 
BB5084 -> BB5085 [tailport=s, headport=n, headlabel="      5085"]
BB5084 -> BB5097 [tailport=s, headport=n, color=gray]
BB5085 [shape=record label="{15823: read-variable['readToken',v21,v20]}" ] 
BB5085 -> BB5086 [tailport=s, headport=n, headlabel="      5086"]
BB5085 -> BB5097 [tailport=s, headport=n, color=gray]
BB5086 [shape=record label="{15824: call-readToken [v20,v21,v1]}" ] 
BB5086 -> BB5096 [tailport=s, headport=n]
BB5086 -> BB5097 [tailport=s, headport=n, color=gray]
BB5087 [shape=record label="{15825: read-variable['next',v16,-]|15826: constant[61.0,v17]|15827: ===[v16,v17,v15]|15828: if[v15](true-block:5088,false-block:5094)}" ] 
BB5087 -> BB5088 [tailport=s, headport=n, headlabel="      5088"]
BB5087 -> BB5094 [tailport=s, headport=n, headlabel="      5094"]
BB5087 -> BB5097 [tailport=s, headport=n, color=gray]
BB5088 [shape=record label="{15829: read-variable['input',v23,-]|15830: read-property[v23,'charCodeAt',-]|15831: \<variable-non-null-undef\>['input']|15832: read-variable['tokPos',v25,-]|15833: constant[2.0,v26]|15834: +[v25,v26,v24]}" ] 
BB5088 -> BB5089 [tailport=s, headport=n, headlabel="      5089"]
BB5088 -> BB5097 [tailport=s, headport=n, color=gray]
BB5089 [shape=record label="{15835: call-input.charCodeAt [v23,'charCodeAt',v24,v20]}" ] 
BB5089 -> BB5090 [tailport=s, headport=n, headlabel="      5090"]
BB5089 -> BB5097 [tailport=s, headport=n, color=gray]
BB5090 [shape=record label="{15836: constant[61.0,v21]|15837: ===[v20,v21,v19]|15838: if[v19](true-block:5091,false-block:5092)}" ] 
BB5090 -> BB5091 [tailport=s, headport=n, headlabel="      5091"]
BB5090 -> BB5092 [tailport=s, headport=n, headlabel="      5092"]
BB5090 -> BB5097 [tailport=s, headport=n, color=gray]
BB5091 [shape=record label="{15839: constant[3.0,v18]}" ] 
BB5091 -> BB5093 [tailport=s, headport=n, headlabel="      5093"]
BB5092 [shape=record label="{15840: constant[2.0,v18]}" ] 
BB5092 -> BB5093 [tailport=s, headport=n]
BB5093 [shape=record label="{15841: write-variable[v18,'size']*}" ] 
BB5093 -> BB5094 [tailport=s, headport=n]
BB5094 [shape=record label="{15842: read-variable['finishOp',v19,v18]|15843: read-variable['_relational',v20,-]|15844: read-variable['size',v21,-]}" ] 
BB5094 -> BB5095 [tailport=s, headport=n, headlabel="      5095"]
BB5094 -> BB5097 [tailport=s, headport=n, color=gray]
BB5095 [shape=record label="{15845: call-finishOp [v18,v19,v20,v21,v1]}" ] 
BB5095 -> BB5096 [tailport=s, headport=n]
BB5095 -> BB5097 [tailport=s, headport=n, color=gray]
BB5096 [shape=record label="{15846: return[v1]}" ] 
BB5097 [shape=record label="{15847: exceptional-return}" ] 
//#$~ 5295
}
