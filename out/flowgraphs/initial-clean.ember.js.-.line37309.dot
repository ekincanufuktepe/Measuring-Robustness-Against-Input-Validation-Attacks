digraph {
rankdir="TD"
BB_entry1737[shape=none,label=""];
BB_entry1737 -> BB20002 [tailport=s, headport=n, headlabel="    20002"]
BB20002 [shape=record label="{66942: constant[undefined,v1]|66943: vardecl['router']|66944: vardecl['routerIsLoading']}" ] 
BB20002 -> BB20003 [tailport=s, headport=n, headlabel="      20003"]
BB20003 [shape=record label="{66945: read-variable['app',v5,-]|66946: read-property[v5,'__container__',v4]|66947: \<variable-non-null-undef\>['app']|66948: read-property[v4,'lookup',-]|66949: \<property-non-null-undef\>[v5,'__container__']|66950: constant[\"router:main\",v6]}" ] 
BB20003 -> BB20004 [tailport=s, headport=n, headlabel="      20004"]
BB20003 -> BB20030 [tailport=s, headport=n, color=gray, headlabel="      20030"]
BB20004 [shape=record label="{66951: call-app.__container__.lookup [v4,'lookup',v6,v2]}" ] 
BB20004 -> BB20005 [tailport=s, headport=n, headlabel="      20005"]
BB20004 -> BB20030 [tailport=s, headport=n, color=gray]
BB20005 [shape=record label="{66952: write-variable[v2,'router']*|66953: read-variable['router',v8,-]|66954: read-property[v8,'router',v7]|66955: \<variable-non-null-undef\>['router']|66956: if[v7](true-block:20006,false-block:20007)}" ] 
BB20005 -> BB20007 [tailport=s, headport=n, headlabel="      20007"]
BB20005 -> BB20006 [tailport=s, headport=n, headlabel="      20006"]
BB20005 -> BB20030 [tailport=s, headport=n, color=gray]
BB20006 [shape=record label="{66957: read-variable['router',v12,-]|66958: read-property[v12,'router',v11]|66959: \<variable-non-null-undef\>['router']|66960: read-property[v11,'activeTransition',v10]|66961: \<property-non-null-undef\>[v12,'router']|66962: ![v10,v9]|66963: ![v9,v7]}" ] 
BB20006 -> BB20007 [tailport=s, headport=n]
BB20006 -> BB20030 [tailport=s, headport=n, color=gray]
BB20007 [shape=record label="{66964: write-variable[v7,'routerIsLoading']*|66965: read-variable['routerIsLoading',v9,-]|66966: if[v9](true-block:20008,false-block:20009)}" ] 
BB20007 -> BB20008 [tailport=s, headport=n, headlabel="      20008"]
BB20007 -> BB20009 [tailport=s, headport=n, headlabel="      20009"]
BB20007 -> BB20030 [tailport=s, headport=n, color=gray]
BB20008 [shape=record label="{66967: constant[undefined,v1]}" ] 
BB20008 -> BB20029 [tailport=s, headport=n, headlabel="      20029"]
BB20009 [shape=record label="{66968: read-variable['Test',v11,-]|66969: read-property[v11,'pendingAjaxRequests',v10]|66970: \<variable-non-null-undef\>['Test']|66971: if[v10](true-block:20010,false-block:20011)}" ] 
BB20009 -> BB20010 [tailport=s, headport=n, headlabel="      20010"]
BB20009 -> BB20011 [tailport=s, headport=n, headlabel="      20011"]
BB20009 -> BB20030 [tailport=s, headport=n, color=gray]
BB20010 [shape=record label="{66972: constant[undefined,v1]}" ] 
BB20010 -> BB20029 [tailport=s, headport=n]
BB20011 [shape=record label="{66973: read-variable['run',v14,-]|66974: read-property[v14,'hasScheduledTimers',-]|66975: \<variable-non-null-undef\>['run']}" ] 
BB20011 -> BB20012 [tailport=s, headport=n, headlabel="      20012"]
BB20011 -> BB20030 [tailport=s, headport=n, color=gray]
BB20012 [shape=record label="{66976: call-run.hasScheduledTimers [v14,'hasScheduledTimers',v12]}" ] 
BB20012 -> BB20013 [tailport=s, headport=n, headlabel="      20013"]
BB20012 -> BB20030 [tailport=s, headport=n, color=gray]
BB20013 [shape=record label="{66977: if[v12](true-block:20015,false-block:20014)}" ] 
BB20013 -> BB20015 [tailport=s, headport=n, headlabel="      20015"]
BB20013 -> BB20014 [tailport=s, headport=n, headlabel="      20014"]
BB20014 [shape=record label="{66978: read-variable['run',v13,-]|66979: read-property[v13,'currentRunLoop',v12]|66980: \<variable-non-null-undef\>['run']}" ] 
BB20014 -> BB20015 [tailport=s, headport=n]
BB20014 -> BB20030 [tailport=s, headport=n, color=gray]
BB20015 [shape=record label="{66981: if[v12](true-block:20016,false-block:20017)}" ] 
BB20015 -> BB20016 [tailport=s, headport=n, headlabel="      20016"]
BB20015 -> BB20017 [tailport=s, headport=n, headlabel="      20017"]
BB20016 [shape=record label="{66982: constant[undefined,v1]}" ] 
BB20016 -> BB20029 [tailport=s, headport=n]
BB20017 [shape=record label="{66983: read-variable['Test',v14,-]|66984: read-property[v14,'waiters',v13]|66985: \<variable-non-null-undef\>['Test']|66986: if[v13](true-block:20018,false-block:20020)}" ] 
BB20017 -> BB20020 [tailport=s, headport=n, headlabel="      20020"]
BB20017 -> BB20018 [tailport=s, headport=n, headlabel="      20018"]
BB20017 -> BB20030 [tailport=s, headport=n, color=gray]
BB20018 [shape=record label="{66987: read-variable['Test',v17,-]|66988: read-property[v17,'waiters',v16]|66989: \<variable-non-null-undef\>['Test']|66990: read-property[v16,'any',-]|66991: \<property-non-null-undef\>[v17,'waiters']|66992: function-expr[function ( waiter ),v18]}" ] 
BB20018 -> BB20019 [tailport=s, headport=n, headlabel="      20019"]
BB20018 -> BB20030 [tailport=s, headport=n, color=gray]
BB20019 [shape=record label="{66993: call-Test.waiters.any [v16,'any',v18,v13]}" ] 
BB20019 -> BB20020 [tailport=s, headport=n]
BB20019 -> BB20030 [tailport=s, headport=n, color=gray]
BB20020 [shape=record label="{66994: if[v13](true-block:20021,false-block:20022)}" ] 
BB20020 -> BB20021 [tailport=s, headport=n, headlabel="      20021"]
BB20020 -> BB20022 [tailport=s, headport=n, headlabel="      20022"]
BB20021 [shape=record label="{66995: constant[undefined,v1]}" ] 
BB20021 -> BB20029 [tailport=s, headport=n]
BB20022 [shape=record label="{66996: read-variable['clearInterval',v16,v15]|66997: read-variable['watcher',v17,-]}" ] 
BB20022 -> BB20023 [tailport=s, headport=n, headlabel="      20023"]
BB20022 -> BB20030 [tailport=s, headport=n, color=gray]
BB20023 [shape=record label="{66998: call-clearInterval [v15,v16,v17,-]*}" ] 
BB20023 -> BB20024 [tailport=s, headport=n, headlabel="      20024"]
BB20023 -> BB20030 [tailport=s, headport=n, color=gray]
BB20024 [shape=record label="{66999: constant[1.0,v21]|67000: read-variable['countAsync',v22,-]|67001: +[v22,v23]|67002: -[v23,v21,v19]|67003: write-variable[v19,'countAsync']|67004: constant[0.0,v20]|67005: ===[v19,v20,v18]|67006: if[v18](true-block:20025,false-block:20027)}" ] 
BB20024 -> BB20025 [tailport=s, headport=n, headlabel="      20025"]
BB20024 -> BB20027 [tailport=s, headport=n, headlabel="      20027"]
BB20024 -> BB20030 [tailport=s, headport=n, color=gray]
BB20025 [shape=record label="{67007: read-variable['Test',v26,-]|67008: read-property[v26,'adapter',v25]|67009: \<variable-non-null-undef\>['Test']|67010: read-property[v25,'asyncEnd',-]|67011: \<property-non-null-undef\>[v26,'adapter']}" ] 
BB20025 -> BB20026 [tailport=s, headport=n, headlabel="      20026"]
BB20025 -> BB20030 [tailport=s, headport=n, color=gray]
BB20026 [shape=record label="{67012: call-Test.adapter.asyncEnd [v25,'asyncEnd',-]*}" ] 
BB20026 -> BB20027 [tailport=s, headport=n]
BB20026 -> BB20030 [tailport=s, headport=n, color=gray]
BB20027 [shape=record label="{67013: read-variable['run',v25,v24]|67014: constant[null,v26]|67015: read-variable['resolve',v27,-]|67016: read-variable['value',v28,-]}" ] 
BB20027 -> BB20028 [tailport=s, headport=n, headlabel="      20028"]
BB20027 -> BB20030 [tailport=s, headport=n, color=gray]
BB20028 [shape=record label="{67017: call-run [v24,v25,v26,v27,v28,-]*}" ] 
BB20028 -> BB20029 [tailport=s, headport=n]
BB20028 -> BB20030 [tailport=s, headport=n, color=gray]
BB20029 [shape=record label="{67018: return[v1]}" ] 
BB20030 [shape=record label="{67019: exceptional-return}" ] 
//#$~ 37335
}
