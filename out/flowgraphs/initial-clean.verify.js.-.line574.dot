digraph {
rankdir="TD"
BB_entry69[shape=none,label=""];
BB_entry69 -> BB683 [tailport=s, headport=n, headlabel="    683"]
BB683 [shape=record label="{1809: constant[undefined,v1]|1810: vardecl['p']|1811: vardecl['name']|1812: vardecl['names']|1813: vardecl['parentRule']}" ] 
BB683 -> BB684 [tailport=s, headport=n, headlabel="      684"]
BB684 [shape=record label="{1814: read-variable['parentName',v3,-]|1815: ![v3,v2]|1816: if[v2](true-block:686,false-block:685)}" ] 
BB684 -> BB686 [tailport=s, headport=n, headlabel="      686"]
BB684 -> BB685 [tailport=s, headport=n, headlabel="      685"]
BB684 -> BB713 [tailport=s, headport=n, color=gray, headlabel="      713"]
BB685 [shape=record label="{1817: typeof['parentName',v3]|1818: constant[\"string\",v4]|1819: !==[v3,v4,v2]}" ] 
BB685 -> BB686 [tailport=s, headport=n]
BB685 -> BB713 [tailport=s, headport=n, color=gray]
BB686 [shape=record label="{1820: if[v2](true-block:687,false-block:688)}" ] 
BB686 -> BB687 [tailport=s, headport=n, headlabel="      687"]
BB686 -> BB688 [tailport=s, headport=n, headlabel="      688"]
BB687 [shape=record label="{1821: constant[undefined,v1]}" ] 
BB687 -> BB712 [tailport=s, headport=n, headlabel="      712"]
BB688 [shape=record label="{1822: read-variable['parentName',v3,-]|1823: write-variable[v3,'name']*|1824: read-variable['Array',v5,-]}" ] 
BB688 -> BB689 [tailport=s, headport=n, headlabel="      689"]
BB688 -> BB713 [tailport=s, headport=n, color=gray]
BB689 [shape=record label="{1825: construct [-,v5,v4]}" ] 
BB689 -> BB690 [tailport=s, headport=n, headlabel="      690"]
BB689 -> BB713 [tailport=s, headport=n, color=gray]
BB690 [shape=record label="{1826: write-variable[v4,'names']*}" ] 
BB690 -> BB691 [tailport=s, headport=n, headlabel="      691"]
BB691 [shape=record label="{1827: read-variable['name',v6,-]|1828: if[v6](true-block:692,false-block:693)}" ] 
BB691 -> BB692 [tailport=s, headport=n, headlabel="      692"]
BB691 -> BB693 [tailport=s, headport=n, headlabel="      693"]
BB691 -> BB713 [tailport=s, headport=n, color=gray]
BB692 [shape=record label="{1829: read-variable['name',v8,-]|1830: read-variable['this',v10,-]|1831: read-property[v10,'name',v9]|1832: ===[v8,v9,v7]|1833: if[v7](true-block:694,false-block:696)}" ] 
BB692 -> BB694 [tailport=s, headport=n, headlabel="      694"]
BB692 -> BB696 [tailport=s, headport=n, headlabel="      696"]
BB692 -> BB713 [tailport=s, headport=n, color=gray]
BB693 [shape=record label="{1834: read-variable['ruleManager',v9,-]|1835: read-property[v9,'getRule',-]|1836: \<variable-non-null-undef\>['ruleManager']|1837: read-variable['parentName',v10,-]}" ] 
BB693 -> BB702 [tailport=s, headport=n, headlabel="      702"]
BB693 -> BB713 [tailport=s, headport=n, color=gray]
BB694 [shape=record label="{1838: read-variable['this',v12,-]|1839: read-property[v12,'error',-]|1840: constant[\"Rule already extends '%s'\",v13]|1841: read-variable['name',v14,-]}" ] 
BB694 -> BB695 [tailport=s, headport=n, headlabel="      695"]
BB694 -> BB713 [tailport=s, headport=n, color=gray]
BB695 [shape=record label="{1842: call-this.error [v12,'error',v13,v14,v1]}" ] 
BB695 -> BB712 [tailport=s, headport=n]
BB695 -> BB713 [tailport=s, headport=n, color=gray]
BB696 [shape=record label="{1843: read-variable['ruleManager',v13,-]|1844: read-property[v13,'getRawRule',-]|1845: \<variable-non-null-undef\>['ruleManager']|1846: read-variable['name',v14,-]}" ] 
BB696 -> BB697 [tailport=s, headport=n, headlabel="      697"]
BB696 -> BB713 [tailport=s, headport=n, color=gray]
BB697 [shape=record label="{1847: call-ruleManager.getRawRule [v13,'getRawRule',v14,v11]}" ] 
BB697 -> BB698 [tailport=s, headport=n, headlabel="      698"]
BB697 -> BB713 [tailport=s, headport=n, color=gray]
BB698 [shape=record label="{1848: write-variable[v11,'p']*|1849: read-variable['p',v16,-]|1850: if[v16](true-block:699,false-block:700)}" ] 
BB698 -> BB699 [tailport=s, headport=n, headlabel="      699"]
BB698 -> BB700 [tailport=s, headport=n, headlabel="      700"]
BB698 -> BB713 [tailport=s, headport=n, color=gray]
BB699 [shape=record label="{1851: read-variable['p',v17,-]|1852: read-property[v17,'extend',v15]|1853: \<variable-non-null-undef\>['p']}" ] 
BB699 -> BB701 [tailport=s, headport=n, headlabel="      701"]
BB699 -> BB713 [tailport=s, headport=n, color=gray]
BB700 [shape=record label="{1854: constant[null,v15]}" ] 
BB700 -> BB701 [tailport=s, headport=n]
BB701 [shape=record label="{1855: write-variable[v15,'name']*}" ] 
BB701 -> BB691 [tailport=s, headport=n]
BB702 [shape=record label="{1856: call-ruleManager.getRule [v9,'getRule',v10,v7]}" ] 
BB702 -> BB703 [tailport=s, headport=n, headlabel="      703"]
BB702 -> BB713 [tailport=s, headport=n, color=gray]
BB703 [shape=record label="{1857: write-variable[v7,'parentRule']*|1858: read-variable['parentRule',v12,-]|1859: ![v12,v11]|1860: if[v11](true-block:704,false-block:706)}" ] 
BB703 -> BB704 [tailport=s, headport=n, headlabel="      704"]
BB703 -> BB706 [tailport=s, headport=n, headlabel="      706"]
BB703 -> BB713 [tailport=s, headport=n, color=gray]
BB704 [shape=record label="{1861: read-variable['this',v14,-]|1862: read-property[v14,'warn',-]|1863: constant[\"Rule missing '%s'\",v15]|1864: read-variable['name',v16,-]}" ] 
BB704 -> BB705 [tailport=s, headport=n, headlabel="      705"]
BB704 -> BB713 [tailport=s, headport=n, color=gray]
BB705 [shape=record label="{1865: call-this.warn [v14,'warn',v15,v16,v1]}" ] 
BB705 -> BB712 [tailport=s, headport=n]
BB705 -> BB713 [tailport=s, headport=n, color=gray]
BB706 [shape=record label="{1866: read-variable['this',v14,-]|1867: read-variable['parentRule',v13,-]|1868: write-property[v14,'parent',v13]*|1869: read-variable['parentRule',v17,-]|1870: read-variable['Rule',v18,-]|1871: instanceof[v17,v18,v16]|1872: ![v16,v15]|1873: if[v15](true-block:707,false-block:709)}" ] 
BB706 -> BB707 [tailport=s, headport=n, headlabel="      707"]
BB706 -> BB709 [tailport=s, headport=n, headlabel="      709"]
BB706 -> BB713 [tailport=s, headport=n, color=gray]
BB707 [shape=record label="{1874: read-variable['this',v20,-]|1875: read-property[v20,'error',-]|1876: constant[\"Cannot extend: '\",v24]|1877: read-variable['otherName',v25,-]|1878: +[v24,v25,v22]|1879: constant[\"' invalid type\",v23]|1880: +[v22,v23,v21]}" ] 
BB707 -> BB708 [tailport=s, headport=n, headlabel="      708"]
BB707 -> BB713 [tailport=s, headport=n, color=gray]
BB708 [shape=record label="{1881: call-this.error [v20,'error',v21,v1]}" ] 
BB708 -> BB712 [tailport=s, headport=n]
BB708 -> BB713 [tailport=s, headport=n, color=gray]
BB709 [shape=record label="{1882: read-variable['this',v20,-]|1883: read-variable['Utils',v22,-]|1884: read-property[v22,'create',-]|1885: \<variable-non-null-undef\>['Utils']|1886: read-variable['parentRule',v24,-]|1887: read-property[v24,'userObj',v23]|1888: \<variable-non-null-undef\>['parentRule']}" ] 
BB709 -> BB710 [tailport=s, headport=n, headlabel="      710"]
BB709 -> BB713 [tailport=s, headport=n, color=gray]
BB710 [shape=record label="{1889: call-Utils.create [v22,'create',v23,v19]}" ] 
BB710 -> BB711 [tailport=s, headport=n, headlabel="      711"]
BB710 -> BB713 [tailport=s, headport=n, color=gray]
BB711 [shape=record label="{1890: write-property[v20,'userObj',v19]*|1891: read-variable['this',v27,-]|1892: read-property[v27,'userObj',v26]|1893: read-variable['parentRule',v28,-]|1894: read-property[v28,'userObj',v25]|1895: \<variable-non-null-undef\>['parentRule']|1896: write-property[v26,'parent',v25]|1897: \<property-non-null-undef\>[v27,'userObj']*}" ] 
BB711 -> BB712 [tailport=s, headport=n]
BB711 -> BB713 [tailport=s, headport=n, color=gray]
BB712 [shape=record label="{1898: return[v1]}" ] 
BB713 [shape=record label="{1899: exceptional-return}" ] 
//#$~ 599
}
