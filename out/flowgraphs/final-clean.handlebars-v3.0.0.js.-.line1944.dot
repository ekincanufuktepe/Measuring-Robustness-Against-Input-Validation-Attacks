digraph {
rankdir="TD"
BB_entry147[shape=none,label=""];
BB_entry147 -> BB4363 [tailport=s, headport=n, headlabel="    4363"]
BB4363 [shape=record label="{14310: constant[undefined,v1]|14311: vardecl['__exports__']|14312: vardecl['Exception']|14313: vardecl['isArray']|14314: vardecl['indexOf']|14315: vardecl['AST']|14316: vardecl['slice']|14317: function-decl[function Compiler ( ),-]|14318: function-decl[function precompile ( input options env ),-]|14319: function-decl[function compile ( input options env ),-]|14320: function-decl[function argEquals ( a b ),-]|14321: function-decl[function transformLiteralToPath ( sexpr ),-]}" ] 
BB4363 -> BB4364 [tailport=s, headport=n, headlabel="      4364"]
BB4364 [shape=record label="{14322: new[v2]|14323: write-variable[v2,'__exports__']*|14324: read-variable['__dependency1__',v3,-]|14325: write-variable[v3,'Exception']*|14326: read-variable['__dependency2__',v5,-]|14327: read-property[v5,'isArray',v4]|14328: \<variable-non-null-undef\>['__dependency2__']|14329: write-variable[v4,'isArray']*|14330: read-variable['__dependency2__',v7,-]|14331: read-property[v7,'indexOf',v6]|14332: \<variable-non-null-undef\>['__dependency2__']|14333: write-variable[v6,'indexOf']*|14334: read-variable['__dependency3__',v8,-]|14335: write-variable[v8,'AST']*|14336: read-variable['Array',v11,-]}" ] 
BB4364 -> BB4365 [tailport=s, headport=n, headlabel="      4365"]
BB4364 -> BB4368 [tailport=s, headport=n, color=gray, headlabel="      4368"]
BB4365 [shape=record label="{14337: construct [-,v11,v10]}" ] 
BB4365 -> BB4366 [tailport=s, headport=n, headlabel="      4366"]
BB4365 -> BB4368 [tailport=s, headport=n, color=gray]
BB4366 [shape=record label="{14338: read-property[v10,'slice',v9]|14339: write-variable[v9,'slice']*|14340: read-variable['__exports__',v13,-]|14341: read-variable['Compiler',v12,-]|14342: write-property[v13,'Compiler',v12]|14343: \<variable-non-null-undef\>['__exports__']*|14344: read-variable['Compiler',v15,-]|14345: new[v14]|14346: read-variable['Compiler',v16,-]|14347: write-property[v14,'compiler',v16]|14348: function-expr[function ( other ),v17]|14349: write-property[v14,'equals',v17]|14350: constant[0.0,v18]|14351: write-property[v14,'guid',v18]|14352: function-expr[function ( program options ),v19]|14353: write-property[v14,'compile',v19]|14354: function-expr[function ( program ),v20]|14355: write-property[v14,'compileProgram',v20]|14356: function-expr[function ( node ),v21]|14357: write-property[v14,'accept',v21]|14358: function-expr[function ( program ),v22]|14359: write-property[v14,'Program',v22]|14360: function-expr[function ( block ),v23]|14361: write-property[v14,'BlockStatement',v23]|14362: function-expr[function ( partial ),v24]|14363: write-property[v14,'PartialStatement',v24]|14364: function-expr[function ( mustache ),v25]|14365: write-property[v14,'MustacheStatement',v25]|14366: function-expr[function ( content ),v26]|14367: write-property[v14,'ContentStatement',v26]|14368: function-expr[function ( ),v27]|14369: write-property[v14,'CommentStatement',v27]|14370: function-expr[function ( sexpr ),v28]|14371: write-property[v14,'SubExpression',v28]|14372: function-expr[function ( sexpr program inverse ),v29]|14373: write-property[v14,'ambiguousSexpr',v29]|14374: function-expr[function ( sexpr ),v30]|14375: write-property[v14,'simpleSexpr',v30]|14376: function-expr[function ( sexpr program inverse ),v31]|14377: write-property[v14,'helperSexpr',v31]|14378: function-expr[function ( path ),v32]|14379: write-property[v14,'PathExpression',v32]|14380: function-expr[function ( string ),v33]|14381: write-property[v14,'StringLiteral',v33]|14382: function-expr[function ( number ),v34]|14383: write-property[v14,'NumberLiteral',v34]|14384: function-expr[function ( bool ),v35]|14385: write-property[v14,'BooleanLiteral',v35]|14386: function-expr[function ( hash ),v36]|14387: write-property[v14,'Hash',v36]|14388: function-expr[function ( name ),v37]|14389: write-property[v14,'opcode',v37]|14390: function-expr[function ( depth ),v38]|14391: write-property[v14,'addDepth',v38]|14392: function-expr[function ( sexpr ),v39]|14393: write-property[v14,'classifySexpr',v39]|14394: function-expr[function ( params ),v40]|14395: write-property[v14,'pushParams',v40]|14396: function-expr[function ( val ),v41]|14397: write-property[v14,'pushParam',v41]|14398: function-expr[function ( sexpr program inverse omitEmpty ),v42]|14399: write-property[v14,'setupFullMustacheParams',v42]|14400: function-expr[function ( name ),v43]|14401: write-property[v14,'blockParamIndex',v43]|14402: write-property[v15,'prototype',v14]|14403: \<variable-non-null-undef\>['Compiler']*|14404: read-variable['__exports__',v45,-]|14405: read-variable['precompile',v44,-]|14406: write-property[v45,'precompile',v44]|14407: \<variable-non-null-undef\>['__exports__']*|14408: read-variable['__exports__',v47,-]|14409: read-variable['compile',v46,-]|14410: write-property[v47,'compile',v46]|14411: \<variable-non-null-undef\>['__exports__']*|14412: read-variable['__exports__',v1,-]}" ] 
BB4366 -> BB4367 [tailport=s, headport=n, headlabel="      4367"]
BB4366 -> BB4368 [tailport=s, headport=n, color=gray]
BB4367 [shape=record label="{14413: return[v1]}" ] 
BB4368 [shape=record label="{14414: exceptional-return}" ] 
//#$~ 2447
}
