digraph {
rankdir="TD"
BB_entry627[shape=none,label=""];
BB_entry627 -> BB8542 [tailport=s, headport=n, headlabel="    8542"]
BB8542 [shape=record label="{21989: constant[undefined,v1]|21990: vardecl['allConstants']|21991: vardecl['argsToWatch']}" ] 
BB8542 -> BB8543 [tailport=s, headport=n, headlabel="      8543"]
BB8543 [shape=record label="{21992: read-variable['ast',v3,-]|21993: read-property[v3,'type',v2]|21994: \<variable-non-null-undef\>['ast']|21995: read-variable['AST',v6,-]|21996: read-property[v6,'Program',v4]|21997: \<variable-non-null-undef\>['AST']|21998: ==[v2,v4,v5]|21999: if[v5](true-block:8544,false-block:8545)}" ] 
BB8543 -> BB8544 [tailport=s, headport=n, headlabel="      8544"]
BB8543 -> BB8545 [tailport=s, headport=n, headlabel="      8545"]
BB8543 -> BB8654 [tailport=s, headport=n, color=gray, headlabel="      8654"]
BB8544 [shape=record label="{22000: constant[true,v7]|22001: write-variable[v7,'allConstants']*|22002: read-variable['forEach',v9,v8]|22003: read-variable['ast',v11,-]|22004: read-property[v11,'body',v10]|22005: \<variable-non-null-undef\>['ast']|22006: function-expr[function ( expr ),v12]}" ] 
BB8544 -> BB8546 [tailport=s, headport=n, headlabel="      8546"]
BB8544 -> BB8654 [tailport=s, headport=n, color=gray]
BB8545 [shape=record label="{22007: read-variable['AST',v15,-]|22008: read-property[v15,'Literal',v4]|22009: \<variable-non-null-undef\>['AST']|22010: ==[v2,v4,v5]|22011: if[v5](true-block:8548,false-block:8549)}" ] 
BB8545 -> BB8548 [tailport=s, headport=n, headlabel="      8548"]
BB8545 -> BB8549 [tailport=s, headport=n, headlabel="      8549"]
BB8545 -> BB8654 [tailport=s, headport=n, color=gray]
BB8546 [shape=record label="{22012: call-forEach [v8,v9,v10,v12,-]*}" ] 
BB8546 -> BB8547 [tailport=s, headport=n, headlabel="      8547"]
BB8546 -> BB8654 [tailport=s, headport=n, color=gray]
BB8547 [shape=record label="{22013: read-variable['ast',v14,-]|22014: read-variable['allConstants',v13,-]|22015: write-property[v14,'constant',v13]|22016: \<variable-non-null-undef\>['ast']*}" ] 
BB8547 -> BB8653 [tailport=s, headport=n, headlabel="      8653"]
BB8547 -> BB8654 [tailport=s, headport=n, color=gray]
BB8548 [shape=record label="{22017: read-variable['ast',v17,-]|22018: constant[true,v16]|22019: write-property[v17,'constant',v16]|22020: \<variable-non-null-undef\>['ast']*|22021: read-variable['ast',v19,-]|22022: read-variable['Array',v20,-]}" ] 
BB8548 -> BB8550 [tailport=s, headport=n, headlabel="      8550"]
BB8548 -> BB8654 [tailport=s, headport=n, color=gray]
BB8549 [shape=record label="{22023: read-variable['AST',v21,-]|22024: read-property[v21,'UnaryExpression',v4]|22025: \<variable-non-null-undef\>['AST']|22026: ==[v2,v4,v5]|22027: if[v5](true-block:8552,false-block:8553)}" ] 
BB8549 -> BB8552 [tailport=s, headport=n, headlabel="      8552"]
BB8549 -> BB8553 [tailport=s, headport=n, headlabel="      8553"]
BB8549 -> BB8654 [tailport=s, headport=n, color=gray]
BB8550 [shape=record label="{22028: construct [-,v20,v18]}" ] 
BB8550 -> BB8551 [tailport=s, headport=n, headlabel="      8551"]
BB8550 -> BB8654 [tailport=s, headport=n, color=gray]
BB8551 [shape=record label="{22029: write-property[v19,'toWatch',v18]|22030: \<variable-non-null-undef\>['ast']*}" ] 
BB8551 -> BB8653 [tailport=s, headport=n]
BB8551 -> BB8654 [tailport=s, headport=n, color=gray]
BB8552 [shape=record label="{22031: read-variable['findConstantAndWatchExpressions',v23,v22]|22032: read-variable['ast',v25,-]|22033: read-property[v25,'argument',v24]|22034: \<variable-non-null-undef\>['ast']|22035: read-variable['$filter',v26,-]}" ] 
BB8552 -> BB8554 [tailport=s, headport=n, headlabel="      8554"]
BB8552 -> BB8654 [tailport=s, headport=n, color=gray]
BB8553 [shape=record label="{22036: read-variable['AST',v35,-]|22037: read-property[v35,'BinaryExpression',v4]|22038: \<variable-non-null-undef\>['AST']|22039: ==[v2,v4,v5]|22040: if[v5](true-block:8556,false-block:8557)}" ] 
BB8553 -> BB8556 [tailport=s, headport=n, headlabel="      8556"]
BB8553 -> BB8557 [tailport=s, headport=n, headlabel="      8557"]
BB8553 -> BB8654 [tailport=s, headport=n, color=gray]
BB8554 [shape=record label="{22041: call-findConstantAndWatchExpressions [v22,v23,v24,v26,-]*}" ] 
BB8554 -> BB8555 [tailport=s, headport=n, headlabel="      8555"]
BB8554 -> BB8654 [tailport=s, headport=n, color=gray]
BB8555 [shape=record label="{22042: read-variable['ast',v28,-]|22043: read-variable['ast',v30,-]|22044: read-property[v30,'argument',v29]|22045: \<variable-non-null-undef\>['ast']|22046: read-property[v29,'constant',v27]|22047: \<property-non-null-undef\>[v30,'argument']|22048: write-property[v28,'constant',v27]|22049: \<variable-non-null-undef\>['ast']*|22050: read-variable['ast',v32,-]|22051: read-variable['ast',v34,-]|22052: read-property[v34,'argument',v33]|22053: \<variable-non-null-undef\>['ast']|22054: read-property[v33,'toWatch',v31]|22055: \<property-non-null-undef\>[v34,'argument']|22056: write-property[v32,'toWatch',v31]|22057: \<variable-non-null-undef\>['ast']*}" ] 
BB8555 -> BB8653 [tailport=s, headport=n]
BB8555 -> BB8654 [tailport=s, headport=n, color=gray]
BB8556 [shape=record label="{22058: read-variable['findConstantAndWatchExpressions',v37,v36]|22059: read-variable['ast',v39,-]|22060: read-property[v39,'left',v38]|22061: \<variable-non-null-undef\>['ast']|22062: read-variable['$filter',v40,-]}" ] 
BB8556 -> BB8558 [tailport=s, headport=n, headlabel="      8558"]
BB8556 -> BB8654 [tailport=s, headport=n, color=gray]
BB8557 [shape=record label="{22063: read-variable['AST',v59,-]|22064: read-property[v59,'LogicalExpression',v4]|22065: \<variable-non-null-undef\>['AST']|22066: ==[v2,v4,v5]|22067: if[v5](true-block:8566,false-block:8567)}" ] 
BB8557 -> BB8566 [tailport=s, headport=n, headlabel="      8566"]
BB8557 -> BB8567 [tailport=s, headport=n, headlabel="      8567"]
BB8557 -> BB8654 [tailport=s, headport=n, color=gray]
BB8558 [shape=record label="{22068: call-findConstantAndWatchExpressions [v36,v37,v38,v40,-]*}" ] 
BB8558 -> BB8559 [tailport=s, headport=n, headlabel="      8559"]
BB8558 -> BB8654 [tailport=s, headport=n, color=gray]
BB8559 [shape=record label="{22069: read-variable['findConstantAndWatchExpressions',v42,v41]|22070: read-variable['ast',v44,-]|22071: read-property[v44,'right',v43]|22072: \<variable-non-null-undef\>['ast']|22073: read-variable['$filter',v45,-]}" ] 
BB8559 -> BB8560 [tailport=s, headport=n, headlabel="      8560"]
BB8559 -> BB8654 [tailport=s, headport=n, color=gray]
BB8560 [shape=record label="{22074: call-findConstantAndWatchExpressions [v41,v42,v43,v45,-]*}" ] 
BB8560 -> BB8561 [tailport=s, headport=n, headlabel="      8561"]
BB8560 -> BB8654 [tailport=s, headport=n, color=gray]
BB8561 [shape=record label="{22075: read-variable['ast',v47,-]|22076: read-variable['ast',v49,-]|22077: read-property[v49,'left',v48]|22078: \<variable-non-null-undef\>['ast']|22079: read-property[v48,'constant',v46]|22080: \<property-non-null-undef\>[v49,'left']|22081: if[v46](true-block:8562,false-block:8563)}" ] 
BB8561 -> BB8563 [tailport=s, headport=n, headlabel="      8563"]
BB8561 -> BB8562 [tailport=s, headport=n, headlabel="      8562"]
BB8561 -> BB8654 [tailport=s, headport=n, color=gray]
BB8562 [shape=record label="{22082: read-variable['ast',v51,-]|22083: read-property[v51,'right',v50]|22084: \<variable-non-null-undef\>['ast']|22085: read-property[v50,'constant',v46]|22086: \<property-non-null-undef\>[v51,'right']}" ] 
BB8562 -> BB8563 [tailport=s, headport=n]
BB8562 -> BB8654 [tailport=s, headport=n, color=gray]
BB8563 [shape=record label="{22087: write-property[v47,'constant',v46]|22088: \<variable-non-null-undef\>['ast']*|22089: read-variable['ast',v51,-]|22090: read-variable['ast',v55,-]|22091: read-property[v55,'left',v54]|22092: \<variable-non-null-undef\>['ast']|22093: read-property[v54,'toWatch',v53]|22094: \<property-non-null-undef\>[v55,'left']|22095: read-property[v53,'concat',-]|22096: \<property-non-null-undef\>[v54,'toWatch']|22097: read-variable['ast',v58,-]|22098: read-property[v58,'right',v57]|22099: \<variable-non-null-undef\>['ast']|22100: read-property[v57,'toWatch',v56]|22101: \<property-non-null-undef\>[v58,'right']}" ] 
BB8563 -> BB8564 [tailport=s, headport=n, headlabel="      8564"]
BB8563 -> BB8654 [tailport=s, headport=n, color=gray]
BB8564 [shape=record label="{22102: call-ast.left.toWatch.concat [v53,'concat',v56,v50]}" ] 
BB8564 -> BB8565 [tailport=s, headport=n, headlabel="      8565"]
BB8564 -> BB8654 [tailport=s, headport=n, color=gray]
BB8565 [shape=record label="{22103: write-property[v51,'toWatch',v50]|22104: \<variable-non-null-undef\>['ast']*}" ] 
BB8565 -> BB8653 [tailport=s, headport=n]
BB8565 -> BB8654 [tailport=s, headport=n, color=gray]
BB8566 [shape=record label="{22105: read-variable['findConstantAndWatchExpressions',v61,v60]|22106: read-variable['ast',v63,-]|22107: read-property[v63,'left',v62]|22108: \<variable-non-null-undef\>['ast']|22109: read-variable['$filter',v64,-]}" ] 
BB8566 -> BB8568 [tailport=s, headport=n, headlabel="      8568"]
BB8566 -> BB8654 [tailport=s, headport=n, color=gray]
BB8567 [shape=record label="{22110: read-variable['AST',v78,-]|22111: read-property[v78,'ConditionalExpression',v4]|22112: \<variable-non-null-undef\>['AST']|22113: ==[v2,v4,v5]|22114: if[v5](true-block:8579,false-block:8580)}" ] 
BB8567 -> BB8579 [tailport=s, headport=n, headlabel="      8579"]
BB8567 -> BB8580 [tailport=s, headport=n, headlabel="      8580"]
BB8567 -> BB8654 [tailport=s, headport=n, color=gray]
BB8568 [shape=record label="{22115: call-findConstantAndWatchExpressions [v60,v61,v62,v64,-]*}" ] 
BB8568 -> BB8569 [tailport=s, headport=n, headlabel="      8569"]
BB8568 -> BB8654 [tailport=s, headport=n, color=gray]
BB8569 [shape=record label="{22116: read-variable['findConstantAndWatchExpressions',v66,v65]|22117: read-variable['ast',v68,-]|22118: read-property[v68,'right',v67]|22119: \<variable-non-null-undef\>['ast']|22120: read-variable['$filter',v69,-]}" ] 
BB8569 -> BB8570 [tailport=s, headport=n, headlabel="      8570"]
BB8569 -> BB8654 [tailport=s, headport=n, color=gray]
BB8570 [shape=record label="{22121: call-findConstantAndWatchExpressions [v65,v66,v67,v69,-]*}" ] 
BB8570 -> BB8571 [tailport=s, headport=n, headlabel="      8571"]
BB8570 -> BB8654 [tailport=s, headport=n, color=gray]
BB8571 [shape=record label="{22122: read-variable['ast',v71,-]|22123: read-variable['ast',v73,-]|22124: read-property[v73,'left',v72]|22125: \<variable-non-null-undef\>['ast']|22126: read-property[v72,'constant',v70]|22127: \<property-non-null-undef\>[v73,'left']|22128: if[v70](true-block:8572,false-block:8573)}" ] 
BB8571 -> BB8573 [tailport=s, headport=n, headlabel="      8573"]
BB8571 -> BB8572 [tailport=s, headport=n, headlabel="      8572"]
BB8571 -> BB8654 [tailport=s, headport=n, color=gray]
BB8572 [shape=record label="{22129: read-variable['ast',v75,-]|22130: read-property[v75,'right',v74]|22131: \<variable-non-null-undef\>['ast']|22132: read-property[v74,'constant',v70]|22133: \<property-non-null-undef\>[v75,'right']}" ] 
BB8572 -> BB8573 [tailport=s, headport=n]
BB8572 -> BB8654 [tailport=s, headport=n, color=gray]
BB8573 [shape=record label="{22134: write-property[v71,'constant',v70]|22135: \<variable-non-null-undef\>['ast']*|22136: read-variable['ast',v75,-]|22137: read-variable['ast',v77,-]|22138: read-property[v77,'constant',v76]|22139: \<variable-non-null-undef\>['ast']|22140: if[v76](true-block:8574,false-block:8575)}" ] 
BB8573 -> BB8574 [tailport=s, headport=n, headlabel="      8574"]
BB8573 -> BB8575 [tailport=s, headport=n, headlabel="      8575"]
BB8573 -> BB8654 [tailport=s, headport=n, color=gray]
BB8574 [shape=record label="{22141: read-variable['Array',v78,-]}" ] 
BB8574 -> BB8576 [tailport=s, headport=n, headlabel="      8576"]
BB8574 -> BB8654 [tailport=s, headport=n, color=gray]
BB8575 [shape=record label="{22142: read-variable['Array',v78,-]|22143: read-variable['ast',v79,-]}" ] 
BB8575 -> BB8577 [tailport=s, headport=n, headlabel="      8577"]
BB8575 -> BB8654 [tailport=s, headport=n, color=gray]
BB8576 [shape=record label="{22144: construct [-,v78,v74]}" ] 
BB8576 -> BB8578 [tailport=s, headport=n, headlabel="      8578"]
BB8576 -> BB8654 [tailport=s, headport=n, color=gray]
BB8577 [shape=record label="{22145: construct [-,v78,v79,v74]}" ] 
BB8577 -> BB8578 [tailport=s, headport=n]
BB8577 -> BB8654 [tailport=s, headport=n, color=gray]
BB8578 [shape=record label="{22146: write-property[v75,'toWatch',v74]|22147: \<variable-non-null-undef\>['ast']*}" ] 
BB8578 -> BB8653 [tailport=s, headport=n]
BB8578 -> BB8654 [tailport=s, headport=n, color=gray]
BB8579 [shape=record label="{22148: read-variable['findConstantAndWatchExpressions',v80,v79]|22149: read-variable['ast',v82,-]|22150: read-property[v82,'test',v81]|22151: \<variable-non-null-undef\>['ast']|22152: read-variable['$filter',v83,-]}" ] 
BB8579 -> BB8581 [tailport=s, headport=n, headlabel="      8581"]
BB8579 -> BB8654 [tailport=s, headport=n, color=gray]
BB8580 [shape=record label="{22153: read-variable['AST',v102,-]|22154: read-property[v102,'Identifier',v4]|22155: \<variable-non-null-undef\>['AST']|22156: ==[v2,v4,v5]|22157: if[v5](true-block:8595,false-block:8596)}" ] 
BB8580 -> BB8595 [tailport=s, headport=n, headlabel="      8595"]
BB8580 -> BB8596 [tailport=s, headport=n, headlabel="      8596"]
BB8580 -> BB8654 [tailport=s, headport=n, color=gray]
BB8581 [shape=record label="{22158: call-findConstantAndWatchExpressions [v79,v80,v81,v83,-]*}" ] 
BB8581 -> BB8582 [tailport=s, headport=n, headlabel="      8582"]
BB8581 -> BB8654 [tailport=s, headport=n, color=gray]
BB8582 [shape=record label="{22159: read-variable['findConstantAndWatchExpressions',v85,v84]|22160: read-variable['ast',v87,-]|22161: read-property[v87,'alternate',v86]|22162: \<variable-non-null-undef\>['ast']|22163: read-variable['$filter',v88,-]}" ] 
BB8582 -> BB8583 [tailport=s, headport=n, headlabel="      8583"]
BB8582 -> BB8654 [tailport=s, headport=n, color=gray]
BB8583 [shape=record label="{22164: call-findConstantAndWatchExpressions [v84,v85,v86,v88,-]*}" ] 
BB8583 -> BB8584 [tailport=s, headport=n, headlabel="      8584"]
BB8583 -> BB8654 [tailport=s, headport=n, color=gray]
BB8584 [shape=record label="{22165: read-variable['findConstantAndWatchExpressions',v90,v89]|22166: read-variable['ast',v92,-]|22167: read-property[v92,'consequent',v91]|22168: \<variable-non-null-undef\>['ast']|22169: read-variable['$filter',v93,-]}" ] 
BB8584 -> BB8585 [tailport=s, headport=n, headlabel="      8585"]
BB8584 -> BB8654 [tailport=s, headport=n, color=gray]
BB8585 [shape=record label="{22170: call-findConstantAndWatchExpressions [v89,v90,v91,v93,-]*}" ] 
BB8585 -> BB8586 [tailport=s, headport=n, headlabel="      8586"]
BB8585 -> BB8654 [tailport=s, headport=n, color=gray]
BB8586 [shape=record label="{22171: read-variable['ast',v95,-]|22172: read-variable['ast',v97,-]|22173: read-property[v97,'test',v96]|22174: \<variable-non-null-undef\>['ast']|22175: read-property[v96,'constant',v94]|22176: \<property-non-null-undef\>[v97,'test']|22177: if[v94](true-block:8587,false-block:8589)}" ] 
BB8586 -> BB8589 [tailport=s, headport=n, headlabel="      8589"]
BB8586 -> BB8587 [tailport=s, headport=n, headlabel="      8587"]
BB8586 -> BB8654 [tailport=s, headport=n, color=gray]
BB8587 [shape=record label="{22178: read-variable['ast',v99,-]|22179: read-property[v99,'alternate',v98]|22180: \<variable-non-null-undef\>['ast']|22181: read-property[v98,'constant',v94]|22182: \<property-non-null-undef\>[v99,'alternate']|22183: if[v94](true-block:8588,false-block:8589)}" ] 
BB8587 -> BB8589 [tailport=s, headport=n]
BB8587 -> BB8588 [tailport=s, headport=n, headlabel="      8588"]
BB8587 -> BB8654 [tailport=s, headport=n, color=gray]
BB8588 [shape=record label="{22184: read-variable['ast',v101,-]|22185: read-property[v101,'consequent',v100]|22186: \<variable-non-null-undef\>['ast']|22187: read-property[v100,'constant',v94]|22188: \<property-non-null-undef\>[v101,'consequent']}" ] 
BB8588 -> BB8589 [tailport=s, headport=n]
BB8588 -> BB8654 [tailport=s, headport=n, color=gray]
BB8589 [shape=record label="{22189: write-property[v95,'constant',v94]|22190: \<variable-non-null-undef\>['ast']*|22191: read-variable['ast',v99,-]|22192: read-variable['ast',v101,-]|22193: read-property[v101,'constant',v100]|22194: \<variable-non-null-undef\>['ast']|22195: if[v100](true-block:8590,false-block:8591)}" ] 
BB8589 -> BB8590 [tailport=s, headport=n, headlabel="      8590"]
BB8589 -> BB8591 [tailport=s, headport=n, headlabel="      8591"]
BB8589 -> BB8654 [tailport=s, headport=n, color=gray]
BB8590 [shape=record label="{22196: read-variable['Array',v102,-]}" ] 
BB8590 -> BB8592 [tailport=s, headport=n, headlabel="      8592"]
BB8590 -> BB8654 [tailport=s, headport=n, color=gray]
BB8591 [shape=record label="{22197: read-variable['Array',v102,-]|22198: read-variable['ast',v103,-]}" ] 
BB8591 -> BB8593 [tailport=s, headport=n, headlabel="      8593"]
BB8591 -> BB8654 [tailport=s, headport=n, color=gray]
BB8592 [shape=record label="{22199: construct [-,v102,v98]}" ] 
BB8592 -> BB8594 [tailport=s, headport=n, headlabel="      8594"]
BB8592 -> BB8654 [tailport=s, headport=n, color=gray]
BB8593 [shape=record label="{22200: construct [-,v102,v103,v98]}" ] 
BB8593 -> BB8594 [tailport=s, headport=n]
BB8593 -> BB8654 [tailport=s, headport=n, color=gray]
BB8594 [shape=record label="{22201: write-property[v99,'toWatch',v98]|22202: \<variable-non-null-undef\>['ast']*}" ] 
BB8594 -> BB8653 [tailport=s, headport=n]
BB8594 -> BB8654 [tailport=s, headport=n, color=gray]
BB8595 [shape=record label="{22203: read-variable['ast',v104,-]|22204: constant[false,v103]|22205: write-property[v104,'constant',v103]|22206: \<variable-non-null-undef\>['ast']*|22207: read-variable['ast',v106,-]|22208: read-variable['Array',v107,-]|22209: read-variable['ast',v108,-]}" ] 
BB8595 -> BB8597 [tailport=s, headport=n, headlabel="      8597"]
BB8595 -> BB8654 [tailport=s, headport=n, color=gray]
BB8596 [shape=record label="{22210: read-variable['AST',v109,-]|22211: read-property[v109,'MemberExpression',v4]|22212: \<variable-non-null-undef\>['AST']|22213: ==[v2,v4,v5]|22214: if[v5](true-block:8599,false-block:8600)}" ] 
BB8596 -> BB8599 [tailport=s, headport=n, headlabel="      8599"]
BB8596 -> BB8600 [tailport=s, headport=n, headlabel="      8600"]
BB8596 -> BB8654 [tailport=s, headport=n, color=gray]
BB8597 [shape=record label="{22215: construct [-,v107,v108,v105]}" ] 
BB8597 -> BB8598 [tailport=s, headport=n, headlabel="      8598"]
BB8597 -> BB8654 [tailport=s, headport=n, color=gray]
BB8598 [shape=record label="{22216: write-property[v106,'toWatch',v105]|22217: \<variable-non-null-undef\>['ast']*}" ] 
BB8598 -> BB8653 [tailport=s, headport=n]
BB8598 -> BB8654 [tailport=s, headport=n, color=gray]
BB8599 [shape=record label="{22218: read-variable['findConstantAndWatchExpressions',v111,v110]|22219: read-variable['ast',v113,-]|22220: read-property[v113,'object',v112]|22221: \<variable-non-null-undef\>['ast']|22222: read-variable['$filter',v114,-]}" ] 
BB8599 -> BB8601 [tailport=s, headport=n, headlabel="      8601"]
BB8599 -> BB8654 [tailport=s, headport=n, color=gray]
BB8600 [shape=record label="{22223: read-variable['AST',v125,-]|22224: read-property[v125,'CallExpression',v4]|22225: \<variable-non-null-undef\>['AST']|22226: ==[v2,v4,v5]|22227: if[v5](true-block:8611,false-block:8612)}" ] 
BB8600 -> BB8611 [tailport=s, headport=n, headlabel="      8611"]
BB8600 -> BB8612 [tailport=s, headport=n, headlabel="      8612"]
BB8600 -> BB8654 [tailport=s, headport=n, color=gray]
BB8601 [shape=record label="{22228: call-findConstantAndWatchExpressions [v110,v111,v112,v114,-]*}" ] 
BB8601 -> BB8602 [tailport=s, headport=n, headlabel="      8602"]
BB8601 -> BB8654 [tailport=s, headport=n, color=gray]
BB8602 [shape=record label="{22229: read-variable['ast',v116,-]|22230: read-property[v116,'computed',v115]|22231: \<variable-non-null-undef\>['ast']|22232: if[v115](true-block:8603,false-block:8605)}" ] 
BB8602 -> BB8603 [tailport=s, headport=n, headlabel="      8603"]
BB8602 -> BB8605 [tailport=s, headport=n, headlabel="      8605"]
BB8602 -> BB8654 [tailport=s, headport=n, color=gray]
BB8603 [shape=record label="{22233: read-variable['findConstantAndWatchExpressions',v118,v117]|22234: read-variable['ast',v120,-]|22235: read-property[v120,'property',v119]|22236: \<variable-non-null-undef\>['ast']|22237: read-variable['$filter',v121,-]}" ] 
BB8603 -> BB8604 [tailport=s, headport=n, headlabel="      8604"]
BB8603 -> BB8654 [tailport=s, headport=n, color=gray]
BB8604 [shape=record label="{22238: call-findConstantAndWatchExpressions [v117,v118,v119,v121,-]*}" ] 
BB8604 -> BB8605 [tailport=s, headport=n]
BB8604 -> BB8654 [tailport=s, headport=n, color=gray]
BB8605 [shape=record label="{22239: read-variable['ast',v118,-]|22240: read-variable['ast',v120,-]|22241: read-property[v120,'object',v119]|22242: \<variable-non-null-undef\>['ast']|22243: read-property[v119,'constant',v117]|22244: \<property-non-null-undef\>[v120,'object']|22245: if[v117](true-block:8606,false-block:8608)}" ] 
BB8605 -> BB8608 [tailport=s, headport=n, headlabel="      8608"]
BB8605 -> BB8606 [tailport=s, headport=n, headlabel="      8606"]
BB8605 -> BB8654 [tailport=s, headport=n, color=gray]
BB8606 [shape=record label="{22246: read-variable['ast',v122,-]|22247: read-property[v122,'computed',v121]|22248: \<variable-non-null-undef\>['ast']|22249: ![v121,v117]|22250: if[v117](true-block:8608,false-block:8607)}" ] 
BB8606 -> BB8608 [tailport=s, headport=n]
BB8606 -> BB8607 [tailport=s, headport=n, headlabel="      8607"]
BB8606 -> BB8654 [tailport=s, headport=n, color=gray]
BB8607 [shape=record label="{22251: read-variable['ast',v122,-]|22252: read-property[v122,'property',v121]|22253: \<variable-non-null-undef\>['ast']|22254: read-property[v121,'constant',v117]|22255: \<property-non-null-undef\>[v122,'property']}" ] 
BB8607 -> BB8608 [tailport=s, headport=n]
BB8607 -> BB8654 [tailport=s, headport=n, color=gray]
BB8608 [shape=record label="{22256: write-property[v118,'constant',v117]|22257: \<variable-non-null-undef\>['ast']*|22258: read-variable['ast',v122,-]|22259: read-variable['Array',v123,-]|22260: read-variable['ast',v124,-]}" ] 
BB8608 -> BB8609 [tailport=s, headport=n, headlabel="      8609"]
BB8608 -> BB8654 [tailport=s, headport=n, color=gray]
BB8609 [shape=record label="{22261: construct [-,v123,v124,v121]}" ] 
BB8609 -> BB8610 [tailport=s, headport=n, headlabel="      8610"]
BB8609 -> BB8654 [tailport=s, headport=n, color=gray]
BB8610 [shape=record label="{22262: write-property[v122,'toWatch',v121]|22263: \<variable-non-null-undef\>['ast']*}" ] 
BB8610 -> BB8653 [tailport=s, headport=n]
BB8610 -> BB8654 [tailport=s, headport=n, color=gray]
BB8611 [shape=record label="{22264: read-variable['ast',v128,-]|22265: read-property[v128,'filter',v127]|22266: \<variable-non-null-undef\>['ast']|22267: if[v127](true-block:8613,false-block:8614)}" ] 
BB8611 -> BB8613 [tailport=s, headport=n, headlabel="      8613"]
BB8611 -> BB8614 [tailport=s, headport=n, headlabel="      8614"]
BB8611 -> BB8654 [tailport=s, headport=n, color=gray]
BB8612 [shape=record label="{22268: read-variable['AST',v142,-]|22269: read-property[v142,'AssignmentExpression',v4]|22270: \<variable-non-null-undef\>['AST']|22271: ==[v2,v4,v5]|22272: if[v5](true-block:8628,false-block:8629)}" ] 
BB8612 -> BB8628 [tailport=s, headport=n, headlabel="      8628"]
BB8612 -> BB8629 [tailport=s, headport=n, headlabel="      8629"]
BB8612 -> BB8654 [tailport=s, headport=n, color=gray]
BB8613 [shape=record label="{22273: read-variable['isStateless',v130,v129]|22274: read-variable['$filter',v131,-]|22275: read-variable['ast',v134,-]|22276: read-property[v134,'callee',v133]|22277: \<variable-non-null-undef\>['ast']|22278: read-property[v133,'name',v132]|22279: \<property-non-null-undef\>[v134,'callee']}" ] 
BB8613 -> BB8615 [tailport=s, headport=n, headlabel="      8615"]
BB8613 -> BB8654 [tailport=s, headport=n, color=gray]
BB8614 [shape=record label="{22280: constant[false,v126]}" ] 
BB8614 -> BB8616 [tailport=s, headport=n, headlabel="      8616"]
BB8615 [shape=record label="{22281: call-isStateless [v129,v130,v131,v132,v126]}" ] 
BB8615 -> BB8616 [tailport=s, headport=n]
BB8615 -> BB8654 [tailport=s, headport=n, color=gray]
BB8616 [shape=record label="{22282: write-variable[v126,'allConstants']*|22283: read-variable['Array',v130,-]}" ] 
BB8616 -> BB8617 [tailport=s, headport=n, headlabel="      8617"]
BB8616 -> BB8654 [tailport=s, headport=n, color=gray]
BB8617 [shape=record label="{22284: construct [-,v130,v129]}" ] 
BB8617 -> BB8618 [tailport=s, headport=n, headlabel="      8618"]
BB8617 -> BB8654 [tailport=s, headport=n, color=gray]
BB8618 [shape=record label="{22285: write-variable[v129,'argsToWatch']*|22286: read-variable['forEach',v132,v131]|22287: read-variable['ast',v134,-]|22288: read-property[v134,'arguments',v133]|22289: \<variable-non-null-undef\>['ast']|22290: function-expr[function ( expr ),v135]}" ] 
BB8618 -> BB8619 [tailport=s, headport=n, headlabel="      8619"]
BB8618 -> BB8654 [tailport=s, headport=n, color=gray]
BB8619 [shape=record label="{22291: call-forEach [v131,v132,v133,v135,-]*}" ] 
BB8619 -> BB8620 [tailport=s, headport=n, headlabel="      8620"]
BB8619 -> BB8654 [tailport=s, headport=n, color=gray]
BB8620 [shape=record label="{22292: read-variable['ast',v137,-]|22293: read-variable['allConstants',v136,-]|22294: write-property[v137,'constant',v136]|22295: \<variable-non-null-undef\>['ast']*|22296: read-variable['ast',v139,-]|22297: read-variable['ast',v141,-]|22298: read-property[v141,'filter',v140]|22299: \<variable-non-null-undef\>['ast']|22300: if[v140](true-block:8621,false-block:8623)}" ] 
BB8620 -> BB8623 [tailport=s, headport=n, headlabel="      8623"]
BB8620 -> BB8621 [tailport=s, headport=n, headlabel="      8621"]
BB8620 -> BB8654 [tailport=s, headport=n, color=gray]
BB8621 [shape=record label="{22301: read-variable['isStateless',v143,v142]|22302: read-variable['$filter',v144,-]|22303: read-variable['ast',v147,-]|22304: read-property[v147,'callee',v146]|22305: \<variable-non-null-undef\>['ast']|22306: read-property[v146,'name',v145]|22307: \<property-non-null-undef\>[v147,'callee']}" ] 
BB8621 -> BB8622 [tailport=s, headport=n, headlabel="      8622"]
BB8621 -> BB8654 [tailport=s, headport=n, color=gray]
BB8622 [shape=record label="{22308: call-isStateless [v142,v143,v144,v145,v140]}" ] 
BB8622 -> BB8623 [tailport=s, headport=n]
BB8622 -> BB8654 [tailport=s, headport=n, color=gray]
BB8623 [shape=record label="{22309: if[v140](true-block:8624,false-block:8625)}" ] 
BB8623 -> BB8624 [tailport=s, headport=n, headlabel="      8624"]
BB8623 -> BB8625 [tailport=s, headport=n, headlabel="      8625"]
BB8624 [shape=record label="{22310: read-variable['argsToWatch',v138,-]}" ] 
BB8624 -> BB8627 [tailport=s, headport=n, headlabel="      8627"]
BB8624 -> BB8654 [tailport=s, headport=n, color=gray]
BB8625 [shape=record label="{22311: read-variable['Array',v142,-]|22312: read-variable['ast',v143,-]}" ] 
BB8625 -> BB8626 [tailport=s, headport=n, headlabel="      8626"]
BB8625 -> BB8654 [tailport=s, headport=n, color=gray]
BB8626 [shape=record label="{22313: construct [-,v142,v143,v138]}" ] 
BB8626 -> BB8627 [tailport=s, headport=n]
BB8626 -> BB8654 [tailport=s, headport=n, color=gray]
BB8627 [shape=record label="{22314: write-property[v139,'toWatch',v138]|22315: \<variable-non-null-undef\>['ast']*}" ] 
BB8627 -> BB8653 [tailport=s, headport=n]
BB8627 -> BB8654 [tailport=s, headport=n, color=gray]
BB8628 [shape=record label="{22316: read-variable['findConstantAndWatchExpressions',v144,v143]|22317: read-variable['ast',v146,-]|22318: read-property[v146,'left',v145]|22319: \<variable-non-null-undef\>['ast']|22320: read-variable['$filter',v147,-]}" ] 
BB8628 -> BB8630 [tailport=s, headport=n, headlabel="      8630"]
BB8628 -> BB8654 [tailport=s, headport=n, color=gray]
BB8629 [shape=record label="{22321: read-variable['AST',v161,-]|22322: read-property[v161,'ArrayExpression',v4]|22323: \<variable-non-null-undef\>['AST']|22324: ==[v2,v4,v5]|22325: if[v5](true-block:8638,false-block:8639)}" ] 
BB8629 -> BB8638 [tailport=s, headport=n, headlabel="      8638"]
BB8629 -> BB8639 [tailport=s, headport=n, headlabel="      8639"]
BB8629 -> BB8654 [tailport=s, headport=n, color=gray]
BB8630 [shape=record label="{22326: call-findConstantAndWatchExpressions [v143,v144,v145,v147,-]*}" ] 
BB8630 -> BB8631 [tailport=s, headport=n, headlabel="      8631"]
BB8630 -> BB8654 [tailport=s, headport=n, color=gray]
BB8631 [shape=record label="{22327: read-variable['findConstantAndWatchExpressions',v149,v148]|22328: read-variable['ast',v151,-]|22329: read-property[v151,'right',v150]|22330: \<variable-non-null-undef\>['ast']|22331: read-variable['$filter',v152,-]}" ] 
BB8631 -> BB8632 [tailport=s, headport=n, headlabel="      8632"]
BB8631 -> BB8654 [tailport=s, headport=n, color=gray]
BB8632 [shape=record label="{22332: call-findConstantAndWatchExpressions [v148,v149,v150,v152,-]*}" ] 
BB8632 -> BB8633 [tailport=s, headport=n, headlabel="      8633"]
BB8632 -> BB8654 [tailport=s, headport=n, color=gray]
BB8633 [shape=record label="{22333: read-variable['ast',v154,-]|22334: read-variable['ast',v156,-]|22335: read-property[v156,'left',v155]|22336: \<variable-non-null-undef\>['ast']|22337: read-property[v155,'constant',v153]|22338: \<property-non-null-undef\>[v156,'left']|22339: if[v153](true-block:8634,false-block:8635)}" ] 
BB8633 -> BB8635 [tailport=s, headport=n, headlabel="      8635"]
BB8633 -> BB8634 [tailport=s, headport=n, headlabel="      8634"]
BB8633 -> BB8654 [tailport=s, headport=n, color=gray]
BB8634 [shape=record label="{22340: read-variable['ast',v158,-]|22341: read-property[v158,'right',v157]|22342: \<variable-non-null-undef\>['ast']|22343: read-property[v157,'constant',v153]|22344: \<property-non-null-undef\>[v158,'right']}" ] 
BB8634 -> BB8635 [tailport=s, headport=n]
BB8634 -> BB8654 [tailport=s, headport=n, color=gray]
BB8635 [shape=record label="{22345: write-property[v154,'constant',v153]|22346: \<variable-non-null-undef\>['ast']*|22347: read-variable['ast',v158,-]|22348: read-variable['Array',v159,-]|22349: read-variable['ast',v160,-]}" ] 
BB8635 -> BB8636 [tailport=s, headport=n, headlabel="      8636"]
BB8635 -> BB8654 [tailport=s, headport=n, color=gray]
BB8636 [shape=record label="{22350: construct [-,v159,v160,v157]}" ] 
BB8636 -> BB8637 [tailport=s, headport=n, headlabel="      8637"]
BB8636 -> BB8654 [tailport=s, headport=n, color=gray]
BB8637 [shape=record label="{22351: write-property[v158,'toWatch',v157]|22352: \<variable-non-null-undef\>['ast']*}" ] 
BB8637 -> BB8653 [tailport=s, headport=n]
BB8637 -> BB8654 [tailport=s, headport=n, color=gray]
BB8638 [shape=record label="{22353: constant[true,v162]|22354: write-variable[v162,'allConstants']*|22355: read-variable['Array',v164,-]}" ] 
BB8638 -> BB8640 [tailport=s, headport=n, headlabel="      8640"]
BB8638 -> BB8654 [tailport=s, headport=n, color=gray]
BB8639 [shape=record label="{22356: read-variable['AST',v174,-]|22357: read-property[v174,'ObjectExpression',v4]|22358: \<variable-non-null-undef\>['AST']|22359: ==[v2,v4,v5]|22360: if[v5](true-block:8644,false-block:8645)}" ] 
BB8639 -> BB8644 [tailport=s, headport=n, headlabel="      8644"]
BB8639 -> BB8645 [tailport=s, headport=n, headlabel="      8645"]
BB8639 -> BB8654 [tailport=s, headport=n, color=gray]
BB8640 [shape=record label="{22361: construct [-,v164,v163]}" ] 
BB8640 -> BB8641 [tailport=s, headport=n, headlabel="      8641"]
BB8640 -> BB8654 [tailport=s, headport=n, color=gray]
BB8641 [shape=record label="{22362: write-variable[v163,'argsToWatch']*|22363: read-variable['forEach',v166,v165]|22364: read-variable['ast',v168,-]|22365: read-property[v168,'elements',v167]|22366: \<variable-non-null-undef\>['ast']|22367: function-expr[function ( expr ),v169]}" ] 
BB8641 -> BB8642 [tailport=s, headport=n, headlabel="      8642"]
BB8641 -> BB8654 [tailport=s, headport=n, color=gray]
BB8642 [shape=record label="{22368: call-forEach [v165,v166,v167,v169,-]*}" ] 
BB8642 -> BB8643 [tailport=s, headport=n, headlabel="      8643"]
BB8642 -> BB8654 [tailport=s, headport=n, color=gray]
BB8643 [shape=record label="{22369: read-variable['ast',v171,-]|22370: read-variable['allConstants',v170,-]|22371: write-property[v171,'constant',v170]|22372: \<variable-non-null-undef\>['ast']*|22373: read-variable['ast',v173,-]|22374: read-variable['argsToWatch',v172,-]|22375: write-property[v173,'toWatch',v172]|22376: \<variable-non-null-undef\>['ast']*}" ] 
BB8643 -> BB8653 [tailport=s, headport=n]
BB8643 -> BB8654 [tailport=s, headport=n, color=gray]
BB8644 [shape=record label="{22377: constant[true,v175]|22378: write-variable[v175,'allConstants']*|22379: read-variable['Array',v177,-]}" ] 
BB8644 -> BB8646 [tailport=s, headport=n, headlabel="      8646"]
BB8644 -> BB8654 [tailport=s, headport=n, color=gray]
BB8645 [shape=record label="{22380: read-variable['AST',v187,-]|22381: read-property[v187,'ThisExpression',v4]|22382: \<variable-non-null-undef\>['AST']|22383: ==[v2,v4,v5]|22384: if[v5](true-block:8650,false-block:8653)}" ] 
BB8645 -> BB8650 [tailport=s, headport=n, headlabel="      8650"]
BB8645 -> BB8653 [tailport=s, headport=n]
BB8645 -> BB8654 [tailport=s, headport=n, color=gray]
BB8646 [shape=record label="{22385: construct [-,v177,v176]}" ] 
BB8646 -> BB8647 [tailport=s, headport=n, headlabel="      8647"]
BB8646 -> BB8654 [tailport=s, headport=n, color=gray]
BB8647 [shape=record label="{22386: write-variable[v176,'argsToWatch']*|22387: read-variable['forEach',v179,v178]|22388: read-variable['ast',v181,-]|22389: read-property[v181,'properties',v180]|22390: \<variable-non-null-undef\>['ast']|22391: function-expr[function ( property ),v182]}" ] 
BB8647 -> BB8648 [tailport=s, headport=n, headlabel="      8648"]
BB8647 -> BB8654 [tailport=s, headport=n, color=gray]
BB8648 [shape=record label="{22392: call-forEach [v178,v179,v180,v182,-]*}" ] 
BB8648 -> BB8649 [tailport=s, headport=n, headlabel="      8649"]
BB8648 -> BB8654 [tailport=s, headport=n, color=gray]
BB8649 [shape=record label="{22393: read-variable['ast',v184,-]|22394: read-variable['allConstants',v183,-]|22395: write-property[v184,'constant',v183]|22396: \<variable-non-null-undef\>['ast']*|22397: read-variable['ast',v186,-]|22398: read-variable['argsToWatch',v185,-]|22399: write-property[v186,'toWatch',v185]|22400: \<variable-non-null-undef\>['ast']*}" ] 
BB8649 -> BB8653 [tailport=s, headport=n]
BB8649 -> BB8654 [tailport=s, headport=n, color=gray]
BB8650 [shape=record label="{22401: read-variable['ast',v189,-]|22402: constant[false,v188]|22403: write-property[v189,'constant',v188]|22404: \<variable-non-null-undef\>['ast']*|22405: read-variable['ast',v191,-]|22406: read-variable['Array',v192,-]}" ] 
BB8650 -> BB8651 [tailport=s, headport=n, headlabel="      8651"]
BB8650 -> BB8654 [tailport=s, headport=n, color=gray]
BB8651 [shape=record label="{22407: construct [-,v192,v190]}" ] 
BB8651 -> BB8652 [tailport=s, headport=n, headlabel="      8652"]
BB8651 -> BB8654 [tailport=s, headport=n, color=gray]
BB8652 [shape=record label="{22408: write-property[v191,'toWatch',v190]|22409: \<variable-non-null-undef\>['ast']*}" ] 
BB8652 -> BB8653 [tailport=s, headport=n]
BB8652 -> BB8654 [tailport=s, headport=n, color=gray]
BB8653 [shape=record label="{22410: return[v1]}" ] 
BB8654 [shape=record label="{22411: exceptional-return}" ] 
//#$~ 13060
}
