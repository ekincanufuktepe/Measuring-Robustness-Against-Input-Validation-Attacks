digraph {
rankdir="TD"
BB_entry1420[shape=none,label=""];
BB_entry1420 -> BB16550 [tailport=s, headport=n, headlabel="    16550"]
BB16550 [shape=record label="{56239: constant[undefined,v1]|56240: vardecl['willChange']|56241: vardecl['didChange']|56242: vardecl['hasObservers']}" ] 
BB16550 -> BB16551 [tailport=s, headport=n, headlabel="      16551"]
BB16551 [shape=record label="{56243: read-variable['opts',v2,-]|56244: if[v2](true-block:16552,false-block:16553)}" ] 
BB16551 -> BB16553 [tailport=s, headport=n, headlabel="      16553"]
BB16551 -> BB16552 [tailport=s, headport=n, headlabel="      16552"]
BB16551 -> BB16573 [tailport=s, headport=n, color=gray, headlabel="      16573"]
BB16552 [shape=record label="{56245: read-variable['opts',v3,-]|56246: read-property[v3,'willChange',v2]|56247: \<variable-non-null-undef\>['opts']}" ] 
BB16552 -> BB16553 [tailport=s, headport=n]
BB16552 -> BB16573 [tailport=s, headport=n, color=gray]
BB16553 [shape=record label="{56248: if[v2](true-block:16555,false-block:16554)}" ] 
BB16553 -> BB16555 [tailport=s, headport=n, headlabel="      16555"]
BB16553 -> BB16554 [tailport=s, headport=n, headlabel="      16554"]
BB16554 [shape=record label="{56249: constant[\"enumerableWillChange\",v2]}" ] 
BB16554 -> BB16555 [tailport=s, headport=n]
BB16555 [shape=record label="{56250: write-variable[v2,'willChange']*|56251: read-variable['opts',v3,-]|56252: if[v3](true-block:16556,false-block:16557)}" ] 
BB16555 -> BB16557 [tailport=s, headport=n, headlabel="      16557"]
BB16555 -> BB16556 [tailport=s, headport=n, headlabel="      16556"]
BB16555 -> BB16573 [tailport=s, headport=n, color=gray]
BB16556 [shape=record label="{56253: read-variable['opts',v4,-]|56254: read-property[v4,'didChange',v3]|56255: \<variable-non-null-undef\>['opts']}" ] 
BB16556 -> BB16557 [tailport=s, headport=n]
BB16556 -> BB16573 [tailport=s, headport=n, color=gray]
BB16557 [shape=record label="{56256: if[v3](true-block:16559,false-block:16558)}" ] 
BB16557 -> BB16559 [tailport=s, headport=n, headlabel="      16559"]
BB16557 -> BB16558 [tailport=s, headport=n, headlabel="      16558"]
BB16558 [shape=record label="{56257: constant[\"enumerableDidChange\",v3]}" ] 
BB16558 -> BB16559 [tailport=s, headport=n]
BB16559 [shape=record label="{56258: write-variable[v3,'didChange']*|56259: read-variable['get',v6,v5]|56260: read-variable['this',v7,-]|56261: constant[\"hasEnumerableObservers\",v8]}" ] 
BB16559 -> BB16560 [tailport=s, headport=n, headlabel="      16560"]
BB16559 -> BB16573 [tailport=s, headport=n, color=gray]
BB16560 [shape=record label="{56262: call-get [v5,v6,v7,v8,v4]}" ] 
BB16560 -> BB16561 [tailport=s, headport=n, headlabel="      16561"]
BB16560 -> BB16573 [tailport=s, headport=n, color=gray]
BB16561 [shape=record label="{56263: write-variable[v4,'hasObservers']*|56264: read-variable['hasObservers',v10,-]|56265: ![v10,v9]|56266: if[v9](true-block:16562,false-block:16564)}" ] 
BB16561 -> BB16562 [tailport=s, headport=n, headlabel="      16562"]
BB16561 -> BB16564 [tailport=s, headport=n, headlabel="      16564"]
BB16561 -> BB16573 [tailport=s, headport=n, color=gray]
BB16562 [shape=record label="{56267: read-variable['propertyWillChange',v12,v11]|56268: read-variable['this',v13,-]|56269: constant[\"hasEnumerableObservers\",v14]}" ] 
BB16562 -> BB16563 [tailport=s, headport=n, headlabel="      16563"]
BB16562 -> BB16573 [tailport=s, headport=n, color=gray]
BB16563 [shape=record label="{56270: call-propertyWillChange [v11,v12,v13,v14,-]*}" ] 
BB16563 -> BB16564 [tailport=s, headport=n]
BB16563 -> BB16573 [tailport=s, headport=n, color=gray]
BB16564 [shape=record label="{56271: read-variable['addListener',v12,v11]|56272: read-variable['this',v13,-]|56273: constant[\"@enumerable:before\",v14]|56274: read-variable['target',v15,-]|56275: read-variable['willChange',v16,-]}" ] 
BB16564 -> BB16565 [tailport=s, headport=n, headlabel="      16565"]
BB16564 -> BB16573 [tailport=s, headport=n, color=gray]
BB16565 [shape=record label="{56276: call-addListener [v11,v12,v13,v14,v15,v16,-]*}" ] 
BB16565 -> BB16566 [tailport=s, headport=n, headlabel="      16566"]
BB16565 -> BB16573 [tailport=s, headport=n, color=gray]
BB16566 [shape=record label="{56277: read-variable['addListener',v18,v17]|56278: read-variable['this',v19,-]|56279: constant[\"@enumerable:change\",v20]|56280: read-variable['target',v21,-]|56281: read-variable['didChange',v22,-]}" ] 
BB16566 -> BB16567 [tailport=s, headport=n, headlabel="      16567"]
BB16566 -> BB16573 [tailport=s, headport=n, color=gray]
BB16567 [shape=record label="{56282: call-addListener [v17,v18,v19,v20,v21,v22,-]*}" ] 
BB16567 -> BB16568 [tailport=s, headport=n, headlabel="      16568"]
BB16567 -> BB16573 [tailport=s, headport=n, color=gray]
BB16568 [shape=record label="{56283: read-variable['hasObservers',v24,-]|56284: ![v24,v23]|56285: if[v23](true-block:16569,false-block:16571)}" ] 
BB16568 -> BB16569 [tailport=s, headport=n, headlabel="      16569"]
BB16568 -> BB16571 [tailport=s, headport=n, headlabel="      16571"]
BB16568 -> BB16573 [tailport=s, headport=n, color=gray]
BB16569 [shape=record label="{56286: read-variable['propertyDidChange',v26,v25]|56287: read-variable['this',v27,-]|56288: constant[\"hasEnumerableObservers\",v28]}" ] 
BB16569 -> BB16570 [tailport=s, headport=n, headlabel="      16570"]
BB16569 -> BB16573 [tailport=s, headport=n, color=gray]
BB16570 [shape=record label="{56289: call-propertyDidChange [v25,v26,v27,v28,-]*}" ] 
BB16570 -> BB16571 [tailport=s, headport=n]
BB16570 -> BB16573 [tailport=s, headport=n, color=gray]
BB16571 [shape=record label="{56290: read-variable['this',v1,-]}" ] 
BB16571 -> BB16572 [tailport=s, headport=n, headlabel="      16572"]
BB16571 -> BB16573 [tailport=s, headport=n, color=gray]
BB16572 [shape=record label="{56291: return[v1]}" ] 
BB16573 [shape=record label="{56292: exceptional-return}" ] 
//#$~ 31053
}
