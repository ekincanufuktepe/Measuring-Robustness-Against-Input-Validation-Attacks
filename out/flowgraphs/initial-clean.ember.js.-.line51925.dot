digraph {
rankdir="TD"
BB_entry2556[shape=none,label=""];
BB_entry2556 -> BB28938 [tailport=s, headport=n, headlabel="    28938"]
BB28938 [shape=record label="{96191: constant[undefined,v1]|96192: vardecl['self']|96193: vardecl['l']|96194: vardecl['args']|96195: vardecl['arg']|96196: vardecl['promiseInput']|96197: vardecl['i']|96198: vardecl['p']|96199: vardecl['promise']}" ] 
BB28938 -> BB28939 [tailport=s, headport=n, headlabel="      28939"]
BB28939 [shape=record label="{96200: read-variable['this',v2,-]|96201: write-variable[v2,'self']*|96202: read-variable['arguments',v4,-]|96203: read-property[v4,'length',v3]|96204: \<variable-non-null-undef\>['arguments']|96205: write-variable[v3,'l']*|96206: read-variable['Array',v6,-]|96207: read-variable['l',v8,-]|96208: constant[1.0,v9]|96209: +[v8,v9,v7]}" ] 
BB28939 -> BB28940 [tailport=s, headport=n, headlabel="      28940"]
BB28939 -> BB28967 [tailport=s, headport=n, color=gray, headlabel="      28967"]
BB28940 [shape=record label="{96210: construct [-,v6,v7,v5]}" ] 
BB28940 -> BB28941 [tailport=s, headport=n, headlabel="      28941"]
BB28940 -> BB28967 [tailport=s, headport=n, color=gray]
BB28941 [shape=record label="{96211: write-variable[v5,'args']*|96212: constant[false,v10]|96213: write-variable[v10,'promiseInput']*|96214: constant[0.0,v12]|96215: write-variable[v12,'i']*}" ] 
BB28941 -> BB28942 [tailport=s, headport=n, headlabel="      28942"]
BB28942 [shape=record label="{96216: read-variable['i',v13,-]|96217: read-variable['l',v14,-]|96218: \<[v13,v14,v11]|96219: if[v11](true-block:28943,false-block:28944)}" ] 
BB28942 -> BB28943 [tailport=s, headport=n, headlabel="      28943"]
BB28942 -> BB28944 [tailport=s, headport=n, headlabel="      28944"]
BB28942 -> BB28967 [tailport=s, headport=n, color=gray]
BB28943 [shape=record label="{96220: read-variable['arguments',v16,-]|96221: read-variable['i',v17,-]|96222: read-property[v16,v17,v15]|96223: \<variable-non-null-undef\>['arguments']|96224: write-variable[v15,'arg']*|96225: read-variable['promiseInput',v19,-]|96226: ![v19,v18]|96227: if[v18](true-block:28945,false-block:28959)}" ] 
BB28943 -> BB28945 [tailport=s, headport=n, headlabel="      28945"]
BB28943 -> BB28959 [tailport=s, headport=n, headlabel="      28959"]
BB28943 -> BB28967 [tailport=s, headport=n, color=gray]
BB28944 [shape=record label="{96228: read-variable['Promise',v16,-]|96229: read-variable['noop',v17,-]}" ] 
BB28944 -> BB28960 [tailport=s, headport=n, headlabel="      28960"]
BB28944 -> BB28967 [tailport=s, headport=n, color=gray]
BB28945 [shape=record label="{96230: read-variable['needsPromiseInput',v22,v21]|96231: read-variable['arg',v23,-]}" ] 
BB28945 -> BB28946 [tailport=s, headport=n, headlabel="      28946"]
BB28945 -> BB28967 [tailport=s, headport=n, color=gray]
BB28946 [shape=record label="{96232: call-needsPromiseInput [v21,v22,v23,v20]}" ] 
BB28946 -> BB28947 [tailport=s, headport=n, headlabel="      28947"]
BB28946 -> BB28967 [tailport=s, headport=n, color=gray]
BB28947 [shape=record label="{96233: write-variable[v20,'promiseInput']*|96234: read-variable['promiseInput',v25,-]|96235: read-variable['GET_THEN_ERROR',v26,-]|96236: ===[v25,v26,v24]|96237: if[v24](true-block:28948,false-block:28949)}" ] 
BB28947 -> BB28948 [tailport=s, headport=n, headlabel="      28948"]
BB28947 -> BB28949 [tailport=s, headport=n, headlabel="      28949"]
BB28947 -> BB28967 [tailport=s, headport=n, color=gray]
BB28948 [shape=record label="{96238: read-variable['Promise',v28,-]|96239: read-variable['noop',v29,-]}" ] 
BB28948 -> BB28950 [tailport=s, headport=n, headlabel="      28950"]
BB28948 -> BB28967 [tailport=s, headport=n, color=gray]
BB28949 [shape=record label="{96240: read-variable['promiseInput',v27,-]|96241: if[v27](true-block:28954,false-block:28955)}" ] 
BB28949 -> BB28955 [tailport=s, headport=n, headlabel="      28955"]
BB28949 -> BB28954 [tailport=s, headport=n, headlabel="      28954"]
BB28949 -> BB28967 [tailport=s, headport=n, color=gray]
BB28950 [shape=record label="{96242: construct [-,v28,v29,v27]}" ] 
BB28950 -> BB28951 [tailport=s, headport=n, headlabel="      28951"]
BB28950 -> BB28967 [tailport=s, headport=n, color=gray]
BB28951 [shape=record label="{96243: write-variable[v27,'p']*|96244: read-variable['reject',v31,v30]|96245: read-variable['p',v32,-]|96246: read-variable['GET_THEN_ERROR',v34,-]|96247: read-property[v34,'value',v33]|96248: \<variable-non-null-undef\>['GET_THEN_ERROR']}" ] 
BB28951 -> BB28952 [tailport=s, headport=n, headlabel="      28952"]
BB28951 -> BB28967 [tailport=s, headport=n, color=gray]
BB28952 [shape=record label="{96249: call-reject [v30,v31,v32,v33,-]*}" ] 
BB28952 -> BB28953 [tailport=s, headport=n, headlabel="      28953"]
BB28952 -> BB28967 [tailport=s, headport=n, color=gray]
BB28953 [shape=record label="{96250: read-variable['p',v1,-]}" ] 
BB28953 -> BB28966 [tailport=s, headport=n, headlabel="      28966"]
BB28953 -> BB28967 [tailport=s, headport=n, color=gray]
BB28954 [shape=record label="{96251: read-variable['promiseInput',v28,-]|96252: constant[true,v29]|96253: !==[v28,v29,v27]}" ] 
BB28954 -> BB28955 [tailport=s, headport=n]
BB28954 -> BB28967 [tailport=s, headport=n, color=gray]
BB28955 [shape=record label="{96254: if[v27](true-block:28956,false-block:28959)}" ] 
BB28955 -> BB28956 [tailport=s, headport=n, headlabel="      28956"]
BB28955 -> BB28959 [tailport=s, headport=n]
BB28956 [shape=record label="{96255: read-variable['wrapThenable',v30,v29]|96256: read-variable['promiseInput',v31,-]|96257: read-variable['arg',v32,-]}" ] 
BB28956 -> BB28957 [tailport=s, headport=n, headlabel="      28957"]
BB28956 -> BB28967 [tailport=s, headport=n, color=gray]
BB28957 [shape=record label="{96258: call-wrapThenable [v29,v30,v31,v32,v28]}" ] 
BB28957 -> BB28958 [tailport=s, headport=n, headlabel="      28958"]
BB28957 -> BB28967 [tailport=s, headport=n, color=gray]
BB28958 [shape=record label="{96259: write-variable[v28,'arg']*}" ] 
BB28958 -> BB28959 [tailport=s, headport=n]
BB28959 [shape=record label="{96260: read-variable['args',v21,-]|96261: read-variable['i',v22,-]|96262: read-variable['arg',v20,-]|96263: write-property[v21,v22,v20]|96264: \<variable-non-null-undef\>['args']*|96265: constant[1.0,v23]|96266: read-variable['i',v24,-]|96267: +[v24,v25]|96268: +[v25,v23,v26]|96269: write-variable[v26,'i']}" ] 
BB28959 -> BB28942 [tailport=s, headport=n]
BB28959 -> BB28967 [tailport=s, headport=n, color=gray]
BB28960 [shape=record label="{96270: construct [-,v16,v17,v15]}" ] 
BB28960 -> BB28961 [tailport=s, headport=n, headlabel="      28961"]
BB28960 -> BB28967 [tailport=s, headport=n, color=gray]
BB28961 [shape=record label="{96271: write-variable[v15,'promise']*|96272: read-variable['args',v19,-]|96273: read-variable['l',v20,-]|96274: function-expr[function ( err val ),v18]|96275: write-property[v19,v20,v18]|96276: \<variable-non-null-undef\>['args']*|96277: read-variable['promiseInput',v21,-]|96278: if[v21](true-block:28962,false-block:28963)}" ] 
BB28961 -> BB28962 [tailport=s, headport=n, headlabel="      28962"]
BB28961 -> BB28963 [tailport=s, headport=n, headlabel="      28963"]
BB28961 -> BB28967 [tailport=s, headport=n, color=gray]
BB28962 [shape=record label="{96279: read-variable['handlePromiseInput',v23,v22]|96280: read-variable['promise',v24,-]|96281: read-variable['args',v25,-]|96282: read-variable['nodeFunc',v26,-]|96283: read-variable['self',v27,-]}" ] 
BB28962 -> BB28964 [tailport=s, headport=n, headlabel="      28964"]
BB28962 -> BB28967 [tailport=s, headport=n, color=gray]
BB28963 [shape=record label="{96284: read-variable['handleValueInput',v23,v22]|96285: read-variable['promise',v24,-]|96286: read-variable['args',v25,-]|96287: read-variable['nodeFunc',v26,-]|96288: read-variable['self',v27,-]}" ] 
BB28963 -> BB28965 [tailport=s, headport=n, headlabel="      28965"]
BB28963 -> BB28967 [tailport=s, headport=n, color=gray]
BB28964 [shape=record label="{96289: call-handlePromiseInput [v22,v23,v24,v25,v26,v27,v1]}" ] 
BB28964 -> BB28966 [tailport=s, headport=n]
BB28964 -> BB28967 [tailport=s, headport=n, color=gray]
BB28965 [shape=record label="{96290: call-handleValueInput [v22,v23,v24,v25,v26,v27,v1]}" ] 
BB28965 -> BB28966 [tailport=s, headport=n]
BB28965 -> BB28967 [tailport=s, headport=n, color=gray]
BB28966 [shape=record label="{96291: return[v1]}" ] 
BB28967 [shape=record label="{96292: exceptional-return}" ] 
//#$~ 51967
}
