digraph {
rankdir="TD"
BB_entry62[shape=none,label=""];
BB_entry62 -> BB885 [tailport=s, headport=n, headlabel="    885"]
BB885 [shape=record label="{2958: constant[undefined,v1]|2959: vardecl['_super']|2960: vardecl['prototype']|2961: vardecl['name']|2962: function-decl[function Class ( ),-]}" ] 
BB885 -> BB886 [tailport=s, headport=n, headlabel="      886"]
BB886 [shape=record label="{2963: read-variable['this',v3,-]|2964: read-property[v3,'prototype',v2]|2965: write-variable[v2,'_super']*|2966: constant[true,v4]|2967: write-variable[v4,'initializing']*|2968: read-variable['this',v6,-]}" ] 
BB886 -> BB887 [tailport=s, headport=n, headlabel="      887"]
BB886 -> BB903 [tailport=s, headport=n, color=gray, headlabel="      903"]
BB887 [shape=record label="{2969: construct [-,v6,v5]}" ] 
BB887 -> BB888 [tailport=s, headport=n, headlabel="      888"]
BB887 -> BB903 [tailport=s, headport=n, color=gray]
BB888 [shape=record label="{2970: write-variable[v5,'prototype']*|2971: constant[false,v7]|2972: write-variable[v7,'initializing']*|2973: read-variable['prop',v9,-]}" ] 
BB888 -> BB889 [tailport=s, headport=n, headlabel="      889"]
BB888 -> BB903 [tailport=s, headport=n, color=gray]
BB889 [shape=record label="{2974: begin-for-in[v9,v10]}" ] 
BB889 -> BB890 [tailport=s, headport=n, headlabel="      890"]
BB889 -> BB903 [tailport=s, headport=n, color=gray]
BB890 [shape=record label="{2975: has-next[v10,v11]|2976: if[v11](true-block:891,false-block:901)}" ] 
BB890 -> BB891 [tailport=s, headport=n, headlabel="      891"]
BB890 -> BB901 [tailport=s, headport=n, headlabel="      901"]
BB891 [shape=record label="{2977: next-property[v10,v12]|2978: write-variable[v12,'name']|2979: read-variable['prototype',v14,-]|2980: read-variable['name',v15,-]|2981: read-variable['prop',v20,-]|2982: read-variable['name',v21,-]|2983: read-property[v20,v21,v19]|2984: \<variable-non-null-undef\>['prop']|2985: typeof[v19,v17]|2986: constant[\"function\",v18]|2987: ==[v17,v18,v16]|2988: if[v16](true-block:892,false-block:895)}" ] 
BB891 -> BB895 [tailport=s, headport=n, headlabel="      895"]
BB891 -> BB892 [tailport=s, headport=n, headlabel="      892"]
BB891 -> BB903 [tailport=s, headport=n, color=gray]
BB892 [shape=record label="{2989: read-variable['_super',v25,-]|2990: read-variable['name',v26,-]|2991: read-property[v25,v26,v24]|2992: \<variable-non-null-undef\>['_super']|2993: typeof[v24,v22]|2994: constant[\"function\",v23]|2995: ==[v22,v23,v16]|2996: if[v16](true-block:893,false-block:895)}" ] 
BB892 -> BB895 [tailport=s, headport=n]
BB892 -> BB893 [tailport=s, headport=n, headlabel="      893"]
BB892 -> BB903 [tailport=s, headport=n, color=gray]
BB893 [shape=record label="{2997: read-variable['fnTest',v28,-]|2998: read-property[v28,'test',-]|2999: \<variable-non-null-undef\>['fnTest']|3000: read-variable['prop',v30,-]|3001: read-variable['name',v31,-]|3002: read-property[v30,v31,v29]|3003: \<variable-non-null-undef\>['prop']}" ] 
BB893 -> BB894 [tailport=s, headport=n, headlabel="      894"]
BB893 -> BB903 [tailport=s, headport=n, color=gray]
BB894 [shape=record label="{3004: call-fnTest.test [v28,'test',v29,v16]}" ] 
BB894 -> BB895 [tailport=s, headport=n]
BB894 -> BB903 [tailport=s, headport=n, color=gray]
BB895 [shape=record label="{3005: if[v16](true-block:896,false-block:897)}" ] 
BB895 -> BB896 [tailport=s, headport=n, headlabel="      896"]
BB895 -> BB897 [tailport=s, headport=n, headlabel="      897"]
BB896 [shape=record label="{3006: function-expr[function ( name fn ),v22]|3007: read-variable['name',v23,-]|3008: read-variable['prop',v25,-]|3009: read-variable['name',v26,-]|3010: read-property[v25,v26,v24]|3011: \<variable-non-null-undef\>['prop']}" ] 
BB896 -> BB898 [tailport=s, headport=n, headlabel="      898"]
BB896 -> BB903 [tailport=s, headport=n, color=gray]
BB897 [shape=record label="{3012: read-variable['prop',v22,-]|3013: read-variable['name',v23,-]|3014: read-property[v22,v23,v13]|3015: \<variable-non-null-undef\>['prop']}" ] 
BB897 -> BB899 [tailport=s, headport=n, headlabel="      899"]
BB897 -> BB903 [tailport=s, headport=n, color=gray]
BB898 [shape=record label="{3016: call-null [-,v22,v23,v24,v13]}" ] 
BB898 -> BB899 [tailport=s, headport=n]
BB898 -> BB903 [tailport=s, headport=n, color=gray]
BB899 [shape=record label="{3017: write-property[v14,v15,v13]|3018: \<variable-non-null-undef\>['prototype']*}" ] 
BB899 -> BB900 [tailport=s, headport=n, headlabel="      900"]
BB899 -> BB903 [tailport=s, headport=n, color=gray]
BB900 [shape=record label="{3019: end-for-in(begin-node:2974)}" ] 
BB900 -> BB890 [tailport=s, headport=n]
BB901 [shape=record label="{3020: read-variable['Class',v14,-]|3021: read-variable['prototype',v13,-]|3022: write-property[v14,'prototype',v13]|3023: \<variable-non-null-undef\>['Class']*|3024: read-variable['Class',v17,-]|3025: read-property[v17,'prototype',v16]|3026: \<variable-non-null-undef\>['Class']|3027: read-variable['Class',v15,-]|3028: write-property[v16,'constructor',v15]|3029: \<property-non-null-undef\>[v17,'prototype']*|3030: read-variable['Class',v19,-]|3031: read-variable['arguments',v20,-]|3032: read-property[v20,'callee',v18]|3033: \<variable-non-null-undef\>['arguments']|3034: write-property[v19,'extend',v18]|3035: \<variable-non-null-undef\>['Class']*|3036: read-variable['Class',v1,-]}" ] 
BB901 -> BB902 [tailport=s, headport=n, headlabel="      902"]
BB901 -> BB903 [tailport=s, headport=n, color=gray]
BB902 [shape=record label="{3037: return[v1]}" ] 
BB903 [shape=record label="{3038: exceptional-return}" ] 
//#$~ 789
}
