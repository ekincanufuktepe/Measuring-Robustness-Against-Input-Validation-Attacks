digraph {
rankdir="TD"
BB_entry771[shape=none,label=""];
BB_entry771 -> BB10227 [tailport=s, headport=n, headlabel="    10227"]
BB10227 [shape=record label="{26701: constant[undefined,v1]}" ] 
BB10227 -> BB10228 [tailport=s, headport=n, headlabel="      10228"]
BB10228 [shape=record label="{26702: read-variable['newValue',v3,-]|26703: constant[null,v4]|26704: ==[v3,v4,v2]|26705: if[v2](true-block:10230,false-block:10229)}" ] 
BB10228 -> BB10230 [tailport=s, headport=n, headlabel="      10230"]
BB10228 -> BB10229 [tailport=s, headport=n, headlabel="      10229"]
BB10228 -> BB10241 [tailport=s, headport=n, color=gray, headlabel="      10241"]
BB10229 [shape=record label="{26706: read-variable['oldValueOfValue',v3,-]|26707: constant[null,v4]|26708: ==[v3,v4,v2]}" ] 
BB10229 -> BB10230 [tailport=s, headport=n]
BB10229 -> BB10241 [tailport=s, headport=n, color=gray]
BB10230 [shape=record label="{26709: if[v2](true-block:10231,false-block:10232)}" ] 
BB10230 -> BB10231 [tailport=s, headport=n, headlabel="      10231"]
BB10230 -> BB10232 [tailport=s, headport=n, headlabel="      10232"]
BB10231 [shape=record label="{26710: read-variable['newValue',v3,-]|26711: read-variable['oldValueOfValue',v4,-]|26712: ===[v3,v4,v1]}" ] 
BB10231 -> BB10240 [tailport=s, headport=n, headlabel="      10240"]
BB10231 -> BB10241 [tailport=s, headport=n, color=gray]
BB10232 [shape=record label="{26713: typeof['newValue',v4]|26714: constant[\"object\",v5]|26715: ===[v4,v5,v3]|26716: if[v3](true-block:10233,false-block:10237)}" ] 
BB10232 -> BB10233 [tailport=s, headport=n, headlabel="      10233"]
BB10232 -> BB10237 [tailport=s, headport=n, headlabel="      10237"]
BB10232 -> BB10241 [tailport=s, headport=n, color=gray]
BB10233 [shape=record label="{26717: read-variable['getValueOf',v8,v7]|26718: read-variable['newValue',v9,-]}" ] 
BB10233 -> BB10234 [tailport=s, headport=n, headlabel="      10234"]
BB10233 -> BB10241 [tailport=s, headport=n, color=gray]
BB10234 [shape=record label="{26719: call-getValueOf [v7,v8,v9,v6]}" ] 
BB10234 -> BB10235 [tailport=s, headport=n, headlabel="      10235"]
BB10234 -> BB10241 [tailport=s, headport=n, color=gray]
BB10235 [shape=record label="{26720: write-variable[v6,'newValue']*|26721: typeof['newValue',v11]|26722: constant[\"object\",v12]|26723: ===[v11,v12,v10]|26724: if[v10](true-block:10236,false-block:10237)}" ] 
BB10235 -> BB10236 [tailport=s, headport=n, headlabel="      10236"]
BB10235 -> BB10237 [tailport=s, headport=n]
BB10235 -> BB10241 [tailport=s, headport=n, color=gray]
BB10236 [shape=record label="{26725: constant[false,v1]}" ] 
BB10236 -> BB10240 [tailport=s, headport=n]
BB10237 [shape=record label="{26726: read-variable['newValue',v6,-]|26727: read-variable['oldValueOfValue',v7,-]|26728: ===[v6,v7,v1]|26729: if[v1](true-block:10240,false-block:10238)}" ] 
BB10237 -> BB10240 [tailport=s, headport=n]
BB10237 -> BB10238 [tailport=s, headport=n, headlabel="      10238"]
BB10237 -> BB10241 [tailport=s, headport=n, color=gray]
BB10238 [shape=record label="{26730: read-variable['newValue',v6,-]|26731: read-variable['newValue',v7,-]|26732: !==[v6,v7,v1]|26733: if[v1](true-block:10239,false-block:10240)}" ] 
BB10238 -> BB10240 [tailport=s, headport=n]
BB10238 -> BB10239 [tailport=s, headport=n, headlabel="      10239"]
BB10238 -> BB10241 [tailport=s, headport=n, color=gray]
BB10239 [shape=record label="{26734: read-variable['oldValueOfValue',v8,-]|26735: read-variable['oldValueOfValue',v9,-]|26736: !==[v8,v9,v1]}" ] 
BB10239 -> BB10240 [tailport=s, headport=n]
BB10239 -> BB10241 [tailport=s, headport=n, color=gray]
BB10240 [shape=record label="{26737: return[v1]}" ] 
BB10241 [shape=record label="{26738: exceptional-return}" ] 
//#$~ 14118
}
