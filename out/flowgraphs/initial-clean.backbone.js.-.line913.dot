digraph {
rankdir="TD"
BB_entry72[shape=none,label=""];
BB_entry72 -> BB1037 [tailport=s, headport=n, headlabel="    1037"]
BB1037 [shape=record label="{2992: constant[undefined,v1]|2993: vardecl['model']}" ] 
BB1037 -> BB1038 [tailport=s, headport=n, headlabel="      1038"]
BB1038 [shape=record label="{2994: read-variable['attrs',v3,-]|2995: read-variable['Model',v4,-]|2996: instanceof[v3,v4,v2]|2997: if[v2](true-block:1039,false-block:1040)}" ] 
BB1038 -> BB1039 [tailport=s, headport=n, headlabel="      1039"]
BB1038 -> BB1040 [tailport=s, headport=n, headlabel="      1040"]
BB1038 -> BB1052 [tailport=s, headport=n, color=gray, headlabel="      1052"]
BB1039 [shape=record label="{2998: read-variable['attrs',v1,-]}" ] 
BB1039 -> BB1051 [tailport=s, headport=n, headlabel="      1051"]
BB1039 -> BB1052 [tailport=s, headport=n, color=gray]
BB1040 [shape=record label="{2999: read-variable['options',v6,-]|3000: if[v6](true-block:1041,false-block:1042)}" ] 
BB1040 -> BB1041 [tailport=s, headport=n, headlabel="      1041"]
BB1040 -> BB1042 [tailport=s, headport=n, headlabel="      1042"]
BB1040 -> BB1052 [tailport=s, headport=n, color=gray]
BB1041 [shape=record label="{3001: read-variable['_',v8,-]|3002: read-property[v8,'clone',-]|3003: \<variable-non-null-undef\>['_']|3004: read-variable['options',v9,-]}" ] 
BB1041 -> BB1043 [tailport=s, headport=n, headlabel="      1043"]
BB1041 -> BB1052 [tailport=s, headport=n, color=gray]
BB1042 [shape=record label="{3005: new[v5]}" ] 
BB1042 -> BB1044 [tailport=s, headport=n, headlabel="      1044"]
BB1043 [shape=record label="{3006: call-_.clone [v8,'clone',v9,v5]}" ] 
BB1043 -> BB1044 [tailport=s, headport=n]
BB1043 -> BB1052 [tailport=s, headport=n, color=gray]
BB1044 [shape=record label="{3007: write-variable[v5,'options']*|3008: read-variable['options',v8,-]|3009: read-variable['this',v7,-]|3010: write-property[v8,'collection',v7]|3011: \<variable-non-null-undef\>['options']*|3012: read-variable['this',v11,-]|3013: read-property[v11,'model',-]|3014: read-variable['attrs',v12,-]|3015: read-variable['options',v13,-]}" ] 
BB1044 -> BB1045 [tailport=s, headport=n, headlabel="      1045"]
BB1044 -> BB1052 [tailport=s, headport=n, color=gray]
BB1045 [shape=record label="{3016: construct [v11,'model',v12,v13,v9]}" ] 
BB1045 -> BB1046 [tailport=s, headport=n, headlabel="      1046"]
BB1045 -> BB1052 [tailport=s, headport=n, color=gray]
BB1046 [shape=record label="{3017: write-variable[v9,'model']*|3018: read-variable['model',v16,-]|3019: read-property[v16,'validationError',v15]|3020: \<variable-non-null-undef\>['model']|3021: ![v15,v14]|3022: if[v14](true-block:1047,false-block:1048)}" ] 
BB1046 -> BB1047 [tailport=s, headport=n, headlabel="      1047"]
BB1046 -> BB1048 [tailport=s, headport=n, headlabel="      1048"]
BB1046 -> BB1052 [tailport=s, headport=n, color=gray]
BB1047 [shape=record label="{3023: read-variable['model',v1,-]}" ] 
BB1047 -> BB1051 [tailport=s, headport=n]
BB1047 -> BB1052 [tailport=s, headport=n, color=gray]
BB1048 [shape=record label="{3024: read-variable['this',v18,-]|3025: read-property[v18,'trigger',-]|3026: constant[\"invalid\",v19]|3027: read-variable['this',v20,-]|3028: read-variable['model',v22,-]|3029: read-property[v22,'validationError',v21]|3030: \<variable-non-null-undef\>['model']|3031: read-variable['options',v23,-]}" ] 
BB1048 -> BB1049 [tailport=s, headport=n, headlabel="      1049"]
BB1048 -> BB1052 [tailport=s, headport=n, color=gray]
BB1049 [shape=record label="{3032: call-this.trigger [v18,'trigger',v19,v20,v21,v23,-]*}" ] 
BB1049 -> BB1050 [tailport=s, headport=n, headlabel="      1050"]
BB1049 -> BB1052 [tailport=s, headport=n, color=gray]
BB1050 [shape=record label="{3033: constant[false,v1]}" ] 
BB1050 -> BB1051 [tailport=s, headport=n]
BB1051 [shape=record label="{3034: return[v1]}" ] 
BB1052 [shape=record label="{3035: exceptional-return}" ] 
//#$~ 920
}
