digraph {
rankdir="TD"
BB_entry517[shape=none,label=""];
BB_entry517 -> BB6703 [tailport=s, headport=n, headlabel="    6703"]
BB6703 [shape=record label="{18716: constant[undefined,v1]|18717: vardecl['excess']|18718: vardecl['unquoted']}" ] 
BB6703 -> BB6704 [tailport=s, headport=n, headlabel="      6704"]
BB6704 [shape=record label="{18719: read-variable['match',v4,-]|18720: constant[5.0,v5]|18721: read-property[v4,v5,v3]|18722: \<variable-non-null-undef\>['match']|18723: ![v3,v2]|18724: if[v2](true-block:6705,false-block:6706)}" ] 
BB6704 -> BB6706 [tailport=s, headport=n, headlabel="      6706"]
BB6704 -> BB6705 [tailport=s, headport=n, headlabel="      6705"]
BB6704 -> BB6733 [tailport=s, headport=n, color=gray, headlabel="      6733"]
BB6705 [shape=record label="{18725: read-variable['match',v6,-]|18726: constant[2.0,v7]|18727: read-property[v6,v7,v2]|18728: \<variable-non-null-undef\>['match']}" ] 
BB6705 -> BB6706 [tailport=s, headport=n]
BB6705 -> BB6733 [tailport=s, headport=n, color=gray]
BB6706 [shape=record label="{18729: write-variable[v2,'unquoted']*|18730: read-variable['matchExpr',v9,-]|18731: read-property[v9,'CHILD',v8]|18732: \<variable-non-null-undef\>['matchExpr']|18733: read-property[v8,'test',-]|18734: \<property-non-null-undef\>[v9,'CHILD']|18735: read-variable['match',v11,-]|18736: constant[0.0,v12]|18737: read-property[v11,v12,v10]|18738: \<variable-non-null-undef\>['match']}" ] 
BB6706 -> BB6707 [tailport=s, headport=n, headlabel="      6707"]
BB6706 -> BB6733 [tailport=s, headport=n, color=gray]
BB6707 [shape=record label="{18739: call-null [v8,'test',v10,v6]}" ] 
BB6707 -> BB6708 [tailport=s, headport=n, headlabel="      6708"]
BB6707 -> BB6733 [tailport=s, headport=n, color=gray]
BB6708 [shape=record label="{18740: if[v6](true-block:6709,false-block:6710)}" ] 
BB6708 -> BB6709 [tailport=s, headport=n, headlabel="      6709"]
BB6708 -> BB6710 [tailport=s, headport=n, headlabel="      6710"]
BB6709 [shape=record label="{18741: constant[null,v1]}" ] 
BB6709 -> BB6732 [tailport=s, headport=n, headlabel="      6732"]
BB6710 [shape=record label="{18742: read-variable['match',v14,-]|18743: constant[3.0,v15]|18744: read-property[v14,v15,v13]|18745: \<variable-non-null-undef\>['match']|18746: if[v13](true-block:6711,false-block:6712)}" ] 
BB6710 -> BB6712 [tailport=s, headport=n, headlabel="      6712"]
BB6710 -> BB6711 [tailport=s, headport=n, headlabel="      6711"]
BB6710 -> BB6733 [tailport=s, headport=n, color=gray]
BB6711 [shape=record label="{18747: read-variable['match',v18,-]|18748: constant[4.0,v19]|18749: read-property[v18,v19,v16]|18750: \<variable-non-null-undef\>['match']|18751: read-variable['undefined',v17,-]|18752: !==[v16,v17,v13]}" ] 
BB6711 -> BB6712 [tailport=s, headport=n]
BB6711 -> BB6733 [tailport=s, headport=n, color=gray]
BB6712 [shape=record label="{18753: if[v13](true-block:6713,false-block:6714)}" ] 
BB6712 -> BB6713 [tailport=s, headport=n, headlabel="      6713"]
BB6712 -> BB6714 [tailport=s, headport=n, headlabel="      6714"]
BB6713 [shape=record label="{18754: read-variable['match',v17,-]|18755: constant[2.0,v18]|18756: read-variable['match',v19,-]|18757: constant[4.0,v20]|18758: read-property[v19,v20,v16]|18759: \<variable-non-null-undef\>['match']|18760: write-property[v17,v18,v16]|18761: \<variable-non-null-undef\>['match']*}" ] 
BB6713 -> BB6730 [tailport=s, headport=n, headlabel="      6730"]
BB6713 -> BB6733 [tailport=s, headport=n, color=gray]
BB6714 [shape=record label="{18762: read-variable['unquoted',v16,-]|18763: if[v16](true-block:6715,false-block:6724)}" ] 
BB6714 -> BB6724 [tailport=s, headport=n, headlabel="      6724"]
BB6714 -> BB6715 [tailport=s, headport=n, headlabel="      6715"]
BB6714 -> BB6733 [tailport=s, headport=n, color=gray]
BB6715 [shape=record label="{18764: read-variable['rpseudo',v18,-]|18765: read-property[v18,'test',-]|18766: \<variable-non-null-undef\>['rpseudo']|18767: read-variable['unquoted',v19,-]}" ] 
BB6715 -> BB6716 [tailport=s, headport=n, headlabel="      6716"]
BB6715 -> BB6733 [tailport=s, headport=n, color=gray]
BB6716 [shape=record label="{18768: call-rpseudo.test [v18,'test',v19,v16]}" ] 
BB6716 -> BB6717 [tailport=s, headport=n, headlabel="      6717"]
BB6716 -> BB6733 [tailport=s, headport=n, color=gray]
BB6717 [shape=record label="{18769: if[v16](true-block:6718,false-block:6724)}" ] 
BB6717 -> BB6724 [tailport=s, headport=n]
BB6717 -> BB6718 [tailport=s, headport=n, headlabel="      6718"]
BB6718 [shape=record label="{18770: read-variable['tokenize',v21,v20]|18771: read-variable['unquoted',v22,-]|18772: constant[true,v23]}" ] 
BB6718 -> BB6719 [tailport=s, headport=n, headlabel="      6719"]
BB6718 -> BB6733 [tailport=s, headport=n, color=gray]
BB6719 [shape=record label="{18773: call-tokenize [v20,v21,v22,v23,v16]}" ] 
BB6719 -> BB6720 [tailport=s, headport=n, headlabel="      6720"]
BB6719 -> BB6733 [tailport=s, headport=n, color=gray]
BB6720 [shape=record label="{18774: write-variable[v16,'excess']|18775: if[v16](true-block:6721,false-block:6724)}" ] 
BB6720 -> BB6724 [tailport=s, headport=n]
BB6720 -> BB6721 [tailport=s, headport=n, headlabel="      6721"]
BB6721 [shape=record label="{18776: read-variable['unquoted',v27,-]|18777: read-property[v27,'indexOf',-]|18778: \<variable-non-null-undef\>['unquoted']|18779: constant[\")\",v28]|18780: read-variable['unquoted',v32,-]|18781: read-property[v32,'length',v30]|18782: \<variable-non-null-undef\>['unquoted']|18783: read-variable['excess',v31,-]|18784: -[v30,v31,v29]}" ] 
BB6721 -> BB6722 [tailport=s, headport=n, headlabel="      6722"]
BB6721 -> BB6733 [tailport=s, headport=n, color=gray]
BB6722 [shape=record label="{18785: call-unquoted.indexOf [v27,'indexOf',v28,v29,v24]}" ] 
BB6722 -> BB6723 [tailport=s, headport=n, headlabel="      6723"]
BB6722 -> BB6733 [tailport=s, headport=n, color=gray]
BB6723 [shape=record label="{18786: read-variable['unquoted',v33,-]|18787: read-property[v33,'length',v25]|18788: \<variable-non-null-undef\>['unquoted']|18789: -[v24,v25,v16]|18790: write-variable[v16,'excess']}" ] 
BB6723 -> BB6724 [tailport=s, headport=n]
BB6723 -> BB6733 [tailport=s, headport=n, color=gray]
BB6724 [shape=record label="{18791: if[v16](true-block:6725,false-block:6730)}" ] 
BB6724 -> BB6725 [tailport=s, headport=n, headlabel="      6725"]
BB6724 -> BB6730 [tailport=s, headport=n]
BB6725 [shape=record label="{18792: read-variable['match',v18,-]|18793: constant[0.0,v19]|18794: read-variable['match',v22,-]|18795: constant[0.0,v23]|18796: read-property[v22,v23,v21]|18797: \<variable-non-null-undef\>['match']|18798: read-property[v21,'slice',-]|18799: \<property-non-null-undef\>[v22,v23]|18800: constant[0.0,v24]|18801: read-variable['excess',v25,-]}" ] 
BB6725 -> BB6726 [tailport=s, headport=n, headlabel="      6726"]
BB6725 -> BB6733 [tailport=s, headport=n, color=gray]
BB6726 [shape=record label="{18802: call-null [v21,'slice',v24,v25,v17]}" ] 
BB6726 -> BB6727 [tailport=s, headport=n, headlabel="      6727"]
BB6726 -> BB6733 [tailport=s, headport=n, color=gray]
BB6727 [shape=record label="{18803: write-property[v18,v19,v17]|18804: \<variable-non-null-undef\>['match']*|18805: read-variable['match',v27,-]|18806: constant[2.0,v28]|18807: read-variable['unquoted',v30,-]|18808: read-property[v30,'slice',-]|18809: \<variable-non-null-undef\>['unquoted']|18810: constant[0.0,v31]|18811: read-variable['excess',v32,-]}" ] 
BB6727 -> BB6728 [tailport=s, headport=n, headlabel="      6728"]
BB6727 -> BB6733 [tailport=s, headport=n, color=gray]
BB6728 [shape=record label="{18812: call-unquoted.slice [v30,'slice',v31,v32,v26]}" ] 
BB6728 -> BB6729 [tailport=s, headport=n, headlabel="      6729"]
BB6728 -> BB6733 [tailport=s, headport=n, color=gray]
BB6729 [shape=record label="{18813: write-property[v27,v28,v26]|18814: \<variable-non-null-undef\>['match']*}" ] 
BB6729 -> BB6730 [tailport=s, headport=n]
BB6729 -> BB6733 [tailport=s, headport=n, color=gray]
BB6730 [shape=record label="{18815: read-variable['match',v17,-]|18816: read-property[v17,'slice',-]|18817: \<variable-non-null-undef\>['match']|18818: constant[0.0,v18]|18819: constant[3.0,v19]}" ] 
BB6730 -> BB6731 [tailport=s, headport=n, headlabel="      6731"]
BB6730 -> BB6733 [tailport=s, headport=n, color=gray]
BB6731 [shape=record label="{18820: call-match.slice [v17,'slice',v18,v19,v1]}" ] 
BB6731 -> BB6732 [tailport=s, headport=n]
BB6731 -> BB6733 [tailport=s, headport=n, color=gray]
BB6732 [shape=record label="{18821: return[v1]}" ] 
BB6733 [shape=record label="{18822: exceptional-return}" ] 
//#$~ 5362
}
