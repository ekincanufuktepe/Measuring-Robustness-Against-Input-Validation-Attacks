digraph {
rankdir="TD"
BB_entry528[shape=none,label=""];
BB_entry528 -> BB7551 [tailport=s, headport=n, headlabel="    7551"]
BB7551 [shape=record label="{25405: constant[undefined,v1]}" ] 
BB7551 -> BB7552 [tailport=s, headport=n, headlabel="      7552"]
BB7552 [shape=record label="{25406: constant[\"production\",v3]|25407: constant[\"development\",v4]|25408: !==[v3,v4,v2]|25409: if[v2](true-block:7553,false-block:7554)}" ] 
BB7552 -> BB7553 [tailport=s, headport=n, headlabel="      7553"]
BB7552 -> BB7554 [tailport=s, headport=n, headlabel="      7554"]
BB7552 -> BB7563 [tailport=s, headport=n, color=gray, headlabel="      7563"]
BB7553 [shape=record label="{25410: read-variable['invariant',v6,v5]|25411: read-variable['ReactOwner',v9,-]|25412: read-property[v9,'isValidOwner',-]|25413: \<variable-non-null-undef\>['ReactOwner']|25414: read-variable['owner',v10,-]}" ] 
BB7553 -> BB7555 [tailport=s, headport=n, headlabel="      7555"]
BB7553 -> BB7563 [tailport=s, headport=n, color=gray]
BB7554 [shape=record label="{25415: read-variable['invariant',v6,v5]|25416: read-variable['ReactOwner',v9,-]|25417: read-property[v9,'isValidOwner',-]|25418: \<variable-non-null-undef\>['ReactOwner']|25419: read-variable['owner',v10,-]}" ] 
BB7554 -> BB7558 [tailport=s, headport=n, headlabel="      7558"]
BB7554 -> BB7563 [tailport=s, headport=n, color=gray]
BB7555 [shape=record label="{25420: call-ReactOwner.isValidOwner [v9,'isValidOwner',v10,v7]}" ] 
BB7555 -> BB7556 [tailport=s, headport=n, headlabel="      7556"]
BB7555 -> BB7563 [tailport=s, headport=n, color=gray]
BB7556 [shape=record label="{25421: constant[\"addComponentAsRefTo(...): Only a ReactOwner can have refs. This \",v18]|25422: constant[\"usually means that you're trying to add a ref to a component that \",v19]|25423: +[v18,v19,v16]|25424: constant[\"doesn't have an owner (that is, was not created inside of another \",v17]|25425: +[v16,v17,v14]|25426: constant[\"component's `render` method). Try rendering this component inside of \",v15]|25427: +[v14,v15,v12]|25428: constant[\"a new top-level component which will hold the ref.\",v13]|25429: +[v12,v13,v11]}" ] 
BB7556 -> BB7557 [tailport=s, headport=n, headlabel="      7557"]
BB7556 -> BB7563 [tailport=s, headport=n, color=gray]
BB7557 [shape=record label="{25430: call-invariant [v5,v6,v7,v11,-]}" ] 
BB7557 -> BB7560 [tailport=s, headport=n, headlabel="      7560"]
BB7557 -> BB7563 [tailport=s, headport=n, color=gray]
BB7558 [shape=record label="{25431: call-ReactOwner.isValidOwner [v9,'isValidOwner',v10,v7]}" ] 
BB7558 -> BB7559 [tailport=s, headport=n, headlabel="      7559"]
BB7558 -> BB7563 [tailport=s, headport=n, color=gray]
BB7559 [shape=record label="{25432: call-invariant [v5,v6,v7,-]}" ] 
BB7559 -> BB7560 [tailport=s, headport=n]
BB7559 -> BB7563 [tailport=s, headport=n, color=gray]
BB7560 [shape=record label="{25433: read-variable['owner',v6,-]|25434: read-property[v6,'attachRef',-]|25435: \<variable-non-null-undef\>['owner']|25436: read-variable['ref',v7,-]|25437: read-variable['component',v8,-]}" ] 
BB7560 -> BB7561 [tailport=s, headport=n, headlabel="      7561"]
BB7560 -> BB7563 [tailport=s, headport=n, color=gray]
BB7561 [shape=record label="{25438: call-owner.attachRef [v6,'attachRef',v7,v8,-]*}" ] 
BB7561 -> BB7562 [tailport=s, headport=n, headlabel="      7562"]
BB7561 -> BB7563 [tailport=s, headport=n, color=gray]
BB7562 [shape=record label="{25439: return[v1]}" ] 
BB7563 [shape=record label="{25440: exceptional-return}" ] 
//#$~ 13325
}
