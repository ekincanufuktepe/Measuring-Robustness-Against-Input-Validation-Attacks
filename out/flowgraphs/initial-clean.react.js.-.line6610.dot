digraph {
rankdir="TD"
BB_entry241[shape=none,label=""];
BB_entry241 -> BB3410 [tailport=s, headport=n, headlabel="    3410"]
BB3410 [shape=record label="{11929: constant[undefined,v1]|11930: vardecl['componentName']|11931: vardecl['propName']|11932: vardecl['error']|11933: vardecl['addendum']}" ] 
BB3410 -> BB3411 [tailport=s, headport=n, headlabel="      3411"]
BB3411 [shape=record label="{11934: read-variable['this',v4,-]|11935: read-property[v4,'getName',-]}" ] 
BB3411 -> BB3412 [tailport=s, headport=n, headlabel="      3412"]
BB3411 -> BB3446 [tailport=s, headport=n, color=gray, headlabel="      3446"]
BB3412 [shape=record label="{11936: call-this.getName [v4,'getName',v2]}" ] 
BB3412 -> BB3413 [tailport=s, headport=n, headlabel="      3413"]
BB3412 -> BB3446 [tailport=s, headport=n, color=gray]
BB3413 [shape=record label="{11937: write-variable[v2,'componentName']*|11938: read-variable['propTypes',v6,-]}" ] 
BB3413 -> BB3414 [tailport=s, headport=n, headlabel="      3414"]
BB3413 -> BB3446 [tailport=s, headport=n, color=gray]
BB3414 [shape=record label="{11939: begin-for-in[v6,v7]}" ] 
BB3414 -> BB3415 [tailport=s, headport=n, headlabel="      3415"]
BB3414 -> BB3446 [tailport=s, headport=n, color=gray]
BB3415 [shape=record label="{11940: has-next[v7,v8]|11941: if[v8](true-block:3416,false-block:3445)}" ] 
BB3415 -> BB3416 [tailport=s, headport=n, headlabel="      3416"]
BB3415 -> BB3445 [tailport=s, headport=n, headlabel="      3445"]
BB3416 [shape=record label="{11942: next-property[v7,v9]|11943: write-variable[v9,'propName']|11944: read-variable['propTypes',v12,-]|11945: read-property[v12,'hasOwnProperty',-]|11946: \<variable-non-null-undef\>['propTypes']|11947: read-variable['propName',v13,-]}" ] 
BB3416 -> BB3417 [tailport=s, headport=n, headlabel="      3417"]
BB3416 -> BB3446 [tailport=s, headport=n, color=gray]
BB3417 [shape=record label="{11948: call-propTypes.hasOwnProperty [v12,'hasOwnProperty',v13,v10]}" ] 
BB3417 -> BB3418 [tailport=s, headport=n, headlabel="      3418"]
BB3417 -> BB3446 [tailport=s, headport=n, color=gray]
BB3418 [shape=record label="{11949: if[v10](true-block:3419,false-block:3444)}" ] 
BB3418 -> BB3419 [tailport=s, headport=n, headlabel="      3419"]
BB3418 -> BB3444 [tailport=s, headport=n, headlabel="      3444"]
BB3419 [shape=record label="{11950: constant[\"production\",v15]|11951: constant[\"development\",v16]|11952: !==[v15,v16,v14]|11953: if[v14](true-block:3420,false-block:3421)}" ] 
BB3419 -> BB3420 [tailport=s, headport=n, headlabel="      3420"]
BB3419 -> BB3421 [tailport=s, headport=n, headlabel="      3421"]
BB3419 -> BB3430 [tailport=s, headport=n, color=gray, headlabel="      3430"]
BB3420 [shape=record label="{11954: read-variable['invariant',v18,v17]|11955: read-variable['propTypes',v23,-]|11956: read-variable['propName',v24,-]|11957: read-property[v23,v24,v22]|11958: \<variable-non-null-undef\>['propTypes']|11959: typeof[v22,v20]|11960: constant[\"function\",v21]|11961: ===[v20,v21,v19]|11962: constant[\"%s: %s type `%s` is invalid; it must be a function, usually \",v26]|11963: constant[\"from React.PropTypes.\",v27]|11964: +[v26,v27,v25]|11965: read-variable['componentName',v28,-]|11966: if[v28](true-block:3423,false-block:3422)}" ] 
BB3420 -> BB3423 [tailport=s, headport=n, headlabel="      3423"]
BB3420 -> BB3422 [tailport=s, headport=n, headlabel="      3422"]
BB3420 -> BB3430 [tailport=s, headport=n, color=gray]
BB3421 [shape=record label="{11967: read-variable['invariant',v18,v17]|11968: read-variable['propTypes',v23,-]|11969: read-variable['propName',v24,-]|11970: read-property[v23,v24,v22]|11971: \<variable-non-null-undef\>['propTypes']|11972: typeof[v22,v20]|11973: constant[\"function\",v21]|11974: ===[v20,v21,v19]}" ] 
BB3421 -> BB3425 [tailport=s, headport=n, headlabel="      3425"]
BB3421 -> BB3430 [tailport=s, headport=n, color=gray]
BB3422 [shape=record label="{11975: constant[\"React class\",v28]}" ] 
BB3422 -> BB3423 [tailport=s, headport=n]
BB3423 [shape=record label="{11976: read-variable['ReactPropTypeLocationNames',v30,-]|11977: read-variable['location',v31,-]|11978: read-property[v30,v31,v29]|11979: \<variable-non-null-undef\>['ReactPropTypeLocationNames']|11980: read-variable['propName',v32,-]}" ] 
BB3423 -> BB3424 [tailport=s, headport=n, headlabel="      3424"]
BB3423 -> BB3430 [tailport=s, headport=n, color=gray]
BB3424 [shape=record label="{11981: call-invariant [v17,v18,v19,v25,v28,v29,v32,-]}" ] 
BB3424 -> BB3426 [tailport=s, headport=n, headlabel="      3426"]
BB3424 -> BB3430 [tailport=s, headport=n, color=gray]
BB3425 [shape=record label="{11982: call-invariant [v17,v18,v19,-]}" ] 
BB3425 -> BB3426 [tailport=s, headport=n]
BB3425 -> BB3430 [tailport=s, headport=n, color=gray]
BB3426 [shape=record label="{11983: read-variable['propTypes',v19,-]|11984: read-variable['propName',v20,-]|11985: read-property[v19,v20,-]|11986: \<variable-non-null-undef\>['propTypes']|11987: read-variable['props',v21,-]|11988: read-variable['propName',v22,-]|11989: read-variable['componentName',v23,-]|11990: read-variable['location',v24,-]}" ] 
BB3426 -> BB3427 [tailport=s, headport=n, headlabel="      3427"]
BB3426 -> BB3430 [tailport=s, headport=n, color=gray]
BB3427 [shape=record label="{11991: call-null [v19,[v20],v21,v22,v23,v24,v17]}" ] 
BB3427 -> BB3428 [tailport=s, headport=n, headlabel="      3428"]
BB3427 -> BB3430 [tailport=s, headport=n, color=gray]
BB3428 [shape=record label="{11992: write-variable[v17,'error']*}" ] 
BB3428 -> BB3429 [tailport=s, headport=n, headlabel="      3429"]
BB3429 [shape=record label="{11993: read-variable['error',v17,-]|11994: read-variable['Error',v18,-]|11995: instanceof[v17,v18,v16]|11996: if[v16](true-block:3433,false-block:3444)}" ] 
BB3429 -> BB3433 [tailport=s, headport=n, headlabel="      3433"]
BB3429 -> BB3444 [tailport=s, headport=n]
BB3429 -> BB3446 [tailport=s, headport=n, color=gray]
BB3430 [shape=record label="{11997: catch[ex,v14]|11998: begin-with[v14]}" ] 
BB3430 -> BB3431 [tailport=s, headport=n, headlabel="      3431"]
BB3430 -> BB3446 [tailport=s, headport=n, color=gray]
BB3431 [shape=record label="{11999: read-variable['ex',v16,v15]|12000: write-variable[v16,'error']*|12001: end-with}" ] 
BB3431 -> BB3429 [tailport=s, headport=n]
BB3431 -> BB3432 [tailport=s, headport=n, color=gray, headlabel="      3432"]
BB3432 [shape=record label="{12002: end-with}" ] 
BB3432 -> BB3446 [tailport=s, headport=n]
BB3433 [shape=record label="{12003: read-variable['getDeclarationErrorAddendum',v21,v20]|12004: read-variable['this',v22,-]}" ] 
BB3433 -> BB3434 [tailport=s, headport=n, headlabel="      3434"]
BB3433 -> BB3446 [tailport=s, headport=n, color=gray]
BB3434 [shape=record label="{12005: call-getDeclarationErrorAddendum [v20,v21,v22,v19]}" ] 
BB3434 -> BB3435 [tailport=s, headport=n, headlabel="      3435"]
BB3434 -> BB3446 [tailport=s, headport=n, color=gray]
BB3435 [shape=record label="{12006: write-variable[v19,'addendum']*|12007: read-variable['location',v24,-]|12008: read-variable['ReactPropTypeLocations',v26,-]|12009: read-property[v26,'prop',v25]|12010: \<variable-non-null-undef\>['ReactPropTypeLocations']|12011: ===[v24,v25,v23]|12012: if[v23](true-block:3436,false-block:3437)}" ] 
BB3435 -> BB3436 [tailport=s, headport=n, headlabel="      3436"]
BB3435 -> BB3437 [tailport=s, headport=n, headlabel="      3437"]
BB3435 -> BB3446 [tailport=s, headport=n, color=gray]
BB3436 [shape=record label="{12013: constant[\"production\",v28]|12014: constant[\"development\",v29]|12015: !==[v28,v29,v27]|12016: if[v27](true-block:3438,false-block:3439)}" ] 
BB3436 -> BB3438 [tailport=s, headport=n, headlabel="      3438"]
BB3436 -> BB3439 [tailport=s, headport=n, headlabel="      3439"]
BB3436 -> BB3446 [tailport=s, headport=n, color=gray]
BB3437 [shape=record label="{12017: constant[\"production\",v28]|12018: constant[\"development\",v29]|12019: !==[v28,v29,v27]|12020: if[v27](true-block:3441,false-block:3442)}" ] 
BB3437 -> BB3441 [tailport=s, headport=n, headlabel="      3441"]
BB3437 -> BB3442 [tailport=s, headport=n, headlabel="      3442"]
BB3437 -> BB3446 [tailport=s, headport=n, color=gray]
BB3438 [shape=record label="{12021: read-variable['warning',v31,v30]|12022: constant[false,v32]|12023: constant[\"Failed Composite propType: %s%s\",v33]|12024: read-variable['error',v35,-]|12025: read-property[v35,'message',v34]|12026: \<variable-non-null-undef\>['error']|12027: read-variable['addendum',v36,-]}" ] 
BB3438 -> BB3440 [tailport=s, headport=n, headlabel="      3440"]
BB3438 -> BB3446 [tailport=s, headport=n, color=gray]
BB3439 [shape=record label="{12028: constant[null,-]}" ] 
BB3439 -> BB3444 [tailport=s, headport=n]
BB3440 [shape=record label="{12029: call-warning [v30,v31,v32,v33,v34,v36,-]}" ] 
BB3440 -> BB3444 [tailport=s, headport=n]
BB3440 -> BB3446 [tailport=s, headport=n, color=gray]
BB3441 [shape=record label="{12030: read-variable['warning',v31,v30]|12031: constant[false,v32]|12032: constant[\"Failed Context Types: %s%s\",v33]|12033: read-variable['error',v35,-]|12034: read-property[v35,'message',v34]|12035: \<variable-non-null-undef\>['error']|12036: read-variable['addendum',v36,-]}" ] 
BB3441 -> BB3443 [tailport=s, headport=n, headlabel="      3443"]
BB3441 -> BB3446 [tailport=s, headport=n, color=gray]
BB3442 [shape=record label="{12037: constant[null,-]}" ] 
BB3442 -> BB3444 [tailport=s, headport=n]
BB3443 [shape=record label="{12038: call-warning [v30,v31,v32,v33,v34,v36,-]}" ] 
BB3443 -> BB3444 [tailport=s, headport=n]
BB3443 -> BB3446 [tailport=s, headport=n, color=gray]
BB3444 [shape=record label="{12039: end-for-in(begin-node:11939)}" ] 
BB3444 -> BB3415 [tailport=s, headport=n]
BB3445 [shape=record label="{12040: return[v1]}" ] 
BB3446 [shape=record label="{12041: exceptional-return}" ] 
//#$~ 6652
}
