digraph {
rankdir="TD"
BB_entry850[shape=none,label=""];
BB_entry850 -> BB10949 [tailport=s, headport=n, headlabel="    10949"]
BB10949 [shape=record label="{28510: constant[undefined,v1]|28511: vardecl['get']|28512: vardecl['scope']|28513: vardecl['array']|28514: vardecl['watcher']|28515: function-decl[function deregisterWatch ( ),-]}" ] 
BB10949 -> BB10950 [tailport=s, headport=n, headlabel="      10950"]
BB10950 [shape=record label="{28516: read-variable['$parse',v4,v3]|28517: read-variable['watchExp',v5,-]}" ] 
BB10950 -> BB10951 [tailport=s, headport=n, headlabel="      10951"]
BB10950 -> BB10970 [tailport=s, headport=n, color=gray, headlabel="      10970"]
BB10951 [shape=record label="{28518: call-$parse [v3,v4,v5,v2]}" ] 
BB10951 -> BB10952 [tailport=s, headport=n, headlabel="      10952"]
BB10951 -> BB10970 [tailport=s, headport=n, color=gray]
BB10952 [shape=record label="{28519: write-variable[v2,'get']*|28520: read-variable['get',v7,-]|28521: read-property[v7,'$$watchDelegate',v6]|28522: \<variable-non-null-undef\>['get']|28523: if[v6](true-block:10953,false-block:10955)}" ] 
BB10952 -> BB10953 [tailport=s, headport=n, headlabel="      10953"]
BB10952 -> BB10955 [tailport=s, headport=n, headlabel="      10955"]
BB10952 -> BB10970 [tailport=s, headport=n, color=gray]
BB10953 [shape=record label="{28524: read-variable['get',v9,-]|28525: read-property[v9,'$$watchDelegate',-]|28526: \<variable-non-null-undef\>['get']|28527: read-variable['this',v10,-]|28528: read-variable['listener',v11,-]|28529: read-variable['objectEquality',v12,-]|28530: read-variable['get',v13,-]|28531: read-variable['watchExp',v14,-]}" ] 
BB10953 -> BB10954 [tailport=s, headport=n, headlabel="      10954"]
BB10953 -> BB10970 [tailport=s, headport=n, color=gray]
BB10954 [shape=record label="{28532: call-get.$$watchDelegate [v9,'$$watchDelegate',v10,v11,v12,v13,v14,v1]}" ] 
BB10954 -> BB10969 [tailport=s, headport=n, headlabel="      10969"]
BB10954 -> BB10970 [tailport=s, headport=n, color=gray]
BB10955 [shape=record label="{28533: read-variable['this',v8,-]|28534: write-variable[v8,'scope']*|28535: read-variable['scope',v10,-]|28536: read-property[v10,'$$watchers',v9]|28537: \<variable-non-null-undef\>['scope']|28538: write-variable[v9,'array']*|28539: new[v11]|28540: read-variable['listener',v12,-]|28541: write-property[v11,'fn',v12]|28542: read-variable['initWatchVal',v13,-]|28543: write-property[v11,'last',v13]|28544: read-variable['get',v14,-]|28545: write-property[v11,'get',v14]|28546: read-variable['prettyPrintExpression',v15,-]|28547: if[v15](true-block:10957,false-block:10956)}" ] 
BB10955 -> BB10957 [tailport=s, headport=n, headlabel="      10957"]
BB10955 -> BB10956 [tailport=s, headport=n, headlabel="      10956"]
BB10955 -> BB10970 [tailport=s, headport=n, color=gray]
BB10956 [shape=record label="{28548: read-variable['watchExp',v15,-]}" ] 
BB10956 -> BB10957 [tailport=s, headport=n]
BB10956 -> BB10970 [tailport=s, headport=n, color=gray]
BB10957 [shape=record label="{28549: write-property[v11,'exp',v15]|28550: read-variable['objectEquality',v18,-]|28551: ![v18,v17]|28552: ![v17,v16]|28553: write-property[v11,'eq',v16]|28554: write-variable[v11,'watcher']*|28555: constant[null,v19]|28556: write-variable[v19,'lastDirtyWatch']*|28557: read-variable['isFunction',v23,v22]|28558: read-variable['listener',v24,-]}" ] 
BB10957 -> BB10958 [tailport=s, headport=n, headlabel="      10958"]
BB10957 -> BB10970 [tailport=s, headport=n, color=gray]
BB10958 [shape=record label="{28559: call-isFunction [v22,v23,v24,v21]}" ] 
BB10958 -> BB10959 [tailport=s, headport=n, headlabel="      10959"]
BB10958 -> BB10970 [tailport=s, headport=n, color=gray]
BB10959 [shape=record label="{28560: ![v21,v20]|28561: if[v20](true-block:10960,false-block:10961)}" ] 
BB10959 -> BB10960 [tailport=s, headport=n, headlabel="      10960"]
BB10959 -> BB10961 [tailport=s, headport=n, headlabel="      10961"]
BB10959 -> BB10970 [tailport=s, headport=n, color=gray]
BB10960 [shape=record label="{28562: read-variable['watcher',v26,-]|28563: read-variable['noop',v25,-]|28564: write-property[v26,'fn',v25]|28565: \<variable-non-null-undef\>['watcher']*}" ] 
BB10960 -> BB10961 [tailport=s, headport=n]
BB10960 -> BB10970 [tailport=s, headport=n, color=gray]
BB10961 [shape=record label="{28566: read-variable['array',v26,-]|28567: ![v26,v25]|28568: if[v25](true-block:10962,false-block:10965)}" ] 
BB10961 -> BB10962 [tailport=s, headport=n, headlabel="      10962"]
BB10961 -> BB10965 [tailport=s, headport=n, headlabel="      10965"]
BB10961 -> BB10970 [tailport=s, headport=n, color=gray]
BB10962 [shape=record label="{28569: read-variable['scope',v28,-]|28570: read-variable['Array',v29,-]}" ] 
BB10962 -> BB10963 [tailport=s, headport=n, headlabel="      10963"]
BB10962 -> BB10970 [tailport=s, headport=n, color=gray]
BB10963 [shape=record label="{28571: construct [-,v29,v27]}" ] 
BB10963 -> BB10964 [tailport=s, headport=n, headlabel="      10964"]
BB10963 -> BB10970 [tailport=s, headport=n, color=gray]
BB10964 [shape=record label="{28572: write-property[v28,'$$watchers',v27]|28573: \<variable-non-null-undef\>['scope']|28574: write-variable[v27,'array']*}" ] 
BB10964 -> BB10965 [tailport=s, headport=n]
BB10964 -> BB10970 [tailport=s, headport=n, color=gray]
BB10965 [shape=record label="{28575: read-variable['array',v28,-]|28576: read-property[v28,'unshift',-]|28577: \<variable-non-null-undef\>['array']|28578: read-variable['watcher',v29,-]}" ] 
BB10965 -> BB10966 [tailport=s, headport=n, headlabel="      10966"]
BB10965 -> BB10970 [tailport=s, headport=n, color=gray]
BB10966 [shape=record label="{28579: call-array.unshift [v28,'unshift',v29,-]*}" ] 
BB10966 -> BB10967 [tailport=s, headport=n, headlabel="      10967"]
BB10966 -> BB10970 [tailport=s, headport=n, color=gray]
BB10967 [shape=record label="{28580: read-variable['incrementWatchersCount',v31,v30]|28581: read-variable['this',v32,-]|28582: constant[1.0,v33]}" ] 
BB10967 -> BB10968 [tailport=s, headport=n, headlabel="      10968"]
BB10967 -> BB10970 [tailport=s, headport=n, color=gray]
BB10968 [shape=record label="{28583: call-incrementWatchersCount [v30,v31,v32,v33,-]*}" ] 
BB10968 -> BB10969 [tailport=s, headport=n]
BB10968 -> BB10970 [tailport=s, headport=n, color=gray]
BB10969 [shape=record label="{28584: return[v1]}" ] 
BB10970 [shape=record label="{28585: exceptional-return}" ] 
//#$~ 15304
}
