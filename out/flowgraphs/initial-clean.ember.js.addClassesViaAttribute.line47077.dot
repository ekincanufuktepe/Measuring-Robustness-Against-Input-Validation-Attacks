digraph {
rankdir="TD"
BB_entry2237[shape=none,label=""];
BB_entry2237 -> BB25502 [tailport=s, headport=n, headlabel="    25502"]
BB25502 [shape=record label="{83958: constant[undefined,v1]|83959: vardecl['existingClasses']|83960: vardecl['indexes']|83961: vardecl['didChange']|83962: vardecl['i']|83963: vardecl['l']}" ] 
BB25502 -> BB25503 [tailport=s, headport=n, headlabel="      25503"]
BB25503 [shape=record label="{83964: read-variable['buildClassList',v4,v3]|83965: read-variable['element',v5,-]}" ] 
BB25503 -> BB25504 [tailport=s, headport=n, headlabel="      25504"]
BB25503 -> BB25520 [tailport=s, headport=n, color=gray, headlabel="      25520"]
BB25504 [shape=record label="{83966: call-buildClassList [v3,v4,v5,v2]}" ] 
BB25504 -> BB25505 [tailport=s, headport=n, headlabel="      25505"]
BB25504 -> BB25520 [tailport=s, headport=n, color=gray]
BB25505 [shape=record label="{83967: write-variable[v2,'existingClasses']*|83968: read-variable['intersect',v8,v7]|83969: read-variable['existingClasses',v9,-]|83970: read-variable['classNames',v10,-]}" ] 
BB25505 -> BB25506 [tailport=s, headport=n, headlabel="      25506"]
BB25505 -> BB25520 [tailport=s, headport=n, color=gray]
BB25506 [shape=record label="{83971: call-intersect [v7,v8,v9,v10,v6]}" ] 
BB25506 -> BB25507 [tailport=s, headport=n, headlabel="      25507"]
BB25506 -> BB25520 [tailport=s, headport=n, color=gray]
BB25507 [shape=record label="{83972: write-variable[v6,'indexes']*|83973: constant[false,v11]|83974: write-variable[v11,'didChange']*|83975: constant[0.0,v13]|83976: write-variable[v13,'i']*|83977: read-variable['classNames',v15,-]|83978: read-property[v15,'length',v14]|83979: \<variable-non-null-undef\>['classNames']|83980: write-variable[v14,'l']*}" ] 
BB25507 -> BB25508 [tailport=s, headport=n, headlabel="      25508"]
BB25507 -> BB25520 [tailport=s, headport=n, color=gray]
BB25508 [shape=record label="{83981: read-variable['i',v16,-]|83982: read-variable['l',v17,-]|83983: \<[v16,v17,v12]|83984: if[v12](true-block:25509,false-block:25510)}" ] 
BB25508 -> BB25509 [tailport=s, headport=n, headlabel="      25509"]
BB25508 -> BB25510 [tailport=s, headport=n, headlabel="      25510"]
BB25508 -> BB25520 [tailport=s, headport=n, color=gray]
BB25509 [shape=record label="{83985: read-variable['indexes',v21,-]|83986: read-variable['i',v22,-]|83987: read-property[v21,v22,v19]|83988: \<variable-non-null-undef\>['indexes']|83989: read-variable['undefined',v20,-]|83990: ===[v19,v20,v18]|83991: if[v18](true-block:25511,false-block:25513)}" ] 
BB25509 -> BB25511 [tailport=s, headport=n, headlabel="      25511"]
BB25509 -> BB25513 [tailport=s, headport=n, headlabel="      25513"]
BB25509 -> BB25520 [tailport=s, headport=n, color=gray]
BB25510 [shape=record label="{83992: read-variable['didChange',v18,-]|83993: if[v18](true-block:25514,false-block:25519)}" ] 
BB25510 -> BB25514 [tailport=s, headport=n, headlabel="      25514"]
BB25510 -> BB25519 [tailport=s, headport=n, headlabel="      25519"]
BB25510 -> BB25520 [tailport=s, headport=n, color=gray]
BB25511 [shape=record label="{83994: constant[true,v23]|83995: write-variable[v23,'didChange']*|83996: read-variable['existingClasses',v25,-]|83997: read-property[v25,'push',-]|83998: \<variable-non-null-undef\>['existingClasses']|83999: read-variable['classNames',v27,-]|84000: read-variable['i',v28,-]|84001: read-property[v27,v28,v26]|84002: \<variable-non-null-undef\>['classNames']}" ] 
BB25511 -> BB25512 [tailport=s, headport=n, headlabel="      25512"]
BB25511 -> BB25520 [tailport=s, headport=n, color=gray]
BB25512 [shape=record label="{84003: call-existingClasses.push [v25,'push',v26,-]*}" ] 
BB25512 -> BB25513 [tailport=s, headport=n]
BB25512 -> BB25520 [tailport=s, headport=n, color=gray]
BB25513 [shape=record label="{84004: constant[1.0,v23]|84005: read-variable['i',v24,-]|84006: +[v24,v25]|84007: +[v25,v23,v26]|84008: write-variable[v26,'i']}" ] 
BB25513 -> BB25508 [tailport=s, headport=n]
BB25513 -> BB25520 [tailport=s, headport=n, color=gray]
BB25514 [shape=record label="{84009: read-variable['element',v20,-]|84010: read-property[v20,'setAttribute',-]|84011: \<variable-non-null-undef\>['element']|84012: constant[\"class\",v21]|84013: read-variable['existingClasses',v26,-]|84014: read-property[v26,'length',v24]|84015: \<variable-non-null-undef\>['existingClasses']|84016: constant[0.0,v25]|84017: \>[v24,v25,v23]|84018: if[v23](true-block:25515,false-block:25516)}" ] 
BB25514 -> BB25515 [tailport=s, headport=n, headlabel="      25515"]
BB25514 -> BB25516 [tailport=s, headport=n, headlabel="      25516"]
BB25514 -> BB25520 [tailport=s, headport=n, color=gray]
BB25515 [shape=record label="{84019: read-variable['existingClasses',v28,-]|84020: read-property[v28,'join',-]|84021: \<variable-non-null-undef\>['existingClasses']|84022: constant[\" \",v29]}" ] 
BB25515 -> BB25517 [tailport=s, headport=n, headlabel="      25517"]
BB25515 -> BB25520 [tailport=s, headport=n, color=gray]
BB25516 [shape=record label="{84023: constant[\"\",v22]}" ] 
BB25516 -> BB25518 [tailport=s, headport=n, headlabel="      25518"]
BB25517 [shape=record label="{84024: call-existingClasses.join [v28,'join',v29,v22]}" ] 
BB25517 -> BB25518 [tailport=s, headport=n]
BB25517 -> BB25520 [tailport=s, headport=n, color=gray]
BB25518 [shape=record label="{84025: call-element.setAttribute [v20,'setAttribute',v21,v22,-]*}" ] 
BB25518 -> BB25519 [tailport=s, headport=n]
BB25518 -> BB25520 [tailport=s, headport=n, color=gray]
BB25519 [shape=record label="{84026: return[v1]}" ] 
BB25520 [shape=record label="{84027: exceptional-return}" ] 
//#$~ 47091
}
