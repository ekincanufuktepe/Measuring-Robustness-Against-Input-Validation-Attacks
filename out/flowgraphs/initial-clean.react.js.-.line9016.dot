digraph {
rankdir="TD"
BB_entry329[shape=none,label=""];
BB_entry329 -> BB4832 [tailport=s, headport=n, headlabel="    4832"]
BB4832 [shape=record label="{16859: constant[undefined,v1]|16860: vardecl['defaultValue']|16861: vardecl['children']|16862: vardecl['value']}" ] 
BB4832 -> BB4833 [tailport=s, headport=n, headlabel="      4833"]
BB4833 [shape=record label="{16863: read-variable['this',v4,-]|16864: read-property[v4,'props',v3]|16865: read-property[v3,'defaultValue',v2]|16866: \<property-non-null-undef\>[v4,'props']|16867: write-variable[v2,'defaultValue']*|16868: read-variable['this',v7,-]|16869: read-property[v7,'props',v6]|16870: read-property[v6,'children',v5]|16871: \<property-non-null-undef\>[v7,'props']|16872: write-variable[v5,'children']*|16873: read-variable['children',v9,-]|16874: constant[null,v10]|16875: !=[v9,v10,v8]|16876: if[v8](true-block:4834,false-block:4854)}" ] 
BB4833 -> BB4834 [tailport=s, headport=n, headlabel="      4834"]
BB4833 -> BB4854 [tailport=s, headport=n, headlabel="      4854"]
BB4833 -> BB4863 [tailport=s, headport=n, color=gray, headlabel="      4863"]
BB4834 [shape=record label="{16877: constant[\"production\",v12]|16878: constant[\"development\",v13]|16879: !==[v12,v13,v11]|16880: if[v11](true-block:4835,false-block:4839)}" ] 
BB4834 -> BB4835 [tailport=s, headport=n, headlabel="      4835"]
BB4834 -> BB4839 [tailport=s, headport=n, headlabel="      4839"]
BB4834 -> BB4863 [tailport=s, headport=n, color=gray]
BB4835 [shape=record label="{16881: constant[\"production\",v15]|16882: constant[\"development\",v16]|16883: !==[v15,v16,v14]|16884: if[v14](true-block:4836,false-block:4837)}" ] 
BB4835 -> BB4836 [tailport=s, headport=n, headlabel="      4836"]
BB4835 -> BB4837 [tailport=s, headport=n, headlabel="      4837"]
BB4835 -> BB4863 [tailport=s, headport=n, color=gray]
BB4836 [shape=record label="{16885: read-variable['warning',v18,v17]|16886: constant[false,v19]|16887: constant[\"Use the `defaultValue` or `value` props instead of setting \",v21]|16888: constant[\"children on \\\<textarea\\\>.\",v22]|16889: +[v21,v22,v20]}" ] 
BB4836 -> BB4838 [tailport=s, headport=n, headlabel="      4838"]
BB4836 -> BB4863 [tailport=s, headport=n, color=gray]
BB4837 [shape=record label="{16890: constant[null,-]}" ] 
BB4837 -> BB4839 [tailport=s, headport=n]
BB4838 [shape=record label="{16891: call-warning [v17,v18,v19,v20,-]}" ] 
BB4838 -> BB4839 [tailport=s, headport=n]
BB4838 -> BB4863 [tailport=s, headport=n, color=gray]
BB4839 [shape=record label="{16892: constant[\"production\",v15]|16893: constant[\"development\",v16]|16894: !==[v15,v16,v14]|16895: if[v14](true-block:4840,false-block:4841)}" ] 
BB4839 -> BB4840 [tailport=s, headport=n, headlabel="      4840"]
BB4839 -> BB4841 [tailport=s, headport=n, headlabel="      4841"]
BB4839 -> BB4863 [tailport=s, headport=n, color=gray]
BB4840 [shape=record label="{16896: read-variable['invariant',v18,v17]|16897: read-variable['defaultValue',v20,-]|16898: constant[null,v21]|16899: ==[v20,v21,v19]|16900: constant[\"If you supply `defaultValue` on a \\\<textarea\\\>, do not pass children.\",v22]}" ] 
BB4840 -> BB4842 [tailport=s, headport=n, headlabel="      4842"]
BB4840 -> BB4863 [tailport=s, headport=n, color=gray]
BB4841 [shape=record label="{16901: read-variable['invariant',v18,v17]|16902: read-variable['defaultValue',v20,-]|16903: constant[null,v21]|16904: ==[v20,v21,v19]}" ] 
BB4841 -> BB4843 [tailport=s, headport=n, headlabel="      4843"]
BB4841 -> BB4863 [tailport=s, headport=n, color=gray]
BB4842 [shape=record label="{16905: call-invariant [v17,v18,v19,v22,-]}" ] 
BB4842 -> BB4844 [tailport=s, headport=n, headlabel="      4844"]
BB4842 -> BB4863 [tailport=s, headport=n, color=gray]
BB4843 [shape=record label="{16906: call-invariant [v17,v18,v19,-]}" ] 
BB4843 -> BB4844 [tailport=s, headport=n]
BB4843 -> BB4863 [tailport=s, headport=n, color=gray]
BB4844 [shape=record label="{16907: read-variable['Array',v19,-]|16908: read-property[v19,'isArray',-]|16909: \<variable-non-null-undef\>['Array']|16910: read-variable['children',v20,-]}" ] 
BB4844 -> BB4845 [tailport=s, headport=n, headlabel="      4845"]
BB4844 -> BB4863 [tailport=s, headport=n, color=gray]
BB4845 [shape=record label="{16911: call-Array.isArray [v19,'isArray',v20,v17]}" ] 
BB4845 -> BB4846 [tailport=s, headport=n, headlabel="      4846"]
BB4845 -> BB4863 [tailport=s, headport=n, color=gray]
BB4846 [shape=record label="{16912: if[v17](true-block:4847,false-block:4853)}" ] 
BB4846 -> BB4847 [tailport=s, headport=n, headlabel="      4847"]
BB4846 -> BB4853 [tailport=s, headport=n, headlabel="      4853"]
BB4847 [shape=record label="{16913: constant[\"production\",v22]|16914: constant[\"development\",v23]|16915: !==[v22,v23,v21]|16916: if[v21](true-block:4848,false-block:4849)}" ] 
BB4847 -> BB4848 [tailport=s, headport=n, headlabel="      4848"]
BB4847 -> BB4849 [tailport=s, headport=n, headlabel="      4849"]
BB4847 -> BB4863 [tailport=s, headport=n, color=gray]
BB4848 [shape=record label="{16917: read-variable['invariant',v25,v24]|16918: read-variable['children',v29,-]|16919: read-property[v29,'length',v27]|16920: \<variable-non-null-undef\>['children']|16921: constant[1.0,v28]|16922: \<=[v27,v28,v26]|16923: constant[\"\\\<textarea\\\> can only have at most one child.\",v30]}" ] 
BB4848 -> BB4850 [tailport=s, headport=n, headlabel="      4850"]
BB4848 -> BB4863 [tailport=s, headport=n, color=gray]
BB4849 [shape=record label="{16924: read-variable['invariant',v25,v24]|16925: read-variable['children',v29,-]|16926: read-property[v29,'length',v27]|16927: \<variable-non-null-undef\>['children']|16928: constant[1.0,v28]|16929: \<=[v27,v28,v26]}" ] 
BB4849 -> BB4851 [tailport=s, headport=n, headlabel="      4851"]
BB4849 -> BB4863 [tailport=s, headport=n, color=gray]
BB4850 [shape=record label="{16930: call-invariant [v24,v25,v26,v30,-]}" ] 
BB4850 -> BB4852 [tailport=s, headport=n, headlabel="      4852"]
BB4850 -> BB4863 [tailport=s, headport=n, color=gray]
BB4851 [shape=record label="{16931: call-invariant [v24,v25,v26,-]}" ] 
BB4851 -> BB4852 [tailport=s, headport=n]
BB4851 -> BB4863 [tailport=s, headport=n, color=gray]
BB4852 [shape=record label="{16932: read-variable['children',v25,-]|16933: constant[0.0,v26]|16934: read-property[v25,v26,v24]|16935: \<variable-non-null-undef\>['children']|16936: write-variable[v24,'children']*}" ] 
BB4852 -> BB4853 [tailport=s, headport=n]
BB4852 -> BB4863 [tailport=s, headport=n, color=gray]
BB4853 [shape=record label="{16937: constant[\"\",v22]|16938: read-variable['children',v23,-]|16939: +[v22,v23,v21]|16940: write-variable[v21,'defaultValue']*}" ] 
BB4853 -> BB4854 [tailport=s, headport=n]
BB4853 -> BB4863 [tailport=s, headport=n, color=gray]
BB4854 [shape=record label="{16941: read-variable['defaultValue',v12,-]|16942: constant[null,v13]|16943: ==[v12,v13,v11]|16944: if[v11](true-block:4855,false-block:4856)}" ] 
BB4854 -> BB4855 [tailport=s, headport=n, headlabel="      4855"]
BB4854 -> BB4856 [tailport=s, headport=n, headlabel="      4856"]
BB4854 -> BB4863 [tailport=s, headport=n, color=gray]
BB4855 [shape=record label="{16945: constant[\"\",v14]|16946: write-variable[v14,'defaultValue']*}" ] 
BB4855 -> BB4856 [tailport=s, headport=n]
BB4856 [shape=record label="{16947: read-variable['LinkedValueUtils',v16,-]|16948: read-property[v16,'getValue',-]|16949: \<variable-non-null-undef\>['LinkedValueUtils']|16950: read-variable['this',v17,-]}" ] 
BB4856 -> BB4857 [tailport=s, headport=n, headlabel="      4857"]
BB4856 -> BB4863 [tailport=s, headport=n, color=gray]
BB4857 [shape=record label="{16951: call-LinkedValueUtils.getValue [v16,'getValue',v17,v14]}" ] 
BB4857 -> BB4858 [tailport=s, headport=n, headlabel="      4858"]
BB4857 -> BB4863 [tailport=s, headport=n, color=gray]
BB4858 [shape=record label="{16952: write-variable[v14,'value']*|16953: new[v1]|16954: constant[\"\",v19]|16955: read-variable['value',v22,-]|16956: constant[null,v23]|16957: !=[v22,v23,v21]|16958: if[v21](true-block:4859,false-block:4860)}" ] 
BB4858 -> BB4859 [tailport=s, headport=n, headlabel="      4859"]
BB4858 -> BB4860 [tailport=s, headport=n, headlabel="      4860"]
BB4858 -> BB4863 [tailport=s, headport=n, color=gray]
BB4859 [shape=record label="{16959: read-variable['value',v20,-]}" ] 
BB4859 -> BB4861 [tailport=s, headport=n, headlabel="      4861"]
BB4859 -> BB4863 [tailport=s, headport=n, color=gray]
BB4860 [shape=record label="{16960: read-variable['defaultValue',v20,-]}" ] 
BB4860 -> BB4861 [tailport=s, headport=n]
BB4860 -> BB4863 [tailport=s, headport=n, color=gray]
BB4861 [shape=record label="{16961: +[v19,v20,v18]|16962: write-property[v1,'initialValue',v18]}" ] 
BB4861 -> BB4862 [tailport=s, headport=n, headlabel="      4862"]
BB4861 -> BB4863 [tailport=s, headport=n, color=gray]
BB4862 [shape=record label="{16963: return[v1]}" ] 
BB4863 [shape=record label="{16964: exceptional-return}" ] 
//#$~ 9051
}
