digraph {
rankdir="TD"
BB_entry242[shape=none,label=""];
BB_entry242 -> BB3428 [tailport=s, headport=n, headlabel="    3428"]
BB3428 [shape=record label="{11970: constant[undefined,v1]|11971: vardecl['componentName']|11972: vardecl['propName']|11973: vardecl['error']|11974: vardecl['addendum']}" ] 
BB3428 -> BB3429 [tailport=s, headport=n, headlabel="      3429"]
BB3429 [shape=record label="{11975: read-variable['this',v4,-]|11976: read-property[v4,'getName',-]}" ] 
BB3429 -> BB3430 [tailport=s, headport=n, headlabel="      3430"]
BB3429 -> BB3464 [tailport=s, headport=n, color=gray, headlabel="      3464"]
BB3430 [shape=record label="{11977: call-this.getName [v4,'getName',v2]}" ] 
BB3430 -> BB3431 [tailport=s, headport=n, headlabel="      3431"]
BB3430 -> BB3464 [tailport=s, headport=n, color=gray]
BB3431 [shape=record label="{11978: write-variable[v2,'componentName']*|11979: read-variable['propTypes',v6,-]}" ] 
BB3431 -> BB3432 [tailport=s, headport=n, headlabel="      3432"]
BB3431 -> BB3464 [tailport=s, headport=n, color=gray]
BB3432 [shape=record label="{11980: begin-for-in[v6,v7]}" ] 
BB3432 -> BB3433 [tailport=s, headport=n, headlabel="      3433"]
BB3432 -> BB3464 [tailport=s, headport=n, color=gray]
BB3433 [shape=record label="{11981: has-next[v7,v8]|11982: if[v8](true-block:3434,false-block:3463)}" ] 
BB3433 -> BB3434 [tailport=s, headport=n, headlabel="      3434"]
BB3433 -> BB3463 [tailport=s, headport=n, headlabel="      3463"]
BB3434 [shape=record label="{11983: next-property[v7,v9]|11984: write-variable[v9,'propName']|11985: read-variable['propTypes',v12,-]|11986: read-property[v12,'hasOwnProperty',-]|11987: \<variable-non-null-undef\>['propTypes']|11988: read-variable['propName',v13,-]}" ] 
BB3434 -> BB3435 [tailport=s, headport=n, headlabel="      3435"]
BB3434 -> BB3464 [tailport=s, headport=n, color=gray]
BB3435 [shape=record label="{11989: call-propTypes.hasOwnProperty [v12,'hasOwnProperty',v13,v10]}" ] 
BB3435 -> BB3436 [tailport=s, headport=n, headlabel="      3436"]
BB3435 -> BB3464 [tailport=s, headport=n, color=gray]
BB3436 [shape=record label="{11990: if[v10](true-block:3437,false-block:3462)}" ] 
BB3436 -> BB3437 [tailport=s, headport=n, headlabel="      3437"]
BB3436 -> BB3462 [tailport=s, headport=n, headlabel="      3462"]
BB3437 [shape=record label="{11991: constant[\"production\",v15]|11992: constant[\"development\",v16]|11993: !==[v15,v16,v14]|11994: if[v14](true-block:3438,false-block:3439)}" ] 
BB3437 -> BB3438 [tailport=s, headport=n, headlabel="      3438"]
BB3437 -> BB3439 [tailport=s, headport=n, headlabel="      3439"]
BB3437 -> BB3448 [tailport=s, headport=n, color=gray, headlabel="      3448"]
BB3438 [shape=record label="{11995: read-variable['invariant',v18,v17]|11996: read-variable['propTypes',v23,-]|11997: read-variable['propName',v24,-]|11998: read-property[v23,v24,v22]|11999: \<variable-non-null-undef\>['propTypes']|12000: typeof[v22,v20]|12001: constant[\"function\",v21]|12002: ===[v20,v21,v19]|12003: constant[\"%s: %s type `%s` is invalid; it must be a function, usually \",v26]|12004: constant[\"from React.PropTypes.\",v27]|12005: +[v26,v27,v25]|12006: read-variable['componentName',v28,-]|12007: if[v28](true-block:3441,false-block:3440)}" ] 
BB3438 -> BB3441 [tailport=s, headport=n, headlabel="      3441"]
BB3438 -> BB3440 [tailport=s, headport=n, headlabel="      3440"]
BB3438 -> BB3448 [tailport=s, headport=n, color=gray]
BB3439 [shape=record label="{12008: read-variable['invariant',v18,v17]|12009: read-variable['propTypes',v23,-]|12010: read-variable['propName',v24,-]|12011: read-property[v23,v24,v22]|12012: \<variable-non-null-undef\>['propTypes']|12013: typeof[v22,v20]|12014: constant[\"function\",v21]|12015: ===[v20,v21,v19]}" ] 
BB3439 -> BB3443 [tailport=s, headport=n, headlabel="      3443"]
BB3439 -> BB3448 [tailport=s, headport=n, color=gray]
BB3440 [shape=record label="{12016: constant[\"React class\",v28]}" ] 
BB3440 -> BB3441 [tailport=s, headport=n]
BB3441 [shape=record label="{12017: read-variable['ReactPropTypeLocationNames',v30,-]|12018: read-variable['location',v31,-]|12019: read-property[v30,v31,v29]|12020: \<variable-non-null-undef\>['ReactPropTypeLocationNames']|12021: read-variable['propName',v32,-]}" ] 
BB3441 -> BB3442 [tailport=s, headport=n, headlabel="      3442"]
BB3441 -> BB3448 [tailport=s, headport=n, color=gray]
BB3442 [shape=record label="{12022: call-invariant [v17,v18,v19,v25,v28,v29,v32,-]}" ] 
BB3442 -> BB3444 [tailport=s, headport=n, headlabel="      3444"]
BB3442 -> BB3448 [tailport=s, headport=n, color=gray]
BB3443 [shape=record label="{12023: call-invariant [v17,v18,v19,-]}" ] 
BB3443 -> BB3444 [tailport=s, headport=n]
BB3443 -> BB3448 [tailport=s, headport=n, color=gray]
BB3444 [shape=record label="{12024: read-variable['propTypes',v19,-]|12025: read-variable['propName',v20,-]|12026: read-property[v19,v20,-]|12027: \<variable-non-null-undef\>['propTypes']|12028: read-variable['props',v21,-]|12029: read-variable['propName',v22,-]|12030: read-variable['componentName',v23,-]|12031: read-variable['location',v24,-]}" ] 
BB3444 -> BB3445 [tailport=s, headport=n, headlabel="      3445"]
BB3444 -> BB3448 [tailport=s, headport=n, color=gray]
BB3445 [shape=record label="{12032: call-null [v19,[v20],v21,v22,v23,v24,v17]}" ] 
BB3445 -> BB3446 [tailport=s, headport=n, headlabel="      3446"]
BB3445 -> BB3448 [tailport=s, headport=n, color=gray]
BB3446 [shape=record label="{12033: write-variable[v17,'error']*}" ] 
BB3446 -> BB3447 [tailport=s, headport=n, headlabel="      3447"]
BB3447 [shape=record label="{12034: read-variable['error',v17,-]|12035: read-variable['Error',v18,-]|12036: instanceof[v17,v18,v16]|12037: if[v16](true-block:3451,false-block:3462)}" ] 
BB3447 -> BB3451 [tailport=s, headport=n, headlabel="      3451"]
BB3447 -> BB3462 [tailport=s, headport=n]
BB3447 -> BB3464 [tailport=s, headport=n, color=gray]
BB3448 [shape=record label="{12038: catch[ex,v14]|12039: begin-with[v14]}" ] 
BB3448 -> BB3449 [tailport=s, headport=n, headlabel="      3449"]
BB3448 -> BB3464 [tailport=s, headport=n, color=gray]
BB3449 [shape=record label="{12040: read-variable['ex',v16,v15]|12041: write-variable[v16,'error']*|12042: end-with}" ] 
BB3449 -> BB3447 [tailport=s, headport=n]
BB3449 -> BB3450 [tailport=s, headport=n, color=gray, headlabel="      3450"]
BB3450 [shape=record label="{12043: end-with}" ] 
BB3450 -> BB3464 [tailport=s, headport=n]
BB3451 [shape=record label="{12044: read-variable['getDeclarationErrorAddendum',v21,v20]|12045: read-variable['this',v22,-]}" ] 
BB3451 -> BB3452 [tailport=s, headport=n, headlabel="      3452"]
BB3451 -> BB3464 [tailport=s, headport=n, color=gray]
BB3452 [shape=record label="{12046: call-getDeclarationErrorAddendum [v20,v21,v22,v19]}" ] 
BB3452 -> BB3453 [tailport=s, headport=n, headlabel="      3453"]
BB3452 -> BB3464 [tailport=s, headport=n, color=gray]
BB3453 [shape=record label="{12047: write-variable[v19,'addendum']*|12048: read-variable['location',v24,-]|12049: read-variable['ReactPropTypeLocations',v26,-]|12050: read-property[v26,'prop',v25]|12051: \<variable-non-null-undef\>['ReactPropTypeLocations']|12052: ===[v24,v25,v23]|12053: if[v23](true-block:3454,false-block:3455)}" ] 
BB3453 -> BB3454 [tailport=s, headport=n, headlabel="      3454"]
BB3453 -> BB3455 [tailport=s, headport=n, headlabel="      3455"]
BB3453 -> BB3464 [tailport=s, headport=n, color=gray]
BB3454 [shape=record label="{12054: constant[\"production\",v28]|12055: constant[\"development\",v29]|12056: !==[v28,v29,v27]|12057: if[v27](true-block:3456,false-block:3457)}" ] 
BB3454 -> BB3456 [tailport=s, headport=n, headlabel="      3456"]
BB3454 -> BB3457 [tailport=s, headport=n, headlabel="      3457"]
BB3454 -> BB3464 [tailport=s, headport=n, color=gray]
BB3455 [shape=record label="{12058: constant[\"production\",v28]|12059: constant[\"development\",v29]|12060: !==[v28,v29,v27]|12061: if[v27](true-block:3459,false-block:3460)}" ] 
BB3455 -> BB3459 [tailport=s, headport=n, headlabel="      3459"]
BB3455 -> BB3460 [tailport=s, headport=n, headlabel="      3460"]
BB3455 -> BB3464 [tailport=s, headport=n, color=gray]
BB3456 [shape=record label="{12062: read-variable['warning',v31,v30]|12063: constant[false,v32]|12064: constant[\"Failed Composite propType: %s%s\",v33]|12065: read-variable['error',v35,-]|12066: read-property[v35,'message',v34]|12067: \<variable-non-null-undef\>['error']|12068: read-variable['addendum',v36,-]}" ] 
BB3456 -> BB3458 [tailport=s, headport=n, headlabel="      3458"]
BB3456 -> BB3464 [tailport=s, headport=n, color=gray]
BB3457 [shape=record label="{12069: constant[null,-]}" ] 
BB3457 -> BB3462 [tailport=s, headport=n]
BB3458 [shape=record label="{12070: call-warning [v30,v31,v32,v33,v34,v36,-]}" ] 
BB3458 -> BB3462 [tailport=s, headport=n]
BB3458 -> BB3464 [tailport=s, headport=n, color=gray]
BB3459 [shape=record label="{12071: read-variable['warning',v31,v30]|12072: constant[false,v32]|12073: constant[\"Failed Context Types: %s%s\",v33]|12074: read-variable['error',v35,-]|12075: read-property[v35,'message',v34]|12076: \<variable-non-null-undef\>['error']|12077: read-variable['addendum',v36,-]}" ] 
BB3459 -> BB3461 [tailport=s, headport=n, headlabel="      3461"]
BB3459 -> BB3464 [tailport=s, headport=n, color=gray]
BB3460 [shape=record label="{12078: constant[null,-]}" ] 
BB3460 -> BB3462 [tailport=s, headport=n]
BB3461 [shape=record label="{12079: call-warning [v30,v31,v32,v33,v34,v36,-]}" ] 
BB3461 -> BB3462 [tailport=s, headport=n]
BB3461 -> BB3464 [tailport=s, headport=n, color=gray]
BB3462 [shape=record label="{12080: end-for-in(begin-node:11980)}" ] 
BB3462 -> BB3433 [tailport=s, headport=n]
BB3463 [shape=record label="{12081: return[v1]}" ] 
BB3464 [shape=record label="{12082: exceptional-return}" ] 
//#$~ 6679
}
