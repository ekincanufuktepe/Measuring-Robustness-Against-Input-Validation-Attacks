digraph {
rankdir="TD"
BB_entry697[shape=none,label=""];
BB_entry697 -> BB9488 [tailport=s, headport=n, headlabel="    9488"]
BB9488 [shape=record label="{24804: constant[undefined,v1]|24805: vardecl['self']|24806: vardecl['ast']|24807: vardecl['assignable']|24808: vardecl['assign']|24809: vardecl['toWatch']|24810: vardecl['inputs']|24811: vardecl['expressions']|24812: vardecl['fn']}" ] 
BB9488 -> BB9489 [tailport=s, headport=n, headlabel="      9489"]
BB9489 [shape=record label="{24813: read-variable['this',v2,-]|24814: write-variable[v2,'self']*|24815: read-variable['this',v6,-]|24816: read-property[v6,'astBuilder',v5]|24817: read-property[v5,'ast',-]|24818: \<property-non-null-undef\>[v6,'astBuilder']|24819: read-variable['expression',v7,-]}" ] 
BB9489 -> BB9490 [tailport=s, headport=n, headlabel="      9490"]
BB9489 -> BB9525 [tailport=s, headport=n, color=gray, headlabel="      9525"]
BB9490 [shape=record label="{24820: call-this.astBuilder.ast [v5,'ast',v7,v3]}" ] 
BB9490 -> BB9491 [tailport=s, headport=n, headlabel="      9491"]
BB9490 -> BB9525 [tailport=s, headport=n, color=gray]
BB9491 [shape=record label="{24821: write-variable[v3,'ast']*|24822: read-variable['this',v9,-]|24823: read-variable['expression',v8,-]|24824: write-property[v9,'expression',v8]*|24825: read-variable['this',v11,-]|24826: read-variable['expensiveChecks',v10,-]|24827: write-property[v11,'expensiveChecks',v10]*|24828: read-variable['findConstantAndWatchExpressions',v13,v12]|24829: read-variable['ast',v14,-]|24830: read-variable['self',v16,-]|24831: read-property[v16,'$filter',v15]|24832: \<variable-non-null-undef\>['self']}" ] 
BB9491 -> BB9492 [tailport=s, headport=n, headlabel="      9492"]
BB9491 -> BB9525 [tailport=s, headport=n, color=gray]
BB9492 [shape=record label="{24833: call-findConstantAndWatchExpressions [v12,v13,v14,v15,-]*}" ] 
BB9492 -> BB9493 [tailport=s, headport=n, headlabel="      9493"]
BB9492 -> BB9525 [tailport=s, headport=n, color=gray]
BB9493 [shape=record label="{24834: read-variable['assignableAST',v19,v18]|24835: read-variable['ast',v20,-]}" ] 
BB9493 -> BB9494 [tailport=s, headport=n, headlabel="      9494"]
BB9493 -> BB9525 [tailport=s, headport=n, color=gray]
BB9494 [shape=record label="{24836: call-assignableAST [v18,v19,v20,v17]}" ] 
BB9494 -> BB9495 [tailport=s, headport=n, headlabel="      9495"]
BB9494 -> BB9525 [tailport=s, headport=n, color=gray]
BB9495 [shape=record label="{24837: write-variable[v17,'assignable']|24838: if[v17](true-block:9496,false-block:9499)}" ] 
BB9495 -> BB9496 [tailport=s, headport=n, headlabel="      9496"]
BB9495 -> BB9499 [tailport=s, headport=n, headlabel="      9499"]
BB9496 [shape=record label="{24839: read-variable['this',v23,-]|24840: read-property[v23,'recurse',-]|24841: read-variable['assignable',v24,-]}" ] 
BB9496 -> BB9497 [tailport=s, headport=n, headlabel="      9497"]
BB9496 -> BB9525 [tailport=s, headport=n, color=gray]
BB9497 [shape=record label="{24842: call-this.recurse [v23,'recurse',v24,v21]}" ] 
BB9497 -> BB9498 [tailport=s, headport=n, headlabel="      9498"]
BB9497 -> BB9525 [tailport=s, headport=n, color=gray]
BB9498 [shape=record label="{24843: write-variable[v21,'assign']*}" ] 
BB9498 -> BB9499 [tailport=s, headport=n]
BB9499 [shape=record label="{24844: read-variable['getInputs',v23,v22]|24845: read-variable['ast',v25,-]|24846: read-property[v25,'body',v24]|24847: \<variable-non-null-undef\>['ast']}" ] 
BB9499 -> BB9500 [tailport=s, headport=n, headlabel="      9500"]
BB9499 -> BB9525 [tailport=s, headport=n, color=gray]
BB9500 [shape=record label="{24848: call-getInputs [v22,v23,v24,v21]}" ] 
BB9500 -> BB9501 [tailport=s, headport=n, headlabel="      9501"]
BB9500 -> BB9525 [tailport=s, headport=n, color=gray]
BB9501 [shape=record label="{24849: write-variable[v21,'toWatch']*|24850: read-variable['toWatch',v26,-]|24851: if[v26](true-block:9502,false-block:9506)}" ] 
BB9501 -> BB9502 [tailport=s, headport=n, headlabel="      9502"]
BB9501 -> BB9506 [tailport=s, headport=n, headlabel="      9506"]
BB9501 -> BB9525 [tailport=s, headport=n, color=gray]
BB9502 [shape=record label="{24852: read-variable['Array',v28,-]}" ] 
BB9502 -> BB9503 [tailport=s, headport=n, headlabel="      9503"]
BB9502 -> BB9525 [tailport=s, headport=n, color=gray]
BB9503 [shape=record label="{24853: construct [-,v28,v27]}" ] 
BB9503 -> BB9504 [tailport=s, headport=n, headlabel="      9504"]
BB9503 -> BB9525 [tailport=s, headport=n, color=gray]
BB9504 [shape=record label="{24854: write-variable[v27,'inputs']*|24855: read-variable['forEach',v30,v29]|24856: read-variable['toWatch',v31,-]|24857: function-expr[function ( watch key ),v32]}" ] 
BB9504 -> BB9505 [tailport=s, headport=n, headlabel="      9505"]
BB9504 -> BB9525 [tailport=s, headport=n, color=gray]
BB9505 [shape=record label="{24858: call-forEach [v29,v30,v31,v32,-]*}" ] 
BB9505 -> BB9506 [tailport=s, headport=n]
BB9505 -> BB9525 [tailport=s, headport=n, color=gray]
BB9506 [shape=record label="{24859: read-variable['Array',v28,-]}" ] 
BB9506 -> BB9507 [tailport=s, headport=n, headlabel="      9507"]
BB9506 -> BB9525 [tailport=s, headport=n, color=gray]
BB9507 [shape=record label="{24860: construct [-,v28,v27]}" ] 
BB9507 -> BB9508 [tailport=s, headport=n, headlabel="      9508"]
BB9507 -> BB9525 [tailport=s, headport=n, color=gray]
BB9508 [shape=record label="{24861: write-variable[v27,'expressions']*|24862: read-variable['forEach',v30,v29]|24863: read-variable['ast',v32,-]|24864: read-property[v32,'body',v31]|24865: \<variable-non-null-undef\>['ast']|24866: function-expr[function ( expression ),v33]}" ] 
BB9508 -> BB9509 [tailport=s, headport=n, headlabel="      9509"]
BB9508 -> BB9525 [tailport=s, headport=n, color=gray]
BB9509 [shape=record label="{24867: call-forEach [v29,v30,v31,v33,-]*}" ] 
BB9509 -> BB9510 [tailport=s, headport=n, headlabel="      9510"]
BB9509 -> BB9525 [tailport=s, headport=n, color=gray]
BB9510 [shape=record label="{24868: read-variable['ast',v39,-]|24869: read-property[v39,'body',v38]|24870: \<variable-non-null-undef\>['ast']|24871: read-property[v38,'length',v36]|24872: \<property-non-null-undef\>[v39,'body']|24873: constant[0.0,v37]|24874: ===[v36,v37,v35]|24875: if[v35](true-block:9511,false-block:9512)}" ] 
BB9510 -> BB9511 [tailport=s, headport=n, headlabel="      9511"]
BB9510 -> BB9512 [tailport=s, headport=n, headlabel="      9512"]
BB9510 -> BB9525 [tailport=s, headport=n, color=gray]
BB9511 [shape=record label="{24876: function-expr[function ( ),v34]}" ] 
BB9511 -> BB9515 [tailport=s, headport=n, headlabel="      9515"]
BB9512 [shape=record label="{24877: read-variable['ast',v44,-]|24878: read-property[v44,'body',v43]|24879: \<variable-non-null-undef\>['ast']|24880: read-property[v43,'length',v41]|24881: \<property-non-null-undef\>[v44,'body']|24882: constant[1.0,v42]|24883: ===[v41,v42,v40]|24884: if[v40](true-block:9513,false-block:9514)}" ] 
BB9512 -> BB9513 [tailport=s, headport=n, headlabel="      9513"]
BB9512 -> BB9514 [tailport=s, headport=n, headlabel="      9514"]
BB9512 -> BB9525 [tailport=s, headport=n, color=gray]
BB9513 [shape=record label="{24885: read-variable['expressions',v45,-]|24886: constant[0.0,v46]|24887: read-property[v45,v46,v34]|24888: \<variable-non-null-undef\>['expressions']}" ] 
BB9513 -> BB9515 [tailport=s, headport=n]
BB9513 -> BB9525 [tailport=s, headport=n, color=gray]
BB9514 [shape=record label="{24889: function-expr[function ( scope locals ),v34]}" ] 
BB9514 -> BB9515 [tailport=s, headport=n]
BB9515 [shape=record label="{24890: write-variable[v34,'fn']*|24891: read-variable['assign',v40,-]|24892: if[v40](true-block:9516,false-block:9517)}" ] 
BB9515 -> BB9516 [tailport=s, headport=n, headlabel="      9516"]
BB9515 -> BB9517 [tailport=s, headport=n, headlabel="      9517"]
BB9515 -> BB9525 [tailport=s, headport=n, color=gray]
BB9516 [shape=record label="{24893: read-variable['fn',v42,-]|24894: function-expr[function ( scope value locals ),v41]|24895: write-property[v42,'assign',v41]|24896: \<variable-non-null-undef\>['fn']*}" ] 
BB9516 -> BB9517 [tailport=s, headport=n]
BB9516 -> BB9525 [tailport=s, headport=n, color=gray]
BB9517 [shape=record label="{24897: read-variable['inputs',v41,-]|24898: if[v41](true-block:9518,false-block:9519)}" ] 
BB9517 -> BB9518 [tailport=s, headport=n, headlabel="      9518"]
BB9517 -> BB9519 [tailport=s, headport=n, headlabel="      9519"]
BB9517 -> BB9525 [tailport=s, headport=n, color=gray]
BB9518 [shape=record label="{24899: read-variable['fn',v43,-]|24900: read-variable['inputs',v42,-]|24901: write-property[v43,'inputs',v42]|24902: \<variable-non-null-undef\>['fn']*}" ] 
BB9518 -> BB9519 [tailport=s, headport=n]
BB9518 -> BB9525 [tailport=s, headport=n, color=gray]
BB9519 [shape=record label="{24903: read-variable['fn',v43,-]|24904: read-variable['isLiteral',v45,v44]|24905: read-variable['ast',v46,-]}" ] 
BB9519 -> BB9520 [tailport=s, headport=n, headlabel="      9520"]
BB9519 -> BB9525 [tailport=s, headport=n, color=gray]
BB9520 [shape=record label="{24906: call-isLiteral [v44,v45,v46,v42]}" ] 
BB9520 -> BB9521 [tailport=s, headport=n, headlabel="      9521"]
BB9520 -> BB9525 [tailport=s, headport=n, color=gray]
BB9521 [shape=record label="{24907: write-property[v43,'literal',v42]|24908: \<variable-non-null-undef\>['fn']*|24909: read-variable['fn',v48,-]|24910: read-variable['isConstant',v50,v49]|24911: read-variable['ast',v51,-]}" ] 
BB9521 -> BB9522 [tailport=s, headport=n, headlabel="      9522"]
BB9521 -> BB9525 [tailport=s, headport=n, color=gray]
BB9522 [shape=record label="{24912: call-isConstant [v49,v50,v51,v47]}" ] 
BB9522 -> BB9523 [tailport=s, headport=n, headlabel="      9523"]
BB9522 -> BB9525 [tailport=s, headport=n, color=gray]
BB9523 [shape=record label="{24913: write-property[v48,'constant',v47]|24914: \<variable-non-null-undef\>['fn']*|24915: read-variable['fn',v1,-]}" ] 
BB9523 -> BB9524 [tailport=s, headport=n, headlabel="      9524"]
BB9523 -> BB9525 [tailport=s, headport=n, color=gray]
BB9524 [shape=record label="{24916: return[v1]}" ] 
BB9525 [shape=record label="{24917: exceptional-return}" ] 
//#$~ 13618
}
