digraph {
rankdir="TD"
BB_entry389[shape=none,label=""];
BB_entry389 -> BB5787 [tailport=s, headport=n, headlabel="    5787"]
BB5787 [shape=record label="{20173: constant[undefined,v1]|20174: vardecl['propName']|20175: vardecl['error']|20176: vardecl['addendum']}" ] 
BB5787 -> BB5788 [tailport=s, headport=n, headlabel="      5788"]
BB5788 [shape=record label="{20177: read-variable['propTypes',v3,-]}" ] 
BB5788 -> BB5789 [tailport=s, headport=n, headlabel="      5789"]
BB5788 -> BB5818 [tailport=s, headport=n, color=gray, headlabel="      5818"]
BB5789 [shape=record label="{20178: begin-for-in[v3,v4]}" ] 
BB5789 -> BB5790 [tailport=s, headport=n, headlabel="      5790"]
BB5789 -> BB5818 [tailport=s, headport=n, color=gray]
BB5790 [shape=record label="{20179: has-next[v4,v5]|20180: if[v5](true-block:5791,false-block:5817)}" ] 
BB5790 -> BB5791 [tailport=s, headport=n, headlabel="      5791"]
BB5790 -> BB5817 [tailport=s, headport=n, headlabel="      5817"]
BB5791 [shape=record label="{20181: next-property[v4,v6]|20182: write-variable[v6,'propName']|20183: read-variable['propTypes',v9,-]|20184: read-property[v9,'hasOwnProperty',-]|20185: \<variable-non-null-undef\>['propTypes']|20186: read-variable['propName',v10,-]}" ] 
BB5791 -> BB5792 [tailport=s, headport=n, headlabel="      5792"]
BB5791 -> BB5818 [tailport=s, headport=n, color=gray]
BB5792 [shape=record label="{20187: call-propTypes.hasOwnProperty [v9,'hasOwnProperty',v10,v7]}" ] 
BB5792 -> BB5793 [tailport=s, headport=n, headlabel="      5793"]
BB5792 -> BB5818 [tailport=s, headport=n, color=gray]
BB5793 [shape=record label="{20188: if[v7](true-block:5794,false-block:5816)}" ] 
BB5793 -> BB5794 [tailport=s, headport=n, headlabel="      5794"]
BB5793 -> BB5816 [tailport=s, headport=n, headlabel="      5816"]
BB5794 [shape=record label="{20189: constant[\"production\",v12]|20190: constant[\"development\",v13]|20191: !==[v12,v13,v11]|20192: if[v11](true-block:5795,false-block:5796)}" ] 
BB5794 -> BB5795 [tailport=s, headport=n, headlabel="      5795"]
BB5794 -> BB5796 [tailport=s, headport=n, headlabel="      5796"]
BB5794 -> BB5805 [tailport=s, headport=n, color=gray, headlabel="      5805"]
BB5795 [shape=record label="{20193: read-variable['invariant',v15,v14]|20194: read-variable['propTypes',v20,-]|20195: read-variable['propName',v21,-]|20196: read-property[v20,v21,v19]|20197: \<variable-non-null-undef\>['propTypes']|20198: typeof[v19,v17]|20199: constant[\"function\",v18]|20200: ===[v17,v18,v16]|20201: constant[\"%s: %s type `%s` is invalid; it must be a function, usually from \",v23]|20202: constant[\"React.PropTypes.\",v24]|20203: +[v23,v24,v22]|20204: read-variable['componentName',v25,-]|20205: if[v25](true-block:5798,false-block:5797)}" ] 
BB5795 -> BB5798 [tailport=s, headport=n, headlabel="      5798"]
BB5795 -> BB5797 [tailport=s, headport=n, headlabel="      5797"]
BB5795 -> BB5805 [tailport=s, headport=n, color=gray]
BB5796 [shape=record label="{20206: read-variable['invariant',v15,v14]|20207: read-variable['propTypes',v20,-]|20208: read-variable['propName',v21,-]|20209: read-property[v20,v21,v19]|20210: \<variable-non-null-undef\>['propTypes']|20211: typeof[v19,v17]|20212: constant[\"function\",v18]|20213: ===[v17,v18,v16]}" ] 
BB5796 -> BB5800 [tailport=s, headport=n, headlabel="      5800"]
BB5796 -> BB5805 [tailport=s, headport=n, color=gray]
BB5797 [shape=record label="{20214: constant[\"React class\",v25]}" ] 
BB5797 -> BB5798 [tailport=s, headport=n]
BB5798 [shape=record label="{20215: read-variable['ReactPropTypeLocationNames',v27,-]|20216: read-variable['location',v28,-]|20217: read-property[v27,v28,v26]|20218: \<variable-non-null-undef\>['ReactPropTypeLocationNames']|20219: read-variable['propName',v29,-]}" ] 
BB5798 -> BB5799 [tailport=s, headport=n, headlabel="      5799"]
BB5798 -> BB5805 [tailport=s, headport=n, color=gray]
BB5799 [shape=record label="{20220: call-invariant [v14,v15,v16,v22,v25,v26,v29,-]}" ] 
BB5799 -> BB5801 [tailport=s, headport=n, headlabel="      5801"]
BB5799 -> BB5805 [tailport=s, headport=n, color=gray]
BB5800 [shape=record label="{20221: call-invariant [v14,v15,v16,-]}" ] 
BB5800 -> BB5801 [tailport=s, headport=n]
BB5800 -> BB5805 [tailport=s, headport=n, color=gray]
BB5801 [shape=record label="{20222: read-variable['propTypes',v16,-]|20223: read-variable['propName',v17,-]|20224: read-property[v16,v17,-]|20225: \<variable-non-null-undef\>['propTypes']|20226: read-variable['props',v18,-]|20227: read-variable['propName',v19,-]|20228: read-variable['componentName',v20,-]|20229: read-variable['location',v21,-]}" ] 
BB5801 -> BB5802 [tailport=s, headport=n, headlabel="      5802"]
BB5801 -> BB5805 [tailport=s, headport=n, color=gray]
BB5802 [shape=record label="{20230: call-null [v16,[v17],v18,v19,v20,v21,v14]}" ] 
BB5802 -> BB5803 [tailport=s, headport=n, headlabel="      5803"]
BB5802 -> BB5805 [tailport=s, headport=n, color=gray]
BB5803 [shape=record label="{20231: write-variable[v14,'error']*}" ] 
BB5803 -> BB5804 [tailport=s, headport=n, headlabel="      5804"]
BB5804 [shape=record label="{20232: read-variable['error',v14,-]|20233: read-variable['Error',v15,-]|20234: instanceof[v14,v15,v13]|20235: if[v13](true-block:5808,false-block:5809)}" ] 
BB5804 -> BB5809 [tailport=s, headport=n, headlabel="      5809"]
BB5804 -> BB5808 [tailport=s, headport=n, headlabel="      5808"]
BB5804 -> BB5818 [tailport=s, headport=n, color=gray]
BB5805 [shape=record label="{20236: catch[ex,v11]|20237: begin-with[v11]}" ] 
BB5805 -> BB5806 [tailport=s, headport=n, headlabel="      5806"]
BB5805 -> BB5818 [tailport=s, headport=n, color=gray]
BB5806 [shape=record label="{20238: read-variable['ex',v13,v12]|20239: write-variable[v13,'error']*|20240: end-with}" ] 
BB5806 -> BB5804 [tailport=s, headport=n]
BB5806 -> BB5807 [tailport=s, headport=n, color=gray, headlabel="      5807"]
BB5807 [shape=record label="{20241: end-with}" ] 
BB5807 -> BB5818 [tailport=s, headport=n]
BB5808 [shape=record label="{20242: read-variable['error',v19,-]|20243: read-property[v19,'message',v17]|20244: \<variable-non-null-undef\>['error']|20245: read-variable['loggedTypeFailures',v18,-]|20246: in[v17,v18,v16]|20247: ![v16,v13]}" ] 
BB5808 -> BB5809 [tailport=s, headport=n]
BB5808 -> BB5818 [tailport=s, headport=n, color=gray]
BB5809 [shape=record label="{20248: if[v13](true-block:5810,false-block:5816)}" ] 
BB5809 -> BB5810 [tailport=s, headport=n, headlabel="      5810"]
BB5809 -> BB5816 [tailport=s, headport=n]
BB5810 [shape=record label="{20249: read-variable['loggedTypeFailures',v17,-]|20250: read-variable['error',v19,-]|20251: read-property[v19,'message',v18]|20252: \<variable-non-null-undef\>['error']|20253: constant[true,v16]|20254: write-property[v17,v18,v16]|20255: \<variable-non-null-undef\>['loggedTypeFailures']*|20256: read-variable['getDeclarationErrorAddendum',v22,v21]|20257: read-variable['this',v23,-]}" ] 
BB5810 -> BB5811 [tailport=s, headport=n, headlabel="      5811"]
BB5810 -> BB5818 [tailport=s, headport=n, color=gray]
BB5811 [shape=record label="{20258: call-getDeclarationErrorAddendum [v21,v22,v23,v20]}" ] 
BB5811 -> BB5812 [tailport=s, headport=n, headlabel="      5812"]
BB5811 -> BB5818 [tailport=s, headport=n, color=gray]
BB5812 [shape=record label="{20259: write-variable[v20,'addendum']*|20260: constant[\"production\",v25]|20261: constant[\"development\",v26]|20262: !==[v25,v26,v24]|20263: if[v24](true-block:5813,false-block:5814)}" ] 
BB5812 -> BB5813 [tailport=s, headport=n, headlabel="      5813"]
BB5812 -> BB5814 [tailport=s, headport=n, headlabel="      5814"]
BB5812 -> BB5818 [tailport=s, headport=n, color=gray]
BB5813 [shape=record label="{20264: read-variable['warning',v28,v27]|20265: constant[false,v29]|20266: constant[\"Failed propType: %s%s\",v30]|20267: read-variable['error',v32,-]|20268: read-property[v32,'message',v31]|20269: \<variable-non-null-undef\>['error']|20270: read-variable['addendum',v33,-]}" ] 
BB5813 -> BB5815 [tailport=s, headport=n, headlabel="      5815"]
BB5813 -> BB5818 [tailport=s, headport=n, color=gray]
BB5814 [shape=record label="{20271: constant[null,-]}" ] 
BB5814 -> BB5816 [tailport=s, headport=n]
BB5815 [shape=record label="{20272: call-warning [v27,v28,v29,v30,v31,v33,-]}" ] 
BB5815 -> BB5816 [tailport=s, headport=n]
BB5815 -> BB5818 [tailport=s, headport=n, color=gray]
BB5816 [shape=record label="{20273: end-for-in(begin-node:20178)}" ] 
BB5816 -> BB5790 [tailport=s, headport=n]
BB5817 [shape=record label="{20274: return[v1]}" ] 
BB5818 [shape=record label="{20275: exceptional-return}" ] 
//#$~ 10361
}
