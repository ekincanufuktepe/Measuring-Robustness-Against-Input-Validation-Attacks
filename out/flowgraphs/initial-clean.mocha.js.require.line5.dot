digraph {
rankdir="TD"
BB_entry2[shape=none,label=""];
BB_entry2 -> BB5 [tailport=s, headport=n, headlabel="    5"]
BB5 [shape=record label="{5: constant[undefined,v1]|6: vardecl['path']|7: vardecl['mod']}" ] 
BB5 -> BB6 [tailport=s, headport=n, headlabel="      6"]
BB6 [shape=record label="{8: read-variable['require',v4,-]|9: read-property[v4,'resolve',-]|10: \<variable-non-null-undef\>['require']|11: read-variable['p',v5,-]}" ] 
BB6 -> BB7 [tailport=s, headport=n, headlabel="      7"]
BB6 -> BB18 [tailport=s, headport=n, color=gray, headlabel="      18"]
BB7 [shape=record label="{12: call-require.resolve [v4,'resolve',v5,v2]}" ] 
BB7 -> BB8 [tailport=s, headport=n, headlabel="      8"]
BB7 -> BB18 [tailport=s, headport=n, color=gray]
BB8 [shape=record label="{13: write-variable[v2,'path']*|14: read-variable['require',v8,-]|15: read-property[v8,'modules',v7]|16: \<variable-non-null-undef\>['require']|17: read-variable['path',v9,-]|18: read-property[v7,v9,v6]|19: \<property-non-null-undef\>[v8,'modules']|20: write-variable[v6,'mod']*|21: read-variable['mod',v11,-]|22: ![v11,v10]|23: if[v10](true-block:9,false-block:12)}" ] 
BB8 -> BB9 [tailport=s, headport=n, headlabel="      9"]
BB8 -> BB12 [tailport=s, headport=n, headlabel="      12"]
BB8 -> BB18 [tailport=s, headport=n, color=gray]
BB9 [shape=record label="{24: read-variable['Error',v13,-]|25: constant[\"failed to require \\\"\",v17]|26: read-variable['p',v18,-]|27: +[v17,v18,v15]|28: constant[\"\\\"\",v16]|29: +[v15,v16,v14]}" ] 
BB9 -> BB10 [tailport=s, headport=n, headlabel="      10"]
BB9 -> BB18 [tailport=s, headport=n, color=gray]
BB10 [shape=record label="{30: construct [-,v13,v14,v12]}" ] 
BB10 -> BB11 [tailport=s, headport=n, headlabel="      11"]
BB10 -> BB18 [tailport=s, headport=n, color=gray]
BB11 [shape=record label="{31: throw[v12]*}" ] 
BB11 -> BB12 [tailport=s, headport=n]
BB11 -> BB18 [tailport=s, headport=n, color=gray]
BB12 [shape=record label="{32: read-variable['mod',v14,-]|33: read-property[v14,'exports',v13]|34: \<variable-non-null-undef\>['mod']|35: ![v13,v12]|36: if[v12](true-block:13,false-block:16)}" ] 
BB12 -> BB13 [tailport=s, headport=n, headlabel="      13"]
BB12 -> BB16 [tailport=s, headport=n, headlabel="      16"]
BB12 -> BB18 [tailport=s, headport=n, color=gray]
BB13 [shape=record label="{37: read-variable['mod',v16,-]|38: new[v15]|39: write-property[v16,'exports',v15]|40: \<variable-non-null-undef\>['mod']*|41: read-variable['mod',v18,-]|42: read-property[v18,'call',-]|43: \<variable-non-null-undef\>['mod']|44: read-variable['mod',v20,-]|45: read-property[v20,'exports',v19]|46: \<variable-non-null-undef\>['mod']|47: read-variable['mod',v21,-]|48: read-variable['mod',v23,-]|49: read-property[v23,'exports',v22]|50: \<variable-non-null-undef\>['mod']|51: read-variable['require',v26,-]|52: read-property[v26,'relative',-]|53: \<variable-non-null-undef\>['require']|54: read-variable['path',v27,-]}" ] 
BB13 -> BB14 [tailport=s, headport=n, headlabel="      14"]
BB13 -> BB18 [tailport=s, headport=n, color=gray]
BB14 [shape=record label="{55: call-require.relative [v26,'relative',v27,v24]}" ] 
BB14 -> BB15 [tailport=s, headport=n, headlabel="      15"]
BB14 -> BB18 [tailport=s, headport=n, color=gray]
BB15 [shape=record label="{56: call-mod.call [v18,'call',v19,v21,v22,v24,-]*}" ] 
BB15 -> BB16 [tailport=s, headport=n]
BB15 -> BB18 [tailport=s, headport=n, color=gray]
BB16 [shape=record label="{57: read-variable['mod',v15,-]|58: read-property[v15,'exports',v1]|59: \<variable-non-null-undef\>['mod']}" ] 
BB16 -> BB17 [tailport=s, headport=n, headlabel="      17"]
BB16 -> BB18 [tailport=s, headport=n, color=gray]
BB17 [shape=record label="{60: return[v1]}" ] 
BB18 [shape=record label="{61: exceptional-return}" ] 
//#$~ 13
}
