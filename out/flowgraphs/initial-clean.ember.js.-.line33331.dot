digraph {
rankdir="TD"
BB_entry1519[shape=none,label=""];
BB_entry1519 -> BB17603 [tailport=s, headport=n, headlabel="    17603"]
BB17603 [shape=record label="{59069: constant[undefined,v1]|59070: vardecl['content']}" ] 
BB17603 -> BB17604 [tailport=s, headport=n, headlabel="      17604"]
BB17604 [shape=record label="{59071: read-variable['get',v4,v3]|59072: read-variable['this',v5,-]|59073: constant[\"content\",v6]}" ] 
BB17604 -> BB17605 [tailport=s, headport=n, headlabel="      17605"]
BB17604 -> BB17618 [tailport=s, headport=n, color=gray, headlabel="      17618"]
BB17605 [shape=record label="{59074: call-get [v3,v4,v5,v6,v2]}" ] 
BB17605 -> BB17606 [tailport=s, headport=n, headlabel="      17606"]
BB17605 -> BB17618 [tailport=s, headport=n, color=gray]
BB17606 [shape=record label="{59075: write-variable[v2,'content']*|59076: read-variable['content',v7,-]|59077: if[v7](true-block:17607,false-block:17617)}" ] 
BB17606 -> BB17607 [tailport=s, headport=n, headlabel="      17607"]
BB17606 -> BB17617 [tailport=s, headport=n, headlabel="      17617"]
BB17606 -> BB17618 [tailport=s, headport=n, color=gray]
BB17607 [shape=record label="{59078: read-variable['Ember',v9,-]|59079: read-property[v9,'assert',-]|59080: \<variable-non-null-undef\>['Ember']|59081: read-variable['fmt',v12,v11]|59082: constant[\"ArrayProxy expects an Array or \",v14]|59083: constant[\"Ember.ArrayProxy, but you passed %@\",v15]|59084: +[v14,v15,v13]|59085: read-variable['Array',v17,-]|59086: typeof['content',v18]}" ] 
BB17607 -> BB17608 [tailport=s, headport=n, headlabel="      17608"]
BB17607 -> BB17618 [tailport=s, headport=n, color=gray]
BB17608 [shape=record label="{59087: construct [-,v17,v18,v16]}" ] 
BB17608 -> BB17609 [tailport=s, headport=n, headlabel="      17609"]
BB17608 -> BB17618 [tailport=s, headport=n, color=gray]
BB17609 [shape=record label="{59088: call-fmt [v11,v12,v13,v16,v10]}" ] 
BB17609 -> BB17610 [tailport=s, headport=n, headlabel="      17610"]
BB17609 -> BB17618 [tailport=s, headport=n, color=gray]
BB17610 [shape=record label="{59089: read-variable['isArray',v21,v20]|59090: read-variable['content',v22,-]}" ] 
BB17610 -> BB17611 [tailport=s, headport=n, headlabel="      17611"]
BB17610 -> BB17618 [tailport=s, headport=n, color=gray]
BB17611 [shape=record label="{59091: call-isArray [v20,v21,v22,v19]}" ] 
BB17611 -> BB17612 [tailport=s, headport=n, headlabel="      17612"]
BB17611 -> BB17618 [tailport=s, headport=n, color=gray]
BB17612 [shape=record label="{59092: if[v19](true-block:17614,false-block:17613)}" ] 
BB17612 -> BB17614 [tailport=s, headport=n, headlabel="      17614"]
BB17612 -> BB17613 [tailport=s, headport=n, headlabel="      17613"]
BB17613 [shape=record label="{59093: read-variable['content',v20,-]|59094: read-property[v20,'isDestroyed',v19]|59095: \<variable-non-null-undef\>['content']}" ] 
BB17613 -> BB17614 [tailport=s, headport=n]
BB17613 -> BB17618 [tailport=s, headport=n, color=gray]
BB17614 [shape=record label="{59096: call-Ember.assert [v9,'assert',v10,v19,-]*}" ] 
BB17614 -> BB17615 [tailport=s, headport=n, headlabel="      17615"]
BB17614 -> BB17618 [tailport=s, headport=n, color=gray]
BB17615 [shape=record label="{59097: read-variable['content',v21,-]|59098: read-property[v21,'addArrayObserver',-]|59099: \<variable-non-null-undef\>['content']|59100: read-variable['this',v22,-]|59101: new[v23]|59102: constant[\"contentArrayWillChange\",v24]|59103: write-property[v23,'willChange',v24]|59104: constant[\"contentArrayDidChange\",v25]|59105: write-property[v23,'didChange',v25]}" ] 
BB17615 -> BB17616 [tailport=s, headport=n, headlabel="      17616"]
BB17615 -> BB17618 [tailport=s, headport=n, color=gray]
BB17616 [shape=record label="{59106: call-content.addArrayObserver [v21,'addArrayObserver',v22,v23,-]*}" ] 
BB17616 -> BB17617 [tailport=s, headport=n]
BB17616 -> BB17618 [tailport=s, headport=n, color=gray]
BB17617 [shape=record label="{59107: return[v1]}" ] 
BB17618 [shape=record label="{59108: exceptional-return}" ] 
//#$~ 33341
}
