digraph {
rankdir="TD"
BB_entry71[shape=none,label=""];
BB_entry71 -> BB968 [tailport=s, headport=n, headlabel="    968"]
BB968 [shape=record label="{2777: constant[undefined,v1]}" ] 
BB968 -> BB969 [tailport=s, headport=n, headlabel="      969"]
BB969 [shape=record label="{2778: read-variable['req',v3,-]|2779: read-property[v3,'trace',-]|2780: \<variable-non-null-undef\>['req']|2781: constant[\"loader-finish-exec\",v4]|2782: read-variable['Array',v6,-]|2783: read-variable['module',v8,-]|2784: read-property[v8,'mid',v7]|2785: \<variable-non-null-undef\>['module']}" ] 
BB969 -> BB970 [tailport=s, headport=n, headlabel="      970"]
BB969 -> BB993 [tailport=s, headport=n, color=gray, headlabel="      993"]
BB970 [shape=record label="{2786: construct [-,v6,v7,v5]}" ] 
BB970 -> BB971 [tailport=s, headport=n, headlabel="      971"]
BB970 -> BB993 [tailport=s, headport=n, color=gray]
BB971 [shape=record label="{2787: call-req.trace [v3,'trace',v4,v5,-]*}" ] 
BB971 -> BB972 [tailport=s, headport=n, headlabel="      972"]
BB971 -> BB993 [tailport=s, headport=n, color=gray]
BB972 [shape=record label="{2788: read-variable['module',v10,-]|2789: read-variable['executed',v9,-]|2790: write-property[v10,'executed',v9]|2791: \<variable-non-null-undef\>['module']*|2792: read-variable['module',v12,-]|2793: constant[1.0,v13]|2794: read-variable['defOrder',v14,-]|2795: +[v14,v11]|2796: +[v11,v13,v15]|2797: write-variable[v15,'defOrder']|2798: write-property[v12,'defOrder',v11]|2799: \<variable-non-null-undef\>['module']*|2800: constant[1.0,v16]|2801: if[v16](true-block:973,false-block:975)}" ] 
BB972 -> BB975 [tailport=s, headport=n, headlabel="      975"]
BB972 -> BB973 [tailport=s, headport=n, headlabel="      973"]
BB972 -> BB993 [tailport=s, headport=n, color=gray]
BB973 [shape=record label="{2802: read-variable['forEach',v18,v17]|2803: read-variable['module',v20,-]|2804: read-property[v20,'provides',v19]|2805: \<variable-non-null-undef\>['module']|2806: function-expr[function ( cb ),v21]}" ] 
BB973 -> BB974 [tailport=s, headport=n, headlabel="      974"]
BB973 -> BB993 [tailport=s, headport=n, color=gray]
BB974 [shape=record label="{2807: call-forEach [v17,v18,v19,v21,-]}" ] 
BB974 -> BB975 [tailport=s, headport=n]
BB974 -> BB993 [tailport=s, headport=n, color=gray]
BB975 [shape=record label="{2808: read-variable['module',v18,-]|2809: read-property[v18,'loadQ',v17]|2810: \<variable-non-null-undef\>['module']|2811: if[v17](true-block:976,false-block:980)}" ] 
BB975 -> BB976 [tailport=s, headport=n, headlabel="      976"]
BB975 -> BB980 [tailport=s, headport=n, headlabel="      980"]
BB975 -> BB993 [tailport=s, headport=n, color=gray]
BB976 [shape=record label="{2812: read-variable['promoteModuleToPlugin',v20,v19]|2813: read-variable['module',v21,-]}" ] 
BB976 -> BB977 [tailport=s, headport=n, headlabel="      977"]
BB976 -> BB993 [tailport=s, headport=n, color=gray]
BB977 [shape=record label="{2814: call-promoteModuleToPlugin [v19,v20,v21,-]*}" ] 
BB977 -> BB978 [tailport=s, headport=n, headlabel="      978"]
BB977 -> BB993 [tailport=s, headport=n, color=gray]
BB978 [shape=record label="{2815: read-variable['resolvePluginLoadQ',v23,v22]|2816: read-variable['module',v24,-]}" ] 
BB978 -> BB979 [tailport=s, headport=n, headlabel="      979"]
BB978 -> BB993 [tailport=s, headport=n, color=gray]
BB979 [shape=record label="{2817: call-resolvePluginLoadQ [v22,v23,v24,-]*}" ] 
BB979 -> BB980 [tailport=s, headport=n]
BB979 -> BB993 [tailport=s, headport=n, color=gray]
BB980 [shape=record label="{2818: constant[0.0,v20]|2819: write-variable[v20,'i']}" ] 
BB980 -> BB981 [tailport=s, headport=n, headlabel="      981"]
BB981 [shape=record label="{2820: read-variable['i',v21,-]|2821: read-variable['execQ',v23,-]|2822: read-property[v23,'length',v22]|2823: \<variable-non-null-undef\>['execQ']|2824: \<[v21,v22,v19]|2825: if[v19](true-block:982,false-block:983)}" ] 
BB981 -> BB982 [tailport=s, headport=n, headlabel="      982"]
BB981 -> BB983 [tailport=s, headport=n, headlabel="      983"]
BB981 -> BB993 [tailport=s, headport=n, color=gray]
BB982 [shape=record label="{2826: read-variable['execQ',v27,-]|2827: read-variable['i',v28,-]|2828: read-property[v27,v28,v25]|2829: \<variable-non-null-undef\>['execQ']|2830: read-variable['module',v26,-]|2831: ===[v25,v26,v24]|2832: if[v24](true-block:984,false-block:985)}" ] 
BB982 -> BB984 [tailport=s, headport=n, headlabel="      984"]
BB982 -> BB985 [tailport=s, headport=n, headlabel="      985"]
BB982 -> BB993 [tailport=s, headport=n, color=gray]
BB983 [shape=record label="{2833: read-variable['RegExp',v27,-]|2834: constant[\"^require\\\\*\",v28]}" ] 
BB983 -> BB987 [tailport=s, headport=n, headlabel="      987"]
BB983 -> BB993 [tailport=s, headport=n, color=gray]
BB984 [shape=record label="{2835: read-variable['execQ',v30,-]|2836: read-property[v30,'splice',-]|2837: \<variable-non-null-undef\>['execQ']|2838: read-variable['i',v31,-]|2839: constant[1.0,v32]}" ] 
BB984 -> BB986 [tailport=s, headport=n, headlabel="      986"]
BB984 -> BB993 [tailport=s, headport=n, color=gray]
BB985 [shape=record label="{2840: constant[1.0,v29]|2841: read-variable['i',v30,-]|2842: +[v30,v31]|2843: +[v31,v29,v32]|2844: write-variable[v32,'i']*}" ] 
BB985 -> BB981 [tailport=s, headport=n]
BB985 -> BB993 [tailport=s, headport=n, color=gray]
BB986 [shape=record label="{2845: call-execQ.splice [v30,'splice',v31,v32,-]*}" ] 
BB986 -> BB981 [tailport=s, headport=n]
BB986 -> BB993 [tailport=s, headport=n, color=gray]
BB987 [shape=record label="{2846: construct [-,v27,v28,v26]}" ] 
BB987 -> BB988 [tailport=s, headport=n, headlabel="      988"]
BB987 -> BB993 [tailport=s, headport=n, color=gray]
BB988 [shape=record label="{2847: read-property[v26,'test',-]|2848: read-variable['module',v30,-]|2849: read-property[v30,'mid',v29]|2850: \<variable-non-null-undef\>['module']}" ] 
BB988 -> BB989 [tailport=s, headport=n, headlabel="      989"]
BB988 -> BB993 [tailport=s, headport=n, color=gray]
BB989 [shape=record label="{2851: call-null [v26,'test',v29,v24]}" ] 
BB989 -> BB990 [tailport=s, headport=n, headlabel="      990"]
BB989 -> BB993 [tailport=s, headport=n, color=gray]
BB990 [shape=record label="{2852: if[v24](true-block:991,false-block:992)}" ] 
BB990 -> BB991 [tailport=s, headport=n, headlabel="      991"]
BB990 -> BB992 [tailport=s, headport=n, headlabel="      992"]
BB991 [shape=record label="{2853: read-variable['modules',v32,-]|2854: read-variable['module',v34,-]|2855: read-property[v34,'mid',v33]|2856: \<variable-non-null-undef\>['module']|2857: delete-property[v32,v33,v31]*}" ] 
BB991 -> BB992 [tailport=s, headport=n]
BB991 -> BB993 [tailport=s, headport=n, color=gray]
BB992 [shape=record label="{2858: return[v1]}" ] 
BB993 [shape=record label="{2859: exceptional-return}" ] 
//#$~ 1225
}
