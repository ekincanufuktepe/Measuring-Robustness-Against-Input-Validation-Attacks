digraph {
rankdir="TD"
BB_entry803[shape=none,label=""];
BB_entry803 -> BB11050 [tailport=s, headport=n, headlabel="    11050"]
BB11050 [shape=record label="{32412: constant[undefined,v1]|32413: function-decl[function throwAbstract ( ),-]}" ] 
BB11050 -> BB11051 [tailport=s, headport=n, headlabel="      11051"]
BB11051 [shape=record label="{32414: read-variable['lang',v3,-]|32415: read-property[v3,'extend',-]|32416: \<variable-non-null-undef\>['lang']|32417: function-expr[function Promise ( ),v4]|32418: new[v5]|32419: function-expr[function ( callback errback progback ),v6]|32420: write-property[v5,'then',v6]|32421: function-expr[function ( reason strict ),v7]|32422: write-property[v5,'cancel',v7]|32423: function-expr[function ( ),v8]|32424: write-property[v5,'isResolved',v8]|32425: function-expr[function ( ),v9]|32426: write-property[v5,'isRejected',v9]|32427: function-expr[function ( ),v10]|32428: write-property[v5,'isFulfilled',v10]|32429: function-expr[function ( ),v11]|32430: write-property[v5,'isCanceled',v11]|32431: function-expr[function ( callbackOrErrback ),v12]|32432: write-property[v5,'always',v12]|32433: function-expr[function ( errback ),v13]|32434: write-property[v5,'otherwise',v13]|32435: function-expr[function ( ),v14]|32436: write-property[v5,'trace',v14]|32437: function-expr[function ( ),v15]|32438: write-property[v5,'traceRejected',v15]|32439: function-expr[function ( ),v16]|32440: write-property[v5,'toString',v16]}" ] 
BB11051 -> BB11052 [tailport=s, headport=n, headlabel="      11052"]
BB11051 -> BB11054 [tailport=s, headport=n, color=gray, headlabel="      11054"]
BB11052 [shape=record label="{32441: call-lang.extend [v3,'extend',v4,v5,v1]}" ] 
BB11052 -> BB11053 [tailport=s, headport=n, headlabel="      11053"]
BB11052 -> BB11054 [tailport=s, headport=n, color=gray]
BB11053 [shape=record label="{32442: return[v1]}" ] 
BB11054 [shape=record label="{32443: exceptional-return}" ] 
//#$~ 15514
}
