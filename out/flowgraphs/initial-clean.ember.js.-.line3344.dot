digraph {
rankdir="TD"
BB_entry158[shape=none,label=""];
BB_entry158 -> BB2023 [tailport=s, headport=n, headlabel="    2023"]
BB2023 [shape=record label="{6456: constant[undefined,v1]}" ] 
BB2023 -> BB2024 [tailport=s, headport=n, headlabel="      2024"]
BB2024 [shape=record label="{6457: read-variable['this',v6,-]|6458: read-property[v6,'superclass',v5]|6459: read-property[v5,'initializers',v3]|6460: \<property-non-null-undef\>[v6,'superclass']|6461: read-variable['undefined',v4,-]|6462: !==[v3,v4,v2]|6463: if[v2](true-block:2025,false-block:2026)}" ] 
BB2024 -> BB2026 [tailport=s, headport=n, headlabel="      2026"]
BB2024 -> BB2025 [tailport=s, headport=n, headlabel="      2025"]
BB2024 -> BB2040 [tailport=s, headport=n, color=gray, headlabel="      2040"]
BB2025 [shape=record label="{6464: read-variable['this',v10,-]|6465: read-property[v10,'superclass',v9]|6466: read-property[v9,'initializers',v7]|6467: \<property-non-null-undef\>[v10,'superclass']|6468: read-variable['this',v11,-]|6469: read-property[v11,'initializers',v8]|6470: ===[v7,v8,v2]}" ] 
BB2025 -> BB2026 [tailport=s, headport=n]
BB2025 -> BB2040 [tailport=s, headport=n, color=gray]
BB2026 [shape=record label="{6471: if[v2](true-block:2027,false-block:2031)}" ] 
BB2026 -> BB2027 [tailport=s, headport=n, headlabel="      2027"]
BB2026 -> BB2031 [tailport=s, headport=n, headlabel="      2031"]
BB2027 [shape=record label="{6472: read-variable['this',v8,-]|6473: read-property[v8,'reopenClass',-]|6474: new[v9]|6475: read-variable['create',v12,v11]|6476: read-variable['this',v14,-]|6477: read-property[v14,'initializers',v13]}" ] 
BB2027 -> BB2028 [tailport=s, headport=n, headlabel="      2028"]
BB2027 -> BB2040 [tailport=s, headport=n, color=gray]
BB2028 [shape=record label="{6478: call-create [v11,v12,v13,v10]}" ] 
BB2028 -> BB2029 [tailport=s, headport=n, headlabel="      2029"]
BB2028 -> BB2040 [tailport=s, headport=n, color=gray]
BB2029 [shape=record label="{6479: write-property[v9,'initializers',v10]}" ] 
BB2029 -> BB2030 [tailport=s, headport=n, headlabel="      2030"]
BB2029 -> BB2040 [tailport=s, headport=n, color=gray]
BB2030 [shape=record label="{6480: call-this.reopenClass [v8,'reopenClass',v9,-]*}" ] 
BB2030 -> BB2031 [tailport=s, headport=n]
BB2030 -> BB2040 [tailport=s, headport=n, color=gray]
BB2031 [shape=record label="{6481: read-variable['Ember',v8,-]|6482: read-property[v8,'assert',-]|6483: \<variable-non-null-undef\>['Ember']|6484: constant[\"The initializer '\",v12]|6485: read-variable['initializer',v14,-]|6486: read-property[v14,'name',v13]|6487: \<variable-non-null-undef\>['initializer']|6488: +[v12,v13,v10]|6489: constant[\"' has already been registered\",v11]|6490: +[v10,v11,v9]|6491: read-variable['this',v18,-]|6492: read-property[v18,'initializers',v17]|6493: read-variable['initializer',v20,-]|6494: read-property[v20,'name',v19]|6495: \<variable-non-null-undef\>['initializer']|6496: read-property[v17,v19,v16]|6497: \<property-non-null-undef\>[v18,'initializers']|6498: ![v16,v15]}" ] 
BB2031 -> BB2032 [tailport=s, headport=n, headlabel="      2032"]
BB2031 -> BB2040 [tailport=s, headport=n, color=gray]
BB2032 [shape=record label="{6499: call-Ember.assert [v8,'assert',v9,v15,-]*}" ] 
BB2032 -> BB2033 [tailport=s, headport=n, headlabel="      2033"]
BB2032 -> BB2040 [tailport=s, headport=n, color=gray]
BB2033 [shape=record label="{6500: read-variable['Ember',v22,-]|6501: read-property[v22,'assert',-]|6502: \<variable-non-null-undef\>['Ember']|6503: constant[\"An initializer cannot be registered without an initialize function\",v23]|6504: read-variable['canInvoke',v26,v25]|6505: read-variable['initializer',v27,-]|6506: constant[\"initialize\",v28]}" ] 
BB2033 -> BB2034 [tailport=s, headport=n, headlabel="      2034"]
BB2033 -> BB2040 [tailport=s, headport=n, color=gray]
BB2034 [shape=record label="{6507: call-canInvoke [v25,v26,v27,v28,v24]}" ] 
BB2034 -> BB2035 [tailport=s, headport=n, headlabel="      2035"]
BB2034 -> BB2040 [tailport=s, headport=n, color=gray]
BB2035 [shape=record label="{6508: call-Ember.assert [v22,'assert',v23,v24,-]*}" ] 
BB2035 -> BB2036 [tailport=s, headport=n, headlabel="      2036"]
BB2035 -> BB2040 [tailport=s, headport=n, color=gray]
BB2036 [shape=record label="{6509: read-variable['Ember',v30,-]|6510: read-property[v30,'assert',-]|6511: \<variable-non-null-undef\>['Ember']|6512: constant[\"An initializer cannot be registered without a name property\",v31]|6513: read-variable['initializer',v35,-]|6514: read-property[v35,'name',v33]|6515: \<variable-non-null-undef\>['initializer']|6516: read-variable['undefined',v34,-]|6517: !==[v33,v34,v32]}" ] 
BB2036 -> BB2037 [tailport=s, headport=n, headlabel="      2037"]
BB2036 -> BB2040 [tailport=s, headport=n, color=gray]
BB2037 [shape=record label="{6518: call-Ember.assert [v30,'assert',v31,v32,-]*}" ] 
BB2037 -> BB2038 [tailport=s, headport=n, headlabel="      2038"]
BB2037 -> BB2040 [tailport=s, headport=n, color=gray]
BB2038 [shape=record label="{6519: read-variable['this',v39,-]|6520: read-property[v39,'initializers',v37]|6521: read-variable['initializer',v40,-]|6522: read-property[v40,'name',v38]|6523: \<variable-non-null-undef\>['initializer']|6524: read-variable['initializer',v36,-]|6525: write-property[v37,v38,v36]|6526: \<property-non-null-undef\>[v39,'initializers']*}" ] 
BB2038 -> BB2039 [tailport=s, headport=n, headlabel="      2039"]
BB2038 -> BB2040 [tailport=s, headport=n, color=gray]
BB2039 [shape=record label="{6527: return[v1]}" ] 
BB2040 [shape=record label="{6528: exceptional-return}" ] 
//#$~ 3359
}
