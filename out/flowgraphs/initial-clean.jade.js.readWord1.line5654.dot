digraph {
rankdir="TD"
BB_entry326[shape=none,label=""];
BB_entry326 -> BB5621 [tailport=s, headport=n, headlabel="    5621"]
BB5621 [shape=record label="{17271: constant[undefined,v1]|17272: vardecl['word']|17273: vardecl['first']|17274: vardecl['start']|17275: vardecl['ch']|17276: vardecl['esc']|17277: vardecl['escStr']}" ] 
BB5621 -> BB5622 [tailport=s, headport=n, headlabel="      5622"]
BB5622 [shape=record label="{17278: constant[false,v2]|17279: write-variable[v2,'containsEsc']*|17280: constant[true,v3]|17281: write-variable[v3,'first']*|17282: read-variable['tokPos',v4,-]|17283: write-variable[v4,'start']*}" ] 
BB5622 -> BB5623 [tailport=s, headport=n, headlabel="      5623"]
BB5622 -> BB5667 [tailport=s, headport=n, color=gray, headlabel="      5667"]
BB5623 [shape=record label="{17284: constant[true,v5]}" ] 
BB5623 -> BB5624 [tailport=s, headport=n, headlabel="      5624"]
BB5624 [shape=record label="{17285: if[v5](true-block:5625,false-block:5626)}" ] 
BB5624 -> BB5625 [tailport=s, headport=n, headlabel="      5625"]
BB5624 -> BB5626 [tailport=s, headport=n, headlabel="      5626"]
BB5625 [shape=record label="{17286: read-variable['input',v8,-]|17287: read-property[v8,'charCodeAt',-]|17288: \<variable-non-null-undef\>['input']|17289: read-variable['tokPos',v9,-]}" ] 
BB5625 -> BB5627 [tailport=s, headport=n, headlabel="      5627"]
BB5625 -> BB5667 [tailport=s, headport=n, color=gray]
BB5626 [shape=record label="{17290: read-variable['containsEsc',v6,-]|17291: if[v6](true-block:5663,false-block:5664)}" ] 
BB5626 -> BB5663 [tailport=s, headport=n, headlabel="      5663"]
BB5626 -> BB5664 [tailport=s, headport=n, headlabel="      5664"]
BB5626 -> BB5667 [tailport=s, headport=n, color=gray]
BB5627 [shape=record label="{17292: call-input.charCodeAt [v8,'charCodeAt',v9,v6]}" ] 
BB5627 -> BB5628 [tailport=s, headport=n, headlabel="      5628"]
BB5627 -> BB5667 [tailport=s, headport=n, color=gray]
BB5628 [shape=record label="{17293: write-variable[v6,'ch']*|17294: read-variable['isIdentifierChar',v12,v11]|17295: read-variable['ch',v13,-]}" ] 
BB5628 -> BB5629 [tailport=s, headport=n, headlabel="      5629"]
BB5628 -> BB5667 [tailport=s, headport=n, color=gray]
BB5629 [shape=record label="{17296: call-isIdentifierChar [v11,v12,v13,v10]}" ] 
BB5629 -> BB5630 [tailport=s, headport=n, headlabel="      5630"]
BB5629 -> BB5667 [tailport=s, headport=n, color=gray]
BB5630 [shape=record label="{17297: if[v10](true-block:5631,false-block:5632)}" ] 
BB5630 -> BB5631 [tailport=s, headport=n, headlabel="      5631"]
BB5630 -> BB5632 [tailport=s, headport=n, headlabel="      5632"]
BB5631 [shape=record label="{17298: read-variable['containsEsc',v14,-]|17299: if[v14](true-block:5633,false-block:5636)}" ] 
BB5631 -> BB5633 [tailport=s, headport=n, headlabel="      5633"]
BB5631 -> BB5636 [tailport=s, headport=n, headlabel="      5636"]
BB5631 -> BB5667 [tailport=s, headport=n, color=gray]
BB5632 [shape=record label="{17300: read-variable['ch',v15,-]|17301: constant[92.0,v16]|17302: ===[v15,v16,v14]|17303: if[v14](true-block:5637,false-block:5626)}" ] 
BB5632 -> BB5637 [tailport=s, headport=n, headlabel="      5637"]
BB5632 -> BB5626 [tailport=s, headport=n]
BB5632 -> BB5667 [tailport=s, headport=n, color=gray]
BB5633 [shape=record label="{17304: read-variable['word',v16,-]|17305: read-variable['input',v19,-]|17306: read-property[v19,'charAt',-]|17307: \<variable-non-null-undef\>['input']|17308: read-variable['tokPos',v20,-]}" ] 
BB5633 -> BB5634 [tailport=s, headport=n, headlabel="      5634"]
BB5633 -> BB5667 [tailport=s, headport=n, color=gray]
BB5634 [shape=record label="{17309: call-input.charAt [v19,'charAt',v20,v17]}" ] 
BB5634 -> BB5635 [tailport=s, headport=n, headlabel="      5635"]
BB5634 -> BB5667 [tailport=s, headport=n, color=gray]
BB5635 [shape=record label="{17310: +[v16,v17,v15]|17311: write-variable[v15,'word']*}" ] 
BB5635 -> BB5636 [tailport=s, headport=n]
BB5635 -> BB5667 [tailport=s, headport=n, color=gray]
BB5636 [shape=record label="{17312: constant[1.0,v15]|17313: read-variable['tokPos',v16,-]|17314: +[v16,v17]|17315: +[v17,v15,v18]|17316: write-variable[v18,'tokPos']*}" ] 
BB5636 -> BB5662 [tailport=s, headport=n, headlabel="      5662"]
BB5636 -> BB5667 [tailport=s, headport=n, color=gray]
BB5637 [shape=record label="{17317: read-variable['containsEsc',v18,-]|17318: ![v18,v17]|17319: if[v17](true-block:5638,false-block:5641)}" ] 
BB5637 -> BB5638 [tailport=s, headport=n, headlabel="      5638"]
BB5637 -> BB5641 [tailport=s, headport=n, headlabel="      5641"]
BB5637 -> BB5667 [tailport=s, headport=n, color=gray]
BB5638 [shape=record label="{17320: read-variable['input',v21,-]|17321: read-property[v21,'slice',-]|17322: \<variable-non-null-undef\>['input']|17323: read-variable['start',v22,-]|17324: read-variable['tokPos',v23,-]}" ] 
BB5638 -> BB5639 [tailport=s, headport=n, headlabel="      5639"]
BB5638 -> BB5667 [tailport=s, headport=n, color=gray]
BB5639 [shape=record label="{17325: call-input.slice [v21,'slice',v22,v23,v19]}" ] 
BB5639 -> BB5640 [tailport=s, headport=n, headlabel="      5640"]
BB5639 -> BB5667 [tailport=s, headport=n, color=gray]
BB5640 [shape=record label="{17326: write-variable[v19,'word']*}" ] 
BB5640 -> BB5641 [tailport=s, headport=n]
BB5641 [shape=record label="{17327: constant[true,v19]|17328: write-variable[v19,'containsEsc']*|17329: read-variable['input',v24,-]|17330: read-property[v24,'charCodeAt',-]|17331: \<variable-non-null-undef\>['input']|17332: constant[1.0,v26]|17333: read-variable['tokPos',v27,-]|17334: +[v27,v28]|17335: +[v28,v26,v25]|17336: write-variable[v25,'tokPos']}" ] 
BB5641 -> BB5642 [tailport=s, headport=n, headlabel="      5642"]
BB5641 -> BB5667 [tailport=s, headport=n, color=gray]
BB5642 [shape=record label="{17337: call-input.charCodeAt [v24,'charCodeAt',v25,v21]}" ] 
BB5642 -> BB5643 [tailport=s, headport=n, headlabel="      5643"]
BB5642 -> BB5667 [tailport=s, headport=n, color=gray]
BB5643 [shape=record label="{17338: constant[117.0,v22]|17339: !=[v21,v22,v20]|17340: if[v20](true-block:5644,false-block:5646)}" ] 
BB5643 -> BB5644 [tailport=s, headport=n, headlabel="      5644"]
BB5643 -> BB5646 [tailport=s, headport=n, headlabel="      5646"]
BB5643 -> BB5667 [tailport=s, headport=n, color=gray]
BB5644 [shape=record label="{17341: read-variable['raise',v30,v29]|17342: read-variable['tokPos',v31,-]|17343: constant[\"Expecting Unicode escape sequence \\\\uXXXX\",v32]}" ] 
BB5644 -> BB5645 [tailport=s, headport=n, headlabel="      5645"]
BB5644 -> BB5667 [tailport=s, headport=n, color=gray]
BB5645 [shape=record label="{17344: call-raise [v29,v30,v31,v32,-]*}" ] 
BB5645 -> BB5646 [tailport=s, headport=n]
BB5645 -> BB5667 [tailport=s, headport=n, color=gray]
BB5646 [shape=record label="{17345: constant[1.0,v29]|17346: read-variable['tokPos',v30,-]|17347: +[v30,v31]|17348: +[v31,v29,v32]|17349: write-variable[v32,'tokPos']*|17350: read-variable['readHexChar',v35,v34]|17351: constant[4.0,v36]}" ] 
BB5646 -> BB5647 [tailport=s, headport=n, headlabel="      5647"]
BB5646 -> BB5667 [tailport=s, headport=n, color=gray]
BB5647 [shape=record label="{17352: call-readHexChar [v34,v35,v36,v33]}" ] 
BB5647 -> BB5648 [tailport=s, headport=n, headlabel="      5648"]
BB5647 -> BB5667 [tailport=s, headport=n, color=gray]
BB5648 [shape=record label="{17353: write-variable[v33,'esc']*|17354: read-variable['String',v39,-]|17355: read-property[v39,'fromCharCode',-]|17356: \<variable-non-null-undef\>['String']|17357: read-variable['esc',v40,-]}" ] 
BB5648 -> BB5649 [tailport=s, headport=n, headlabel="      5649"]
BB5648 -> BB5667 [tailport=s, headport=n, color=gray]
BB5649 [shape=record label="{17358: call-String.fromCharCode [v39,'fromCharCode',v40,v37]}" ] 
BB5649 -> BB5650 [tailport=s, headport=n, headlabel="      5650"]
BB5649 -> BB5667 [tailport=s, headport=n, color=gray]
BB5650 [shape=record label="{17359: write-variable[v37,'escStr']*|17360: read-variable['escStr',v42,-]|17361: ![v42,v41]|17362: if[v41](true-block:5651,false-block:5653)}" ] 
BB5650 -> BB5651 [tailport=s, headport=n, headlabel="      5651"]
BB5650 -> BB5653 [tailport=s, headport=n, headlabel="      5653"]
BB5650 -> BB5667 [tailport=s, headport=n, color=gray]
BB5651 [shape=record label="{17363: read-variable['raise',v44,v43]|17364: read-variable['tokPos',v46,-]|17365: constant[1.0,v47]|17366: -[v46,v47,v45]|17367: constant[\"Invalid Unicode escape\",v48]}" ] 
BB5651 -> BB5652 [tailport=s, headport=n, headlabel="      5652"]
BB5651 -> BB5667 [tailport=s, headport=n, color=gray]
BB5652 [shape=record label="{17368: call-raise [v43,v44,v45,v48,-]*}" ] 
BB5652 -> BB5653 [tailport=s, headport=n]
BB5652 -> BB5667 [tailport=s, headport=n, color=gray]
BB5653 [shape=record label="{17369: read-variable['first',v45,-]|17370: if[v45](true-block:5654,false-block:5655)}" ] 
BB5653 -> BB5654 [tailport=s, headport=n, headlabel="      5654"]
BB5653 -> BB5655 [tailport=s, headport=n, headlabel="      5655"]
BB5653 -> BB5667 [tailport=s, headport=n, color=gray]
BB5654 [shape=record label="{17371: read-variable['isIdentifierStart',v47,v46]|17372: read-variable['esc',v48,-]}" ] 
BB5654 -> BB5656 [tailport=s, headport=n, headlabel="      5656"]
BB5654 -> BB5667 [tailport=s, headport=n, color=gray]
BB5655 [shape=record label="{17373: read-variable['isIdentifierChar',v47,v46]|17374: read-variable['esc',v48,-]}" ] 
BB5655 -> BB5657 [tailport=s, headport=n, headlabel="      5657"]
BB5655 -> BB5667 [tailport=s, headport=n, color=gray]
BB5656 [shape=record label="{17375: call-isIdentifierStart [v46,v47,v48,v44]}" ] 
BB5656 -> BB5658 [tailport=s, headport=n, headlabel="      5658"]
BB5656 -> BB5667 [tailport=s, headport=n, color=gray]
BB5657 [shape=record label="{17376: call-isIdentifierChar [v46,v47,v48,v44]}" ] 
BB5657 -> BB5658 [tailport=s, headport=n]
BB5657 -> BB5667 [tailport=s, headport=n, color=gray]
BB5658 [shape=record label="{17377: ![v44,v43]|17378: if[v43](true-block:5659,false-block:5661)}" ] 
BB5658 -> BB5659 [tailport=s, headport=n, headlabel="      5659"]
BB5658 -> BB5661 [tailport=s, headport=n, headlabel="      5661"]
BB5658 -> BB5667 [tailport=s, headport=n, color=gray]
BB5659 [shape=record label="{17379: read-variable['raise',v47,v46]|17380: read-variable['tokPos',v49,-]|17381: constant[4.0,v50]|17382: -[v49,v50,v48]|17383: constant[\"Invalid Unicode escape\",v51]}" ] 
BB5659 -> BB5660 [tailport=s, headport=n, headlabel="      5660"]
BB5659 -> BB5667 [tailport=s, headport=n, color=gray]
BB5660 [shape=record label="{17384: call-raise [v46,v47,v48,v51,-]*}" ] 
BB5660 -> BB5661 [tailport=s, headport=n]
BB5660 -> BB5667 [tailport=s, headport=n, color=gray]
BB5661 [shape=record label="{17385: read-variable['word',v47,-]|17386: read-variable['escStr',v48,-]|17387: +[v47,v48,v46]|17388: write-variable[v46,'word']*}" ] 
BB5661 -> BB5662 [tailport=s, headport=n]
BB5661 -> BB5667 [tailport=s, headport=n, color=gray]
BB5662 [shape=record label="{17389: constant[false,v14]|17390: write-variable[v14,'first']*}" ] 
BB5662 -> BB5623 [tailport=s, headport=n]
BB5663 [shape=record label="{17391: read-variable['word',v1,-]}" ] 
BB5663 -> BB5666 [tailport=s, headport=n, headlabel="      5666"]
BB5663 -> BB5667 [tailport=s, headport=n, color=gray]
BB5664 [shape=record label="{17392: read-variable['input',v8,-]|17393: read-property[v8,'slice',-]|17394: \<variable-non-null-undef\>['input']|17395: read-variable['start',v9,-]|17396: read-variable['tokPos',v10,-]}" ] 
BB5664 -> BB5665 [tailport=s, headport=n, headlabel="      5665"]
BB5664 -> BB5667 [tailport=s, headport=n, color=gray]
BB5665 [shape=record label="{17397: call-input.slice [v8,'slice',v9,v10,v1]}" ] 
BB5665 -> BB5666 [tailport=s, headport=n]
BB5665 -> BB5667 [tailport=s, headport=n, color=gray]
BB5666 [shape=record label="{17398: return[v1]}" ] 
BB5667 [shape=record label="{17399: exceptional-return}" ] 
//#$~ 5679
}
