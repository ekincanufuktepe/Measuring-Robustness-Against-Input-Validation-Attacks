digraph {
rankdir="TD"
BB_entry454[shape=none,label=""];
BB_entry454 -> BB8077 [tailport=s, headport=n, headlabel="    8077"]
BB8077 [shape=record label="{24273: constant[undefined,v1]|24274: vardecl['inner']|24275: vardecl['i']|24276: vardecl['decl']}" ] 
BB8077 -> BB8078 [tailport=s, headport=n, headlabel="      8078"]
BB8078 [shape=record label="{24277: read-variable['makeScope',v4,v3]|24278: read-variable['scope',v5,-]}" ] 
BB8078 -> BB8079 [tailport=s, headport=n, headlabel="      8079"]
BB8078 -> BB8095 [tailport=s, headport=n, color=gray, headlabel="      8095"]
BB8079 [shape=record label="{24279: call-makeScope [v3,v4,v5,v2]}" ] 
BB8079 -> BB8080 [tailport=s, headport=n, headlabel="      8080"]
BB8079 -> BB8095 [tailport=s, headport=n, color=gray]
BB8080 [shape=record label="{24280: write-variable[v2,'inner']*|24281: constant[0.0,v7]|24282: write-variable[v7,'i']*}" ] 
BB8080 -> BB8081 [tailport=s, headport=n, headlabel="      8081"]
BB8081 [shape=record label="{24283: read-variable['i',v8,-]|24284: read-variable['node',v11,-]|24285: read-property[v11,'params',v10]|24286: \<variable-non-null-undef\>['node']|24287: read-property[v10,'length',v9]|24288: \<property-non-null-undef\>[v11,'params']|24289: \<[v8,v9,v6]|24290: if[v6](true-block:8082,false-block:8083)}" ] 
BB8081 -> BB8082 [tailport=s, headport=n, headlabel="      8082"]
BB8081 -> BB8083 [tailport=s, headport=n, headlabel="      8083"]
BB8081 -> BB8095 [tailport=s, headport=n, color=gray]
BB8082 [shape=record label="{24291: read-variable['inner',v15,-]|24292: read-property[v15,'vars',v13]|24293: \<variable-non-null-undef\>['inner']|24294: read-variable['node',v18,-]|24295: read-property[v18,'params',v17]|24296: \<variable-non-null-undef\>['node']|24297: read-variable['i',v19,-]|24298: read-property[v17,v19,v16]|24299: \<property-non-null-undef\>[v18,'params']|24300: read-property[v16,'name',v14]|24301: \<property-non-null-undef\>[v17,v19]|24302: new[v12]|24303: constant[\"argument\",v20]|24304: write-property[v12,'type',v20]|24305: read-variable['node',v23,-]|24306: read-property[v23,'params',v22]|24307: \<variable-non-null-undef\>['node']|24308: read-variable['i',v24,-]|24309: read-property[v22,v24,v21]|24310: \<property-non-null-undef\>[v23,'params']|24311: write-property[v12,'node',v21]|24312: write-property[v13,v14,v12]|24313: \<property-non-null-undef\>[v15,'vars']*|24314: constant[1.0,v25]|24315: read-variable['i',v26,-]|24316: +[v26,v27]|24317: +[v27,v25,v28]|24318: write-variable[v28,'i']}" ] 
BB8082 -> BB8081 [tailport=s, headport=n]
BB8082 -> BB8095 [tailport=s, headport=n, color=gray]
BB8083 [shape=record label="{24319: read-variable['node',v13,-]|24320: read-property[v13,'id',v12]|24321: \<variable-non-null-undef\>['node']|24322: if[v12](true-block:8084,false-block:8092)}" ] 
BB8083 -> BB8084 [tailport=s, headport=n, headlabel="      8084"]
BB8083 -> BB8092 [tailport=s, headport=n, headlabel="      8092"]
BB8083 -> BB8095 [tailport=s, headport=n, color=gray]
BB8084 [shape=record label="{24323: read-variable['node',v17,-]|24324: read-property[v17,'type',v15]|24325: \<variable-non-null-undef\>['node']|24326: constant[\"FunctionDeclaration\",v16]|24327: ==[v15,v16,v14]|24328: write-variable[v14,'decl']*|24329: read-variable['decl',v22,-]|24330: if[v22](true-block:8085,false-block:8086)}" ] 
BB8084 -> BB8085 [tailport=s, headport=n, headlabel="      8085"]
BB8084 -> BB8086 [tailport=s, headport=n, headlabel="      8086"]
BB8084 -> BB8095 [tailport=s, headport=n, color=gray]
BB8085 [shape=record label="{24331: read-variable['normalScope',v24,v23]|24332: read-variable['scope',v25,-]}" ] 
BB8085 -> BB8087 [tailport=s, headport=n, headlabel="      8087"]
BB8085 -> BB8095 [tailport=s, headport=n, color=gray]
BB8086 [shape=record label="{24333: read-variable['inner',v21,-]}" ] 
BB8086 -> BB8088 [tailport=s, headport=n, headlabel="      8088"]
BB8086 -> BB8095 [tailport=s, headport=n, color=gray]
BB8087 [shape=record label="{24334: call-normalScope [v23,v24,v25,v21]}" ] 
BB8087 -> BB8088 [tailport=s, headport=n]
BB8087 -> BB8095 [tailport=s, headport=n, color=gray]
BB8088 [shape=record label="{24335: read-property[v21,'vars',v19]|24336: read-variable['node',v24,-]|24337: read-property[v24,'id',v23]|24338: \<variable-non-null-undef\>['node']|24339: read-property[v23,'name',v20]|24340: \<property-non-null-undef\>[v24,'id']|24341: new[v18]|24342: read-variable['decl',v26,-]|24343: if[v26](true-block:8089,false-block:8090)}" ] 
BB8088 -> BB8089 [tailport=s, headport=n, headlabel="      8089"]
BB8088 -> BB8090 [tailport=s, headport=n, headlabel="      8090"]
BB8088 -> BB8095 [tailport=s, headport=n, color=gray]
BB8089 [shape=record label="{24344: constant[\"function\",v25]}" ] 
BB8089 -> BB8091 [tailport=s, headport=n, headlabel="      8091"]
BB8090 [shape=record label="{24345: constant[\"function name\",v25]}" ] 
BB8090 -> BB8091 [tailport=s, headport=n]
BB8091 [shape=record label="{24346: write-property[v18,'type',v25]|24347: read-variable['node',v28,-]|24348: read-property[v28,'id',v27]|24349: \<variable-non-null-undef\>['node']|24350: write-property[v18,'node',v27]|24351: write-property[v19,v20,v18]|24352: \<property-non-null-undef\>[v21,'vars']*}" ] 
BB8091 -> BB8092 [tailport=s, headport=n]
BB8091 -> BB8095 [tailport=s, headport=n, color=gray]
BB8092 [shape=record label="{24353: read-variable['c',v15,v14]|24354: read-variable['node',v17,-]|24355: read-property[v17,'body',v16]|24356: \<variable-non-null-undef\>['node']|24357: read-variable['inner',v18,-]|24358: constant[\"ScopeBody\",v19]}" ] 
BB8092 -> BB8093 [tailport=s, headport=n, headlabel="      8093"]
BB8092 -> BB8095 [tailport=s, headport=n, color=gray]
BB8093 [shape=record label="{24359: call-c [v14,v15,v16,v18,v19,-]*}" ] 
BB8093 -> BB8094 [tailport=s, headport=n, headlabel="      8094"]
BB8093 -> BB8095 [tailport=s, headport=n, color=gray]
BB8094 [shape=record label="{24360: return[v1]}" ] 
BB8095 [shape=record label="{24361: exceptional-return}" ] 
//#$~ 7444
}
