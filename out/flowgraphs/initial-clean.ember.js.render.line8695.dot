digraph {
rankdir="TD"
BB_entry384[shape=none,label=""];
BB_entry384 -> BB4808 [tailport=s, headport=n, headlabel="    4808"]
BB4808 [shape=record label="{16001: constant[undefined,v1]|16002: vardecl['dom']|16003: vardecl['hooks']|16004: vardecl['get']|16005: vardecl['block']|16006: vardecl['fragment']|16007: vardecl['morph0']|16008: vardecl['morph1']}" ] 
BB4808 -> BB4809 [tailport=s, headport=n, headlabel="      4809"]
BB4809 [shape=record label="{16009: read-variable['env',v4,v2]|16010: read-property[v4,'dom',v3]|16011: \<variable-non-null-undef\>['env']|16012: write-variable[v3,'dom']*|16013: read-variable['env',v6,v2]|16014: read-property[v6,'hooks',v5]|16015: \<variable-non-null-undef\>['env']|16016: write-variable[v5,'hooks']*|16017: read-variable['hooks',v8,v2]|16018: read-property[v8,'get',v7]|16019: \<variable-non-null-undef\>['hooks']|16020: write-variable[v7,'get']*|16021: read-variable['hooks',v10,v2]|16022: read-property[v10,'block',v9]|16023: \<variable-non-null-undef\>['hooks']|16024: write-variable[v9,'block']*|16025: read-variable['dom',v12,-]|16026: read-property[v12,'detectNamespace',-]|16027: \<variable-non-null-undef\>['dom']|16028: read-variable['contextualElement',v13,v2]}" ] 
BB4809 -> BB4810 [tailport=s, headport=n, headlabel="      4810"]
BB4809 -> BB4847 [tailport=s, headport=n, color=gray, headlabel="      4847"]
BB4810 [shape=record label="{16029: call-dom.detectNamespace [v12,'detectNamespace',v13,-]*}" ] 
BB4810 -> BB4811 [tailport=s, headport=n, headlabel="      4811"]
BB4810 -> BB4847 [tailport=s, headport=n, color=gray]
BB4811 [shape=record label="{16030: read-variable['env',v15,v2]|16031: read-property[v15,'useFragmentCache',v14]|16032: \<variable-non-null-undef\>['env']|16033: if[v14](true-block:4812,false-block:4813)}" ] 
BB4811 -> BB4813 [tailport=s, headport=n, headlabel="      4813"]
BB4811 -> BB4812 [tailport=s, headport=n, headlabel="      4812"]
BB4811 -> BB4847 [tailport=s, headport=n, color=gray]
BB4812 [shape=record label="{16034: read-variable['dom',v16,v2]|16035: read-property[v16,'canClone',v14]|16036: \<variable-non-null-undef\>['dom']}" ] 
BB4812 -> BB4813 [tailport=s, headport=n]
BB4812 -> BB4847 [tailport=s, headport=n, color=gray]
BB4813 [shape=record label="{16037: if[v14](true-block:4814,false-block:4815)}" ] 
BB4813 -> BB4814 [tailport=s, headport=n, headlabel="      4814"]
BB4813 -> BB4815 [tailport=s, headport=n, headlabel="      4815"]
BB4814 [shape=record label="{16038: read-variable['this',v19,-]|16039: read-property[v19,'cachedFragment',v17]|16040: constant[null,v18]|16041: ===[v17,v18,v16]|16042: if[v16](true-block:4816,false-block:4821)}" ] 
BB4814 -> BB4816 [tailport=s, headport=n, headlabel="      4816"]
BB4814 -> BB4821 [tailport=s, headport=n, headlabel="      4821"]
BB4814 -> BB4847 [tailport=s, headport=n, color=gray]
BB4815 [shape=record label="{16043: read-variable['this',v18,-]|16044: read-property[v18,'build',-]|16045: read-variable['dom',v19,v2]}" ] 
BB4815 -> BB4825 [tailport=s, headport=n, headlabel="      4825"]
BB4815 -> BB4847 [tailport=s, headport=n, color=gray]
BB4816 [shape=record label="{16046: read-variable['this',v22,-]|16047: read-property[v22,'build',-]|16048: read-variable['dom',v23,v2]}" ] 
BB4816 -> BB4817 [tailport=s, headport=n, headlabel="      4817"]
BB4816 -> BB4847 [tailport=s, headport=n, color=gray]
BB4817 [shape=record label="{16049: call-this.build [v22,'build',v23,v20]}" ] 
BB4817 -> BB4818 [tailport=s, headport=n, headlabel="      4818"]
BB4817 -> BB4847 [tailport=s, headport=n, color=gray]
BB4818 [shape=record label="{16050: write-variable[v20,'fragment']*|16051: read-variable['this',v25,-]|16052: read-property[v25,'hasRendered',v24]|16053: if[v24](true-block:4819,false-block:4820)}" ] 
BB4818 -> BB4819 [tailport=s, headport=n, headlabel="      4819"]
BB4818 -> BB4820 [tailport=s, headport=n, headlabel="      4820"]
BB4818 -> BB4847 [tailport=s, headport=n, color=gray]
BB4819 [shape=record label="{16054: read-variable['this',v27,-]|16055: read-variable['fragment',v26,v2]|16056: write-property[v27,'cachedFragment',v26]*}" ] 
BB4819 -> BB4821 [tailport=s, headport=n]
BB4819 -> BB4847 [tailport=s, headport=n, color=gray]
BB4820 [shape=record label="{16057: read-variable['this',v27,-]|16058: constant[true,v26]|16059: write-property[v27,'hasRendered',v26]*}" ] 
BB4820 -> BB4821 [tailport=s, headport=n]
BB4820 -> BB4847 [tailport=s, headport=n, color=gray]
BB4821 [shape=record label="{16060: read-variable['this',v21,-]|16061: read-property[v21,'cachedFragment',v20]|16062: if[v20](true-block:4822,false-block:4827)}" ] 
BB4821 -> BB4822 [tailport=s, headport=n, headlabel="      4822"]
BB4821 -> BB4827 [tailport=s, headport=n, headlabel="      4827"]
BB4821 -> BB4847 [tailport=s, headport=n, color=gray]
BB4822 [shape=record label="{16063: read-variable['dom',v24,-]|16064: read-property[v24,'cloneNode',-]|16065: \<variable-non-null-undef\>['dom']|16066: read-variable['this',v26,-]|16067: read-property[v26,'cachedFragment',v25]|16068: constant[true,v27]}" ] 
BB4822 -> BB4823 [tailport=s, headport=n, headlabel="      4823"]
BB4822 -> BB4847 [tailport=s, headport=n, color=gray]
BB4823 [shape=record label="{16069: call-dom.cloneNode [v24,'cloneNode',v25,v27,v22]}" ] 
BB4823 -> BB4824 [tailport=s, headport=n, headlabel="      4824"]
BB4823 -> BB4847 [tailport=s, headport=n, color=gray]
BB4824 [shape=record label="{16070: write-variable[v22,'fragment']*}" ] 
BB4824 -> BB4827 [tailport=s, headport=n]
BB4825 [shape=record label="{16071: call-this.build [v18,'build',v19,v16]}" ] 
BB4825 -> BB4826 [tailport=s, headport=n, headlabel="      4826"]
BB4825 -> BB4847 [tailport=s, headport=n, color=gray]
BB4826 [shape=record label="{16072: write-variable[v16,'fragment']*}" ] 
BB4826 -> BB4827 [tailport=s, headport=n]
BB4827 [shape=record label="{16073: read-variable['this',v17,-]|16074: read-property[v17,'cachedFragment',v16]|16075: if[v16](true-block:4828,false-block:4831)}" ] 
BB4827 -> BB4828 [tailport=s, headport=n, headlabel="      4828"]
BB4827 -> BB4831 [tailport=s, headport=n, headlabel="      4831"]
BB4827 -> BB4847 [tailport=s, headport=n, color=gray]
BB4828 [shape=record label="{16076: read-variable['dom',v19,-]|16077: read-property[v19,'repairClonedNode',-]|16078: \<variable-non-null-undef\>['dom']|16079: read-variable['fragment',v20,v2]|16080: read-variable['Array',v22,-]|16081: constant[0.0,v23]|16082: constant[1.0,v24]}" ] 
BB4828 -> BB4829 [tailport=s, headport=n, headlabel="      4829"]
BB4828 -> BB4847 [tailport=s, headport=n, color=gray]
BB4829 [shape=record label="{16083: construct [-,v22,v23,v24,v21]}" ] 
BB4829 -> BB4830 [tailport=s, headport=n, headlabel="      4830"]
BB4829 -> BB4847 [tailport=s, headport=n, color=gray]
BB4830 [shape=record label="{16084: call-dom.repairClonedNode [v19,'repairClonedNode',v20,v21,-]*}" ] 
BB4830 -> BB4831 [tailport=s, headport=n]
BB4830 -> BB4847 [tailport=s, headport=n, color=gray]
BB4831 [shape=record label="{16085: read-variable['dom',v20,-]|16086: read-property[v20,'createMorphAt',-]|16087: \<variable-non-null-undef\>['dom']|16088: read-variable['fragment',v21,v2]|16089: constant[0.0,v22]|16090: constant[1.0,v23]|16091: read-variable['contextualElement',v24,v2]}" ] 
BB4831 -> BB4832 [tailport=s, headport=n, headlabel="      4832"]
BB4831 -> BB4847 [tailport=s, headport=n, color=gray]
BB4832 [shape=record label="{16092: call-dom.createMorphAt [v20,'createMorphAt',v21,v22,v23,v24,v18]}" ] 
BB4832 -> BB4833 [tailport=s, headport=n, headlabel="      4833"]
BB4832 -> BB4847 [tailport=s, headport=n, color=gray]
BB4833 [shape=record label="{16093: write-variable[v18,'morph0']*|16094: read-variable['dom',v27,-]|16095: read-property[v27,'createMorphAt',-]|16096: \<variable-non-null-undef\>['dom']|16097: read-variable['fragment',v28,v2]|16098: constant[1.0,v29]|16099: constant[2.0,v30]|16100: read-variable['contextualElement',v31,v2]}" ] 
BB4833 -> BB4834 [tailport=s, headport=n, headlabel="      4834"]
BB4833 -> BB4847 [tailport=s, headport=n, color=gray]
BB4834 [shape=record label="{16101: call-dom.createMorphAt [v27,'createMorphAt',v28,v29,v30,v31,v25]}" ] 
BB4834 -> BB4835 [tailport=s, headport=n, headlabel="      4835"]
BB4834 -> BB4847 [tailport=s, headport=n, color=gray]
BB4835 [shape=record label="{16102: write-variable[v25,'morph1']*|16103: read-variable['block',v33,v32]|16104: read-variable['env',v34,v2]|16105: read-variable['morph0',v35,v2]|16106: read-variable['context',v36,v2]|16107: constant[\"if\",v37]|16108: read-variable['Array',v39,-]|16109: read-variable['get',v42,v41]|16110: read-variable['env',v43,v2]|16111: read-variable['context',v44,v2]|16112: constant[\"view.prompt\",v45]}" ] 
BB4835 -> BB4836 [tailport=s, headport=n, headlabel="      4836"]
BB4835 -> BB4847 [tailport=s, headport=n, color=gray]
BB4836 [shape=record label="{16113: call-get [v41,v42,v43,v44,v45,v40]}" ] 
BB4836 -> BB4837 [tailport=s, headport=n, headlabel="      4837"]
BB4836 -> BB4847 [tailport=s, headport=n, color=gray]
BB4837 [shape=record label="{16114: construct [-,v39,v40,v38]}" ] 
BB4837 -> BB4838 [tailport=s, headport=n, headlabel="      4838"]
BB4837 -> BB4847 [tailport=s, headport=n, color=gray]
BB4838 [shape=record label="{16115: new[v46]|16116: read-variable['child0',v47,v2]|16117: constant[null,v48]}" ] 
BB4838 -> BB4839 [tailport=s, headport=n, headlabel="      4839"]
BB4838 -> BB4847 [tailport=s, headport=n, color=gray]
BB4839 [shape=record label="{16118: call-block [v32,v33,v34,v35,v36,v37,v38,v46,v47,v48,-]*}" ] 
BB4839 -> BB4840 [tailport=s, headport=n, headlabel="      4840"]
BB4839 -> BB4847 [tailport=s, headport=n, color=gray]
BB4840 [shape=record label="{16119: read-variable['block',v50,v49]|16120: read-variable['env',v51,v2]|16121: read-variable['morph1',v52,v2]|16122: read-variable['context',v53,v2]|16123: constant[\"if\",v54]|16124: read-variable['Array',v56,-]|16125: read-variable['get',v59,v58]|16126: read-variable['env',v60,v2]|16127: read-variable['context',v61,v2]|16128: constant[\"view.optionGroupPath\",v62]}" ] 
BB4840 -> BB4841 [tailport=s, headport=n, headlabel="      4841"]
BB4840 -> BB4847 [tailport=s, headport=n, color=gray]
BB4841 [shape=record label="{16129: call-get [v58,v59,v60,v61,v62,v57]}" ] 
BB4841 -> BB4842 [tailport=s, headport=n, headlabel="      4842"]
BB4841 -> BB4847 [tailport=s, headport=n, color=gray]
BB4842 [shape=record label="{16130: construct [-,v56,v57,v55]}" ] 
BB4842 -> BB4843 [tailport=s, headport=n, headlabel="      4843"]
BB4842 -> BB4847 [tailport=s, headport=n, color=gray]
BB4843 [shape=record label="{16131: new[v63]|16132: read-variable['child1',v64,v2]|16133: read-variable['child2',v65,v2]}" ] 
BB4843 -> BB4844 [tailport=s, headport=n, headlabel="      4844"]
BB4843 -> BB4847 [tailport=s, headport=n, color=gray]
BB4844 [shape=record label="{16134: call-block [v49,v50,v51,v52,v53,v54,v55,v63,v64,v65,-]*}" ] 
BB4844 -> BB4845 [tailport=s, headport=n, headlabel="      4845"]
BB4844 -> BB4847 [tailport=s, headport=n, color=gray]
BB4845 [shape=record label="{16135: read-variable['fragment',v1,v2]}" ] 
BB4845 -> BB4846 [tailport=s, headport=n, headlabel="      4846"]
BB4845 -> BB4847 [tailport=s, headport=n, color=gray]
BB4846 [shape=record label="{16136: return[v1]}" ] 
BB4847 [shape=record label="{16137: exceptional-return}" ] 
//#$~ 8720
}
