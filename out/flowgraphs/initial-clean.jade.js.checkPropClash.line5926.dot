digraph {
rankdir="TD"
BB_entry345[shape=none,label=""];
BB_entry345 -> BB5874 [tailport=s, headport=n, headlabel="    5874"]
BB5874 [shape=record label="{18007: constant[undefined,v1]|18008: vardecl['key']|18009: vardecl['name']|18010: vardecl['kind']|18011: vardecl['other']|18012: vardecl['isGetSet']}" ] 
BB5874 -> BB5875 [tailport=s, headport=n, headlabel="      5875"]
BB5875 [shape=record label="{18013: read-variable['prop',v3,-]|18014: read-property[v3,'computed',v2]|18015: \<variable-non-null-undef\>['prop']|18016: if[v2](true-block:5876,false-block:5877)}" ] 
BB5875 -> BB5876 [tailport=s, headport=n, headlabel="      5876"]
BB5875 -> BB5877 [tailport=s, headport=n, headlabel="      5877"]
BB5875 -> BB5901 [tailport=s, headport=n, color=gray, headlabel="      5901"]
BB5876 [shape=record label="{18017: constant[undefined,v1]}" ] 
BB5876 -> BB5900 [tailport=s, headport=n, headlabel="      5900"]
BB5877 [shape=record label="{18018: read-variable['prop',v5,-]|18019: read-property[v5,'key',v4]|18020: \<variable-non-null-undef\>['prop']|18021: write-variable[v4,'key']*|18022: read-variable['key',v7,-]|18023: read-property[v7,'type',v6]|18024: \<variable-non-null-undef\>['key']|18025: constant[\"Identifier\",v8]|18026: ==[v6,v8,v9]|18027: if[v9](true-block:5879,false-block:5880)}" ] 
BB5877 -> BB5879 [tailport=s, headport=n, headlabel="      5879"]
BB5877 -> BB5880 [tailport=s, headport=n, headlabel="      5880"]
BB5877 -> BB5901 [tailport=s, headport=n, color=gray]
BB5878 [shape=record label="{18028: read-variable['prop',v11,-]|18029: read-property[v11,'kind',v10]|18030: \<variable-non-null-undef\>['prop']|18031: if[v10](true-block:5886,false-block:5885)}" ] 
BB5878 -> BB5886 [tailport=s, headport=n, headlabel="      5886"]
BB5878 -> BB5885 [tailport=s, headport=n, headlabel="      5885"]
BB5878 -> BB5901 [tailport=s, headport=n, color=gray]
BB5879 [shape=record label="{18032: read-variable['key',v11,-]|18033: read-property[v11,'name',v10]|18034: \<variable-non-null-undef\>['key']|18035: write-variable[v10,'name']*}" ] 
BB5879 -> BB5878 [tailport=s, headport=n, headlabel="      5878"]
BB5879 -> BB5901 [tailport=s, headport=n, color=gray]
BB5880 [shape=record label="{18036: constant[\"Literal\",v8]|18037: ==[v6,v8,v9]|18038: if[v9](true-block:5881,false-block:5884)}" ] 
BB5880 -> BB5881 [tailport=s, headport=n, headlabel="      5881"]
BB5880 -> BB5884 [tailport=s, headport=n, headlabel="      5884"]
BB5880 -> BB5901 [tailport=s, headport=n, color=gray]
BB5881 [shape=record label="{18039: read-variable['String',v14,v13]|18040: read-variable['key',v16,-]|18041: read-property[v16,'value',v15]|18042: \<variable-non-null-undef\>['key']}" ] 
BB5881 -> BB5882 [tailport=s, headport=n, headlabel="      5882"]
BB5881 -> BB5901 [tailport=s, headport=n, color=gray]
BB5882 [shape=record label="{18043: call-String [v13,v14,v15,v12]}" ] 
BB5882 -> BB5883 [tailport=s, headport=n, headlabel="      5883"]
BB5882 -> BB5901 [tailport=s, headport=n, color=gray]
BB5883 [shape=record label="{18044: write-variable[v12,'name']*}" ] 
BB5883 -> BB5878 [tailport=s, headport=n]
BB5884 [shape=record label="{18045: constant[undefined,v1]}" ] 
BB5884 -> BB5900 [tailport=s, headport=n]
BB5885 [shape=record label="{18046: constant[\"init\",v10]}" ] 
BB5885 -> BB5886 [tailport=s, headport=n]
BB5886 [shape=record label="{18047: write-variable[v10,'kind']*|18048: read-variable['has',v13,v12]|18049: read-variable['propHash',v14,-]|18050: read-variable['name',v15,-]}" ] 
BB5886 -> BB5887 [tailport=s, headport=n, headlabel="      5887"]
BB5886 -> BB5901 [tailport=s, headport=n, color=gray]
BB5887 [shape=record label="{18051: call-has [v12,v13,v14,v15,v11]}" ] 
BB5887 -> BB5888 [tailport=s, headport=n, headlabel="      5888"]
BB5887 -> BB5901 [tailport=s, headport=n, color=gray]
BB5888 [shape=record label="{18052: if[v11](true-block:5889,false-block:5890)}" ] 
BB5888 -> BB5889 [tailport=s, headport=n, headlabel="      5889"]
BB5888 -> BB5890 [tailport=s, headport=n, headlabel="      5890"]
BB5889 [shape=record label="{18053: read-variable['propHash',v17,-]|18054: read-variable['name',v18,-]|18055: read-property[v17,v18,v16]|18056: \<variable-non-null-undef\>['propHash']|18057: write-variable[v16,'other']*|18058: read-variable['kind',v20,-]|18059: constant[\"init\",v21]|18060: !==[v20,v21,v19]|18061: write-variable[v19,'isGetSet']*|18062: read-variable['strict',v22,-]|18063: if[v22](true-block:5892,false-block:5891)}" ] 
BB5889 -> BB5892 [tailport=s, headport=n, headlabel="      5892"]
BB5889 -> BB5891 [tailport=s, headport=n, headlabel="      5891"]
BB5889 -> BB5901 [tailport=s, headport=n, color=gray]
BB5890 [shape=record label="{18064: read-variable['propHash',v17,-]|18065: read-variable['name',v18,-]|18066: new[v16]|18067: constant[false,v19]|18068: write-property[v16,'init',v19]|18069: constant[false,v20]|18070: write-property[v16,'get',v20]|18071: constant[false,v21]|18072: write-property[v16,'set',v21]|18073: write-property[v17,v18,v16]|18074: \<variable-non-null-undef\>['propHash']|18075: write-variable[v16,'other']*}" ] 
BB5890 -> BB5899 [tailport=s, headport=n, headlabel="      5899"]
BB5890 -> BB5901 [tailport=s, headport=n, color=gray]
BB5891 [shape=record label="{18076: read-variable['isGetSet',v22,-]}" ] 
BB5891 -> BB5892 [tailport=s, headport=n]
BB5891 -> BB5901 [tailport=s, headport=n, color=gray]
BB5892 [shape=record label="{18077: if[v22](true-block:5893,false-block:5894)}" ] 
BB5892 -> BB5894 [tailport=s, headport=n, headlabel="      5894"]
BB5892 -> BB5893 [tailport=s, headport=n, headlabel="      5893"]
BB5893 [shape=record label="{18078: read-variable['other',v23,-]|18079: read-variable['kind',v24,-]|18080: read-property[v23,v24,v22]|18081: \<variable-non-null-undef\>['other']}" ] 
BB5893 -> BB5894 [tailport=s, headport=n]
BB5893 -> BB5901 [tailport=s, headport=n, color=gray]
BB5894 [shape=record label="{18082: if[v22](true-block:5896,false-block:5895)}" ] 
BB5894 -> BB5896 [tailport=s, headport=n, headlabel="      5896"]
BB5894 -> BB5895 [tailport=s, headport=n, headlabel="      5895"]
BB5895 [shape=record label="{18083: read-variable['isGetSet',v24,-]|18084: read-variable['other',v26,-]|18085: read-property[v26,'init',v25]|18086: \<variable-non-null-undef\>['other']|18087: ^[v24,v25,v23]|18088: ![v23,v22]}" ] 
BB5895 -> BB5896 [tailport=s, headport=n]
BB5895 -> BB5901 [tailport=s, headport=n, color=gray]
BB5896 [shape=record label="{18089: if[v22](true-block:5897,false-block:5899)}" ] 
BB5896 -> BB5897 [tailport=s, headport=n, headlabel="      5897"]
BB5896 -> BB5899 [tailport=s, headport=n]
BB5897 [shape=record label="{18090: read-variable['raise',v24,v23]|18091: read-variable['key',v26,-]|18092: read-property[v26,'start',v25]|18093: \<variable-non-null-undef\>['key']|18094: constant[\"Redefinition of property\",v27]}" ] 
BB5897 -> BB5898 [tailport=s, headport=n, headlabel="      5898"]
BB5897 -> BB5901 [tailport=s, headport=n, color=gray]
BB5898 [shape=record label="{18095: call-raise [v23,v24,v25,v27,-]*}" ] 
BB5898 -> BB5899 [tailport=s, headport=n]
BB5898 -> BB5901 [tailport=s, headport=n, color=gray]
BB5899 [shape=record label="{18096: read-variable['other',v17,-]|18097: read-variable['kind',v18,-]|18098: constant[true,v16]|18099: write-property[v17,v18,v16]|18100: \<variable-non-null-undef\>['other']*}" ] 
BB5899 -> BB5900 [tailport=s, headport=n]
BB5899 -> BB5901 [tailport=s, headport=n, color=gray]
BB5900 [shape=record label="{18101: return[v1]}" ] 
BB5901 [shape=record label="{18102: exceptional-return}" ] 
//#$~ 5947
}
