digraph {
rankdir="TD"
BB_entry111[shape=none,label=""];
BB_entry111 -> BB1691 [tailport=s, headport=n, headlabel="    1691"]
BB1691 [shape=record label="{4526: constant[undefined,v1]|4527: function-decl[function each ( iterator context ),-]|4528: function-decl[function eachSlice ( number iterator context ),-]|4529: function-decl[function all ( iterator context ),-]|4530: function-decl[function any ( iterator context ),-]|4531: function-decl[function collect ( iterator context ),-]|4532: function-decl[function detect ( iterator context ),-]|4533: function-decl[function findAll ( iterator context ),-]|4534: function-decl[function grep ( filter iterator context ),-]|4535: function-decl[function include ( object ),-]|4536: function-decl[function inGroupsOf ( number fillWith ),-]|4537: function-decl[function inject ( memo iterator context ),-]|4538: function-decl[function invoke ( method ),-]|4539: function-decl[function max ( iterator context ),-]|4540: function-decl[function min ( iterator context ),-]|4541: function-decl[function partition ( iterator context ),-]|4542: function-decl[function pluck ( property ),-]|4543: function-decl[function reject ( iterator context ),-]|4544: function-decl[function sortBy ( iterator context ),-]|4545: function-decl[function toArray ( ),-]|4546: function-decl[function zip ( ),-]|4547: function-decl[function size ( ),-]|4548: function-decl[function inspect ( ),-]}" ] 
BB1691 -> BB1692 [tailport=s, headport=n, headlabel="      1692"]
BB1692 [shape=record label="{4549: new[v1]|4550: read-variable['each',v2,-]|4551: write-property[v1,'each',v2]|4552: read-variable['eachSlice',v3,-]|4553: write-property[v1,'eachSlice',v3]|4554: read-variable['all',v4,-]|4555: write-property[v1,'all',v4]|4556: read-variable['all',v5,-]|4557: write-property[v1,'every',v5]|4558: read-variable['any',v6,-]|4559: write-property[v1,'any',v6]|4560: read-variable['any',v7,-]|4561: write-property[v1,'some',v7]|4562: read-variable['collect',v8,-]|4563: write-property[v1,'collect',v8]|4564: read-variable['collect',v9,-]|4565: write-property[v1,'map',v9]|4566: read-variable['detect',v10,-]|4567: write-property[v1,'detect',v10]|4568: read-variable['findAll',v11,-]|4569: write-property[v1,'findAll',v11]|4570: read-variable['findAll',v12,-]|4571: write-property[v1,'select',v12]|4572: read-variable['findAll',v13,-]|4573: write-property[v1,'filter',v13]|4574: read-variable['grep',v14,-]|4575: write-property[v1,'grep',v14]|4576: read-variable['include',v15,-]|4577: write-property[v1,'include',v15]|4578: read-variable['include',v16,-]|4579: write-property[v1,'member',v16]|4580: read-variable['inGroupsOf',v17,-]|4581: write-property[v1,'inGroupsOf',v17]|4582: read-variable['inject',v18,-]|4583: write-property[v1,'inject',v18]|4584: read-variable['invoke',v19,-]|4585: write-property[v1,'invoke',v19]|4586: read-variable['max',v20,-]|4587: write-property[v1,'max',v20]|4588: read-variable['min',v21,-]|4589: write-property[v1,'min',v21]|4590: read-variable['partition',v22,-]|4591: write-property[v1,'partition',v22]|4592: read-variable['pluck',v23,-]|4593: write-property[v1,'pluck',v23]|4594: read-variable['reject',v24,-]|4595: write-property[v1,'reject',v24]|4596: read-variable['sortBy',v25,-]|4597: write-property[v1,'sortBy',v25]|4598: read-variable['toArray',v26,-]|4599: write-property[v1,'toArray',v26]|4600: read-variable['toArray',v27,-]|4601: write-property[v1,'entries',v27]|4602: read-variable['zip',v28,-]|4603: write-property[v1,'zip',v28]|4604: read-variable['size',v29,-]|4605: write-property[v1,'size',v29]|4606: read-variable['inspect',v30,-]|4607: write-property[v1,'inspect',v30]|4608: read-variable['detect',v31,-]|4609: write-property[v1,'find',v31]}" ] 
BB1692 -> BB1693 [tailport=s, headport=n, headlabel="      1693"]
BB1692 -> BB1694 [tailport=s, headport=n, color=gray, headlabel="      1694"]
BB1693 [shape=record label="{4610: return[v1]}" ] 
BB1694 [shape=record label="{4611: exceptional-return}" ] 
//#$~ 1095
}
