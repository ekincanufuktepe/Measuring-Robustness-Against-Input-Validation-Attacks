digraph {
rankdir="TD"
BB_entry375[shape=none,label=""];
BB_entry375 -> BB6606 [tailport=s, headport=n, headlabel="    6606"]
BB6606 [shape=record label="{19707: constant[undefined,v1]|19708: vardecl['node']|19709: vardecl['update']|19710: vardecl['expr']|19711: vardecl['node']}" ] 
BB6606 -> BB6607 [tailport=s, headport=n, headlabel="      6607"]
BB6607 [shape=record label="{19712: read-variable['tokType',v3,-]|19713: read-property[v3,'prefix',v2]|19714: \<variable-non-null-undef\>['tokType']|19715: if[v2](true-block:6608,false-block:6627)}" ] 
BB6607 -> BB6608 [tailport=s, headport=n, headlabel="      6608"]
BB6607 -> BB6627 [tailport=s, headport=n, headlabel="      6627"]
BB6607 -> BB6646 [tailport=s, headport=n, color=gray, headlabel="      6646"]
BB6608 [shape=record label="{19716: read-variable['startNode',v6,v5]}" ] 
BB6608 -> BB6609 [tailport=s, headport=n, headlabel="      6609"]
BB6608 -> BB6646 [tailport=s, headport=n, color=gray]
BB6609 [shape=record label="{19717: call-startNode [v5,v6,v4]}" ] 
BB6609 -> BB6610 [tailport=s, headport=n, headlabel="      6610"]
BB6609 -> BB6646 [tailport=s, headport=n, color=gray]
BB6610 [shape=record label="{19718: write-variable[v4,'node']*|19719: read-variable['tokType',v8,-]|19720: read-property[v8,'isUpdate',v7]|19721: \<variable-non-null-undef\>['tokType']|19722: write-variable[v7,'update']*|19723: read-variable['node',v10,-]|19724: read-variable['tokVal',v9,-]|19725: write-property[v10,'operator',v9]|19726: \<variable-non-null-undef\>['node']*|19727: read-variable['node',v12,-]|19728: constant[true,v11]|19729: write-property[v12,'prefix',v11]|19730: \<variable-non-null-undef\>['node']*|19731: constant[true,v13]|19732: write-variable[v13,'tokRegexpAllowed']*|19733: read-variable['next',v15,v14]}" ] 
BB6610 -> BB6611 [tailport=s, headport=n, headlabel="      6611"]
BB6610 -> BB6646 [tailport=s, headport=n, color=gray]
BB6611 [shape=record label="{19734: call-next [v14,v15,-]*}" ] 
BB6611 -> BB6612 [tailport=s, headport=n, headlabel="      6612"]
BB6611 -> BB6646 [tailport=s, headport=n, color=gray]
BB6612 [shape=record label="{19735: read-variable['node',v17,-]|19736: read-variable['parseMaybeUnary',v19,v18]}" ] 
BB6612 -> BB6613 [tailport=s, headport=n, headlabel="      6613"]
BB6612 -> BB6646 [tailport=s, headport=n, color=gray]
BB6613 [shape=record label="{19737: call-parseMaybeUnary [v18,v19,v16]}" ] 
BB6613 -> BB6614 [tailport=s, headport=n, headlabel="      6614"]
BB6613 -> BB6646 [tailport=s, headport=n, color=gray]
BB6614 [shape=record label="{19738: write-property[v17,'argument',v16]|19739: \<variable-non-null-undef\>['node']*|19740: read-variable['update',v20,-]|19741: if[v20](true-block:6615,false-block:6616)}" ] 
BB6614 -> BB6615 [tailport=s, headport=n, headlabel="      6615"]
BB6614 -> BB6616 [tailport=s, headport=n, headlabel="      6616"]
BB6614 -> BB6646 [tailport=s, headport=n, color=gray]
BB6615 [shape=record label="{19742: read-variable['checkLVal',v22,v21]|19743: read-variable['node',v24,-]|19744: read-property[v24,'argument',v23]|19745: \<variable-non-null-undef\>['node']}" ] 
BB6615 -> BB6617 [tailport=s, headport=n, headlabel="      6617"]
BB6615 -> BB6646 [tailport=s, headport=n, color=gray]
BB6616 [shape=record label="{19746: read-variable['strict',v21,-]|19747: if[v21](true-block:6618,false-block:6620)}" ] 
BB6616 -> BB6620 [tailport=s, headport=n, headlabel="      6620"]
BB6616 -> BB6618 [tailport=s, headport=n, headlabel="      6618"]
BB6616 -> BB6646 [tailport=s, headport=n, color=gray]
BB6617 [shape=record label="{19748: call-checkLVal [v21,v22,v23,-]*}" ] 
BB6617 -> BB6623 [tailport=s, headport=n, headlabel="      6623"]
BB6617 -> BB6646 [tailport=s, headport=n, color=gray]
BB6618 [shape=record label="{19749: read-variable['node',v24,-]|19750: read-property[v24,'operator',v22]|19751: \<variable-non-null-undef\>['node']|19752: constant[\"delete\",v23]|19753: ===[v22,v23,v21]|19754: if[v21](true-block:6619,false-block:6620)}" ] 
BB6618 -> BB6620 [tailport=s, headport=n]
BB6618 -> BB6619 [tailport=s, headport=n, headlabel="      6619"]
BB6618 -> BB6646 [tailport=s, headport=n, color=gray]
BB6619 [shape=record label="{19755: read-variable['node',v28,-]|19756: read-property[v28,'argument',v27]|19757: \<variable-non-null-undef\>['node']|19758: read-property[v27,'type',v25]|19759: \<property-non-null-undef\>[v28,'argument']|19760: constant[\"Identifier\",v26]|19761: ===[v25,v26,v21]}" ] 
BB6619 -> BB6620 [tailport=s, headport=n]
BB6619 -> BB6646 [tailport=s, headport=n, color=gray]
BB6620 [shape=record label="{19762: if[v21](true-block:6621,false-block:6623)}" ] 
BB6620 -> BB6621 [tailport=s, headport=n, headlabel="      6621"]
BB6620 -> BB6623 [tailport=s, headport=n]
BB6621 [shape=record label="{19763: read-variable['raise',v23,v22]|19764: read-variable['node',v25,-]|19765: read-property[v25,'start',v24]|19766: \<variable-non-null-undef\>['node']|19767: constant[\"Deleting local variable in strict mode\",v26]}" ] 
BB6621 -> BB6622 [tailport=s, headport=n, headlabel="      6622"]
BB6621 -> BB6646 [tailport=s, headport=n, color=gray]
BB6622 [shape=record label="{19768: call-raise [v22,v23,v24,v26,-]*}" ] 
BB6622 -> BB6623 [tailport=s, headport=n]
BB6622 -> BB6646 [tailport=s, headport=n, color=gray]
BB6623 [shape=record label="{19769: read-variable['finishNode',v22,v21]|19770: read-variable['node',v23,-]|19771: read-variable['update',v25,-]|19772: if[v25](true-block:6624,false-block:6625)}" ] 
BB6623 -> BB6624 [tailport=s, headport=n, headlabel="      6624"]
BB6623 -> BB6625 [tailport=s, headport=n, headlabel="      6625"]
BB6623 -> BB6646 [tailport=s, headport=n, color=gray]
BB6624 [shape=record label="{19773: constant[\"UpdateExpression\",v24]}" ] 
BB6624 -> BB6626 [tailport=s, headport=n, headlabel="      6626"]
BB6625 [shape=record label="{19774: constant[\"UnaryExpression\",v24]}" ] 
BB6625 -> BB6626 [tailport=s, headport=n]
BB6626 [shape=record label="{19775: call-finishNode [v21,v22,v23,v24,v1]}" ] 
BB6626 -> BB6645 [tailport=s, headport=n, headlabel="      6645"]
BB6626 -> BB6646 [tailport=s, headport=n, color=gray]
BB6627 [shape=record label="{19776: read-variable['parseExprSubscripts',v6,v5]}" ] 
BB6627 -> BB6628 [tailport=s, headport=n, headlabel="      6628"]
BB6627 -> BB6646 [tailport=s, headport=n, color=gray]
BB6628 [shape=record label="{19777: call-parseExprSubscripts [v5,v6,v4]}" ] 
BB6628 -> BB6629 [tailport=s, headport=n, headlabel="      6629"]
BB6628 -> BB6646 [tailport=s, headport=n, color=gray]
BB6629 [shape=record label="{19778: write-variable[v4,'expr']*}" ] 
BB6629 -> BB6630 [tailport=s, headport=n, headlabel="      6630"]
BB6630 [shape=record label="{19779: read-variable['tokType',v8,-]|19780: read-property[v8,'postfix',v7]|19781: \<variable-non-null-undef\>['tokType']|19782: if[v7](true-block:6631,false-block:6634)}" ] 
BB6630 -> BB6634 [tailport=s, headport=n, headlabel="      6634"]
BB6630 -> BB6631 [tailport=s, headport=n, headlabel="      6631"]
BB6630 -> BB6646 [tailport=s, headport=n, color=gray]
BB6631 [shape=record label="{19783: read-variable['canInsertSemicolon',v11,v10]}" ] 
BB6631 -> BB6632 [tailport=s, headport=n, headlabel="      6632"]
BB6631 -> BB6646 [tailport=s, headport=n, color=gray]
BB6632 [shape=record label="{19784: call-canInsertSemicolon [v10,v11,v9]}" ] 
BB6632 -> BB6633 [tailport=s, headport=n, headlabel="      6633"]
BB6632 -> BB6646 [tailport=s, headport=n, color=gray]
BB6633 [shape=record label="{19785: ![v9,v7]}" ] 
BB6633 -> BB6634 [tailport=s, headport=n]
BB6633 -> BB6646 [tailport=s, headport=n, color=gray]
BB6634 [shape=record label="{19786: if[v7](true-block:6635,false-block:6636)}" ] 
BB6634 -> BB6635 [tailport=s, headport=n, headlabel="      6635"]
BB6634 -> BB6636 [tailport=s, headport=n, headlabel="      6636"]
BB6635 [shape=record label="{19787: read-variable['startNodeFrom',v11,v10]|19788: read-variable['expr',v12,-]}" ] 
BB6635 -> BB6637 [tailport=s, headport=n, headlabel="      6637"]
BB6635 -> BB6646 [tailport=s, headport=n, color=gray]
BB6636 [shape=record label="{19789: read-variable['expr',v1,-]}" ] 
BB6636 -> BB6645 [tailport=s, headport=n]
BB6636 -> BB6646 [tailport=s, headport=n, color=gray]
BB6637 [shape=record label="{19790: call-startNodeFrom [v10,v11,v12,v9]}" ] 
BB6637 -> BB6638 [tailport=s, headport=n, headlabel="      6638"]
BB6637 -> BB6646 [tailport=s, headport=n, color=gray]
BB6638 [shape=record label="{19791: write-variable[v9,'node']*|19792: read-variable['node',v14,-]|19793: read-variable['tokVal',v13,-]|19794: write-property[v14,'operator',v13]|19795: \<variable-non-null-undef\>['node']*|19796: read-variable['node',v16,-]|19797: constant[false,v15]|19798: write-property[v16,'prefix',v15]|19799: \<variable-non-null-undef\>['node']*|19800: read-variable['node',v18,-]|19801: read-variable['expr',v17,-]|19802: write-property[v18,'argument',v17]|19803: \<variable-non-null-undef\>['node']*|19804: read-variable['checkLVal',v20,v19]|19805: read-variable['expr',v21,-]}" ] 
BB6638 -> BB6639 [tailport=s, headport=n, headlabel="      6639"]
BB6638 -> BB6646 [tailport=s, headport=n, color=gray]
BB6639 [shape=record label="{19806: call-checkLVal [v19,v20,v21,-]*}" ] 
BB6639 -> BB6640 [tailport=s, headport=n, headlabel="      6640"]
BB6639 -> BB6646 [tailport=s, headport=n, color=gray]
BB6640 [shape=record label="{19807: read-variable['next',v23,v22]}" ] 
BB6640 -> BB6641 [tailport=s, headport=n, headlabel="      6641"]
BB6640 -> BB6646 [tailport=s, headport=n, color=gray]
BB6641 [shape=record label="{19808: call-next [v22,v23,-]*}" ] 
BB6641 -> BB6642 [tailport=s, headport=n, headlabel="      6642"]
BB6641 -> BB6646 [tailport=s, headport=n, color=gray]
BB6642 [shape=record label="{19809: read-variable['finishNode',v26,v25]|19810: read-variable['node',v27,-]|19811: constant[\"UpdateExpression\",v28]}" ] 
BB6642 -> BB6643 [tailport=s, headport=n, headlabel="      6643"]
BB6642 -> BB6646 [tailport=s, headport=n, color=gray]
BB6643 [shape=record label="{19812: call-finishNode [v25,v26,v27,v28,v24]}" ] 
BB6643 -> BB6644 [tailport=s, headport=n, headlabel="      6644"]
BB6643 -> BB6646 [tailport=s, headport=n, color=gray]
BB6644 [shape=record label="{19813: write-variable[v24,'expr']*}" ] 
BB6644 -> BB6630 [tailport=s, headport=n]
BB6645 [shape=record label="{19814: return[v1]}" ] 
BB6646 [shape=record label="{19815: exceptional-return}" ] 
//#$~ 6461
}
