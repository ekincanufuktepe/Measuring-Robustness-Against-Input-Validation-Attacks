digraph {
rankdir="TD"
BB_entry1299[shape=none,label=""];
BB_entry1299 -> BB15331 [tailport=s, headport=n, headlabel="    15331"]
BB15331 [shape=record label="{52846: constant[undefined,v1]|52847: vardecl['ret']|52848: vardecl['loc']|52849: vardecl['key']}" ] 
BB15331 -> BB15332 [tailport=s, headport=n, headlabel="      15332"]
BB15332 [shape=record label="{52850: typeof['obj',v3]|52851: constant[\"object\",v4]|52852: !==[v3,v4,v2]|52853: if[v2](true-block:15334,false-block:15333)}" ] 
BB15332 -> BB15334 [tailport=s, headport=n, headlabel="      15334"]
BB15332 -> BB15333 [tailport=s, headport=n, headlabel="      15333"]
BB15332 -> BB15392 [tailport=s, headport=n, color=gray, headlabel="      15392"]
BB15333 [shape=record label="{52854: read-variable['obj',v3,-]|52855: constant[null,v4]|52856: ===[v3,v4,v2]}" ] 
BB15333 -> BB15334 [tailport=s, headport=n]
BB15333 -> BB15392 [tailport=s, headport=n, color=gray]
BB15334 [shape=record label="{52857: if[v2](true-block:15335,false-block:15336)}" ] 
BB15334 -> BB15335 [tailport=s, headport=n, headlabel="      15335"]
BB15334 -> BB15336 [tailport=s, headport=n, headlabel="      15336"]
BB15335 [shape=record label="{52858: read-variable['obj',v1,-]}" ] 
BB15335 -> BB15391 [tailport=s, headport=n, headlabel="      15391"]
BB15335 -> BB15392 [tailport=s, headport=n, color=gray]
BB15336 [shape=record label="{52859: read-variable['deep',v3,-]|52860: if[v3](true-block:15337,false-block:15340)}" ] 
BB15336 -> BB15340 [tailport=s, headport=n, headlabel="      15340"]
BB15336 -> BB15337 [tailport=s, headport=n, headlabel="      15337"]
BB15336 -> BB15392 [tailport=s, headport=n, color=gray]
BB15337 [shape=record label="{52861: read-variable['indexOf',v7,v6]|52862: read-variable['seen',v8,-]|52863: read-variable['obj',v9,-]}" ] 
BB15337 -> BB15338 [tailport=s, headport=n, headlabel="      15338"]
BB15337 -> BB15392 [tailport=s, headport=n, color=gray]
BB15338 [shape=record label="{52864: call-indexOf [v6,v7,v8,v9,v4]}" ] 
BB15338 -> BB15339 [tailport=s, headport=n, headlabel="      15339"]
BB15338 -> BB15392 [tailport=s, headport=n, color=gray]
BB15339 [shape=record label="{52865: write-variable[v4,'loc']|52866: constant[0.0,v5]|52867: \>=[v4,v5,v3]}" ] 
BB15339 -> BB15340 [tailport=s, headport=n]
BB15339 -> BB15392 [tailport=s, headport=n, color=gray]
BB15340 [shape=record label="{52868: if[v3](true-block:15341,false-block:15342)}" ] 
BB15340 -> BB15341 [tailport=s, headport=n, headlabel="      15341"]
BB15340 -> BB15342 [tailport=s, headport=n, headlabel="      15342"]
BB15341 [shape=record label="{52869: read-variable['copies',v4,-]|52870: read-variable['loc',v5,-]|52871: read-property[v4,v5,v1]|52872: \<variable-non-null-undef\>['copies']}" ] 
BB15341 -> BB15391 [tailport=s, headport=n]
BB15341 -> BB15392 [tailport=s, headport=n, color=gray]
BB15342 [shape=record label="{52873: read-variable['Ember',v5,-]|52874: read-property[v5,'assert',-]|52875: \<variable-non-null-undef\>['Ember']|52876: constant[\"Cannot clone an Ember.Object that does not implement Ember.Copyable\",v6]|52877: read-variable['obj',v9,-]|52878: read-variable['EmberObject',v10,-]|52879: instanceof[v9,v10,v8]|52880: ![v8,v7]|52881: if[v7](true-block:15346,false-block:15343)}" ] 
BB15342 -> BB15346 [tailport=s, headport=n, headlabel="      15346"]
BB15342 -> BB15343 [tailport=s, headport=n, headlabel="      15343"]
BB15342 -> BB15392 [tailport=s, headport=n, color=gray]
BB15343 [shape=record label="{52882: read-variable['Copyable',v7,-]|52883: if[v7](true-block:15344,false-block:15346)}" ] 
BB15343 -> BB15346 [tailport=s, headport=n]
BB15343 -> BB15344 [tailport=s, headport=n, headlabel="      15344"]
BB15343 -> BB15392 [tailport=s, headport=n, color=gray]
BB15344 [shape=record label="{52884: read-variable['Copyable',v9,-]|52885: read-property[v9,'detect',-]|52886: \<variable-non-null-undef\>['Copyable']|52887: read-variable['obj',v10,-]}" ] 
BB15344 -> BB15345 [tailport=s, headport=n, headlabel="      15345"]
BB15344 -> BB15392 [tailport=s, headport=n, color=gray]
BB15345 [shape=record label="{52888: call-Copyable.detect [v9,'detect',v10,v7]}" ] 
BB15345 -> BB15346 [tailport=s, headport=n]
BB15345 -> BB15392 [tailport=s, headport=n, color=gray]
BB15346 [shape=record label="{52889: call-Ember.assert [v5,'assert',v6,v7,-]*}" ] 
BB15346 -> BB15347 [tailport=s, headport=n, headlabel="      15347"]
BB15346 -> BB15392 [tailport=s, headport=n, color=gray]
BB15347 [shape=record label="{52890: read-variable['typeOf',v12,v11]|52891: read-variable['obj',v13,-]}" ] 
BB15347 -> BB15348 [tailport=s, headport=n, headlabel="      15348"]
BB15347 -> BB15392 [tailport=s, headport=n, color=gray]
BB15348 [shape=record label="{52892: call-typeOf [v11,v12,v13,v9]}" ] 
BB15348 -> BB15349 [tailport=s, headport=n, headlabel="      15349"]
BB15348 -> BB15392 [tailport=s, headport=n, color=gray]
BB15349 [shape=record label="{52893: constant[\"array\",v10]|52894: ===[v9,v10,v8]|52895: if[v8](true-block:15350,false-block:15351)}" ] 
BB15349 -> BB15350 [tailport=s, headport=n, headlabel="      15350"]
BB15349 -> BB15351 [tailport=s, headport=n, headlabel="      15351"]
BB15349 -> BB15392 [tailport=s, headport=n, color=gray]
BB15350 [shape=record label="{52896: read-variable['obj',v16,-]|52897: read-property[v16,'slice',-]|52898: \<variable-non-null-undef\>['obj']}" ] 
BB15350 -> BB15352 [tailport=s, headport=n, headlabel="      15352"]
BB15350 -> BB15392 [tailport=s, headport=n, color=gray]
BB15351 [shape=record label="{52899: read-variable['Copyable',v14,-]|52900: if[v14](true-block:15359,false-block:15361)}" ] 
BB15351 -> BB15361 [tailport=s, headport=n, headlabel="      15361"]
BB15351 -> BB15359 [tailport=s, headport=n, headlabel="      15359"]
BB15351 -> BB15392 [tailport=s, headport=n, color=gray]
BB15352 [shape=record label="{52901: call-obj.slice [v16,'slice',v14]}" ] 
BB15352 -> BB15353 [tailport=s, headport=n, headlabel="      15353"]
BB15352 -> BB15392 [tailport=s, headport=n, color=gray]
BB15353 [shape=record label="{52902: write-variable[v14,'ret']*|52903: read-variable['deep',v17,-]|52904: if[v17](true-block:15354,false-block:15385)}" ] 
BB15353 -> BB15354 [tailport=s, headport=n, headlabel="      15354"]
BB15353 -> BB15385 [tailport=s, headport=n, headlabel="      15385"]
BB15353 -> BB15392 [tailport=s, headport=n, color=gray]
BB15354 [shape=record label="{52905: read-variable['ret',v19,-]|52906: read-property[v19,'length',v18]|52907: \<variable-non-null-undef\>['ret']|52908: write-variable[v18,'loc']*}" ] 
BB15354 -> BB15355 [tailport=s, headport=n, headlabel="      15355"]
BB15354 -> BB15392 [tailport=s, headport=n, color=gray]
BB15355 [shape=record label="{52909: constant[1.0,v23]|52910: read-variable['loc',v24,-]|52911: +[v24,v25]|52912: -[v25,v23,v21]|52913: write-variable[v21,'loc']|52914: constant[0.0,v22]|52915: \>=[v21,v22,v20]|52916: if[v20](true-block:15356,false-block:15385)}" ] 
BB15355 -> BB15356 [tailport=s, headport=n, headlabel="      15356"]
BB15355 -> BB15385 [tailport=s, headport=n]
BB15355 -> BB15392 [tailport=s, headport=n, color=gray]
BB15356 [shape=record label="{52917: read-variable['ret',v27,-]|52918: read-variable['loc',v28,-]|52919: read-variable['_copy',v30,v29]|52920: read-variable['ret',v32,-]|52921: read-variable['loc',v33,-]|52922: read-property[v32,v33,v31]|52923: \<variable-non-null-undef\>['ret']|52924: read-variable['deep',v34,-]|52925: read-variable['seen',v35,-]|52926: read-variable['copies',v36,-]}" ] 
BB15356 -> BB15357 [tailport=s, headport=n, headlabel="      15357"]
BB15356 -> BB15392 [tailport=s, headport=n, color=gray]
BB15357 [shape=record label="{52927: call-_copy [v29,v30,v31,v34,v35,v36,v26]}" ] 
BB15357 -> BB15358 [tailport=s, headport=n, headlabel="      15358"]
BB15357 -> BB15392 [tailport=s, headport=n, color=gray]
BB15358 [shape=record label="{52928: write-property[v27,v28,v26]|52929: \<variable-non-null-undef\>['ret']*}" ] 
BB15358 -> BB15355 [tailport=s, headport=n]
BB15358 -> BB15392 [tailport=s, headport=n, color=gray]
BB15359 [shape=record label="{52930: read-variable['Copyable',v16,-]|52931: read-property[v16,'detect',-]|52932: \<variable-non-null-undef\>['Copyable']|52933: read-variable['obj',v17,-]}" ] 
BB15359 -> BB15360 [tailport=s, headport=n, headlabel="      15360"]
BB15359 -> BB15392 [tailport=s, headport=n, color=gray]
BB15360 [shape=record label="{52934: call-Copyable.detect [v16,'detect',v17,v14]}" ] 
BB15360 -> BB15361 [tailport=s, headport=n]
BB15360 -> BB15392 [tailport=s, headport=n, color=gray]
BB15361 [shape=record label="{52935: if[v14](true-block:15362,false-block:15363)}" ] 
BB15361 -> BB15362 [tailport=s, headport=n, headlabel="      15362"]
BB15361 -> BB15363 [tailport=s, headport=n, headlabel="      15363"]
BB15362 [shape=record label="{52936: read-variable['obj',v17,-]|52937: read-property[v17,'copy',-]|52938: \<variable-non-null-undef\>['obj']|52939: read-variable['deep',v18,-]|52940: read-variable['seen',v19,-]|52941: read-variable['copies',v20,-]}" ] 
BB15362 -> BB15364 [tailport=s, headport=n, headlabel="      15364"]
BB15362 -> BB15392 [tailport=s, headport=n, color=gray]
BB15363 [shape=record label="{52942: read-variable['obj',v16,-]|52943: read-variable['Date',v17,-]|52944: instanceof[v16,v17,v15]|52945: if[v15](true-block:15366,false-block:15367)}" ] 
BB15363 -> BB15366 [tailport=s, headport=n, headlabel="      15366"]
BB15363 -> BB15367 [tailport=s, headport=n, headlabel="      15367"]
BB15363 -> BB15392 [tailport=s, headport=n, color=gray]
BB15364 [shape=record label="{52946: call-obj.copy [v17,'copy',v18,v19,v20,v15]}" ] 
BB15364 -> BB15365 [tailport=s, headport=n, headlabel="      15365"]
BB15364 -> BB15392 [tailport=s, headport=n, color=gray]
BB15365 [shape=record label="{52947: write-variable[v15,'ret']*}" ] 
BB15365 -> BB15385 [tailport=s, headport=n]
BB15366 [shape=record label="{52948: read-variable['Date',v19,-]|52949: read-variable['obj',v22,-]|52950: read-property[v22,'getTime',-]|52951: \<variable-non-null-undef\>['obj']}" ] 
BB15366 -> BB15368 [tailport=s, headport=n, headlabel="      15368"]
BB15366 -> BB15392 [tailport=s, headport=n, color=gray]
BB15367 [shape=record label="{52952: new[v18]|52953: write-variable[v18,'ret']*|52954: read-variable['obj',v20,-]}" ] 
BB15367 -> BB15371 [tailport=s, headport=n, headlabel="      15371"]
BB15367 -> BB15392 [tailport=s, headport=n, color=gray]
BB15368 [shape=record label="{52955: call-obj.getTime [v22,'getTime',v20]}" ] 
BB15368 -> BB15369 [tailport=s, headport=n, headlabel="      15369"]
BB15368 -> BB15392 [tailport=s, headport=n, color=gray]
BB15369 [shape=record label="{52956: construct [-,v19,v20,v18]}" ] 
BB15369 -> BB15370 [tailport=s, headport=n, headlabel="      15370"]
BB15369 -> BB15392 [tailport=s, headport=n, color=gray]
BB15370 [shape=record label="{52957: write-variable[v18,'ret']*}" ] 
BB15370 -> BB15385 [tailport=s, headport=n]
BB15371 [shape=record label="{52958: begin-for-in[v20,v21]}" ] 
BB15371 -> BB15372 [tailport=s, headport=n, headlabel="      15372"]
BB15371 -> BB15392 [tailport=s, headport=n, color=gray]
BB15372 [shape=record label="{52959: has-next[v21,v22]|52960: if[v22](true-block:15373,false-block:15385)}" ] 
BB15372 -> BB15373 [tailport=s, headport=n, headlabel="      15373"]
BB15372 -> BB15385 [tailport=s, headport=n]
BB15373 [shape=record label="{52961: next-property[v21,v23]|52962: write-variable[v23,'key']|52963: read-variable['Object',v29,-]|52964: read-property[v29,'prototype',v28]|52965: \<variable-non-null-undef\>['Object']|52966: read-property[v28,'hasOwnProperty',v27]|52967: \<property-non-null-undef\>[v29,'prototype']|52968: read-property[v27,'call',-]|52969: \<property-non-null-undef\>[v28,'hasOwnProperty']|52970: read-variable['obj',v30,-]|52971: read-variable['key',v31,-]}" ] 
BB15373 -> BB15374 [tailport=s, headport=n, headlabel="      15374"]
BB15373 -> BB15392 [tailport=s, headport=n, color=gray]
BB15374 [shape=record label="{52972: call-Object.prototype.hasOwnProperty.call [v27,'call',v30,v31,v25]}" ] 
BB15374 -> BB15375 [tailport=s, headport=n, headlabel="      15375"]
BB15374 -> BB15392 [tailport=s, headport=n, color=gray]
BB15375 [shape=record label="{52973: ![v25,v24]|52974: if[v24](true-block:15384,false-block:15376)}" ] 
BB15375 -> BB15384 [tailport=s, headport=n, headlabel="      15384"]
BB15375 -> BB15376 [tailport=s, headport=n, headlabel="      15376"]
BB15375 -> BB15392 [tailport=s, headport=n, color=gray]
BB15376 [shape=record label="{52975: read-variable['key',v36,-]|52976: read-property[v36,'substring',-]|52977: \<variable-non-null-undef\>['key']|52978: constant[0.0,v37]|52979: constant[2.0,v38]}" ] 
BB15376 -> BB15377 [tailport=s, headport=n, headlabel="      15377"]
BB15376 -> BB15392 [tailport=s, headport=n, color=gray]
BB15377 [shape=record label="{52980: call-key.substring [v36,'substring',v37,v38,v33]}" ] 
BB15377 -> BB15378 [tailport=s, headport=n, headlabel="      15378"]
BB15377 -> BB15392 [tailport=s, headport=n, color=gray]
BB15378 [shape=record label="{52981: constant[\"__\",v34]|52982: ===[v33,v34,v32]|52983: if[v32](true-block:15384,false-block:15379)}" ] 
BB15378 -> BB15384 [tailport=s, headport=n]
BB15378 -> BB15379 [tailport=s, headport=n, headlabel="      15379"]
BB15378 -> BB15392 [tailport=s, headport=n, color=gray]
BB15379 [shape=record label="{52984: read-variable['ret',v40,-]|52985: read-variable['key',v41,-]|52986: read-variable['deep',v42,-]|52987: if[v42](true-block:15380,false-block:15381)}" ] 
BB15379 -> BB15380 [tailport=s, headport=n, headlabel="      15380"]
BB15379 -> BB15381 [tailport=s, headport=n, headlabel="      15381"]
BB15379 -> BB15392 [tailport=s, headport=n, color=gray]
BB15380 [shape=record label="{52988: read-variable['_copy',v44,v43]|52989: read-variable['obj',v46,-]|52990: read-variable['key',v47,-]|52991: read-property[v46,v47,v45]|52992: \<variable-non-null-undef\>['obj']|52993: read-variable['deep',v48,-]|52994: read-variable['seen',v49,-]|52995: read-variable['copies',v50,-]}" ] 
BB15380 -> BB15382 [tailport=s, headport=n, headlabel="      15382"]
BB15380 -> BB15392 [tailport=s, headport=n, color=gray]
BB15381 [shape=record label="{52996: read-variable['obj',v43,-]|52997: read-variable['key',v44,-]|52998: read-property[v43,v44,v39]|52999: \<variable-non-null-undef\>['obj']}" ] 
BB15381 -> BB15383 [tailport=s, headport=n, headlabel="      15383"]
BB15381 -> BB15392 [tailport=s, headport=n, color=gray]
BB15382 [shape=record label="{53000: call-_copy [v43,v44,v45,v48,v49,v50,v39]}" ] 
BB15382 -> BB15383 [tailport=s, headport=n]
BB15382 -> BB15392 [tailport=s, headport=n, color=gray]
BB15383 [shape=record label="{53001: write-property[v40,v41,v39]|53002: \<variable-non-null-undef\>['ret']*}" ] 
BB15383 -> BB15384 [tailport=s, headport=n]
BB15383 -> BB15392 [tailport=s, headport=n, color=gray]
BB15384 [shape=record label="{53003: end-for-in(begin-node:52958)}" ] 
BB15384 -> BB15372 [tailport=s, headport=n]
BB15385 [shape=record label="{53004: read-variable['deep',v14,-]|53005: if[v14](true-block:15386,false-block:15390)}" ] 
BB15385 -> BB15386 [tailport=s, headport=n, headlabel="      15386"]
BB15385 -> BB15390 [tailport=s, headport=n, headlabel="      15390"]
BB15385 -> BB15392 [tailport=s, headport=n, color=gray]
BB15386 [shape=record label="{53006: read-variable['seen',v16,-]|53007: read-property[v16,'push',-]|53008: \<variable-non-null-undef\>['seen']|53009: read-variable['obj',v17,-]}" ] 
BB15386 -> BB15387 [tailport=s, headport=n, headlabel="      15387"]
BB15386 -> BB15392 [tailport=s, headport=n, color=gray]
BB15387 [shape=record label="{53010: call-seen.push [v16,'push',v17,-]*}" ] 
BB15387 -> BB15388 [tailport=s, headport=n, headlabel="      15388"]
BB15387 -> BB15392 [tailport=s, headport=n, color=gray]
BB15388 [shape=record label="{53011: read-variable['copies',v19,-]|53012: read-property[v19,'push',-]|53013: \<variable-non-null-undef\>['copies']|53014: read-variable['ret',v20,-]}" ] 
BB15388 -> BB15389 [tailport=s, headport=n, headlabel="      15389"]
BB15388 -> BB15392 [tailport=s, headport=n, color=gray]
BB15389 [shape=record label="{53015: call-copies.push [v19,'push',v20,-]*}" ] 
BB15389 -> BB15390 [tailport=s, headport=n]
BB15389 -> BB15392 [tailport=s, headport=n, color=gray]
BB15390 [shape=record label="{53016: read-variable['ret',v1,-]}" ] 
BB15390 -> BB15391 [tailport=s, headport=n]
BB15390 -> BB15392 [tailport=s, headport=n, color=gray]
BB15391 [shape=record label="{53017: return[v1]}" ] 
BB15392 [shape=record label="{53018: exceptional-return}" ] 
//#$~ 28313
}
