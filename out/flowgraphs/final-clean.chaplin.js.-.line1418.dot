digraph {
rankdir="TD"
BB_entry129[shape=none,label=""];
BB_entry129 -> BB1546 [tailport=s, headport=n, headlabel="    1546"]
BB1546 [shape=record label="{5121: constant[undefined,v1]|5122: vardecl['data']|5123: vardecl['source']}" ] 
BB1546 -> BB1547 [tailport=s, headport=n, headlabel="      1547"]
BB1547 [shape=record label="{5124: read-variable['this',v4,-]|5125: read-property[v4,'model',v3]|5126: if[v3](true-block:1548,false-block:1549)}" ] 
BB1547 -> BB1548 [tailport=s, headport=n, headlabel="      1548"]
BB1547 -> BB1549 [tailport=s, headport=n, headlabel="      1549"]
BB1547 -> BB1566 [tailport=s, headport=n, color=gray, headlabel="      1566"]
BB1548 [shape=record label="{5127: read-variable['utils',v6,-]|5128: read-property[v6,'serialize',-]|5129: \<variable-non-null-undef\>['utils']|5130: read-variable['this',v8,-]|5131: read-property[v8,'model',v7]}" ] 
BB1548 -> BB1550 [tailport=s, headport=n, headlabel="      1550"]
BB1548 -> BB1566 [tailport=s, headport=n, color=gray]
BB1549 [shape=record label="{5132: read-variable['this',v6,-]|5133: read-property[v6,'collection',v5]|5134: if[v5](true-block:1551,false-block:1552)}" ] 
BB1549 -> BB1551 [tailport=s, headport=n, headlabel="      1551"]
BB1549 -> BB1552 [tailport=s, headport=n, headlabel="      1552"]
BB1549 -> BB1566 [tailport=s, headport=n, color=gray]
BB1550 [shape=record label="{5135: call-utils.serialize [v6,'serialize',v7,v2]}" ] 
BB1550 -> BB1555 [tailport=s, headport=n, headlabel="      1555"]
BB1550 -> BB1566 [tailport=s, headport=n, color=gray]
BB1551 [shape=record label="{5136: new[v2]|5137: read-variable['utils',v9,-]|5138: read-property[v9,'serialize',-]|5139: \<variable-non-null-undef\>['utils']|5140: read-variable['this',v11,-]|5141: read-property[v11,'collection',v10]}" ] 
BB1551 -> BB1553 [tailport=s, headport=n, headlabel="      1553"]
BB1551 -> BB1566 [tailport=s, headport=n, color=gray]
BB1552 [shape=record label="{5142: new[v2]}" ] 
BB1552 -> BB1555 [tailport=s, headport=n]
BB1553 [shape=record label="{5143: call-utils.serialize [v9,'serialize',v10,v7]}" ] 
BB1553 -> BB1554 [tailport=s, headport=n, headlabel="      1554"]
BB1553 -> BB1566 [tailport=s, headport=n, color=gray]
BB1554 [shape=record label="{5144: write-property[v2,'items',v7]|5145: read-variable['this',v14,-]|5146: read-property[v14,'collection',v13]|5147: read-property[v13,'length',v12]|5148: \<property-non-null-undef\>[v14,'collection']|5149: write-property[v2,'length',v12]}" ] 
BB1554 -> BB1555 [tailport=s, headport=n]
BB1554 -> BB1566 [tailport=s, headport=n, color=gray]
BB1555 [shape=record label="{5150: write-variable[v2,'data']*|5151: read-variable['this',v6,-]|5152: read-property[v6,'model',v5]|5153: if[v5](true-block:1557,false-block:1556)}" ] 
BB1555 -> BB1557 [tailport=s, headport=n, headlabel="      1557"]
BB1555 -> BB1556 [tailport=s, headport=n, headlabel="      1556"]
BB1555 -> BB1566 [tailport=s, headport=n, color=gray]
BB1556 [shape=record label="{5154: read-variable['this',v6,-]|5155: read-property[v6,'collection',v5]}" ] 
BB1556 -> BB1557 [tailport=s, headport=n]
BB1556 -> BB1566 [tailport=s, headport=n, color=gray]
BB1557 [shape=record label="{5156: write-variable[v5,'source']*|5157: read-variable['source',v6,-]|5158: if[v6](true-block:1558,false-block:1564)}" ] 
BB1557 -> BB1558 [tailport=s, headport=n, headlabel="      1558"]
BB1557 -> BB1564 [tailport=s, headport=n, headlabel="      1564"]
BB1557 -> BB1566 [tailport=s, headport=n, color=gray]
BB1558 [shape=record label="{5159: read-variable['source',v11,-]|5160: read-property[v11,'isSynced',v10]|5161: \<variable-non-null-undef\>['source']|5162: typeof[v10,v8]|5163: constant[\"function\",v9]|5164: ===[v8,v9,v7]|5165: if[v7](true-block:1559,false-block:1560)}" ] 
BB1558 -> BB1560 [tailport=s, headport=n, headlabel="      1560"]
BB1558 -> BB1559 [tailport=s, headport=n, headlabel="      1559"]
BB1558 -> BB1566 [tailport=s, headport=n, color=gray]
BB1559 [shape=record label="{5166: constant[\"synced\",v13]|5167: read-variable['data',v14,-]|5168: in[v13,v14,v12]|5169: ![v12,v7]}" ] 
BB1559 -> BB1560 [tailport=s, headport=n]
BB1559 -> BB1566 [tailport=s, headport=n, color=gray]
BB1560 [shape=record label="{5170: if[v7](true-block:1561,false-block:1564)}" ] 
BB1560 -> BB1561 [tailport=s, headport=n, headlabel="      1561"]
BB1560 -> BB1564 [tailport=s, headport=n]
BB1561 [shape=record label="{5171: read-variable['data',v13,-]|5172: read-variable['source',v15,-]|5173: read-property[v15,'isSynced',-]|5174: \<variable-non-null-undef\>['source']}" ] 
BB1561 -> BB1562 [tailport=s, headport=n, headlabel="      1562"]
BB1561 -> BB1566 [tailport=s, headport=n, color=gray]
BB1562 [shape=record label="{5175: call-source.isSynced [v15,'isSynced',v12]}" ] 
BB1562 -> BB1563 [tailport=s, headport=n, headlabel="      1563"]
BB1562 -> BB1566 [tailport=s, headport=n, color=gray]
BB1563 [shape=record label="{5176: write-property[v13,'synced',v12]|5177: \<variable-non-null-undef\>['data']*}" ] 
BB1563 -> BB1564 [tailport=s, headport=n]
BB1563 -> BB1566 [tailport=s, headport=n, color=gray]
BB1564 [shape=record label="{5178: read-variable['data',v1,-]}" ] 
BB1564 -> BB1565 [tailport=s, headport=n, headlabel="      1565"]
BB1564 -> BB1566 [tailport=s, headport=n, color=gray]
BB1565 [shape=record label="{5179: return[v1]}" ] 
BB1566 [shape=record label="{5180: exceptional-return}" ] 
//#$~ 1430
}
