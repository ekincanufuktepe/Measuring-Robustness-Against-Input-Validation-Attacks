digraph {
rankdir="TD"
BB_entry2472[shape=none,label=""];
BB_entry2472 -> BB28209 [tailport=s, headport=n, headlabel="    28209"]
BB28209 [shape=record label="{93895: constant[undefined,v1]|93896: vardecl['then']}" ] 
BB28209 -> BB28210 [tailport=s, headport=n, headlabel="      28210"]
BB28210 [shape=record label="{93897: read-variable['maybeThenable',v5,-]|93898: read-property[v5,'constructor',v3]|93899: \<variable-non-null-undef\>['maybeThenable']|93900: read-variable['promise',v6,-]|93901: read-property[v6,'constructor',v4]|93902: \<variable-non-null-undef\>['promise']|93903: ===[v3,v4,v2]|93904: if[v2](true-block:28211,false-block:28212)}" ] 
BB28210 -> BB28211 [tailport=s, headport=n, headlabel="      28211"]
BB28210 -> BB28212 [tailport=s, headport=n, headlabel="      28212"]
BB28210 -> BB28229 [tailport=s, headport=n, color=gray, headlabel="      28229"]
BB28211 [shape=record label="{93905: read-variable['handleOwnThenable',v8,v7]|93906: read-variable['promise',v9,-]|93907: read-variable['maybeThenable',v10,-]}" ] 
BB28211 -> BB28213 [tailport=s, headport=n, headlabel="      28213"]
BB28211 -> BB28229 [tailport=s, headport=n, color=gray]
BB28212 [shape=record label="{93908: read-variable['getThen',v9,v8]|93909: read-variable['maybeThenable',v10,-]}" ] 
BB28212 -> BB28214 [tailport=s, headport=n, headlabel="      28214"]
BB28212 -> BB28229 [tailport=s, headport=n, color=gray]
BB28213 [shape=record label="{93910: call-handleOwnThenable [v7,v8,v9,v10,-]*}" ] 
BB28213 -> BB28228 [tailport=s, headport=n, headlabel="      28228"]
BB28213 -> BB28229 [tailport=s, headport=n, color=gray]
BB28214 [shape=record label="{93911: call-getThen [v8,v9,v10,v7]}" ] 
BB28214 -> BB28215 [tailport=s, headport=n, headlabel="      28215"]
BB28214 -> BB28229 [tailport=s, headport=n, color=gray]
BB28215 [shape=record label="{93912: write-variable[v7,'then']*|93913: read-variable['then',v12,-]|93914: read-variable['GET_THEN_ERROR',v13,-]|93915: ===[v12,v13,v11]|93916: if[v11](true-block:28216,false-block:28217)}" ] 
BB28215 -> BB28216 [tailport=s, headport=n, headlabel="      28216"]
BB28215 -> BB28217 [tailport=s, headport=n, headlabel="      28217"]
BB28215 -> BB28229 [tailport=s, headport=n, color=gray]
BB28216 [shape=record label="{93917: read-variable['reject',v15,v14]|93918: read-variable['promise',v16,-]|93919: read-variable['GET_THEN_ERROR',v18,-]|93920: read-property[v18,'error',v17]|93921: \<variable-non-null-undef\>['GET_THEN_ERROR']}" ] 
BB28216 -> BB28218 [tailport=s, headport=n, headlabel="      28218"]
BB28216 -> BB28229 [tailport=s, headport=n, color=gray]
BB28217 [shape=record label="{93922: read-variable['then',v15,-]|93923: read-variable['undefined',v16,-]|93924: ===[v15,v16,v14]|93925: if[v14](true-block:28219,false-block:28220)}" ] 
BB28217 -> BB28219 [tailport=s, headport=n, headlabel="      28219"]
BB28217 -> BB28220 [tailport=s, headport=n, headlabel="      28220"]
BB28217 -> BB28229 [tailport=s, headport=n, color=gray]
BB28218 [shape=record label="{93926: call-reject [v14,v15,v16,v17,-]*}" ] 
BB28218 -> BB28228 [tailport=s, headport=n]
BB28218 -> BB28229 [tailport=s, headport=n, color=gray]
BB28219 [shape=record label="{93927: read-variable['fulfill',v18,v17]|93928: read-variable['promise',v19,-]|93929: read-variable['maybeThenable',v20,-]}" ] 
BB28219 -> BB28221 [tailport=s, headport=n, headlabel="      28221"]
BB28219 -> BB28229 [tailport=s, headport=n, color=gray]
BB28220 [shape=record label="{93930: read-variable['isFunction',v19,v18]|93931: read-variable['then',v20,-]}" ] 
BB28220 -> BB28222 [tailport=s, headport=n, headlabel="      28222"]
BB28220 -> BB28229 [tailport=s, headport=n, color=gray]
BB28221 [shape=record label="{93932: call-fulfill [v17,v18,v19,v20,-]*}" ] 
BB28221 -> BB28228 [tailport=s, headport=n]
BB28221 -> BB28229 [tailport=s, headport=n, color=gray]
BB28222 [shape=record label="{93933: call-isFunction [v18,v19,v20,v17]}" ] 
BB28222 -> BB28223 [tailport=s, headport=n, headlabel="      28223"]
BB28222 -> BB28229 [tailport=s, headport=n, color=gray]
BB28223 [shape=record label="{93934: if[v17](true-block:28224,false-block:28225)}" ] 
BB28223 -> BB28224 [tailport=s, headport=n, headlabel="      28224"]
BB28223 -> BB28225 [tailport=s, headport=n, headlabel="      28225"]
BB28224 [shape=record label="{93935: read-variable['handleForeignThenable',v22,v21]|93936: read-variable['promise',v23,-]|93937: read-variable['maybeThenable',v24,-]|93938: read-variable['then',v25,-]}" ] 
BB28224 -> BB28226 [tailport=s, headport=n, headlabel="      28226"]
BB28224 -> BB28229 [tailport=s, headport=n, color=gray]
BB28225 [shape=record label="{93939: read-variable['fulfill',v22,v21]|93940: read-variable['promise',v23,-]|93941: read-variable['maybeThenable',v24,-]}" ] 
BB28225 -> BB28227 [tailport=s, headport=n, headlabel="      28227"]
BB28225 -> BB28229 [tailport=s, headport=n, color=gray]
BB28226 [shape=record label="{93942: call-handleForeignThenable [v21,v22,v23,v24,v25,-]*}" ] 
BB28226 -> BB28228 [tailport=s, headport=n]
BB28226 -> BB28229 [tailport=s, headport=n, color=gray]
BB28227 [shape=record label="{93943: call-fulfill [v21,v22,v23,v24,-]*}" ] 
BB28227 -> BB28228 [tailport=s, headport=n]
BB28227 -> BB28229 [tailport=s, headport=n, color=gray]
BB28228 [shape=record label="{93944: return[v1]}" ] 
BB28229 [shape=record label="{93945: exceptional-return}" ] 
//#$~ 50445
}
