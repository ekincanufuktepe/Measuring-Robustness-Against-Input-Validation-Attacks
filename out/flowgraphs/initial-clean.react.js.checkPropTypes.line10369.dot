digraph {
rankdir="TD"
BB_entry390[shape=none,label=""];
BB_entry390 -> BB5814 [tailport=s, headport=n, headlabel="    5814"]
BB5814 [shape=record label="{20249: constant[undefined,v1]|20250: vardecl['propName']|20251: vardecl['error']|20252: vardecl['addendum']}" ] 
BB5814 -> BB5815 [tailport=s, headport=n, headlabel="      5815"]
BB5815 [shape=record label="{20253: read-variable['propTypes',v3,-]}" ] 
BB5815 -> BB5816 [tailport=s, headport=n, headlabel="      5816"]
BB5815 -> BB5845 [tailport=s, headport=n, color=gray, headlabel="      5845"]
BB5816 [shape=record label="{20254: begin-for-in[v3,v4]}" ] 
BB5816 -> BB5817 [tailport=s, headport=n, headlabel="      5817"]
BB5816 -> BB5845 [tailport=s, headport=n, color=gray]
BB5817 [shape=record label="{20255: has-next[v4,v5]|20256: if[v5](true-block:5818,false-block:5844)}" ] 
BB5817 -> BB5818 [tailport=s, headport=n, headlabel="      5818"]
BB5817 -> BB5844 [tailport=s, headport=n, headlabel="      5844"]
BB5818 [shape=record label="{20257: next-property[v4,v6]|20258: write-variable[v6,'propName']|20259: read-variable['propTypes',v9,-]|20260: read-property[v9,'hasOwnProperty',-]|20261: \<variable-non-null-undef\>['propTypes']|20262: read-variable['propName',v10,-]}" ] 
BB5818 -> BB5819 [tailport=s, headport=n, headlabel="      5819"]
BB5818 -> BB5845 [tailport=s, headport=n, color=gray]
BB5819 [shape=record label="{20263: call-propTypes.hasOwnProperty [v9,'hasOwnProperty',v10,v7]}" ] 
BB5819 -> BB5820 [tailport=s, headport=n, headlabel="      5820"]
BB5819 -> BB5845 [tailport=s, headport=n, color=gray]
BB5820 [shape=record label="{20264: if[v7](true-block:5821,false-block:5843)}" ] 
BB5820 -> BB5821 [tailport=s, headport=n, headlabel="      5821"]
BB5820 -> BB5843 [tailport=s, headport=n, headlabel="      5843"]
BB5821 [shape=record label="{20265: constant[\"production\",v12]|20266: constant[\"development\",v13]|20267: !==[v12,v13,v11]|20268: if[v11](true-block:5822,false-block:5823)}" ] 
BB5821 -> BB5822 [tailport=s, headport=n, headlabel="      5822"]
BB5821 -> BB5823 [tailport=s, headport=n, headlabel="      5823"]
BB5821 -> BB5832 [tailport=s, headport=n, color=gray, headlabel="      5832"]
BB5822 [shape=record label="{20269: read-variable['invariant',v15,v14]|20270: read-variable['propTypes',v20,-]|20271: read-variable['propName',v21,-]|20272: read-property[v20,v21,v19]|20273: \<variable-non-null-undef\>['propTypes']|20274: typeof[v19,v17]|20275: constant[\"function\",v18]|20276: ===[v17,v18,v16]|20277: constant[\"%s: %s type `%s` is invalid; it must be a function, usually from \",v23]|20278: constant[\"React.PropTypes.\",v24]|20279: +[v23,v24,v22]|20280: read-variable['componentName',v25,-]|20281: if[v25](true-block:5825,false-block:5824)}" ] 
BB5822 -> BB5825 [tailport=s, headport=n, headlabel="      5825"]
BB5822 -> BB5824 [tailport=s, headport=n, headlabel="      5824"]
BB5822 -> BB5832 [tailport=s, headport=n, color=gray]
BB5823 [shape=record label="{20282: read-variable['invariant',v15,v14]|20283: read-variable['propTypes',v20,-]|20284: read-variable['propName',v21,-]|20285: read-property[v20,v21,v19]|20286: \<variable-non-null-undef\>['propTypes']|20287: typeof[v19,v17]|20288: constant[\"function\",v18]|20289: ===[v17,v18,v16]}" ] 
BB5823 -> BB5827 [tailport=s, headport=n, headlabel="      5827"]
BB5823 -> BB5832 [tailport=s, headport=n, color=gray]
BB5824 [shape=record label="{20290: constant[\"React class\",v25]}" ] 
BB5824 -> BB5825 [tailport=s, headport=n]
BB5825 [shape=record label="{20291: read-variable['ReactPropTypeLocationNames',v27,-]|20292: read-variable['location',v28,-]|20293: read-property[v27,v28,v26]|20294: \<variable-non-null-undef\>['ReactPropTypeLocationNames']|20295: read-variable['propName',v29,-]}" ] 
BB5825 -> BB5826 [tailport=s, headport=n, headlabel="      5826"]
BB5825 -> BB5832 [tailport=s, headport=n, color=gray]
BB5826 [shape=record label="{20296: call-invariant [v14,v15,v16,v22,v25,v26,v29,-]}" ] 
BB5826 -> BB5828 [tailport=s, headport=n, headlabel="      5828"]
BB5826 -> BB5832 [tailport=s, headport=n, color=gray]
BB5827 [shape=record label="{20297: call-invariant [v14,v15,v16,-]}" ] 
BB5827 -> BB5828 [tailport=s, headport=n]
BB5827 -> BB5832 [tailport=s, headport=n, color=gray]
BB5828 [shape=record label="{20298: read-variable['propTypes',v16,-]|20299: read-variable['propName',v17,-]|20300: read-property[v16,v17,-]|20301: \<variable-non-null-undef\>['propTypes']|20302: read-variable['props',v18,-]|20303: read-variable['propName',v19,-]|20304: read-variable['componentName',v20,-]|20305: read-variable['location',v21,-]}" ] 
BB5828 -> BB5829 [tailport=s, headport=n, headlabel="      5829"]
BB5828 -> BB5832 [tailport=s, headport=n, color=gray]
BB5829 [shape=record label="{20306: call-null [v16,[v17],v18,v19,v20,v21,v14]}" ] 
BB5829 -> BB5830 [tailport=s, headport=n, headlabel="      5830"]
BB5829 -> BB5832 [tailport=s, headport=n, color=gray]
BB5830 [shape=record label="{20307: write-variable[v14,'error']*}" ] 
BB5830 -> BB5831 [tailport=s, headport=n, headlabel="      5831"]
BB5831 [shape=record label="{20308: read-variable['error',v14,-]|20309: read-variable['Error',v15,-]|20310: instanceof[v14,v15,v13]|20311: if[v13](true-block:5835,false-block:5836)}" ] 
BB5831 -> BB5836 [tailport=s, headport=n, headlabel="      5836"]
BB5831 -> BB5835 [tailport=s, headport=n, headlabel="      5835"]
BB5831 -> BB5845 [tailport=s, headport=n, color=gray]
BB5832 [shape=record label="{20312: catch[ex,v11]|20313: begin-with[v11]}" ] 
BB5832 -> BB5833 [tailport=s, headport=n, headlabel="      5833"]
BB5832 -> BB5845 [tailport=s, headport=n, color=gray]
BB5833 [shape=record label="{20314: read-variable['ex',v13,v12]|20315: write-variable[v13,'error']*|20316: end-with}" ] 
BB5833 -> BB5831 [tailport=s, headport=n]
BB5833 -> BB5834 [tailport=s, headport=n, color=gray, headlabel="      5834"]
BB5834 [shape=record label="{20317: end-with}" ] 
BB5834 -> BB5845 [tailport=s, headport=n]
BB5835 [shape=record label="{20318: read-variable['error',v19,-]|20319: read-property[v19,'message',v17]|20320: \<variable-non-null-undef\>['error']|20321: read-variable['loggedTypeFailures',v18,-]|20322: in[v17,v18,v16]|20323: ![v16,v13]}" ] 
BB5835 -> BB5836 [tailport=s, headport=n]
BB5835 -> BB5845 [tailport=s, headport=n, color=gray]
BB5836 [shape=record label="{20324: if[v13](true-block:5837,false-block:5843)}" ] 
BB5836 -> BB5837 [tailport=s, headport=n, headlabel="      5837"]
BB5836 -> BB5843 [tailport=s, headport=n]
BB5837 [shape=record label="{20325: read-variable['loggedTypeFailures',v17,-]|20326: read-variable['error',v19,-]|20327: read-property[v19,'message',v18]|20328: \<variable-non-null-undef\>['error']|20329: constant[true,v16]|20330: write-property[v17,v18,v16]|20331: \<variable-non-null-undef\>['loggedTypeFailures']*|20332: read-variable['getDeclarationErrorAddendum',v22,v21]|20333: read-variable['this',v23,-]}" ] 
BB5837 -> BB5838 [tailport=s, headport=n, headlabel="      5838"]
BB5837 -> BB5845 [tailport=s, headport=n, color=gray]
BB5838 [shape=record label="{20334: call-getDeclarationErrorAddendum [v21,v22,v23,v20]}" ] 
BB5838 -> BB5839 [tailport=s, headport=n, headlabel="      5839"]
BB5838 -> BB5845 [tailport=s, headport=n, color=gray]
BB5839 [shape=record label="{20335: write-variable[v20,'addendum']*|20336: constant[\"production\",v25]|20337: constant[\"development\",v26]|20338: !==[v25,v26,v24]|20339: if[v24](true-block:5840,false-block:5841)}" ] 
BB5839 -> BB5840 [tailport=s, headport=n, headlabel="      5840"]
BB5839 -> BB5841 [tailport=s, headport=n, headlabel="      5841"]
BB5839 -> BB5845 [tailport=s, headport=n, color=gray]
BB5840 [shape=record label="{20340: read-variable['warning',v28,v27]|20341: constant[false,v29]|20342: constant[\"Failed propType: %s%s\",v30]|20343: read-variable['error',v32,-]|20344: read-property[v32,'message',v31]|20345: \<variable-non-null-undef\>['error']|20346: read-variable['addendum',v33,-]}" ] 
BB5840 -> BB5842 [tailport=s, headport=n, headlabel="      5842"]
BB5840 -> BB5845 [tailport=s, headport=n, color=gray]
BB5841 [shape=record label="{20347: constant[null,-]}" ] 
BB5841 -> BB5843 [tailport=s, headport=n]
BB5842 [shape=record label="{20348: call-warning [v27,v28,v29,v30,v31,v33,-]}" ] 
BB5842 -> BB5843 [tailport=s, headport=n]
BB5842 -> BB5845 [tailport=s, headport=n, color=gray]
BB5843 [shape=record label="{20349: end-for-in(begin-node:20254)}" ] 
BB5843 -> BB5817 [tailport=s, headport=n]
BB5844 [shape=record label="{20350: return[v1]}" ] 
BB5845 [shape=record label="{20351: exceptional-return}" ] 
//#$~ 10397
}
