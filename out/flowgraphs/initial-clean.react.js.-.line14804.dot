digraph {
rankdir="TD"
BB_entry619[shape=none,label=""];
BB_entry619 -> BB8625 [tailport=s, headport=n, headlabel="    8625"]
BB8625 [shape=record label="{28468: constant[undefined,v1]|28469: vardecl['CallbackQueue']|28470: vardecl['PooledClass']|28471: vardecl['ReactCurrentOwner']|28472: vardecl['ReactPerf']|28473: vardecl['ReactReconciler']|28474: vardecl['Transaction']|28475: vardecl['assign']|28476: vardecl['invariant']|28477: vardecl['warning']|28478: vardecl['dirtyComponents']|28479: vardecl['asapCallbackQueue']|28480: vardecl['asapEnqueued']|28481: vardecl['batchingStrategy']|28482: function-decl[function ensureInjected ( ),-]|28483: vardecl['NESTED_UPDATES']|28484: vardecl['UPDATE_QUEUEING']|28485: vardecl['TRANSACTION_WRAPPERS']|28486: function-decl[function ReactUpdatesFlushTransaction ( ),-]|28487: function-decl[function batchedUpdates ( callback a b c d ),-]|28488: function-decl[function mountOrderComparator ( c1 c2 ),-]|28489: function-decl[function runBatchedUpdates ( transaction ),-]|28490: vardecl['flushBatchedUpdates']|28491: function-decl[function enqueueUpdate ( component ),-]|28492: function-decl[function asap ( callback context ),-]|28493: vardecl['ReactUpdatesInjection']|28494: vardecl['ReactUpdates']}" ] 
BB8625 -> BB8626 [tailport=s, headport=n, headlabel="      8626"]
BB8626 [shape=record label="{28495: read-variable['_dereq_',v4,v3]|28496: constant[6.0,v5]}" ] 
BB8626 -> BB8627 [tailport=s, headport=n, headlabel="      8627"]
BB8626 -> BB8658 [tailport=s, headport=n, color=gray, headlabel="      8658"]
BB8627 [shape=record label="{28497: call-_dereq_ [v3,v4,v5,v2]}" ] 
BB8627 -> BB8628 [tailport=s, headport=n, headlabel="      8628"]
BB8627 -> BB8658 [tailport=s, headport=n, color=gray]
BB8628 [shape=record label="{28498: write-variable[v2,'CallbackQueue']*|28499: read-variable['_dereq_',v8,v7]|28500: constant[28.0,v9]}" ] 
BB8628 -> BB8629 [tailport=s, headport=n, headlabel="      8629"]
BB8628 -> BB8658 [tailport=s, headport=n, color=gray]
BB8629 [shape=record label="{28501: call-_dereq_ [v7,v8,v9,v6]}" ] 
BB8629 -> BB8630 [tailport=s, headport=n, headlabel="      8630"]
BB8629 -> BB8658 [tailport=s, headport=n, color=gray]
BB8630 [shape=record label="{28502: write-variable[v6,'PooledClass']*|28503: read-variable['_dereq_',v12,v11]|28504: constant[39.0,v13]}" ] 
BB8630 -> BB8631 [tailport=s, headport=n, headlabel="      8631"]
BB8630 -> BB8658 [tailport=s, headport=n, color=gray]
BB8631 [shape=record label="{28505: call-_dereq_ [v11,v12,v13,v10]}" ] 
BB8631 -> BB8632 [tailport=s, headport=n, headlabel="      8632"]
BB8631 -> BB8658 [tailport=s, headport=n, color=gray]
BB8632 [shape=record label="{28506: write-variable[v10,'ReactCurrentOwner']*|28507: read-variable['_dereq_',v16,v15]|28508: constant[75.0,v17]}" ] 
BB8632 -> BB8633 [tailport=s, headport=n, headlabel="      8633"]
BB8632 -> BB8658 [tailport=s, headport=n, color=gray]
BB8633 [shape=record label="{28509: call-_dereq_ [v15,v16,v17,v14]}" ] 
BB8633 -> BB8634 [tailport=s, headport=n, headlabel="      8634"]
BB8633 -> BB8658 [tailport=s, headport=n, color=gray]
BB8634 [shape=record label="{28510: write-variable[v14,'ReactPerf']*|28511: read-variable['_dereq_',v20,v19]|28512: constant[81.0,v21]}" ] 
BB8634 -> BB8635 [tailport=s, headport=n, headlabel="      8635"]
BB8634 -> BB8658 [tailport=s, headport=n, color=gray]
BB8635 [shape=record label="{28513: call-_dereq_ [v19,v20,v21,v18]}" ] 
BB8635 -> BB8636 [tailport=s, headport=n, headlabel="      8636"]
BB8635 -> BB8658 [tailport=s, headport=n, color=gray]
BB8636 [shape=record label="{28514: write-variable[v18,'ReactReconciler']*|28515: read-variable['_dereq_',v24,v23]|28516: constant[103.0,v25]}" ] 
BB8636 -> BB8637 [tailport=s, headport=n, headlabel="      8637"]
BB8636 -> BB8658 [tailport=s, headport=n, color=gray]
BB8637 [shape=record label="{28517: call-_dereq_ [v23,v24,v25,v22]}" ] 
BB8637 -> BB8638 [tailport=s, headport=n, headlabel="      8638"]
BB8637 -> BB8658 [tailport=s, headport=n, color=gray]
BB8638 [shape=record label="{28518: write-variable[v22,'Transaction']*|28519: read-variable['_dereq_',v28,v27]|28520: constant[27.0,v29]}" ] 
BB8638 -> BB8639 [tailport=s, headport=n, headlabel="      8639"]
BB8638 -> BB8658 [tailport=s, headport=n, color=gray]
BB8639 [shape=record label="{28521: call-_dereq_ [v27,v28,v29,v26]}" ] 
BB8639 -> BB8640 [tailport=s, headport=n, headlabel="      8640"]
BB8639 -> BB8658 [tailport=s, headport=n, color=gray]
BB8640 [shape=record label="{28522: write-variable[v26,'assign']*|28523: read-variable['_dereq_',v32,v31]|28524: constant[135.0,v33]}" ] 
BB8640 -> BB8641 [tailport=s, headport=n, headlabel="      8641"]
BB8640 -> BB8658 [tailport=s, headport=n, color=gray]
BB8641 [shape=record label="{28525: call-_dereq_ [v31,v32,v33,v30]}" ] 
BB8641 -> BB8642 [tailport=s, headport=n, headlabel="      8642"]
BB8641 -> BB8658 [tailport=s, headport=n, color=gray]
BB8642 [shape=record label="{28526: write-variable[v30,'invariant']*|28527: read-variable['_dereq_',v36,v35]|28528: constant[154.0,v37]}" ] 
BB8642 -> BB8643 [tailport=s, headport=n, headlabel="      8643"]
BB8642 -> BB8658 [tailport=s, headport=n, color=gray]
BB8643 [shape=record label="{28529: call-_dereq_ [v35,v36,v37,v34]}" ] 
BB8643 -> BB8644 [tailport=s, headport=n, headlabel="      8644"]
BB8643 -> BB8658 [tailport=s, headport=n, color=gray]
BB8644 [shape=record label="{28530: write-variable[v34,'warning']*|28531: read-variable['Array',v39,-]}" ] 
BB8644 -> BB8645 [tailport=s, headport=n, headlabel="      8645"]
BB8644 -> BB8658 [tailport=s, headport=n, color=gray]
BB8645 [shape=record label="{28532: construct [-,v39,v38]}" ] 
BB8645 -> BB8646 [tailport=s, headport=n, headlabel="      8646"]
BB8645 -> BB8658 [tailport=s, headport=n, color=gray]
BB8646 [shape=record label="{28533: write-variable[v38,'dirtyComponents']*|28534: read-variable['CallbackQueue',v42,-]|28535: read-property[v42,'getPooled',-]|28536: \<variable-non-null-undef\>['CallbackQueue']}" ] 
BB8646 -> BB8647 [tailport=s, headport=n, headlabel="      8647"]
BB8646 -> BB8658 [tailport=s, headport=n, color=gray]
BB8647 [shape=record label="{28537: call-CallbackQueue.getPooled [v42,'getPooled',v40]}" ] 
BB8647 -> BB8648 [tailport=s, headport=n, headlabel="      8648"]
BB8647 -> BB8658 [tailport=s, headport=n, color=gray]
BB8648 [shape=record label="{28538: write-variable[v40,'asapCallbackQueue']*|28539: constant[false,v43]|28540: write-variable[v43,'asapEnqueued']*|28541: constant[null,v44]|28542: write-variable[v44,'batchingStrategy']*|28543: new[v45]|28544: function-expr[function ( ),v46]|28545: write-property[v45,'initialize',v46]|28546: function-expr[function ( ),v47]|28547: write-property[v45,'close',v47]|28548: write-variable[v45,'NESTED_UPDATES']*|28549: new[v48]|28550: function-expr[function ( ),v49]|28551: write-property[v48,'initialize',v49]|28552: function-expr[function ( ),v50]|28553: write-property[v48,'close',v50]|28554: write-variable[v48,'UPDATE_QUEUEING']*|28555: read-variable['Array',v52,-]|28556: read-variable['NESTED_UPDATES',v53,-]|28557: read-variable['UPDATE_QUEUEING',v54,-]}" ] 
BB8648 -> BB8649 [tailport=s, headport=n, headlabel="      8649"]
BB8648 -> BB8658 [tailport=s, headport=n, color=gray]
BB8649 [shape=record label="{28558: construct [-,v52,v53,v54,v51]}" ] 
BB8649 -> BB8650 [tailport=s, headport=n, headlabel="      8650"]
BB8649 -> BB8658 [tailport=s, headport=n, color=gray]
BB8650 [shape=record label="{28559: write-variable[v51,'TRANSACTION_WRAPPERS']*|28560: read-variable['assign',v56,v55]|28561: read-variable['ReactUpdatesFlushTransaction',v58,-]|28562: read-property[v58,'prototype',v57]|28563: \<variable-non-null-undef\>['ReactUpdatesFlushTransaction']|28564: read-variable['Transaction',v60,-]|28565: read-property[v60,'Mixin',v59]|28566: \<variable-non-null-undef\>['Transaction']|28567: new[v61]|28568: function-expr[function ( ),v62]|28569: write-property[v61,'getTransactionWrappers',v62]|28570: function-expr[function ( ),v63]|28571: write-property[v61,'destructor',v63]|28572: function-expr[function ( method scope a ),v64]|28573: write-property[v61,'perform',v64]}" ] 
BB8650 -> BB8651 [tailport=s, headport=n, headlabel="      8651"]
BB8650 -> BB8658 [tailport=s, headport=n, color=gray]
BB8651 [shape=record label="{28574: call-assign [v55,v56,v57,v59,v61,-]*}" ] 
BB8651 -> BB8652 [tailport=s, headport=n, headlabel="      8652"]
BB8651 -> BB8658 [tailport=s, headport=n, color=gray]
BB8652 [shape=record label="{28575: read-variable['PooledClass',v66,-]|28576: read-property[v66,'addPoolingTo',-]|28577: \<variable-non-null-undef\>['PooledClass']|28578: read-variable['ReactUpdatesFlushTransaction',v67,-]}" ] 
BB8652 -> BB8653 [tailport=s, headport=n, headlabel="      8653"]
BB8652 -> BB8658 [tailport=s, headport=n, color=gray]
BB8653 [shape=record label="{28579: call-PooledClass.addPoolingTo [v66,'addPoolingTo',v67,-]*}" ] 
BB8653 -> BB8654 [tailport=s, headport=n, headlabel="      8654"]
BB8653 -> BB8658 [tailport=s, headport=n, color=gray]
BB8654 [shape=record label="{28580: function-expr[function ( ),v68]|28581: write-variable[v68,'flushBatchedUpdates']*|28582: read-variable['ReactPerf',v71,-]|28583: read-property[v71,'measure',-]|28584: \<variable-non-null-undef\>['ReactPerf']|28585: constant[\"ReactUpdates\",v72]|28586: constant[\"flushBatchedUpdates\",v73]|28587: read-variable['flushBatchedUpdates',v74,-]}" ] 
BB8654 -> BB8655 [tailport=s, headport=n, headlabel="      8655"]
BB8654 -> BB8658 [tailport=s, headport=n, color=gray]
BB8655 [shape=record label="{28588: call-ReactPerf.measure [v71,'measure',v72,v73,v74,v69]}" ] 
BB8655 -> BB8656 [tailport=s, headport=n, headlabel="      8656"]
BB8655 -> BB8658 [tailport=s, headport=n, color=gray]
BB8656 [shape=record label="{28589: write-variable[v69,'flushBatchedUpdates']*|28590: new[v75]|28591: function-expr[function ( ReconcileTransaction ),v76]|28592: write-property[v75,'injectReconcileTransaction',v76]|28593: function-expr[function ( _batchingStrategy ),v77]|28594: write-property[v75,'injectBatchingStrategy',v77]|28595: write-variable[v75,'ReactUpdatesInjection']*|28596: new[v78]|28597: constant[null,v79]|28598: write-property[v78,'ReactReconcileTransaction',v79]|28599: read-variable['batchedUpdates',v80,-]|28600: write-property[v78,'batchedUpdates',v80]|28601: read-variable['enqueueUpdate',v81,-]|28602: write-property[v78,'enqueueUpdate',v81]|28603: read-variable['flushBatchedUpdates',v82,-]|28604: write-property[v78,'flushBatchedUpdates',v82]|28605: read-variable['ReactUpdatesInjection',v83,-]|28606: write-property[v78,'injection',v83]|28607: read-variable['asap',v84,-]|28608: write-property[v78,'asap',v84]|28609: write-variable[v78,'ReactUpdates']*|28610: read-variable['module',v86,-]|28611: read-variable['ReactUpdates',v85,-]|28612: write-property[v86,'exports',v85]|28613: \<variable-non-null-undef\>['module']*}" ] 
BB8656 -> BB8657 [tailport=s, headport=n, headlabel="      8657"]
BB8656 -> BB8658 [tailport=s, headport=n, color=gray]
BB8657 [shape=record label="{28614: return[v1]}" ] 
BB8658 [shape=record label="{28615: exceptional-return}" ] 
//#$~ 15082
}
