digraph {
rankdir="TD"
BB_entry784[shape=none,label=""];
BB_entry784 -> BB10675 [tailport=s, headport=n, headlabel="    10675"]
BB10675 [shape=record label="{31487: constant[undefined,v1]|31488: vardecl['t']|31489: vardecl['bits']|31490: vardecl['mask']}" ] 
BB10675 -> BB10676 [tailport=s, headport=n, headlabel="      10676"]
BB10676 [shape=record label="{31491: read-variable['obj',v2,-]|31492: if[v2](true-block:10679,false-block:10677)}" ] 
BB10676 -> BB10679 [tailport=s, headport=n, headlabel="      10679"]
BB10676 -> BB10677 [tailport=s, headport=n, headlabel="      10677"]
BB10676 -> BB10696 [tailport=s, headport=n, color=gray, headlabel="      10696"]
BB10677 [shape=record label="{31493: read-variable['Color',v3,-]}" ] 
BB10677 -> BB10678 [tailport=s, headport=n, headlabel="      10678"]
BB10677 -> BB10696 [tailport=s, headport=n, color=gray]
BB10678 [shape=record label="{31494: construct [-,v3,v2]}" ] 
BB10678 -> BB10679 [tailport=s, headport=n]
BB10678 -> BB10696 [tailport=s, headport=n, color=gray]
BB10679 [shape=record label="{31495: write-variable[v2,'t']*|31496: read-variable['color',v7,-]|31497: read-property[v7,'length',v5]|31498: \<variable-non-null-undef\>['color']|31499: constant[4.0,v6]|31500: ==[v5,v6,v4]|31501: if[v4](true-block:10680,false-block:10681)}" ] 
BB10679 -> BB10680 [tailport=s, headport=n, headlabel="      10680"]
BB10679 -> BB10681 [tailport=s, headport=n, headlabel="      10681"]
BB10679 -> BB10696 [tailport=s, headport=n, color=gray]
BB10680 [shape=record label="{31502: constant[4.0,v3]}" ] 
BB10680 -> BB10682 [tailport=s, headport=n, headlabel="      10682"]
BB10681 [shape=record label="{31503: constant[8.0,v3]}" ] 
BB10681 -> BB10682 [tailport=s, headport=n]
BB10682 [shape=record label="{31504: write-variable[v3,'bits']*|31505: constant[1.0,v11]|31506: read-variable['bits',v12,-]|31507: \<\<[v11,v12,v9]|31508: constant[1.0,v10]|31509: -[v9,v10,v8]|31510: write-variable[v8,'mask']*|31511: read-variable['Number',v15,v14]|31512: constant[\"0x\",v17]|31513: read-variable['color',v20,-]|31514: read-property[v20,'substr',-]|31515: \<variable-non-null-undef\>['color']|31516: constant[1.0,v21]}" ] 
BB10682 -> BB10683 [tailport=s, headport=n, headlabel="      10683"]
BB10682 -> BB10696 [tailport=s, headport=n, color=gray]
BB10683 [shape=record label="{31517: call-color.substr [v20,'substr',v21,v18]}" ] 
BB10683 -> BB10684 [tailport=s, headport=n, headlabel="      10684"]
BB10683 -> BB10696 [tailport=s, headport=n, color=gray]
BB10684 [shape=record label="{31518: +[v17,v18,v16]}" ] 
BB10684 -> BB10685 [tailport=s, headport=n, headlabel="      10685"]
BB10684 -> BB10696 [tailport=s, headport=n, color=gray]
BB10685 [shape=record label="{31519: call-Number [v14,v15,v16,v13]}" ] 
BB10685 -> BB10686 [tailport=s, headport=n, headlabel="      10686"]
BB10685 -> BB10696 [tailport=s, headport=n, color=gray]
BB10686 [shape=record label="{31520: write-variable[v13,'color']*|31521: read-variable['isNaN',v24,v23]|31522: read-variable['color',v25,-]}" ] 
BB10686 -> BB10687 [tailport=s, headport=n, headlabel="      10687"]
BB10686 -> BB10696 [tailport=s, headport=n, color=gray]
BB10687 [shape=record label="{31523: call-isNaN [v23,v24,v25,v22]}" ] 
BB10687 -> BB10688 [tailport=s, headport=n, headlabel="      10688"]
BB10687 -> BB10696 [tailport=s, headport=n, color=gray]
BB10688 [shape=record label="{31524: if[v22](true-block:10689,false-block:10690)}" ] 
BB10688 -> BB10689 [tailport=s, headport=n, headlabel="      10689"]
BB10688 -> BB10690 [tailport=s, headport=n, headlabel="      10690"]
BB10689 [shape=record label="{31525: constant[null,v1]}" ] 
BB10689 -> BB10695 [tailport=s, headport=n, headlabel="      10695"]
BB10690 [shape=record label="{31526: read-variable['ArrayUtil',v27,-]|31527: read-property[v27,'forEach',-]|31528: \<variable-non-null-undef\>['ArrayUtil']|31529: read-variable['Array',v29,-]|31530: constant[\"b\",v30]|31531: constant[\"g\",v31]|31532: constant[\"r\",v32]}" ] 
BB10690 -> BB10691 [tailport=s, headport=n, headlabel="      10691"]
BB10690 -> BB10696 [tailport=s, headport=n, color=gray]
BB10691 [shape=record label="{31533: construct [-,v29,v30,v31,v32,v28]}" ] 
BB10691 -> BB10692 [tailport=s, headport=n, headlabel="      10692"]
BB10691 -> BB10696 [tailport=s, headport=n, color=gray]
BB10692 [shape=record label="{31534: function-expr[function ( x ),v33]}" ] 
BB10692 -> BB10693 [tailport=s, headport=n, headlabel="      10693"]
BB10693 [shape=record label="{31535: call-ArrayUtil.forEach [v27,'forEach',v28,v33,-]*}" ] 
BB10693 -> BB10694 [tailport=s, headport=n, headlabel="      10694"]
BB10693 -> BB10696 [tailport=s, headport=n, color=gray]
BB10694 [shape=record label="{31536: read-variable['t',v35,-]|31537: constant[1.0,v34]|31538: write-property[v35,'a',v34]|31539: \<variable-non-null-undef\>['t']*|31540: read-variable['t',v1,-]}" ] 
BB10694 -> BB10695 [tailport=s, headport=n]
BB10694 -> BB10696 [tailport=s, headport=n, color=gray]
BB10695 [shape=record label="{31541: return[v1]}" ] 
BB10696 [shape=record label="{31542: exceptional-return}" ] 
//#$~ 15177
}
