digraph {
rankdir="TD"
BB_entry425[shape=none,label=""];
BB_entry425 -> BB5765 [tailport=s, headport=n, headlabel="    5765"]
BB5765 [shape=record label="{15055: constant[undefined,v1]|15056: vardecl['instance']|15057: vardecl['match']|15058: vardecl['constructor']|15059: vardecl['identifier']|15060: vardecl['controllerPrototype']|15061: vardecl['instantiate']}" ] 
BB5765 -> BB5766 [tailport=s, headport=n, headlabel="      5766"]
BB5766 [shape=record label="{15062: read-variable['later',v3,-]|15063: constant[true,v4]|15064: ===[v3,v4,v2]|15065: write-variable[v2,'later']*|15066: read-variable['ident',v5,-]|15067: if[v5](true-block:5767,false-block:5769)}" ] 
BB5766 -> BB5769 [tailport=s, headport=n, headlabel="      5769"]
BB5766 -> BB5767 [tailport=s, headport=n, headlabel="      5767"]
BB5766 -> BB5819 [tailport=s, headport=n, color=gray, headlabel="      5819"]
BB5767 [shape=record label="{15068: read-variable['isString',v7,v6]|15069: read-variable['ident',v8,-]}" ] 
BB5767 -> BB5768 [tailport=s, headport=n, headlabel="      5768"]
BB5767 -> BB5819 [tailport=s, headport=n, color=gray]
BB5768 [shape=record label="{15070: call-isString [v6,v7,v8,v5]}" ] 
BB5768 -> BB5769 [tailport=s, headport=n]
BB5768 -> BB5819 [tailport=s, headport=n, color=gray]
BB5769 [shape=record label="{15071: if[v5](true-block:5770,false-block:5771)}" ] 
BB5769 -> BB5770 [tailport=s, headport=n, headlabel="      5770"]
BB5769 -> BB5771 [tailport=s, headport=n, headlabel="      5771"]
BB5770 [shape=record label="{15072: read-variable['ident',v6,-]|15073: write-variable[v6,'identifier']*}" ] 
BB5770 -> BB5771 [tailport=s, headport=n]
BB5770 -> BB5819 [tailport=s, headport=n, color=gray]
BB5771 [shape=record label="{15074: read-variable['isString',v8,v7]|15075: read-variable['expression',v9,-]}" ] 
BB5771 -> BB5772 [tailport=s, headport=n, headlabel="      5772"]
BB5771 -> BB5819 [tailport=s, headport=n, color=gray]
BB5772 [shape=record label="{15076: call-isString [v7,v8,v9,v6]}" ] 
BB5772 -> BB5773 [tailport=s, headport=n, headlabel="      5773"]
BB5772 -> BB5819 [tailport=s, headport=n, color=gray]
BB5773 [shape=record label="{15077: if[v6](true-block:5774,false-block:5795)}" ] 
BB5773 -> BB5774 [tailport=s, headport=n, headlabel="      5774"]
BB5773 -> BB5795 [tailport=s, headport=n, headlabel="      5795"]
BB5774 [shape=record label="{15078: read-variable['expression',v12,-]|15079: read-property[v12,'match',-]|15080: \<variable-non-null-undef\>['expression']|15081: read-variable['CNTRL_REG',v13,-]}" ] 
BB5774 -> BB5775 [tailport=s, headport=n, headlabel="      5775"]
BB5774 -> BB5819 [tailport=s, headport=n, color=gray]
BB5775 [shape=record label="{15082: call-expression.match [v12,'match',v13,v10]}" ] 
BB5775 -> BB5776 [tailport=s, headport=n, headlabel="      5776"]
BB5775 -> BB5819 [tailport=s, headport=n, color=gray]
BB5776 [shape=record label="{15083: write-variable[v10,'match']*|15084: read-variable['match',v15,-]|15085: ![v15,v14]|15086: if[v14](true-block:5777,false-block:5780)}" ] 
BB5776 -> BB5777 [tailport=s, headport=n, headlabel="      5777"]
BB5776 -> BB5780 [tailport=s, headport=n, headlabel="      5780"]
BB5776 -> BB5819 [tailport=s, headport=n, color=gray]
BB5777 [shape=record label="{15087: read-variable['$controllerMinErr',v18,v17]|15088: constant[\"ctrlfmt\",v19]|15089: constant[\"Badly formed controller string '\\\{0\\\}'. \",v21]|15090: constant[\"Must match `__name__ as __id__` or `__name__`.\",v22]|15091: +[v21,v22,v20]|15092: read-variable['expression',v23,-]}" ] 
BB5777 -> BB5778 [tailport=s, headport=n, headlabel="      5778"]
BB5777 -> BB5819 [tailport=s, headport=n, color=gray]
BB5778 [shape=record label="{15093: call-$controllerMinErr [v17,v18,v19,v20,v23,v16]}" ] 
BB5778 -> BB5779 [tailport=s, headport=n, headlabel="      5779"]
BB5778 -> BB5819 [tailport=s, headport=n, color=gray]
BB5779 [shape=record label="{15094: throw[v16]*}" ] 
BB5779 -> BB5780 [tailport=s, headport=n]
BB5779 -> BB5819 [tailport=s, headport=n, color=gray]
BB5780 [shape=record label="{15095: read-variable['match',v17,-]|15096: constant[1.0,v18]|15097: read-property[v17,v18,v16]|15098: \<variable-non-null-undef\>['match']|15099: write-variable[v16,'constructor']|15100: read-variable['identifier',v19,-]|15101: if[v19](true-block:5782,false-block:5781)}" ] 
BB5780 -> BB5782 [tailport=s, headport=n, headlabel="      5782"]
BB5780 -> BB5781 [tailport=s, headport=n, headlabel="      5781"]
BB5780 -> BB5819 [tailport=s, headport=n, color=gray]
BB5781 [shape=record label="{15102: read-variable['match',v20,-]|15103: constant[3.0,v21]|15104: read-property[v20,v21,v19]|15105: \<variable-non-null-undef\>['match']}" ] 
BB5781 -> BB5782 [tailport=s, headport=n]
BB5781 -> BB5819 [tailport=s, headport=n, color=gray]
BB5782 [shape=record label="{15106: write-variable[v19,'identifier']|15107: read-variable['controllers',v23,-]|15108: read-property[v23,'hasOwnProperty',-]|15109: \<variable-non-null-undef\>['controllers']|15110: read-variable['constructor',v24,-]}" ] 
BB5782 -> BB5783 [tailport=s, headport=n, headlabel="      5783"]
BB5782 -> BB5819 [tailport=s, headport=n, color=gray]
BB5783 [shape=record label="{15111: call-controllers.hasOwnProperty [v23,'hasOwnProperty',v24,v21]}" ] 
BB5783 -> BB5784 [tailport=s, headport=n, headlabel="      5784"]
BB5783 -> BB5819 [tailport=s, headport=n, color=gray]
BB5784 [shape=record label="{15112: if[v21](true-block:5785,false-block:5786)}" ] 
BB5784 -> BB5785 [tailport=s, headport=n, headlabel="      5785"]
BB5784 -> BB5786 [tailport=s, headport=n, headlabel="      5786"]
BB5785 [shape=record label="{15113: read-variable['controllers',v25,-]|15114: read-variable['constructor',v26,-]|15115: read-property[v25,v26,v20]|15116: \<variable-non-null-undef\>['controllers']}" ] 
BB5785 -> BB5793 [tailport=s, headport=n, headlabel="      5793"]
BB5785 -> BB5819 [tailport=s, headport=n, color=gray]
BB5786 [shape=record label="{15117: read-variable['getter',v26,v25]|15118: read-variable['locals',v28,-]|15119: read-property[v28,'$scope',v27]|15120: \<variable-non-null-undef\>['locals']|15121: read-variable['constructor',v29,-]|15122: constant[true,v30]}" ] 
BB5786 -> BB5787 [tailport=s, headport=n, headlabel="      5787"]
BB5786 -> BB5819 [tailport=s, headport=n, color=gray]
BB5787 [shape=record label="{15123: call-getter [v25,v26,v27,v29,v30,v20]}" ] 
BB5787 -> BB5788 [tailport=s, headport=n, headlabel="      5788"]
BB5787 -> BB5819 [tailport=s, headport=n, color=gray]
BB5788 [shape=record label="{15124: if[v20](true-block:5793,false-block:5789)}" ] 
BB5788 -> BB5793 [tailport=s, headport=n]
BB5788 -> BB5789 [tailport=s, headport=n, headlabel="      5789"]
BB5789 [shape=record label="{15125: read-variable['globals',v25,-]|15126: if[v25](true-block:5790,false-block:5791)}" ] 
BB5789 -> BB5790 [tailport=s, headport=n, headlabel="      5790"]
BB5789 -> BB5791 [tailport=s, headport=n, headlabel="      5791"]
BB5789 -> BB5819 [tailport=s, headport=n, color=gray]
BB5790 [shape=record label="{15127: read-variable['getter',v27,v26]|15128: read-variable['$window',v28,-]|15129: read-variable['constructor',v29,-]|15130: constant[true,v30]}" ] 
BB5790 -> BB5792 [tailport=s, headport=n, headlabel="      5792"]
BB5790 -> BB5819 [tailport=s, headport=n, color=gray]
BB5791 [shape=record label="{15131: read-variable['undefined',v20,-]}" ] 
BB5791 -> BB5793 [tailport=s, headport=n]
BB5791 -> BB5819 [tailport=s, headport=n, color=gray]
BB5792 [shape=record label="{15132: call-getter [v26,v27,v28,v29,v30,v20]}" ] 
BB5792 -> BB5793 [tailport=s, headport=n]
BB5792 -> BB5819 [tailport=s, headport=n, color=gray]
BB5793 [shape=record label="{15133: write-variable[v20,'expression']*|15134: read-variable['assertArgFn',v26,v25]|15135: read-variable['expression',v27,-]|15136: read-variable['constructor',v28,-]|15137: constant[true,v29]}" ] 
BB5793 -> BB5794 [tailport=s, headport=n, headlabel="      5794"]
BB5793 -> BB5819 [tailport=s, headport=n, color=gray]
BB5794 [shape=record label="{15138: call-assertArgFn [v25,v26,v27,v28,v29,-]*}" ] 
BB5794 -> BB5795 [tailport=s, headport=n]
BB5794 -> BB5819 [tailport=s, headport=n, color=gray]
BB5795 [shape=record label="{15139: read-variable['later',v10,-]|15140: if[v10](true-block:5796,false-block:5811)}" ] 
BB5795 -> BB5796 [tailport=s, headport=n, headlabel="      5796"]
BB5795 -> BB5811 [tailport=s, headport=n, headlabel="      5811"]
BB5795 -> BB5819 [tailport=s, headport=n, color=gray]
BB5796 [shape=record label="{15141: read-variable['isArray',v15,v14]|15142: read-variable['expression',v16,-]}" ] 
BB5796 -> BB5797 [tailport=s, headport=n, headlabel="      5797"]
BB5796 -> BB5819 [tailport=s, headport=n, color=gray]
BB5797 [shape=record label="{15143: call-isArray [v14,v15,v16,v13]}" ] 
BB5797 -> BB5798 [tailport=s, headport=n, headlabel="      5798"]
BB5797 -> BB5819 [tailport=s, headport=n, color=gray]
BB5798 [shape=record label="{15144: if[v13](true-block:5799,false-block:5800)}" ] 
BB5798 -> BB5799 [tailport=s, headport=n, headlabel="      5799"]
BB5798 -> BB5800 [tailport=s, headport=n, headlabel="      5800"]
BB5799 [shape=record label="{15145: read-variable['expression',v17,-]|15146: read-variable['expression',v21,-]|15147: read-property[v21,'length',v19]|15148: \<variable-non-null-undef\>['expression']|15149: constant[1.0,v20]|15150: -[v19,v20,v18]|15151: read-property[v17,v18,v12]|15152: \<variable-non-null-undef\>['expression']}" ] 
BB5799 -> BB5801 [tailport=s, headport=n, headlabel="      5801"]
BB5799 -> BB5819 [tailport=s, headport=n, color=gray]
BB5800 [shape=record label="{15153: read-variable['expression',v12,-]}" ] 
BB5800 -> BB5801 [tailport=s, headport=n]
BB5800 -> BB5819 [tailport=s, headport=n, color=gray]
BB5801 [shape=record label="{15154: read-property[v12,'prototype',v11]|15155: write-variable[v11,'controllerPrototype']*|15156: read-variable['Object',v19,-]|15157: read-property[v19,'create',-]|15158: \<variable-non-null-undef\>['Object']|15159: read-variable['controllerPrototype',v20,-]|15160: if[v20](true-block:5803,false-block:5802)}" ] 
BB5801 -> BB5803 [tailport=s, headport=n, headlabel="      5803"]
BB5801 -> BB5802 [tailport=s, headport=n, headlabel="      5802"]
BB5801 -> BB5819 [tailport=s, headport=n, color=gray]
BB5802 [shape=record label="{15161: constant[null,v20]}" ] 
BB5802 -> BB5803 [tailport=s, headport=n]
BB5803 [shape=record label="{15162: call-Object.create [v19,'create',v20,v17]}" ] 
BB5803 -> BB5804 [tailport=s, headport=n, headlabel="      5804"]
BB5803 -> BB5819 [tailport=s, headport=n, color=gray]
BB5804 [shape=record label="{15163: write-variable[v17,'instance']*|15164: read-variable['identifier',v21,-]|15165: if[v21](true-block:5805,false-block:5808)}" ] 
BB5804 -> BB5805 [tailport=s, headport=n, headlabel="      5805"]
BB5804 -> BB5808 [tailport=s, headport=n, headlabel="      5808"]
BB5804 -> BB5819 [tailport=s, headport=n, color=gray]
BB5805 [shape=record label="{15166: read-variable['addIdentifier',v23,v22]|15167: read-variable['locals',v24,-]|15168: read-variable['identifier',v25,-]|15169: read-variable['instance',v26,-]|15170: read-variable['constructor',v27,-]|15171: if[v27](true-block:5807,false-block:5806)}" ] 
BB5805 -> BB5807 [tailport=s, headport=n, headlabel="      5807"]
BB5805 -> BB5806 [tailport=s, headport=n, headlabel="      5806"]
BB5805 -> BB5819 [tailport=s, headport=n, color=gray]
BB5806 [shape=record label="{15172: read-variable['expression',v28,-]|15173: read-property[v28,'name',v27]|15174: \<variable-non-null-undef\>['expression']}" ] 
BB5806 -> BB5807 [tailport=s, headport=n]
BB5806 -> BB5819 [tailport=s, headport=n, color=gray]
BB5807 [shape=record label="{15175: call-addIdentifier [v22,v23,v24,v25,v26,v27,-]*}" ] 
BB5807 -> BB5808 [tailport=s, headport=n]
BB5807 -> BB5819 [tailport=s, headport=n, color=gray]
BB5808 [shape=record label="{15176: read-variable['extend',v23,v22]|15177: function-expr[function ( ),v24]|15178: new[v25]|15179: read-variable['instance',v26,-]|15180: write-property[v25,'instance',v26]|15181: read-variable['identifier',v27,-]|15182: write-property[v25,'identifier',v27]}" ] 
BB5808 -> BB5809 [tailport=s, headport=n, headlabel="      5809"]
BB5808 -> BB5819 [tailport=s, headport=n, color=gray]
BB5809 [shape=record label="{15183: call-extend [v22,v23,v24,v25,v1]}" ] 
BB5809 -> BB5810 [tailport=s, headport=n, headlabel="      5810"]
BB5809 -> BB5819 [tailport=s, headport=n, color=gray]
BB5810 [shape=record label="{15184: write-variable[v1,'instantiate']}" ] 
BB5810 -> BB5818 [tailport=s, headport=n, headlabel="      5818"]
BB5811 [shape=record label="{15185: read-variable['$injector',v13,-]|15186: read-property[v13,'instantiate',-]|15187: \<variable-non-null-undef\>['$injector']|15188: read-variable['expression',v14,-]|15189: read-variable['locals',v15,-]|15190: read-variable['constructor',v16,-]}" ] 
BB5811 -> BB5812 [tailport=s, headport=n, headlabel="      5812"]
BB5811 -> BB5819 [tailport=s, headport=n, color=gray]
BB5812 [shape=record label="{15191: call-$injector.instantiate [v13,'instantiate',v14,v15,v16,v11]}" ] 
BB5812 -> BB5813 [tailport=s, headport=n, headlabel="      5813"]
BB5812 -> BB5819 [tailport=s, headport=n, color=gray]
BB5813 [shape=record label="{15192: write-variable[v11,'instance']*|15193: read-variable['identifier',v17,-]|15194: if[v17](true-block:5814,false-block:5817)}" ] 
BB5813 -> BB5814 [tailport=s, headport=n, headlabel="      5814"]
BB5813 -> BB5817 [tailport=s, headport=n, headlabel="      5817"]
BB5813 -> BB5819 [tailport=s, headport=n, color=gray]
BB5814 [shape=record label="{15195: read-variable['addIdentifier',v19,v18]|15196: read-variable['locals',v20,-]|15197: read-variable['identifier',v21,-]|15198: read-variable['instance',v22,-]|15199: read-variable['constructor',v23,-]|15200: if[v23](true-block:5816,false-block:5815)}" ] 
BB5814 -> BB5816 [tailport=s, headport=n, headlabel="      5816"]
BB5814 -> BB5815 [tailport=s, headport=n, headlabel="      5815"]
BB5814 -> BB5819 [tailport=s, headport=n, color=gray]
BB5815 [shape=record label="{15201: read-variable['expression',v24,-]|15202: read-property[v24,'name',v23]|15203: \<variable-non-null-undef\>['expression']}" ] 
BB5815 -> BB5816 [tailport=s, headport=n]
BB5815 -> BB5819 [tailport=s, headport=n, color=gray]
BB5816 [shape=record label="{15204: call-addIdentifier [v18,v19,v20,v21,v22,v23,-]*}" ] 
BB5816 -> BB5817 [tailport=s, headport=n]
BB5816 -> BB5819 [tailport=s, headport=n, color=gray]
BB5817 [shape=record label="{15205: read-variable['instance',v1,-]}" ] 
BB5817 -> BB5818 [tailport=s, headport=n]
BB5817 -> BB5819 [tailport=s, headport=n, color=gray]
BB5818 [shape=record label="{15206: return[v1]}" ] 
BB5819 [shape=record label="{15207: exceptional-return}" ] 
//#$~ 9022
}
