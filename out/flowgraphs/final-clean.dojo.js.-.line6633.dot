digraph {
rankdir="TD"
BB_entry350[shape=none,label=""];
BB_entry350 -> BB4872 [tailport=s, headport=n, headlabel="    4872"]
BB4872 [shape=record label="{14456: constant[undefined,v1]|14457: vardecl['extractResult']|14458: vardecl['id']|14459: vardecl['names']|14460: vardecl['namesAsStrings']|14461: vardecl['p']}" ] 
BB4872 -> BB4873 [tailport=s, headport=n, headlabel="      4873"]
BB4873 [shape=record label="{14462: read-variable['Array',v3,-]}" ] 
BB4873 -> BB4874 [tailport=s, headport=n, headlabel="      4874"]
BB4873 -> BB4907 [tailport=s, headport=n, color=gray, headlabel="      4907"]
BB4874 [shape=record label="{14463: construct [-,v3,v2]}" ] 
BB4874 -> BB4875 [tailport=s, headport=n, headlabel="      4875"]
BB4874 -> BB4907 [tailport=s, headport=n, color=gray]
BB4875 [shape=record label="{14464: write-variable[v2,'names']*|14465: read-variable['Array',v5,-]}" ] 
BB4875 -> BB4876 [tailport=s, headport=n, headlabel="      4876"]
BB4875 -> BB4907 [tailport=s, headport=n, color=gray]
BB4876 [shape=record label="{14466: construct [-,v5,v4]}" ] 
BB4876 -> BB4877 [tailport=s, headport=n, headlabel="      4877"]
BB4876 -> BB4907 [tailport=s, headport=n, color=gray]
BB4877 [shape=record label="{14467: write-variable[v4,'namesAsStrings']*|14468: read-variable['buildDetectRe',v8,-]|14469: read-property[v8,'test',-]|14470: \<variable-non-null-undef\>['buildDetectRe']|14471: read-variable['text',v9,-]}" ] 
BB4877 -> BB4878 [tailport=s, headport=n, headlabel="      4878"]
BB4877 -> BB4907 [tailport=s, headport=n, color=gray]
BB4878 [shape=record label="{14472: call-buildDetectRe.test [v8,'test',v9,v6]}" ] 
BB4878 -> BB4879 [tailport=s, headport=n, headlabel="      4879"]
BB4878 -> BB4907 [tailport=s, headport=n, color=gray]
BB4879 [shape=record label="{14473: if[v6](true-block:4883,false-block:4880)}" ] 
BB4879 -> BB4883 [tailport=s, headport=n, headlabel="      4883"]
BB4879 -> BB4880 [tailport=s, headport=n, headlabel="      4880"]
BB4880 [shape=record label="{14474: read-variable['extractLegacyApiApplications',v9,v8]|14475: read-variable['text',v10,-]}" ] 
BB4880 -> BB4881 [tailport=s, headport=n, headlabel="      4881"]
BB4880 -> BB4907 [tailport=s, headport=n, color=gray]
BB4881 [shape=record label="{14476: call-extractLegacyApiApplications [v8,v9,v10,v7]}" ] 
BB4881 -> BB4882 [tailport=s, headport=n, headlabel="      4882"]
BB4881 -> BB4907 [tailport=s, headport=n, color=gray]
BB4882 [shape=record label="{14477: write-variable[v7,'extractResult']|14478: ![v7,v6]}" ] 
BB4882 -> BB4883 [tailport=s, headport=n]
BB4882 -> BB4907 [tailport=s, headport=n, color=gray]
BB4883 [shape=record label="{14479: if[v6](true-block:4884,false-block:4885)}" ] 
BB4883 -> BB4884 [tailport=s, headport=n, headlabel="      4884"]
BB4883 -> BB4885 [tailport=s, headport=n, headlabel="      4885"]
BB4884 [shape=record label="{14480: constant[0.0,v1]}" ] 
BB4884 -> BB4906 [tailport=s, headport=n, headlabel="      4906"]
BB4885 [shape=record label="{14481: read-variable['module',v10,-]|14482: read-property[v10,'mid',v8]|14483: \<variable-non-null-undef\>['module']|14484: constant[\"-*loadInit\",v9]|14485: +[v8,v9,v7]|14486: write-variable[v7,'id']*|14487: read-variable['getModule',v19,v18]|14488: constant[\"dojo\",v20]|14489: read-variable['module',v21,-]}" ] 
BB4885 -> BB4886 [tailport=s, headport=n, headlabel="      4886"]
BB4885 -> BB4907 [tailport=s, headport=n, color=gray]
BB4886 [shape=record label="{14490: call-getModule [v18,v19,v20,v21,v17]}" ] 
BB4886 -> BB4887 [tailport=s, headport=n, headlabel="      4887"]
BB4886 -> BB4907 [tailport=s, headport=n, color=gray]
BB4887 [shape=record label="{14491: read-property[v17,'result',v16]|14492: read-property[v16,'scopeMap',v12]|14493: \<property-non-null-undef\>[v17,'result']}" ] 
BB4887 -> BB4888 [tailport=s, headport=n, headlabel="      4888"]
BB4887 -> BB4907 [tailport=s, headport=n, color=gray]
BB4888 [shape=record label="{14494: begin-for-in[v12,v13]}" ] 
BB4888 -> BB4889 [tailport=s, headport=n, headlabel="      4889"]
BB4888 -> BB4907 [tailport=s, headport=n, color=gray]
BB4889 [shape=record label="{14495: has-next[v13,v14]|14496: if[v14](true-block:4890,false-block:4895)}" ] 
BB4889 -> BB4890 [tailport=s, headport=n, headlabel="      4890"]
BB4889 -> BB4895 [tailport=s, headport=n, headlabel="      4895"]
BB4890 [shape=record label="{14497: next-property[v13,v15]|14498: write-variable[v15,'p']|14499: read-variable['names',v23,-]|14500: read-property[v23,'push',-]|14501: \<variable-non-null-undef\>['names']|14502: read-variable['p',v24,-]}" ] 
BB4890 -> BB4891 [tailport=s, headport=n, headlabel="      4891"]
BB4890 -> BB4907 [tailport=s, headport=n, color=gray]
BB4891 [shape=record label="{14503: call-names.push [v23,'push',v24,-]*}" ] 
BB4891 -> BB4892 [tailport=s, headport=n, headlabel="      4892"]
BB4891 -> BB4907 [tailport=s, headport=n, color=gray]
BB4892 [shape=record label="{14504: read-variable['namesAsStrings',v26,-]|14505: read-property[v26,'push',-]|14506: \<variable-non-null-undef\>['namesAsStrings']|14507: constant[\"\\\"\",v30]|14508: read-variable['p',v31,-]|14509: +[v30,v31,v28]|14510: constant[\"\\\"\",v29]|14511: +[v28,v29,v27]}" ] 
BB4892 -> BB4893 [tailport=s, headport=n, headlabel="      4893"]
BB4892 -> BB4907 [tailport=s, headport=n, color=gray]
BB4893 [shape=record label="{14512: call-namesAsStrings.push [v26,'push',v27,-]*}" ] 
BB4893 -> BB4894 [tailport=s, headport=n, headlabel="      4894"]
BB4893 -> BB4907 [tailport=s, headport=n, color=gray]
BB4894 [shape=record label="{14513: end-for-in(begin-node:14494)}" ] 
BB4894 -> BB4889 [tailport=s, headport=n]
BB4895 [shape=record label="{14514: constant[\"// xdomain rewrite of \",v62]|14515: read-variable['module',v64,-]|14516: read-property[v64,'mid',v63]|14517: \<variable-non-null-undef\>['module']|14518: +[v62,v63,v60]|14519: constant[\"\\n\",v61]|14520: +[v60,v61,v58]|14521: constant[\"define('\",v59]|14522: +[v58,v59,v56]|14523: read-variable['id',v57,-]|14524: +[v56,v57,v54]|14525: constant[\"',\\\{\\n\",v55]|14526: +[v54,v55,v52]|14527: constant[\"\\tnames:\",v53]|14528: +[v52,v53,v50]|14529: read-variable['json',v66,-]|14530: read-property[v66,'stringify',-]|14531: \<variable-non-null-undef\>['json']|14532: read-variable['names',v67,-]}" ] 
BB4895 -> BB4896 [tailport=s, headport=n, headlabel="      4896"]
BB4895 -> BB4907 [tailport=s, headport=n, color=gray]
BB4896 [shape=record label="{14533: call-json.stringify [v66,'stringify',v67,v51]}" ] 
BB4896 -> BB4897 [tailport=s, headport=n, headlabel="      4897"]
BB4896 -> BB4907 [tailport=s, headport=n, color=gray]
BB4897 [shape=record label="{14534: +[v50,v51,v48]|14535: constant[\",\\n\",v49]|14536: +[v48,v49,v46]|14537: constant[\"\\tdef:function(\",v47]|14538: +[v46,v47,v44]|14539: read-variable['names',v69,-]|14540: read-property[v69,'join',-]|14541: \<variable-non-null-undef\>['names']|14542: constant[\",\",v70]}" ] 
BB4897 -> BB4898 [tailport=s, headport=n, headlabel="      4898"]
BB4897 -> BB4907 [tailport=s, headport=n, color=gray]
BB4898 [shape=record label="{14543: call-names.join [v69,'join',v70,v45]}" ] 
BB4898 -> BB4899 [tailport=s, headport=n, headlabel="      4899"]
BB4898 -> BB4907 [tailport=s, headport=n, color=gray]
BB4899 [shape=record label="{14544: +[v44,v45,v42]|14545: constant[\")\\\{\",v43]|14546: +[v42,v43,v40]|14547: read-variable['extractResult',v71,-]|14548: constant[1.0,v72]|14549: read-property[v71,v72,v41]|14550: \<variable-non-null-undef\>['extractResult']|14551: +[v40,v41,v38]|14552: constant[\"\\\}\",v39]|14553: +[v38,v39,v36]|14554: constant[\"\\\});\\n\\n\",v37]|14555: +[v36,v37,v34]|14556: constant[\"define(\",v35]|14557: +[v34,v35,v32]|14558: read-variable['json',v74,-]|14559: read-property[v74,'stringify',-]|14560: \<variable-non-null-undef\>['json']|14561: read-variable['names',v77,-]|14562: read-property[v77,'concat',-]|14563: \<variable-non-null-undef\>['names']|14564: read-variable['Array',v79,-]|14565: constant[\"dojo/loadInit!\",v81]|14566: read-variable['id',v82,-]|14567: +[v81,v82,v80]}" ] 
BB4899 -> BB4900 [tailport=s, headport=n, headlabel="      4900"]
BB4899 -> BB4907 [tailport=s, headport=n, color=gray]
BB4900 [shape=record label="{14568: construct [-,v79,v80,v78]}" ] 
BB4900 -> BB4901 [tailport=s, headport=n, headlabel="      4901"]
BB4900 -> BB4907 [tailport=s, headport=n, color=gray]
BB4901 [shape=record label="{14569: call-names.concat [v77,'concat',v78,v75]}" ] 
BB4901 -> BB4902 [tailport=s, headport=n, headlabel="      4902"]
BB4901 -> BB4907 [tailport=s, headport=n, color=gray]
BB4902 [shape=record label="{14570: call-json.stringify [v74,'stringify',v75,v33]}" ] 
BB4902 -> BB4903 [tailport=s, headport=n, headlabel="      4903"]
BB4902 -> BB4907 [tailport=s, headport=n, color=gray]
BB4903 [shape=record label="{14571: +[v32,v33,v30]|14572: constant[\", function(\",v31]|14573: +[v30,v31,v28]|14574: read-variable['names',v84,-]|14575: read-property[v84,'join',-]|14576: \<variable-non-null-undef\>['names']|14577: constant[\",\",v85]}" ] 
BB4903 -> BB4904 [tailport=s, headport=n, headlabel="      4904"]
BB4903 -> BB4907 [tailport=s, headport=n, color=gray]
BB4904 [shape=record label="{14578: call-names.join [v84,'join',v85,v29]}" ] 
BB4904 -> BB4905 [tailport=s, headport=n, headlabel="      4905"]
BB4904 -> BB4907 [tailport=s, headport=n, color=gray]
BB4905 [shape=record label="{14579: +[v28,v29,v26]|14580: constant[\")\\\{\\n\",v27]|14581: +[v26,v27,v24]|14582: read-variable['extractResult',v86,-]|14583: constant[0.0,v87]|14584: read-property[v86,v87,v25]|14585: \<variable-non-null-undef\>['extractResult']|14586: +[v24,v25,v22]|14587: constant[\"\\\});\",v23]|14588: +[v22,v23,v1]}" ] 
BB4905 -> BB4906 [tailport=s, headport=n]
BB4905 -> BB4907 [tailport=s, headport=n, color=gray]
BB4906 [shape=record label="{14589: return[v1]}" ] 
BB4907 [shape=record label="{14590: exceptional-return}" ] 
//#$~ 6682
}
