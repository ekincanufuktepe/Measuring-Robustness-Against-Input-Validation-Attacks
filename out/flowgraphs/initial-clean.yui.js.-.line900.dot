digraph {
rankdir="TD"
BB_entry21[shape=none,label=""];
BB_entry21 -> BB594 [tailport=s, headport=n, headlabel="    594"]
BB594 [shape=record label="{2227: constant[undefined,v1]|2228: vardecl['Y']|2229: vardecl['mod']}" ] 
BB594 -> BB595 [tailport=s, headport=n, headlabel="      595"]
BB595 [shape=record label="{2230: read-variable['this',v2,-]|2231: write-variable[v2,'Y']*|2232: read-variable['Array',v4,-]|2233: constant[\"event-base\",v5]}" ] 
BB595 -> BB596 [tailport=s, headport=n, headlabel="      596"]
BB595 -> BB607 [tailport=s, headport=n, color=gray, headlabel="      607"]
BB596 [shape=record label="{2234: construct [-,v4,v5,v3]}" ] 
BB596 -> BB597 [tailport=s, headport=n, headlabel="      597"]
BB596 -> BB607 [tailport=s, headport=n, color=gray]
BB597 [shape=record label="{2235: write-variable[v3,'mod']*|2236: read-variable['Y',v10,-]|2237: read-property[v10,'Lang',v9]|2238: \<variable-non-null-undef\>['Y']|2239: read-property[v9,'isObject',-]|2240: \<property-non-null-undef\>[v10,'Lang']|2241: read-variable['until',v11,-]}" ] 
BB597 -> BB598 [tailport=s, headport=n, headlabel="      598"]
BB597 -> BB607 [tailport=s, headport=n, color=gray]
BB598 [shape=record label="{2242: call-Y.Lang.isObject [v9,'isObject',v11,v7]}" ] 
BB598 -> BB599 [tailport=s, headport=n, headlabel="      599"]
BB598 -> BB607 [tailport=s, headport=n, color=gray]
BB599 [shape=record label="{2243: if[v7](true-block:600,false-block:601)}" ] 
BB599 -> BB600 [tailport=s, headport=n, headlabel="      600"]
BB599 -> BB601 [tailport=s, headport=n, headlabel="      601"]
BB600 [shape=record label="{2244: read-variable['until',v6,-]}" ] 
BB600 -> BB602 [tailport=s, headport=n, headlabel="      602"]
BB600 -> BB607 [tailport=s, headport=n, color=gray]
BB601 [shape=record label="{2245: new[v6]|2246: read-variable['until',v12,-]|2247: write-property[v6,'event',v12]}" ] 
BB601 -> BB602 [tailport=s, headport=n]
BB601 -> BB607 [tailport=s, headport=n, color=gray]
BB602 [shape=record label="{2248: write-variable[v6,'until']*|2249: read-variable['until',v15,-]|2250: read-property[v15,'event',v13]|2251: \<variable-non-null-undef\>['until']|2252: constant[\"load\",v14]|2253: ===[v13,v14,v12]|2254: if[v12](true-block:603,false-block:605)}" ] 
BB602 -> BB603 [tailport=s, headport=n, headlabel="      603"]
BB602 -> BB605 [tailport=s, headport=n, headlabel="      605"]
BB602 -> BB607 [tailport=s, headport=n, color=gray]
BB603 [shape=record label="{2255: read-variable['mod',v17,-]|2256: read-property[v17,'push',-]|2257: \<variable-non-null-undef\>['mod']|2258: constant[\"event-synthetic\",v18]}" ] 
BB603 -> BB604 [tailport=s, headport=n, headlabel="      604"]
BB603 -> BB607 [tailport=s, headport=n, color=gray]
BB604 [shape=record label="{2259: call-mod.push [v17,'push',v18,-]*}" ] 
BB604 -> BB605 [tailport=s, headport=n]
BB604 -> BB607 [tailport=s, headport=n, color=gray]
BB605 [shape=record label="{2260: function-expr[function ( ),v1]}" ] 
BB605 -> BB606 [tailport=s, headport=n, headlabel="      606"]
BB606 [shape=record label="{2261: return[v1]}" ] 
BB607 [shape=record label="{2262: exceptional-return}" ] 
//#$~ 917
}
