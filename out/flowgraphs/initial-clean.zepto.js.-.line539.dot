digraph {
rankdir="TD"
BB_entry95[shape=none,label=""];
BB_entry95 -> BB989 [tailport=s, headport=n, headlabel="    989"]
BB989 [shape=record label="{2091: constant[undefined,v1]|2092: vardecl['func']|2093: vardecl['dom']|2094: vardecl['clone']}" ] 
BB989 -> BB990 [tailport=s, headport=n, headlabel="      990"]
BB990 [shape=record label="{2095: read-variable['isFunction',v4,v3]|2096: read-variable['structure',v5,-]}" ] 
BB990 -> BB991 [tailport=s, headport=n, headlabel="      991"]
BB990 -> BB1005 [tailport=s, headport=n, color=gray, headlabel="      1005"]
BB991 [shape=record label="{2097: call-isFunction [v3,v4,v5,v2]}" ] 
BB991 -> BB992 [tailport=s, headport=n, headlabel="      992"]
BB991 -> BB1005 [tailport=s, headport=n, color=gray]
BB992 [shape=record label="{2098: write-variable[v2,'func']*|2099: read-variable['this',v7,-]|2100: constant[0.0,v8]|2101: read-property[v7,v8,v6]|2102: if[v6](true-block:993,false-block:994)}" ] 
BB992 -> BB994 [tailport=s, headport=n, headlabel="      994"]
BB992 -> BB993 [tailport=s, headport=n, headlabel="      993"]
BB992 -> BB1005 [tailport=s, headport=n, color=gray]
BB993 [shape=record label="{2103: read-variable['func',v9,-]|2104: ![v9,v6]}" ] 
BB993 -> BB994 [tailport=s, headport=n]
BB993 -> BB1005 [tailport=s, headport=n, color=gray]
BB994 [shape=record label="{2105: if[v6](true-block:995,false-block:1002)}" ] 
BB994 -> BB995 [tailport=s, headport=n, headlabel="      995"]
BB994 -> BB1002 [tailport=s, headport=n, headlabel="      1002"]
BB995 [shape=record label="{2106: read-variable['$',v13,v12]|2107: read-variable['structure',v14,-]}" ] 
BB995 -> BB996 [tailport=s, headport=n, headlabel="      996"]
BB995 -> BB1005 [tailport=s, headport=n, color=gray]
BB996 [shape=record label="{2108: call-$ [v12,v13,v14,v11]}" ] 
BB996 -> BB997 [tailport=s, headport=n, headlabel="      997"]
BB996 -> BB1005 [tailport=s, headport=n, color=gray]
BB997 [shape=record label="{2109: read-property[v11,'get',-]|2110: constant[0.0,v15]}" ] 
BB997 -> BB998 [tailport=s, headport=n, headlabel="      998"]
BB997 -> BB1005 [tailport=s, headport=n, color=gray]
BB998 [shape=record label="{2111: call-null [v11,'get',v15,v9]}" ] 
BB998 -> BB999 [tailport=s, headport=n, headlabel="      999"]
BB998 -> BB1005 [tailport=s, headport=n, color=gray]
BB999 [shape=record label="{2112: write-variable[v9,'dom']*|2113: read-variable['dom',v17,-]|2114: read-property[v17,'parentNode',v16]|2115: \<variable-non-null-undef\>['dom']|2116: if[v16](true-block:1001,false-block:1000)}" ] 
BB999 -> BB1001 [tailport=s, headport=n, headlabel="      1001"]
BB999 -> BB1000 [tailport=s, headport=n, headlabel="      1000"]
BB999 -> BB1005 [tailport=s, headport=n, color=gray]
BB1000 [shape=record label="{2117: read-variable['this',v19,-]|2118: read-property[v19,'length',v17]|2119: constant[1.0,v18]|2120: \>[v17,v18,v16]}" ] 
BB1000 -> BB1001 [tailport=s, headport=n]
BB1000 -> BB1005 [tailport=s, headport=n, color=gray]
BB1001 [shape=record label="{2121: write-variable[v16,'clone']*}" ] 
BB1001 -> BB1002 [tailport=s, headport=n]
BB1002 [shape=record label="{2122: read-variable['this',v10,-]|2123: read-property[v10,'each',-]|2124: function-expr[function ( index ),v11]}" ] 
BB1002 -> BB1003 [tailport=s, headport=n, headlabel="      1003"]
BB1002 -> BB1005 [tailport=s, headport=n, color=gray]
BB1003 [shape=record label="{2125: call-this.each [v10,'each',v11,v1]}" ] 
BB1003 -> BB1004 [tailport=s, headport=n, headlabel="      1004"]
BB1003 -> BB1005 [tailport=s, headport=n, color=gray]
BB1004 [shape=record label="{2126: return[v1]}" ] 
BB1005 [shape=record label="{2127: exceptional-return}" ] 
//#$~ 548
}
