package tr.iyte.tajs.iv;

import java.util.ArrayList;
import java.util.HashMap;

public class VulnerabilityRules {
	
	public HashMap<String, ArrayList<String>> loadVulnerabilityRules()
	{
		
		HashMap<String,ArrayList<String>> vulnerabilityRules = new HashMap<>();
		
		ArrayList<String> rulesXSS = new ArrayList<>();
		ArrayList<String> rulesSQLI = new ArrayList<>();
		ArrayList<String> rulesBO = new ArrayList<>();
		ArrayList<String> rulesPT = new ArrayList<>();
		ArrayList<String> rulesUFS = new ArrayList<>();
		ArrayList<String> rulesOSCI = new ArrayList<>();
		
		rulesXSS.add("substring(\"<script>\")");
		vulnerabilityRules.put("XSS", rulesXSS);
		
		rulesSQLI.add("substring(\" OR \")");
		rulesSQLI.add("substring(\" AND \")");
		rulesSQLI.add("substring(\" IS NULL \")");
		vulnerabilityRules.put("SQLI", rulesSQLI);
		
		
		rulesBO.add("length");
		vulnerabilityRules.put("BO", rulesBO);

		
		rulesPT.add("substring(\"../\")");
		rulesPT.add("substring(\"..%u2216\")");
		rulesPT.add("substring(\"..%c0%af\")");
		rulesPT.add("substring(\"..\\\")");
		rulesPT.add("substring(\"%2e%2e%2f\")");
		rulesPT.add("substring(\"..%255c\")");
		vulnerabilityRules.put("PT", rulesPT);

		System.out.println("PT TESSSSSSSSST: ----->"+ rulesPT.get(3).toString());
		rulesOSCI.add("substring(\".exe\")");
		rulesOSCI.add("substring(\"/bin/\")");
		vulnerabilityRules.put("OSCI", rulesOSCI);
	
		
		rulesUFS.add("substring(\"%\")");
		vulnerabilityRules.put("UFS", rulesUFS);

		
//		for(int k=0; k<vulnerabilityRules.size(); k++)
//		{
//			Object[] vulIV = vulnerabilityRules.keySet().toArray();
//			//for(int j=0; j<vulnerabilityRules.get(vulIV[k])
//			System.out.println("----------------------------------------------------- "+vulIV[k].toString());
//			System.out.println(vulnerabilityRules.get(vulIV[k].toString()));
//			for(int m=0; m<vulnerabilityRules.get(vulIV[k].toString()).size(); m++)
//			{
//				System.out.println("ü~~ü~~ü~~ü~~ü~~ü~~ü~~ü~~ü~~ü~~ü~~ü~~ü~~ü~~ü~~ "+vulnerabilityRules.get(vulIV[k].toString()).get(m));
//			}
//		}
		
		return vulnerabilityRules;
		
	}
	
	
	public HashMap<String, Integer> initializeFuncNodeScores()
	{
		HashMap<String, Integer> initFScores = new HashMap<>();
		
		initFScores.put("XSS", 0);
		initFScores.put("SQLI", 0);
		initFScores.put("PT", 0);
		initFScores.put("BO", 0);
		initFScores.put("OSCI", 0);
		initFScores.put("UFS", 0);
		
		return initFScores;
	}
}
