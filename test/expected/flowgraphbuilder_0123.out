fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0123.js:1:1)
    node 1: vardecl['scope'] (test/flowgraphbuilder/flowgraph_builder0123.js:5:5)
    ->[block 1]
  block 1:
    node 2: function-expr[function(),v2] (test/flowgraphbuilder/flowgraph_builder0123.js:8:9)
    node 3: throw[v2]* (test/flowgraphbuilder/flowgraph_builder0123.js:8:2)
    ->[block 2] ~> [ block 3]
  block 2:
    node 4: read-variable['dumpValue',v5,v4] (test/flowgraphbuilder/flowgraph_builder0123.js:15:1)
    node 5: read-variable['scope',v6,-] (test/flowgraphbuilder/flowgraph_builder0123.js:15:11)
    ->[block 8]
  block 3:
    node 6: catch[x,v2] (test/flowgraphbuilder/flowgraph_builder0123.js:11:3)
    node 7: begin-with[v2] (test/flowgraphbuilder/flowgraph_builder0123.js:11:3)
    ->[block 4]
  block 4:
    node 8: read-variable['x',v6,v5] (test/flowgraphbuilder/flowgraph_builder0123.js:12:10)
    ->[block 6] ~> [ block 5]
  block 5:
    node 9: end-with (test/flowgraphbuilder/flowgraph_builder0123.js:11:3)
    ->[block 12]
  block 6:
    node 10: call[v5,v6,v4] (test/flowgraphbuilder/flowgraph_builder0123.js:12:10)
    ->[block 7] ~> [ block 5]
  block 7:
    node 11: write-variable[v4,'scope']* (test/flowgraphbuilder/flowgraph_builder0123.js:12:2)
    node 12: end-with (test/flowgraphbuilder/flowgraph_builder0123.js:11:3)
    ->[block 2] ~> [ block 5]
  block 8:
    node 13: call[v4,v5,v6,-]* (test/flowgraphbuilder/flowgraph_builder0123.js:15:1)
    ->[block 9]
  block 9:
    node 14: read-variable['assert',v8,v7] (test/flowgraphbuilder/flowgraph_builder0123.js:16:1)
    node 15: read-variable['scope',v10,-] (test/flowgraphbuilder/flowgraph_builder0123.js:16:8)
    node 16: read-variable['this',v11,-] (test/flowgraphbuilder/flowgraph_builder0123.js:16:18)
    node 17: !==[v10,v11,v9] (test/flowgraphbuilder/flowgraph_builder0123.js:16:8)
    ->[block 10]
  block 10:
    node 18: call[v7,v8,v9,-]* (test/flowgraphbuilder/flowgraph_builder0123.js:16:1)
    ->[block 11]
  block 11: [exit-ordinary]
    node 19: return[v1] (test/flowgraphbuilder/flowgraph_builder0123.js:1:1)
    ->[]
  block 12: [exit-exceptional]
    node 20: exceptional-return (test/flowgraphbuilder/flowgraph_builder0123.js:1:1)
    ->[]
function()
  block 13: [entry]
    node 21: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0123.js:8:9)
    ->[block 14]
  block 14:
    node 22: read-variable['this',v1,-] (test/flowgraphbuilder/flowgraph_builder0123.js:9:10)
    ->[block 15]
  block 15: [exit-ordinary]
    node 23: return[v1] (test/flowgraphbuilder/flowgraph_builder0123.js:9:10)
    ->[]
  block 16: [exit-exceptional]
    node 24: exceptional-return (test/flowgraphbuilder/flowgraph_builder0123.js:9:10)
    ->[]

test/flowgraphbuilder/flowgraph_builder0123.js:16:18: [definite] Reading 'this' yields the global object
test/flowgraphbuilder/flowgraph_builder0123.js:15:1: [info] Abstract value: [@Object#node6]
