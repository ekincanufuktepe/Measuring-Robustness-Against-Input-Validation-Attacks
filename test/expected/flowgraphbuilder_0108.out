fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0108.js:1:1)
    ->[block 1]
  block 1:
    node 1: new[v2] (test/flowgraphbuilder/flowgraph_builder0108.js:1:5)
    node 2: constant[42.0,v3] (test/flowgraphbuilder/flowgraph_builder0108.js:1:8)
    node 3: write-property[v2,'a',v3] (test/flowgraphbuilder/flowgraph_builder0108.js:1:5)
    node 4: write-variable[v2,'x']* (test/flowgraphbuilder/flowgraph_builder0108.js:1:1)
    node 5: read-variable['x',v5,-] (test/flowgraphbuilder/flowgraph_builder0108.js:3:11)
    ->[block 2]
  block 2:
    node 6: begin-for-in[v5,v6] (test/flowgraphbuilder/flowgraph_builder0108.js:3:1)
    ->[block 3]
  block 3:
    node 7: has-next[v6,v7] (test/flowgraphbuilder/flowgraph_builder0108.js:3:1)
    node 8: if[v7](true-block:4,false-block:6) (test/flowgraphbuilder/flowgraph_builder0108.js:3:1)
    ->[block 4,block 6]
  block 4:
    node 9: next-property[v6,v8] (test/flowgraphbuilder/flowgraph_builder0108.js:3:1)
    node 10: write-variable[v8,'b'] (test/flowgraphbuilder/flowgraph_builder0108.js:3:1)
    ->[block 5]
  block 5:
    node 11: end-for-in(begin-node:6) (test/flowgraphbuilder/flowgraph_builder0108.js:3:14)
    ->[block 3]
  block 6: [exit-ordinary]
    node 12: return[v1] (test/flowgraphbuilder/flowgraph_builder0108.js:1:1)
    ->[]
  block 7: [exit-exceptional]
    node 13: exceptional-return (test/flowgraphbuilder/flowgraph_builder0108.js:1:1)
    ->[]

