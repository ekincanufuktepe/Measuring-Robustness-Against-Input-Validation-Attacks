fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0093.js:1:1)
    ->[block 1]
  block 1:
    node 1: constant[100.0,v3] (test/flowgraphbuilder/flowgraph_builder0093.js:1:9)
    node 2: write-variable[v3,'x'] (test/flowgraphbuilder/flowgraph_builder0093.js:1:5)
    ->[block 2]
  block 2:
    node 3: read-variable['x',v4,-] (test/flowgraphbuilder/flowgraph_builder0093.js:1:14)
    node 4: constant[10.0,v5] (test/flowgraphbuilder/flowgraph_builder0093.js:1:18)
    node 5: >[v4,v5,v2] (test/flowgraphbuilder/flowgraph_builder0093.js:1:14)
    node 6: if[v2](true-block:3,false-block:4) (test/flowgraphbuilder/flowgraph_builder0093.js:1:1)
    ->[block 3,block 4]
  block 3:
    node 7: constant[1.0,v6] (test/flowgraphbuilder/flowgraph_builder0093.js:1:22)
    node 8: read-variable['x',v7,-] (test/flowgraphbuilder/flowgraph_builder0093.js:1:22)
    node 9: +[v7,v8] (test/flowgraphbuilder/flowgraph_builder0093.js:1:22)
    node 10: -[v8,v6,v9] (test/flowgraphbuilder/flowgraph_builder0093.js:1:22)
    node 11: write-variable[v9,'x'] (test/flowgraphbuilder/flowgraph_builder0093.js:1:22)
    ->[block 2]
  block 4: [exit-ordinary]
    node 12: return[v1] (test/flowgraphbuilder/flowgraph_builder0093.js:1:1)
    ->[]
  block 5: [exit-exceptional]
    node 13: exceptional-return (test/flowgraphbuilder/flowgraph_builder0093.js:1:1)
    ->[]

