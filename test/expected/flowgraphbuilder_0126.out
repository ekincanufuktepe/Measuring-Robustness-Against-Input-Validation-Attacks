fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0126.js:1:1)
    node 1: vardecl['t2'] (test/flowgraphbuilder/flowgraph_builder0126.js:1:5)
    ->[block 1]
  block 1:
    node 2: read-variable['Object',v4,v3] (test/flowgraphbuilder/flowgraph_builder0126.js:1:10)
    node 3: constant[null,v5] (test/flowgraphbuilder/flowgraph_builder0126.js:1:17)
    ->[block 2]
  block 2:
    node 4: call[v3,v4,v5,v2] (test/flowgraphbuilder/flowgraph_builder0126.js:1:10)
    ->[block 3]
  block 3:
    node 5: write-variable[v2,'t2']* (test/flowgraphbuilder/flowgraph_builder0126.js:1:10)
    node 6: read-variable['dumpObject',v7,v6] (test/flowgraphbuilder/flowgraph_builder0126.js:3:1)
    node 7: read-variable['t2',v8,-] (test/flowgraphbuilder/flowgraph_builder0126.js:3:12)
    ->[block 4]
  block 4:
    node 8: call[v6,v7,v8,-]* (test/flowgraphbuilder/flowgraph_builder0126.js:3:1)
    ->[block 5]
  block 5: [exit-ordinary]
    node 9: return[v1] (test/flowgraphbuilder/flowgraph_builder0126.js:1:1)
    ->[]
  block 6: [exit-exceptional]
    node 10: exceptional-return (test/flowgraphbuilder/flowgraph_builder0126.js:1:1)
    ->[]

test/flowgraphbuilder/flowgraph_builder0126.js:3:1: [info] Abstract object: {[[Prototype]]=[@Object.prototype[native]]}
