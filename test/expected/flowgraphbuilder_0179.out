fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0179.js:1:1)
    ->[block 1]
  block 1:
    node 1: constant["crazy",v2] (test/flowgraphbuilder/flowgraph_builder0179.js:1:6)
    node 2: write-variable[v2,'gt']* (test/flowgraphbuilder/flowgraph_builder0179.js:1:1)
    node 3: new[v4] (test/flowgraphbuilder/flowgraph_builder0179.js:2:11)
    ->[block 2]
  block 2:
    node 4: begin-for-in[v4,v5] (test/flowgraphbuilder/flowgraph_builder0179.js:2:1)
    ->[block 3]
  block 3:
    node 5: has-next[v5,v6] (test/flowgraphbuilder/flowgraph_builder0179.js:2:1)
    node 6: if[v6](true-block:4,false-block:6) (test/flowgraphbuilder/flowgraph_builder0179.js:2:1)
    ->[block 4,block 6]
  block 4:
    node 7: next-property[v5,v7] (test/flowgraphbuilder/flowgraph_builder0179.js:2:1)
    node 8: write-variable[v7,'x'] (test/flowgraphbuilder/flowgraph_builder0179.js:2:1)
    node 9: read-variable['gt',v9,-] (test/flowgraphbuilder/flowgraph_builder0179.js:3:10)
    node 10: read-variable['x',v10,-] (test/flowgraphbuilder/flowgraph_builder0179.js:3:15)
    node 11: +[v9,v10,v8] (test/flowgraphbuilder/flowgraph_builder0179.js:3:10)
    node 12: write-variable[v8,'gt']* (test/flowgraphbuilder/flowgraph_builder0179.js:3:5)
    ->[block 5]
  block 5:
    node 13: end-for-in(begin-node:4) (test/flowgraphbuilder/flowgraph_builder0179.js:3:15)
    ->[block 3]
  block 6:
    node 14: read-variable['dumpValue',v9,v8] (test/flowgraphbuilder/flowgraph_builder0179.js:5:1)
    node 15: read-variable['gt',v10,-] (test/flowgraphbuilder/flowgraph_builder0179.js:5:11)
    ->[block 7]
  block 7:
    node 16: call[v8,v9,v10,-]* (test/flowgraphbuilder/flowgraph_builder0179.js:5:1)
    ->[block 8]
  block 8:
    node 17: new[v11] (test/flowgraphbuilder/flowgraph_builder0179.js:6:5)
    node 18: constant[23.0,v12] (test/flowgraphbuilder/flowgraph_builder0179.js:6:8)
    node 19: write-property[v11,'b',v12] (test/flowgraphbuilder/flowgraph_builder0179.js:6:5)
    node 20: write-variable[v11,'g']* (test/flowgraphbuilder/flowgraph_builder0179.js:6:1)
    node 21: new[v14] (test/flowgraphbuilder/flowgraph_builder0179.js:7:11)
    ->[block 9]
  block 9:
    node 22: begin-for-in[v14,v15] (test/flowgraphbuilder/flowgraph_builder0179.js:7:1)
    ->[block 10]
  block 10:
    node 23: has-next[v15,v16] (test/flowgraphbuilder/flowgraph_builder0179.js:7:1)
    node 24: if[v16](true-block:11,false-block:13) (test/flowgraphbuilder/flowgraph_builder0179.js:7:1)
    ->[block 11,block 13]
  block 11:
    node 25: next-property[v15,v17] (test/flowgraphbuilder/flowgraph_builder0179.js:7:1)
    node 26: write-variable[v17,'x'] (test/flowgraphbuilder/flowgraph_builder0179.js:7:1)
    node 27: read-variable['g',v18,-] (test/flowgraphbuilder/flowgraph_builder0179.js:8:5)
    node 28: read-variable['x',v19,-] (test/flowgraphbuilder/flowgraph_builder0179.js:8:7)
    node 29: read-property[v18,v19,-] (test/flowgraphbuilder/flowgraph_builder0179.js:8:5)
    node 30: <variable-non-null-undef>['g']* (test/flowgraphbuilder/flowgraph_builder0179.js:8:5)
    ->[block 12]
  block 12:
    node 31: end-for-in(begin-node:22) (test/flowgraphbuilder/flowgraph_builder0179.js:8:7)
    ->[block 10]
  block 13: [exit-ordinary]
    node 32: return[v1] (test/flowgraphbuilder/flowgraph_builder0179.js:1:1)
    ->[]
  block 14: [exit-exceptional]
    node 33: exceptional-return (test/flowgraphbuilder/flowgraph_builder0179.js:1:1)
    ->[]

test/flowgraphbuilder/flowgraph_builder0179.js:6:5: [definite] Dead assignment, property b is never read
test/flowgraphbuilder/flowgraph_builder0179.js:5:1: [info] Abstract value: "crazy"
