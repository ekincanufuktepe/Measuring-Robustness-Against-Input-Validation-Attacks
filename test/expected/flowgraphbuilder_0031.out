fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0031.js:1:1)
    node 1: vardecl['x'] (test/flowgraphbuilder/flowgraph_builder0031.js:1:5)
    node 2: vardecl['y'] (test/flowgraphbuilder/flowgraph_builder0031.js:1:12)
    node 3: vardecl['z'] (test/flowgraphbuilder/flowgraph_builder0031.js:1:32)
    ->[block 1]
  block 1:
    node 4: constant[1.0,v2] (test/flowgraphbuilder/flowgraph_builder0031.js:1:9)
    node 5: write-variable[v2,'x']* (test/flowgraphbuilder/flowgraph_builder0031.js:1:9)
    node 6: read-variable['x',v5,-] (test/flowgraphbuilder/flowgraph_builder0031.js:1:16)
    node 7: constant[1.0,v6] (test/flowgraphbuilder/flowgraph_builder0031.js:1:21)
    node 8: ==[v5,v6,v4] (test/flowgraphbuilder/flowgraph_builder0031.js:1:16)
    node 9: if[v4](true-block:2,false-block:3) (test/flowgraphbuilder/flowgraph_builder0031.js:1:16)
    ->[block 2,block 3]
  block 2:
    node 10: constant[2.0,v3] (test/flowgraphbuilder/flowgraph_builder0031.js:1:25)
    ->[block 4]
  block 3:
    node 11: constant[3.0,v3] (test/flowgraphbuilder/flowgraph_builder0031.js:1:29)
    ->[block 4]
  block 4:
    node 12: write-variable[v3,'y']* (test/flowgraphbuilder/flowgraph_builder0031.js:1:16)
    node 13: constant[4.0,v7] (test/flowgraphbuilder/flowgraph_builder0031.js:1:36)
    node 14: write-variable[v7,'z']* (test/flowgraphbuilder/flowgraph_builder0031.js:1:36)
    ->[block 5]
  block 5: [exit-ordinary]
    node 15: return[v1] (test/flowgraphbuilder/flowgraph_builder0031.js:1:1)
    ->[]
  block 6: [exit-exceptional]
    node 16: exceptional-return (test/flowgraphbuilder/flowgraph_builder0031.js:1:1)
    ->[]

test/flowgraphbuilder/flowgraph_builder0031.js:1:16: [definite] The conditional expression is always true
test/flowgraphbuilder/flowgraph_builder0031.js:1:12: [definite] The variable y is never used
test/flowgraphbuilder/flowgraph_builder0031.js:1:32: [definite] The variable z is never used
