1 null /*!
14 null (function( window, undefined ) {
299 null 	map: function( callback ) {
598 null 	globalEval: function( data ) {
801 null 	proxy: function( fn, context ) {
830 null 	access: function( elems, fn, key, value, chainable, emptyGet, raw ) {
886 null jQuery.ready.promise = function( obj ) {
975 createOptions function createOptions( options ) {
1005 null jQuery.Callbacks = function( options ) {
1059 null 			add: function() {
1063 add 					(function add( args ) {
1090 null 			remove: function() {
1169 null 	Deferred: function( func ) {
1185 null 				then: function( /* fnDone, fnFail, fnProgress */ ) {
1187 null 					return jQuery.Deferred(function( newDefer ) {
1188 null 						jQuery.each( tuples, function( i, tuple ) {
1219 null 		jQuery.each( tuples, function( i, tuple ) {
1257 null 	when: function( subordinate /* , ..., subordinateN */ ) {
1269 null 			updateFunc = function( i, contexts, values ) {
1308 null jQuery.support = (function() {
1786 null 	data: function( key, value ) {
1822 null 		return jQuery.access( this, function( value ) {
1835 null 	removeData: function( key ) {
1909 null 	dequeue: function( elem, type ) {
1946 null 	_queueHooks: function( elem, type ) {
1958 null 	queue: function( type, data ) {
1984 null 	dequeue: function( type ) {
1991 null 	delay: function( time, type ) {
1995 null 		return this.queue( type, function( next, hooks ) {
2007 null 	promise: function( type, obj ) {
2051 null 	removeAttr: function( name ) {
2061 null 	removeProp: function( name ) {
2072 null 	addClass: function( value ) {
2111 null 	removeClass: function( value ) {
2149 null 	toggleClass: function( value, stateVal ) {
2203 null 	val: function( value ) {
2229 null 		return this.each(function( i ) {
2312 null 			set: function( elem, value ) {
2603 null 	jQuery.each([ "width", "height" ], function( i, name ) {
2619 null 	jQuery.each([ "href", "src", "width", "height" ], function( i, name ) {
2629 null 	jQuery.each([ "href", "src" ], function( i, name ) {
2679 null 	jQuery.each([ "radio", "checkbox" ], function() {
2688 null jQuery.each([ "radio", "checkbox" ], function() {
2719 null 	add: function( elem, types, handler, data, selector ) {
3417 null }, function( orig, fix ) {
3444 null 		setup: function() {
3451 null 			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
3492 null 		setup: function() {
3515 null 			jQuery.event.add( this, "beforeactivate._change", function( e ) {
3548 null 	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {
3573 null 	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
3629 null 	off: function( types, selector, fn ) {
3676 null 	trigger: function( type, data ) {
3694 null (function( window, undefined ) {
3852 createCache function createCache() {
4018 null setDocument = Sizzle.setDocument = function( node ) {
4108 null 		Expr.filter["ID"] = function( id ) {
4126 null 		Expr.filter["ID"] =  function( id ) {
4472 createInputPseudo function createInputPseudo( type ) {
4480 createButtonPseudo function createButtonPseudo( type ) {
4488 createPositionalPseudo function createPositionalPseudo( fn ) {
4489 null 	return markFunction(function( argument ) {
4636 null 		"TAG": function( nodeName ) {
4647 null 		"CLASS": function( className ) {
4657 null 		"ATTR": function( name, operator, check ) {
4681 null 		"CHILD": function( type, what, argument, first, last ) {
4770 null 		"PSEUDO": function( pseudo, argument ) {
4810 null 		"not": markFunction(function( selector ) {
4838 null 		"has": markFunction(function( selector ) {
4844 null 		"contains": markFunction(function( text ) {
4857 null 		"lang": markFunction( function( lang ) {
5092 addCombinator function addCombinator( matcher, combinator, base ) {
5142 elementMatcher function elementMatcher( matchers ) {
5177 setMatcher function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
5270 matcherFromTokens function matcherFromTokens( tokens ) {
5322 matcherFromGroupMatchers function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
5560 null 	find: function( selector ) {
5586 null 	has: function( target ) {
5729 null }, function( name, fn ) {
5789 winnow function winnow( elements, qualifier, keep ) {
5876 null 	text: function( value ) {
5884 null 	wrapAll: function( html ) {
5913 null 	wrapInner: function( html ) {
5933 null 	wrap: function( html ) {
5941 null 	unwrap: function() {
5949 null 	append: function() {
5957 null 	prepend: function() {
5965 null 	before: function() {
5973 null 	after: function() {
6029 null 	clone: function( dataAndEvents, deepDataAndEvents ) {
6038 null 	html: function( value ) {
6080 null 	replaceWith: function( value ) {
6104 null 	domManip: function( args, table, callback ) {
6333 null }, function( name, original ) {
6725 null 	css: function( name, value ) {
6753 null 	toggle: function( state ) {
7147 null jQuery.each([ "height", "width" ], function( i, name ) {
7149 null 		get: function( elem, computed, extra ) {
7222 null jQuery(function() {
7240 null 		jQuery.each( [ "top", "left" ], function( i, prop ) {
7275 null }, function( prefix, suffix ) {
7307 null 	serializeArray: function() {
7320 null 		.map(function( i, elem ){
7336 null jQuery.param = function( a, traditional ) {
7369 buildParams function buildParams( prefix, obj, traditional, add ) {
7398 null 	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {
7467 addToPrefiltersOrTransports function addToPrefiltersOrTransports( structure ) {
7499 inspectPrefiltersOrTransports function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {
7504 inspect 	function inspect( dataType ) {
7542 null jQuery.fn.load = function( url, params, callback ) {
7600 null jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ){
7606 null jQuery.each( [ "get", "post" ], function( i, method ) {
7717 null 	ajax: function( url, options ) {
8290 null jQuery.ajaxTransport( "script", function(s) {
8300 null 			send: function( _, callback ) {
8362 null jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {
8475 null 	jQuery.ajaxTransport(function( s ) {
8482 null 				send: function( headers, complete ) {
8685 createFxNow function createFxNow() {
8692 createTweens function createTweens( animation, props ) {
8707 Animation function Animation( elem, properties, options ) {
8878 defaultPrefilter function defaultPrefilter( elem, props, opts ) {
8903 null 		anim.always(function() {
9099 null jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
9117 null 	animate: function( prop, speed, easing, callback ) {
9120 null 			doAnimation = function() {
9137 null 	stop: function( type, clearQueue, gotoEnd ) {
9187 null 	finish: function( type ) {
9259 null }, function( name, props ) {
9265 null jQuery.speed = function( speed, easing, fn ) {
9359 null 	jQuery.expr.filters.animated = function( elem ) {
9365 null jQuery.fn.offset = function( options ) {
9488 null 	offsetParent: function() {
9501 null jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
9504 null 	jQuery.fn[ method ] = function( val ) {
9535 null jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
9536 null 	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
9538 null 		jQuery.fn[ funcName ] = function( margin, value ) {
60 null 	jQuery = function( selector, context ) {
94 null 	fcamelCase = function( all, letter ) {
99 null 	completed = function( event ) {
108 null 	detach = function() {
124 null 	init: function( selector, context, rootjQuery ) {
232 null 	size: function() {
236 null 	toArray: function() {
242 null 	get: function( num ) {
254 null 	pushStack: function( elems ) {
270 null 	each: function( callback, args ) {
274 null 	ready: function( fn ) {
281 null 	slice: function() {
285 null 	first: function() {
289 null 	last: function() {
293 null 	eq: function( i ) {
300 null 		return this.pushStack( jQuery.map(this, function( elem, i ) {
305 null 	end: function() {
319 null jQuery.extend = jQuery.fn.extend = function() {
384 null 	noConflict: function( deep ) {
404 null 	holdReady: function( hold ) {
413 null 	ready: function( wait ) {
445 null 	isFunction: function( obj ) {
449 null 	isArray: Array.isArray || function( obj ) {
453 null 	isWindow: function( obj ) {
457 null 	isNumeric: function( obj ) {
461 null 	type: function( obj ) {
470 null 	isPlainObject: function( obj ) {
499 null 	isEmptyObject: function( obj ) {
507 null 	error: function( msg ) {
514 null 	parseHTML: function( data, context, keepScripts ) {
539 null 	parseJSON: function( data ) {
570 null 	parseXML: function( data ) {
593 null 	noop: function() {},
603 null 			( window.execScript || function( data ) {
611 null 	camelCase: function( string ) {
615 null 	nodeName: function( elem, name ) {
620 null 	each: function( obj, callback, args ) {
671 null 		function( text ) {
678 null 		function( text ) {
685 null 	makeArray: function( arr, results ) {
702 null 	inArray: function( elem, arr, i ) {
724 null 	merge: function( first, second ) {
744 null 	grep: function( elems, callback, inv ) {
764 null 	map: function( elems, callback, arg ) {
818 null 		proxy = function() {
859 null 					fn = function( elem, key, value ) {
881 null 	now: function() {
923 doScrollCheck 				(function doScrollCheck() {
948 null jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
952 isArraylike function isArraylike( obj ) {
977 null 	jQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) {
1030 null 		fire = function( data ) {
1064 null 						jQuery.each( args, function( _, arg ) {
1092 null 					jQuery.each( arguments, function( _, arg ) {
1112 null 			has: function( fn ) {
1116 null 			empty: function() {
1121 null 			disable: function() {
1126 null 			disabled: function() {
1130 null 			lock: function() {
1138 null 			locked: function() {
1142 null 			fireWith: function( context, args ) {
1155 null 			fire: function() {
1160 null 			fired: function() {
1178 null 				state: function() {
1181 null 				always: function() {
1192 null 							deferred[ tuple[1] ](function() {
1209 null 				promise: function( obj ) {
1228 null 				list.add(function() {
1237 null 			deferred[ tuple[0] ] = function() {
1270 null 				return function( value ) {
1435 null 		div.attachEvent( "onclick", function() {
1455 null 	jQuery(function() {
1552 internalData function internalData( elem, name, data, pvt /* Internal Use Only */ ){
1646 internalRemoveData function internalRemoveData( elem, name, pvt ) {
1749 null 	hasData: function( elem ) {
1754 null 	data: function( elem, name, data ) {
1758 null 	removeData: function( elem, name ) {
1763 null 	_data: function( elem, name, data ) {
1767 null 	_removeData: function( elem, name ) {
1772 null 	acceptData: function( elem ) {
1817 null 			return this.each(function() {
1829 null 			this.each(function() {
1836 null 		return this.each(function() {
1842 dataAttr function dataAttr( elem, key, data ) {
1874 isEmptyDataObject function isEmptyDataObject( obj ) {
1890 null 	queue: function( elem, type, data ) {
1916 null 			next = function() {
1949 null 			empty: jQuery.Callbacks("once memory").add(function() {
1973 null 			this.each(function() {
1985 null 		return this.each(function() {
1997 null 			hooks.stop = function() {
2002 null 	clearQueue: function( type ) {
2013 null 			resolve = function() {
2047 null 	attr: function( name, value ) {
2052 null 		return this.each(function() {
2057 null 	prop: function( name, value ) {
2063 null 		return this.each(function() {
2079 null 			return this.each(function( j ) {
2118 null 			return this.each(function( j ) {
2154 null 			return this.each(function( i ) {
2159 null 		return this.each(function() {
2190 null 	hasClass: function( selector ) {
2249 null 				val = jQuery.map(val, function ( value ) {
2267 null 			get: function( elem ) {
2275 null 			get: function( elem ) {
2315 null 				jQuery(elem).find("option").each(function() {
2327 null 	attr: function( elem, name, value ) {
2381 null 	removeAttr: function( elem, value ) {
2413 null 			set: function( elem, value ) {
2443 null 	prop: function( elem, name, value ) {
2480 null 			get: function( elem ) {
2497 null 	get: function( elem, name ) {
2521 null 	set: function( elem, value, name ) {
2541 null 		get: function( elem, name ) {
2550 null 		set: function( elem, value, name ) {
2568 null 		get: function( elem, name ) {
2574 null 		set: function( elem, value, name ) {
2596 null 		set: function( elem, value, name ) {
2605 null 			set: function( elem, value ) {
2621 null 			get: function( elem ) {
2631 null 			get: function( elem ) {
2640 null 		get: function( elem ) {
2646 null 		set: function( elem, value ) {
2656 null 		get: function( elem ) {
2681 null 			get: function( elem ) {
2690 null 		set: function( elem, value ) {
2703 returnTrue function returnTrue() {
2707 returnFalse function returnFalse() {
2747 null 			eventHandle = elemData.handle = function( e ) {
2829 null 	remove: function( elem, types, handler, selector, mappedTypes ) {
2902 null 	trigger: function( event, data, elem, onlyHandlers ) {
3036 null 	dispatch: function( event ) {
3095 null 	handlers: function( event, handlers ) {
3142 null 	fix: function( event ) {
3195 null 		filter: function( event, original ) {
3208 null 		filter: function( event, original ) {
3245 null 			trigger: function() {
3254 null 			trigger: function() {
3269 null 			trigger: function() {
3279 null 			postDispatch: function( event ) {
3289 null 	simulate: function( type, elem, event, bubble ) {
3313 null 	function( elem, type, handle ) {
3318 null 	function( elem, type, handle ) {
3333 null jQuery.Event = function( src, props ) {
3373 null 	preventDefault: function() {
3391 null 	stopPropagation: function() {
3407 null 	stopImmediatePropagation: function() {
3422 null 		handle: function( event ) {
3456 null 					jQuery.event.add( form, "submit._submit", function( event ) {
3465 null 		postDispatch: function( event ) {
3475 null 		teardown: function() {
3499 null 					jQuery.event.add( this, "propertychange._change", function( event ) {
3504 null 					jQuery.event.add( this, "click._change", function( event ) {
3519 null 					jQuery.event.add( elem, "change._change", function( event ) {
3529 null 		handle: function( event ) {
3538 null 		teardown: function() {
3552 null 			handler = function( event ) {
3557 null 			setup: function() {
3562 null 			teardown: function() {
3614 null 			fn = function( event ) {
3622 null 		return this.each( function() {
3626 null 	one: function( types, selector, data, fn ) {
3656 null 		return this.each(function() {
3661 null 	bind: function( types, data, fn ) {
3664 null 	unbind: function( types, fn ) {
3668 null 	delegate: function( selector, types, data, fn ) {
3671 null 	undelegate: function( selector, types, fn ) {
3677 null 		return this.each(function() {
3681 null 	triggerHandler: function( type, data ) {
3736 null 	indexOf = arr.indexOf || function( elem ) {
3812 null 	funescape = function( _, escaped ) {
3828 null 	slice = function( i ) {
3842 isNative function isNative( fn ) {
3856 null 	return (cache = function( key, value ) {
3870 markFunction function markFunction( fn ) {
3879 assert function assert( fn ) {
3892 Sizzle function Sizzle( selector, context, results, seed ) {
4006 null isXML = Sizzle.isXML = function( elem ) {
4034 null 	support.tagNameNoComments = assert(function( div ) {
4040 null 	support.attributes = assert(function( div ) {
4048 null 	support.getByClassName = assert(function( div ) {
4062 null 	support.getByName = assert(function( div ) {
4083 null 	Expr.attrHandle = assert(function( div ) {
4090 null 			"href": function( elem ) {
4093 null 			"type": function( elem ) {
4100 null 		Expr.find["ID"] = function( id, context ) {
4110 null 			return function( elem ) {
4115 null 		Expr.find["ID"] = function( id, context ) {
4128 null 			return function( elem ) {
4137 null 		function( tag, context ) {
4142 null 		function( tag, context ) {
4162 null 	Expr.find["NAME"] = support.getByName && function( tag, context ) {
4169 null 	Expr.find["CLASS"] = support.getByClassName && function( className, context ) {
4188 null 		assert(function( div ) {
4209 null 		assert(function( div ) {
4236 null 		assert(function( div ) {
4255 null 		function( a, b ) {
4264 null 		function( a, b ) {
4277 null 	function( a, b ) {
4300 null 	function( a, b ) {
4360 null Sizzle.matches = function( expr, elements ) {
4364 null Sizzle.matchesSelector = function( elem, expr ) {
4391 null Sizzle.contains = function( context, elem ) {
4399 null Sizzle.attr = function( elem, name ) {
4421 null Sizzle.error = function( msg ) {
4426 null Sizzle.uniqueSort = function( results ) {
4450 siblingCheck function siblingCheck( a, b ) {
4473 null 	return function( elem ) {
4481 null 	return function( elem ) {
4491 null 		return markFunction(function( seed, matches ) {
4510 null getText = Sizzle.getText = function( elem ) {
4560 null 		"ATTR": function( match ) {
4573 null 		"CHILD": function( match ) {
4605 null 		"PSEUDO": function( match ) {
4638 null 				return function() { return true; };
4642 null 			return function( elem ) {
4652 null 				classCache( className, function( elem ) {
4658 null 			return function( elem ) {
4689 null 				function( elem ) {
4693 null 				function( elem, context, xml ) {
4790 null 					markFunction(function( seed, matches ) {
4799 null 					function( elem ) {
4819 null 				markFunction(function( seed, matches, context, xml ) {
4831 null 				function( elem, context, xml ) {
4839 null 			return function( elem ) {
4845 null 			return function( elem ) {
4863 null 			return function( elem ) {
4879 null 		"target": function( elem ) {
4884 null 		"root": function( elem ) {
4888 null 		"focus": function( elem ) {
4893 null 		"enabled": function( elem ) {
4897 null 		"disabled": function( elem ) {
4901 null 		"checked": function( elem ) {
4908 null 		"selected": function( elem ) {
4919 null 		"empty": function( elem ) {
4933 null 		"parent": function( elem ) {
4938 null 		"header": function( elem ) {
4942 null 		"input": function( elem ) {
4946 null 		"button": function( elem ) {
4951 null 		"text": function( elem ) {
4961 null 		"first": createPositionalPseudo(function() {
4965 null 		"last": createPositionalPseudo(function( matchIndexes, length ) {
4969 null 		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
4973 null 		"even": createPositionalPseudo(function( matchIndexes, length ) {
4981 null 		"odd": createPositionalPseudo(function( matchIndexes, length ) {
4989 null 		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
4997 null 		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
5015 tokenize function tokenize( selector, parseOnly ) {
5082 toSelector function toSelector( tokens ) {
5099 null 		function( elem, context, xml ) {
5108 null 		function( elem, context, xml ) {
5144 null 		function( elem, context, xml ) {
5156 condense function condense( unmatched, map, filter, context, xml ) {
5184 null 	return markFunction(function( seed, results, context, xml ) {
5278 null 		matchContext = addCombinator( function( elem ) {
5281 null 		matchAnyContext = addCombinator( function( elem ) {
5284 null 		matchers = [ function( elem, context, xml ) {
5327 null 		superMatcher = function( seed, context, xml, results, expandContext ) {
5423 null compile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {
5450 multipleContexts function multipleContexts( selector, contexts, results ) {
5459 select function select( selector, context, results, seed ) {
5528 setFilters function setFilters() {}
5566 null 			return this.pushStack( jQuery( selector ).filter(function() {
5591 null 		return this.filter(function() {
5600 null 	not: function( selector ) {
5604 null 	filter: function( selector ) {
5608 null 	is: function( selector ) {
5619 null 	closest: function( selectors, context ) {
5645 null 	index: function( elem ) {
5663 null 	add: function( selector, context ) {
5672 null 	addBack: function( selector ) {
5681 sibling function sibling( cur, dir ) {
5690 null 	parent: function( elem ) {
5694 null 	parents: function( elem ) {
5697 null 	parentsUntil: function( elem, i, until ) {
5700 null 	next: function( elem ) {
5703 null 	prev: function( elem ) {
5706 null 	nextAll: function( elem ) {
5709 null 	prevAll: function( elem ) {
5712 null 	nextUntil: function( elem, i, until ) {
5715 null 	prevUntil: function( elem, i, until ) {
5718 null 	siblings: function( elem ) {
5721 null 	children: function( elem ) {
5724 null 	contents: function( elem ) {
5730 null 	jQuery.fn[ name ] = function( until, selector ) {
5752 null 	filter: function( expr, elems, not ) {
5762 null 	dir: function( elem, dir, until ) {
5775 null 	sibling: function( n, elem ) {
5796 null 		return jQuery.grep(elements, function( elem, i ) {
5802 null 		return jQuery.grep(elements, function( elem ) {
5807 null 		var filtered = jQuery.grep(elements, function( elem ) {
5818 null 	return jQuery.grep(elements, function( elem ) {
5822 createSafeFragment function createSafeFragment( document ) {
5877 null 		return jQuery.access( this, function( value ) {
5886 null 			return this.each(function(i) {
5899 null 			wrap.map(function() {
5915 null 			return this.each(function(i) {
5920 null 		return this.each(function() {
5936 null 		return this.each(function(i) {
5942 null 		return this.parent().each(function() {
5950 null 		return this.domManip(arguments, true, function( elem ) {
5958 null 		return this.domManip(arguments, true, function( elem ) {
5966 null 		return this.domManip( arguments, false, function( elem ) {
5974 null 		return this.domManip( arguments, false, function( elem ) {
5982 null 	remove: function( selector, keepData ) {
6004 null 	empty: function() {
6033 null 		return this.map( function () {
6039 null 		return jQuery.access( this, function( value ) {
6089 null 		return this.domManip( [ value ], true, function( elem ) {
6100 null 	detach: function( selector ) {
6120 null 			return this.each(function( index ) {
6203 findOrAppend function findOrAppend( elem, tag ) {
6208 disableScript function disableScript( elem ) {
6213 restoreScript function restoreScript( elem ) {
6224 setGlobalEval function setGlobalEval( elems, refElements ) {
6232 cloneCopyEvent function cloneCopyEvent( src, dest ) {
6260 fixCloneNodeIssues function fixCloneNodeIssues( src, dest ) {
6334 null 	jQuery.fn[ name ] = function( selector ) {
6353 getAll function getAll( context, tag ) {
6376 fixDefaultChecked function fixDefaultChecked( elem ) {
6383 null 	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
6438 null 	buildFragment: function( elems, context, scripts, selection ) {
6565 null 	cleanData: function( elems, /* internal */ acceptData ) {
6641 vendorPropName function vendorPropName( style, name ) {
6663 isHidden function isHidden( elem, el ) {
6670 showHide function showHide( elements, show ) {
6726 null 		return jQuery.access( this, function( elem, name, value ) {
6747 null 	show: function() {
6750 null 	hide: function() {
6756 null 		return this.each(function() {
6771 null 			get: function( elem, computed ) {
6802 null 	style: function( elem, name, value, extra ) {
6867 null 	css: function( elem, name, extra, styles ) {
6902 null 	swap: function( elem, options, callback, args ) {
6926 null 	getStyles = function( elem ) {
6930 null 	curCSS = function( elem, name, _computed ) {
6969 null 	getStyles = function( elem ) {
6973 null 	curCSS = function( elem, name, _computed ) {
7017 setPositiveNumber function setPositiveNumber( elem, value, subtract ) {
7025 augmentWidthOrHeight function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
7064 getWidthOrHeight function getWidthOrHeight( elem, name, extra ) {
7108 css_defaultDisplay function css_defaultDisplay( nodeName ) {
7140 actualDisplay function actualDisplay( name, doc ) {
7154 null 					jQuery.swap( elem, cssShow, function() {
7161 null 		set: function( elem, value, extra ) {
7178 null 		get: function( elem, computed ) {
7185 null 		set: function( elem, value ) {
7225 null 			get: function( elem, computed ) {
7242 null 				get: function( elem, computed ) {
7258 null 	jQuery.expr.filters.hidden = function( elem ) {
7265 null 	jQuery.expr.filters.visible = function( elem ) {
7277 null 		expand: function( value ) {
7304 null 	serialize: function() {
7308 null 		return this.map(function(){
7313 null 		.filter(function(){
7326 null 					jQuery.map( val, function( val ){
7339 null 		add = function( key, value ) {
7353 null 		jQuery.each( a, function() {
7374 null 		jQuery.each( obj, function( i, v ) {
7401 null 	jQuery.fn[ name ] = function( data, fn ) {
7408 null jQuery.fn.hover = function( fnOver, fnOut ) {
7470 null 	return function( dataTypeExpression, func ) {
7507 null 		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
7526 ajaxExtend function ajaxExtend( target, src ) {
7577 null 		}).done(function( responseText ) {
7591 null 		}).complete( callback && function( jqXHR, status ) {
7601 null 	jQuery.fn[ type ] = function( fn ){
7607 null 	jQuery[ method ] = function( url, data, callback, type ) {
7703 null 	ajaxSetup: function( target, settings ) {
7770 null 				getResponseHeader: function( key ) {
7785 null 				getAllResponseHeaders: function() {
7790 null 				setRequestHeader: function( name, value ) {
7800 null 				overrideMimeType: function( type ) {
7808 null 				statusCode: function( map ) {
7825 null 				abort: function( statusText ) {
7972 null 				timeoutTimer = setTimeout(function() {
7992 done 		function done( status, nativeStatusText, responses, headers ) {
8104 null 	getScript: function( url, callback ) {
8108 null 	getJSON: function( url, data, callback ) {
8118 ajaxHandleResponses function ajaxHandleResponses( s, jqXHR, responses ) {
8179 ajaxConvert function ajaxConvert( s, response ) {
8271 null 		"text script": function( text ) {
8279 null jQuery.ajaxPrefilter( "script", function( s ) {
8313 null 				script.onload = script.onreadystatechange = function( _, isAbort ) {
8340 null 			abort: function() {
8354 null 	jsonpCallback: function() {
8386 null 		s.converters["script json"] = function() {
8398 null 		window[ callbackName ] = function() {
8403 null 		jqXHR.always(function() {
8431 null 	xhrOnUnloadAbort = window.ActiveXObject && function() {
8440 createStandardXHR function createStandardXHR() {
8446 createActiveXHR function createActiveXHR() {
8461 null 	function() {
8530 null 					callback = function( _, isAbort ) {
8626 null 				abort: function() {
8641 null 		"*": [function( prop, value ) {
8686 null 	setTimeout(function() {
8693 null 	jQuery.each( props, function( prop, value ) {
8712 null 		deferred = jQuery.Deferred().always( function() {
8716 null 		tick = function() {
8750 null 			createTween: function( prop, end ) {
8756 null 			stop: function( gotoEnd ) {
8811 propFilter function propFilter( props, specialEasing ) {
8850 null 	tweener: function( props, callback ) {
8869 null 	prefilter: function( callback, prepend ) {
8895 null 			hooks.empty.fire = function() {
8906 null 			anim.always(function() {
8942 null 			anim.always(function() {
8978 null 			anim.done(function() {
8982 null 		anim.done(function() {
9005 Tween function Tween( elem, options, prop, end, easing ) {
9012 null 	init: function( elem, options, prop, end, easing, unit ) {
9021 null 	cur: function() {
9028 null 	run: function( percent ) {
9058 null 		get: function( tween ) {
9074 null 		set: function( tween ) {
9092 null 	set: function( tween ) {
9101 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9109 null 	fadeTo: function( speed, to, easing, callback ) {
9123 null 				doAnimation.finish = function() {
9138 null 		var stopQueue = function( hooks ) {
9153 null 		return this.each(function() {
9191 null 		return this.each(function() {
9231 genFx function genFx( type, includeWidth ) {
9260 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9284 null 	opt.complete = function() {
9298 null 	linear: function( p ) {
9301 null 	swing: function( p ) {
9308 null jQuery.fx.tick = function() {
9329 null jQuery.fx.timer = function( timer ) {
9337 null jQuery.fx.start = function() {
9343 null jQuery.fx.stop = function() {
9360 null 		return jQuery.grep(jQuery.timers, function( fn ) {
9369 null 			this.each(function( i ) {
9404 null 	setOffset: function( elem, options, i ) {
9451 null 	position: function() {
9489 null 		return this.map(function() {
9505 null 		return jQuery.access( this, function( elem, method, val ) {
9527 getWindow function getWindow( elem ) {
9542 null 			return jQuery.access( this, function( elem, type, value ) {
9595 null 	define( "jquery", [], function () { return jQuery; } );
19 runRichards // Support: Firefox 18+
73 getTime 
88 Scheduler 	// Matches dashed string for camelizing
249 TaskControlBlock 			( num < 0 ? this[ this.length + num ] : this[ num ] );
357 IdleTask 
385 DeviceTask 		if ( window.$ === jQuery ) {
413 WorkerTask 	ready: function( wait ) {
448 HandlerTask 
504 Packet 		return true;
115 null 			window.detachEvent( "onload", completed );
125 null 		var match, elem;
135 null 				// Assume that strings that start and end with <> are HTML and skip the regex check
145 null 				// HANDLE: $(html) -> $(array)
156 null 					// HANDLE: $(html, props)
168 null 					}
177 null 					// nodes that are no longer in the document #6963
193 null 				}
209 null 			return this;
219 null 			this.context = selector.context;
230 null 
286 null 		return this.eq( 0 );
290 null 		return this.eq( -1 );
294 null 		var len = this.length,
298 null 
302 null 		}));
306 null 		return this.prevObject || this.constructor(null);
313 null 	splice: [].splice
334 null 	// Handle case when target is a string or something (possible in deep copy)
345 null 	for ( ; i < length; i++ ) {
363 null 
375 null 			}
390 null 			window.jQuery = _jQuery;
402 null 
419 null 
439 null 		}
454 null 		return obj != null && obj == obj.window;
482 null 				!core_hasOwn.call(obj.constructor.prototype, "isPrototypeOf") ) {
516 null 			return null;
526 null 
9 Benchmark  * Released under the MIT license
15 time 
27 error 
35 doFib 
40 fib 	_$ = window.$,
51 loop 	core_concat = core_deletedIds.concat,
69 TowersDisk 	core_rnotwhite = /\S+/g,
74 towersPush 	// A simple way to check for HTML strings
82 towersPop 	// JSON RegExp
90 towersMoveTop 	rdashAlpha = /-([\da-z])/gi,
95 towersMove 		return letter.toUpperCase();
106 towersBuild 	},
112 towers 
127 doSieve 		// HANDLE: $(""), $(null), $(undefined), $(false)
139 sieve 				match = rquickExpr.exec( selector );
154 swap 					) );
160 doPermute 							if ( jQuery.isFunction( this[ match ] ) ) {
172 permute 				// HANDLE: $(#id)
186 tryQueens 						this.length = 1;
211 queens 		// HANDLE: $(function)
232 recurse 	size: function() {
244 doSum 
250 sum 	},
263 random 		// Return the newly-formed element set
268 SortData 	// (You can seed the arguments with an array of args, but this is
287 check 	},
301 doBubblesort 			return callback.call( elem, i, elem );
313 bubblesort 	splice: [].splice
325 doQuicksort 
344 quicksort 
356 TreeNode 				}
378 treesort 
393 tak 		return jQuery;
404 ListElement 	holdReady: function( hold ) {
409 makeList 		}
414 isShorter 
424 doTakl 
434 takl 		readyList.resolveWith( document, [ jQuery ] );
238 null 	},
362 null 						clone = src && jQuery.isArray(src) ? src : [];
372 null 				} else if ( copy !== undefined ) {
398 null 
52 BigInteger 	core_push = core_deletedIds.push,
61 nbi 		// The jQuery object is actually just the init constructor 'enhanced'
71 am1 	// Make sure we trim BOM and NBSP (here's looking at you, Safari 5.0 and IE)
85 am2 	rvalidescape = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,
102 am3 		if ( document.addEventListener || event.type === "load" || document.readyState === "complete" ) {
120 am4 	// The current version of jQuery being used
194 int2char 
195 intAt 			// HANDLE: $(expr, $(...))
201 bnpCopyTo 			} else {
211 bnpFromInt 		// HANDLE: $(function)
222 nbv 		return jQuery.makeArray( selector, this );
225 bnpFromString 	// Start with an empty selector
265 bnpClamp 	},
272 bnToString 	},
303 bnNegate 	},
306 bnAbs 		return this.prevObject || this.constructor(null);
309 bnCompareTo 	// For internal use only.
323 nbits 		length = arguments.length,
334 bnBitLength 	// Handle case when target is a string or something (possible in deep copy)
341 bnpDLShiftTo 		target = this;
352 bnpDRShiftTo 
361 bnpLShiftTo 						copyIsArray = false;
380 bnpRShiftTo 	return target;
400 bnpSubTo 	// the ready event fires. See #6781
437 bnpMultiplyTo 		if ( jQuery.fn.trigger ) {
453 bnpSquareTo 	isWindow: function( obj ) {
474 bnpDivRemTo 		if ( !obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
527 bnMod 		// Single tag
535 Classic 		}
536 cConvert 		return jQuery.merge( [], parsed.childNodes );
540 cRevert 		// Attempt to parse using the native JSON parser first
541 cReduce 		if ( window.JSON && window.JSON.parse ) {
542 cMulTo 			return window.JSON.parse( data );
543 cSqrTo 		}
561 bnpInvDigit 					return ( new Function( "return " + data ) )();
578 Montgomery 				xml = tmp.parseFromString( data , "text/xml" );
588 montConvert 			jQuery.error( "Invalid XML: " + data );
597 montRevert 	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context
605 montReduce 			} )( data );
625 montSqrTo 
628 montMulTo 				for ( ; i < length; i++ ) {
637 bnpIsEven 					value = callback.apply( obj[ i ], args );
643 bnpExp 			}
656 bnModPowInt 				for ( i in obj ) {
698 bnClone 
701 bnIntValue 
714 bnByteValue 				// Skip accessing in sparse arrays
720 bnShortValue 
726 bnpChunkSize 			i = first.length,
729 bnSigNum 		if ( typeof l === "number" ) {
737 bnpToRadix 		}
752 bnpFromRadix 		// that pass the validator function
779 bnpFromNumber 			}
805 bnToByteArray 			tmp = fn[ context ];
830 bnEquals 	access: function( elems, fn, key, value, chainable, emptyGet, raw ) {
831 bnMin 		var i = 0,
832 bnMax 			length = elems.length,
835 bnpBitwiseTo 		// Sets many values
856 op_and 				// ...except when executing function values
857 bnAnd 				} else {
860 op_or 						return bulk.call( jQuery( elem ), value );
861 bnOr 					};
864 op_xor 
865 bnXor 			if ( fn ) {
868 op_andnot 				}
869 bnAndNot 			}
872 bnNot 		return chainable ?
884 bnShiftLeft });
891 bnShiftRight 		// Catch cases where $(document).ready() is called after the browser event has already occurred.
898 lbit 		// Standards-based browsers support DOMContentLoaded
910 bnGetLowestSetBit 
919 cbit 				top = window.frameElement == null && document.documentElement;
926 bnBitCount 						try {
933 bnTestBit 
941 bnpChangeBit 			}
948 bnSetBit jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
951 bnClearBit 
954 bnFlipBit 		type = jQuery.type( obj );
957 bnpAddTo 		return false;
993 bnAdd  *
996 bnSubtract  *	memory:			will keep track of previous values and will call any callback added
999 bnMultiply  *
1002 bnDivide  *	stopOnFalse:	interrupt callings when a callback returns false
1005 bnRemainder jQuery.Callbacks = function( options ) {
1008 bnDivideAndRemainder 	// (we check in cache first)
1015 bnpDMultiply 		// Last fire value (for non-forgettable lists)
1023 bnpDAddOffset 		// First callback to fire (used internally by add and fireWith)
1035 NullExp 			firingLength = list.length;
1036 nNop 			firing = true;
1037 nMulTo 			for ( ; list && firingIndex < firingLength; firingIndex++ ) {
1038 nSqrTo 				if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {
1046 bnPow 					if ( stack.length ) {
1050 bnpMultiplyLowerTo 					list = [];
1065 bnpMultiplyUpperTo 							var type = jQuery.type( arg );
1079 Barrett 						firingLength = list.length;
1088 barrettConvert 			},
1094 barrettRevert 						while( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
1097 barrettReduce 							if ( firing ) {
1108 barrettSqrTo 				return this;
1111 barrettMulTo 			// If no argument is given, return whether or not list has callbacks attached.
1120 bnModPow 			// Have the list do nothing anymore
1180 bnGCD 				},
1208 bnpModInt 				// If obj is provided, the promise aspect is added to the object
1219 bnModInverse 		jQuery.each( tuples, function( i, tuple ) {
1264 bnIsProbablePrime 
1284 bnpMillerRabin 		if ( length > 1 ) {
1367 Arcfour 		// Make sure that a selected-by-default option has a working selected property.
1374 ARC4init 		// Makes sure cloning an html5 element does not cause problems
1389 ARC4next 	};
1403 prng_newstate 	} catch( e ) {
1421 rng_seed_int 	fragment = document.createDocumentFragment();
1430 rng_seed_time 
1450 rng_get_byte 	div.style.backgroundClip = "content-box";
1464 rng_get_bytes 
1469 SecureRandom 
1475 parseBigInt 		// display:none (it is still safe to use offsets if a parent element is
1479 linebrk 		tds[ 0 ].style.cssText = "padding:0;margin:0;border:0;display:none";
1489 byte2Hex 		// Check box-sizing and margin behavior
1497 pkcs1pad2 			support.pixelPosition = ( window.getComputedStyle( div, null ) || {} ).top !== "1%";
1519 RSAKey 			div.style.cssText = divReset + "width:1px;padding:1px;display:inline;zoom:1";
1531 RSASetPublic 				// Prevent IE from shrinking the body in IE 7 mode #12869
1541 RSADoPublic 	});
1546 RSAEncrypt 	return support;
1571 pkcs1unpad2 		id = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey;
1587 RSASetPrivate 	}
1598 RSASetPrivateEx 
1614 RSAGenerate 	if ( !pvt ) {
1648 RSADoPrivate 		return;
1663 RSADecrypt 
1707 encrypt 
1718 decrypt 
141 null 
159 null 							// Properties of context are called as methods if possible
32 Vector 	// Use the correct document accordingly with window argument (sandbox)
77 Strength 	rquickExpr = /^(?:(<[\w\W]+>)[^>]*|#([\w-]*))$/,
129 Constraint 			return this;
188 UnaryConstraint 					}
269 StayConstraint 	// only used internally.)
287 EditConstraint 	},
317 BinaryConstraint jQuery.fn.init.prototype = jQuery.fn;
431 ScaleConstraint 		}
490 EqualityConstraint 		// Own properties are enumerated firstly, so to speed up,
513 Variable 	// keepScripts (optional): If true, will include scripts passed in the html string
546 Planner 			return data;
733 Plan 		} else {
773 chainTest 			for ( ; i < length; i++ ) {
807 projectionTest 			fn = tmp;
838 change 			for ( i in key ) {
853 deltaBlue 					fn.call( elems, value );
25 null 	// A central reference to the root jQuery(document)
36 null 	// Map over jQuery in case of overwrite
40 null 	_$ = window.$,
44 null 
48 null 	core_version = "1.9.1",
52 null 	core_push = core_deletedIds.push,
82 null 	// JSON RegExp
86 null 	rvalidtokens = /"[^"\\\r\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g,
90 null 	rdashAlpha = /-([\da-z])/gi,
94 null 	fcamelCase = function( all, letter ) {
98 null 	// The ready event handler
136 null 				match = [ null, selector, null ];
148 null 
166 null 							}
176 null 					// Check parentNode to catch when Blackberry 4.6 returns
26 Inheriter 	rootjQuery,
200 null 			// (which is just equivalent to: $(context).find(expr)
209 null 			return this;
217 null 		if ( selector.selector !== undefined ) {
221 null 
228 null 	// The default length of a jQuery object is 0
237 null 		return core_slice.call( this );
246 null 			this.toArray() :
250 null 	},
254 null 	pushStack: function( elems ) {
275 null 		// Add the callback
296 null 		return this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );
300 null 		return this.pushStack( jQuery.map(this, function( elem, i ) {
332 null 	}
357 null 
366 null 					}
373 null 					target[ name ] = copy;
380 null 	return target;
387 null 		}
396 null 	// Is the DOM ready to be used? Set to true once it occurs.
406 null 			jQuery.readyWait++;
410 null 	},
415 null 		// Abort if there are pending holds or we're already ready
443 null 	// Since version 1.3, DOM methods and functions like alert
449 null 	isArray: Array.isArray || function( obj ) {
455 null 	},
463 null 			return String( obj );
476 null 		}
499 null 	isEmptyObject: function( obj ) {
527 null 		// Single tag
534 null 			jQuery( scripts ).remove();
564 null 		}
582 null 				xml.loadXML( data );
601 null 			// We use an anonymous function so that context is window
624 null 			isArray = isArraylike( obj );
643 null 			}
667 null 	},
688 null 		if ( arr != null ) {
714 null 				// Skip accessing in sparse arrays
737 null 		}
741 null 		return first;
745 null 		var retVal,
749 null 		inv = !!inv;
9 GeneratePayloadTree  * Released under the MIT license
24 GenerateKey 
31 InsertNewNode 
43 SplaySetup 	class2type = {},
49 SplayTearDown 
71 SplayRun 	// Make sure we trim BOM and NBSP (here's looking at you, Safari 5.0 and IE)
90 SplayTree 	rdashAlpha = /-([\da-z])/gi,
106 null 	},
119 null jQuery.fn = jQuery.prototype = {
152 null 						context && context.nodeType ? context.ownerDocument || context : document,
183 null 						}
196 null 			} else if ( !context || context.jquery ) {
218 null 			this.selector = selector.selector;
237 null 		return core_slice.call( this );
305 null 	end: function() {
330 null 		// skip the boolean and the target
221 null 
1 null /*!
14 null (function( window, undefined ) {
299 null 	map: function( callback ) {
598 null 	globalEval: function( data ) {
801 null 	proxy: function( fn, context ) {
830 null 	access: function( elems, fn, key, value, chainable, emptyGet, raw ) {
886 null jQuery.ready.promise = function( obj ) {
975 createOptions function createOptions( options ) {
1005 null jQuery.Callbacks = function( options ) {
1059 null 			add: function() {
1063 add 					(function add( args ) {
1090 null 			remove: function() {
1169 null 	Deferred: function( func ) {
1185 null 				then: function( /* fnDone, fnFail, fnProgress */ ) {
1187 null 					return jQuery.Deferred(function( newDefer ) {
1188 null 						jQuery.each( tuples, function( i, tuple ) {
1219 null 		jQuery.each( tuples, function( i, tuple ) {
1257 null 	when: function( subordinate /* , ..., subordinateN */ ) {
1269 null 			updateFunc = function( i, contexts, values ) {
1308 null jQuery.support = (function() {
1786 null 	data: function( key, value ) {
1822 null 		return jQuery.access( this, function( value ) {
1835 null 	removeData: function( key ) {
1909 null 	dequeue: function( elem, type ) {
1946 null 	_queueHooks: function( elem, type ) {
1958 null 	queue: function( type, data ) {
1984 null 	dequeue: function( type ) {
1991 null 	delay: function( time, type ) {
1995 null 		return this.queue( type, function( next, hooks ) {
2007 null 	promise: function( type, obj ) {
2051 null 	removeAttr: function( name ) {
2061 null 	removeProp: function( name ) {
2072 null 	addClass: function( value ) {
2111 null 	removeClass: function( value ) {
2149 null 	toggleClass: function( value, stateVal ) {
2203 null 	val: function( value ) {
2229 null 		return this.each(function( i ) {
2312 null 			set: function( elem, value ) {
2603 null 	jQuery.each([ "width", "height" ], function( i, name ) {
2619 null 	jQuery.each([ "href", "src", "width", "height" ], function( i, name ) {
2629 null 	jQuery.each([ "href", "src" ], function( i, name ) {
2679 null 	jQuery.each([ "radio", "checkbox" ], function() {
2688 null jQuery.each([ "radio", "checkbox" ], function() {
2719 null 	add: function( elem, types, handler, data, selector ) {
3417 null }, function( orig, fix ) {
3444 null 		setup: function() {
3451 null 			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
3492 null 		setup: function() {
3515 null 			jQuery.event.add( this, "beforeactivate._change", function( e ) {
3548 null 	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {
3573 null 	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
3629 null 	off: function( types, selector, fn ) {
3676 null 	trigger: function( type, data ) {
3694 null (function( window, undefined ) {
3852 createCache function createCache() {
4018 null setDocument = Sizzle.setDocument = function( node ) {
4108 null 		Expr.filter["ID"] = function( id ) {
4126 null 		Expr.filter["ID"] =  function( id ) {
4472 createInputPseudo function createInputPseudo( type ) {
4480 createButtonPseudo function createButtonPseudo( type ) {
4488 createPositionalPseudo function createPositionalPseudo( fn ) {
4489 null 	return markFunction(function( argument ) {
4636 null 		"TAG": function( nodeName ) {
4647 null 		"CLASS": function( className ) {
4657 null 		"ATTR": function( name, operator, check ) {
4681 null 		"CHILD": function( type, what, argument, first, last ) {
4770 null 		"PSEUDO": function( pseudo, argument ) {
4810 null 		"not": markFunction(function( selector ) {
4838 null 		"has": markFunction(function( selector ) {
4844 null 		"contains": markFunction(function( text ) {
4857 null 		"lang": markFunction( function( lang ) {
5092 addCombinator function addCombinator( matcher, combinator, base ) {
5142 elementMatcher function elementMatcher( matchers ) {
5177 setMatcher function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
5270 matcherFromTokens function matcherFromTokens( tokens ) {
5322 matcherFromGroupMatchers function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
5560 null 	find: function( selector ) {
5586 null 	has: function( target ) {
5729 null }, function( name, fn ) {
5789 winnow function winnow( elements, qualifier, keep ) {
5876 null 	text: function( value ) {
5884 null 	wrapAll: function( html ) {
5913 null 	wrapInner: function( html ) {
5933 null 	wrap: function( html ) {
5941 null 	unwrap: function() {
5949 null 	append: function() {
5957 null 	prepend: function() {
5965 null 	before: function() {
5973 null 	after: function() {
6029 null 	clone: function( dataAndEvents, deepDataAndEvents ) {
6038 null 	html: function( value ) {
6080 null 	replaceWith: function( value ) {
6104 null 	domManip: function( args, table, callback ) {
6333 null }, function( name, original ) {
6725 null 	css: function( name, value ) {
6753 null 	toggle: function( state ) {
7147 null jQuery.each([ "height", "width" ], function( i, name ) {
7149 null 		get: function( elem, computed, extra ) {
7222 null jQuery(function() {
7240 null 		jQuery.each( [ "top", "left" ], function( i, prop ) {
7275 null }, function( prefix, suffix ) {
7307 null 	serializeArray: function() {
7320 null 		.map(function( i, elem ){
7336 null jQuery.param = function( a, traditional ) {
7369 buildParams function buildParams( prefix, obj, traditional, add ) {
7398 null 	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {
7467 addToPrefiltersOrTransports function addToPrefiltersOrTransports( structure ) {
7499 inspectPrefiltersOrTransports function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {
7504 inspect 	function inspect( dataType ) {
7542 null jQuery.fn.load = function( url, params, callback ) {
7600 null jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ){
7606 null jQuery.each( [ "get", "post" ], function( i, method ) {
7717 null 	ajax: function( url, options ) {
8290 null jQuery.ajaxTransport( "script", function(s) {
8300 null 			send: function( _, callback ) {
8362 null jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {
8475 null 	jQuery.ajaxTransport(function( s ) {
8482 null 				send: function( headers, complete ) {
8685 createFxNow function createFxNow() {
8692 createTweens function createTweens( animation, props ) {
8707 Animation function Animation( elem, properties, options ) {
8878 defaultPrefilter function defaultPrefilter( elem, props, opts ) {
8903 null 		anim.always(function() {
9099 null jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
9117 null 	animate: function( prop, speed, easing, callback ) {
9120 null 			doAnimation = function() {
9137 null 	stop: function( type, clearQueue, gotoEnd ) {
9187 null 	finish: function( type ) {
9259 null }, function( name, props ) {
9265 null jQuery.speed = function( speed, easing, fn ) {
9359 null 	jQuery.expr.filters.animated = function( elem ) {
9365 null jQuery.fn.offset = function( options ) {
9488 null 	offsetParent: function() {
9501 null jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
9504 null 	jQuery.fn[ method ] = function( val ) {
9535 null jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
9536 null 	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
9538 null 		jQuery.fn[ funcName ] = function( margin, value ) {
60 null 	jQuery = function( selector, context ) {
94 null 	fcamelCase = function( all, letter ) {
99 null 	completed = function( event ) {
108 null 	detach = function() {
124 null 	init: function( selector, context, rootjQuery ) {
232 null 	size: function() {
236 null 	toArray: function() {
242 null 	get: function( num ) {
254 null 	pushStack: function( elems ) {
270 null 	each: function( callback, args ) {
274 null 	ready: function( fn ) {
281 null 	slice: function() {
285 null 	first: function() {
289 null 	last: function() {
293 null 	eq: function( i ) {
300 null 		return this.pushStack( jQuery.map(this, function( elem, i ) {
305 null 	end: function() {
319 null jQuery.extend = jQuery.fn.extend = function() {
384 null 	noConflict: function( deep ) {
404 null 	holdReady: function( hold ) {
413 null 	ready: function( wait ) {
445 null 	isFunction: function( obj ) {
449 null 	isArray: Array.isArray || function( obj ) {
453 null 	isWindow: function( obj ) {
457 null 	isNumeric: function( obj ) {
461 null 	type: function( obj ) {
470 null 	isPlainObject: function( obj ) {
499 null 	isEmptyObject: function( obj ) {
507 null 	error: function( msg ) {
514 null 	parseHTML: function( data, context, keepScripts ) {
539 null 	parseJSON: function( data ) {
570 null 	parseXML: function( data ) {
593 null 	noop: function() {},
603 null 			( window.execScript || function( data ) {
611 null 	camelCase: function( string ) {
615 null 	nodeName: function( elem, name ) {
620 null 	each: function( obj, callback, args ) {
671 null 		function( text ) {
678 null 		function( text ) {
685 null 	makeArray: function( arr, results ) {
702 null 	inArray: function( elem, arr, i ) {
724 null 	merge: function( first, second ) {
744 null 	grep: function( elems, callback, inv ) {
764 null 	map: function( elems, callback, arg ) {
818 null 		proxy = function() {
859 null 					fn = function( elem, key, value ) {
881 null 	now: function() {
923 doScrollCheck 				(function doScrollCheck() {
948 null jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
952 isArraylike function isArraylike( obj ) {
977 null 	jQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) {
1030 null 		fire = function( data ) {
1064 null 						jQuery.each( args, function( _, arg ) {
1092 null 					jQuery.each( arguments, function( _, arg ) {
1112 null 			has: function( fn ) {
1116 null 			empty: function() {
1121 null 			disable: function() {
1126 null 			disabled: function() {
1130 null 			lock: function() {
1138 null 			locked: function() {
1142 null 			fireWith: function( context, args ) {
1155 null 			fire: function() {
1160 null 			fired: function() {
1178 null 				state: function() {
1181 null 				always: function() {
1192 null 							deferred[ tuple[1] ](function() {
1209 null 				promise: function( obj ) {
1228 null 				list.add(function() {
1237 null 			deferred[ tuple[0] ] = function() {
1270 null 				return function( value ) {
1435 null 		div.attachEvent( "onclick", function() {
1455 null 	jQuery(function() {
1552 internalData function internalData( elem, name, data, pvt /* Internal Use Only */ ){
1646 internalRemoveData function internalRemoveData( elem, name, pvt ) {
1749 null 	hasData: function( elem ) {
1754 null 	data: function( elem, name, data ) {
1758 null 	removeData: function( elem, name ) {
1763 null 	_data: function( elem, name, data ) {
1767 null 	_removeData: function( elem, name ) {
1772 null 	acceptData: function( elem ) {
1817 null 			return this.each(function() {
1829 null 			this.each(function() {
1836 null 		return this.each(function() {
1842 dataAttr function dataAttr( elem, key, data ) {
1874 isEmptyDataObject function isEmptyDataObject( obj ) {
1890 null 	queue: function( elem, type, data ) {
1916 null 			next = function() {
1949 null 			empty: jQuery.Callbacks("once memory").add(function() {
1973 null 			this.each(function() {
1985 null 		return this.each(function() {
1997 null 			hooks.stop = function() {
2002 null 	clearQueue: function( type ) {
2013 null 			resolve = function() {
2047 null 	attr: function( name, value ) {
2052 null 		return this.each(function() {
2057 null 	prop: function( name, value ) {
2063 null 		return this.each(function() {
2079 null 			return this.each(function( j ) {
2118 null 			return this.each(function( j ) {
2154 null 			return this.each(function( i ) {
2159 null 		return this.each(function() {
2190 null 	hasClass: function( selector ) {
2249 null 				val = jQuery.map(val, function ( value ) {
2267 null 			get: function( elem ) {
2275 null 			get: function( elem ) {
2315 null 				jQuery(elem).find("option").each(function() {
2327 null 	attr: function( elem, name, value ) {
2381 null 	removeAttr: function( elem, value ) {
2413 null 			set: function( elem, value ) {
2443 null 	prop: function( elem, name, value ) {
2480 null 			get: function( elem ) {
2497 null 	get: function( elem, name ) {
2521 null 	set: function( elem, value, name ) {
2541 null 		get: function( elem, name ) {
2550 null 		set: function( elem, value, name ) {
2568 null 		get: function( elem, name ) {
2574 null 		set: function( elem, value, name ) {
2596 null 		set: function( elem, value, name ) {
2605 null 			set: function( elem, value ) {
2621 null 			get: function( elem ) {
2631 null 			get: function( elem ) {
2640 null 		get: function( elem ) {
2646 null 		set: function( elem, value ) {
2656 null 		get: function( elem ) {
2681 null 			get: function( elem ) {
2690 null 		set: function( elem, value ) {
2703 returnTrue function returnTrue() {
2707 returnFalse function returnFalse() {
2747 null 			eventHandle = elemData.handle = function( e ) {
2829 null 	remove: function( elem, types, handler, selector, mappedTypes ) {
2902 null 	trigger: function( event, data, elem, onlyHandlers ) {
3036 null 	dispatch: function( event ) {
3095 null 	handlers: function( event, handlers ) {
3142 null 	fix: function( event ) {
3195 null 		filter: function( event, original ) {
3208 null 		filter: function( event, original ) {
3245 null 			trigger: function() {
3254 null 			trigger: function() {
3269 null 			trigger: function() {
3279 null 			postDispatch: function( event ) {
3289 null 	simulate: function( type, elem, event, bubble ) {
3313 null 	function( elem, type, handle ) {
3318 null 	function( elem, type, handle ) {
3333 null jQuery.Event = function( src, props ) {
3373 null 	preventDefault: function() {
3391 null 	stopPropagation: function() {
3407 null 	stopImmediatePropagation: function() {
3422 null 		handle: function( event ) {
3456 null 					jQuery.event.add( form, "submit._submit", function( event ) {
3465 null 		postDispatch: function( event ) {
3475 null 		teardown: function() {
3499 null 					jQuery.event.add( this, "propertychange._change", function( event ) {
3504 null 					jQuery.event.add( this, "click._change", function( event ) {
3519 null 					jQuery.event.add( elem, "change._change", function( event ) {
3529 null 		handle: function( event ) {
3538 null 		teardown: function() {
3552 null 			handler = function( event ) {
3557 null 			setup: function() {
3562 null 			teardown: function() {
3614 null 			fn = function( event ) {
3622 null 		return this.each( function() {
3626 null 	one: function( types, selector, data, fn ) {
3656 null 		return this.each(function() {
3661 null 	bind: function( types, data, fn ) {
3664 null 	unbind: function( types, fn ) {
3668 null 	delegate: function( selector, types, data, fn ) {
3671 null 	undelegate: function( selector, types, fn ) {
3677 null 		return this.each(function() {
3681 null 	triggerHandler: function( type, data ) {
3736 null 	indexOf = arr.indexOf || function( elem ) {
3812 null 	funescape = function( _, escaped ) {
3828 null 	slice = function( i ) {
3842 isNative function isNative( fn ) {
3856 null 	return (cache = function( key, value ) {
3870 markFunction function markFunction( fn ) {
3879 assert function assert( fn ) {
3892 Sizzle function Sizzle( selector, context, results, seed ) {
4006 null isXML = Sizzle.isXML = function( elem ) {
4034 null 	support.tagNameNoComments = assert(function( div ) {
4040 null 	support.attributes = assert(function( div ) {
4048 null 	support.getByClassName = assert(function( div ) {
4062 null 	support.getByName = assert(function( div ) {
4083 null 	Expr.attrHandle = assert(function( div ) {
4090 null 			"href": function( elem ) {
4093 null 			"type": function( elem ) {
4100 null 		Expr.find["ID"] = function( id, context ) {
4110 null 			return function( elem ) {
4115 null 		Expr.find["ID"] = function( id, context ) {
4128 null 			return function( elem ) {
4137 null 		function( tag, context ) {
4142 null 		function( tag, context ) {
4162 null 	Expr.find["NAME"] = support.getByName && function( tag, context ) {
4169 null 	Expr.find["CLASS"] = support.getByClassName && function( className, context ) {
4188 null 		assert(function( div ) {
4209 null 		assert(function( div ) {
4236 null 		assert(function( div ) {
4255 null 		function( a, b ) {
4264 null 		function( a, b ) {
4277 null 	function( a, b ) {
4300 null 	function( a, b ) {
4360 null Sizzle.matches = function( expr, elements ) {
4364 null Sizzle.matchesSelector = function( elem, expr ) {
4391 null Sizzle.contains = function( context, elem ) {
4399 null Sizzle.attr = function( elem, name ) {
4421 null Sizzle.error = function( msg ) {
4426 null Sizzle.uniqueSort = function( results ) {
4450 siblingCheck function siblingCheck( a, b ) {
4473 null 	return function( elem ) {
4481 null 	return function( elem ) {
4491 null 		return markFunction(function( seed, matches ) {
4510 null getText = Sizzle.getText = function( elem ) {
4560 null 		"ATTR": function( match ) {
4573 null 		"CHILD": function( match ) {
4605 null 		"PSEUDO": function( match ) {
4638 null 				return function() { return true; };
4642 null 			return function( elem ) {
4652 null 				classCache( className, function( elem ) {
4658 null 			return function( elem ) {
4689 null 				function( elem ) {
4693 null 				function( elem, context, xml ) {
4790 null 					markFunction(function( seed, matches ) {
4799 null 					function( elem ) {
4819 null 				markFunction(function( seed, matches, context, xml ) {
4831 null 				function( elem, context, xml ) {
4839 null 			return function( elem ) {
4845 null 			return function( elem ) {
4863 null 			return function( elem ) {
4879 null 		"target": function( elem ) {
4884 null 		"root": function( elem ) {
4888 null 		"focus": function( elem ) {
4893 null 		"enabled": function( elem ) {
4897 null 		"disabled": function( elem ) {
4901 null 		"checked": function( elem ) {
4908 null 		"selected": function( elem ) {
4919 null 		"empty": function( elem ) {
4933 null 		"parent": function( elem ) {
4938 null 		"header": function( elem ) {
4942 null 		"input": function( elem ) {
4946 null 		"button": function( elem ) {
4951 null 		"text": function( elem ) {
4961 null 		"first": createPositionalPseudo(function() {
4965 null 		"last": createPositionalPseudo(function( matchIndexes, length ) {
4969 null 		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
4973 null 		"even": createPositionalPseudo(function( matchIndexes, length ) {
4981 null 		"odd": createPositionalPseudo(function( matchIndexes, length ) {
4989 null 		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
4997 null 		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
5015 tokenize function tokenize( selector, parseOnly ) {
5082 toSelector function toSelector( tokens ) {
5099 null 		function( elem, context, xml ) {
5108 null 		function( elem, context, xml ) {
5144 null 		function( elem, context, xml ) {
5156 condense function condense( unmatched, map, filter, context, xml ) {
5184 null 	return markFunction(function( seed, results, context, xml ) {
5278 null 		matchContext = addCombinator( function( elem ) {
5281 null 		matchAnyContext = addCombinator( function( elem ) {
5284 null 		matchers = [ function( elem, context, xml ) {
5327 null 		superMatcher = function( seed, context, xml, results, expandContext ) {
5423 null compile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {
5450 multipleContexts function multipleContexts( selector, contexts, results ) {
5459 select function select( selector, context, results, seed ) {
5528 setFilters function setFilters() {}
5566 null 			return this.pushStack( jQuery( selector ).filter(function() {
5591 null 		return this.filter(function() {
5600 null 	not: function( selector ) {
5604 null 	filter: function( selector ) {
5608 null 	is: function( selector ) {
5619 null 	closest: function( selectors, context ) {
5645 null 	index: function( elem ) {
5663 null 	add: function( selector, context ) {
5672 null 	addBack: function( selector ) {
5681 sibling function sibling( cur, dir ) {
5690 null 	parent: function( elem ) {
5694 null 	parents: function( elem ) {
5697 null 	parentsUntil: function( elem, i, until ) {
5700 null 	next: function( elem ) {
5703 null 	prev: function( elem ) {
5706 null 	nextAll: function( elem ) {
5709 null 	prevAll: function( elem ) {
5712 null 	nextUntil: function( elem, i, until ) {
5715 null 	prevUntil: function( elem, i, until ) {
5718 null 	siblings: function( elem ) {
5721 null 	children: function( elem ) {
5724 null 	contents: function( elem ) {
5730 null 	jQuery.fn[ name ] = function( until, selector ) {
5752 null 	filter: function( expr, elems, not ) {
5762 null 	dir: function( elem, dir, until ) {
5775 null 	sibling: function( n, elem ) {
5796 null 		return jQuery.grep(elements, function( elem, i ) {
5802 null 		return jQuery.grep(elements, function( elem ) {
5807 null 		var filtered = jQuery.grep(elements, function( elem ) {
5818 null 	return jQuery.grep(elements, function( elem ) {
5822 createSafeFragment function createSafeFragment( document ) {
5877 null 		return jQuery.access( this, function( value ) {
5886 null 			return this.each(function(i) {
5899 null 			wrap.map(function() {
5915 null 			return this.each(function(i) {
5920 null 		return this.each(function() {
5936 null 		return this.each(function(i) {
5942 null 		return this.parent().each(function() {
5950 null 		return this.domManip(arguments, true, function( elem ) {
5958 null 		return this.domManip(arguments, true, function( elem ) {
5966 null 		return this.domManip( arguments, false, function( elem ) {
5974 null 		return this.domManip( arguments, false, function( elem ) {
5982 null 	remove: function( selector, keepData ) {
6004 null 	empty: function() {
6033 null 		return this.map( function () {
6039 null 		return jQuery.access( this, function( value ) {
6089 null 		return this.domManip( [ value ], true, function( elem ) {
6100 null 	detach: function( selector ) {
6120 null 			return this.each(function( index ) {
6203 findOrAppend function findOrAppend( elem, tag ) {
6208 disableScript function disableScript( elem ) {
6213 restoreScript function restoreScript( elem ) {
6224 setGlobalEval function setGlobalEval( elems, refElements ) {
6232 cloneCopyEvent function cloneCopyEvent( src, dest ) {
6260 fixCloneNodeIssues function fixCloneNodeIssues( src, dest ) {
6334 null 	jQuery.fn[ name ] = function( selector ) {
6353 getAll function getAll( context, tag ) {
6376 fixDefaultChecked function fixDefaultChecked( elem ) {
6383 null 	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
6438 null 	buildFragment: function( elems, context, scripts, selection ) {
6565 null 	cleanData: function( elems, /* internal */ acceptData ) {
6641 vendorPropName function vendorPropName( style, name ) {
6663 isHidden function isHidden( elem, el ) {
6670 showHide function showHide( elements, show ) {
6726 null 		return jQuery.access( this, function( elem, name, value ) {
6747 null 	show: function() {
6750 null 	hide: function() {
6756 null 		return this.each(function() {
6771 null 			get: function( elem, computed ) {
6802 null 	style: function( elem, name, value, extra ) {
6867 null 	css: function( elem, name, extra, styles ) {
6902 null 	swap: function( elem, options, callback, args ) {
6926 null 	getStyles = function( elem ) {
6930 null 	curCSS = function( elem, name, _computed ) {
6969 null 	getStyles = function( elem ) {
6973 null 	curCSS = function( elem, name, _computed ) {
7017 setPositiveNumber function setPositiveNumber( elem, value, subtract ) {
7025 augmentWidthOrHeight function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
7064 getWidthOrHeight function getWidthOrHeight( elem, name, extra ) {
7108 css_defaultDisplay function css_defaultDisplay( nodeName ) {
7140 actualDisplay function actualDisplay( name, doc ) {
7154 null 					jQuery.swap( elem, cssShow, function() {
7161 null 		set: function( elem, value, extra ) {
7178 null 		get: function( elem, computed ) {
7185 null 		set: function( elem, value ) {
7225 null 			get: function( elem, computed ) {
7242 null 				get: function( elem, computed ) {
7258 null 	jQuery.expr.filters.hidden = function( elem ) {
7265 null 	jQuery.expr.filters.visible = function( elem ) {
7277 null 		expand: function( value ) {
7304 null 	serialize: function() {
7308 null 		return this.map(function(){
7313 null 		.filter(function(){
7326 null 					jQuery.map( val, function( val ){
7339 null 		add = function( key, value ) {
7353 null 		jQuery.each( a, function() {
7374 null 		jQuery.each( obj, function( i, v ) {
7401 null 	jQuery.fn[ name ] = function( data, fn ) {
7408 null jQuery.fn.hover = function( fnOver, fnOut ) {
7470 null 	return function( dataTypeExpression, func ) {
7507 null 		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
7526 ajaxExtend function ajaxExtend( target, src ) {
7577 null 		}).done(function( responseText ) {
7591 null 		}).complete( callback && function( jqXHR, status ) {
7601 null 	jQuery.fn[ type ] = function( fn ){
7607 null 	jQuery[ method ] = function( url, data, callback, type ) {
7703 null 	ajaxSetup: function( target, settings ) {
7770 null 				getResponseHeader: function( key ) {
7785 null 				getAllResponseHeaders: function() {
7790 null 				setRequestHeader: function( name, value ) {
7800 null 				overrideMimeType: function( type ) {
7808 null 				statusCode: function( map ) {
7825 null 				abort: function( statusText ) {
7972 null 				timeoutTimer = setTimeout(function() {
7992 done 		function done( status, nativeStatusText, responses, headers ) {
8104 null 	getScript: function( url, callback ) {
8108 null 	getJSON: function( url, data, callback ) {
8118 ajaxHandleResponses function ajaxHandleResponses( s, jqXHR, responses ) {
8179 ajaxConvert function ajaxConvert( s, response ) {
8271 null 		"text script": function( text ) {
8279 null jQuery.ajaxPrefilter( "script", function( s ) {
8313 null 				script.onload = script.onreadystatechange = function( _, isAbort ) {
8340 null 			abort: function() {
8354 null 	jsonpCallback: function() {
8386 null 		s.converters["script json"] = function() {
8398 null 		window[ callbackName ] = function() {
8403 null 		jqXHR.always(function() {
8431 null 	xhrOnUnloadAbort = window.ActiveXObject && function() {
8440 createStandardXHR function createStandardXHR() {
8446 createActiveXHR function createActiveXHR() {
8461 null 	function() {
8530 null 					callback = function( _, isAbort ) {
8626 null 				abort: function() {
8641 null 		"*": [function( prop, value ) {
8686 null 	setTimeout(function() {
8693 null 	jQuery.each( props, function( prop, value ) {
8712 null 		deferred = jQuery.Deferred().always( function() {
8716 null 		tick = function() {
8750 null 			createTween: function( prop, end ) {
8756 null 			stop: function( gotoEnd ) {
8811 propFilter function propFilter( props, specialEasing ) {
8850 null 	tweener: function( props, callback ) {
8869 null 	prefilter: function( callback, prepend ) {
8895 null 			hooks.empty.fire = function() {
8906 null 			anim.always(function() {
8942 null 			anim.always(function() {
8978 null 			anim.done(function() {
8982 null 		anim.done(function() {
9005 Tween function Tween( elem, options, prop, end, easing ) {
9012 null 	init: function( elem, options, prop, end, easing, unit ) {
9021 null 	cur: function() {
9028 null 	run: function( percent ) {
9058 null 		get: function( tween ) {
9074 null 		set: function( tween ) {
9092 null 	set: function( tween ) {
9101 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9109 null 	fadeTo: function( speed, to, easing, callback ) {
9123 null 				doAnimation.finish = function() {
9138 null 		var stopQueue = function( hooks ) {
9153 null 		return this.each(function() {
9191 null 		return this.each(function() {
9231 genFx function genFx( type, includeWidth ) {
9260 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9284 null 	opt.complete = function() {
9298 null 	linear: function( p ) {
9301 null 	swing: function( p ) {
9308 null jQuery.fx.tick = function() {
9329 null jQuery.fx.timer = function( timer ) {
9337 null jQuery.fx.start = function() {
9343 null jQuery.fx.stop = function() {
9360 null 		return jQuery.grep(jQuery.timers, function( fn ) {
9369 null 			this.each(function( i ) {
9404 null 	setOffset: function( elem, options, i ) {
9451 null 	position: function() {
9489 null 		return this.map(function() {
9505 null 		return jQuery.access( this, function( elem, method, val ) {
9527 getWindow function getWindow( elem ) {
9542 null 			return jQuery.access( this, function( elem, type, value ) {
9595 null 	define( "jquery", [], function () { return jQuery; } );
5 fA  * Includes Sizzle.js
19 fB // Support: Firefox 18+
33 fC 	document = window.document,
44 fD 
5 fA  * Includes Sizzle.js
19 fB // Support: Firefox 18+
33 fC 	document = window.document,
44 fD 
5 fA  * Includes Sizzle.js
19 fB // Support: Firefox 18+
33 fC 	document = window.document,
44 fD 
5 fA  * Includes Sizzle.js
19 fB // Support: Firefox 18+
33 fC 	document = window.document,
44 fD 
5 fA  * Includes Sizzle.js
19 fB // Support: Firefox 18+
33 fC 	document = window.document,
44 fD 
5 fA  * Includes Sizzle.js
19 fB // Support: Firefox 18+
33 fC 	document = window.document,
44 fD 
5 fA  * Includes Sizzle.js
19 fB // Support: Firefox 18+
33 fC 	document = window.document,
44 fD 
5 fA  * Includes Sizzle.js
19 fB // Support: Firefox 18+
33 fC 	document = window.document,
44 fD 
14 null (function( window, undefined ) {
60 null 	jQuery = function( selector, context ) {
94 null 	fcamelCase = function( all, letter ) {
99 null 	completed = function( event ) {
108 null 	detach = function() {
124 null 	init: function( selector, context, rootjQuery ) {
232 null 	size: function() {
236 null 	toArray: function() {
242 null 	get: function( num ) {
254 null 	pushStack: function( elems ) {
270 null 	each: function( callback, args ) {
274 null 	ready: function( fn ) {
281 null 	slice: function() {
285 null 	first: function() {
289 null 	last: function() {
293 null 	eq: function( i ) {
299 null 	map: function( callback ) {
300 null 		return this.pushStack( jQuery.map(this, function( elem, i ) {
305 null 	end: function() {
319 null jQuery.extend = jQuery.fn.extend = function() {
384 null 	noConflict: function( deep ) {
404 null 	holdReady: function( hold ) {
413 null 	ready: function( wait ) {
445 null 	isFunction: function( obj ) {
449 null 	isArray: Array.isArray || function( obj ) {
453 null 	isWindow: function( obj ) {
457 null 	isNumeric: function( obj ) {
461 null 	type: function( obj ) {
470 null 	isPlainObject: function( obj ) {
499 null 	isEmptyObject: function( obj ) {
507 null 	error: function( msg ) {
514 null 	parseHTML: function( data, context, keepScripts ) {
539 null 	parseJSON: function( data ) {
570 null 	parseXML: function( data ) {
593 null 	noop: function() {},
598 null 	globalEval: function( data ) {
603 null 			( window.execScript || function( data ) {
611 null 	camelCase: function( string ) {
615 null 	nodeName: function( elem, name ) {
620 null 	each: function( obj, callback, args ) {
671 null 		function( text ) {
678 null 		function( text ) {
685 null 	makeArray: function( arr, results ) {
702 null 	inArray: function( elem, arr, i ) {
724 null 	merge: function( first, second ) {
744 null 	grep: function( elems, callback, inv ) {
764 null 	map: function( elems, callback, arg ) {
801 null 	proxy: function( fn, context ) {
818 null 		proxy = function() {
830 null 	access: function( elems, fn, key, value, chainable, emptyGet, raw ) {
859 null 					fn = function( elem, key, value ) {
881 null 	now: function() {
886 null jQuery.ready.promise = function( obj ) {
923 doScrollCheck 				(function doScrollCheck() {
948 null jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
952 isArraylike function isArraylike( obj ) {
975 createOptions function createOptions( options ) {
977 null 	jQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) {
1005 null jQuery.Callbacks = function( options ) {
1030 null 		fire = function( data ) {
1059 null 			add: function() {
1063 add 					(function add( args ) {
1064 null 						jQuery.each( args, function( _, arg ) {
1090 null 			remove: function() {
1092 null 					jQuery.each( arguments, function( _, arg ) {
1112 null 			has: function( fn ) {
1116 null 			empty: function() {
1121 null 			disable: function() {
1126 null 			disabled: function() {
1130 null 			lock: function() {
1138 null 			locked: function() {
1142 null 			fireWith: function( context, args ) {
1155 null 			fire: function() {
1160 null 			fired: function() {
1169 null 	Deferred: function( func ) {
1178 null 				state: function() {
1181 null 				always: function() {
1185 null 				then: function( /* fnDone, fnFail, fnProgress */ ) {
1187 null 					return jQuery.Deferred(function( newDefer ) {
1188 null 						jQuery.each( tuples, function( i, tuple ) {
1192 null 							deferred[ tuple[1] ](function() {
1209 null 				promise: function( obj ) {
1219 null 		jQuery.each( tuples, function( i, tuple ) {
1228 null 				list.add(function() {
1237 null 			deferred[ tuple[0] ] = function() {
1257 null 	when: function( subordinate /* , ..., subordinateN */ ) {
1269 null 			updateFunc = function( i, contexts, values ) {
1270 null 				return function( value ) {
1308 null jQuery.support = (function() {
1435 null 		div.attachEvent( "onclick", function() {
1455 null 	jQuery(function() {
1552 internalData function internalData( elem, name, data, pvt /* Internal Use Only */ ){
1646 internalRemoveData function internalRemoveData( elem, name, pvt ) {
1749 null 	hasData: function( elem ) {
1754 null 	data: function( elem, name, data ) {
1758 null 	removeData: function( elem, name ) {
1763 null 	_data: function( elem, name, data ) {
1767 null 	_removeData: function( elem, name ) {
1772 null 	acceptData: function( elem ) {
1786 null 	data: function( key, value ) {
1817 null 			return this.each(function() {
1822 null 		return jQuery.access( this, function( value ) {
1829 null 			this.each(function() {
1835 null 	removeData: function( key ) {
1836 null 		return this.each(function() {
1842 dataAttr function dataAttr( elem, key, data ) {
1874 isEmptyDataObject function isEmptyDataObject( obj ) {
1890 null 	queue: function( elem, type, data ) {
1909 null 	dequeue: function( elem, type ) {
1916 null 			next = function() {
1946 null 	_queueHooks: function( elem, type ) {
1949 null 			empty: jQuery.Callbacks("once memory").add(function() {
1958 null 	queue: function( type, data ) {
1973 null 			this.each(function() {
1984 null 	dequeue: function( type ) {
1985 null 		return this.each(function() {
1991 null 	delay: function( time, type ) {
1995 null 		return this.queue( type, function( next, hooks ) {
1997 null 			hooks.stop = function() {
2002 null 	clearQueue: function( type ) {
2007 null 	promise: function( type, obj ) {
2013 null 			resolve = function() {
2047 null 	attr: function( name, value ) {
2051 null 	removeAttr: function( name ) {
2052 null 		return this.each(function() {
2057 null 	prop: function( name, value ) {
2061 null 	removeProp: function( name ) {
2063 null 		return this.each(function() {
2072 null 	addClass: function( value ) {
2079 null 			return this.each(function( j ) {
2111 null 	removeClass: function( value ) {
2118 null 			return this.each(function( j ) {
2149 null 	toggleClass: function( value, stateVal ) {
2154 null 			return this.each(function( i ) {
2159 null 		return this.each(function() {
2190 null 	hasClass: function( selector ) {
2203 null 	val: function( value ) {
2229 null 		return this.each(function( i ) {
2249 null 				val = jQuery.map(val, function ( value ) {
2267 null 			get: function( elem ) {
2275 null 			get: function( elem ) {
2312 null 			set: function( elem, value ) {
2315 null 				jQuery(elem).find("option").each(function() {
2327 null 	attr: function( elem, name, value ) {
2381 null 	removeAttr: function( elem, value ) {
2413 null 			set: function( elem, value ) {
2443 null 	prop: function( elem, name, value ) {
2480 null 			get: function( elem ) {
2497 null 	get: function( elem, name ) {
2521 null 	set: function( elem, value, name ) {
2541 null 		get: function( elem, name ) {
2550 null 		set: function( elem, value, name ) {
2568 null 		get: function( elem, name ) {
2574 null 		set: function( elem, value, name ) {
2596 null 		set: function( elem, value, name ) {
2603 null 	jQuery.each([ "width", "height" ], function( i, name ) {
2605 null 			set: function( elem, value ) {
2619 null 	jQuery.each([ "href", "src", "width", "height" ], function( i, name ) {
2621 null 			get: function( elem ) {
2629 null 	jQuery.each([ "href", "src" ], function( i, name ) {
2631 null 			get: function( elem ) {
2640 null 		get: function( elem ) {
2646 null 		set: function( elem, value ) {
2656 null 		get: function( elem ) {
2679 null 	jQuery.each([ "radio", "checkbox" ], function() {
2681 null 			get: function( elem ) {
2688 null jQuery.each([ "radio", "checkbox" ], function() {
2690 null 		set: function( elem, value ) {
2703 returnTrue function returnTrue() {
2707 returnFalse function returnFalse() {
2719 null 	add: function( elem, types, handler, data, selector ) {
2747 null 			eventHandle = elemData.handle = function( e ) {
2829 null 	remove: function( elem, types, handler, selector, mappedTypes ) {
2902 null 	trigger: function( event, data, elem, onlyHandlers ) {
3036 null 	dispatch: function( event ) {
3095 null 	handlers: function( event, handlers ) {
3142 null 	fix: function( event ) {
3195 null 		filter: function( event, original ) {
3208 null 		filter: function( event, original ) {
3245 null 			trigger: function() {
3254 null 			trigger: function() {
3269 null 			trigger: function() {
3279 null 			postDispatch: function( event ) {
3289 null 	simulate: function( type, elem, event, bubble ) {
3313 null 	function( elem, type, handle ) {
3318 null 	function( elem, type, handle ) {
3333 null jQuery.Event = function( src, props ) {
3373 null 	preventDefault: function() {
3391 null 	stopPropagation: function() {
3407 null 	stopImmediatePropagation: function() {
3417 null }, function( orig, fix ) {
3422 null 		handle: function( event ) {
3444 null 		setup: function() {
3451 null 			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
3456 null 					jQuery.event.add( form, "submit._submit", function( event ) {
3465 null 		postDispatch: function( event ) {
3475 null 		teardown: function() {
3492 null 		setup: function() {
3499 null 					jQuery.event.add( this, "propertychange._change", function( event ) {
3504 null 					jQuery.event.add( this, "click._change", function( event ) {
3515 null 			jQuery.event.add( this, "beforeactivate._change", function( e ) {
3519 null 					jQuery.event.add( elem, "change._change", function( event ) {
3529 null 		handle: function( event ) {
3538 null 		teardown: function() {
3548 null 	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {
3552 null 			handler = function( event ) {
3557 null 			setup: function() {
3562 null 			teardown: function() {
3573 null 	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
3614 null 			fn = function( event ) {
3622 null 		return this.each( function() {
3626 null 	one: function( types, selector, data, fn ) {
3629 null 	off: function( types, selector, fn ) {
3656 null 		return this.each(function() {
3661 null 	bind: function( types, data, fn ) {
3664 null 	unbind: function( types, fn ) {
3668 null 	delegate: function( selector, types, data, fn ) {
3671 null 	undelegate: function( selector, types, fn ) {
3676 null 	trigger: function( type, data ) {
3677 null 		return this.each(function() {
3681 null 	triggerHandler: function( type, data ) {
3694 null (function( window, undefined ) {
3736 null 	indexOf = arr.indexOf || function( elem ) {
3812 null 	funescape = function( _, escaped ) {
3828 null 	slice = function( i ) {
3842 isNative function isNative( fn ) {
3852 createCache function createCache() {
3856 null 	return (cache = function( key, value ) {
3870 markFunction function markFunction( fn ) {
3879 assert function assert( fn ) {
3892 Sizzle function Sizzle( selector, context, results, seed ) {
4006 null isXML = Sizzle.isXML = function( elem ) {
4018 null setDocument = Sizzle.setDocument = function( node ) {
4034 null 	support.tagNameNoComments = assert(function( div ) {
4040 null 	support.attributes = assert(function( div ) {
4048 null 	support.getByClassName = assert(function( div ) {
4062 null 	support.getByName = assert(function( div ) {
4083 null 	Expr.attrHandle = assert(function( div ) {
4090 null 			"href": function( elem ) {
4093 null 			"type": function( elem ) {
4100 null 		Expr.find["ID"] = function( id, context ) {
4108 null 		Expr.filter["ID"] = function( id ) {
4110 null 			return function( elem ) {
4115 null 		Expr.find["ID"] = function( id, context ) {
4126 null 		Expr.filter["ID"] =  function( id ) {
4128 null 			return function( elem ) {
4137 null 		function( tag, context ) {
4142 null 		function( tag, context ) {
4162 null 	Expr.find["NAME"] = support.getByName && function( tag, context ) {
4169 null 	Expr.find["CLASS"] = support.getByClassName && function( className, context ) {
4188 null 		assert(function( div ) {
4209 null 		assert(function( div ) {
4236 null 		assert(function( div ) {
4255 null 		function( a, b ) {
4264 null 		function( a, b ) {
4277 null 	function( a, b ) {
4300 null 	function( a, b ) {
4360 null Sizzle.matches = function( expr, elements ) {
4364 null Sizzle.matchesSelector = function( elem, expr ) {
4391 null Sizzle.contains = function( context, elem ) {
4399 null Sizzle.attr = function( elem, name ) {
4421 null Sizzle.error = function( msg ) {
4426 null Sizzle.uniqueSort = function( results ) {
4450 siblingCheck function siblingCheck( a, b ) {
4472 createInputPseudo function createInputPseudo( type ) {
4473 null 	return function( elem ) {
4480 createButtonPseudo function createButtonPseudo( type ) {
4481 null 	return function( elem ) {
4488 createPositionalPseudo function createPositionalPseudo( fn ) {
4489 null 	return markFunction(function( argument ) {
4491 null 		return markFunction(function( seed, matches ) {
4510 null getText = Sizzle.getText = function( elem ) {
4560 null 		"ATTR": function( match ) {
4573 null 		"CHILD": function( match ) {
4605 null 		"PSEUDO": function( match ) {
4636 null 		"TAG": function( nodeName ) {
4638 null 				return function() { return true; };
4642 null 			return function( elem ) {
4647 null 		"CLASS": function( className ) {
4652 null 				classCache( className, function( elem ) {
4657 null 		"ATTR": function( name, operator, check ) {
4658 null 			return function( elem ) {
4681 null 		"CHILD": function( type, what, argument, first, last ) {
4689 null 				function( elem ) {
4693 null 				function( elem, context, xml ) {
4770 null 		"PSEUDO": function( pseudo, argument ) {
4790 null 					markFunction(function( seed, matches ) {
4799 null 					function( elem ) {
4810 null 		"not": markFunction(function( selector ) {
4819 null 				markFunction(function( seed, matches, context, xml ) {
4831 null 				function( elem, context, xml ) {
4838 null 		"has": markFunction(function( selector ) {
4839 null 			return function( elem ) {
4844 null 		"contains": markFunction(function( text ) {
4845 null 			return function( elem ) {
4857 null 		"lang": markFunction( function( lang ) {
4863 null 			return function( elem ) {
4879 null 		"target": function( elem ) {
4884 null 		"root": function( elem ) {
4888 null 		"focus": function( elem ) {
4893 null 		"enabled": function( elem ) {
4897 null 		"disabled": function( elem ) {
4901 null 		"checked": function( elem ) {
4908 null 		"selected": function( elem ) {
4919 null 		"empty": function( elem ) {
4933 null 		"parent": function( elem ) {
4938 null 		"header": function( elem ) {
4942 null 		"input": function( elem ) {
4946 null 		"button": function( elem ) {
4951 null 		"text": function( elem ) {
4961 null 		"first": createPositionalPseudo(function() {
4965 null 		"last": createPositionalPseudo(function( matchIndexes, length ) {
4969 null 		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
4973 null 		"even": createPositionalPseudo(function( matchIndexes, length ) {
4981 null 		"odd": createPositionalPseudo(function( matchIndexes, length ) {
4989 null 		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
4997 null 		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
5015 tokenize function tokenize( selector, parseOnly ) {
5082 toSelector function toSelector( tokens ) {
5092 addCombinator function addCombinator( matcher, combinator, base ) {
5099 null 		function( elem, context, xml ) {
5108 null 		function( elem, context, xml ) {
5142 elementMatcher function elementMatcher( matchers ) {
5144 null 		function( elem, context, xml ) {
5156 condense function condense( unmatched, map, filter, context, xml ) {
5177 setMatcher function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
5184 null 	return markFunction(function( seed, results, context, xml ) {
5270 matcherFromTokens function matcherFromTokens( tokens ) {
5278 null 		matchContext = addCombinator( function( elem ) {
5281 null 		matchAnyContext = addCombinator( function( elem ) {
5284 null 		matchers = [ function( elem, context, xml ) {
5322 matcherFromGroupMatchers function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
5327 null 		superMatcher = function( seed, context, xml, results, expandContext ) {
5423 null compile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {
5450 multipleContexts function multipleContexts( selector, contexts, results ) {
5459 select function select( selector, context, results, seed ) {
5528 setFilters function setFilters() {}
5560 null 	find: function( selector ) {
5566 null 			return this.pushStack( jQuery( selector ).filter(function() {
5586 null 	has: function( target ) {
5591 null 		return this.filter(function() {
5600 null 	not: function( selector ) {
5604 null 	filter: function( selector ) {
5608 null 	is: function( selector ) {
5619 null 	closest: function( selectors, context ) {
5645 null 	index: function( elem ) {
5663 null 	add: function( selector, context ) {
5672 null 	addBack: function( selector ) {
5681 sibling function sibling( cur, dir ) {
5690 null 	parent: function( elem ) {
5694 null 	parents: function( elem ) {
5697 null 	parentsUntil: function( elem, i, until ) {
5700 null 	next: function( elem ) {
5703 null 	prev: function( elem ) {
5706 null 	nextAll: function( elem ) {
5709 null 	prevAll: function( elem ) {
5712 null 	nextUntil: function( elem, i, until ) {
5715 null 	prevUntil: function( elem, i, until ) {
5718 null 	siblings: function( elem ) {
5721 null 	children: function( elem ) {
5724 null 	contents: function( elem ) {
5729 null }, function( name, fn ) {
5730 null 	jQuery.fn[ name ] = function( until, selector ) {
5752 null 	filter: function( expr, elems, not ) {
5762 null 	dir: function( elem, dir, until ) {
5775 null 	sibling: function( n, elem ) {
5789 winnow function winnow( elements, qualifier, keep ) {
5796 null 		return jQuery.grep(elements, function( elem, i ) {
5802 null 		return jQuery.grep(elements, function( elem ) {
5807 null 		var filtered = jQuery.grep(elements, function( elem ) {
5818 null 	return jQuery.grep(elements, function( elem ) {
5822 createSafeFragment function createSafeFragment( document ) {
5876 null 	text: function( value ) {
5877 null 		return jQuery.access( this, function( value ) {
5884 null 	wrapAll: function( html ) {
5886 null 			return this.each(function(i) {
5899 null 			wrap.map(function() {
5913 null 	wrapInner: function( html ) {
5915 null 			return this.each(function(i) {
5920 null 		return this.each(function() {
5933 null 	wrap: function( html ) {
5936 null 		return this.each(function(i) {
5941 null 	unwrap: function() {
5942 null 		return this.parent().each(function() {
5949 null 	append: function() {
5950 null 		return this.domManip(arguments, true, function( elem ) {
5957 null 	prepend: function() {
5958 null 		return this.domManip(arguments, true, function( elem ) {
5965 null 	before: function() {
5966 null 		return this.domManip( arguments, false, function( elem ) {
5973 null 	after: function() {
5974 null 		return this.domManip( arguments, false, function( elem ) {
5982 null 	remove: function( selector, keepData ) {
6004 null 	empty: function() {
6029 null 	clone: function( dataAndEvents, deepDataAndEvents ) {
6033 null 		return this.map( function () {
6038 null 	html: function( value ) {
6039 null 		return jQuery.access( this, function( value ) {
6080 null 	replaceWith: function( value ) {
6089 null 		return this.domManip( [ value ], true, function( elem ) {
6100 null 	detach: function( selector ) {
6104 null 	domManip: function( args, table, callback ) {
6120 null 			return this.each(function( index ) {
6203 findOrAppend function findOrAppend( elem, tag ) {
6208 disableScript function disableScript( elem ) {
6213 restoreScript function restoreScript( elem ) {
6224 setGlobalEval function setGlobalEval( elems, refElements ) {
6232 cloneCopyEvent function cloneCopyEvent( src, dest ) {
6260 fixCloneNodeIssues function fixCloneNodeIssues( src, dest ) {
6333 null }, function( name, original ) {
6334 null 	jQuery.fn[ name ] = function( selector ) {
6353 getAll function getAll( context, tag ) {
6376 fixDefaultChecked function fixDefaultChecked( elem ) {
6383 null 	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
6438 null 	buildFragment: function( elems, context, scripts, selection ) {
6565 null 	cleanData: function( elems, /* internal */ acceptData ) {
6641 vendorPropName function vendorPropName( style, name ) {
6663 isHidden function isHidden( elem, el ) {
6670 showHide function showHide( elements, show ) {
6725 null 	css: function( name, value ) {
6726 null 		return jQuery.access( this, function( elem, name, value ) {
6747 null 	show: function() {
6750 null 	hide: function() {
6753 null 	toggle: function( state ) {
6756 null 		return this.each(function() {
6771 null 			get: function( elem, computed ) {
6802 null 	style: function( elem, name, value, extra ) {
6867 null 	css: function( elem, name, extra, styles ) {
6902 null 	swap: function( elem, options, callback, args ) {
6926 null 	getStyles = function( elem ) {
6930 null 	curCSS = function( elem, name, _computed ) {
6969 null 	getStyles = function( elem ) {
6973 null 	curCSS = function( elem, name, _computed ) {
7017 setPositiveNumber function setPositiveNumber( elem, value, subtract ) {
7025 augmentWidthOrHeight function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
7064 getWidthOrHeight function getWidthOrHeight( elem, name, extra ) {
7108 css_defaultDisplay function css_defaultDisplay( nodeName ) {
7140 actualDisplay function actualDisplay( name, doc ) {
7147 null jQuery.each([ "height", "width" ], function( i, name ) {
7149 null 		get: function( elem, computed, extra ) {
7154 null 					jQuery.swap( elem, cssShow, function() {
7161 null 		set: function( elem, value, extra ) {
7178 null 		get: function( elem, computed ) {
7185 null 		set: function( elem, value ) {
7222 null jQuery(function() {
7225 null 			get: function( elem, computed ) {
7240 null 		jQuery.each( [ "top", "left" ], function( i, prop ) {
7242 null 				get: function( elem, computed ) {
7258 null 	jQuery.expr.filters.hidden = function( elem ) {
7265 null 	jQuery.expr.filters.visible = function( elem ) {
7275 null }, function( prefix, suffix ) {
7277 null 		expand: function( value ) {
7304 null 	serialize: function() {
7307 null 	serializeArray: function() {
7308 null 		return this.map(function(){
7313 null 		.filter(function(){
7320 null 		.map(function( i, elem ){
7326 null 					jQuery.map( val, function( val ){
7336 null jQuery.param = function( a, traditional ) {
7339 null 		add = function( key, value ) {
7353 null 		jQuery.each( a, function() {
7369 buildParams function buildParams( prefix, obj, traditional, add ) {
7374 null 		jQuery.each( obj, function( i, v ) {
7398 null 	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {
7401 null 	jQuery.fn[ name ] = function( data, fn ) {
7408 null jQuery.fn.hover = function( fnOver, fnOut ) {
7467 addToPrefiltersOrTransports function addToPrefiltersOrTransports( structure ) {
7470 null 	return function( dataTypeExpression, func ) {
7499 inspectPrefiltersOrTransports function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {
7504 inspect 	function inspect( dataType ) {
7507 null 		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
7526 ajaxExtend function ajaxExtend( target, src ) {
7542 null jQuery.fn.load = function( url, params, callback ) {
7577 null 		}).done(function( responseText ) {
7591 null 		}).complete( callback && function( jqXHR, status ) {
7600 null jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ){
7601 null 	jQuery.fn[ type ] = function( fn ){
7606 null jQuery.each( [ "get", "post" ], function( i, method ) {
7607 null 	jQuery[ method ] = function( url, data, callback, type ) {
7703 null 	ajaxSetup: function( target, settings ) {
7717 null 	ajax: function( url, options ) {
7770 null 				getResponseHeader: function( key ) {
7785 null 				getAllResponseHeaders: function() {
7790 null 				setRequestHeader: function( name, value ) {
7800 null 				overrideMimeType: function( type ) {
7808 null 				statusCode: function( map ) {
7825 null 				abort: function( statusText ) {
7972 null 				timeoutTimer = setTimeout(function() {
7992 done 		function done( status, nativeStatusText, responses, headers ) {
8104 null 	getScript: function( url, callback ) {
8108 null 	getJSON: function( url, data, callback ) {
8118 ajaxHandleResponses function ajaxHandleResponses( s, jqXHR, responses ) {
8179 ajaxConvert function ajaxConvert( s, response ) {
8271 null 		"text script": function( text ) {
8279 null jQuery.ajaxPrefilter( "script", function( s ) {
8290 null jQuery.ajaxTransport( "script", function(s) {
8300 null 			send: function( _, callback ) {
8313 null 				script.onload = script.onreadystatechange = function( _, isAbort ) {
8340 null 			abort: function() {
8354 null 	jsonpCallback: function() {
8362 null jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {
8386 null 		s.converters["script json"] = function() {
8398 null 		window[ callbackName ] = function() {
8403 null 		jqXHR.always(function() {
8431 null 	xhrOnUnloadAbort = window.ActiveXObject && function() {
8440 createStandardXHR function createStandardXHR() {
8446 createActiveXHR function createActiveXHR() {
8461 null 	function() {
8475 null 	jQuery.ajaxTransport(function( s ) {
8482 null 				send: function( headers, complete ) {
8530 null 					callback = function( _, isAbort ) {
8626 null 				abort: function() {
8641 null 		"*": [function( prop, value ) {
8685 createFxNow function createFxNow() {
8686 null 	setTimeout(function() {
8692 createTweens function createTweens( animation, props ) {
8693 null 	jQuery.each( props, function( prop, value ) {
8707 Animation function Animation( elem, properties, options ) {
8712 null 		deferred = jQuery.Deferred().always( function() {
8716 null 		tick = function() {
8750 null 			createTween: function( prop, end ) {
8756 null 			stop: function( gotoEnd ) {
8811 propFilter function propFilter( props, specialEasing ) {
8850 null 	tweener: function( props, callback ) {
8869 null 	prefilter: function( callback, prepend ) {
8878 defaultPrefilter function defaultPrefilter( elem, props, opts ) {
8895 null 			hooks.empty.fire = function() {
8903 null 		anim.always(function() {
8906 null 			anim.always(function() {
8942 null 			anim.always(function() {
8978 null 			anim.done(function() {
8982 null 		anim.done(function() {
9005 Tween function Tween( elem, options, prop, end, easing ) {
9012 null 	init: function( elem, options, prop, end, easing, unit ) {
9021 null 	cur: function() {
9028 null 	run: function( percent ) {
9058 null 		get: function( tween ) {
9074 null 		set: function( tween ) {
9092 null 	set: function( tween ) {
9099 null jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
9101 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9109 null 	fadeTo: function( speed, to, easing, callback ) {
9117 null 	animate: function( prop, speed, easing, callback ) {
9120 null 			doAnimation = function() {
9123 null 				doAnimation.finish = function() {
9137 null 	stop: function( type, clearQueue, gotoEnd ) {
9138 null 		var stopQueue = function( hooks ) {
9153 null 		return this.each(function() {
9187 null 	finish: function( type ) {
9191 null 		return this.each(function() {
9231 genFx function genFx( type, includeWidth ) {
9259 null }, function( name, props ) {
9260 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9265 null jQuery.speed = function( speed, easing, fn ) {
9284 null 	opt.complete = function() {
9298 null 	linear: function( p ) {
9301 null 	swing: function( p ) {
9308 null jQuery.fx.tick = function() {
9329 null jQuery.fx.timer = function( timer ) {
9337 null jQuery.fx.start = function() {
9343 null jQuery.fx.stop = function() {
9359 null 	jQuery.expr.filters.animated = function( elem ) {
9360 null 		return jQuery.grep(jQuery.timers, function( fn ) {
9365 null jQuery.fn.offset = function( options ) {
9369 null 			this.each(function( i ) {
9404 null 	setOffset: function( elem, options, i ) {
9451 null 	position: function() {
9488 null 	offsetParent: function() {
9489 null 		return this.map(function() {
9501 null jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
9504 null 	jQuery.fn[ method ] = function( val ) {
9505 null 		return jQuery.access( this, function( elem, method, val ) {
9527 getWindow function getWindow( elem ) {
9535 null jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
9536 null 	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
9538 null 		jQuery.fn[ funcName ] = function( margin, value ) {
9542 null 			return jQuery.access( this, function( elem, type, value ) {
9595 null 	define( "jquery", [], function () { return jQuery; } );
952 isArraylike function isArraylike( obj ) {
975 createOptions function createOptions( options ) {
1552 internalData function internalData( elem, name, data, pvt /* Internal Use Only */ ){
1646 internalRemoveData function internalRemoveData( elem, name, pvt ) {
1842 dataAttr function dataAttr( elem, key, data ) {
1874 isEmptyDataObject function isEmptyDataObject( obj ) {
2703 returnTrue function returnTrue() {
2707 returnFalse function returnFalse() {
5681 sibling function sibling( cur, dir ) {
5789 winnow function winnow( elements, qualifier, keep ) {
5822 createSafeFragment function createSafeFragment( document ) {
6203 findOrAppend function findOrAppend( elem, tag ) {
6208 disableScript function disableScript( elem ) {
6213 restoreScript function restoreScript( elem ) {
6224 setGlobalEval function setGlobalEval( elems, refElements ) {
6232 cloneCopyEvent function cloneCopyEvent( src, dest ) {
6260 fixCloneNodeIssues function fixCloneNodeIssues( src, dest ) {
6353 getAll function getAll( context, tag ) {
6376 fixDefaultChecked function fixDefaultChecked( elem ) {
6641 vendorPropName function vendorPropName( style, name ) {
6663 isHidden function isHidden( elem, el ) {
6670 showHide function showHide( elements, show ) {
7017 setPositiveNumber function setPositiveNumber( elem, value, subtract ) {
7025 augmentWidthOrHeight function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
7064 getWidthOrHeight function getWidthOrHeight( elem, name, extra ) {
7108 css_defaultDisplay function css_defaultDisplay( nodeName ) {
7140 actualDisplay function actualDisplay( name, doc ) {
7369 buildParams function buildParams( prefix, obj, traditional, add ) {
7467 addToPrefiltersOrTransports function addToPrefiltersOrTransports( structure ) {
7499 inspectPrefiltersOrTransports function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {
7526 ajaxExtend function ajaxExtend( target, src ) {
8118 ajaxHandleResponses function ajaxHandleResponses( s, jqXHR, responses ) {
8179 ajaxConvert function ajaxConvert( s, response ) {
8440 createStandardXHR function createStandardXHR() {
8446 createActiveXHR function createActiveXHR() {
8685 createFxNow function createFxNow() {
8692 createTweens function createTweens( animation, props ) {
8707 Animation function Animation( elem, properties, options ) {
8811 propFilter function propFilter( props, specialEasing ) {
8878 defaultPrefilter function defaultPrefilter( elem, props, opts ) {
9005 Tween function Tween( elem, options, prop, end, easing ) {
9231 genFx function genFx( type, includeWidth ) {
9527 getWindow function getWindow( elem ) {
60 null 	jQuery = function( selector, context ) {
94 null 	fcamelCase = function( all, letter ) {
99 null 	completed = function( event ) {
108 null 	detach = function() {
124 null 	init: function( selector, context, rootjQuery ) {
232 null 	size: function() {
236 null 	toArray: function() {
242 null 	get: function( num ) {
254 null 	pushStack: function( elems ) {
270 null 	each: function( callback, args ) {
274 null 	ready: function( fn ) {
281 null 	slice: function() {
285 null 	first: function() {
289 null 	last: function() {
293 null 	eq: function( i ) {
299 null 	map: function( callback ) {
300 null 		return this.pushStack( jQuery.map(this, function( elem, i ) {
305 null 	end: function() {
319 null jQuery.extend = jQuery.fn.extend = function() {
384 null 	noConflict: function( deep ) {
404 null 	holdReady: function( hold ) {
413 null 	ready: function( wait ) {
445 null 	isFunction: function( obj ) {
449 null 	isArray: Array.isArray || function( obj ) {
453 null 	isWindow: function( obj ) {
457 null 	isNumeric: function( obj ) {
461 null 	type: function( obj ) {
470 null 	isPlainObject: function( obj ) {
499 null 	isEmptyObject: function( obj ) {
507 null 	error: function( msg ) {
514 null 	parseHTML: function( data, context, keepScripts ) {
539 null 	parseJSON: function( data ) {
570 null 	parseXML: function( data ) {
593 null 	noop: function() {},
598 null 	globalEval: function( data ) {
603 null 			( window.execScript || function( data ) {
611 null 	camelCase: function( string ) {
615 null 	nodeName: function( elem, name ) {
620 null 	each: function( obj, callback, args ) {
671 null 		function( text ) {
678 null 		function( text ) {
685 null 	makeArray: function( arr, results ) {
702 null 	inArray: function( elem, arr, i ) {
724 null 	merge: function( first, second ) {
744 null 	grep: function( elems, callback, inv ) {
764 null 	map: function( elems, callback, arg ) {
801 null 	proxy: function( fn, context ) {
818 null 		proxy = function() {
830 null 	access: function( elems, fn, key, value, chainable, emptyGet, raw ) {
859 null 					fn = function( elem, key, value ) {
881 null 	now: function() {
886 null jQuery.ready.promise = function( obj ) {
923 doScrollCheck 				(function doScrollCheck() {
948 null jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
977 null 	jQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) {
1005 null jQuery.Callbacks = function( options ) {
1030 null 		fire = function( data ) {
1059 null 			add: function() {
1063 add 					(function add( args ) {
1064 null 						jQuery.each( args, function( _, arg ) {
1090 null 			remove: function() {
1092 null 					jQuery.each( arguments, function( _, arg ) {
1112 null 			has: function( fn ) {
1116 null 			empty: function() {
1121 null 			disable: function() {
1126 null 			disabled: function() {
1130 null 			lock: function() {
1138 null 			locked: function() {
1142 null 			fireWith: function( context, args ) {
1155 null 			fire: function() {
1160 null 			fired: function() {
1169 null 	Deferred: function( func ) {
1178 null 				state: function() {
1181 null 				always: function() {
1185 null 				then: function( /* fnDone, fnFail, fnProgress */ ) {
1187 null 					return jQuery.Deferred(function( newDefer ) {
1188 null 						jQuery.each( tuples, function( i, tuple ) {
1192 null 							deferred[ tuple[1] ](function() {
1209 null 				promise: function( obj ) {
1219 null 		jQuery.each( tuples, function( i, tuple ) {
1228 null 				list.add(function() {
1237 null 			deferred[ tuple[0] ] = function() {
1257 null 	when: function( subordinate /* , ..., subordinateN */ ) {
1269 null 			updateFunc = function( i, contexts, values ) {
1270 null 				return function( value ) {
1308 null jQuery.support = (function() {
1435 null 		div.attachEvent( "onclick", function() {
1455 null 	jQuery(function() {
1749 null 	hasData: function( elem ) {
1754 null 	data: function( elem, name, data ) {
1758 null 	removeData: function( elem, name ) {
1763 null 	_data: function( elem, name, data ) {
1767 null 	_removeData: function( elem, name ) {
1772 null 	acceptData: function( elem ) {
1786 null 	data: function( key, value ) {
1817 null 			return this.each(function() {
1822 null 		return jQuery.access( this, function( value ) {
1829 null 			this.each(function() {
1835 null 	removeData: function( key ) {
1836 null 		return this.each(function() {
1890 null 	queue: function( elem, type, data ) {
1909 null 	dequeue: function( elem, type ) {
1916 null 			next = function() {
1946 null 	_queueHooks: function( elem, type ) {
1949 null 			empty: jQuery.Callbacks("once memory").add(function() {
1958 null 	queue: function( type, data ) {
1973 null 			this.each(function() {
1984 null 	dequeue: function( type ) {
1985 null 		return this.each(function() {
1991 null 	delay: function( time, type ) {
1995 null 		return this.queue( type, function( next, hooks ) {
1997 null 			hooks.stop = function() {
2002 null 	clearQueue: function( type ) {
2007 null 	promise: function( type, obj ) {
2013 null 			resolve = function() {
2047 null 	attr: function( name, value ) {
2051 null 	removeAttr: function( name ) {
2052 null 		return this.each(function() {
2057 null 	prop: function( name, value ) {
2061 null 	removeProp: function( name ) {
2063 null 		return this.each(function() {
2072 null 	addClass: function( value ) {
2079 null 			return this.each(function( j ) {
2111 null 	removeClass: function( value ) {
2118 null 			return this.each(function( j ) {
2149 null 	toggleClass: function( value, stateVal ) {
2154 null 			return this.each(function( i ) {
2159 null 		return this.each(function() {
2190 null 	hasClass: function( selector ) {
2203 null 	val: function( value ) {
2229 null 		return this.each(function( i ) {
2249 null 				val = jQuery.map(val, function ( value ) {
2267 null 			get: function( elem ) {
2275 null 			get: function( elem ) {
2312 null 			set: function( elem, value ) {
2315 null 				jQuery(elem).find("option").each(function() {
2327 null 	attr: function( elem, name, value ) {
2381 null 	removeAttr: function( elem, value ) {
2413 null 			set: function( elem, value ) {
2443 null 	prop: function( elem, name, value ) {
2480 null 			get: function( elem ) {
2497 null 	get: function( elem, name ) {
2521 null 	set: function( elem, value, name ) {
2541 null 		get: function( elem, name ) {
2550 null 		set: function( elem, value, name ) {
2568 null 		get: function( elem, name ) {
2574 null 		set: function( elem, value, name ) {
2596 null 		set: function( elem, value, name ) {
2603 null 	jQuery.each([ "width", "height" ], function( i, name ) {
2605 null 			set: function( elem, value ) {
2619 null 	jQuery.each([ "href", "src", "width", "height" ], function( i, name ) {
2621 null 			get: function( elem ) {
2629 null 	jQuery.each([ "href", "src" ], function( i, name ) {
2631 null 			get: function( elem ) {
2640 null 		get: function( elem ) {
2646 null 		set: function( elem, value ) {
2656 null 		get: function( elem ) {
2679 null 	jQuery.each([ "radio", "checkbox" ], function() {
2681 null 			get: function( elem ) {
2688 null jQuery.each([ "radio", "checkbox" ], function() {
2690 null 		set: function( elem, value ) {
2719 null 	add: function( elem, types, handler, data, selector ) {
2747 null 			eventHandle = elemData.handle = function( e ) {
2829 null 	remove: function( elem, types, handler, selector, mappedTypes ) {
2902 null 	trigger: function( event, data, elem, onlyHandlers ) {
3036 null 	dispatch: function( event ) {
3095 null 	handlers: function( event, handlers ) {
3142 null 	fix: function( event ) {
3195 null 		filter: function( event, original ) {
3208 null 		filter: function( event, original ) {
3245 null 			trigger: function() {
3254 null 			trigger: function() {
3269 null 			trigger: function() {
3279 null 			postDispatch: function( event ) {
3289 null 	simulate: function( type, elem, event, bubble ) {
3313 null 	function( elem, type, handle ) {
3318 null 	function( elem, type, handle ) {
3333 null jQuery.Event = function( src, props ) {
3373 null 	preventDefault: function() {
3391 null 	stopPropagation: function() {
3407 null 	stopImmediatePropagation: function() {
3417 null }, function( orig, fix ) {
3422 null 		handle: function( event ) {
3444 null 		setup: function() {
3451 null 			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
3456 null 					jQuery.event.add( form, "submit._submit", function( event ) {
3465 null 		postDispatch: function( event ) {
3475 null 		teardown: function() {
3492 null 		setup: function() {
3499 null 					jQuery.event.add( this, "propertychange._change", function( event ) {
3504 null 					jQuery.event.add( this, "click._change", function( event ) {
3515 null 			jQuery.event.add( this, "beforeactivate._change", function( e ) {
3519 null 					jQuery.event.add( elem, "change._change", function( event ) {
3529 null 		handle: function( event ) {
3538 null 		teardown: function() {
3548 null 	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {
3552 null 			handler = function( event ) {
3557 null 			setup: function() {
3562 null 			teardown: function() {
3573 null 	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
3614 null 			fn = function( event ) {
3622 null 		return this.each( function() {
3626 null 	one: function( types, selector, data, fn ) {
3629 null 	off: function( types, selector, fn ) {
3656 null 		return this.each(function() {
3661 null 	bind: function( types, data, fn ) {
3664 null 	unbind: function( types, fn ) {
3668 null 	delegate: function( selector, types, data, fn ) {
3671 null 	undelegate: function( selector, types, fn ) {
3676 null 	trigger: function( type, data ) {
3677 null 		return this.each(function() {
3681 null 	triggerHandler: function( type, data ) {
3694 null (function( window, undefined ) {
3736 null 	indexOf = arr.indexOf || function( elem ) {
3812 null 	funescape = function( _, escaped ) {
3828 null 	slice = function( i ) {
3842 isNative function isNative( fn ) {
3852 createCache function createCache() {
3856 null 	return (cache = function( key, value ) {
3870 markFunction function markFunction( fn ) {
3879 assert function assert( fn ) {
3892 Sizzle function Sizzle( selector, context, results, seed ) {
4006 null isXML = Sizzle.isXML = function( elem ) {
4018 null setDocument = Sizzle.setDocument = function( node ) {
4034 null 	support.tagNameNoComments = assert(function( div ) {
4040 null 	support.attributes = assert(function( div ) {
4048 null 	support.getByClassName = assert(function( div ) {
4062 null 	support.getByName = assert(function( div ) {
4083 null 	Expr.attrHandle = assert(function( div ) {
4090 null 			"href": function( elem ) {
4093 null 			"type": function( elem ) {
4100 null 		Expr.find["ID"] = function( id, context ) {
4108 null 		Expr.filter["ID"] = function( id ) {
4110 null 			return function( elem ) {
4115 null 		Expr.find["ID"] = function( id, context ) {
4126 null 		Expr.filter["ID"] =  function( id ) {
4128 null 			return function( elem ) {
4137 null 		function( tag, context ) {
4142 null 		function( tag, context ) {
4162 null 	Expr.find["NAME"] = support.getByName && function( tag, context ) {
4169 null 	Expr.find["CLASS"] = support.getByClassName && function( className, context ) {
4188 null 		assert(function( div ) {
4209 null 		assert(function( div ) {
4236 null 		assert(function( div ) {
4255 null 		function( a, b ) {
4264 null 		function( a, b ) {
4277 null 	function( a, b ) {
4300 null 	function( a, b ) {
4360 null Sizzle.matches = function( expr, elements ) {
4364 null Sizzle.matchesSelector = function( elem, expr ) {
4391 null Sizzle.contains = function( context, elem ) {
4399 null Sizzle.attr = function( elem, name ) {
4421 null Sizzle.error = function( msg ) {
4426 null Sizzle.uniqueSort = function( results ) {
4450 siblingCheck function siblingCheck( a, b ) {
4472 createInputPseudo function createInputPseudo( type ) {
4473 null 	return function( elem ) {
4480 createButtonPseudo function createButtonPseudo( type ) {
4481 null 	return function( elem ) {
4488 createPositionalPseudo function createPositionalPseudo( fn ) {
4489 null 	return markFunction(function( argument ) {
4491 null 		return markFunction(function( seed, matches ) {
4510 null getText = Sizzle.getText = function( elem ) {
4560 null 		"ATTR": function( match ) {
4573 null 		"CHILD": function( match ) {
4605 null 		"PSEUDO": function( match ) {
4636 null 		"TAG": function( nodeName ) {
4638 null 				return function() { return true; };
4642 null 			return function( elem ) {
4647 null 		"CLASS": function( className ) {
4652 null 				classCache( className, function( elem ) {
4657 null 		"ATTR": function( name, operator, check ) {
4658 null 			return function( elem ) {
4681 null 		"CHILD": function( type, what, argument, first, last ) {
4689 null 				function( elem ) {
4693 null 				function( elem, context, xml ) {
4770 null 		"PSEUDO": function( pseudo, argument ) {
4790 null 					markFunction(function( seed, matches ) {
4799 null 					function( elem ) {
4810 null 		"not": markFunction(function( selector ) {
4819 null 				markFunction(function( seed, matches, context, xml ) {
4831 null 				function( elem, context, xml ) {
4838 null 		"has": markFunction(function( selector ) {
4839 null 			return function( elem ) {
4844 null 		"contains": markFunction(function( text ) {
4845 null 			return function( elem ) {
4857 null 		"lang": markFunction( function( lang ) {
4863 null 			return function( elem ) {
4879 null 		"target": function( elem ) {
4884 null 		"root": function( elem ) {
4888 null 		"focus": function( elem ) {
4893 null 		"enabled": function( elem ) {
4897 null 		"disabled": function( elem ) {
4901 null 		"checked": function( elem ) {
4908 null 		"selected": function( elem ) {
4919 null 		"empty": function( elem ) {
4933 null 		"parent": function( elem ) {
4938 null 		"header": function( elem ) {
4942 null 		"input": function( elem ) {
4946 null 		"button": function( elem ) {
4951 null 		"text": function( elem ) {
4961 null 		"first": createPositionalPseudo(function() {
4965 null 		"last": createPositionalPseudo(function( matchIndexes, length ) {
4969 null 		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
4973 null 		"even": createPositionalPseudo(function( matchIndexes, length ) {
4981 null 		"odd": createPositionalPseudo(function( matchIndexes, length ) {
4989 null 		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
4997 null 		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
5015 tokenize function tokenize( selector, parseOnly ) {
5082 toSelector function toSelector( tokens ) {
5092 addCombinator function addCombinator( matcher, combinator, base ) {
5099 null 		function( elem, context, xml ) {
5108 null 		function( elem, context, xml ) {
5142 elementMatcher function elementMatcher( matchers ) {
5144 null 		function( elem, context, xml ) {
5156 condense function condense( unmatched, map, filter, context, xml ) {
5177 setMatcher function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
5184 null 	return markFunction(function( seed, results, context, xml ) {
5270 matcherFromTokens function matcherFromTokens( tokens ) {
5278 null 		matchContext = addCombinator( function( elem ) {
5281 null 		matchAnyContext = addCombinator( function( elem ) {
5284 null 		matchers = [ function( elem, context, xml ) {
5322 matcherFromGroupMatchers function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
5327 null 		superMatcher = function( seed, context, xml, results, expandContext ) {
5423 null compile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {
5450 multipleContexts function multipleContexts( selector, contexts, results ) {
5459 select function select( selector, context, results, seed ) {
5528 setFilters function setFilters() {}
5560 null 	find: function( selector ) {
5566 null 			return this.pushStack( jQuery( selector ).filter(function() {
5586 null 	has: function( target ) {
5591 null 		return this.filter(function() {
5600 null 	not: function( selector ) {
5604 null 	filter: function( selector ) {
5608 null 	is: function( selector ) {
5619 null 	closest: function( selectors, context ) {
5645 null 	index: function( elem ) {
5663 null 	add: function( selector, context ) {
5672 null 	addBack: function( selector ) {
5690 null 	parent: function( elem ) {
5694 null 	parents: function( elem ) {
5697 null 	parentsUntil: function( elem, i, until ) {
5700 null 	next: function( elem ) {
5703 null 	prev: function( elem ) {
5706 null 	nextAll: function( elem ) {
5709 null 	prevAll: function( elem ) {
5712 null 	nextUntil: function( elem, i, until ) {
5715 null 	prevUntil: function( elem, i, until ) {
5718 null 	siblings: function( elem ) {
5721 null 	children: function( elem ) {
5724 null 	contents: function( elem ) {
5729 null }, function( name, fn ) {
5730 null 	jQuery.fn[ name ] = function( until, selector ) {
5752 null 	filter: function( expr, elems, not ) {
5762 null 	dir: function( elem, dir, until ) {
5775 null 	sibling: function( n, elem ) {
5796 null 		return jQuery.grep(elements, function( elem, i ) {
5802 null 		return jQuery.grep(elements, function( elem ) {
5807 null 		var filtered = jQuery.grep(elements, function( elem ) {
5818 null 	return jQuery.grep(elements, function( elem ) {
5876 null 	text: function( value ) {
5877 null 		return jQuery.access( this, function( value ) {
5884 null 	wrapAll: function( html ) {
5886 null 			return this.each(function(i) {
5899 null 			wrap.map(function() {
5913 null 	wrapInner: function( html ) {
5915 null 			return this.each(function(i) {
5920 null 		return this.each(function() {
5933 null 	wrap: function( html ) {
5936 null 		return this.each(function(i) {
5941 null 	unwrap: function() {
5942 null 		return this.parent().each(function() {
5949 null 	append: function() {
5950 null 		return this.domManip(arguments, true, function( elem ) {
5957 null 	prepend: function() {
5958 null 		return this.domManip(arguments, true, function( elem ) {
5965 null 	before: function() {
5966 null 		return this.domManip( arguments, false, function( elem ) {
5973 null 	after: function() {
5974 null 		return this.domManip( arguments, false, function( elem ) {
5982 null 	remove: function( selector, keepData ) {
6004 null 	empty: function() {
6029 null 	clone: function( dataAndEvents, deepDataAndEvents ) {
6033 null 		return this.map( function () {
6038 null 	html: function( value ) {
6039 null 		return jQuery.access( this, function( value ) {
6080 null 	replaceWith: function( value ) {
6089 null 		return this.domManip( [ value ], true, function( elem ) {
6100 null 	detach: function( selector ) {
6104 null 	domManip: function( args, table, callback ) {
6120 null 			return this.each(function( index ) {
6333 null }, function( name, original ) {
6334 null 	jQuery.fn[ name ] = function( selector ) {
6383 null 	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
6438 null 	buildFragment: function( elems, context, scripts, selection ) {
6565 null 	cleanData: function( elems, /* internal */ acceptData ) {
6725 null 	css: function( name, value ) {
6726 null 		return jQuery.access( this, function( elem, name, value ) {
6747 null 	show: function() {
6750 null 	hide: function() {
6753 null 	toggle: function( state ) {
6756 null 		return this.each(function() {
6771 null 			get: function( elem, computed ) {
6802 null 	style: function( elem, name, value, extra ) {
6867 null 	css: function( elem, name, extra, styles ) {
6902 null 	swap: function( elem, options, callback, args ) {
6926 null 	getStyles = function( elem ) {
6930 null 	curCSS = function( elem, name, _computed ) {
6969 null 	getStyles = function( elem ) {
6973 null 	curCSS = function( elem, name, _computed ) {
7147 null jQuery.each([ "height", "width" ], function( i, name ) {
7149 null 		get: function( elem, computed, extra ) {
7154 null 					jQuery.swap( elem, cssShow, function() {
7161 null 		set: function( elem, value, extra ) {
7178 null 		get: function( elem, computed ) {
7185 null 		set: function( elem, value ) {
7222 null jQuery(function() {
7225 null 			get: function( elem, computed ) {
7240 null 		jQuery.each( [ "top", "left" ], function( i, prop ) {
7242 null 				get: function( elem, computed ) {
7258 null 	jQuery.expr.filters.hidden = function( elem ) {
7265 null 	jQuery.expr.filters.visible = function( elem ) {
7275 null }, function( prefix, suffix ) {
7277 null 		expand: function( value ) {
7304 null 	serialize: function() {
7307 null 	serializeArray: function() {
7308 null 		return this.map(function(){
7313 null 		.filter(function(){
7320 null 		.map(function( i, elem ){
7326 null 					jQuery.map( val, function( val ){
7336 null jQuery.param = function( a, traditional ) {
7339 null 		add = function( key, value ) {
7353 null 		jQuery.each( a, function() {
7374 null 		jQuery.each( obj, function( i, v ) {
7398 null 	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {
7401 null 	jQuery.fn[ name ] = function( data, fn ) {
7408 null jQuery.fn.hover = function( fnOver, fnOut ) {
7470 null 	return function( dataTypeExpression, func ) {
7504 inspect 	function inspect( dataType ) {
7507 null 		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
7542 null jQuery.fn.load = function( url, params, callback ) {
7577 null 		}).done(function( responseText ) {
7591 null 		}).complete( callback && function( jqXHR, status ) {
7600 null jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ){
7601 null 	jQuery.fn[ type ] = function( fn ){
7606 null jQuery.each( [ "get", "post" ], function( i, method ) {
7607 null 	jQuery[ method ] = function( url, data, callback, type ) {
7703 null 	ajaxSetup: function( target, settings ) {
7717 null 	ajax: function( url, options ) {
7770 null 				getResponseHeader: function( key ) {
7785 null 				getAllResponseHeaders: function() {
7790 null 				setRequestHeader: function( name, value ) {
7800 null 				overrideMimeType: function( type ) {
7808 null 				statusCode: function( map ) {
7825 null 				abort: function( statusText ) {
7972 null 				timeoutTimer = setTimeout(function() {
7992 done 		function done( status, nativeStatusText, responses, headers ) {
8104 null 	getScript: function( url, callback ) {
8108 null 	getJSON: function( url, data, callback ) {
8271 null 		"text script": function( text ) {
8279 null jQuery.ajaxPrefilter( "script", function( s ) {
8290 null jQuery.ajaxTransport( "script", function(s) {
8300 null 			send: function( _, callback ) {
8313 null 				script.onload = script.onreadystatechange = function( _, isAbort ) {
8340 null 			abort: function() {
8354 null 	jsonpCallback: function() {
8362 null jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {
8386 null 		s.converters["script json"] = function() {
8398 null 		window[ callbackName ] = function() {
8403 null 		jqXHR.always(function() {
8431 null 	xhrOnUnloadAbort = window.ActiveXObject && function() {
8461 null 	function() {
8475 null 	jQuery.ajaxTransport(function( s ) {
8482 null 				send: function( headers, complete ) {
8530 null 					callback = function( _, isAbort ) {
8626 null 				abort: function() {
8641 null 		"*": [function( prop, value ) {
8686 null 	setTimeout(function() {
8693 null 	jQuery.each( props, function( prop, value ) {
8712 null 		deferred = jQuery.Deferred().always( function() {
8716 null 		tick = function() {
8750 null 			createTween: function( prop, end ) {
8756 null 			stop: function( gotoEnd ) {
8850 null 	tweener: function( props, callback ) {
8869 null 	prefilter: function( callback, prepend ) {
8895 null 			hooks.empty.fire = function() {
8903 null 		anim.always(function() {
8906 null 			anim.always(function() {
8942 null 			anim.always(function() {
8978 null 			anim.done(function() {
8982 null 		anim.done(function() {
9012 null 	init: function( elem, options, prop, end, easing, unit ) {
9021 null 	cur: function() {
9028 null 	run: function( percent ) {
9058 null 		get: function( tween ) {
9074 null 		set: function( tween ) {
9092 null 	set: function( tween ) {
9099 null jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
9101 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9109 null 	fadeTo: function( speed, to, easing, callback ) {
9117 null 	animate: function( prop, speed, easing, callback ) {
9120 null 			doAnimation = function() {
9123 null 				doAnimation.finish = function() {
9137 null 	stop: function( type, clearQueue, gotoEnd ) {
9138 null 		var stopQueue = function( hooks ) {
9153 null 		return this.each(function() {
9187 null 	finish: function( type ) {
9191 null 		return this.each(function() {
9259 null }, function( name, props ) {
9260 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9265 null jQuery.speed = function( speed, easing, fn ) {
9284 null 	opt.complete = function() {
9298 null 	linear: function( p ) {
9301 null 	swing: function( p ) {
9308 null jQuery.fx.tick = function() {
9329 null jQuery.fx.timer = function( timer ) {
9337 null jQuery.fx.start = function() {
9343 null jQuery.fx.stop = function() {
9359 null 	jQuery.expr.filters.animated = function( elem ) {
9360 null 		return jQuery.grep(jQuery.timers, function( fn ) {
9365 null jQuery.fn.offset = function( options ) {
9369 null 			this.each(function( i ) {
9404 null 	setOffset: function( elem, options, i ) {
9451 null 	position: function() {
9488 null 	offsetParent: function() {
9489 null 		return this.map(function() {
9501 null jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
9504 null 	jQuery.fn[ method ] = function( val ) {
9505 null 		return jQuery.access( this, function( elem, method, val ) {
9535 null jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
9536 null 	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
9538 null 		jQuery.fn[ funcName ] = function( margin, value ) {
9542 null 			return jQuery.access( this, function( elem, type, value ) {
952 isArraylike function isArraylike( obj ) {
975 createOptions function createOptions( options ) {
1552 internalData function internalData( elem, name, data, pvt /* Internal Use Only */ ){
1646 internalRemoveData function internalRemoveData( elem, name, pvt ) {
1842 dataAttr function dataAttr( elem, key, data ) {
1874 isEmptyDataObject function isEmptyDataObject( obj ) {
2703 returnTrue function returnTrue() {
2707 returnFalse function returnFalse() {
5681 sibling function sibling( cur, dir ) {
5789 winnow function winnow( elements, qualifier, keep ) {
5822 createSafeFragment function createSafeFragment( document ) {
6203 findOrAppend function findOrAppend( elem, tag ) {
6208 disableScript function disableScript( elem ) {
6213 restoreScript function restoreScript( elem ) {
6224 setGlobalEval function setGlobalEval( elems, refElements ) {
6232 cloneCopyEvent function cloneCopyEvent( src, dest ) {
6260 fixCloneNodeIssues function fixCloneNodeIssues( src, dest ) {
6353 getAll function getAll( context, tag ) {
6376 fixDefaultChecked function fixDefaultChecked( elem ) {
6641 vendorPropName function vendorPropName( style, name ) {
6663 isHidden function isHidden( elem, el ) {
6670 showHide function showHide( elements, show ) {
7017 setPositiveNumber function setPositiveNumber( elem, value, subtract ) {
7025 augmentWidthOrHeight function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
7064 getWidthOrHeight function getWidthOrHeight( elem, name, extra ) {
7108 css_defaultDisplay function css_defaultDisplay( nodeName ) {
7140 actualDisplay function actualDisplay( name, doc ) {
7369 buildParams function buildParams( prefix, obj, traditional, add ) {
7467 addToPrefiltersOrTransports function addToPrefiltersOrTransports( structure ) {
7499 inspectPrefiltersOrTransports function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {
7526 ajaxExtend function ajaxExtend( target, src ) {
8118 ajaxHandleResponses function ajaxHandleResponses( s, jqXHR, responses ) {
8179 ajaxConvert function ajaxConvert( s, response ) {
8440 createStandardXHR function createStandardXHR() {
8446 createActiveXHR function createActiveXHR() {
8685 createFxNow function createFxNow() {
8692 createTweens function createTweens( animation, props ) {
8707 Animation function Animation( elem, properties, options ) {
8811 propFilter function propFilter( props, specialEasing ) {
8878 defaultPrefilter function defaultPrefilter( elem, props, opts ) {
9005 Tween function Tween( elem, options, prop, end, easing ) {
9231 genFx function genFx( type, includeWidth ) {
9527 getWindow function getWindow( elem ) {
60 null 	jQuery = function( selector, context ) {
94 null 	fcamelCase = function( all, letter ) {
99 null 	completed = function( event ) {
108 null 	detach = function() {
124 null 	init: function( selector, context, rootjQuery ) {
232 null 	size: function() {
236 null 	toArray: function() {
242 null 	get: function( num ) {
254 null 	pushStack: function( elems ) {
270 null 	each: function( callback, args ) {
274 null 	ready: function( fn ) {
281 null 	slice: function() {
285 null 	first: function() {
289 null 	last: function() {
293 null 	eq: function( i ) {
299 null 	map: function( callback ) {
300 null 		return this.pushStack( jQuery.map(this, function( elem, i ) {
305 null 	end: function() {
319 null jQuery.extend = jQuery.fn.extend = function() {
384 null 	noConflict: function( deep ) {
404 null 	holdReady: function( hold ) {
413 null 	ready: function( wait ) {
445 null 	isFunction: function( obj ) {
449 null 	isArray: Array.isArray || function( obj ) {
453 null 	isWindow: function( obj ) {
457 null 	isNumeric: function( obj ) {
461 null 	type: function( obj ) {
470 null 	isPlainObject: function( obj ) {
499 null 	isEmptyObject: function( obj ) {
507 null 	error: function( msg ) {
514 null 	parseHTML: function( data, context, keepScripts ) {
539 null 	parseJSON: function( data ) {
570 null 	parseXML: function( data ) {
593 null 	noop: function() {},
598 null 	globalEval: function( data ) {
603 null 			( window.execScript || function( data ) {
611 null 	camelCase: function( string ) {
615 null 	nodeName: function( elem, name ) {
620 null 	each: function( obj, callback, args ) {
671 null 		function( text ) {
678 null 		function( text ) {
685 null 	makeArray: function( arr, results ) {
702 null 	inArray: function( elem, arr, i ) {
724 null 	merge: function( first, second ) {
744 null 	grep: function( elems, callback, inv ) {
764 null 	map: function( elems, callback, arg ) {
801 null 	proxy: function( fn, context ) {
818 null 		proxy = function() {
830 null 	access: function( elems, fn, key, value, chainable, emptyGet, raw ) {
859 null 					fn = function( elem, key, value ) {
881 null 	now: function() {
886 null jQuery.ready.promise = function( obj ) {
923 doScrollCheck 				(function doScrollCheck() {
948 null jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
977 null 	jQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) {
1005 null jQuery.Callbacks = function( options ) {
1030 null 		fire = function( data ) {
1059 null 			add: function() {
1063 add 					(function add( args ) {
1064 null 						jQuery.each( args, function( _, arg ) {
1090 null 			remove: function() {
1092 null 					jQuery.each( arguments, function( _, arg ) {
1112 null 			has: function( fn ) {
1116 null 			empty: function() {
1121 null 			disable: function() {
1126 null 			disabled: function() {
1130 null 			lock: function() {
1138 null 			locked: function() {
1142 null 			fireWith: function( context, args ) {
1155 null 			fire: function() {
1160 null 			fired: function() {
1169 null 	Deferred: function( func ) {
1178 null 				state: function() {
1181 null 				always: function() {
1185 null 				then: function( /* fnDone, fnFail, fnProgress */ ) {
1187 null 					return jQuery.Deferred(function( newDefer ) {
1188 null 						jQuery.each( tuples, function( i, tuple ) {
1192 null 							deferred[ tuple[1] ](function() {
1209 null 				promise: function( obj ) {
1219 null 		jQuery.each( tuples, function( i, tuple ) {
1228 null 				list.add(function() {
1237 null 			deferred[ tuple[0] ] = function() {
1257 null 	when: function( subordinate /* , ..., subordinateN */ ) {
1269 null 			updateFunc = function( i, contexts, values ) {
1270 null 				return function( value ) {
1308 null jQuery.support = (function() {
1435 null 		div.attachEvent( "onclick", function() {
1455 null 	jQuery(function() {
1749 null 	hasData: function( elem ) {
1754 null 	data: function( elem, name, data ) {
1758 null 	removeData: function( elem, name ) {
1763 null 	_data: function( elem, name, data ) {
1767 null 	_removeData: function( elem, name ) {
1772 null 	acceptData: function( elem ) {
1786 null 	data: function( key, value ) {
1817 null 			return this.each(function() {
1822 null 		return jQuery.access( this, function( value ) {
1829 null 			this.each(function() {
1835 null 	removeData: function( key ) {
1836 null 		return this.each(function() {
1890 null 	queue: function( elem, type, data ) {
1909 null 	dequeue: function( elem, type ) {
1916 null 			next = function() {
1946 null 	_queueHooks: function( elem, type ) {
1949 null 			empty: jQuery.Callbacks("once memory").add(function() {
1958 null 	queue: function( type, data ) {
1973 null 			this.each(function() {
1984 null 	dequeue: function( type ) {
1985 null 		return this.each(function() {
1991 null 	delay: function( time, type ) {
1995 null 		return this.queue( type, function( next, hooks ) {
1997 null 			hooks.stop = function() {
2002 null 	clearQueue: function( type ) {
2007 null 	promise: function( type, obj ) {
2013 null 			resolve = function() {
2047 null 	attr: function( name, value ) {
2051 null 	removeAttr: function( name ) {
2052 null 		return this.each(function() {
2057 null 	prop: function( name, value ) {
2061 null 	removeProp: function( name ) {
2063 null 		return this.each(function() {
2072 null 	addClass: function( value ) {
2079 null 			return this.each(function( j ) {
2111 null 	removeClass: function( value ) {
2118 null 			return this.each(function( j ) {
2149 null 	toggleClass: function( value, stateVal ) {
2154 null 			return this.each(function( i ) {
2159 null 		return this.each(function() {
2190 null 	hasClass: function( selector ) {
2203 null 	val: function( value ) {
2229 null 		return this.each(function( i ) {
2249 null 				val = jQuery.map(val, function ( value ) {
2267 null 			get: function( elem ) {
2275 null 			get: function( elem ) {
2312 null 			set: function( elem, value ) {
2315 null 				jQuery(elem).find("option").each(function() {
2327 null 	attr: function( elem, name, value ) {
2381 null 	removeAttr: function( elem, value ) {
2413 null 			set: function( elem, value ) {
2443 null 	prop: function( elem, name, value ) {
2480 null 			get: function( elem ) {
2497 null 	get: function( elem, name ) {
2521 null 	set: function( elem, value, name ) {
2541 null 		get: function( elem, name ) {
2550 null 		set: function( elem, value, name ) {
2568 null 		get: function( elem, name ) {
2574 null 		set: function( elem, value, name ) {
2596 null 		set: function( elem, value, name ) {
2603 null 	jQuery.each([ "width", "height" ], function( i, name ) {
2605 null 			set: function( elem, value ) {
2619 null 	jQuery.each([ "href", "src", "width", "height" ], function( i, name ) {
2621 null 			get: function( elem ) {
2629 null 	jQuery.each([ "href", "src" ], function( i, name ) {
2631 null 			get: function( elem ) {
2640 null 		get: function( elem ) {
2646 null 		set: function( elem, value ) {
2656 null 		get: function( elem ) {
2679 null 	jQuery.each([ "radio", "checkbox" ], function() {
2681 null 			get: function( elem ) {
2688 null jQuery.each([ "radio", "checkbox" ], function() {
2690 null 		set: function( elem, value ) {
2719 null 	add: function( elem, types, handler, data, selector ) {
2747 null 			eventHandle = elemData.handle = function( e ) {
2829 null 	remove: function( elem, types, handler, selector, mappedTypes ) {
2902 null 	trigger: function( event, data, elem, onlyHandlers ) {
3036 null 	dispatch: function( event ) {
3095 null 	handlers: function( event, handlers ) {
3142 null 	fix: function( event ) {
3195 null 		filter: function( event, original ) {
3208 null 		filter: function( event, original ) {
3245 null 			trigger: function() {
3254 null 			trigger: function() {
3269 null 			trigger: function() {
3279 null 			postDispatch: function( event ) {
3289 null 	simulate: function( type, elem, event, bubble ) {
3313 null 	function( elem, type, handle ) {
3318 null 	function( elem, type, handle ) {
3333 null jQuery.Event = function( src, props ) {
3373 null 	preventDefault: function() {
3391 null 	stopPropagation: function() {
3407 null 	stopImmediatePropagation: function() {
3417 null }, function( orig, fix ) {
3422 null 		handle: function( event ) {
3444 null 		setup: function() {
3451 null 			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
3456 null 					jQuery.event.add( form, "submit._submit", function( event ) {
3465 null 		postDispatch: function( event ) {
3475 null 		teardown: function() {
3492 null 		setup: function() {
3499 null 					jQuery.event.add( this, "propertychange._change", function( event ) {
3504 null 					jQuery.event.add( this, "click._change", function( event ) {
3515 null 			jQuery.event.add( this, "beforeactivate._change", function( e ) {
3519 null 					jQuery.event.add( elem, "change._change", function( event ) {
3529 null 		handle: function( event ) {
3538 null 		teardown: function() {
3548 null 	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {
3552 null 			handler = function( event ) {
3557 null 			setup: function() {
3562 null 			teardown: function() {
3573 null 	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
3614 null 			fn = function( event ) {
3622 null 		return this.each( function() {
3626 null 	one: function( types, selector, data, fn ) {
3629 null 	off: function( types, selector, fn ) {
3656 null 		return this.each(function() {
3661 null 	bind: function( types, data, fn ) {
3664 null 	unbind: function( types, fn ) {
3668 null 	delegate: function( selector, types, data, fn ) {
3671 null 	undelegate: function( selector, types, fn ) {
3676 null 	trigger: function( type, data ) {
3677 null 		return this.each(function() {
3681 null 	triggerHandler: function( type, data ) {
3694 null (function( window, undefined ) {
3736 null 	indexOf = arr.indexOf || function( elem ) {
3812 null 	funescape = function( _, escaped ) {
3828 null 	slice = function( i ) {
3842 isNative function isNative( fn ) {
3852 createCache function createCache() {
3856 null 	return (cache = function( key, value ) {
3870 markFunction function markFunction( fn ) {
3879 assert function assert( fn ) {
3892 Sizzle function Sizzle( selector, context, results, seed ) {
4006 null isXML = Sizzle.isXML = function( elem ) {
4018 null setDocument = Sizzle.setDocument = function( node ) {
4034 null 	support.tagNameNoComments = assert(function( div ) {
4040 null 	support.attributes = assert(function( div ) {
4048 null 	support.getByClassName = assert(function( div ) {
4062 null 	support.getByName = assert(function( div ) {
4083 null 	Expr.attrHandle = assert(function( div ) {
4090 null 			"href": function( elem ) {
4093 null 			"type": function( elem ) {
4100 null 		Expr.find["ID"] = function( id, context ) {
4108 null 		Expr.filter["ID"] = function( id ) {
4110 null 			return function( elem ) {
4115 null 		Expr.find["ID"] = function( id, context ) {
4126 null 		Expr.filter["ID"] =  function( id ) {
4128 null 			return function( elem ) {
4137 null 		function( tag, context ) {
4142 null 		function( tag, context ) {
4162 null 	Expr.find["NAME"] = support.getByName && function( tag, context ) {
4169 null 	Expr.find["CLASS"] = support.getByClassName && function( className, context ) {
4188 null 		assert(function( div ) {
4209 null 		assert(function( div ) {
4236 null 		assert(function( div ) {
4255 null 		function( a, b ) {
4264 null 		function( a, b ) {
4277 null 	function( a, b ) {
4300 null 	function( a, b ) {
4360 null Sizzle.matches = function( expr, elements ) {
4364 null Sizzle.matchesSelector = function( elem, expr ) {
4391 null Sizzle.contains = function( context, elem ) {
4399 null Sizzle.attr = function( elem, name ) {
4421 null Sizzle.error = function( msg ) {
4426 null Sizzle.uniqueSort = function( results ) {
4450 siblingCheck function siblingCheck( a, b ) {
4472 createInputPseudo function createInputPseudo( type ) {
4473 null 	return function( elem ) {
4480 createButtonPseudo function createButtonPseudo( type ) {
4481 null 	return function( elem ) {
4488 createPositionalPseudo function createPositionalPseudo( fn ) {
4489 null 	return markFunction(function( argument ) {
4491 null 		return markFunction(function( seed, matches ) {
4510 null getText = Sizzle.getText = function( elem ) {
4560 null 		"ATTR": function( match ) {
4573 null 		"CHILD": function( match ) {
4605 null 		"PSEUDO": function( match ) {
4636 null 		"TAG": function( nodeName ) {
4638 null 				return function() { return true; };
4642 null 			return function( elem ) {
4647 null 		"CLASS": function( className ) {
4652 null 				classCache( className, function( elem ) {
4657 null 		"ATTR": function( name, operator, check ) {
4658 null 			return function( elem ) {
4681 null 		"CHILD": function( type, what, argument, first, last ) {
4689 null 				function( elem ) {
4693 null 				function( elem, context, xml ) {
4770 null 		"PSEUDO": function( pseudo, argument ) {
4790 null 					markFunction(function( seed, matches ) {
4799 null 					function( elem ) {
4810 null 		"not": markFunction(function( selector ) {
4819 null 				markFunction(function( seed, matches, context, xml ) {
4831 null 				function( elem, context, xml ) {
4838 null 		"has": markFunction(function( selector ) {
4839 null 			return function( elem ) {
4844 null 		"contains": markFunction(function( text ) {
4845 null 			return function( elem ) {
4857 null 		"lang": markFunction( function( lang ) {
4863 null 			return function( elem ) {
4879 null 		"target": function( elem ) {
4884 null 		"root": function( elem ) {
4888 null 		"focus": function( elem ) {
4893 null 		"enabled": function( elem ) {
4897 null 		"disabled": function( elem ) {
4901 null 		"checked": function( elem ) {
4908 null 		"selected": function( elem ) {
4919 null 		"empty": function( elem ) {
4933 null 		"parent": function( elem ) {
4938 null 		"header": function( elem ) {
4942 null 		"input": function( elem ) {
4946 null 		"button": function( elem ) {
4951 null 		"text": function( elem ) {
4961 null 		"first": createPositionalPseudo(function() {
4965 null 		"last": createPositionalPseudo(function( matchIndexes, length ) {
4969 null 		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
4973 null 		"even": createPositionalPseudo(function( matchIndexes, length ) {
4981 null 		"odd": createPositionalPseudo(function( matchIndexes, length ) {
4989 null 		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
4997 null 		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
5015 tokenize function tokenize( selector, parseOnly ) {
5082 toSelector function toSelector( tokens ) {
5092 addCombinator function addCombinator( matcher, combinator, base ) {
5099 null 		function( elem, context, xml ) {
5108 null 		function( elem, context, xml ) {
5142 elementMatcher function elementMatcher( matchers ) {
5144 null 		function( elem, context, xml ) {
5156 condense function condense( unmatched, map, filter, context, xml ) {
5177 setMatcher function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
5184 null 	return markFunction(function( seed, results, context, xml ) {
5270 matcherFromTokens function matcherFromTokens( tokens ) {
5278 null 		matchContext = addCombinator( function( elem ) {
5281 null 		matchAnyContext = addCombinator( function( elem ) {
5284 null 		matchers = [ function( elem, context, xml ) {
5322 matcherFromGroupMatchers function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
5327 null 		superMatcher = function( seed, context, xml, results, expandContext ) {
5423 null compile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {
5450 multipleContexts function multipleContexts( selector, contexts, results ) {
5459 select function select( selector, context, results, seed ) {
5528 setFilters function setFilters() {}
5560 null 	find: function( selector ) {
5566 null 			return this.pushStack( jQuery( selector ).filter(function() {
5586 null 	has: function( target ) {
5591 null 		return this.filter(function() {
5600 null 	not: function( selector ) {
5604 null 	filter: function( selector ) {
5608 null 	is: function( selector ) {
5619 null 	closest: function( selectors, context ) {
5645 null 	index: function( elem ) {
5663 null 	add: function( selector, context ) {
5672 null 	addBack: function( selector ) {
5690 null 	parent: function( elem ) {
5694 null 	parents: function( elem ) {
5697 null 	parentsUntil: function( elem, i, until ) {
5700 null 	next: function( elem ) {
5703 null 	prev: function( elem ) {
5706 null 	nextAll: function( elem ) {
5709 null 	prevAll: function( elem ) {
5712 null 	nextUntil: function( elem, i, until ) {
5715 null 	prevUntil: function( elem, i, until ) {
5718 null 	siblings: function( elem ) {
5721 null 	children: function( elem ) {
5724 null 	contents: function( elem ) {
5729 null }, function( name, fn ) {
5730 null 	jQuery.fn[ name ] = function( until, selector ) {
5752 null 	filter: function( expr, elems, not ) {
5762 null 	dir: function( elem, dir, until ) {
5775 null 	sibling: function( n, elem ) {
5796 null 		return jQuery.grep(elements, function( elem, i ) {
5802 null 		return jQuery.grep(elements, function( elem ) {
5807 null 		var filtered = jQuery.grep(elements, function( elem ) {
5818 null 	return jQuery.grep(elements, function( elem ) {
5876 null 	text: function( value ) {
5877 null 		return jQuery.access( this, function( value ) {
5884 null 	wrapAll: function( html ) {
5886 null 			return this.each(function(i) {
5899 null 			wrap.map(function() {
5913 null 	wrapInner: function( html ) {
5915 null 			return this.each(function(i) {
5920 null 		return this.each(function() {
5933 null 	wrap: function( html ) {
5936 null 		return this.each(function(i) {
5941 null 	unwrap: function() {
5942 null 		return this.parent().each(function() {
5949 null 	append: function() {
5950 null 		return this.domManip(arguments, true, function( elem ) {
5957 null 	prepend: function() {
5958 null 		return this.domManip(arguments, true, function( elem ) {
5965 null 	before: function() {
5966 null 		return this.domManip( arguments, false, function( elem ) {
5973 null 	after: function() {
5974 null 		return this.domManip( arguments, false, function( elem ) {
5982 null 	remove: function( selector, keepData ) {
6004 null 	empty: function() {
6029 null 	clone: function( dataAndEvents, deepDataAndEvents ) {
6033 null 		return this.map( function () {
6038 null 	html: function( value ) {
6039 null 		return jQuery.access( this, function( value ) {
6080 null 	replaceWith: function( value ) {
6089 null 		return this.domManip( [ value ], true, function( elem ) {
6100 null 	detach: function( selector ) {
6104 null 	domManip: function( args, table, callback ) {
6120 null 			return this.each(function( index ) {
6333 null }, function( name, original ) {
6334 null 	jQuery.fn[ name ] = function( selector ) {
6383 null 	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
6438 null 	buildFragment: function( elems, context, scripts, selection ) {
6565 null 	cleanData: function( elems, /* internal */ acceptData ) {
6725 null 	css: function( name, value ) {
6726 null 		return jQuery.access( this, function( elem, name, value ) {
6747 null 	show: function() {
6750 null 	hide: function() {
6753 null 	toggle: function( state ) {
6756 null 		return this.each(function() {
6771 null 			get: function( elem, computed ) {
6802 null 	style: function( elem, name, value, extra ) {
6867 null 	css: function( elem, name, extra, styles ) {
6902 null 	swap: function( elem, options, callback, args ) {
6926 null 	getStyles = function( elem ) {
6930 null 	curCSS = function( elem, name, _computed ) {
6969 null 	getStyles = function( elem ) {
6973 null 	curCSS = function( elem, name, _computed ) {
7147 null jQuery.each([ "height", "width" ], function( i, name ) {
7149 null 		get: function( elem, computed, extra ) {
7154 null 					jQuery.swap( elem, cssShow, function() {
7161 null 		set: function( elem, value, extra ) {
7178 null 		get: function( elem, computed ) {
7185 null 		set: function( elem, value ) {
7222 null jQuery(function() {
7225 null 			get: function( elem, computed ) {
7240 null 		jQuery.each( [ "top", "left" ], function( i, prop ) {
7242 null 				get: function( elem, computed ) {
7258 null 	jQuery.expr.filters.hidden = function( elem ) {
7265 null 	jQuery.expr.filters.visible = function( elem ) {
7275 null }, function( prefix, suffix ) {
7277 null 		expand: function( value ) {
7304 null 	serialize: function() {
7307 null 	serializeArray: function() {
7308 null 		return this.map(function(){
7313 null 		.filter(function(){
7320 null 		.map(function( i, elem ){
7326 null 					jQuery.map( val, function( val ){
7336 null jQuery.param = function( a, traditional ) {
7339 null 		add = function( key, value ) {
7353 null 		jQuery.each( a, function() {
7374 null 		jQuery.each( obj, function( i, v ) {
7398 null 	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {
7401 null 	jQuery.fn[ name ] = function( data, fn ) {
7408 null jQuery.fn.hover = function( fnOver, fnOut ) {
7470 null 	return function( dataTypeExpression, func ) {
7504 inspect 	function inspect( dataType ) {
7507 null 		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
7542 null jQuery.fn.load = function( url, params, callback ) {
7577 null 		}).done(function( responseText ) {
7591 null 		}).complete( callback && function( jqXHR, status ) {
7600 null jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ){
7601 null 	jQuery.fn[ type ] = function( fn ){
7606 null jQuery.each( [ "get", "post" ], function( i, method ) {
7607 null 	jQuery[ method ] = function( url, data, callback, type ) {
7703 null 	ajaxSetup: function( target, settings ) {
7717 null 	ajax: function( url, options ) {
7770 null 				getResponseHeader: function( key ) {
7785 null 				getAllResponseHeaders: function() {
7790 null 				setRequestHeader: function( name, value ) {
7800 null 				overrideMimeType: function( type ) {
7808 null 				statusCode: function( map ) {
7825 null 				abort: function( statusText ) {
7972 null 				timeoutTimer = setTimeout(function() {
7992 done 		function done( status, nativeStatusText, responses, headers ) {
8104 null 	getScript: function( url, callback ) {
8108 null 	getJSON: function( url, data, callback ) {
8271 null 		"text script": function( text ) {
8279 null jQuery.ajaxPrefilter( "script", function( s ) {
8290 null jQuery.ajaxTransport( "script", function(s) {
8300 null 			send: function( _, callback ) {
8313 null 				script.onload = script.onreadystatechange = function( _, isAbort ) {
8340 null 			abort: function() {
8354 null 	jsonpCallback: function() {
8362 null jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {
8386 null 		s.converters["script json"] = function() {
8398 null 		window[ callbackName ] = function() {
8403 null 		jqXHR.always(function() {
8431 null 	xhrOnUnloadAbort = window.ActiveXObject && function() {
8461 null 	function() {
8475 null 	jQuery.ajaxTransport(function( s ) {
8482 null 				send: function( headers, complete ) {
8530 null 					callback = function( _, isAbort ) {
8626 null 				abort: function() {
8641 null 		"*": [function( prop, value ) {
8686 null 	setTimeout(function() {
8693 null 	jQuery.each( props, function( prop, value ) {
8712 null 		deferred = jQuery.Deferred().always( function() {
8716 null 		tick = function() {
8750 null 			createTween: function( prop, end ) {
8756 null 			stop: function( gotoEnd ) {
8850 null 	tweener: function( props, callback ) {
8869 null 	prefilter: function( callback, prepend ) {
8895 null 			hooks.empty.fire = function() {
8903 null 		anim.always(function() {
8906 null 			anim.always(function() {
8942 null 			anim.always(function() {
8978 null 			anim.done(function() {
8982 null 		anim.done(function() {
9012 null 	init: function( elem, options, prop, end, easing, unit ) {
9021 null 	cur: function() {
9028 null 	run: function( percent ) {
9058 null 		get: function( tween ) {
9074 null 		set: function( tween ) {
9092 null 	set: function( tween ) {
9099 null jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
9101 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9109 null 	fadeTo: function( speed, to, easing, callback ) {
9117 null 	animate: function( prop, speed, easing, callback ) {
9120 null 			doAnimation = function() {
9123 null 				doAnimation.finish = function() {
9137 null 	stop: function( type, clearQueue, gotoEnd ) {
9138 null 		var stopQueue = function( hooks ) {
9153 null 		return this.each(function() {
9187 null 	finish: function( type ) {
9191 null 		return this.each(function() {
9259 null }, function( name, props ) {
9260 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9265 null jQuery.speed = function( speed, easing, fn ) {
9284 null 	opt.complete = function() {
9298 null 	linear: function( p ) {
9301 null 	swing: function( p ) {
9308 null jQuery.fx.tick = function() {
9329 null jQuery.fx.timer = function( timer ) {
9337 null jQuery.fx.start = function() {
9343 null jQuery.fx.stop = function() {
9359 null 	jQuery.expr.filters.animated = function( elem ) {
9360 null 		return jQuery.grep(jQuery.timers, function( fn ) {
9365 null jQuery.fn.offset = function( options ) {
9369 null 			this.each(function( i ) {
9404 null 	setOffset: function( elem, options, i ) {
9451 null 	position: function() {
9488 null 	offsetParent: function() {
9489 null 		return this.map(function() {
9501 null jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
9504 null 	jQuery.fn[ method ] = function( val ) {
9505 null 		return jQuery.access( this, function( elem, method, val ) {
9535 null jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
9536 null 	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
9538 null 		jQuery.fn[ funcName ] = function( margin, value ) {
9542 null 			return jQuery.access( this, function( elem, type, value ) {
952 isArraylike function isArraylike( obj ) {
975 createOptions function createOptions( options ) {
1552 internalData function internalData( elem, name, data, pvt /* Internal Use Only */ ){
1646 internalRemoveData function internalRemoveData( elem, name, pvt ) {
1842 dataAttr function dataAttr( elem, key, data ) {
1874 isEmptyDataObject function isEmptyDataObject( obj ) {
2703 returnTrue function returnTrue() {
2707 returnFalse function returnFalse() {
5681 sibling function sibling( cur, dir ) {
5789 winnow function winnow( elements, qualifier, keep ) {
5822 createSafeFragment function createSafeFragment( document ) {
6203 findOrAppend function findOrAppend( elem, tag ) {
6208 disableScript function disableScript( elem ) {
6213 restoreScript function restoreScript( elem ) {
6224 setGlobalEval function setGlobalEval( elems, refElements ) {
6232 cloneCopyEvent function cloneCopyEvent( src, dest ) {
6260 fixCloneNodeIssues function fixCloneNodeIssues( src, dest ) {
6353 getAll function getAll( context, tag ) {
6376 fixDefaultChecked function fixDefaultChecked( elem ) {
6641 vendorPropName function vendorPropName( style, name ) {
6663 isHidden function isHidden( elem, el ) {
6670 showHide function showHide( elements, show ) {
7017 setPositiveNumber function setPositiveNumber( elem, value, subtract ) {
7025 augmentWidthOrHeight function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
7064 getWidthOrHeight function getWidthOrHeight( elem, name, extra ) {
7108 css_defaultDisplay function css_defaultDisplay( nodeName ) {
7140 actualDisplay function actualDisplay( name, doc ) {
7369 buildParams function buildParams( prefix, obj, traditional, add ) {
7467 addToPrefiltersOrTransports function addToPrefiltersOrTransports( structure ) {
7499 inspectPrefiltersOrTransports function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {
7526 ajaxExtend function ajaxExtend( target, src ) {
8118 ajaxHandleResponses function ajaxHandleResponses( s, jqXHR, responses ) {
8179 ajaxConvert function ajaxConvert( s, response ) {
8440 createStandardXHR function createStandardXHR() {
8446 createActiveXHR function createActiveXHR() {
8685 createFxNow function createFxNow() {
8692 createTweens function createTweens( animation, props ) {
8707 Animation function Animation( elem, properties, options ) {
8811 propFilter function propFilter( props, specialEasing ) {
8878 defaultPrefilter function defaultPrefilter( elem, props, opts ) {
9005 Tween function Tween( elem, options, prop, end, easing ) {
9231 genFx function genFx( type, includeWidth ) {
9527 getWindow function getWindow( elem ) {
60 null 	jQuery = function( selector, context ) {
94 null 	fcamelCase = function( all, letter ) {
99 null 	completed = function( event ) {
108 null 	detach = function() {
124 null 	init: function( selector, context, rootjQuery ) {
232 null 	size: function() {
236 null 	toArray: function() {
242 null 	get: function( num ) {
254 null 	pushStack: function( elems ) {
270 null 	each: function( callback, args ) {
274 null 	ready: function( fn ) {
281 null 	slice: function() {
285 null 	first: function() {
289 null 	last: function() {
293 null 	eq: function( i ) {
299 null 	map: function( callback ) {
300 null 		return this.pushStack( jQuery.map(this, function( elem, i ) {
305 null 	end: function() {
319 null jQuery.extend = jQuery.fn.extend = function() {
384 null 	noConflict: function( deep ) {
404 null 	holdReady: function( hold ) {
413 null 	ready: function( wait ) {
445 null 	isFunction: function( obj ) {
449 null 	isArray: Array.isArray || function( obj ) {
453 null 	isWindow: function( obj ) {
457 null 	isNumeric: function( obj ) {
461 null 	type: function( obj ) {
470 null 	isPlainObject: function( obj ) {
499 null 	isEmptyObject: function( obj ) {
507 null 	error: function( msg ) {
514 null 	parseHTML: function( data, context, keepScripts ) {
539 null 	parseJSON: function( data ) {
570 null 	parseXML: function( data ) {
593 null 	noop: function() {},
598 null 	globalEval: function( data ) {
603 null 			( window.execScript || function( data ) {
611 null 	camelCase: function( string ) {
615 null 	nodeName: function( elem, name ) {
620 null 	each: function( obj, callback, args ) {
671 null 		function( text ) {
678 null 		function( text ) {
685 null 	makeArray: function( arr, results ) {
702 null 	inArray: function( elem, arr, i ) {
724 null 	merge: function( first, second ) {
744 null 	grep: function( elems, callback, inv ) {
764 null 	map: function( elems, callback, arg ) {
801 null 	proxy: function( fn, context ) {
818 null 		proxy = function() {
830 null 	access: function( elems, fn, key, value, chainable, emptyGet, raw ) {
859 null 					fn = function( elem, key, value ) {
881 null 	now: function() {
886 null jQuery.ready.promise = function( obj ) {
923 doScrollCheck 				(function doScrollCheck() {
948 null jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
977 null 	jQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) {
1005 null jQuery.Callbacks = function( options ) {
1030 null 		fire = function( data ) {
1059 null 			add: function() {
1063 add 					(function add( args ) {
1064 null 						jQuery.each( args, function( _, arg ) {
1090 null 			remove: function() {
1092 null 					jQuery.each( arguments, function( _, arg ) {
1112 null 			has: function( fn ) {
1116 null 			empty: function() {
1121 null 			disable: function() {
1126 null 			disabled: function() {
1130 null 			lock: function() {
1138 null 			locked: function() {
1142 null 			fireWith: function( context, args ) {
1155 null 			fire: function() {
1160 null 			fired: function() {
1169 null 	Deferred: function( func ) {
1178 null 				state: function() {
1181 null 				always: function() {
1185 null 				then: function( /* fnDone, fnFail, fnProgress */ ) {
1187 null 					return jQuery.Deferred(function( newDefer ) {
1188 null 						jQuery.each( tuples, function( i, tuple ) {
1192 null 							deferred[ tuple[1] ](function() {
1209 null 				promise: function( obj ) {
1219 null 		jQuery.each( tuples, function( i, tuple ) {
1228 null 				list.add(function() {
1237 null 			deferred[ tuple[0] ] = function() {
1257 null 	when: function( subordinate /* , ..., subordinateN */ ) {
1269 null 			updateFunc = function( i, contexts, values ) {
1270 null 				return function( value ) {
1308 null jQuery.support = (function() {
1435 null 		div.attachEvent( "onclick", function() {
1455 null 	jQuery(function() {
1749 null 	hasData: function( elem ) {
1754 null 	data: function( elem, name, data ) {
1758 null 	removeData: function( elem, name ) {
1763 null 	_data: function( elem, name, data ) {
1767 null 	_removeData: function( elem, name ) {
1772 null 	acceptData: function( elem ) {
1786 null 	data: function( key, value ) {
1817 null 			return this.each(function() {
1822 null 		return jQuery.access( this, function( value ) {
1829 null 			this.each(function() {
1835 null 	removeData: function( key ) {
1836 null 		return this.each(function() {
1890 null 	queue: function( elem, type, data ) {
1909 null 	dequeue: function( elem, type ) {
1916 null 			next = function() {
1946 null 	_queueHooks: function( elem, type ) {
1949 null 			empty: jQuery.Callbacks("once memory").add(function() {
1958 null 	queue: function( type, data ) {
1973 null 			this.each(function() {
1984 null 	dequeue: function( type ) {
1985 null 		return this.each(function() {
1991 null 	delay: function( time, type ) {
1995 null 		return this.queue( type, function( next, hooks ) {
1997 null 			hooks.stop = function() {
2002 null 	clearQueue: function( type ) {
2007 null 	promise: function( type, obj ) {
2013 null 			resolve = function() {
2047 null 	attr: function( name, value ) {
2051 null 	removeAttr: function( name ) {
2052 null 		return this.each(function() {
2057 null 	prop: function( name, value ) {
2061 null 	removeProp: function( name ) {
2063 null 		return this.each(function() {
2072 null 	addClass: function( value ) {
2079 null 			return this.each(function( j ) {
2111 null 	removeClass: function( value ) {
2118 null 			return this.each(function( j ) {
2149 null 	toggleClass: function( value, stateVal ) {
2154 null 			return this.each(function( i ) {
2159 null 		return this.each(function() {
2190 null 	hasClass: function( selector ) {
2203 null 	val: function( value ) {
2229 null 		return this.each(function( i ) {
2249 null 				val = jQuery.map(val, function ( value ) {
2267 null 			get: function( elem ) {
2275 null 			get: function( elem ) {
2312 null 			set: function( elem, value ) {
2315 null 				jQuery(elem).find("option").each(function() {
2327 null 	attr: function( elem, name, value ) {
2381 null 	removeAttr: function( elem, value ) {
2413 null 			set: function( elem, value ) {
2443 null 	prop: function( elem, name, value ) {
2480 null 			get: function( elem ) {
2497 null 	get: function( elem, name ) {
2521 null 	set: function( elem, value, name ) {
2541 null 		get: function( elem, name ) {
2550 null 		set: function( elem, value, name ) {
2568 null 		get: function( elem, name ) {
2574 null 		set: function( elem, value, name ) {
2596 null 		set: function( elem, value, name ) {
2603 null 	jQuery.each([ "width", "height" ], function( i, name ) {
2605 null 			set: function( elem, value ) {
2619 null 	jQuery.each([ "href", "src", "width", "height" ], function( i, name ) {
2621 null 			get: function( elem ) {
2629 null 	jQuery.each([ "href", "src" ], function( i, name ) {
2631 null 			get: function( elem ) {
2640 null 		get: function( elem ) {
2646 null 		set: function( elem, value ) {
2656 null 		get: function( elem ) {
2679 null 	jQuery.each([ "radio", "checkbox" ], function() {
2681 null 			get: function( elem ) {
2688 null jQuery.each([ "radio", "checkbox" ], function() {
2690 null 		set: function( elem, value ) {
2719 null 	add: function( elem, types, handler, data, selector ) {
2747 null 			eventHandle = elemData.handle = function( e ) {
2829 null 	remove: function( elem, types, handler, selector, mappedTypes ) {
2902 null 	trigger: function( event, data, elem, onlyHandlers ) {
3036 null 	dispatch: function( event ) {
3095 null 	handlers: function( event, handlers ) {
3142 null 	fix: function( event ) {
3195 null 		filter: function( event, original ) {
3208 null 		filter: function( event, original ) {
3245 null 			trigger: function() {
3254 null 			trigger: function() {
3269 null 			trigger: function() {
3279 null 			postDispatch: function( event ) {
3289 null 	simulate: function( type, elem, event, bubble ) {
3313 null 	function( elem, type, handle ) {
3318 null 	function( elem, type, handle ) {
3333 null jQuery.Event = function( src, props ) {
3373 null 	preventDefault: function() {
3391 null 	stopPropagation: function() {
3407 null 	stopImmediatePropagation: function() {
3417 null }, function( orig, fix ) {
3422 null 		handle: function( event ) {
3444 null 		setup: function() {
3451 null 			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
3456 null 					jQuery.event.add( form, "submit._submit", function( event ) {
3465 null 		postDispatch: function( event ) {
3475 null 		teardown: function() {
3492 null 		setup: function() {
3499 null 					jQuery.event.add( this, "propertychange._change", function( event ) {
3504 null 					jQuery.event.add( this, "click._change", function( event ) {
3515 null 			jQuery.event.add( this, "beforeactivate._change", function( e ) {
3519 null 					jQuery.event.add( elem, "change._change", function( event ) {
3529 null 		handle: function( event ) {
3538 null 		teardown: function() {
3548 null 	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {
3552 null 			handler = function( event ) {
3557 null 			setup: function() {
3562 null 			teardown: function() {
3573 null 	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
3614 null 			fn = function( event ) {
3622 null 		return this.each( function() {
3626 null 	one: function( types, selector, data, fn ) {
3629 null 	off: function( types, selector, fn ) {
3656 null 		return this.each(function() {
3661 null 	bind: function( types, data, fn ) {
3664 null 	unbind: function( types, fn ) {
3668 null 	delegate: function( selector, types, data, fn ) {
3671 null 	undelegate: function( selector, types, fn ) {
3676 null 	trigger: function( type, data ) {
3677 null 		return this.each(function() {
3681 null 	triggerHandler: function( type, data ) {
3694 null (function( window, undefined ) {
3736 null 	indexOf = arr.indexOf || function( elem ) {
3812 null 	funescape = function( _, escaped ) {
3828 null 	slice = function( i ) {
3842 isNative function isNative( fn ) {
3852 createCache function createCache() {
3856 null 	return (cache = function( key, value ) {
3870 markFunction function markFunction( fn ) {
3879 assert function assert( fn ) {
3892 Sizzle function Sizzle( selector, context, results, seed ) {
4006 null isXML = Sizzle.isXML = function( elem ) {
4018 null setDocument = Sizzle.setDocument = function( node ) {
4034 null 	support.tagNameNoComments = assert(function( div ) {
4040 null 	support.attributes = assert(function( div ) {
4048 null 	support.getByClassName = assert(function( div ) {
4062 null 	support.getByName = assert(function( div ) {
4083 null 	Expr.attrHandle = assert(function( div ) {
4090 null 			"href": function( elem ) {
4093 null 			"type": function( elem ) {
4100 null 		Expr.find["ID"] = function( id, context ) {
4108 null 		Expr.filter["ID"] = function( id ) {
4110 null 			return function( elem ) {
4115 null 		Expr.find["ID"] = function( id, context ) {
4126 null 		Expr.filter["ID"] =  function( id ) {
4128 null 			return function( elem ) {
4137 null 		function( tag, context ) {
4142 null 		function( tag, context ) {
4162 null 	Expr.find["NAME"] = support.getByName && function( tag, context ) {
4169 null 	Expr.find["CLASS"] = support.getByClassName && function( className, context ) {
4188 null 		assert(function( div ) {
4209 null 		assert(function( div ) {
4236 null 		assert(function( div ) {
4255 null 		function( a, b ) {
4264 null 		function( a, b ) {
4277 null 	function( a, b ) {
4300 null 	function( a, b ) {
4360 null Sizzle.matches = function( expr, elements ) {
4364 null Sizzle.matchesSelector = function( elem, expr ) {
4391 null Sizzle.contains = function( context, elem ) {
4399 null Sizzle.attr = function( elem, name ) {
4421 null Sizzle.error = function( msg ) {
4426 null Sizzle.uniqueSort = function( results ) {
4450 siblingCheck function siblingCheck( a, b ) {
4472 createInputPseudo function createInputPseudo( type ) {
4473 null 	return function( elem ) {
4480 createButtonPseudo function createButtonPseudo( type ) {
4481 null 	return function( elem ) {
4488 createPositionalPseudo function createPositionalPseudo( fn ) {
4489 null 	return markFunction(function( argument ) {
4491 null 		return markFunction(function( seed, matches ) {
4510 null getText = Sizzle.getText = function( elem ) {
4560 null 		"ATTR": function( match ) {
4573 null 		"CHILD": function( match ) {
4605 null 		"PSEUDO": function( match ) {
4636 null 		"TAG": function( nodeName ) {
4638 null 				return function() { return true; };
4642 null 			return function( elem ) {
4647 null 		"CLASS": function( className ) {
4652 null 				classCache( className, function( elem ) {
4657 null 		"ATTR": function( name, operator, check ) {
4658 null 			return function( elem ) {
4681 null 		"CHILD": function( type, what, argument, first, last ) {
4689 null 				function( elem ) {
4693 null 				function( elem, context, xml ) {
4770 null 		"PSEUDO": function( pseudo, argument ) {
4790 null 					markFunction(function( seed, matches ) {
4799 null 					function( elem ) {
4810 null 		"not": markFunction(function( selector ) {
4819 null 				markFunction(function( seed, matches, context, xml ) {
4831 null 				function( elem, context, xml ) {
4838 null 		"has": markFunction(function( selector ) {
4839 null 			return function( elem ) {
4844 null 		"contains": markFunction(function( text ) {
4845 null 			return function( elem ) {
4857 null 		"lang": markFunction( function( lang ) {
4863 null 			return function( elem ) {
4879 null 		"target": function( elem ) {
4884 null 		"root": function( elem ) {
4888 null 		"focus": function( elem ) {
4893 null 		"enabled": function( elem ) {
4897 null 		"disabled": function( elem ) {
4901 null 		"checked": function( elem ) {
4908 null 		"selected": function( elem ) {
4919 null 		"empty": function( elem ) {
4933 null 		"parent": function( elem ) {
4938 null 		"header": function( elem ) {
4942 null 		"input": function( elem ) {
4946 null 		"button": function( elem ) {
4951 null 		"text": function( elem ) {
4961 null 		"first": createPositionalPseudo(function() {
4965 null 		"last": createPositionalPseudo(function( matchIndexes, length ) {
4969 null 		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
4973 null 		"even": createPositionalPseudo(function( matchIndexes, length ) {
4981 null 		"odd": createPositionalPseudo(function( matchIndexes, length ) {
4989 null 		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
4997 null 		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
5015 tokenize function tokenize( selector, parseOnly ) {
5082 toSelector function toSelector( tokens ) {
5092 addCombinator function addCombinator( matcher, combinator, base ) {
5099 null 		function( elem, context, xml ) {
5108 null 		function( elem, context, xml ) {
5142 elementMatcher function elementMatcher( matchers ) {
5144 null 		function( elem, context, xml ) {
5156 condense function condense( unmatched, map, filter, context, xml ) {
5177 setMatcher function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
5184 null 	return markFunction(function( seed, results, context, xml ) {
5270 matcherFromTokens function matcherFromTokens( tokens ) {
5278 null 		matchContext = addCombinator( function( elem ) {
5281 null 		matchAnyContext = addCombinator( function( elem ) {
5284 null 		matchers = [ function( elem, context, xml ) {
5322 matcherFromGroupMatchers function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
5327 null 		superMatcher = function( seed, context, xml, results, expandContext ) {
5423 null compile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {
5450 multipleContexts function multipleContexts( selector, contexts, results ) {
5459 select function select( selector, context, results, seed ) {
5528 setFilters function setFilters() {}
5560 null 	find: function( selector ) {
5566 null 			return this.pushStack( jQuery( selector ).filter(function() {
5586 null 	has: function( target ) {
5591 null 		return this.filter(function() {
5600 null 	not: function( selector ) {
5604 null 	filter: function( selector ) {
5608 null 	is: function( selector ) {
5619 null 	closest: function( selectors, context ) {
5645 null 	index: function( elem ) {
5663 null 	add: function( selector, context ) {
5672 null 	addBack: function( selector ) {
5690 null 	parent: function( elem ) {
5694 null 	parents: function( elem ) {
5697 null 	parentsUntil: function( elem, i, until ) {
5700 null 	next: function( elem ) {
5703 null 	prev: function( elem ) {
5706 null 	nextAll: function( elem ) {
5709 null 	prevAll: function( elem ) {
5712 null 	nextUntil: function( elem, i, until ) {
5715 null 	prevUntil: function( elem, i, until ) {
5718 null 	siblings: function( elem ) {
5721 null 	children: function( elem ) {
5724 null 	contents: function( elem ) {
5729 null }, function( name, fn ) {
5730 null 	jQuery.fn[ name ] = function( until, selector ) {
5752 null 	filter: function( expr, elems, not ) {
5762 null 	dir: function( elem, dir, until ) {
5775 null 	sibling: function( n, elem ) {
5796 null 		return jQuery.grep(elements, function( elem, i ) {
5802 null 		return jQuery.grep(elements, function( elem ) {
5807 null 		var filtered = jQuery.grep(elements, function( elem ) {
5818 null 	return jQuery.grep(elements, function( elem ) {
5876 null 	text: function( value ) {
5877 null 		return jQuery.access( this, function( value ) {
5884 null 	wrapAll: function( html ) {
5886 null 			return this.each(function(i) {
5899 null 			wrap.map(function() {
5913 null 	wrapInner: function( html ) {
5915 null 			return this.each(function(i) {
5920 null 		return this.each(function() {
5933 null 	wrap: function( html ) {
5936 null 		return this.each(function(i) {
5941 null 	unwrap: function() {
5942 null 		return this.parent().each(function() {
5949 null 	append: function() {
5950 null 		return this.domManip(arguments, true, function( elem ) {
5957 null 	prepend: function() {
5958 null 		return this.domManip(arguments, true, function( elem ) {
5965 null 	before: function() {
5966 null 		return this.domManip( arguments, false, function( elem ) {
5973 null 	after: function() {
5974 null 		return this.domManip( arguments, false, function( elem ) {
5982 null 	remove: function( selector, keepData ) {
6004 null 	empty: function() {
6029 null 	clone: function( dataAndEvents, deepDataAndEvents ) {
6033 null 		return this.map( function () {
6038 null 	html: function( value ) {
6039 null 		return jQuery.access( this, function( value ) {
6080 null 	replaceWith: function( value ) {
6089 null 		return this.domManip( [ value ], true, function( elem ) {
6100 null 	detach: function( selector ) {
6104 null 	domManip: function( args, table, callback ) {
6120 null 			return this.each(function( index ) {
6333 null }, function( name, original ) {
6334 null 	jQuery.fn[ name ] = function( selector ) {
6383 null 	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
6438 null 	buildFragment: function( elems, context, scripts, selection ) {
6565 null 	cleanData: function( elems, /* internal */ acceptData ) {
6725 null 	css: function( name, value ) {
6726 null 		return jQuery.access( this, function( elem, name, value ) {
6747 null 	show: function() {
6750 null 	hide: function() {
6753 null 	toggle: function( state ) {
6756 null 		return this.each(function() {
6771 null 			get: function( elem, computed ) {
6802 null 	style: function( elem, name, value, extra ) {
6867 null 	css: function( elem, name, extra, styles ) {
6902 null 	swap: function( elem, options, callback, args ) {
6926 null 	getStyles = function( elem ) {
6930 null 	curCSS = function( elem, name, _computed ) {
6969 null 	getStyles = function( elem ) {
6973 null 	curCSS = function( elem, name, _computed ) {
7147 null jQuery.each([ "height", "width" ], function( i, name ) {
7149 null 		get: function( elem, computed, extra ) {
7154 null 					jQuery.swap( elem, cssShow, function() {
7161 null 		set: function( elem, value, extra ) {
7178 null 		get: function( elem, computed ) {
7185 null 		set: function( elem, value ) {
7222 null jQuery(function() {
7225 null 			get: function( elem, computed ) {
7240 null 		jQuery.each( [ "top", "left" ], function( i, prop ) {
7242 null 				get: function( elem, computed ) {
7258 null 	jQuery.expr.filters.hidden = function( elem ) {
7265 null 	jQuery.expr.filters.visible = function( elem ) {
7275 null }, function( prefix, suffix ) {
7277 null 		expand: function( value ) {
7304 null 	serialize: function() {
7307 null 	serializeArray: function() {
7308 null 		return this.map(function(){
7313 null 		.filter(function(){
7320 null 		.map(function( i, elem ){
7326 null 					jQuery.map( val, function( val ){
7336 null jQuery.param = function( a, traditional ) {
7339 null 		add = function( key, value ) {
7353 null 		jQuery.each( a, function() {
7374 null 		jQuery.each( obj, function( i, v ) {
7398 null 	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {
7401 null 	jQuery.fn[ name ] = function( data, fn ) {
7408 null jQuery.fn.hover = function( fnOver, fnOut ) {
7470 null 	return function( dataTypeExpression, func ) {
7504 inspect 	function inspect( dataType ) {
7507 null 		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
7542 null jQuery.fn.load = function( url, params, callback ) {
7577 null 		}).done(function( responseText ) {
7591 null 		}).complete( callback && function( jqXHR, status ) {
7600 null jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ){
7601 null 	jQuery.fn[ type ] = function( fn ){
7606 null jQuery.each( [ "get", "post" ], function( i, method ) {
7607 null 	jQuery[ method ] = function( url, data, callback, type ) {
7703 null 	ajaxSetup: function( target, settings ) {
7717 null 	ajax: function( url, options ) {
7770 null 				getResponseHeader: function( key ) {
7785 null 				getAllResponseHeaders: function() {
7790 null 				setRequestHeader: function( name, value ) {
7800 null 				overrideMimeType: function( type ) {
7808 null 				statusCode: function( map ) {
7825 null 				abort: function( statusText ) {
7972 null 				timeoutTimer = setTimeout(function() {
7992 done 		function done( status, nativeStatusText, responses, headers ) {
8104 null 	getScript: function( url, callback ) {
8108 null 	getJSON: function( url, data, callback ) {
8271 null 		"text script": function( text ) {
8279 null jQuery.ajaxPrefilter( "script", function( s ) {
8290 null jQuery.ajaxTransport( "script", function(s) {
8300 null 			send: function( _, callback ) {
8313 null 				script.onload = script.onreadystatechange = function( _, isAbort ) {
8340 null 			abort: function() {
8354 null 	jsonpCallback: function() {
8362 null jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {
8386 null 		s.converters["script json"] = function() {
8398 null 		window[ callbackName ] = function() {
8403 null 		jqXHR.always(function() {
8431 null 	xhrOnUnloadAbort = window.ActiveXObject && function() {
8461 null 	function() {
8475 null 	jQuery.ajaxTransport(function( s ) {
8482 null 				send: function( headers, complete ) {
8530 null 					callback = function( _, isAbort ) {
8626 null 				abort: function() {
8641 null 		"*": [function( prop, value ) {
8686 null 	setTimeout(function() {
8693 null 	jQuery.each( props, function( prop, value ) {
8712 null 		deferred = jQuery.Deferred().always( function() {
8716 null 		tick = function() {
8750 null 			createTween: function( prop, end ) {
8756 null 			stop: function( gotoEnd ) {
8850 null 	tweener: function( props, callback ) {
8869 null 	prefilter: function( callback, prepend ) {
8895 null 			hooks.empty.fire = function() {
8903 null 		anim.always(function() {
8906 null 			anim.always(function() {
8942 null 			anim.always(function() {
8978 null 			anim.done(function() {
8982 null 		anim.done(function() {
9012 null 	init: function( elem, options, prop, end, easing, unit ) {
9021 null 	cur: function() {
9028 null 	run: function( percent ) {
9058 null 		get: function( tween ) {
9074 null 		set: function( tween ) {
9092 null 	set: function( tween ) {
9099 null jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
9101 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9109 null 	fadeTo: function( speed, to, easing, callback ) {
9117 null 	animate: function( prop, speed, easing, callback ) {
9120 null 			doAnimation = function() {
9123 null 				doAnimation.finish = function() {
9137 null 	stop: function( type, clearQueue, gotoEnd ) {
9138 null 		var stopQueue = function( hooks ) {
9153 null 		return this.each(function() {
9187 null 	finish: function( type ) {
9191 null 		return this.each(function() {
9259 null }, function( name, props ) {
9260 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9265 null jQuery.speed = function( speed, easing, fn ) {
9284 null 	opt.complete = function() {
9298 null 	linear: function( p ) {
9301 null 	swing: function( p ) {
9308 null jQuery.fx.tick = function() {
9329 null jQuery.fx.timer = function( timer ) {
9337 null jQuery.fx.start = function() {
9343 null jQuery.fx.stop = function() {
9359 null 	jQuery.expr.filters.animated = function( elem ) {
9360 null 		return jQuery.grep(jQuery.timers, function( fn ) {
9365 null jQuery.fn.offset = function( options ) {
9369 null 			this.each(function( i ) {
9404 null 	setOffset: function( elem, options, i ) {
9451 null 	position: function() {
9488 null 	offsetParent: function() {
9489 null 		return this.map(function() {
9501 null jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
9504 null 	jQuery.fn[ method ] = function( val ) {
9505 null 		return jQuery.access( this, function( elem, method, val ) {
9535 null jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
9536 null 	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
9538 null 		jQuery.fn[ funcName ] = function( margin, value ) {
9542 null 			return jQuery.access( this, function( elem, type, value ) {
14 null (function( window, undefined ) {
60 null 	jQuery = function( selector, context ) {
94 null 	fcamelCase = function( all, letter ) {
99 null 	completed = function( event ) {
108 null 	detach = function() {
124 null 	init: function( selector, context, rootjQuery ) {
232 null 	size: function() {
236 null 	toArray: function() {
242 null 	get: function( num ) {
254 null 	pushStack: function( elems ) {
270 null 	each: function( callback, args ) {
274 null 	ready: function( fn ) {
281 null 	slice: function() {
285 null 	first: function() {
289 null 	last: function() {
293 null 	eq: function( i ) {
299 null 	map: function( callback ) {
300 null 		return this.pushStack( jQuery.map(this, function( elem, i ) {
305 null 	end: function() {
319 null jQuery.extend = jQuery.fn.extend = function() {
384 null 	noConflict: function( deep ) {
404 null 	holdReady: function( hold ) {
413 null 	ready: function( wait ) {
445 null 	isFunction: function( obj ) {
449 null 	isArray: Array.isArray || function( obj ) {
453 null 	isWindow: function( obj ) {
457 null 	isNumeric: function( obj ) {
461 null 	type: function( obj ) {
470 null 	isPlainObject: function( obj ) {
499 null 	isEmptyObject: function( obj ) {
507 null 	error: function( msg ) {
514 null 	parseHTML: function( data, context, keepScripts ) {
539 null 	parseJSON: function( data ) {
570 null 	parseXML: function( data ) {
593 null 	noop: function() {},
598 null 	globalEval: function( data ) {
603 null 			( window.execScript || function( data ) {
611 null 	camelCase: function( string ) {
615 null 	nodeName: function( elem, name ) {
620 null 	each: function( obj, callback, args ) {
671 null 		function( text ) {
678 null 		function( text ) {
685 null 	makeArray: function( arr, results ) {
702 null 	inArray: function( elem, arr, i ) {
724 null 	merge: function( first, second ) {
744 null 	grep: function( elems, callback, inv ) {
764 null 	map: function( elems, callback, arg ) {
801 null 	proxy: function( fn, context ) {
818 null 		proxy = function() {
830 null 	access: function( elems, fn, key, value, chainable, emptyGet, raw ) {
859 null 					fn = function( elem, key, value ) {
881 null 	now: function() {
886 null jQuery.ready.promise = function( obj ) {
923 doScrollCheck 				(function doScrollCheck() {
948 null jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
952 isArraylike function isArraylike( obj ) {
975 createOptions function createOptions( options ) {
977 null 	jQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) {
1005 null jQuery.Callbacks = function( options ) {
1030 null 		fire = function( data ) {
1059 null 			add: function() {
1063 add 					(function add( args ) {
1064 null 						jQuery.each( args, function( _, arg ) {
1090 null 			remove: function() {
1092 null 					jQuery.each( arguments, function( _, arg ) {
1112 null 			has: function( fn ) {
1116 null 			empty: function() {
1121 null 			disable: function() {
1126 null 			disabled: function() {
1130 null 			lock: function() {
1138 null 			locked: function() {
1142 null 			fireWith: function( context, args ) {
1155 null 			fire: function() {
1160 null 			fired: function() {
1169 null 	Deferred: function( func ) {
1178 null 				state: function() {
1181 null 				always: function() {
1185 null 				then: function( /* fnDone, fnFail, fnProgress */ ) {
1187 null 					return jQuery.Deferred(function( newDefer ) {
1188 null 						jQuery.each( tuples, function( i, tuple ) {
1192 null 							deferred[ tuple[1] ](function() {
1209 null 				promise: function( obj ) {
1219 null 		jQuery.each( tuples, function( i, tuple ) {
1228 null 				list.add(function() {
1237 null 			deferred[ tuple[0] ] = function() {
1257 null 	when: function( subordinate /* , ..., subordinateN */ ) {
1269 null 			updateFunc = function( i, contexts, values ) {
1270 null 				return function( value ) {
1308 null jQuery.support = (function() {
1435 null 		div.attachEvent( "onclick", function() {
1455 null 	jQuery(function() {
1552 internalData function internalData( elem, name, data, pvt /* Internal Use Only */ ){
1646 internalRemoveData function internalRemoveData( elem, name, pvt ) {
1749 null 	hasData: function( elem ) {
1754 null 	data: function( elem, name, data ) {
1758 null 	removeData: function( elem, name ) {
1763 null 	_data: function( elem, name, data ) {
1767 null 	_removeData: function( elem, name ) {
1772 null 	acceptData: function( elem ) {
1786 null 	data: function( key, value ) {
1817 null 			return this.each(function() {
1822 null 		return jQuery.access( this, function( value ) {
1829 null 			this.each(function() {
1835 null 	removeData: function( key ) {
1836 null 		return this.each(function() {
1842 dataAttr function dataAttr( elem, key, data ) {
1874 isEmptyDataObject function isEmptyDataObject( obj ) {
1890 null 	queue: function( elem, type, data ) {
1909 null 	dequeue: function( elem, type ) {
1916 null 			next = function() {
1946 null 	_queueHooks: function( elem, type ) {
1949 null 			empty: jQuery.Callbacks("once memory").add(function() {
1958 null 	queue: function( type, data ) {
1973 null 			this.each(function() {
1984 null 	dequeue: function( type ) {
1985 null 		return this.each(function() {
1991 null 	delay: function( time, type ) {
1995 null 		return this.queue( type, function( next, hooks ) {
1997 null 			hooks.stop = function() {
2002 null 	clearQueue: function( type ) {
2007 null 	promise: function( type, obj ) {
2013 null 			resolve = function() {
2047 null 	attr: function( name, value ) {
2051 null 	removeAttr: function( name ) {
2052 null 		return this.each(function() {
2057 null 	prop: function( name, value ) {
2061 null 	removeProp: function( name ) {
2063 null 		return this.each(function() {
2072 null 	addClass: function( value ) {
2079 null 			return this.each(function( j ) {
2111 null 	removeClass: function( value ) {
2118 null 			return this.each(function( j ) {
2149 null 	toggleClass: function( value, stateVal ) {
2154 null 			return this.each(function( i ) {
2159 null 		return this.each(function() {
2190 null 	hasClass: function( selector ) {
2203 null 	val: function( value ) {
2229 null 		return this.each(function( i ) {
2249 null 				val = jQuery.map(val, function ( value ) {
2267 null 			get: function( elem ) {
2275 null 			get: function( elem ) {
2312 null 			set: function( elem, value ) {
2315 null 				jQuery(elem).find("option").each(function() {
2327 null 	attr: function( elem, name, value ) {
2381 null 	removeAttr: function( elem, value ) {
2413 null 			set: function( elem, value ) {
2443 null 	prop: function( elem, name, value ) {
2480 null 			get: function( elem ) {
2497 null 	get: function( elem, name ) {
2521 null 	set: function( elem, value, name ) {
2541 null 		get: function( elem, name ) {
2550 null 		set: function( elem, value, name ) {
2568 null 		get: function( elem, name ) {
2574 null 		set: function( elem, value, name ) {
2596 null 		set: function( elem, value, name ) {
2603 null 	jQuery.each([ "width", "height" ], function( i, name ) {
2605 null 			set: function( elem, value ) {
2619 null 	jQuery.each([ "href", "src", "width", "height" ], function( i, name ) {
2621 null 			get: function( elem ) {
2629 null 	jQuery.each([ "href", "src" ], function( i, name ) {
2631 null 			get: function( elem ) {
2640 null 		get: function( elem ) {
2646 null 		set: function( elem, value ) {
2656 null 		get: function( elem ) {
2679 null 	jQuery.each([ "radio", "checkbox" ], function() {
2681 null 			get: function( elem ) {
2688 null jQuery.each([ "radio", "checkbox" ], function() {
2690 null 		set: function( elem, value ) {
2703 returnTrue function returnTrue() {
2707 returnFalse function returnFalse() {
2719 null 	add: function( elem, types, handler, data, selector ) {
2747 null 			eventHandle = elemData.handle = function( e ) {
2829 null 	remove: function( elem, types, handler, selector, mappedTypes ) {
2902 null 	trigger: function( event, data, elem, onlyHandlers ) {
3036 null 	dispatch: function( event ) {
3095 null 	handlers: function( event, handlers ) {
3142 null 	fix: function( event ) {
3195 null 		filter: function( event, original ) {
3208 null 		filter: function( event, original ) {
3245 null 			trigger: function() {
3254 null 			trigger: function() {
3269 null 			trigger: function() {
3279 null 			postDispatch: function( event ) {
3289 null 	simulate: function( type, elem, event, bubble ) {
3313 null 	function( elem, type, handle ) {
3318 null 	function( elem, type, handle ) {
3333 null jQuery.Event = function( src, props ) {
3373 null 	preventDefault: function() {
3391 null 	stopPropagation: function() {
3407 null 	stopImmediatePropagation: function() {
3417 null }, function( orig, fix ) {
3422 null 		handle: function( event ) {
3444 null 		setup: function() {
3451 null 			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
3456 null 					jQuery.event.add( form, "submit._submit", function( event ) {
3465 null 		postDispatch: function( event ) {
3475 null 		teardown: function() {
3492 null 		setup: function() {
3499 null 					jQuery.event.add( this, "propertychange._change", function( event ) {
3504 null 					jQuery.event.add( this, "click._change", function( event ) {
3515 null 			jQuery.event.add( this, "beforeactivate._change", function( e ) {
3519 null 					jQuery.event.add( elem, "change._change", function( event ) {
3529 null 		handle: function( event ) {
3538 null 		teardown: function() {
3548 null 	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {
3552 null 			handler = function( event ) {
3557 null 			setup: function() {
3562 null 			teardown: function() {
3573 null 	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
3614 null 			fn = function( event ) {
3622 null 		return this.each( function() {
3626 null 	one: function( types, selector, data, fn ) {
3629 null 	off: function( types, selector, fn ) {
3656 null 		return this.each(function() {
3661 null 	bind: function( types, data, fn ) {
3664 null 	unbind: function( types, fn ) {
3668 null 	delegate: function( selector, types, data, fn ) {
3671 null 	undelegate: function( selector, types, fn ) {
3676 null 	trigger: function( type, data ) {
3677 null 		return this.each(function() {
3681 null 	triggerHandler: function( type, data ) {
3694 null (function( window, undefined ) {
3736 null 	indexOf = arr.indexOf || function( elem ) {
3812 null 	funescape = function( _, escaped ) {
3828 null 	slice = function( i ) {
3842 isNative function isNative( fn ) {
3852 createCache function createCache() {
3856 null 	return (cache = function( key, value ) {
3870 markFunction function markFunction( fn ) {
3879 assert function assert( fn ) {
3892 Sizzle function Sizzle( selector, context, results, seed ) {
4006 null isXML = Sizzle.isXML = function( elem ) {
4018 null setDocument = Sizzle.setDocument = function( node ) {
4034 null 	support.tagNameNoComments = assert(function( div ) {
4040 null 	support.attributes = assert(function( div ) {
4048 null 	support.getByClassName = assert(function( div ) {
4062 null 	support.getByName = assert(function( div ) {
4083 null 	Expr.attrHandle = assert(function( div ) {
4090 null 			"href": function( elem ) {
4093 null 			"type": function( elem ) {
4100 null 		Expr.find["ID"] = function( id, context ) {
4108 null 		Expr.filter["ID"] = function( id ) {
4110 null 			return function( elem ) {
4115 null 		Expr.find["ID"] = function( id, context ) {
4126 null 		Expr.filter["ID"] =  function( id ) {
4128 null 			return function( elem ) {
4137 null 		function( tag, context ) {
4142 null 		function( tag, context ) {
4162 null 	Expr.find["NAME"] = support.getByName && function( tag, context ) {
4169 null 	Expr.find["CLASS"] = support.getByClassName && function( className, context ) {
4188 null 		assert(function( div ) {
4209 null 		assert(function( div ) {
4236 null 		assert(function( div ) {
4255 null 		function( a, b ) {
4264 null 		function( a, b ) {
4277 null 	function( a, b ) {
4300 null 	function( a, b ) {
4360 null Sizzle.matches = function( expr, elements ) {
4364 null Sizzle.matchesSelector = function( elem, expr ) {
4391 null Sizzle.contains = function( context, elem ) {
4399 null Sizzle.attr = function( elem, name ) {
4421 null Sizzle.error = function( msg ) {
4426 null Sizzle.uniqueSort = function( results ) {
4450 siblingCheck function siblingCheck( a, b ) {
4472 createInputPseudo function createInputPseudo( type ) {
4473 null 	return function( elem ) {
4480 createButtonPseudo function createButtonPseudo( type ) {
4481 null 	return function( elem ) {
4488 createPositionalPseudo function createPositionalPseudo( fn ) {
4489 null 	return markFunction(function( argument ) {
4491 null 		return markFunction(function( seed, matches ) {
4510 null getText = Sizzle.getText = function( elem ) {
4560 null 		"ATTR": function( match ) {
4573 null 		"CHILD": function( match ) {
4605 null 		"PSEUDO": function( match ) {
4636 null 		"TAG": function( nodeName ) {
4638 null 				return function() { return true; };
4642 null 			return function( elem ) {
4647 null 		"CLASS": function( className ) {
4652 null 				classCache( className, function( elem ) {
4657 null 		"ATTR": function( name, operator, check ) {
4658 null 			return function( elem ) {
4681 null 		"CHILD": function( type, what, argument, first, last ) {
4689 null 				function( elem ) {
4693 null 				function( elem, context, xml ) {
4770 null 		"PSEUDO": function( pseudo, argument ) {
4790 null 					markFunction(function( seed, matches ) {
4799 null 					function( elem ) {
4810 null 		"not": markFunction(function( selector ) {
4819 null 				markFunction(function( seed, matches, context, xml ) {
4831 null 				function( elem, context, xml ) {
4838 null 		"has": markFunction(function( selector ) {
4839 null 			return function( elem ) {
4844 null 		"contains": markFunction(function( text ) {
4845 null 			return function( elem ) {
4857 null 		"lang": markFunction( function( lang ) {
4863 null 			return function( elem ) {
4879 null 		"target": function( elem ) {
4884 null 		"root": function( elem ) {
4888 null 		"focus": function( elem ) {
4893 null 		"enabled": function( elem ) {
4897 null 		"disabled": function( elem ) {
4901 null 		"checked": function( elem ) {
4908 null 		"selected": function( elem ) {
4919 null 		"empty": function( elem ) {
4933 null 		"parent": function( elem ) {
4938 null 		"header": function( elem ) {
4942 null 		"input": function( elem ) {
4946 null 		"button": function( elem ) {
4951 null 		"text": function( elem ) {
4961 null 		"first": createPositionalPseudo(function() {
4965 null 		"last": createPositionalPseudo(function( matchIndexes, length ) {
4969 null 		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
4973 null 		"even": createPositionalPseudo(function( matchIndexes, length ) {
4981 null 		"odd": createPositionalPseudo(function( matchIndexes, length ) {
4989 null 		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
4997 null 		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
5015 tokenize function tokenize( selector, parseOnly ) {
5082 toSelector function toSelector( tokens ) {
5092 addCombinator function addCombinator( matcher, combinator, base ) {
5099 null 		function( elem, context, xml ) {
5108 null 		function( elem, context, xml ) {
5142 elementMatcher function elementMatcher( matchers ) {
5144 null 		function( elem, context, xml ) {
5156 condense function condense( unmatched, map, filter, context, xml ) {
5177 setMatcher function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
5184 null 	return markFunction(function( seed, results, context, xml ) {
5270 matcherFromTokens function matcherFromTokens( tokens ) {
5278 null 		matchContext = addCombinator( function( elem ) {
5281 null 		matchAnyContext = addCombinator( function( elem ) {
5284 null 		matchers = [ function( elem, context, xml ) {
5322 matcherFromGroupMatchers function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
5327 null 		superMatcher = function( seed, context, xml, results, expandContext ) {
5423 null compile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {
5450 multipleContexts function multipleContexts( selector, contexts, results ) {
5459 select function select( selector, context, results, seed ) {
5528 setFilters function setFilters() {}
5560 null 	find: function( selector ) {
5566 null 			return this.pushStack( jQuery( selector ).filter(function() {
5586 null 	has: function( target ) {
5591 null 		return this.filter(function() {
5600 null 	not: function( selector ) {
5604 null 	filter: function( selector ) {
5608 null 	is: function( selector ) {
5619 null 	closest: function( selectors, context ) {
5645 null 	index: function( elem ) {
5663 null 	add: function( selector, context ) {
5672 null 	addBack: function( selector ) {
5681 sibling function sibling( cur, dir ) {
5690 null 	parent: function( elem ) {
5694 null 	parents: function( elem ) {
5697 null 	parentsUntil: function( elem, i, until ) {
5700 null 	next: function( elem ) {
5703 null 	prev: function( elem ) {
5706 null 	nextAll: function( elem ) {
5709 null 	prevAll: function( elem ) {
5712 null 	nextUntil: function( elem, i, until ) {
5715 null 	prevUntil: function( elem, i, until ) {
5718 null 	siblings: function( elem ) {
5721 null 	children: function( elem ) {
5724 null 	contents: function( elem ) {
5729 null }, function( name, fn ) {
5730 null 	jQuery.fn[ name ] = function( until, selector ) {
5752 null 	filter: function( expr, elems, not ) {
5762 null 	dir: function( elem, dir, until ) {
5775 null 	sibling: function( n, elem ) {
5789 winnow function winnow( elements, qualifier, keep ) {
5796 null 		return jQuery.grep(elements, function( elem, i ) {
5802 null 		return jQuery.grep(elements, function( elem ) {
5807 null 		var filtered = jQuery.grep(elements, function( elem ) {
5818 null 	return jQuery.grep(elements, function( elem ) {
5822 createSafeFragment function createSafeFragment( document ) {
5876 null 	text: function( value ) {
5877 null 		return jQuery.access( this, function( value ) {
5884 null 	wrapAll: function( html ) {
5886 null 			return this.each(function(i) {
5899 null 			wrap.map(function() {
5913 null 	wrapInner: function( html ) {
5915 null 			return this.each(function(i) {
5920 null 		return this.each(function() {
5933 null 	wrap: function( html ) {
5936 null 		return this.each(function(i) {
5941 null 	unwrap: function() {
5942 null 		return this.parent().each(function() {
5949 null 	append: function() {
5950 null 		return this.domManip(arguments, true, function( elem ) {
5957 null 	prepend: function() {
5958 null 		return this.domManip(arguments, true, function( elem ) {
5965 null 	before: function() {
5966 null 		return this.domManip( arguments, false, function( elem ) {
5973 null 	after: function() {
5974 null 		return this.domManip( arguments, false, function( elem ) {
5982 null 	remove: function( selector, keepData ) {
6004 null 	empty: function() {
6029 null 	clone: function( dataAndEvents, deepDataAndEvents ) {
6033 null 		return this.map( function () {
6038 null 	html: function( value ) {
6039 null 		return jQuery.access( this, function( value ) {
6080 null 	replaceWith: function( value ) {
6089 null 		return this.domManip( [ value ], true, function( elem ) {
6100 null 	detach: function( selector ) {
6104 null 	domManip: function( args, table, callback ) {
6120 null 			return this.each(function( index ) {
6203 findOrAppend function findOrAppend( elem, tag ) {
6208 disableScript function disableScript( elem ) {
6213 restoreScript function restoreScript( elem ) {
6224 setGlobalEval function setGlobalEval( elems, refElements ) {
6232 cloneCopyEvent function cloneCopyEvent( src, dest ) {
6260 fixCloneNodeIssues function fixCloneNodeIssues( src, dest ) {
6333 null }, function( name, original ) {
6334 null 	jQuery.fn[ name ] = function( selector ) {
6353 getAll function getAll( context, tag ) {
6376 fixDefaultChecked function fixDefaultChecked( elem ) {
6383 null 	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
6438 null 	buildFragment: function( elems, context, scripts, selection ) {
6565 null 	cleanData: function( elems, /* internal */ acceptData ) {
6641 vendorPropName function vendorPropName( style, name ) {
6663 isHidden function isHidden( elem, el ) {
6670 showHide function showHide( elements, show ) {
6725 null 	css: function( name, value ) {
6726 null 		return jQuery.access( this, function( elem, name, value ) {
6747 null 	show: function() {
6750 null 	hide: function() {
6753 null 	toggle: function( state ) {
6756 null 		return this.each(function() {
6771 null 			get: function( elem, computed ) {
6802 null 	style: function( elem, name, value, extra ) {
6867 null 	css: function( elem, name, extra, styles ) {
6902 null 	swap: function( elem, options, callback, args ) {
6926 null 	getStyles = function( elem ) {
6930 null 	curCSS = function( elem, name, _computed ) {
6969 null 	getStyles = function( elem ) {
6973 null 	curCSS = function( elem, name, _computed ) {
7017 setPositiveNumber function setPositiveNumber( elem, value, subtract ) {
7025 augmentWidthOrHeight function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
7064 getWidthOrHeight function getWidthOrHeight( elem, name, extra ) {
7108 css_defaultDisplay function css_defaultDisplay( nodeName ) {
7140 actualDisplay function actualDisplay( name, doc ) {
7147 null jQuery.each([ "height", "width" ], function( i, name ) {
7149 null 		get: function( elem, computed, extra ) {
7154 null 					jQuery.swap( elem, cssShow, function() {
7161 null 		set: function( elem, value, extra ) {
7178 null 		get: function( elem, computed ) {
7185 null 		set: function( elem, value ) {
7222 null jQuery(function() {
7225 null 			get: function( elem, computed ) {
7240 null 		jQuery.each( [ "top", "left" ], function( i, prop ) {
7242 null 				get: function( elem, computed ) {
7258 null 	jQuery.expr.filters.hidden = function( elem ) {
7265 null 	jQuery.expr.filters.visible = function( elem ) {
7275 null }, function( prefix, suffix ) {
7277 null 		expand: function( value ) {
7304 null 	serialize: function() {
7307 null 	serializeArray: function() {
7308 null 		return this.map(function(){
7313 null 		.filter(function(){
7320 null 		.map(function( i, elem ){
7326 null 					jQuery.map( val, function( val ){
7336 null jQuery.param = function( a, traditional ) {
7339 null 		add = function( key, value ) {
7353 null 		jQuery.each( a, function() {
7369 buildParams function buildParams( prefix, obj, traditional, add ) {
7374 null 		jQuery.each( obj, function( i, v ) {
7398 null 	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {
7401 null 	jQuery.fn[ name ] = function( data, fn ) {
7408 null jQuery.fn.hover = function( fnOver, fnOut ) {
7467 addToPrefiltersOrTransports function addToPrefiltersOrTransports( structure ) {
7470 null 	return function( dataTypeExpression, func ) {
7499 inspectPrefiltersOrTransports function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {
7504 inspect 	function inspect( dataType ) {
7507 null 		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
7526 ajaxExtend function ajaxExtend( target, src ) {
7542 null jQuery.fn.load = function( url, params, callback ) {
7577 null 		}).done(function( responseText ) {
7591 null 		}).complete( callback && function( jqXHR, status ) {
7600 null jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ){
7601 null 	jQuery.fn[ type ] = function( fn ){
7606 null jQuery.each( [ "get", "post" ], function( i, method ) {
7607 null 	jQuery[ method ] = function( url, data, callback, type ) {
7703 null 	ajaxSetup: function( target, settings ) {
7717 null 	ajax: function( url, options ) {
7770 null 				getResponseHeader: function( key ) {
7785 null 				getAllResponseHeaders: function() {
7790 null 				setRequestHeader: function( name, value ) {
7800 null 				overrideMimeType: function( type ) {
7808 null 				statusCode: function( map ) {
7825 null 				abort: function( statusText ) {
7972 null 				timeoutTimer = setTimeout(function() {
7992 done 		function done( status, nativeStatusText, responses, headers ) {
8104 null 	getScript: function( url, callback ) {
8108 null 	getJSON: function( url, data, callback ) {
8118 ajaxHandleResponses function ajaxHandleResponses( s, jqXHR, responses ) {
8179 ajaxConvert function ajaxConvert( s, response ) {
8271 null 		"text script": function( text ) {
8279 null jQuery.ajaxPrefilter( "script", function( s ) {
8290 null jQuery.ajaxTransport( "script", function(s) {
8300 null 			send: function( _, callback ) {
8313 null 				script.onload = script.onreadystatechange = function( _, isAbort ) {
8340 null 			abort: function() {
8354 null 	jsonpCallback: function() {
8362 null jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {
8386 null 		s.converters["script json"] = function() {
8398 null 		window[ callbackName ] = function() {
8403 null 		jqXHR.always(function() {
8431 null 	xhrOnUnloadAbort = window.ActiveXObject && function() {
8440 createStandardXHR function createStandardXHR() {
8446 createActiveXHR function createActiveXHR() {
8461 null 	function() {
8475 null 	jQuery.ajaxTransport(function( s ) {
8482 null 				send: function( headers, complete ) {
8530 null 					callback = function( _, isAbort ) {
8626 null 				abort: function() {
8641 null 		"*": [function( prop, value ) {
8685 createFxNow function createFxNow() {
8686 null 	setTimeout(function() {
8692 createTweens function createTweens( animation, props ) {
8693 null 	jQuery.each( props, function( prop, value ) {
8707 Animation function Animation( elem, properties, options ) {
8712 null 		deferred = jQuery.Deferred().always( function() {
8716 null 		tick = function() {
8750 null 			createTween: function( prop, end ) {
8756 null 			stop: function( gotoEnd ) {
8811 propFilter function propFilter( props, specialEasing ) {
8850 null 	tweener: function( props, callback ) {
8869 null 	prefilter: function( callback, prepend ) {
8878 defaultPrefilter function defaultPrefilter( elem, props, opts ) {
8895 null 			hooks.empty.fire = function() {
8903 null 		anim.always(function() {
8906 null 			anim.always(function() {
8942 null 			anim.always(function() {
8978 null 			anim.done(function() {
8982 null 		anim.done(function() {
9005 Tween function Tween( elem, options, prop, end, easing ) {
9012 null 	init: function( elem, options, prop, end, easing, unit ) {
9021 null 	cur: function() {
9028 null 	run: function( percent ) {
9058 null 		get: function( tween ) {
9074 null 		set: function( tween ) {
9092 null 	set: function( tween ) {
9099 null jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
9101 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9109 null 	fadeTo: function( speed, to, easing, callback ) {
9117 null 	animate: function( prop, speed, easing, callback ) {
9120 null 			doAnimation = function() {
9123 null 				doAnimation.finish = function() {
9137 null 	stop: function( type, clearQueue, gotoEnd ) {
9138 null 		var stopQueue = function( hooks ) {
9153 null 		return this.each(function() {
9187 null 	finish: function( type ) {
9191 null 		return this.each(function() {
9231 genFx function genFx( type, includeWidth ) {
9259 null }, function( name, props ) {
9260 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9265 null jQuery.speed = function( speed, easing, fn ) {
9284 null 	opt.complete = function() {
9298 null 	linear: function( p ) {
9301 null 	swing: function( p ) {
9308 null jQuery.fx.tick = function() {
9329 null jQuery.fx.timer = function( timer ) {
9337 null jQuery.fx.start = function() {
9343 null jQuery.fx.stop = function() {
9359 null 	jQuery.expr.filters.animated = function( elem ) {
9360 null 		return jQuery.grep(jQuery.timers, function( fn ) {
9365 null jQuery.fn.offset = function( options ) {
9369 null 			this.each(function( i ) {
9404 null 	setOffset: function( elem, options, i ) {
9451 null 	position: function() {
9488 null 	offsetParent: function() {
9489 null 		return this.map(function() {
9501 null jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
9504 null 	jQuery.fn[ method ] = function( val ) {
9505 null 		return jQuery.access( this, function( elem, method, val ) {
9527 getWindow function getWindow( elem ) {
9535 null jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
9536 null 	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
9538 null 		jQuery.fn[ funcName ] = function( margin, value ) {
9542 null 			return jQuery.access( this, function( elem, type, value ) {
9595 null 	define( "jquery", [], function () { return jQuery; } );
1 null /*!
1 html /*!
2 null  * jQuery JavaScript Library v1.9.1
1 html /*!
2 null  * jQuery JavaScript Library v1.9.1
1 html /*!
2 null  * jQuery JavaScript Library v1.9.1
1 html /*!
2 null  * jQuery JavaScript Library v1.9.1
1 html /*!
2 null  * jQuery JavaScript Library v1.9.1
1 html /*!
2 null  * jQuery JavaScript Library v1.9.1
1 html /*!
2 null  * jQuery JavaScript Library v1.9.1
1 null /*!
1 html /*!
2 null  * jQuery JavaScript Library v1.9.1
1 null /*!
1 html /*!
2 null  * jQuery JavaScript Library v1.9.1
1 null /*!
1 append /*!
2 null  * jQuery JavaScript Library v1.9.1
1 null /*!
1 attr /*!
1 null /*!
1 each /*!
1 null /*!
1 css /*!
2 null  * jQuery JavaScript Library v1.9.1
1 css /*!
2 null  * jQuery JavaScript Library v1.9.1
1 null /*!
1 find /*!
6 null  * http://sizzlejs.com/
1 null /*!
1 hide /*!
1 null /*!
1 show /*!
1 null /*!
1 on /*!
44 null 
52 null 	core_push = core_deletedIds.push,
1 null /*!
1 off /*!
25 null 	// A central reference to the root jQuery(document)
1 null /*!
1 prepend /*!
2 null  * jQuery JavaScript Library v1.9.1
1 null /*!
1 val /*!
26 null 	rootjQuery,
45 null 	// List of deleted data cache ids, so we can reuse them
1 null /*!
1 text /*!
2 null  * jQuery JavaScript Library v1.9.1
1 null /*!
1 Sizzle /*!
1 null /*!
1 jq_css /*!
1 null /*!
1 jq_text /*!
1 null /*!
1 jq_each /*!
1 null /*!
1 jq_attr /*!
14 null (function( window, undefined ) {
60 null 	jQuery = function( selector, context ) {
94 null 	fcamelCase = function( all, letter ) {
99 null 	completed = function( event ) {
108 null 	detach = function() {
124 null 	init: function( selector, context, rootjQuery ) {
232 null 	size: function() {
236 null 	toArray: function() {
242 null 	get: function( num ) {
254 null 	pushStack: function( elems ) {
270 null 	each: function( callback, args ) {
274 null 	ready: function( fn ) {
281 null 	slice: function() {
285 null 	first: function() {
289 null 	last: function() {
293 null 	eq: function( i ) {
299 null 	map: function( callback ) {
300 null 		return this.pushStack( jQuery.map(this, function( elem, i ) {
305 null 	end: function() {
319 null jQuery.extend = jQuery.fn.extend = function() {
384 null 	noConflict: function( deep ) {
404 null 	holdReady: function( hold ) {
413 null 	ready: function( wait ) {
445 null 	isFunction: function( obj ) {
449 null 	isArray: Array.isArray || function( obj ) {
453 null 	isWindow: function( obj ) {
457 null 	isNumeric: function( obj ) {
461 null 	type: function( obj ) {
470 null 	isPlainObject: function( obj ) {
499 null 	isEmptyObject: function( obj ) {
507 null 	error: function( msg ) {
514 null 	parseHTML: function( data, context, keepScripts ) {
539 null 	parseJSON: function( data ) {
570 null 	parseXML: function( data ) {
593 null 	noop: function() {},
598 null 	globalEval: function( data ) {
603 null 			( window.execScript || function( data ) {
611 null 	camelCase: function( string ) {
615 null 	nodeName: function( elem, name ) {
620 null 	each: function( obj, callback, args ) {
671 null 		function( text ) {
678 null 		function( text ) {
685 null 	makeArray: function( arr, results ) {
702 null 	inArray: function( elem, arr, i ) {
724 null 	merge: function( first, second ) {
744 null 	grep: function( elems, callback, inv ) {
764 null 	map: function( elems, callback, arg ) {
801 null 	proxy: function( fn, context ) {
818 null 		proxy = function() {
830 null 	access: function( elems, fn, key, value, chainable, emptyGet, raw ) {
859 null 					fn = function( elem, key, value ) {
881 null 	now: function() {
886 null jQuery.ready.promise = function( obj ) {
923 doScrollCheck 				(function doScrollCheck() {
948 null jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
952 isArraylike function isArraylike( obj ) {
975 createOptions function createOptions( options ) {
977 null 	jQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) {
1005 null jQuery.Callbacks = function( options ) {
1030 null 		fire = function( data ) {
1059 null 			add: function() {
1063 add 					(function add( args ) {
1064 null 						jQuery.each( args, function( _, arg ) {
1090 null 			remove: function() {
1092 null 					jQuery.each( arguments, function( _, arg ) {
1112 null 			has: function( fn ) {
1116 null 			empty: function() {
1121 null 			disable: function() {
1126 null 			disabled: function() {
1130 null 			lock: function() {
1138 null 			locked: function() {
1142 null 			fireWith: function( context, args ) {
1155 null 			fire: function() {
1160 null 			fired: function() {
1169 null 	Deferred: function( func ) {
1178 null 				state: function() {
1181 null 				always: function() {
1185 null 				then: function( /* fnDone, fnFail, fnProgress */ ) {
1187 null 					return jQuery.Deferred(function( newDefer ) {
1188 null 						jQuery.each( tuples, function( i, tuple ) {
1192 null 							deferred[ tuple[1] ](function() {
1209 null 				promise: function( obj ) {
1219 null 		jQuery.each( tuples, function( i, tuple ) {
1228 null 				list.add(function() {
1237 null 			deferred[ tuple[0] ] = function() {
1257 null 	when: function( subordinate /* , ..., subordinateN */ ) {
1269 null 			updateFunc = function( i, contexts, values ) {
1270 null 				return function( value ) {
1308 null jQuery.support = (function() {
1435 null 		div.attachEvent( "onclick", function() {
1455 null 	jQuery(function() {
1552 internalData function internalData( elem, name, data, pvt /* Internal Use Only */ ){
1646 internalRemoveData function internalRemoveData( elem, name, pvt ) {
1749 null 	hasData: function( elem ) {
1754 null 	data: function( elem, name, data ) {
1758 null 	removeData: function( elem, name ) {
1763 null 	_data: function( elem, name, data ) {
1767 null 	_removeData: function( elem, name ) {
1772 null 	acceptData: function( elem ) {
1786 null 	data: function( key, value ) {
1817 null 			return this.each(function() {
1822 null 		return jQuery.access( this, function( value ) {
1829 null 			this.each(function() {
1835 null 	removeData: function( key ) {
1836 null 		return this.each(function() {
1842 dataAttr function dataAttr( elem, key, data ) {
1874 isEmptyDataObject function isEmptyDataObject( obj ) {
1890 null 	queue: function( elem, type, data ) {
1909 null 	dequeue: function( elem, type ) {
1916 null 			next = function() {
1946 null 	_queueHooks: function( elem, type ) {
1949 null 			empty: jQuery.Callbacks("once memory").add(function() {
1958 null 	queue: function( type, data ) {
1973 null 			this.each(function() {
1984 null 	dequeue: function( type ) {
1985 null 		return this.each(function() {
1991 null 	delay: function( time, type ) {
1995 null 		return this.queue( type, function( next, hooks ) {
1997 null 			hooks.stop = function() {
2002 null 	clearQueue: function( type ) {
2007 null 	promise: function( type, obj ) {
2013 null 			resolve = function() {
2047 null 	attr: function( name, value ) {
2051 null 	removeAttr: function( name ) {
2052 null 		return this.each(function() {
2057 null 	prop: function( name, value ) {
2061 null 	removeProp: function( name ) {
2063 null 		return this.each(function() {
2072 null 	addClass: function( value ) {
2079 null 			return this.each(function( j ) {
2111 null 	removeClass: function( value ) {
2118 null 			return this.each(function( j ) {
2149 null 	toggleClass: function( value, stateVal ) {
2154 null 			return this.each(function( i ) {
2159 null 		return this.each(function() {
2190 null 	hasClass: function( selector ) {
2203 null 	val: function( value ) {
2229 null 		return this.each(function( i ) {
2249 null 				val = jQuery.map(val, function ( value ) {
2267 null 			get: function( elem ) {
2275 null 			get: function( elem ) {
2312 null 			set: function( elem, value ) {
2315 null 				jQuery(elem).find("option").each(function() {
2327 null 	attr: function( elem, name, value ) {
2381 null 	removeAttr: function( elem, value ) {
2413 null 			set: function( elem, value ) {
2443 null 	prop: function( elem, name, value ) {
2480 null 			get: function( elem ) {
2497 null 	get: function( elem, name ) {
2521 null 	set: function( elem, value, name ) {
2541 null 		get: function( elem, name ) {
2550 null 		set: function( elem, value, name ) {
2568 null 		get: function( elem, name ) {
2574 null 		set: function( elem, value, name ) {
2596 null 		set: function( elem, value, name ) {
2603 null 	jQuery.each([ "width", "height" ], function( i, name ) {
2605 null 			set: function( elem, value ) {
2619 null 	jQuery.each([ "href", "src", "width", "height" ], function( i, name ) {
2621 null 			get: function( elem ) {
2629 null 	jQuery.each([ "href", "src" ], function( i, name ) {
2631 null 			get: function( elem ) {
2640 null 		get: function( elem ) {
2646 null 		set: function( elem, value ) {
2656 null 		get: function( elem ) {
2679 null 	jQuery.each([ "radio", "checkbox" ], function() {
2681 null 			get: function( elem ) {
2688 null jQuery.each([ "radio", "checkbox" ], function() {
2690 null 		set: function( elem, value ) {
2703 returnTrue function returnTrue() {
2707 returnFalse function returnFalse() {
2719 null 	add: function( elem, types, handler, data, selector ) {
2747 null 			eventHandle = elemData.handle = function( e ) {
2829 null 	remove: function( elem, types, handler, selector, mappedTypes ) {
2902 null 	trigger: function( event, data, elem, onlyHandlers ) {
3036 null 	dispatch: function( event ) {
3095 null 	handlers: function( event, handlers ) {
3142 null 	fix: function( event ) {
3195 null 		filter: function( event, original ) {
3208 null 		filter: function( event, original ) {
3245 null 			trigger: function() {
3254 null 			trigger: function() {
3269 null 			trigger: function() {
3279 null 			postDispatch: function( event ) {
3289 null 	simulate: function( type, elem, event, bubble ) {
3313 null 	function( elem, type, handle ) {
3318 null 	function( elem, type, handle ) {
3333 null jQuery.Event = function( src, props ) {
3373 null 	preventDefault: function() {
3391 null 	stopPropagation: function() {
3407 null 	stopImmediatePropagation: function() {
3417 null }, function( orig, fix ) {
3422 null 		handle: function( event ) {
3444 null 		setup: function() {
3451 null 			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
3456 null 					jQuery.event.add( form, "submit._submit", function( event ) {
3465 null 		postDispatch: function( event ) {
3475 null 		teardown: function() {
3492 null 		setup: function() {
3499 null 					jQuery.event.add( this, "propertychange._change", function( event ) {
3504 null 					jQuery.event.add( this, "click._change", function( event ) {
3515 null 			jQuery.event.add( this, "beforeactivate._change", function( e ) {
3519 null 					jQuery.event.add( elem, "change._change", function( event ) {
3529 null 		handle: function( event ) {
3538 null 		teardown: function() {
3548 null 	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {
3552 null 			handler = function( event ) {
3557 null 			setup: function() {
3562 null 			teardown: function() {
3573 null 	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
3614 null 			fn = function( event ) {
3622 null 		return this.each( function() {
3626 null 	one: function( types, selector, data, fn ) {
3629 null 	off: function( types, selector, fn ) {
3656 null 		return this.each(function() {
3661 null 	bind: function( types, data, fn ) {
3664 null 	unbind: function( types, fn ) {
3668 null 	delegate: function( selector, types, data, fn ) {
3671 null 	undelegate: function( selector, types, fn ) {
3676 null 	trigger: function( type, data ) {
3677 null 		return this.each(function() {
3681 null 	triggerHandler: function( type, data ) {
3694 null (function( window, undefined ) {
3736 null 	indexOf = arr.indexOf || function( elem ) {
3812 null 	funescape = function( _, escaped ) {
3828 null 	slice = function( i ) {
3842 isNative function isNative( fn ) {
3852 createCache function createCache() {
3856 null 	return (cache = function( key, value ) {
3870 markFunction function markFunction( fn ) {
3879 assert function assert( fn ) {
3892 Sizzle function Sizzle( selector, context, results, seed ) {
4006 null isXML = Sizzle.isXML = function( elem ) {
4018 null setDocument = Sizzle.setDocument = function( node ) {
4034 null 	support.tagNameNoComments = assert(function( div ) {
4040 null 	support.attributes = assert(function( div ) {
4048 null 	support.getByClassName = assert(function( div ) {
4062 null 	support.getByName = assert(function( div ) {
4083 null 	Expr.attrHandle = assert(function( div ) {
4090 null 			"href": function( elem ) {
4093 null 			"type": function( elem ) {
4100 null 		Expr.find["ID"] = function( id, context ) {
4108 null 		Expr.filter["ID"] = function( id ) {
4110 null 			return function( elem ) {
4115 null 		Expr.find["ID"] = function( id, context ) {
4126 null 		Expr.filter["ID"] =  function( id ) {
4128 null 			return function( elem ) {
4137 null 		function( tag, context ) {
4142 null 		function( tag, context ) {
4162 null 	Expr.find["NAME"] = support.getByName && function( tag, context ) {
4169 null 	Expr.find["CLASS"] = support.getByClassName && function( className, context ) {
4188 null 		assert(function( div ) {
4209 null 		assert(function( div ) {
4236 null 		assert(function( div ) {
4255 null 		function( a, b ) {
4264 null 		function( a, b ) {
4277 null 	function( a, b ) {
4300 null 	function( a, b ) {
4360 null Sizzle.matches = function( expr, elements ) {
4364 null Sizzle.matchesSelector = function( elem, expr ) {
4391 null Sizzle.contains = function( context, elem ) {
4399 null Sizzle.attr = function( elem, name ) {
4421 null Sizzle.error = function( msg ) {
4426 null Sizzle.uniqueSort = function( results ) {
4450 siblingCheck function siblingCheck( a, b ) {
4472 createInputPseudo function createInputPseudo( type ) {
4473 null 	return function( elem ) {
4480 createButtonPseudo function createButtonPseudo( type ) {
4481 null 	return function( elem ) {
4488 createPositionalPseudo function createPositionalPseudo( fn ) {
4489 null 	return markFunction(function( argument ) {
4491 null 		return markFunction(function( seed, matches ) {
4510 null getText = Sizzle.getText = function( elem ) {
4560 null 		"ATTR": function( match ) {
4573 null 		"CHILD": function( match ) {
4605 null 		"PSEUDO": function( match ) {
4636 null 		"TAG": function( nodeName ) {
4638 null 				return function() { return true; };
4642 null 			return function( elem ) {
4647 null 		"CLASS": function( className ) {
4652 null 				classCache( className, function( elem ) {
4657 null 		"ATTR": function( name, operator, check ) {
4658 null 			return function( elem ) {
4681 null 		"CHILD": function( type, what, argument, first, last ) {
4689 null 				function( elem ) {
4693 null 				function( elem, context, xml ) {
4770 null 		"PSEUDO": function( pseudo, argument ) {
4790 null 					markFunction(function( seed, matches ) {
4799 null 					function( elem ) {
4810 null 		"not": markFunction(function( selector ) {
4819 null 				markFunction(function( seed, matches, context, xml ) {
4831 null 				function( elem, context, xml ) {
4838 null 		"has": markFunction(function( selector ) {
4839 null 			return function( elem ) {
4844 null 		"contains": markFunction(function( text ) {
4845 null 			return function( elem ) {
4857 null 		"lang": markFunction( function( lang ) {
4863 null 			return function( elem ) {
4879 null 		"target": function( elem ) {
4884 null 		"root": function( elem ) {
4888 null 		"focus": function( elem ) {
4893 null 		"enabled": function( elem ) {
4897 null 		"disabled": function( elem ) {
4901 null 		"checked": function( elem ) {
4908 null 		"selected": function( elem ) {
4919 null 		"empty": function( elem ) {
4933 null 		"parent": function( elem ) {
4938 null 		"header": function( elem ) {
4942 null 		"input": function( elem ) {
4946 null 		"button": function( elem ) {
4951 null 		"text": function( elem ) {
4961 null 		"first": createPositionalPseudo(function() {
4965 null 		"last": createPositionalPseudo(function( matchIndexes, length ) {
4969 null 		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
4973 null 		"even": createPositionalPseudo(function( matchIndexes, length ) {
4981 null 		"odd": createPositionalPseudo(function( matchIndexes, length ) {
4989 null 		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
4997 null 		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
5015 tokenize function tokenize( selector, parseOnly ) {
5082 toSelector function toSelector( tokens ) {
5092 addCombinator function addCombinator( matcher, combinator, base ) {
5099 null 		function( elem, context, xml ) {
5108 null 		function( elem, context, xml ) {
5142 elementMatcher function elementMatcher( matchers ) {
5144 null 		function( elem, context, xml ) {
5156 condense function condense( unmatched, map, filter, context, xml ) {
5177 setMatcher function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
5184 null 	return markFunction(function( seed, results, context, xml ) {
5270 matcherFromTokens function matcherFromTokens( tokens ) {
5278 null 		matchContext = addCombinator( function( elem ) {
5281 null 		matchAnyContext = addCombinator( function( elem ) {
5284 null 		matchers = [ function( elem, context, xml ) {
5322 matcherFromGroupMatchers function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
5327 null 		superMatcher = function( seed, context, xml, results, expandContext ) {
5423 null compile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {
5450 multipleContexts function multipleContexts( selector, contexts, results ) {
5459 select function select( selector, context, results, seed ) {
5528 setFilters function setFilters() {}
5560 null 	find: function( selector ) {
5566 null 			return this.pushStack( jQuery( selector ).filter(function() {
5586 null 	has: function( target ) {
5591 null 		return this.filter(function() {
5600 null 	not: function( selector ) {
5604 null 	filter: function( selector ) {
5608 null 	is: function( selector ) {
5619 null 	closest: function( selectors, context ) {
5645 null 	index: function( elem ) {
5663 null 	add: function( selector, context ) {
5672 null 	addBack: function( selector ) {
5681 sibling function sibling( cur, dir ) {
5690 null 	parent: function( elem ) {
5694 null 	parents: function( elem ) {
5697 null 	parentsUntil: function( elem, i, until ) {
5700 null 	next: function( elem ) {
5703 null 	prev: function( elem ) {
5706 null 	nextAll: function( elem ) {
5709 null 	prevAll: function( elem ) {
5712 null 	nextUntil: function( elem, i, until ) {
5715 null 	prevUntil: function( elem, i, until ) {
5718 null 	siblings: function( elem ) {
5721 null 	children: function( elem ) {
5724 null 	contents: function( elem ) {
5729 null }, function( name, fn ) {
5730 null 	jQuery.fn[ name ] = function( until, selector ) {
5752 null 	filter: function( expr, elems, not ) {
5762 null 	dir: function( elem, dir, until ) {
5775 null 	sibling: function( n, elem ) {
5789 winnow function winnow( elements, qualifier, keep ) {
5796 null 		return jQuery.grep(elements, function( elem, i ) {
5802 null 		return jQuery.grep(elements, function( elem ) {
5807 null 		var filtered = jQuery.grep(elements, function( elem ) {
5818 null 	return jQuery.grep(elements, function( elem ) {
5822 createSafeFragment function createSafeFragment( document ) {
5876 null 	text: function( value ) {
5877 null 		return jQuery.access( this, function( value ) {
5884 null 	wrapAll: function( html ) {
5886 null 			return this.each(function(i) {
5899 null 			wrap.map(function() {
5913 null 	wrapInner: function( html ) {
5915 null 			return this.each(function(i) {
5920 null 		return this.each(function() {
5933 null 	wrap: function( html ) {
5936 null 		return this.each(function(i) {
5941 null 	unwrap: function() {
5942 null 		return this.parent().each(function() {
5949 null 	append: function() {
5950 null 		return this.domManip(arguments, true, function( elem ) {
5957 null 	prepend: function() {
5958 null 		return this.domManip(arguments, true, function( elem ) {
5965 null 	before: function() {
5966 null 		return this.domManip( arguments, false, function( elem ) {
5973 null 	after: function() {
5974 null 		return this.domManip( arguments, false, function( elem ) {
5982 null 	remove: function( selector, keepData ) {
6004 null 	empty: function() {
6029 null 	clone: function( dataAndEvents, deepDataAndEvents ) {
6033 null 		return this.map( function () {
6038 null 	html: function( value ) {
6039 null 		return jQuery.access( this, function( value ) {
6080 null 	replaceWith: function( value ) {
6089 null 		return this.domManip( [ value ], true, function( elem ) {
6100 null 	detach: function( selector ) {
6104 null 	domManip: function( args, table, callback ) {
6120 null 			return this.each(function( index ) {
6203 findOrAppend function findOrAppend( elem, tag ) {
6208 disableScript function disableScript( elem ) {
6213 restoreScript function restoreScript( elem ) {
6224 setGlobalEval function setGlobalEval( elems, refElements ) {
6232 cloneCopyEvent function cloneCopyEvent( src, dest ) {
6260 fixCloneNodeIssues function fixCloneNodeIssues( src, dest ) {
6333 null }, function( name, original ) {
6334 null 	jQuery.fn[ name ] = function( selector ) {
6353 getAll function getAll( context, tag ) {
6376 fixDefaultChecked function fixDefaultChecked( elem ) {
6383 null 	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
6438 null 	buildFragment: function( elems, context, scripts, selection ) {
6565 null 	cleanData: function( elems, /* internal */ acceptData ) {
6641 vendorPropName function vendorPropName( style, name ) {
6663 isHidden function isHidden( elem, el ) {
6670 showHide function showHide( elements, show ) {
6725 null 	css: function( name, value ) {
6726 null 		return jQuery.access( this, function( elem, name, value ) {
6747 null 	show: function() {
6750 null 	hide: function() {
6753 null 	toggle: function( state ) {
6756 null 		return this.each(function() {
6771 null 			get: function( elem, computed ) {
6802 null 	style: function( elem, name, value, extra ) {
6867 null 	css: function( elem, name, extra, styles ) {
6902 null 	swap: function( elem, options, callback, args ) {
6926 null 	getStyles = function( elem ) {
6930 null 	curCSS = function( elem, name, _computed ) {
6969 null 	getStyles = function( elem ) {
6973 null 	curCSS = function( elem, name, _computed ) {
7017 setPositiveNumber function setPositiveNumber( elem, value, subtract ) {
7025 augmentWidthOrHeight function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
7064 getWidthOrHeight function getWidthOrHeight( elem, name, extra ) {
7108 css_defaultDisplay function css_defaultDisplay( nodeName ) {
7140 actualDisplay function actualDisplay( name, doc ) {
7147 null jQuery.each([ "height", "width" ], function( i, name ) {
7149 null 		get: function( elem, computed, extra ) {
7154 null 					jQuery.swap( elem, cssShow, function() {
7161 null 		set: function( elem, value, extra ) {
7178 null 		get: function( elem, computed ) {
7185 null 		set: function( elem, value ) {
7222 null jQuery(function() {
7225 null 			get: function( elem, computed ) {
7240 null 		jQuery.each( [ "top", "left" ], function( i, prop ) {
7242 null 				get: function( elem, computed ) {
7258 null 	jQuery.expr.filters.hidden = function( elem ) {
7265 null 	jQuery.expr.filters.visible = function( elem ) {
7275 null }, function( prefix, suffix ) {
7277 null 		expand: function( value ) {
7304 null 	serialize: function() {
7307 null 	serializeArray: function() {
7308 null 		return this.map(function(){
7313 null 		.filter(function(){
7320 null 		.map(function( i, elem ){
7326 null 					jQuery.map( val, function( val ){
7336 null jQuery.param = function( a, traditional ) {
7339 null 		add = function( key, value ) {
7353 null 		jQuery.each( a, function() {
7369 buildParams function buildParams( prefix, obj, traditional, add ) {
7374 null 		jQuery.each( obj, function( i, v ) {
7398 null 	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {
7401 null 	jQuery.fn[ name ] = function( data, fn ) {
7408 null jQuery.fn.hover = function( fnOver, fnOut ) {
7467 addToPrefiltersOrTransports function addToPrefiltersOrTransports( structure ) {
7470 null 	return function( dataTypeExpression, func ) {
7499 inspectPrefiltersOrTransports function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {
7504 inspect 	function inspect( dataType ) {
7507 null 		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
7526 ajaxExtend function ajaxExtend( target, src ) {
7542 null jQuery.fn.load = function( url, params, callback ) {
7577 null 		}).done(function( responseText ) {
7591 null 		}).complete( callback && function( jqXHR, status ) {
7600 null jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ){
7601 null 	jQuery.fn[ type ] = function( fn ){
7606 null jQuery.each( [ "get", "post" ], function( i, method ) {
7607 null 	jQuery[ method ] = function( url, data, callback, type ) {
7703 null 	ajaxSetup: function( target, settings ) {
7717 null 	ajax: function( url, options ) {
7770 null 				getResponseHeader: function( key ) {
7785 null 				getAllResponseHeaders: function() {
7790 null 				setRequestHeader: function( name, value ) {
7800 null 				overrideMimeType: function( type ) {
7808 null 				statusCode: function( map ) {
7825 null 				abort: function( statusText ) {
7972 null 				timeoutTimer = setTimeout(function() {
7992 done 		function done( status, nativeStatusText, responses, headers ) {
8104 null 	getScript: function( url, callback ) {
8108 null 	getJSON: function( url, data, callback ) {
8118 ajaxHandleResponses function ajaxHandleResponses( s, jqXHR, responses ) {
8179 ajaxConvert function ajaxConvert( s, response ) {
8271 null 		"text script": function( text ) {
8279 null jQuery.ajaxPrefilter( "script", function( s ) {
8290 null jQuery.ajaxTransport( "script", function(s) {
8300 null 			send: function( _, callback ) {
8313 null 				script.onload = script.onreadystatechange = function( _, isAbort ) {
8340 null 			abort: function() {
8354 null 	jsonpCallback: function() {
8362 null jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {
8386 null 		s.converters["script json"] = function() {
8398 null 		window[ callbackName ] = function() {
8403 null 		jqXHR.always(function() {
8431 null 	xhrOnUnloadAbort = window.ActiveXObject && function() {
8440 createStandardXHR function createStandardXHR() {
8446 createActiveXHR function createActiveXHR() {
8461 null 	function() {
8475 null 	jQuery.ajaxTransport(function( s ) {
8482 null 				send: function( headers, complete ) {
8530 null 					callback = function( _, isAbort ) {
8626 null 				abort: function() {
8641 null 		"*": [function( prop, value ) {
8685 createFxNow function createFxNow() {
8686 null 	setTimeout(function() {
8692 createTweens function createTweens( animation, props ) {
8693 null 	jQuery.each( props, function( prop, value ) {
8707 Animation function Animation( elem, properties, options ) {
8712 null 		deferred = jQuery.Deferred().always( function() {
8716 null 		tick = function() {
8750 null 			createTween: function( prop, end ) {
8756 null 			stop: function( gotoEnd ) {
8811 propFilter function propFilter( props, specialEasing ) {
8850 null 	tweener: function( props, callback ) {
8869 null 	prefilter: function( callback, prepend ) {
8878 defaultPrefilter function defaultPrefilter( elem, props, opts ) {
8895 null 			hooks.empty.fire = function() {
8903 null 		anim.always(function() {
8906 null 			anim.always(function() {
8942 null 			anim.always(function() {
8978 null 			anim.done(function() {
8982 null 		anim.done(function() {
9005 Tween function Tween( elem, options, prop, end, easing ) {
9012 null 	init: function( elem, options, prop, end, easing, unit ) {
9021 null 	cur: function() {
9028 null 	run: function( percent ) {
9058 null 		get: function( tween ) {
9074 null 		set: function( tween ) {
9092 null 	set: function( tween ) {
9099 null jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
9101 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9109 null 	fadeTo: function( speed, to, easing, callback ) {
9117 null 	animate: function( prop, speed, easing, callback ) {
9120 null 			doAnimation = function() {
9123 null 				doAnimation.finish = function() {
9137 null 	stop: function( type, clearQueue, gotoEnd ) {
9138 null 		var stopQueue = function( hooks ) {
9153 null 		return this.each(function() {
9187 null 	finish: function( type ) {
9191 null 		return this.each(function() {
9231 genFx function genFx( type, includeWidth ) {
9259 null }, function( name, props ) {
9260 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9265 null jQuery.speed = function( speed, easing, fn ) {
9284 null 	opt.complete = function() {
9298 null 	linear: function( p ) {
9301 null 	swing: function( p ) {
9308 null jQuery.fx.tick = function() {
9329 null jQuery.fx.timer = function( timer ) {
9337 null jQuery.fx.start = function() {
9343 null jQuery.fx.stop = function() {
9359 null 	jQuery.expr.filters.animated = function( elem ) {
9360 null 		return jQuery.grep(jQuery.timers, function( fn ) {
9365 null jQuery.fn.offset = function( options ) {
9369 null 			this.each(function( i ) {
9404 null 	setOffset: function( elem, options, i ) {
9451 null 	position: function() {
9488 null 	offsetParent: function() {
9489 null 		return this.map(function() {
9501 null jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
9504 null 	jQuery.fn[ method ] = function( val ) {
9505 null 		return jQuery.access( this, function( elem, method, val ) {
9527 getWindow function getWindow( elem ) {
9535 null jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
9536 null 	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
9538 null 		jQuery.fn[ funcName ] = function( margin, value ) {
9542 null 			return jQuery.access( this, function( elem, type, value ) {
9595 null 	define( "jquery", [], function () { return jQuery; } );
14 null (function( window, undefined ) {
952 isArraylike function isArraylike( obj ) {
975 createOptions function createOptions( options ) {
1552 internalData function internalData( elem, name, data, pvt /* Internal Use Only */ ){
1646 internalRemoveData function internalRemoveData( elem, name, pvt ) {
1842 dataAttr function dataAttr( elem, key, data ) {
1874 isEmptyDataObject function isEmptyDataObject( obj ) {
2703 returnTrue function returnTrue() {
2707 returnFalse function returnFalse() {
5681 sibling function sibling( cur, dir ) {
5789 winnow function winnow( elements, qualifier, keep ) {
5822 createSafeFragment function createSafeFragment( document ) {
6203 findOrAppend function findOrAppend( elem, tag ) {
6208 disableScript function disableScript( elem ) {
6213 restoreScript function restoreScript( elem ) {
6224 setGlobalEval function setGlobalEval( elems, refElements ) {
6232 cloneCopyEvent function cloneCopyEvent( src, dest ) {
6260 fixCloneNodeIssues function fixCloneNodeIssues( src, dest ) {
6353 getAll function getAll( context, tag ) {
6376 fixDefaultChecked function fixDefaultChecked( elem ) {
6641 vendorPropName function vendorPropName( style, name ) {
6663 isHidden function isHidden( elem, el ) {
6670 showHide function showHide( elements, show ) {
7017 setPositiveNumber function setPositiveNumber( elem, value, subtract ) {
7025 augmentWidthOrHeight function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
7064 getWidthOrHeight function getWidthOrHeight( elem, name, extra ) {
7108 css_defaultDisplay function css_defaultDisplay( nodeName ) {
7140 actualDisplay function actualDisplay( name, doc ) {
7369 buildParams function buildParams( prefix, obj, traditional, add ) {
7467 addToPrefiltersOrTransports function addToPrefiltersOrTransports( structure ) {
7499 inspectPrefiltersOrTransports function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {
7526 ajaxExtend function ajaxExtend( target, src ) {
8118 ajaxHandleResponses function ajaxHandleResponses( s, jqXHR, responses ) {
8179 ajaxConvert function ajaxConvert( s, response ) {
8440 createStandardXHR function createStandardXHR() {
8446 createActiveXHR function createActiveXHR() {
8685 createFxNow function createFxNow() {
8692 createTweens function createTweens( animation, props ) {
8707 Animation function Animation( elem, properties, options ) {
8811 propFilter function propFilter( props, specialEasing ) {
8878 defaultPrefilter function defaultPrefilter( elem, props, opts ) {
9005 Tween function Tween( elem, options, prop, end, easing ) {
9231 genFx function genFx( type, includeWidth ) {
9527 getWindow function getWindow( elem ) {
60 null 	jQuery = function( selector, context ) {
94 null 	fcamelCase = function( all, letter ) {
99 null 	completed = function( event ) {
108 null 	detach = function() {
124 null 	init: function( selector, context, rootjQuery ) {
232 null 	size: function() {
236 null 	toArray: function() {
242 null 	get: function( num ) {
254 null 	pushStack: function( elems ) {
270 null 	each: function( callback, args ) {
274 null 	ready: function( fn ) {
281 null 	slice: function() {
285 null 	first: function() {
289 null 	last: function() {
293 null 	eq: function( i ) {
299 null 	map: function( callback ) {
305 null 	end: function() {
319 null jQuery.extend = jQuery.fn.extend = function() {
384 null 	noConflict: function( deep ) {
404 null 	holdReady: function( hold ) {
413 null 	ready: function( wait ) {
445 null 	isFunction: function( obj ) {
453 null 	isWindow: function( obj ) {
457 null 	isNumeric: function( obj ) {
461 null 	type: function( obj ) {
470 null 	isPlainObject: function( obj ) {
499 null 	isEmptyObject: function( obj ) {
507 null 	error: function( msg ) {
514 null 	parseHTML: function( data, context, keepScripts ) {
539 null 	parseJSON: function( data ) {
570 null 	parseXML: function( data ) {
593 null 	noop: function() {},
598 null 	globalEval: function( data ) {
611 null 	camelCase: function( string ) {
615 null 	nodeName: function( elem, name ) {
620 null 	each: function( obj, callback, args ) {
678 null 		function( text ) {
685 null 	makeArray: function( arr, results ) {
702 null 	inArray: function( elem, arr, i ) {
724 null 	merge: function( first, second ) {
744 null 	grep: function( elems, callback, inv ) {
764 null 	map: function( elems, callback, arg ) {
801 null 	proxy: function( fn, context ) {
830 null 	access: function( elems, fn, key, value, chainable, emptyGet, raw ) {
881 null 	now: function() {
886 null jQuery.ready.promise = function( obj ) {
948 null jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
14 null (function( window, undefined ) {
952 isArraylike function isArraylike( obj ) {
975 createOptions function createOptions( options ) {
1552 internalData function internalData( elem, name, data, pvt /* Internal Use Only */ ){
1646 internalRemoveData function internalRemoveData( elem, name, pvt ) {
1842 dataAttr function dataAttr( elem, key, data ) {
1874 isEmptyDataObject function isEmptyDataObject( obj ) {
2703 returnTrue function returnTrue() {
2707 returnFalse function returnFalse() {
5681 sibling function sibling( cur, dir ) {
5789 winnow function winnow( elements, qualifier, keep ) {
5822 createSafeFragment function createSafeFragment( document ) {
6203 findOrAppend function findOrAppend( elem, tag ) {
6208 disableScript function disableScript( elem ) {
6213 restoreScript function restoreScript( elem ) {
6224 setGlobalEval function setGlobalEval( elems, refElements ) {
6232 cloneCopyEvent function cloneCopyEvent( src, dest ) {
6260 fixCloneNodeIssues function fixCloneNodeIssues( src, dest ) {
6353 getAll function getAll( context, tag ) {
6376 fixDefaultChecked function fixDefaultChecked( elem ) {
6641 vendorPropName function vendorPropName( style, name ) {
6663 isHidden function isHidden( elem, el ) {
6670 showHide function showHide( elements, show ) {
7017 setPositiveNumber function setPositiveNumber( elem, value, subtract ) {
7025 augmentWidthOrHeight function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
7064 getWidthOrHeight function getWidthOrHeight( elem, name, extra ) {
7108 css_defaultDisplay function css_defaultDisplay( nodeName ) {
7140 actualDisplay function actualDisplay( name, doc ) {
7369 buildParams function buildParams( prefix, obj, traditional, add ) {
7467 addToPrefiltersOrTransports function addToPrefiltersOrTransports( structure ) {
7499 inspectPrefiltersOrTransports function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {
7526 ajaxExtend function ajaxExtend( target, src ) {
8118 ajaxHandleResponses function ajaxHandleResponses( s, jqXHR, responses ) {
8179 ajaxConvert function ajaxConvert( s, response ) {
8440 createStandardXHR function createStandardXHR() {
8446 createActiveXHR function createActiveXHR() {
8685 createFxNow function createFxNow() {
8692 createTweens function createTweens( animation, props ) {
8707 Animation function Animation( elem, properties, options ) {
8811 propFilter function propFilter( props, specialEasing ) {
8878 defaultPrefilter function defaultPrefilter( elem, props, opts ) {
9005 Tween function Tween( elem, options, prop, end, easing ) {
9231 genFx function genFx( type, includeWidth ) {
9527 getWindow function getWindow( elem ) {
60 null 	jQuery = function( selector, context ) {
94 null 	fcamelCase = function( all, letter ) {
99 null 	completed = function( event ) {
108 null 	detach = function() {
124 null 	init: function( selector, context, rootjQuery ) {
232 null 	size: function() {
236 null 	toArray: function() {
242 null 	get: function( num ) {
254 null 	pushStack: function( elems ) {
270 null 	each: function( callback, args ) {
274 null 	ready: function( fn ) {
281 null 	slice: function() {
285 null 	first: function() {
289 null 	last: function() {
293 null 	eq: function( i ) {
299 null 	map: function( callback ) {
305 null 	end: function() {
319 null jQuery.extend = jQuery.fn.extend = function() {
384 null 	noConflict: function( deep ) {
404 null 	holdReady: function( hold ) {
413 null 	ready: function( wait ) {
445 null 	isFunction: function( obj ) {
453 null 	isWindow: function( obj ) {
457 null 	isNumeric: function( obj ) {
461 null 	type: function( obj ) {
470 null 	isPlainObject: function( obj ) {
499 null 	isEmptyObject: function( obj ) {
507 null 	error: function( msg ) {
514 null 	parseHTML: function( data, context, keepScripts ) {
539 null 	parseJSON: function( data ) {
570 null 	parseXML: function( data ) {
593 null 	noop: function() {},
598 null 	globalEval: function( data ) {
611 null 	camelCase: function( string ) {
615 null 	nodeName: function( elem, name ) {
620 null 	each: function( obj, callback, args ) {
678 null 		function( text ) {
685 null 	makeArray: function( arr, results ) {
702 null 	inArray: function( elem, arr, i ) {
724 null 	merge: function( first, second ) {
744 null 	grep: function( elems, callback, inv ) {
764 null 	map: function( elems, callback, arg ) {
801 null 	proxy: function( fn, context ) {
830 null 	access: function( elems, fn, key, value, chainable, emptyGet, raw ) {
881 null 	now: function() {
886 null jQuery.ready.promise = function( obj ) {
948 null jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
14 null (function( window, undefined ) {
952 isArraylike function isArraylike( obj ) {
975 createOptions function createOptions( options ) {
1552 internalData function internalData( elem, name, data, pvt /* Internal Use Only */ ){
1646 internalRemoveData function internalRemoveData( elem, name, pvt ) {
1842 dataAttr function dataAttr( elem, key, data ) {
1874 isEmptyDataObject function isEmptyDataObject( obj ) {
2703 returnTrue function returnTrue() {
2707 returnFalse function returnFalse() {
5681 sibling function sibling( cur, dir ) {
5789 winnow function winnow( elements, qualifier, keep ) {
5822 createSafeFragment function createSafeFragment( document ) {
6203 findOrAppend function findOrAppend( elem, tag ) {
6208 disableScript function disableScript( elem ) {
6213 restoreScript function restoreScript( elem ) {
6224 setGlobalEval function setGlobalEval( elems, refElements ) {
6232 cloneCopyEvent function cloneCopyEvent( src, dest ) {
6260 fixCloneNodeIssues function fixCloneNodeIssues( src, dest ) {
6353 getAll function getAll( context, tag ) {
6376 fixDefaultChecked function fixDefaultChecked( elem ) {
6641 vendorPropName function vendorPropName( style, name ) {
6663 isHidden function isHidden( elem, el ) {
6670 showHide function showHide( elements, show ) {
7017 setPositiveNumber function setPositiveNumber( elem, value, subtract ) {
7025 augmentWidthOrHeight function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
7064 getWidthOrHeight function getWidthOrHeight( elem, name, extra ) {
7108 css_defaultDisplay function css_defaultDisplay( nodeName ) {
7140 actualDisplay function actualDisplay( name, doc ) {
7369 buildParams function buildParams( prefix, obj, traditional, add ) {
7467 addToPrefiltersOrTransports function addToPrefiltersOrTransports( structure ) {
7499 inspectPrefiltersOrTransports function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {
7526 ajaxExtend function ajaxExtend( target, src ) {
8118 ajaxHandleResponses function ajaxHandleResponses( s, jqXHR, responses ) {
8179 ajaxConvert function ajaxConvert( s, response ) {
8440 createStandardXHR function createStandardXHR() {
8446 createActiveXHR function createActiveXHR() {
8685 createFxNow function createFxNow() {
8692 createTweens function createTweens( animation, props ) {
8707 Animation function Animation( elem, properties, options ) {
8811 propFilter function propFilter( props, specialEasing ) {
8878 defaultPrefilter function defaultPrefilter( elem, props, opts ) {
9005 Tween function Tween( elem, options, prop, end, easing ) {
9231 genFx function genFx( type, includeWidth ) {
9527 getWindow function getWindow( elem ) {
60 null 	jQuery = function( selector, context ) {
94 null 	fcamelCase = function( all, letter ) {
99 null 	completed = function( event ) {
108 null 	detach = function() {
124 null 	init: function( selector, context, rootjQuery ) {
232 null 	size: function() {
236 null 	toArray: function() {
242 null 	get: function( num ) {
254 null 	pushStack: function( elems ) {
270 null 	each: function( callback, args ) {
274 null 	ready: function( fn ) {
281 null 	slice: function() {
285 null 	first: function() {
289 null 	last: function() {
293 null 	eq: function( i ) {
299 null 	map: function( callback ) {
305 null 	end: function() {
319 null jQuery.extend = jQuery.fn.extend = function() {
384 null 	noConflict: function( deep ) {
404 null 	holdReady: function( hold ) {
413 null 	ready: function( wait ) {
445 null 	isFunction: function( obj ) {
453 null 	isWindow: function( obj ) {
457 null 	isNumeric: function( obj ) {
461 null 	type: function( obj ) {
470 null 	isPlainObject: function( obj ) {
499 null 	isEmptyObject: function( obj ) {
507 null 	error: function( msg ) {
514 null 	parseHTML: function( data, context, keepScripts ) {
539 null 	parseJSON: function( data ) {
570 null 	parseXML: function( data ) {
593 null 	noop: function() {},
598 null 	globalEval: function( data ) {
611 null 	camelCase: function( string ) {
615 null 	nodeName: function( elem, name ) {
620 null 	each: function( obj, callback, args ) {
678 null 		function( text ) {
685 null 	makeArray: function( arr, results ) {
702 null 	inArray: function( elem, arr, i ) {
724 null 	merge: function( first, second ) {
744 null 	grep: function( elems, callback, inv ) {
764 null 	map: function( elems, callback, arg ) {
801 null 	proxy: function( fn, context ) {
830 null 	access: function( elems, fn, key, value, chainable, emptyGet, raw ) {
881 null 	now: function() {
886 null jQuery.ready.promise = function( obj ) {
948 null jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
818 null 		proxy = function() {
9 f  * Released under the MIT license
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
10 CSlider  * http://jquery.org/license
12 null  * Date: 2013-2-4
16 null // Can't do this because several apps including ASP.NET trace
26 null 	rootjQuery,
1 null /*!
10 null  * http://jquery.org/license
9 f  * Released under the MIT license
14 null (function( window, undefined ) {
60 null 	jQuery = function( selector, context ) {
94 null 	fcamelCase = function( all, letter ) {
99 null 	completed = function( event ) {
108 null 	detach = function() {
124 null 	init: function( selector, context, rootjQuery ) {
232 null 	size: function() {
236 null 	toArray: function() {
242 null 	get: function( num ) {
254 null 	pushStack: function( elems ) {
270 null 	each: function( callback, args ) {
274 null 	ready: function( fn ) {
281 null 	slice: function() {
285 null 	first: function() {
289 null 	last: function() {
293 null 	eq: function( i ) {
299 null 	map: function( callback ) {
300 null 		return this.pushStack( jQuery.map(this, function( elem, i ) {
305 null 	end: function() {
319 null jQuery.extend = jQuery.fn.extend = function() {
384 null 	noConflict: function( deep ) {
404 null 	holdReady: function( hold ) {
413 null 	ready: function( wait ) {
445 null 	isFunction: function( obj ) {
449 null 	isArray: Array.isArray || function( obj ) {
453 null 	isWindow: function( obj ) {
457 null 	isNumeric: function( obj ) {
461 null 	type: function( obj ) {
470 null 	isPlainObject: function( obj ) {
499 null 	isEmptyObject: function( obj ) {
507 null 	error: function( msg ) {
514 null 	parseHTML: function( data, context, keepScripts ) {
539 null 	parseJSON: function( data ) {
570 null 	parseXML: function( data ) {
593 null 	noop: function() {},
598 null 	globalEval: function( data ) {
603 null 			( window.execScript || function( data ) {
611 null 	camelCase: function( string ) {
615 null 	nodeName: function( elem, name ) {
620 null 	each: function( obj, callback, args ) {
671 null 		function( text ) {
678 null 		function( text ) {
685 null 	makeArray: function( arr, results ) {
702 null 	inArray: function( elem, arr, i ) {
724 null 	merge: function( first, second ) {
744 null 	grep: function( elems, callback, inv ) {
764 null 	map: function( elems, callback, arg ) {
801 null 	proxy: function( fn, context ) {
818 null 		proxy = function() {
830 null 	access: function( elems, fn, key, value, chainable, emptyGet, raw ) {
859 null 					fn = function( elem, key, value ) {
881 null 	now: function() {
886 null jQuery.ready.promise = function( obj ) {
923 doScrollCheck 				(function doScrollCheck() {
948 null jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
952 isArraylike function isArraylike( obj ) {
975 createOptions function createOptions( options ) {
977 null 	jQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) {
1005 null jQuery.Callbacks = function( options ) {
1030 null 		fire = function( data ) {
1059 null 			add: function() {
1063 add 					(function add( args ) {
1064 null 						jQuery.each( args, function( _, arg ) {
1090 null 			remove: function() {
1092 null 					jQuery.each( arguments, function( _, arg ) {
1112 null 			has: function( fn ) {
1116 null 			empty: function() {
1121 null 			disable: function() {
1126 null 			disabled: function() {
1130 null 			lock: function() {
1138 null 			locked: function() {
1142 null 			fireWith: function( context, args ) {
1155 null 			fire: function() {
1160 null 			fired: function() {
1169 null 	Deferred: function( func ) {
1178 null 				state: function() {
1181 null 				always: function() {
1185 null 				then: function( /* fnDone, fnFail, fnProgress */ ) {
1187 null 					return jQuery.Deferred(function( newDefer ) {
1188 null 						jQuery.each( tuples, function( i, tuple ) {
1192 null 							deferred[ tuple[1] ](function() {
1209 null 				promise: function( obj ) {
1219 null 		jQuery.each( tuples, function( i, tuple ) {
1228 null 				list.add(function() {
1237 null 			deferred[ tuple[0] ] = function() {
1257 null 	when: function( subordinate /* , ..., subordinateN */ ) {
1269 null 			updateFunc = function( i, contexts, values ) {
1270 null 				return function( value ) {
1308 null jQuery.support = (function() {
1435 null 		div.attachEvent( "onclick", function() {
1455 null 	jQuery(function() {
1552 internalData function internalData( elem, name, data, pvt /* Internal Use Only */ ){
1646 internalRemoveData function internalRemoveData( elem, name, pvt ) {
1749 null 	hasData: function( elem ) {
1754 null 	data: function( elem, name, data ) {
1758 null 	removeData: function( elem, name ) {
1763 null 	_data: function( elem, name, data ) {
1767 null 	_removeData: function( elem, name ) {
1772 null 	acceptData: function( elem ) {
1786 null 	data: function( key, value ) {
1817 null 			return this.each(function() {
1822 null 		return jQuery.access( this, function( value ) {
1829 null 			this.each(function() {
1835 null 	removeData: function( key ) {
1836 null 		return this.each(function() {
1842 dataAttr function dataAttr( elem, key, data ) {
1874 isEmptyDataObject function isEmptyDataObject( obj ) {
1890 null 	queue: function( elem, type, data ) {
1909 null 	dequeue: function( elem, type ) {
1916 null 			next = function() {
1946 null 	_queueHooks: function( elem, type ) {
1949 null 			empty: jQuery.Callbacks("once memory").add(function() {
1958 null 	queue: function( type, data ) {
1973 null 			this.each(function() {
1984 null 	dequeue: function( type ) {
1985 null 		return this.each(function() {
1991 null 	delay: function( time, type ) {
1995 null 		return this.queue( type, function( next, hooks ) {
1997 null 			hooks.stop = function() {
2002 null 	clearQueue: function( type ) {
2007 null 	promise: function( type, obj ) {
2013 null 			resolve = function() {
2047 null 	attr: function( name, value ) {
2051 null 	removeAttr: function( name ) {
2052 null 		return this.each(function() {
2057 null 	prop: function( name, value ) {
2061 null 	removeProp: function( name ) {
2063 null 		return this.each(function() {
2072 null 	addClass: function( value ) {
2079 null 			return this.each(function( j ) {
2111 null 	removeClass: function( value ) {
2118 null 			return this.each(function( j ) {
2149 null 	toggleClass: function( value, stateVal ) {
2154 null 			return this.each(function( i ) {
2159 null 		return this.each(function() {
2190 null 	hasClass: function( selector ) {
2203 null 	val: function( value ) {
2229 null 		return this.each(function( i ) {
2249 null 				val = jQuery.map(val, function ( value ) {
2267 null 			get: function( elem ) {
2275 null 			get: function( elem ) {
2312 null 			set: function( elem, value ) {
2315 null 				jQuery(elem).find("option").each(function() {
2327 null 	attr: function( elem, name, value ) {
2381 null 	removeAttr: function( elem, value ) {
2413 null 			set: function( elem, value ) {
2443 null 	prop: function( elem, name, value ) {
2480 null 			get: function( elem ) {
2497 null 	get: function( elem, name ) {
2521 null 	set: function( elem, value, name ) {
2541 null 		get: function( elem, name ) {
2550 null 		set: function( elem, value, name ) {
2568 null 		get: function( elem, name ) {
2574 null 		set: function( elem, value, name ) {
2596 null 		set: function( elem, value, name ) {
2603 null 	jQuery.each([ "width", "height" ], function( i, name ) {
2605 null 			set: function( elem, value ) {
2619 null 	jQuery.each([ "href", "src", "width", "height" ], function( i, name ) {
2621 null 			get: function( elem ) {
2629 null 	jQuery.each([ "href", "src" ], function( i, name ) {
2631 null 			get: function( elem ) {
2640 null 		get: function( elem ) {
2646 null 		set: function( elem, value ) {
2656 null 		get: function( elem ) {
2679 null 	jQuery.each([ "radio", "checkbox" ], function() {
2681 null 			get: function( elem ) {
2688 null jQuery.each([ "radio", "checkbox" ], function() {
2690 null 		set: function( elem, value ) {
2703 returnTrue function returnTrue() {
2707 returnFalse function returnFalse() {
2719 null 	add: function( elem, types, handler, data, selector ) {
2747 null 			eventHandle = elemData.handle = function( e ) {
2829 null 	remove: function( elem, types, handler, selector, mappedTypes ) {
2902 null 	trigger: function( event, data, elem, onlyHandlers ) {
3036 null 	dispatch: function( event ) {
3095 null 	handlers: function( event, handlers ) {
3142 null 	fix: function( event ) {
3195 null 		filter: function( event, original ) {
3208 null 		filter: function( event, original ) {
3245 null 			trigger: function() {
3254 null 			trigger: function() {
3269 null 			trigger: function() {
3279 null 			postDispatch: function( event ) {
3289 null 	simulate: function( type, elem, event, bubble ) {
3313 null 	function( elem, type, handle ) {
3318 null 	function( elem, type, handle ) {
3333 null jQuery.Event = function( src, props ) {
3373 null 	preventDefault: function() {
3391 null 	stopPropagation: function() {
3407 null 	stopImmediatePropagation: function() {
3417 null }, function( orig, fix ) {
3422 null 		handle: function( event ) {
3444 null 		setup: function() {
3451 null 			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
3456 null 					jQuery.event.add( form, "submit._submit", function( event ) {
3465 null 		postDispatch: function( event ) {
3475 null 		teardown: function() {
3492 null 		setup: function() {
3499 null 					jQuery.event.add( this, "propertychange._change", function( event ) {
3504 null 					jQuery.event.add( this, "click._change", function( event ) {
3515 null 			jQuery.event.add( this, "beforeactivate._change", function( e ) {
3519 null 					jQuery.event.add( elem, "change._change", function( event ) {
3529 null 		handle: function( event ) {
3538 null 		teardown: function() {
3548 null 	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {
3552 null 			handler = function( event ) {
3557 null 			setup: function() {
3562 null 			teardown: function() {
3573 null 	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
3614 null 			fn = function( event ) {
3622 null 		return this.each( function() {
3626 null 	one: function( types, selector, data, fn ) {
3629 null 	off: function( types, selector, fn ) {
3656 null 		return this.each(function() {
3661 null 	bind: function( types, data, fn ) {
3664 null 	unbind: function( types, fn ) {
3668 null 	delegate: function( selector, types, data, fn ) {
3671 null 	undelegate: function( selector, types, fn ) {
3676 null 	trigger: function( type, data ) {
3677 null 		return this.each(function() {
3681 null 	triggerHandler: function( type, data ) {
3694 null (function( window, undefined ) {
3736 null 	indexOf = arr.indexOf || function( elem ) {
3812 null 	funescape = function( _, escaped ) {
3828 null 	slice = function( i ) {
3842 isNative function isNative( fn ) {
3852 createCache function createCache() {
3856 null 	return (cache = function( key, value ) {
3870 markFunction function markFunction( fn ) {
3879 assert function assert( fn ) {
3892 Sizzle function Sizzle( selector, context, results, seed ) {
4006 null isXML = Sizzle.isXML = function( elem ) {
4018 null setDocument = Sizzle.setDocument = function( node ) {
4034 null 	support.tagNameNoComments = assert(function( div ) {
4040 null 	support.attributes = assert(function( div ) {
4048 null 	support.getByClassName = assert(function( div ) {
4062 null 	support.getByName = assert(function( div ) {
4083 null 	Expr.attrHandle = assert(function( div ) {
4090 null 			"href": function( elem ) {
4093 null 			"type": function( elem ) {
4100 null 		Expr.find["ID"] = function( id, context ) {
4108 null 		Expr.filter["ID"] = function( id ) {
4110 null 			return function( elem ) {
4115 null 		Expr.find["ID"] = function( id, context ) {
4126 null 		Expr.filter["ID"] =  function( id ) {
4128 null 			return function( elem ) {
4137 null 		function( tag, context ) {
4142 null 		function( tag, context ) {
4162 null 	Expr.find["NAME"] = support.getByName && function( tag, context ) {
4169 null 	Expr.find["CLASS"] = support.getByClassName && function( className, context ) {
4188 null 		assert(function( div ) {
4209 null 		assert(function( div ) {
4236 null 		assert(function( div ) {
4255 null 		function( a, b ) {
4264 null 		function( a, b ) {
4277 null 	function( a, b ) {
4300 null 	function( a, b ) {
4360 null Sizzle.matches = function( expr, elements ) {
4364 null Sizzle.matchesSelector = function( elem, expr ) {
4391 null Sizzle.contains = function( context, elem ) {
4399 null Sizzle.attr = function( elem, name ) {
4421 null Sizzle.error = function( msg ) {
4426 null Sizzle.uniqueSort = function( results ) {
4450 siblingCheck function siblingCheck( a, b ) {
4472 createInputPseudo function createInputPseudo( type ) {
4473 null 	return function( elem ) {
4480 createButtonPseudo function createButtonPseudo( type ) {
4481 null 	return function( elem ) {
4488 createPositionalPseudo function createPositionalPseudo( fn ) {
4489 null 	return markFunction(function( argument ) {
4491 null 		return markFunction(function( seed, matches ) {
4510 null getText = Sizzle.getText = function( elem ) {
4560 null 		"ATTR": function( match ) {
4573 null 		"CHILD": function( match ) {
4605 null 		"PSEUDO": function( match ) {
4636 null 		"TAG": function( nodeName ) {
4638 null 				return function() { return true; };
4642 null 			return function( elem ) {
4647 null 		"CLASS": function( className ) {
4652 null 				classCache( className, function( elem ) {
4657 null 		"ATTR": function( name, operator, check ) {
4658 null 			return function( elem ) {
4681 null 		"CHILD": function( type, what, argument, first, last ) {
4689 null 				function( elem ) {
4693 null 				function( elem, context, xml ) {
4770 null 		"PSEUDO": function( pseudo, argument ) {
4790 null 					markFunction(function( seed, matches ) {
4799 null 					function( elem ) {
4810 null 		"not": markFunction(function( selector ) {
4819 null 				markFunction(function( seed, matches, context, xml ) {
4831 null 				function( elem, context, xml ) {
4838 null 		"has": markFunction(function( selector ) {
4839 null 			return function( elem ) {
4844 null 		"contains": markFunction(function( text ) {
4845 null 			return function( elem ) {
4857 null 		"lang": markFunction( function( lang ) {
4863 null 			return function( elem ) {
4879 null 		"target": function( elem ) {
4884 null 		"root": function( elem ) {
4888 null 		"focus": function( elem ) {
4893 null 		"enabled": function( elem ) {
4897 null 		"disabled": function( elem ) {
4901 null 		"checked": function( elem ) {
4908 null 		"selected": function( elem ) {
4919 null 		"empty": function( elem ) {
4933 null 		"parent": function( elem ) {
4938 null 		"header": function( elem ) {
4942 null 		"input": function( elem ) {
4946 null 		"button": function( elem ) {
4951 null 		"text": function( elem ) {
4961 null 		"first": createPositionalPseudo(function() {
4965 null 		"last": createPositionalPseudo(function( matchIndexes, length ) {
4969 null 		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
4973 null 		"even": createPositionalPseudo(function( matchIndexes, length ) {
4981 null 		"odd": createPositionalPseudo(function( matchIndexes, length ) {
4989 null 		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
4997 null 		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
5015 tokenize function tokenize( selector, parseOnly ) {
5082 toSelector function toSelector( tokens ) {
5092 addCombinator function addCombinator( matcher, combinator, base ) {
5099 null 		function( elem, context, xml ) {
5108 null 		function( elem, context, xml ) {
5142 elementMatcher function elementMatcher( matchers ) {
5144 null 		function( elem, context, xml ) {
5156 condense function condense( unmatched, map, filter, context, xml ) {
5177 setMatcher function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
5184 null 	return markFunction(function( seed, results, context, xml ) {
5270 matcherFromTokens function matcherFromTokens( tokens ) {
5278 null 		matchContext = addCombinator( function( elem ) {
5281 null 		matchAnyContext = addCombinator( function( elem ) {
5284 null 		matchers = [ function( elem, context, xml ) {
5322 matcherFromGroupMatchers function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
5327 null 		superMatcher = function( seed, context, xml, results, expandContext ) {
5423 null compile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {
5450 multipleContexts function multipleContexts( selector, contexts, results ) {
5459 select function select( selector, context, results, seed ) {
5528 setFilters function setFilters() {}
5560 null 	find: function( selector ) {
5566 null 			return this.pushStack( jQuery( selector ).filter(function() {
5586 null 	has: function( target ) {
5591 null 		return this.filter(function() {
5600 null 	not: function( selector ) {
5604 null 	filter: function( selector ) {
5608 null 	is: function( selector ) {
5619 null 	closest: function( selectors, context ) {
5645 null 	index: function( elem ) {
5663 null 	add: function( selector, context ) {
5672 null 	addBack: function( selector ) {
5681 sibling function sibling( cur, dir ) {
5690 null 	parent: function( elem ) {
5694 null 	parents: function( elem ) {
5697 null 	parentsUntil: function( elem, i, until ) {
5700 null 	next: function( elem ) {
5703 null 	prev: function( elem ) {
5706 null 	nextAll: function( elem ) {
5709 null 	prevAll: function( elem ) {
5712 null 	nextUntil: function( elem, i, until ) {
5715 null 	prevUntil: function( elem, i, until ) {
5718 null 	siblings: function( elem ) {
5721 null 	children: function( elem ) {
5724 null 	contents: function( elem ) {
5729 null }, function( name, fn ) {
5730 null 	jQuery.fn[ name ] = function( until, selector ) {
5752 null 	filter: function( expr, elems, not ) {
5762 null 	dir: function( elem, dir, until ) {
5775 null 	sibling: function( n, elem ) {
5789 winnow function winnow( elements, qualifier, keep ) {
5796 null 		return jQuery.grep(elements, function( elem, i ) {
5802 null 		return jQuery.grep(elements, function( elem ) {
5807 null 		var filtered = jQuery.grep(elements, function( elem ) {
5818 null 	return jQuery.grep(elements, function( elem ) {
5822 createSafeFragment function createSafeFragment( document ) {
5876 null 	text: function( value ) {
5877 null 		return jQuery.access( this, function( value ) {
5884 null 	wrapAll: function( html ) {
5886 null 			return this.each(function(i) {
5899 null 			wrap.map(function() {
5913 null 	wrapInner: function( html ) {
5915 null 			return this.each(function(i) {
5920 null 		return this.each(function() {
5933 null 	wrap: function( html ) {
5936 null 		return this.each(function(i) {
5941 null 	unwrap: function() {
5942 null 		return this.parent().each(function() {
5949 null 	append: function() {
5950 null 		return this.domManip(arguments, true, function( elem ) {
5957 null 	prepend: function() {
5958 null 		return this.domManip(arguments, true, function( elem ) {
5965 null 	before: function() {
5966 null 		return this.domManip( arguments, false, function( elem ) {
5973 null 	after: function() {
5974 null 		return this.domManip( arguments, false, function( elem ) {
5982 null 	remove: function( selector, keepData ) {
6004 null 	empty: function() {
6029 null 	clone: function( dataAndEvents, deepDataAndEvents ) {
6033 null 		return this.map( function () {
6038 null 	html: function( value ) {
6039 null 		return jQuery.access( this, function( value ) {
6080 null 	replaceWith: function( value ) {
6089 null 		return this.domManip( [ value ], true, function( elem ) {
6100 null 	detach: function( selector ) {
6104 null 	domManip: function( args, table, callback ) {
6120 null 			return this.each(function( index ) {
6203 findOrAppend function findOrAppend( elem, tag ) {
6208 disableScript function disableScript( elem ) {
6213 restoreScript function restoreScript( elem ) {
6224 setGlobalEval function setGlobalEval( elems, refElements ) {
6232 cloneCopyEvent function cloneCopyEvent( src, dest ) {
6260 fixCloneNodeIssues function fixCloneNodeIssues( src, dest ) {
6333 null }, function( name, original ) {
6334 null 	jQuery.fn[ name ] = function( selector ) {
6353 getAll function getAll( context, tag ) {
6376 fixDefaultChecked function fixDefaultChecked( elem ) {
6383 null 	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
6438 null 	buildFragment: function( elems, context, scripts, selection ) {
6565 null 	cleanData: function( elems, /* internal */ acceptData ) {
6641 vendorPropName function vendorPropName( style, name ) {
6663 isHidden function isHidden( elem, el ) {
6670 showHide function showHide( elements, show ) {
6725 null 	css: function( name, value ) {
6726 null 		return jQuery.access( this, function( elem, name, value ) {
6747 null 	show: function() {
6750 null 	hide: function() {
6753 null 	toggle: function( state ) {
6756 null 		return this.each(function() {
6771 null 			get: function( elem, computed ) {
6802 null 	style: function( elem, name, value, extra ) {
6867 null 	css: function( elem, name, extra, styles ) {
6902 null 	swap: function( elem, options, callback, args ) {
6926 null 	getStyles = function( elem ) {
6930 null 	curCSS = function( elem, name, _computed ) {
6969 null 	getStyles = function( elem ) {
6973 null 	curCSS = function( elem, name, _computed ) {
7017 setPositiveNumber function setPositiveNumber( elem, value, subtract ) {
7025 augmentWidthOrHeight function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
7064 getWidthOrHeight function getWidthOrHeight( elem, name, extra ) {
7108 css_defaultDisplay function css_defaultDisplay( nodeName ) {
7140 actualDisplay function actualDisplay( name, doc ) {
7147 null jQuery.each([ "height", "width" ], function( i, name ) {
7149 null 		get: function( elem, computed, extra ) {
7154 null 					jQuery.swap( elem, cssShow, function() {
7161 null 		set: function( elem, value, extra ) {
7178 null 		get: function( elem, computed ) {
7185 null 		set: function( elem, value ) {
7222 null jQuery(function() {
7225 null 			get: function( elem, computed ) {
7240 null 		jQuery.each( [ "top", "left" ], function( i, prop ) {
7242 null 				get: function( elem, computed ) {
7258 null 	jQuery.expr.filters.hidden = function( elem ) {
7265 null 	jQuery.expr.filters.visible = function( elem ) {
7275 null }, function( prefix, suffix ) {
7277 null 		expand: function( value ) {
7304 null 	serialize: function() {
7307 null 	serializeArray: function() {
7308 null 		return this.map(function(){
7313 null 		.filter(function(){
7320 null 		.map(function( i, elem ){
7326 null 					jQuery.map( val, function( val ){
7336 null jQuery.param = function( a, traditional ) {
7339 null 		add = function( key, value ) {
7353 null 		jQuery.each( a, function() {
7369 buildParams function buildParams( prefix, obj, traditional, add ) {
7374 null 		jQuery.each( obj, function( i, v ) {
7398 null 	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {
7401 null 	jQuery.fn[ name ] = function( data, fn ) {
7408 null jQuery.fn.hover = function( fnOver, fnOut ) {
7467 addToPrefiltersOrTransports function addToPrefiltersOrTransports( structure ) {
7470 null 	return function( dataTypeExpression, func ) {
7499 inspectPrefiltersOrTransports function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {
7504 inspect 	function inspect( dataType ) {
7507 null 		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
7526 ajaxExtend function ajaxExtend( target, src ) {
7542 null jQuery.fn.load = function( url, params, callback ) {
7577 null 		}).done(function( responseText ) {
7591 null 		}).complete( callback && function( jqXHR, status ) {
7600 null jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ){
7601 null 	jQuery.fn[ type ] = function( fn ){
7606 null jQuery.each( [ "get", "post" ], function( i, method ) {
7607 null 	jQuery[ method ] = function( url, data, callback, type ) {
7703 null 	ajaxSetup: function( target, settings ) {
7717 null 	ajax: function( url, options ) {
7770 null 				getResponseHeader: function( key ) {
7785 null 				getAllResponseHeaders: function() {
7790 null 				setRequestHeader: function( name, value ) {
7800 null 				overrideMimeType: function( type ) {
7808 null 				statusCode: function( map ) {
7825 null 				abort: function( statusText ) {
7972 null 				timeoutTimer = setTimeout(function() {
7992 done 		function done( status, nativeStatusText, responses, headers ) {
8104 null 	getScript: function( url, callback ) {
8108 null 	getJSON: function( url, data, callback ) {
8118 ajaxHandleResponses function ajaxHandleResponses( s, jqXHR, responses ) {
8179 ajaxConvert function ajaxConvert( s, response ) {
8271 null 		"text script": function( text ) {
8279 null jQuery.ajaxPrefilter( "script", function( s ) {
8290 null jQuery.ajaxTransport( "script", function(s) {
8300 null 			send: function( _, callback ) {
8313 null 				script.onload = script.onreadystatechange = function( _, isAbort ) {
8340 null 			abort: function() {
8354 null 	jsonpCallback: function() {
8362 null jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {
8386 null 		s.converters["script json"] = function() {
8398 null 		window[ callbackName ] = function() {
8403 null 		jqXHR.always(function() {
8431 null 	xhrOnUnloadAbort = window.ActiveXObject && function() {
8440 createStandardXHR function createStandardXHR() {
8446 createActiveXHR function createActiveXHR() {
8461 null 	function() {
8475 null 	jQuery.ajaxTransport(function( s ) {
8482 null 				send: function( headers, complete ) {
8530 null 					callback = function( _, isAbort ) {
8626 null 				abort: function() {
8641 null 		"*": [function( prop, value ) {
8685 createFxNow function createFxNow() {
8686 null 	setTimeout(function() {
8692 createTweens function createTweens( animation, props ) {
8693 null 	jQuery.each( props, function( prop, value ) {
8707 Animation function Animation( elem, properties, options ) {
8712 null 		deferred = jQuery.Deferred().always( function() {
8716 null 		tick = function() {
8750 null 			createTween: function( prop, end ) {
8756 null 			stop: function( gotoEnd ) {
8811 propFilter function propFilter( props, specialEasing ) {
8850 null 	tweener: function( props, callback ) {
8869 null 	prefilter: function( callback, prepend ) {
8878 defaultPrefilter function defaultPrefilter( elem, props, opts ) {
8895 null 			hooks.empty.fire = function() {
8903 null 		anim.always(function() {
8906 null 			anim.always(function() {
8942 null 			anim.always(function() {
8978 null 			anim.done(function() {
8982 null 		anim.done(function() {
9005 Tween function Tween( elem, options, prop, end, easing ) {
9012 null 	init: function( elem, options, prop, end, easing, unit ) {
9021 null 	cur: function() {
9028 null 	run: function( percent ) {
9058 null 		get: function( tween ) {
9074 null 		set: function( tween ) {
9092 null 	set: function( tween ) {
9099 null jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
9101 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9109 null 	fadeTo: function( speed, to, easing, callback ) {
9117 null 	animate: function( prop, speed, easing, callback ) {
9120 null 			doAnimation = function() {
9123 null 				doAnimation.finish = function() {
9137 null 	stop: function( type, clearQueue, gotoEnd ) {
9138 null 		var stopQueue = function( hooks ) {
9153 null 		return this.each(function() {
9187 null 	finish: function( type ) {
9191 null 		return this.each(function() {
9231 genFx function genFx( type, includeWidth ) {
9259 null }, function( name, props ) {
9260 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9265 null jQuery.speed = function( speed, easing, fn ) {
9284 null 	opt.complete = function() {
9298 null 	linear: function( p ) {
9301 null 	swing: function( p ) {
9308 null jQuery.fx.tick = function() {
9329 null jQuery.fx.timer = function( timer ) {
9337 null jQuery.fx.start = function() {
9343 null jQuery.fx.stop = function() {
9359 null 	jQuery.expr.filters.animated = function( elem ) {
9360 null 		return jQuery.grep(jQuery.timers, function( fn ) {
9365 null jQuery.fn.offset = function( options ) {
9369 null 			this.each(function( i ) {
9404 null 	setOffset: function( elem, options, i ) {
9451 null 	position: function() {
9488 null 	offsetParent: function() {
9489 null 		return this.map(function() {
9501 null jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
9504 null 	jQuery.fn[ method ] = function( val ) {
9505 null 		return jQuery.access( this, function( elem, method, val ) {
9527 getWindow function getWindow( elem ) {
9535 null jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
9536 null 	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
9538 null 		jQuery.fn[ funcName ] = function( margin, value ) {
9542 null 			return jQuery.access( this, function( elem, type, value ) {
9595 null 	define( "jquery", [], function () { return jQuery; } );
14 null (function( window, undefined ) {
60 null 	jQuery = function( selector, context ) {
94 null 	fcamelCase = function( all, letter ) {
99 null 	completed = function( event ) {
108 null 	detach = function() {
124 null 	init: function( selector, context, rootjQuery ) {
232 null 	size: function() {
236 null 	toArray: function() {
242 null 	get: function( num ) {
254 null 	pushStack: function( elems ) {
270 null 	each: function( callback, args ) {
274 null 	ready: function( fn ) {
281 null 	slice: function() {
285 null 	first: function() {
289 null 	last: function() {
293 null 	eq: function( i ) {
299 null 	map: function( callback ) {
300 null 		return this.pushStack( jQuery.map(this, function( elem, i ) {
305 null 	end: function() {
319 null jQuery.extend = jQuery.fn.extend = function() {
384 null 	noConflict: function( deep ) {
404 null 	holdReady: function( hold ) {
413 null 	ready: function( wait ) {
445 null 	isFunction: function( obj ) {
449 null 	isArray: Array.isArray || function( obj ) {
453 null 	isWindow: function( obj ) {
457 null 	isNumeric: function( obj ) {
461 null 	type: function( obj ) {
470 null 	isPlainObject: function( obj ) {
499 null 	isEmptyObject: function( obj ) {
507 null 	error: function( msg ) {
514 null 	parseHTML: function( data, context, keepScripts ) {
539 null 	parseJSON: function( data ) {
570 null 	parseXML: function( data ) {
593 null 	noop: function() {},
598 null 	globalEval: function( data ) {
603 null 			( window.execScript || function( data ) {
611 null 	camelCase: function( string ) {
615 null 	nodeName: function( elem, name ) {
620 null 	each: function( obj, callback, args ) {
671 null 		function( text ) {
678 null 		function( text ) {
685 null 	makeArray: function( arr, results ) {
702 null 	inArray: function( elem, arr, i ) {
724 null 	merge: function( first, second ) {
744 null 	grep: function( elems, callback, inv ) {
764 null 	map: function( elems, callback, arg ) {
801 null 	proxy: function( fn, context ) {
818 null 		proxy = function() {
830 null 	access: function( elems, fn, key, value, chainable, emptyGet, raw ) {
859 null 					fn = function( elem, key, value ) {
881 null 	now: function() {
886 null jQuery.ready.promise = function( obj ) {
923 doScrollCheck 				(function doScrollCheck() {
948 null jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
952 isArraylike function isArraylike( obj ) {
975 createOptions function createOptions( options ) {
977 null 	jQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) {
1005 null jQuery.Callbacks = function( options ) {
1030 null 		fire = function( data ) {
1059 null 			add: function() {
1063 add 					(function add( args ) {
1064 null 						jQuery.each( args, function( _, arg ) {
1090 null 			remove: function() {
1092 null 					jQuery.each( arguments, function( _, arg ) {
1112 null 			has: function( fn ) {
1116 null 			empty: function() {
1121 null 			disable: function() {
1126 null 			disabled: function() {
1130 null 			lock: function() {
1138 null 			locked: function() {
1142 null 			fireWith: function( context, args ) {
1155 null 			fire: function() {
1160 null 			fired: function() {
1169 null 	Deferred: function( func ) {
1178 null 				state: function() {
1181 null 				always: function() {
1185 null 				then: function( /* fnDone, fnFail, fnProgress */ ) {
1187 null 					return jQuery.Deferred(function( newDefer ) {
1188 null 						jQuery.each( tuples, function( i, tuple ) {
1192 null 							deferred[ tuple[1] ](function() {
1209 null 				promise: function( obj ) {
1219 null 		jQuery.each( tuples, function( i, tuple ) {
1228 null 				list.add(function() {
1237 null 			deferred[ tuple[0] ] = function() {
1257 null 	when: function( subordinate /* , ..., subordinateN */ ) {
1269 null 			updateFunc = function( i, contexts, values ) {
1270 null 				return function( value ) {
1308 null jQuery.support = (function() {
1435 null 		div.attachEvent( "onclick", function() {
1455 null 	jQuery(function() {
1552 internalData function internalData( elem, name, data, pvt /* Internal Use Only */ ){
1646 internalRemoveData function internalRemoveData( elem, name, pvt ) {
1749 null 	hasData: function( elem ) {
1754 null 	data: function( elem, name, data ) {
1758 null 	removeData: function( elem, name ) {
1763 null 	_data: function( elem, name, data ) {
1767 null 	_removeData: function( elem, name ) {
1772 null 	acceptData: function( elem ) {
1786 null 	data: function( key, value ) {
1817 null 			return this.each(function() {
1822 null 		return jQuery.access( this, function( value ) {
1829 null 			this.each(function() {
1835 null 	removeData: function( key ) {
1836 null 		return this.each(function() {
1842 dataAttr function dataAttr( elem, key, data ) {
1874 isEmptyDataObject function isEmptyDataObject( obj ) {
1890 null 	queue: function( elem, type, data ) {
1909 null 	dequeue: function( elem, type ) {
1916 null 			next = function() {
1946 null 	_queueHooks: function( elem, type ) {
1949 null 			empty: jQuery.Callbacks("once memory").add(function() {
1958 null 	queue: function( type, data ) {
1973 null 			this.each(function() {
1984 null 	dequeue: function( type ) {
1985 null 		return this.each(function() {
1991 null 	delay: function( time, type ) {
1995 null 		return this.queue( type, function( next, hooks ) {
1997 null 			hooks.stop = function() {
2002 null 	clearQueue: function( type ) {
2007 null 	promise: function( type, obj ) {
2013 null 			resolve = function() {
2047 null 	attr: function( name, value ) {
2051 null 	removeAttr: function( name ) {
2052 null 		return this.each(function() {
2057 null 	prop: function( name, value ) {
2061 null 	removeProp: function( name ) {
2063 null 		return this.each(function() {
2072 null 	addClass: function( value ) {
2079 null 			return this.each(function( j ) {
2111 null 	removeClass: function( value ) {
2118 null 			return this.each(function( j ) {
2149 null 	toggleClass: function( value, stateVal ) {
2154 null 			return this.each(function( i ) {
2159 null 		return this.each(function() {
2190 null 	hasClass: function( selector ) {
2203 null 	val: function( value ) {
2229 null 		return this.each(function( i ) {
2249 null 				val = jQuery.map(val, function ( value ) {
2267 null 			get: function( elem ) {
2275 null 			get: function( elem ) {
2312 null 			set: function( elem, value ) {
2315 null 				jQuery(elem).find("option").each(function() {
2327 null 	attr: function( elem, name, value ) {
2381 null 	removeAttr: function( elem, value ) {
2413 null 			set: function( elem, value ) {
2443 null 	prop: function( elem, name, value ) {
2480 null 			get: function( elem ) {
2497 null 	get: function( elem, name ) {
2521 null 	set: function( elem, value, name ) {
2541 null 		get: function( elem, name ) {
2550 null 		set: function( elem, value, name ) {
2568 null 		get: function( elem, name ) {
2574 null 		set: function( elem, value, name ) {
2596 null 		set: function( elem, value, name ) {
2603 null 	jQuery.each([ "width", "height" ], function( i, name ) {
2605 null 			set: function( elem, value ) {
2619 null 	jQuery.each([ "href", "src", "width", "height" ], function( i, name ) {
2621 null 			get: function( elem ) {
2629 null 	jQuery.each([ "href", "src" ], function( i, name ) {
2631 null 			get: function( elem ) {
2640 null 		get: function( elem ) {
2646 null 		set: function( elem, value ) {
2656 null 		get: function( elem ) {
2679 null 	jQuery.each([ "radio", "checkbox" ], function() {
2681 null 			get: function( elem ) {
2688 null jQuery.each([ "radio", "checkbox" ], function() {
2690 null 		set: function( elem, value ) {
2703 returnTrue function returnTrue() {
2707 returnFalse function returnFalse() {
2719 null 	add: function( elem, types, handler, data, selector ) {
2747 null 			eventHandle = elemData.handle = function( e ) {
2829 null 	remove: function( elem, types, handler, selector, mappedTypes ) {
2902 null 	trigger: function( event, data, elem, onlyHandlers ) {
3036 null 	dispatch: function( event ) {
3095 null 	handlers: function( event, handlers ) {
3142 null 	fix: function( event ) {
3195 null 		filter: function( event, original ) {
3208 null 		filter: function( event, original ) {
3245 null 			trigger: function() {
3254 null 			trigger: function() {
3269 null 			trigger: function() {
3279 null 			postDispatch: function( event ) {
3289 null 	simulate: function( type, elem, event, bubble ) {
3313 null 	function( elem, type, handle ) {
3318 null 	function( elem, type, handle ) {
3333 null jQuery.Event = function( src, props ) {
3373 null 	preventDefault: function() {
3391 null 	stopPropagation: function() {
3407 null 	stopImmediatePropagation: function() {
3417 null }, function( orig, fix ) {
3422 null 		handle: function( event ) {
3444 null 		setup: function() {
3451 null 			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
3456 null 					jQuery.event.add( form, "submit._submit", function( event ) {
3465 null 		postDispatch: function( event ) {
3475 null 		teardown: function() {
3492 null 		setup: function() {
3499 null 					jQuery.event.add( this, "propertychange._change", function( event ) {
3504 null 					jQuery.event.add( this, "click._change", function( event ) {
3515 null 			jQuery.event.add( this, "beforeactivate._change", function( e ) {
3519 null 					jQuery.event.add( elem, "change._change", function( event ) {
3529 null 		handle: function( event ) {
3538 null 		teardown: function() {
3548 null 	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {
3552 null 			handler = function( event ) {
3557 null 			setup: function() {
3562 null 			teardown: function() {
3573 null 	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
3614 null 			fn = function( event ) {
3622 null 		return this.each( function() {
3626 null 	one: function( types, selector, data, fn ) {
3629 null 	off: function( types, selector, fn ) {
3656 null 		return this.each(function() {
3661 null 	bind: function( types, data, fn ) {
3664 null 	unbind: function( types, fn ) {
3668 null 	delegate: function( selector, types, data, fn ) {
3671 null 	undelegate: function( selector, types, fn ) {
3676 null 	trigger: function( type, data ) {
3677 null 		return this.each(function() {
3681 null 	triggerHandler: function( type, data ) {
3694 null (function( window, undefined ) {
3736 null 	indexOf = arr.indexOf || function( elem ) {
3812 null 	funescape = function( _, escaped ) {
3828 null 	slice = function( i ) {
3842 isNative function isNative( fn ) {
3852 createCache function createCache() {
3856 null 	return (cache = function( key, value ) {
3870 markFunction function markFunction( fn ) {
3879 assert function assert( fn ) {
3892 Sizzle function Sizzle( selector, context, results, seed ) {
4006 null isXML = Sizzle.isXML = function( elem ) {
4018 null setDocument = Sizzle.setDocument = function( node ) {
4034 null 	support.tagNameNoComments = assert(function( div ) {
4040 null 	support.attributes = assert(function( div ) {
4048 null 	support.getByClassName = assert(function( div ) {
4062 null 	support.getByName = assert(function( div ) {
4083 null 	Expr.attrHandle = assert(function( div ) {
4090 null 			"href": function( elem ) {
4093 null 			"type": function( elem ) {
4100 null 		Expr.find["ID"] = function( id, context ) {
4108 null 		Expr.filter["ID"] = function( id ) {
4110 null 			return function( elem ) {
4115 null 		Expr.find["ID"] = function( id, context ) {
4126 null 		Expr.filter["ID"] =  function( id ) {
4128 null 			return function( elem ) {
4137 null 		function( tag, context ) {
4142 null 		function( tag, context ) {
4162 null 	Expr.find["NAME"] = support.getByName && function( tag, context ) {
4169 null 	Expr.find["CLASS"] = support.getByClassName && function( className, context ) {
4188 null 		assert(function( div ) {
4209 null 		assert(function( div ) {
4236 null 		assert(function( div ) {
4255 null 		function( a, b ) {
4264 null 		function( a, b ) {
4277 null 	function( a, b ) {
4300 null 	function( a, b ) {
4360 null Sizzle.matches = function( expr, elements ) {
4364 null Sizzle.matchesSelector = function( elem, expr ) {
4391 null Sizzle.contains = function( context, elem ) {
4399 null Sizzle.attr = function( elem, name ) {
4421 null Sizzle.error = function( msg ) {
4426 null Sizzle.uniqueSort = function( results ) {
4450 siblingCheck function siblingCheck( a, b ) {
4472 createInputPseudo function createInputPseudo( type ) {
4473 null 	return function( elem ) {
4480 createButtonPseudo function createButtonPseudo( type ) {
4481 null 	return function( elem ) {
4488 createPositionalPseudo function createPositionalPseudo( fn ) {
4489 null 	return markFunction(function( argument ) {
4491 null 		return markFunction(function( seed, matches ) {
4510 null getText = Sizzle.getText = function( elem ) {
4560 null 		"ATTR": function( match ) {
4573 null 		"CHILD": function( match ) {
4605 null 		"PSEUDO": function( match ) {
4636 null 		"TAG": function( nodeName ) {
4638 null 				return function() { return true; };
4642 null 			return function( elem ) {
4647 null 		"CLASS": function( className ) {
4652 null 				classCache( className, function( elem ) {
4657 null 		"ATTR": function( name, operator, check ) {
4658 null 			return function( elem ) {
4681 null 		"CHILD": function( type, what, argument, first, last ) {
4689 null 				function( elem ) {
4693 null 				function( elem, context, xml ) {
4770 null 		"PSEUDO": function( pseudo, argument ) {
4790 null 					markFunction(function( seed, matches ) {
4799 null 					function( elem ) {
4810 null 		"not": markFunction(function( selector ) {
4819 null 				markFunction(function( seed, matches, context, xml ) {
4831 null 				function( elem, context, xml ) {
4838 null 		"has": markFunction(function( selector ) {
4839 null 			return function( elem ) {
4844 null 		"contains": markFunction(function( text ) {
4845 null 			return function( elem ) {
4857 null 		"lang": markFunction( function( lang ) {
4863 null 			return function( elem ) {
4879 null 		"target": function( elem ) {
4884 null 		"root": function( elem ) {
4888 null 		"focus": function( elem ) {
4893 null 		"enabled": function( elem ) {
4897 null 		"disabled": function( elem ) {
4901 null 		"checked": function( elem ) {
4908 null 		"selected": function( elem ) {
4919 null 		"empty": function( elem ) {
4933 null 		"parent": function( elem ) {
4938 null 		"header": function( elem ) {
4942 null 		"input": function( elem ) {
4946 null 		"button": function( elem ) {
4951 null 		"text": function( elem ) {
4961 null 		"first": createPositionalPseudo(function() {
4965 null 		"last": createPositionalPseudo(function( matchIndexes, length ) {
4969 null 		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
4973 null 		"even": createPositionalPseudo(function( matchIndexes, length ) {
4981 null 		"odd": createPositionalPseudo(function( matchIndexes, length ) {
4989 null 		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
4997 null 		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
5015 tokenize function tokenize( selector, parseOnly ) {
5082 toSelector function toSelector( tokens ) {
5092 addCombinator function addCombinator( matcher, combinator, base ) {
5099 null 		function( elem, context, xml ) {
5108 null 		function( elem, context, xml ) {
5142 elementMatcher function elementMatcher( matchers ) {
5144 null 		function( elem, context, xml ) {
5156 condense function condense( unmatched, map, filter, context, xml ) {
5177 setMatcher function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
5184 null 	return markFunction(function( seed, results, context, xml ) {
5270 matcherFromTokens function matcherFromTokens( tokens ) {
5278 null 		matchContext = addCombinator( function( elem ) {
5281 null 		matchAnyContext = addCombinator( function( elem ) {
5284 null 		matchers = [ function( elem, context, xml ) {
5322 matcherFromGroupMatchers function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
5327 null 		superMatcher = function( seed, context, xml, results, expandContext ) {
5423 null compile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {
5450 multipleContexts function multipleContexts( selector, contexts, results ) {
5459 select function select( selector, context, results, seed ) {
5528 setFilters function setFilters() {}
5560 null 	find: function( selector ) {
5566 null 			return this.pushStack( jQuery( selector ).filter(function() {
5586 null 	has: function( target ) {
5591 null 		return this.filter(function() {
5600 null 	not: function( selector ) {
5604 null 	filter: function( selector ) {
5608 null 	is: function( selector ) {
5619 null 	closest: function( selectors, context ) {
5645 null 	index: function( elem ) {
5663 null 	add: function( selector, context ) {
5672 null 	addBack: function( selector ) {
5681 sibling function sibling( cur, dir ) {
5690 null 	parent: function( elem ) {
5694 null 	parents: function( elem ) {
5697 null 	parentsUntil: function( elem, i, until ) {
5700 null 	next: function( elem ) {
5703 null 	prev: function( elem ) {
5706 null 	nextAll: function( elem ) {
5709 null 	prevAll: function( elem ) {
5712 null 	nextUntil: function( elem, i, until ) {
5715 null 	prevUntil: function( elem, i, until ) {
5718 null 	siblings: function( elem ) {
5721 null 	children: function( elem ) {
5724 null 	contents: function( elem ) {
5729 null }, function( name, fn ) {
5730 null 	jQuery.fn[ name ] = function( until, selector ) {
5752 null 	filter: function( expr, elems, not ) {
5762 null 	dir: function( elem, dir, until ) {
5775 null 	sibling: function( n, elem ) {
5789 winnow function winnow( elements, qualifier, keep ) {
5796 null 		return jQuery.grep(elements, function( elem, i ) {
5802 null 		return jQuery.grep(elements, function( elem ) {
5807 null 		var filtered = jQuery.grep(elements, function( elem ) {
5818 null 	return jQuery.grep(elements, function( elem ) {
5822 createSafeFragment function createSafeFragment( document ) {
5876 null 	text: function( value ) {
5877 null 		return jQuery.access( this, function( value ) {
5884 null 	wrapAll: function( html ) {
5886 null 			return this.each(function(i) {
5899 null 			wrap.map(function() {
5913 null 	wrapInner: function( html ) {
5915 null 			return this.each(function(i) {
5920 null 		return this.each(function() {
5933 null 	wrap: function( html ) {
5936 null 		return this.each(function(i) {
5941 null 	unwrap: function() {
5942 null 		return this.parent().each(function() {
5949 null 	append: function() {
5950 null 		return this.domManip(arguments, true, function( elem ) {
5957 null 	prepend: function() {
5958 null 		return this.domManip(arguments, true, function( elem ) {
5965 null 	before: function() {
5966 null 		return this.domManip( arguments, false, function( elem ) {
5973 null 	after: function() {
5974 null 		return this.domManip( arguments, false, function( elem ) {
5982 null 	remove: function( selector, keepData ) {
6004 null 	empty: function() {
6029 null 	clone: function( dataAndEvents, deepDataAndEvents ) {
6033 null 		return this.map( function () {
6038 null 	html: function( value ) {
6039 null 		return jQuery.access( this, function( value ) {
6080 null 	replaceWith: function( value ) {
6089 null 		return this.domManip( [ value ], true, function( elem ) {
6100 null 	detach: function( selector ) {
6104 null 	domManip: function( args, table, callback ) {
6120 null 			return this.each(function( index ) {
6203 findOrAppend function findOrAppend( elem, tag ) {
6208 disableScript function disableScript( elem ) {
6213 restoreScript function restoreScript( elem ) {
6224 setGlobalEval function setGlobalEval( elems, refElements ) {
6232 cloneCopyEvent function cloneCopyEvent( src, dest ) {
6260 fixCloneNodeIssues function fixCloneNodeIssues( src, dest ) {
6333 null }, function( name, original ) {
6334 null 	jQuery.fn[ name ] = function( selector ) {
6353 getAll function getAll( context, tag ) {
6376 fixDefaultChecked function fixDefaultChecked( elem ) {
6383 null 	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
6438 null 	buildFragment: function( elems, context, scripts, selection ) {
6565 null 	cleanData: function( elems, /* internal */ acceptData ) {
6641 vendorPropName function vendorPropName( style, name ) {
6663 isHidden function isHidden( elem, el ) {
6670 showHide function showHide( elements, show ) {
6725 null 	css: function( name, value ) {
6726 null 		return jQuery.access( this, function( elem, name, value ) {
6747 null 	show: function() {
6750 null 	hide: function() {
6753 null 	toggle: function( state ) {
6756 null 		return this.each(function() {
6771 null 			get: function( elem, computed ) {
6802 null 	style: function( elem, name, value, extra ) {
6867 null 	css: function( elem, name, extra, styles ) {
6902 null 	swap: function( elem, options, callback, args ) {
6926 null 	getStyles = function( elem ) {
6930 null 	curCSS = function( elem, name, _computed ) {
6969 null 	getStyles = function( elem ) {
6973 null 	curCSS = function( elem, name, _computed ) {
7017 setPositiveNumber function setPositiveNumber( elem, value, subtract ) {
7025 augmentWidthOrHeight function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
7064 getWidthOrHeight function getWidthOrHeight( elem, name, extra ) {
7108 css_defaultDisplay function css_defaultDisplay( nodeName ) {
7140 actualDisplay function actualDisplay( name, doc ) {
7147 null jQuery.each([ "height", "width" ], function( i, name ) {
7149 null 		get: function( elem, computed, extra ) {
7154 null 					jQuery.swap( elem, cssShow, function() {
7161 null 		set: function( elem, value, extra ) {
7178 null 		get: function( elem, computed ) {
7185 null 		set: function( elem, value ) {
7222 null jQuery(function() {
7225 null 			get: function( elem, computed ) {
7240 null 		jQuery.each( [ "top", "left" ], function( i, prop ) {
7242 null 				get: function( elem, computed ) {
7258 null 	jQuery.expr.filters.hidden = function( elem ) {
7265 null 	jQuery.expr.filters.visible = function( elem ) {
7275 null }, function( prefix, suffix ) {
7277 null 		expand: function( value ) {
7304 null 	serialize: function() {
7307 null 	serializeArray: function() {
7308 null 		return this.map(function(){
7313 null 		.filter(function(){
7320 null 		.map(function( i, elem ){
7326 null 					jQuery.map( val, function( val ){
7336 null jQuery.param = function( a, traditional ) {
7339 null 		add = function( key, value ) {
7353 null 		jQuery.each( a, function() {
7369 buildParams function buildParams( prefix, obj, traditional, add ) {
7374 null 		jQuery.each( obj, function( i, v ) {
7398 null 	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {
7401 null 	jQuery.fn[ name ] = function( data, fn ) {
7408 null jQuery.fn.hover = function( fnOver, fnOut ) {
7467 addToPrefiltersOrTransports function addToPrefiltersOrTransports( structure ) {
7470 null 	return function( dataTypeExpression, func ) {
7499 inspectPrefiltersOrTransports function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {
7504 inspect 	function inspect( dataType ) {
7507 null 		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
7526 ajaxExtend function ajaxExtend( target, src ) {
7542 null jQuery.fn.load = function( url, params, callback ) {
7577 null 		}).done(function( responseText ) {
7591 null 		}).complete( callback && function( jqXHR, status ) {
7600 null jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ){
7601 null 	jQuery.fn[ type ] = function( fn ){
7606 null jQuery.each( [ "get", "post" ], function( i, method ) {
7607 null 	jQuery[ method ] = function( url, data, callback, type ) {
7703 null 	ajaxSetup: function( target, settings ) {
7717 null 	ajax: function( url, options ) {
7770 null 				getResponseHeader: function( key ) {
7785 null 				getAllResponseHeaders: function() {
7790 null 				setRequestHeader: function( name, value ) {
7800 null 				overrideMimeType: function( type ) {
7808 null 				statusCode: function( map ) {
7825 null 				abort: function( statusText ) {
7972 null 				timeoutTimer = setTimeout(function() {
7992 done 		function done( status, nativeStatusText, responses, headers ) {
8104 null 	getScript: function( url, callback ) {
8108 null 	getJSON: function( url, data, callback ) {
8118 ajaxHandleResponses function ajaxHandleResponses( s, jqXHR, responses ) {
8179 ajaxConvert function ajaxConvert( s, response ) {
8271 null 		"text script": function( text ) {
8279 null jQuery.ajaxPrefilter( "script", function( s ) {
8290 null jQuery.ajaxTransport( "script", function(s) {
8300 null 			send: function( _, callback ) {
8313 null 				script.onload = script.onreadystatechange = function( _, isAbort ) {
8340 null 			abort: function() {
8354 null 	jsonpCallback: function() {
8362 null jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {
8386 null 		s.converters["script json"] = function() {
8398 null 		window[ callbackName ] = function() {
8403 null 		jqXHR.always(function() {
8431 null 	xhrOnUnloadAbort = window.ActiveXObject && function() {
8440 createStandardXHR function createStandardXHR() {
8446 createActiveXHR function createActiveXHR() {
8461 null 	function() {
8475 null 	jQuery.ajaxTransport(function( s ) {
8482 null 				send: function( headers, complete ) {
8530 null 					callback = function( _, isAbort ) {
8626 null 				abort: function() {
8641 null 		"*": [function( prop, value ) {
8685 createFxNow function createFxNow() {
8686 null 	setTimeout(function() {
8692 createTweens function createTweens( animation, props ) {
8693 null 	jQuery.each( props, function( prop, value ) {
8707 Animation function Animation( elem, properties, options ) {
8712 null 		deferred = jQuery.Deferred().always( function() {
8716 null 		tick = function() {
8750 null 			createTween: function( prop, end ) {
8756 null 			stop: function( gotoEnd ) {
8811 propFilter function propFilter( props, specialEasing ) {
8850 null 	tweener: function( props, callback ) {
8869 null 	prefilter: function( callback, prepend ) {
8878 defaultPrefilter function defaultPrefilter( elem, props, opts ) {
8895 null 			hooks.empty.fire = function() {
8903 null 		anim.always(function() {
8906 null 			anim.always(function() {
8942 null 			anim.always(function() {
8978 null 			anim.done(function() {
8982 null 		anim.done(function() {
9005 Tween function Tween( elem, options, prop, end, easing ) {
9012 null 	init: function( elem, options, prop, end, easing, unit ) {
9021 null 	cur: function() {
9028 null 	run: function( percent ) {
9058 null 		get: function( tween ) {
9074 null 		set: function( tween ) {
9092 null 	set: function( tween ) {
9099 null jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
9101 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9109 null 	fadeTo: function( speed, to, easing, callback ) {
9117 null 	animate: function( prop, speed, easing, callback ) {
9120 null 			doAnimation = function() {
9123 null 				doAnimation.finish = function() {
9137 null 	stop: function( type, clearQueue, gotoEnd ) {
9138 null 		var stopQueue = function( hooks ) {
9153 null 		return this.each(function() {
9187 null 	finish: function( type ) {
9191 null 		return this.each(function() {
9231 genFx function genFx( type, includeWidth ) {
9259 null }, function( name, props ) {
9260 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9265 null jQuery.speed = function( speed, easing, fn ) {
9284 null 	opt.complete = function() {
9298 null 	linear: function( p ) {
9301 null 	swing: function( p ) {
9308 null jQuery.fx.tick = function() {
9329 null jQuery.fx.timer = function( timer ) {
9337 null jQuery.fx.start = function() {
9343 null jQuery.fx.stop = function() {
9359 null 	jQuery.expr.filters.animated = function( elem ) {
9360 null 		return jQuery.grep(jQuery.timers, function( fn ) {
9365 null jQuery.fn.offset = function( options ) {
9369 null 			this.each(function( i ) {
9404 null 	setOffset: function( elem, options, i ) {
9451 null 	position: function() {
9488 null 	offsetParent: function() {
9489 null 		return this.map(function() {
9501 null jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
9504 null 	jQuery.fn[ method ] = function( val ) {
9505 null 		return jQuery.access( this, function( elem, method, val ) {
9527 getWindow function getWindow( elem ) {
9535 null jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
9536 null 	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
9538 null 		jQuery.fn[ funcName ] = function( margin, value ) {
9542 null 			return jQuery.access( this, function( elem, type, value ) {
9595 null 	define( "jquery", [], function () { return jQuery; } );
1 html /*!
2 null  * jQuery JavaScript Library v1.9.1
1 html /*!
2 null  * jQuery JavaScript Library v1.9.1
1 html /*!
2 null  * jQuery JavaScript Library v1.9.1
14 null (function( window, undefined ) {
60 null 	jQuery = function( selector, context ) {
94 null 	fcamelCase = function( all, letter ) {
99 null 	completed = function( event ) {
108 null 	detach = function() {
124 null 	init: function( selector, context, rootjQuery ) {
232 null 	size: function() {
236 null 	toArray: function() {
242 null 	get: function( num ) {
254 null 	pushStack: function( elems ) {
270 null 	each: function( callback, args ) {
274 null 	ready: function( fn ) {
281 null 	slice: function() {
285 null 	first: function() {
289 null 	last: function() {
293 null 	eq: function( i ) {
299 null 	map: function( callback ) {
300 null 		return this.pushStack( jQuery.map(this, function( elem, i ) {
305 null 	end: function() {
319 null jQuery.extend = jQuery.fn.extend = function() {
384 null 	noConflict: function( deep ) {
404 null 	holdReady: function( hold ) {
413 null 	ready: function( wait ) {
445 null 	isFunction: function( obj ) {
449 null 	isArray: Array.isArray || function( obj ) {
453 null 	isWindow: function( obj ) {
457 null 	isNumeric: function( obj ) {
461 null 	type: function( obj ) {
470 null 	isPlainObject: function( obj ) {
499 null 	isEmptyObject: function( obj ) {
507 null 	error: function( msg ) {
514 null 	parseHTML: function( data, context, keepScripts ) {
539 null 	parseJSON: function( data ) {
570 null 	parseXML: function( data ) {
593 null 	noop: function() {},
598 null 	globalEval: function( data ) {
603 null 			( window.execScript || function( data ) {
611 null 	camelCase: function( string ) {
615 null 	nodeName: function( elem, name ) {
620 null 	each: function( obj, callback, args ) {
671 null 		function( text ) {
678 null 		function( text ) {
685 null 	makeArray: function( arr, results ) {
702 null 	inArray: function( elem, arr, i ) {
724 null 	merge: function( first, second ) {
744 null 	grep: function( elems, callback, inv ) {
764 null 	map: function( elems, callback, arg ) {
801 null 	proxy: function( fn, context ) {
818 null 		proxy = function() {
830 null 	access: function( elems, fn, key, value, chainable, emptyGet, raw ) {
859 null 					fn = function( elem, key, value ) {
881 null 	now: function() {
886 null jQuery.ready.promise = function( obj ) {
923 doScrollCheck 				(function doScrollCheck() {
948 null jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
952 isArraylike function isArraylike( obj ) {
975 createOptions function createOptions( options ) {
977 null 	jQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) {
1005 null jQuery.Callbacks = function( options ) {
1030 null 		fire = function( data ) {
1059 null 			add: function() {
1063 add 					(function add( args ) {
1064 null 						jQuery.each( args, function( _, arg ) {
1090 null 			remove: function() {
1092 null 					jQuery.each( arguments, function( _, arg ) {
1112 null 			has: function( fn ) {
1116 null 			empty: function() {
1121 null 			disable: function() {
1126 null 			disabled: function() {
1130 null 			lock: function() {
1138 null 			locked: function() {
1142 null 			fireWith: function( context, args ) {
1155 null 			fire: function() {
1160 null 			fired: function() {
1169 null 	Deferred: function( func ) {
1178 null 				state: function() {
1181 null 				always: function() {
1185 null 				then: function( /* fnDone, fnFail, fnProgress */ ) {
1187 null 					return jQuery.Deferred(function( newDefer ) {
1188 null 						jQuery.each( tuples, function( i, tuple ) {
1192 null 							deferred[ tuple[1] ](function() {
1209 null 				promise: function( obj ) {
1219 null 		jQuery.each( tuples, function( i, tuple ) {
1228 null 				list.add(function() {
1237 null 			deferred[ tuple[0] ] = function() {
1257 null 	when: function( subordinate /* , ..., subordinateN */ ) {
1269 null 			updateFunc = function( i, contexts, values ) {
1270 null 				return function( value ) {
1308 null jQuery.support = (function() {
1435 null 		div.attachEvent( "onclick", function() {
1455 null 	jQuery(function() {
1552 internalData function internalData( elem, name, data, pvt /* Internal Use Only */ ){
1646 internalRemoveData function internalRemoveData( elem, name, pvt ) {
1749 null 	hasData: function( elem ) {
1754 null 	data: function( elem, name, data ) {
1758 null 	removeData: function( elem, name ) {
1763 null 	_data: function( elem, name, data ) {
1767 null 	_removeData: function( elem, name ) {
1772 null 	acceptData: function( elem ) {
1786 null 	data: function( key, value ) {
1817 null 			return this.each(function() {
1822 null 		return jQuery.access( this, function( value ) {
1829 null 			this.each(function() {
1835 null 	removeData: function( key ) {
1836 null 		return this.each(function() {
1842 dataAttr function dataAttr( elem, key, data ) {
1874 isEmptyDataObject function isEmptyDataObject( obj ) {
1890 null 	queue: function( elem, type, data ) {
1909 null 	dequeue: function( elem, type ) {
1916 null 			next = function() {
1946 null 	_queueHooks: function( elem, type ) {
1949 null 			empty: jQuery.Callbacks("once memory").add(function() {
1958 null 	queue: function( type, data ) {
1973 null 			this.each(function() {
1984 null 	dequeue: function( type ) {
1985 null 		return this.each(function() {
1991 null 	delay: function( time, type ) {
1995 null 		return this.queue( type, function( next, hooks ) {
1997 null 			hooks.stop = function() {
2002 null 	clearQueue: function( type ) {
2007 null 	promise: function( type, obj ) {
2013 null 			resolve = function() {
2047 null 	attr: function( name, value ) {
2051 null 	removeAttr: function( name ) {
2052 null 		return this.each(function() {
2057 null 	prop: function( name, value ) {
2061 null 	removeProp: function( name ) {
2063 null 		return this.each(function() {
2072 null 	addClass: function( value ) {
2079 null 			return this.each(function( j ) {
2111 null 	removeClass: function( value ) {
2118 null 			return this.each(function( j ) {
2149 null 	toggleClass: function( value, stateVal ) {
2154 null 			return this.each(function( i ) {
2159 null 		return this.each(function() {
2190 null 	hasClass: function( selector ) {
2203 null 	val: function( value ) {
2229 null 		return this.each(function( i ) {
2249 null 				val = jQuery.map(val, function ( value ) {
2267 null 			get: function( elem ) {
2275 null 			get: function( elem ) {
2312 null 			set: function( elem, value ) {
2315 null 				jQuery(elem).find("option").each(function() {
2327 null 	attr: function( elem, name, value ) {
2381 null 	removeAttr: function( elem, value ) {
2413 null 			set: function( elem, value ) {
2443 null 	prop: function( elem, name, value ) {
2480 null 			get: function( elem ) {
2497 null 	get: function( elem, name ) {
2521 null 	set: function( elem, value, name ) {
2541 null 		get: function( elem, name ) {
2550 null 		set: function( elem, value, name ) {
2568 null 		get: function( elem, name ) {
2574 null 		set: function( elem, value, name ) {
2596 null 		set: function( elem, value, name ) {
2603 null 	jQuery.each([ "width", "height" ], function( i, name ) {
2605 null 			set: function( elem, value ) {
2619 null 	jQuery.each([ "href", "src", "width", "height" ], function( i, name ) {
2621 null 			get: function( elem ) {
2629 null 	jQuery.each([ "href", "src" ], function( i, name ) {
2631 null 			get: function( elem ) {
2640 null 		get: function( elem ) {
2646 null 		set: function( elem, value ) {
2656 null 		get: function( elem ) {
2679 null 	jQuery.each([ "radio", "checkbox" ], function() {
2681 null 			get: function( elem ) {
2688 null jQuery.each([ "radio", "checkbox" ], function() {
2690 null 		set: function( elem, value ) {
2703 returnTrue function returnTrue() {
2707 returnFalse function returnFalse() {
2719 null 	add: function( elem, types, handler, data, selector ) {
2747 null 			eventHandle = elemData.handle = function( e ) {
2829 null 	remove: function( elem, types, handler, selector, mappedTypes ) {
2902 null 	trigger: function( event, data, elem, onlyHandlers ) {
3036 null 	dispatch: function( event ) {
3095 null 	handlers: function( event, handlers ) {
3142 null 	fix: function( event ) {
3195 null 		filter: function( event, original ) {
3208 null 		filter: function( event, original ) {
3245 null 			trigger: function() {
3254 null 			trigger: function() {
3269 null 			trigger: function() {
3279 null 			postDispatch: function( event ) {
3289 null 	simulate: function( type, elem, event, bubble ) {
3313 null 	function( elem, type, handle ) {
3318 null 	function( elem, type, handle ) {
3333 null jQuery.Event = function( src, props ) {
3373 null 	preventDefault: function() {
3391 null 	stopPropagation: function() {
3407 null 	stopImmediatePropagation: function() {
3417 null }, function( orig, fix ) {
3422 null 		handle: function( event ) {
3444 null 		setup: function() {
3451 null 			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
3456 null 					jQuery.event.add( form, "submit._submit", function( event ) {
3465 null 		postDispatch: function( event ) {
3475 null 		teardown: function() {
3492 null 		setup: function() {
3499 null 					jQuery.event.add( this, "propertychange._change", function( event ) {
3504 null 					jQuery.event.add( this, "click._change", function( event ) {
3515 null 			jQuery.event.add( this, "beforeactivate._change", function( e ) {
3519 null 					jQuery.event.add( elem, "change._change", function( event ) {
3529 null 		handle: function( event ) {
3538 null 		teardown: function() {
3548 null 	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {
3552 null 			handler = function( event ) {
3557 null 			setup: function() {
3562 null 			teardown: function() {
3573 null 	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
3614 null 			fn = function( event ) {
3622 null 		return this.each( function() {
3626 null 	one: function( types, selector, data, fn ) {
3629 null 	off: function( types, selector, fn ) {
3656 null 		return this.each(function() {
3661 null 	bind: function( types, data, fn ) {
3664 null 	unbind: function( types, fn ) {
3668 null 	delegate: function( selector, types, data, fn ) {
3671 null 	undelegate: function( selector, types, fn ) {
3676 null 	trigger: function( type, data ) {
3677 null 		return this.each(function() {
3681 null 	triggerHandler: function( type, data ) {
3694 null (function( window, undefined ) {
3736 null 	indexOf = arr.indexOf || function( elem ) {
3812 null 	funescape = function( _, escaped ) {
3828 null 	slice = function( i ) {
3842 isNative function isNative( fn ) {
3852 createCache function createCache() {
3856 null 	return (cache = function( key, value ) {
3870 markFunction function markFunction( fn ) {
3879 assert function assert( fn ) {
3892 Sizzle function Sizzle( selector, context, results, seed ) {
4006 null isXML = Sizzle.isXML = function( elem ) {
4018 null setDocument = Sizzle.setDocument = function( node ) {
4034 null 	support.tagNameNoComments = assert(function( div ) {
4040 null 	support.attributes = assert(function( div ) {
4048 null 	support.getByClassName = assert(function( div ) {
4062 null 	support.getByName = assert(function( div ) {
4083 null 	Expr.attrHandle = assert(function( div ) {
4090 null 			"href": function( elem ) {
4093 null 			"type": function( elem ) {
4100 null 		Expr.find["ID"] = function( id, context ) {
4108 null 		Expr.filter["ID"] = function( id ) {
4110 null 			return function( elem ) {
4115 null 		Expr.find["ID"] = function( id, context ) {
4126 null 		Expr.filter["ID"] =  function( id ) {
4128 null 			return function( elem ) {
4137 null 		function( tag, context ) {
4142 null 		function( tag, context ) {
4162 null 	Expr.find["NAME"] = support.getByName && function( tag, context ) {
4169 null 	Expr.find["CLASS"] = support.getByClassName && function( className, context ) {
4188 null 		assert(function( div ) {
4209 null 		assert(function( div ) {
4236 null 		assert(function( div ) {
4255 null 		function( a, b ) {
4264 null 		function( a, b ) {
4277 null 	function( a, b ) {
4300 null 	function( a, b ) {
4360 null Sizzle.matches = function( expr, elements ) {
4364 null Sizzle.matchesSelector = function( elem, expr ) {
4391 null Sizzle.contains = function( context, elem ) {
4399 null Sizzle.attr = function( elem, name ) {
4421 null Sizzle.error = function( msg ) {
4426 null Sizzle.uniqueSort = function( results ) {
4450 siblingCheck function siblingCheck( a, b ) {
4472 createInputPseudo function createInputPseudo( type ) {
4473 null 	return function( elem ) {
4480 createButtonPseudo function createButtonPseudo( type ) {
4481 null 	return function( elem ) {
4488 createPositionalPseudo function createPositionalPseudo( fn ) {
4489 null 	return markFunction(function( argument ) {
4491 null 		return markFunction(function( seed, matches ) {
4510 null getText = Sizzle.getText = function( elem ) {
4560 null 		"ATTR": function( match ) {
4573 null 		"CHILD": function( match ) {
4605 null 		"PSEUDO": function( match ) {
4636 null 		"TAG": function( nodeName ) {
4638 null 				return function() { return true; };
4642 null 			return function( elem ) {
4647 null 		"CLASS": function( className ) {
4652 null 				classCache( className, function( elem ) {
4657 null 		"ATTR": function( name, operator, check ) {
4658 null 			return function( elem ) {
4681 null 		"CHILD": function( type, what, argument, first, last ) {
4689 null 				function( elem ) {
4693 null 				function( elem, context, xml ) {
4770 null 		"PSEUDO": function( pseudo, argument ) {
4790 null 					markFunction(function( seed, matches ) {
4799 null 					function( elem ) {
4810 null 		"not": markFunction(function( selector ) {
4819 null 				markFunction(function( seed, matches, context, xml ) {
4831 null 				function( elem, context, xml ) {
4838 null 		"has": markFunction(function( selector ) {
4839 null 			return function( elem ) {
4844 null 		"contains": markFunction(function( text ) {
4845 null 			return function( elem ) {
4857 null 		"lang": markFunction( function( lang ) {
4863 null 			return function( elem ) {
4879 null 		"target": function( elem ) {
4884 null 		"root": function( elem ) {
4888 null 		"focus": function( elem ) {
4893 null 		"enabled": function( elem ) {
4897 null 		"disabled": function( elem ) {
4901 null 		"checked": function( elem ) {
4908 null 		"selected": function( elem ) {
4919 null 		"empty": function( elem ) {
4933 null 		"parent": function( elem ) {
4938 null 		"header": function( elem ) {
4942 null 		"input": function( elem ) {
4946 null 		"button": function( elem ) {
4951 null 		"text": function( elem ) {
4961 null 		"first": createPositionalPseudo(function() {
4965 null 		"last": createPositionalPseudo(function( matchIndexes, length ) {
4969 null 		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
4973 null 		"even": createPositionalPseudo(function( matchIndexes, length ) {
4981 null 		"odd": createPositionalPseudo(function( matchIndexes, length ) {
4989 null 		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
4997 null 		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
5015 tokenize function tokenize( selector, parseOnly ) {
5082 toSelector function toSelector( tokens ) {
5092 addCombinator function addCombinator( matcher, combinator, base ) {
5099 null 		function( elem, context, xml ) {
5108 null 		function( elem, context, xml ) {
5142 elementMatcher function elementMatcher( matchers ) {
5144 null 		function( elem, context, xml ) {
5156 condense function condense( unmatched, map, filter, context, xml ) {
5177 setMatcher function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
5184 null 	return markFunction(function( seed, results, context, xml ) {
5270 matcherFromTokens function matcherFromTokens( tokens ) {
5278 null 		matchContext = addCombinator( function( elem ) {
5281 null 		matchAnyContext = addCombinator( function( elem ) {
5284 null 		matchers = [ function( elem, context, xml ) {
5322 matcherFromGroupMatchers function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
5327 null 		superMatcher = function( seed, context, xml, results, expandContext ) {
5423 null compile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {
5450 multipleContexts function multipleContexts( selector, contexts, results ) {
5459 select function select( selector, context, results, seed ) {
5528 setFilters function setFilters() {}
5560 null 	find: function( selector ) {
5566 null 			return this.pushStack( jQuery( selector ).filter(function() {
5586 null 	has: function( target ) {
5591 null 		return this.filter(function() {
5600 null 	not: function( selector ) {
5604 null 	filter: function( selector ) {
5608 null 	is: function( selector ) {
5619 null 	closest: function( selectors, context ) {
5645 null 	index: function( elem ) {
5663 null 	add: function( selector, context ) {
5672 null 	addBack: function( selector ) {
5681 sibling function sibling( cur, dir ) {
5690 null 	parent: function( elem ) {
5694 null 	parents: function( elem ) {
5697 null 	parentsUntil: function( elem, i, until ) {
5700 null 	next: function( elem ) {
5703 null 	prev: function( elem ) {
5706 null 	nextAll: function( elem ) {
5709 null 	prevAll: function( elem ) {
5712 null 	nextUntil: function( elem, i, until ) {
5715 null 	prevUntil: function( elem, i, until ) {
5718 null 	siblings: function( elem ) {
5721 null 	children: function( elem ) {
5724 null 	contents: function( elem ) {
5729 null }, function( name, fn ) {
5730 null 	jQuery.fn[ name ] = function( until, selector ) {
5752 null 	filter: function( expr, elems, not ) {
5762 null 	dir: function( elem, dir, until ) {
5775 null 	sibling: function( n, elem ) {
5789 winnow function winnow( elements, qualifier, keep ) {
5796 null 		return jQuery.grep(elements, function( elem, i ) {
5802 null 		return jQuery.grep(elements, function( elem ) {
5807 null 		var filtered = jQuery.grep(elements, function( elem ) {
5818 null 	return jQuery.grep(elements, function( elem ) {
5822 createSafeFragment function createSafeFragment( document ) {
5876 null 	text: function( value ) {
5877 null 		return jQuery.access( this, function( value ) {
5884 null 	wrapAll: function( html ) {
5886 null 			return this.each(function(i) {
5899 null 			wrap.map(function() {
5913 null 	wrapInner: function( html ) {
5915 null 			return this.each(function(i) {
5920 null 		return this.each(function() {
5933 null 	wrap: function( html ) {
5936 null 		return this.each(function(i) {
5941 null 	unwrap: function() {
5942 null 		return this.parent().each(function() {
5949 null 	append: function() {
5950 null 		return this.domManip(arguments, true, function( elem ) {
5957 null 	prepend: function() {
5958 null 		return this.domManip(arguments, true, function( elem ) {
5965 null 	before: function() {
5966 null 		return this.domManip( arguments, false, function( elem ) {
5973 null 	after: function() {
5974 null 		return this.domManip( arguments, false, function( elem ) {
5982 null 	remove: function( selector, keepData ) {
6004 null 	empty: function() {
6029 null 	clone: function( dataAndEvents, deepDataAndEvents ) {
6033 null 		return this.map( function () {
6038 null 	html: function( value ) {
6039 null 		return jQuery.access( this, function( value ) {
6080 null 	replaceWith: function( value ) {
6089 null 		return this.domManip( [ value ], true, function( elem ) {
6100 null 	detach: function( selector ) {
6104 null 	domManip: function( args, table, callback ) {
6120 null 			return this.each(function( index ) {
6203 findOrAppend function findOrAppend( elem, tag ) {
6208 disableScript function disableScript( elem ) {
6213 restoreScript function restoreScript( elem ) {
6224 setGlobalEval function setGlobalEval( elems, refElements ) {
6232 cloneCopyEvent function cloneCopyEvent( src, dest ) {
6260 fixCloneNodeIssues function fixCloneNodeIssues( src, dest ) {
6333 null }, function( name, original ) {
6334 null 	jQuery.fn[ name ] = function( selector ) {
6353 getAll function getAll( context, tag ) {
6376 fixDefaultChecked function fixDefaultChecked( elem ) {
6383 null 	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
6438 null 	buildFragment: function( elems, context, scripts, selection ) {
6565 null 	cleanData: function( elems, /* internal */ acceptData ) {
6641 vendorPropName function vendorPropName( style, name ) {
6663 isHidden function isHidden( elem, el ) {
6670 showHide function showHide( elements, show ) {
6725 null 	css: function( name, value ) {
6726 null 		return jQuery.access( this, function( elem, name, value ) {
6747 null 	show: function() {
6750 null 	hide: function() {
6753 null 	toggle: function( state ) {
6756 null 		return this.each(function() {
6771 null 			get: function( elem, computed ) {
6802 null 	style: function( elem, name, value, extra ) {
6867 null 	css: function( elem, name, extra, styles ) {
6902 null 	swap: function( elem, options, callback, args ) {
6926 null 	getStyles = function( elem ) {
6930 null 	curCSS = function( elem, name, _computed ) {
6969 null 	getStyles = function( elem ) {
6973 null 	curCSS = function( elem, name, _computed ) {
7017 setPositiveNumber function setPositiveNumber( elem, value, subtract ) {
7025 augmentWidthOrHeight function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
7064 getWidthOrHeight function getWidthOrHeight( elem, name, extra ) {
7108 css_defaultDisplay function css_defaultDisplay( nodeName ) {
7140 actualDisplay function actualDisplay( name, doc ) {
7147 null jQuery.each([ "height", "width" ], function( i, name ) {
7149 null 		get: function( elem, computed, extra ) {
7154 null 					jQuery.swap( elem, cssShow, function() {
7161 null 		set: function( elem, value, extra ) {
7178 null 		get: function( elem, computed ) {
7185 null 		set: function( elem, value ) {
7222 null jQuery(function() {
7225 null 			get: function( elem, computed ) {
7240 null 		jQuery.each( [ "top", "left" ], function( i, prop ) {
7242 null 				get: function( elem, computed ) {
7258 null 	jQuery.expr.filters.hidden = function( elem ) {
7265 null 	jQuery.expr.filters.visible = function( elem ) {
7275 null }, function( prefix, suffix ) {
7277 null 		expand: function( value ) {
7304 null 	serialize: function() {
7307 null 	serializeArray: function() {
7308 null 		return this.map(function(){
7313 null 		.filter(function(){
7320 null 		.map(function( i, elem ){
7326 null 					jQuery.map( val, function( val ){
7336 null jQuery.param = function( a, traditional ) {
7339 null 		add = function( key, value ) {
7353 null 		jQuery.each( a, function() {
7369 buildParams function buildParams( prefix, obj, traditional, add ) {
7374 null 		jQuery.each( obj, function( i, v ) {
7398 null 	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {
7401 null 	jQuery.fn[ name ] = function( data, fn ) {
7408 null jQuery.fn.hover = function( fnOver, fnOut ) {
7467 addToPrefiltersOrTransports function addToPrefiltersOrTransports( structure ) {
7470 null 	return function( dataTypeExpression, func ) {
7499 inspectPrefiltersOrTransports function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {
7504 inspect 	function inspect( dataType ) {
7507 null 		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
7526 ajaxExtend function ajaxExtend( target, src ) {
7542 null jQuery.fn.load = function( url, params, callback ) {
7577 null 		}).done(function( responseText ) {
7591 null 		}).complete( callback && function( jqXHR, status ) {
7600 null jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ){
7601 null 	jQuery.fn[ type ] = function( fn ){
7606 null jQuery.each( [ "get", "post" ], function( i, method ) {
7607 null 	jQuery[ method ] = function( url, data, callback, type ) {
7703 null 	ajaxSetup: function( target, settings ) {
7717 null 	ajax: function( url, options ) {
7770 null 				getResponseHeader: function( key ) {
7785 null 				getAllResponseHeaders: function() {
7790 null 				setRequestHeader: function( name, value ) {
7800 null 				overrideMimeType: function( type ) {
7808 null 				statusCode: function( map ) {
7825 null 				abort: function( statusText ) {
7972 null 				timeoutTimer = setTimeout(function() {
7992 done 		function done( status, nativeStatusText, responses, headers ) {
8104 null 	getScript: function( url, callback ) {
8108 null 	getJSON: function( url, data, callback ) {
8118 ajaxHandleResponses function ajaxHandleResponses( s, jqXHR, responses ) {
8179 ajaxConvert function ajaxConvert( s, response ) {
8271 null 		"text script": function( text ) {
8279 null jQuery.ajaxPrefilter( "script", function( s ) {
8290 null jQuery.ajaxTransport( "script", function(s) {
8300 null 			send: function( _, callback ) {
8313 null 				script.onload = script.onreadystatechange = function( _, isAbort ) {
8340 null 			abort: function() {
8354 null 	jsonpCallback: function() {
8362 null jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {
8386 null 		s.converters["script json"] = function() {
8398 null 		window[ callbackName ] = function() {
8403 null 		jqXHR.always(function() {
8431 null 	xhrOnUnloadAbort = window.ActiveXObject && function() {
8440 createStandardXHR function createStandardXHR() {
8446 createActiveXHR function createActiveXHR() {
8461 null 	function() {
8475 null 	jQuery.ajaxTransport(function( s ) {
8482 null 				send: function( headers, complete ) {
8530 null 					callback = function( _, isAbort ) {
8626 null 				abort: function() {
8641 null 		"*": [function( prop, value ) {
8685 createFxNow function createFxNow() {
8686 null 	setTimeout(function() {
8692 createTweens function createTweens( animation, props ) {
8693 null 	jQuery.each( props, function( prop, value ) {
8707 Animation function Animation( elem, properties, options ) {
8712 null 		deferred = jQuery.Deferred().always( function() {
8716 null 		tick = function() {
8750 null 			createTween: function( prop, end ) {
8756 null 			stop: function( gotoEnd ) {
8811 propFilter function propFilter( props, specialEasing ) {
8850 null 	tweener: function( props, callback ) {
8869 null 	prefilter: function( callback, prepend ) {
8878 defaultPrefilter function defaultPrefilter( elem, props, opts ) {
8895 null 			hooks.empty.fire = function() {
8903 null 		anim.always(function() {
8906 null 			anim.always(function() {
8942 null 			anim.always(function() {
8978 null 			anim.done(function() {
8982 null 		anim.done(function() {
9005 Tween function Tween( elem, options, prop, end, easing ) {
9012 null 	init: function( elem, options, prop, end, easing, unit ) {
9021 null 	cur: function() {
9028 null 	run: function( percent ) {
9058 null 		get: function( tween ) {
9074 null 		set: function( tween ) {
9092 null 	set: function( tween ) {
9099 null jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
9101 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9109 null 	fadeTo: function( speed, to, easing, callback ) {
9117 null 	animate: function( prop, speed, easing, callback ) {
9120 null 			doAnimation = function() {
9123 null 				doAnimation.finish = function() {
9137 null 	stop: function( type, clearQueue, gotoEnd ) {
9138 null 		var stopQueue = function( hooks ) {
9153 null 		return this.each(function() {
9187 null 	finish: function( type ) {
9191 null 		return this.each(function() {
9231 genFx function genFx( type, includeWidth ) {
9259 null }, function( name, props ) {
9260 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9265 null jQuery.speed = function( speed, easing, fn ) {
9284 null 	opt.complete = function() {
9298 null 	linear: function( p ) {
9301 null 	swing: function( p ) {
9308 null jQuery.fx.tick = function() {
9329 null jQuery.fx.timer = function( timer ) {
9337 null jQuery.fx.start = function() {
9343 null jQuery.fx.stop = function() {
9359 null 	jQuery.expr.filters.animated = function( elem ) {
9360 null 		return jQuery.grep(jQuery.timers, function( fn ) {
9365 null jQuery.fn.offset = function( options ) {
9369 null 			this.each(function( i ) {
9404 null 	setOffset: function( elem, options, i ) {
9451 null 	position: function() {
9488 null 	offsetParent: function() {
9489 null 		return this.map(function() {
9501 null jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
9504 null 	jQuery.fn[ method ] = function( val ) {
9505 null 		return jQuery.access( this, function( elem, method, val ) {
9527 getWindow function getWindow( elem ) {
9535 null jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
9536 null 	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
9538 null 		jQuery.fn[ funcName ] = function( margin, value ) {
9542 null 			return jQuery.access( this, function( elem, type, value ) {
9595 null 	define( "jquery", [], function () { return jQuery; } );
10 null  * http://jquery.org/license
9 f  * Released under the MIT license
9 f  * Released under the MIT license
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
10 CSlider  * http://jquery.org/license
12 null  * Date: 2013-2-4
16 null // Can't do this because several apps including ASP.NET trace
26 null 	rootjQuery,
1 null /*!
10 null  * http://jquery.org/license
9 f  * Released under the MIT license
9 f  * Released under the MIT license
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
10 CSlider  * http://jquery.org/license
12 null  * Date: 2013-2-4
16 null // Can't do this because several apps including ASP.NET trace
26 null 	rootjQuery,
1 null /*!
1 html /*!
2 null  * jQuery JavaScript Library v1.9.1
14 null (function( window, undefined ) {
60 null 	jQuery = function( selector, context ) {
94 null 	fcamelCase = function( all, letter ) {
99 null 	completed = function( event ) {
108 null 	detach = function() {
124 null 	init: function( selector, context, rootjQuery ) {
232 null 	size: function() {
236 null 	toArray: function() {
242 null 	get: function( num ) {
254 null 	pushStack: function( elems ) {
270 null 	each: function( callback, args ) {
274 null 	ready: function( fn ) {
281 null 	slice: function() {
285 null 	first: function() {
289 null 	last: function() {
293 null 	eq: function( i ) {
299 null 	map: function( callback ) {
300 null 		return this.pushStack( jQuery.map(this, function( elem, i ) {
305 null 	end: function() {
319 null jQuery.extend = jQuery.fn.extend = function() {
384 null 	noConflict: function( deep ) {
404 null 	holdReady: function( hold ) {
413 null 	ready: function( wait ) {
445 null 	isFunction: function( obj ) {
449 null 	isArray: Array.isArray || function( obj ) {
453 null 	isWindow: function( obj ) {
457 null 	isNumeric: function( obj ) {
461 null 	type: function( obj ) {
470 null 	isPlainObject: function( obj ) {
499 null 	isEmptyObject: function( obj ) {
507 null 	error: function( msg ) {
514 null 	parseHTML: function( data, context, keepScripts ) {
539 null 	parseJSON: function( data ) {
570 null 	parseXML: function( data ) {
593 null 	noop: function() {},
598 null 	globalEval: function( data ) {
603 null 			( window.execScript || function( data ) {
611 null 	camelCase: function( string ) {
615 null 	nodeName: function( elem, name ) {
620 null 	each: function( obj, callback, args ) {
671 null 		function( text ) {
678 null 		function( text ) {
685 null 	makeArray: function( arr, results ) {
702 null 	inArray: function( elem, arr, i ) {
724 null 	merge: function( first, second ) {
744 null 	grep: function( elems, callback, inv ) {
764 null 	map: function( elems, callback, arg ) {
801 null 	proxy: function( fn, context ) {
818 null 		proxy = function() {
830 null 	access: function( elems, fn, key, value, chainable, emptyGet, raw ) {
859 null 					fn = function( elem, key, value ) {
881 null 	now: function() {
886 null jQuery.ready.promise = function( obj ) {
923 doScrollCheck 				(function doScrollCheck() {
948 null jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
952 isArraylike function isArraylike( obj ) {
975 createOptions function createOptions( options ) {
977 null 	jQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) {
1005 null jQuery.Callbacks = function( options ) {
1030 null 		fire = function( data ) {
1059 null 			add: function() {
1063 add 					(function add( args ) {
1064 null 						jQuery.each( args, function( _, arg ) {
1090 null 			remove: function() {
1092 null 					jQuery.each( arguments, function( _, arg ) {
1112 null 			has: function( fn ) {
1116 null 			empty: function() {
1121 null 			disable: function() {
1126 null 			disabled: function() {
1130 null 			lock: function() {
1138 null 			locked: function() {
1142 null 			fireWith: function( context, args ) {
1155 null 			fire: function() {
1160 null 			fired: function() {
1169 null 	Deferred: function( func ) {
1178 null 				state: function() {
1181 null 				always: function() {
1185 null 				then: function( /* fnDone, fnFail, fnProgress */ ) {
1187 null 					return jQuery.Deferred(function( newDefer ) {
1188 null 						jQuery.each( tuples, function( i, tuple ) {
1192 null 							deferred[ tuple[1] ](function() {
1209 null 				promise: function( obj ) {
1219 null 		jQuery.each( tuples, function( i, tuple ) {
1228 null 				list.add(function() {
1237 null 			deferred[ tuple[0] ] = function() {
1257 null 	when: function( subordinate /* , ..., subordinateN */ ) {
1269 null 			updateFunc = function( i, contexts, values ) {
1270 null 				return function( value ) {
1308 null jQuery.support = (function() {
1435 null 		div.attachEvent( "onclick", function() {
1455 null 	jQuery(function() {
1552 internalData function internalData( elem, name, data, pvt /* Internal Use Only */ ){
1646 internalRemoveData function internalRemoveData( elem, name, pvt ) {
1749 null 	hasData: function( elem ) {
1754 null 	data: function( elem, name, data ) {
1758 null 	removeData: function( elem, name ) {
1763 null 	_data: function( elem, name, data ) {
1767 null 	_removeData: function( elem, name ) {
1772 null 	acceptData: function( elem ) {
1786 null 	data: function( key, value ) {
1817 null 			return this.each(function() {
1822 null 		return jQuery.access( this, function( value ) {
1829 null 			this.each(function() {
1835 null 	removeData: function( key ) {
1836 null 		return this.each(function() {
1842 dataAttr function dataAttr( elem, key, data ) {
1874 isEmptyDataObject function isEmptyDataObject( obj ) {
1890 null 	queue: function( elem, type, data ) {
1909 null 	dequeue: function( elem, type ) {
1916 null 			next = function() {
1946 null 	_queueHooks: function( elem, type ) {
1949 null 			empty: jQuery.Callbacks("once memory").add(function() {
1958 null 	queue: function( type, data ) {
1973 null 			this.each(function() {
1984 null 	dequeue: function( type ) {
1985 null 		return this.each(function() {
1991 null 	delay: function( time, type ) {
1995 null 		return this.queue( type, function( next, hooks ) {
1997 null 			hooks.stop = function() {
2002 null 	clearQueue: function( type ) {
2007 null 	promise: function( type, obj ) {
2013 null 			resolve = function() {
2047 null 	attr: function( name, value ) {
2051 null 	removeAttr: function( name ) {
2052 null 		return this.each(function() {
2057 null 	prop: function( name, value ) {
2061 null 	removeProp: function( name ) {
2063 null 		return this.each(function() {
2072 null 	addClass: function( value ) {
2079 null 			return this.each(function( j ) {
2111 null 	removeClass: function( value ) {
2118 null 			return this.each(function( j ) {
2149 null 	toggleClass: function( value, stateVal ) {
2154 null 			return this.each(function( i ) {
2159 null 		return this.each(function() {
2190 null 	hasClass: function( selector ) {
2203 null 	val: function( value ) {
2229 null 		return this.each(function( i ) {
2249 null 				val = jQuery.map(val, function ( value ) {
2267 null 			get: function( elem ) {
2275 null 			get: function( elem ) {
2312 null 			set: function( elem, value ) {
2315 null 				jQuery(elem).find("option").each(function() {
2327 null 	attr: function( elem, name, value ) {
2381 null 	removeAttr: function( elem, value ) {
2413 null 			set: function( elem, value ) {
2443 null 	prop: function( elem, name, value ) {
2480 null 			get: function( elem ) {
2497 null 	get: function( elem, name ) {
2521 null 	set: function( elem, value, name ) {
2541 null 		get: function( elem, name ) {
2550 null 		set: function( elem, value, name ) {
2568 null 		get: function( elem, name ) {
2574 null 		set: function( elem, value, name ) {
2596 null 		set: function( elem, value, name ) {
2603 null 	jQuery.each([ "width", "height" ], function( i, name ) {
2605 null 			set: function( elem, value ) {
2619 null 	jQuery.each([ "href", "src", "width", "height" ], function( i, name ) {
2621 null 			get: function( elem ) {
2629 null 	jQuery.each([ "href", "src" ], function( i, name ) {
2631 null 			get: function( elem ) {
2640 null 		get: function( elem ) {
2646 null 		set: function( elem, value ) {
2656 null 		get: function( elem ) {
2679 null 	jQuery.each([ "radio", "checkbox" ], function() {
2681 null 			get: function( elem ) {
2688 null jQuery.each([ "radio", "checkbox" ], function() {
2690 null 		set: function( elem, value ) {
2703 returnTrue function returnTrue() {
2707 returnFalse function returnFalse() {
2719 null 	add: function( elem, types, handler, data, selector ) {
2747 null 			eventHandle = elemData.handle = function( e ) {
2829 null 	remove: function( elem, types, handler, selector, mappedTypes ) {
2902 null 	trigger: function( event, data, elem, onlyHandlers ) {
3036 null 	dispatch: function( event ) {
3095 null 	handlers: function( event, handlers ) {
3142 null 	fix: function( event ) {
3195 null 		filter: function( event, original ) {
3208 null 		filter: function( event, original ) {
3245 null 			trigger: function() {
3254 null 			trigger: function() {
3269 null 			trigger: function() {
3279 null 			postDispatch: function( event ) {
3289 null 	simulate: function( type, elem, event, bubble ) {
3313 null 	function( elem, type, handle ) {
3318 null 	function( elem, type, handle ) {
3333 null jQuery.Event = function( src, props ) {
3373 null 	preventDefault: function() {
3391 null 	stopPropagation: function() {
3407 null 	stopImmediatePropagation: function() {
3417 null }, function( orig, fix ) {
3422 null 		handle: function( event ) {
3444 null 		setup: function() {
3451 null 			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
3456 null 					jQuery.event.add( form, "submit._submit", function( event ) {
3465 null 		postDispatch: function( event ) {
3475 null 		teardown: function() {
3492 null 		setup: function() {
3499 null 					jQuery.event.add( this, "propertychange._change", function( event ) {
3504 null 					jQuery.event.add( this, "click._change", function( event ) {
3515 null 			jQuery.event.add( this, "beforeactivate._change", function( e ) {
3519 null 					jQuery.event.add( elem, "change._change", function( event ) {
3529 null 		handle: function( event ) {
3538 null 		teardown: function() {
3548 null 	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {
3552 null 			handler = function( event ) {
3557 null 			setup: function() {
3562 null 			teardown: function() {
3573 null 	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
3614 null 			fn = function( event ) {
3622 null 		return this.each( function() {
3626 null 	one: function( types, selector, data, fn ) {
3629 null 	off: function( types, selector, fn ) {
3656 null 		return this.each(function() {
3661 null 	bind: function( types, data, fn ) {
3664 null 	unbind: function( types, fn ) {
3668 null 	delegate: function( selector, types, data, fn ) {
3671 null 	undelegate: function( selector, types, fn ) {
3676 null 	trigger: function( type, data ) {
3677 null 		return this.each(function() {
3681 null 	triggerHandler: function( type, data ) {
3694 null (function( window, undefined ) {
3736 null 	indexOf = arr.indexOf || function( elem ) {
3812 null 	funescape = function( _, escaped ) {
3828 null 	slice = function( i ) {
3842 isNative function isNative( fn ) {
3852 createCache function createCache() {
3856 null 	return (cache = function( key, value ) {
3870 markFunction function markFunction( fn ) {
3879 assert function assert( fn ) {
3892 Sizzle function Sizzle( selector, context, results, seed ) {
4006 null isXML = Sizzle.isXML = function( elem ) {
4018 null setDocument = Sizzle.setDocument = function( node ) {
4034 null 	support.tagNameNoComments = assert(function( div ) {
4040 null 	support.attributes = assert(function( div ) {
4048 null 	support.getByClassName = assert(function( div ) {
4062 null 	support.getByName = assert(function( div ) {
4083 null 	Expr.attrHandle = assert(function( div ) {
4090 null 			"href": function( elem ) {
4093 null 			"type": function( elem ) {
4100 null 		Expr.find["ID"] = function( id, context ) {
4108 null 		Expr.filter["ID"] = function( id ) {
4110 null 			return function( elem ) {
4115 null 		Expr.find["ID"] = function( id, context ) {
4126 null 		Expr.filter["ID"] =  function( id ) {
4128 null 			return function( elem ) {
4137 null 		function( tag, context ) {
4142 null 		function( tag, context ) {
4162 null 	Expr.find["NAME"] = support.getByName && function( tag, context ) {
4169 null 	Expr.find["CLASS"] = support.getByClassName && function( className, context ) {
4188 null 		assert(function( div ) {
4209 null 		assert(function( div ) {
4236 null 		assert(function( div ) {
4255 null 		function( a, b ) {
4264 null 		function( a, b ) {
4277 null 	function( a, b ) {
4300 null 	function( a, b ) {
4360 null Sizzle.matches = function( expr, elements ) {
4364 null Sizzle.matchesSelector = function( elem, expr ) {
4391 null Sizzle.contains = function( context, elem ) {
4399 null Sizzle.attr = function( elem, name ) {
4421 null Sizzle.error = function( msg ) {
4426 null Sizzle.uniqueSort = function( results ) {
4450 siblingCheck function siblingCheck( a, b ) {
4472 createInputPseudo function createInputPseudo( type ) {
4473 null 	return function( elem ) {
4480 createButtonPseudo function createButtonPseudo( type ) {
4481 null 	return function( elem ) {
4488 createPositionalPseudo function createPositionalPseudo( fn ) {
4489 null 	return markFunction(function( argument ) {
4491 null 		return markFunction(function( seed, matches ) {
4510 null getText = Sizzle.getText = function( elem ) {
4560 null 		"ATTR": function( match ) {
4573 null 		"CHILD": function( match ) {
4605 null 		"PSEUDO": function( match ) {
4636 null 		"TAG": function( nodeName ) {
4638 null 				return function() { return true; };
4642 null 			return function( elem ) {
4647 null 		"CLASS": function( className ) {
4652 null 				classCache( className, function( elem ) {
4657 null 		"ATTR": function( name, operator, check ) {
4658 null 			return function( elem ) {
4681 null 		"CHILD": function( type, what, argument, first, last ) {
4689 null 				function( elem ) {
4693 null 				function( elem, context, xml ) {
4770 null 		"PSEUDO": function( pseudo, argument ) {
4790 null 					markFunction(function( seed, matches ) {
4799 null 					function( elem ) {
4810 null 		"not": markFunction(function( selector ) {
4819 null 				markFunction(function( seed, matches, context, xml ) {
4831 null 				function( elem, context, xml ) {
4838 null 		"has": markFunction(function( selector ) {
4839 null 			return function( elem ) {
4844 null 		"contains": markFunction(function( text ) {
4845 null 			return function( elem ) {
4857 null 		"lang": markFunction( function( lang ) {
4863 null 			return function( elem ) {
4879 null 		"target": function( elem ) {
4884 null 		"root": function( elem ) {
4888 null 		"focus": function( elem ) {
4893 null 		"enabled": function( elem ) {
4897 null 		"disabled": function( elem ) {
4901 null 		"checked": function( elem ) {
4908 null 		"selected": function( elem ) {
4919 null 		"empty": function( elem ) {
4933 null 		"parent": function( elem ) {
4938 null 		"header": function( elem ) {
4942 null 		"input": function( elem ) {
4946 null 		"button": function( elem ) {
4951 null 		"text": function( elem ) {
4961 null 		"first": createPositionalPseudo(function() {
4965 null 		"last": createPositionalPseudo(function( matchIndexes, length ) {
4969 null 		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
4973 null 		"even": createPositionalPseudo(function( matchIndexes, length ) {
4981 null 		"odd": createPositionalPseudo(function( matchIndexes, length ) {
4989 null 		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
4997 null 		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
5015 tokenize function tokenize( selector, parseOnly ) {
5082 toSelector function toSelector( tokens ) {
5092 addCombinator function addCombinator( matcher, combinator, base ) {
5099 null 		function( elem, context, xml ) {
5108 null 		function( elem, context, xml ) {
5142 elementMatcher function elementMatcher( matchers ) {
5144 null 		function( elem, context, xml ) {
5156 condense function condense( unmatched, map, filter, context, xml ) {
5177 setMatcher function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
5184 null 	return markFunction(function( seed, results, context, xml ) {
5270 matcherFromTokens function matcherFromTokens( tokens ) {
5278 null 		matchContext = addCombinator( function( elem ) {
5281 null 		matchAnyContext = addCombinator( function( elem ) {
5284 null 		matchers = [ function( elem, context, xml ) {
5322 matcherFromGroupMatchers function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
5327 null 		superMatcher = function( seed, context, xml, results, expandContext ) {
5423 null compile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {
5450 multipleContexts function multipleContexts( selector, contexts, results ) {
5459 select function select( selector, context, results, seed ) {
5528 setFilters function setFilters() {}
5560 null 	find: function( selector ) {
5566 null 			return this.pushStack( jQuery( selector ).filter(function() {
5586 null 	has: function( target ) {
5591 null 		return this.filter(function() {
5600 null 	not: function( selector ) {
5604 null 	filter: function( selector ) {
5608 null 	is: function( selector ) {
5619 null 	closest: function( selectors, context ) {
5645 null 	index: function( elem ) {
5663 null 	add: function( selector, context ) {
5672 null 	addBack: function( selector ) {
5681 sibling function sibling( cur, dir ) {
5690 null 	parent: function( elem ) {
5694 null 	parents: function( elem ) {
5697 null 	parentsUntil: function( elem, i, until ) {
5700 null 	next: function( elem ) {
5703 null 	prev: function( elem ) {
5706 null 	nextAll: function( elem ) {
5709 null 	prevAll: function( elem ) {
5712 null 	nextUntil: function( elem, i, until ) {
5715 null 	prevUntil: function( elem, i, until ) {
5718 null 	siblings: function( elem ) {
5721 null 	children: function( elem ) {
5724 null 	contents: function( elem ) {
5729 null }, function( name, fn ) {
5730 null 	jQuery.fn[ name ] = function( until, selector ) {
5752 null 	filter: function( expr, elems, not ) {
5762 null 	dir: function( elem, dir, until ) {
5775 null 	sibling: function( n, elem ) {
5789 winnow function winnow( elements, qualifier, keep ) {
5796 null 		return jQuery.grep(elements, function( elem, i ) {
5802 null 		return jQuery.grep(elements, function( elem ) {
5807 null 		var filtered = jQuery.grep(elements, function( elem ) {
5818 null 	return jQuery.grep(elements, function( elem ) {
5822 createSafeFragment function createSafeFragment( document ) {
5876 null 	text: function( value ) {
5877 null 		return jQuery.access( this, function( value ) {
5884 null 	wrapAll: function( html ) {
5886 null 			return this.each(function(i) {
5899 null 			wrap.map(function() {
5913 null 	wrapInner: function( html ) {
5915 null 			return this.each(function(i) {
5920 null 		return this.each(function() {
5933 null 	wrap: function( html ) {
5936 null 		return this.each(function(i) {
5941 null 	unwrap: function() {
5942 null 		return this.parent().each(function() {
5949 null 	append: function() {
5950 null 		return this.domManip(arguments, true, function( elem ) {
5957 null 	prepend: function() {
5958 null 		return this.domManip(arguments, true, function( elem ) {
5965 null 	before: function() {
5966 null 		return this.domManip( arguments, false, function( elem ) {
5973 null 	after: function() {
5974 null 		return this.domManip( arguments, false, function( elem ) {
5982 null 	remove: function( selector, keepData ) {
6004 null 	empty: function() {
6029 null 	clone: function( dataAndEvents, deepDataAndEvents ) {
6033 null 		return this.map( function () {
6038 null 	html: function( value ) {
6039 null 		return jQuery.access( this, function( value ) {
6080 null 	replaceWith: function( value ) {
6089 null 		return this.domManip( [ value ], true, function( elem ) {
6100 null 	detach: function( selector ) {
6104 null 	domManip: function( args, table, callback ) {
6120 null 			return this.each(function( index ) {
6203 findOrAppend function findOrAppend( elem, tag ) {
6208 disableScript function disableScript( elem ) {
6213 restoreScript function restoreScript( elem ) {
6224 setGlobalEval function setGlobalEval( elems, refElements ) {
6232 cloneCopyEvent function cloneCopyEvent( src, dest ) {
6260 fixCloneNodeIssues function fixCloneNodeIssues( src, dest ) {
6333 null }, function( name, original ) {
6334 null 	jQuery.fn[ name ] = function( selector ) {
6353 getAll function getAll( context, tag ) {
6376 fixDefaultChecked function fixDefaultChecked( elem ) {
6383 null 	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
6438 null 	buildFragment: function( elems, context, scripts, selection ) {
6565 null 	cleanData: function( elems, /* internal */ acceptData ) {
6641 vendorPropName function vendorPropName( style, name ) {
6663 isHidden function isHidden( elem, el ) {
6670 showHide function showHide( elements, show ) {
6725 null 	css: function( name, value ) {
6726 null 		return jQuery.access( this, function( elem, name, value ) {
6747 null 	show: function() {
6750 null 	hide: function() {
6753 null 	toggle: function( state ) {
6756 null 		return this.each(function() {
6771 null 			get: function( elem, computed ) {
6802 null 	style: function( elem, name, value, extra ) {
6867 null 	css: function( elem, name, extra, styles ) {
6902 null 	swap: function( elem, options, callback, args ) {
6926 null 	getStyles = function( elem ) {
6930 null 	curCSS = function( elem, name, _computed ) {
6969 null 	getStyles = function( elem ) {
6973 null 	curCSS = function( elem, name, _computed ) {
7017 setPositiveNumber function setPositiveNumber( elem, value, subtract ) {
7025 augmentWidthOrHeight function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
7064 getWidthOrHeight function getWidthOrHeight( elem, name, extra ) {
7108 css_defaultDisplay function css_defaultDisplay( nodeName ) {
7140 actualDisplay function actualDisplay( name, doc ) {
7147 null jQuery.each([ "height", "width" ], function( i, name ) {
7149 null 		get: function( elem, computed, extra ) {
7154 null 					jQuery.swap( elem, cssShow, function() {
7161 null 		set: function( elem, value, extra ) {
7178 null 		get: function( elem, computed ) {
7185 null 		set: function( elem, value ) {
7222 null jQuery(function() {
7225 null 			get: function( elem, computed ) {
7240 null 		jQuery.each( [ "top", "left" ], function( i, prop ) {
7242 null 				get: function( elem, computed ) {
7258 null 	jQuery.expr.filters.hidden = function( elem ) {
7265 null 	jQuery.expr.filters.visible = function( elem ) {
7275 null }, function( prefix, suffix ) {
7277 null 		expand: function( value ) {
7304 null 	serialize: function() {
7307 null 	serializeArray: function() {
7308 null 		return this.map(function(){
7313 null 		.filter(function(){
7320 null 		.map(function( i, elem ){
7326 null 					jQuery.map( val, function( val ){
7336 null jQuery.param = function( a, traditional ) {
7339 null 		add = function( key, value ) {
7353 null 		jQuery.each( a, function() {
7369 buildParams function buildParams( prefix, obj, traditional, add ) {
7374 null 		jQuery.each( obj, function( i, v ) {
7398 null 	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {
7401 null 	jQuery.fn[ name ] = function( data, fn ) {
7408 null jQuery.fn.hover = function( fnOver, fnOut ) {
7467 addToPrefiltersOrTransports function addToPrefiltersOrTransports( structure ) {
7470 null 	return function( dataTypeExpression, func ) {
7499 inspectPrefiltersOrTransports function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {
7504 inspect 	function inspect( dataType ) {
7507 null 		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
7526 ajaxExtend function ajaxExtend( target, src ) {
7542 null jQuery.fn.load = function( url, params, callback ) {
7577 null 		}).done(function( responseText ) {
7591 null 		}).complete( callback && function( jqXHR, status ) {
7600 null jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ){
7601 null 	jQuery.fn[ type ] = function( fn ){
7606 null jQuery.each( [ "get", "post" ], function( i, method ) {
7607 null 	jQuery[ method ] = function( url, data, callback, type ) {
7703 null 	ajaxSetup: function( target, settings ) {
7717 null 	ajax: function( url, options ) {
7770 null 				getResponseHeader: function( key ) {
7785 null 				getAllResponseHeaders: function() {
7790 null 				setRequestHeader: function( name, value ) {
7800 null 				overrideMimeType: function( type ) {
7808 null 				statusCode: function( map ) {
7825 null 				abort: function( statusText ) {
7972 null 				timeoutTimer = setTimeout(function() {
7992 done 		function done( status, nativeStatusText, responses, headers ) {
8104 null 	getScript: function( url, callback ) {
8108 null 	getJSON: function( url, data, callback ) {
8118 ajaxHandleResponses function ajaxHandleResponses( s, jqXHR, responses ) {
8179 ajaxConvert function ajaxConvert( s, response ) {
8271 null 		"text script": function( text ) {
8279 null jQuery.ajaxPrefilter( "script", function( s ) {
8290 null jQuery.ajaxTransport( "script", function(s) {
8300 null 			send: function( _, callback ) {
8313 null 				script.onload = script.onreadystatechange = function( _, isAbort ) {
8340 null 			abort: function() {
8354 null 	jsonpCallback: function() {
8362 null jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {
8386 null 		s.converters["script json"] = function() {
8398 null 		window[ callbackName ] = function() {
8403 null 		jqXHR.always(function() {
8431 null 	xhrOnUnloadAbort = window.ActiveXObject && function() {
8440 createStandardXHR function createStandardXHR() {
8446 createActiveXHR function createActiveXHR() {
8461 null 	function() {
8475 null 	jQuery.ajaxTransport(function( s ) {
8482 null 				send: function( headers, complete ) {
8530 null 					callback = function( _, isAbort ) {
8626 null 				abort: function() {
8641 null 		"*": [function( prop, value ) {
8685 createFxNow function createFxNow() {
8686 null 	setTimeout(function() {
8692 createTweens function createTweens( animation, props ) {
8693 null 	jQuery.each( props, function( prop, value ) {
8707 Animation function Animation( elem, properties, options ) {
8712 null 		deferred = jQuery.Deferred().always( function() {
8716 null 		tick = function() {
8750 null 			createTween: function( prop, end ) {
8756 null 			stop: function( gotoEnd ) {
8811 propFilter function propFilter( props, specialEasing ) {
8850 null 	tweener: function( props, callback ) {
8869 null 	prefilter: function( callback, prepend ) {
8878 defaultPrefilter function defaultPrefilter( elem, props, opts ) {
8895 null 			hooks.empty.fire = function() {
8903 null 		anim.always(function() {
8906 null 			anim.always(function() {
8942 null 			anim.always(function() {
8978 null 			anim.done(function() {
8982 null 		anim.done(function() {
9005 Tween function Tween( elem, options, prop, end, easing ) {
9012 null 	init: function( elem, options, prop, end, easing, unit ) {
9021 null 	cur: function() {
9028 null 	run: function( percent ) {
9058 null 		get: function( tween ) {
9074 null 		set: function( tween ) {
9092 null 	set: function( tween ) {
9099 null jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
9101 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9109 null 	fadeTo: function( speed, to, easing, callback ) {
9117 null 	animate: function( prop, speed, easing, callback ) {
9120 null 			doAnimation = function() {
9123 null 				doAnimation.finish = function() {
9137 null 	stop: function( type, clearQueue, gotoEnd ) {
9138 null 		var stopQueue = function( hooks ) {
9153 null 		return this.each(function() {
9187 null 	finish: function( type ) {
9191 null 		return this.each(function() {
9231 genFx function genFx( type, includeWidth ) {
9259 null }, function( name, props ) {
9260 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9265 null jQuery.speed = function( speed, easing, fn ) {
9284 null 	opt.complete = function() {
9298 null 	linear: function( p ) {
9301 null 	swing: function( p ) {
9308 null jQuery.fx.tick = function() {
9329 null jQuery.fx.timer = function( timer ) {
9337 null jQuery.fx.start = function() {
9343 null jQuery.fx.stop = function() {
9359 null 	jQuery.expr.filters.animated = function( elem ) {
9360 null 		return jQuery.grep(jQuery.timers, function( fn ) {
9365 null jQuery.fn.offset = function( options ) {
9369 null 			this.each(function( i ) {
9404 null 	setOffset: function( elem, options, i ) {
9451 null 	position: function() {
9488 null 	offsetParent: function() {
9489 null 		return this.map(function() {
9501 null jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
9504 null 	jQuery.fn[ method ] = function( val ) {
9505 null 		return jQuery.access( this, function( elem, method, val ) {
9527 getWindow function getWindow( elem ) {
9535 null jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
9536 null 	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
9538 null 		jQuery.fn[ funcName ] = function( margin, value ) {
9542 null 			return jQuery.access( this, function( elem, type, value ) {
9595 null 	define( "jquery", [], function () { return jQuery; } );
5 fA  * Includes Sizzle.js
19 fB // Support: Firefox 18+
33 fC 	document = window.document,
44 fD 
5 fA  * Includes Sizzle.js
19 fB // Support: Firefox 18+
33 fC 	document = window.document,
44 fD 
5 fA  * Includes Sizzle.js
19 fB // Support: Firefox 18+
33 fC 	document = window.document,
44 fD 
5 fA  * Includes Sizzle.js
19 fB // Support: Firefox 18+
33 fC 	document = window.document,
44 fD 
2 null  * jQuery JavaScript Library v1.9.1
2 null  * jQuery JavaScript Library v1.9.1
2 yell  * jQuery JavaScript Library v1.9.1
2 null  * jQuery JavaScript Library v1.9.1
2 null  * jQuery JavaScript Library v1.9.1
2 null  * jQuery JavaScript Library v1.9.1
1 getElements /*!
1 isPrime /*!
1 isPrime /*!
3 null  * http://jquery.com/
1 katana /*!
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
2 fn  * jQuery JavaScript Library v1.9.1
1 add /*!
1 loop /*!
6 null  * http://sizzlejs.com/
1 Ninja /*!
1 Ninja /*!
5 null  * Includes Sizzle.js
1 Ninja /*!
2 null  * jQuery JavaScript Library v1.9.1
1 User /*!
1 User /*!
1 User /*!
1 User /*!
1 smallest /*!
4 largest  *
1 smallest /*!
4 largest  *
1 highest /*!
3 null  * http://jquery.com/
1 multiMax /*!
3 addNum  * http://jquery.com/
3 addNum  * http://jquery.com/
1 Ninja /*!
4 null  *
7 null  *
1 Ninja /*!
3 null  * http://jquery.com/
1 Ninja /*!
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
2 null  * jQuery JavaScript Library v1.9.1
1 Ninja /*!
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
1 Ninja /*!
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
1 Ninja /*!
1 Ninja /*!
1 null /*!
2 Ninja  * jQuery JavaScript Library v1.9.1
1 Person /*!
4 Ninja  *
2 null  * jQuery JavaScript Library v1.9.1
1 Person /*!
6 Me  * http://sizzlejs.com/
2 null  * jQuery JavaScript Library v1.9.1
9 null  * Released under the MIT license
18 null // you try to trace through "use strict" call chains. (#13335)
25 null 	// A central reference to the root jQuery(document)
2 null  * jQuery JavaScript Library v1.9.1
2 null  * jQuery JavaScript Library v1.9.1
9 null  * Released under the MIT license
1 makeNinja /*!
2 makeSamurai  * jQuery JavaScript Library v1.9.1
1 addMethod /*!
22 Ninjas 	// The deferred used on DOM ready
24 null 
9 null  * Released under the MIT license
27 null 
34 null 	location = window.location,
153 Game 						true
278 Board 		return this;
485 Cell 		} catch ( e ) {
493 rand 		var key;
497 getMouseObject 	},
500 getMouseButton 		var name;
296 null 		return this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );
309 null 	// For internal use only.
318 null 
322 null 		i = 1,
332 null 	}
335 null 	if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
342 null 		--i;
347 null 		if ( (options = arguments[ i ]) != null ) {
362 null 						clone = src && jQuery.isArray(src) ? src : [];
367 null 
371 null 				// Don't bring in undefined values
380 null 	return target;
385 null 		if ( window.$ === jQuery ) {
402 null 
415 null 		// Abort if there are pending holds or we're already ready
423 null 		}
431 null 		}
437 null 		if ( jQuery.fn.trigger ) {
446 null 		return jQuery.type(obj) === "function";
455 null 	},
458 null 		return !isNaN( parseFloat(obj) ) && isFinite( obj );
461 null 	type: function( obj ) {
464 null 		}
468 null 	},
471 null 		// Must be an Object.
474 null 		if ( !obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
477 null 
159 null 							// Properties of context are called as methods if possible
162 null 
169 null 
174 null 					elem = document.getElementById( match[2] );
185 null 						// Otherwise, we inject the element directly into the jQuery object
196 null 			} else if ( !context || context.jquery ) {
204 null 
208 null 			this.length = 1;
213 null 		} else if ( jQuery.isFunction( selector ) ) {
218 null 			this.selector = selector.selector;
223 null 	},
227 null 
232 null 	size: function() {
236 null 	toArray: function() {
240 null 	// Get the Nth element in the matched element set OR
243 null 		return num == null ?
254 null 	pushStack: function( elems ) {
260 null 		ret.prevObject = this;
264 null 		return ret;
256 null 		// Build a new jQuery matched element set
257 null 		var ret = jQuery.merge( this.constructor(), elems );
258 null 
137 null 
141 null 
17 clock // the stack via arguments.caller.callee and Firefox dies if
9 null  * Released under the MIT license
21 draw var
12 null  * Date: 2013-2-4
10 reset  * http://jquery.org/license
20 SetValue //"use strict";
46 Click 	core_deletedIds = [],
440 null 	},
442 null 	// See test/unit/core.js for details concerning isFunction.
452 null 
454 null 		return obj != null && obj == obj.window;
456 null 
458 null 		return !isNaN( parseFloat(obj) ) && isFinite( obj );
460 null 
462 null 		if ( obj == null ) {
466 null 			class2type[ core_toString.call(obj) ] || "object" :
468 null 	},
470 null 	isPlainObject: function( obj ) {
472 null 		// Because of IE, we also have to check the presence of the constructor property.
474 null 		if ( !obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
476 null 		}
480 null 			if ( obj.constructor &&
482 null 				!core_hasOwn.call(obj.constructor.prototype, "isPrototypeOf") ) {
484 null 			}
486 null 			// IE8,9 Will throw exceptions on certain host objects #9897
488 null 		}
490 null 		// Own properties are enumerated firstly, so to speed up,
494 null 		for ( key in obj ) {}
496 null 		return key === undefined || core_hasOwn.call( obj, key );
498 null 
500 null 		var name;
502 null 			return false;
504 null 		return true;
508 null 		throw new Error( msg );
510 null 
512 null 	// context (optional): If specified, the fragment will be created in this context, defaults to document
514 null 	parseHTML: function( data, context, keepScripts ) {
516 null 			return null;
518 null 		if ( typeof context === "boolean" ) {
522 null 		context = context || document;
524 null 		var parsed = rsingleTag.exec( data ),
526 null 
528 null 		if ( parsed ) {
530 null 		}
532 null 		parsed = jQuery.buildFragment( [ data ], context, scripts );
34 ElementById 	location = window.location,
39 Init 	// Map over the $ in case of overwrite
88 Resize 	// Matches dashed string for camelizing
92 DealCards 
119 Back jQuery.fn = jQuery.prototype = {
132 Replay 		// Handle HTML strings
145 GetPile 				// HANDLE: $(html) -> $(array)
152 MouseDown 						context && context.nodeType ? context.ownerDocument || context : document,
213 Select 		} else if ( jQuery.isFunction( selector ) ) {
238 CanAutoRemove 	},
265 AutoRemove 	},
288 Timer 
292 MakeMove 
314 Move };
338 RefreshCol 
430 RefreshScreen 			return;
506 ShowHelp 
517 NetscapeMouseDown 		}
14 null (function( window, undefined ) {
60 null 	jQuery = function( selector, context ) {
94 null 	fcamelCase = function( all, letter ) {
99 null 	completed = function( event ) {
108 null 	detach = function() {
124 null 	init: function( selector, context, rootjQuery ) {
232 null 	size: function() {
236 null 	toArray: function() {
242 null 	get: function( num ) {
254 null 	pushStack: function( elems ) {
270 null 	each: function( callback, args ) {
274 null 	ready: function( fn ) {
281 null 	slice: function() {
285 null 	first: function() {
289 null 	last: function() {
293 null 	eq: function( i ) {
299 null 	map: function( callback ) {
300 null 		return this.pushStack( jQuery.map(this, function( elem, i ) {
305 null 	end: function() {
319 null jQuery.extend = jQuery.fn.extend = function() {
384 null 	noConflict: function( deep ) {
404 null 	holdReady: function( hold ) {
413 null 	ready: function( wait ) {
445 null 	isFunction: function( obj ) {
449 null 	isArray: Array.isArray || function( obj ) {
453 null 	isWindow: function( obj ) {
457 null 	isNumeric: function( obj ) {
461 null 	type: function( obj ) {
470 null 	isPlainObject: function( obj ) {
499 null 	isEmptyObject: function( obj ) {
507 null 	error: function( msg ) {
514 null 	parseHTML: function( data, context, keepScripts ) {
539 null 	parseJSON: function( data ) {
570 null 	parseXML: function( data ) {
593 null 	noop: function() {},
598 null 	globalEval: function( data ) {
603 null 			( window.execScript || function( data ) {
611 null 	camelCase: function( string ) {
615 null 	nodeName: function( elem, name ) {
620 null 	each: function( obj, callback, args ) {
671 null 		function( text ) {
678 null 		function( text ) {
685 null 	makeArray: function( arr, results ) {
702 null 	inArray: function( elem, arr, i ) {
724 null 	merge: function( first, second ) {
744 null 	grep: function( elems, callback, inv ) {
764 null 	map: function( elems, callback, arg ) {
801 null 	proxy: function( fn, context ) {
818 null 		proxy = function() {
830 null 	access: function( elems, fn, key, value, chainable, emptyGet, raw ) {
859 null 					fn = function( elem, key, value ) {
881 null 	now: function() {
886 null jQuery.ready.promise = function( obj ) {
923 doScrollCheck 				(function doScrollCheck() {
948 null jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
952 isArraylike function isArraylike( obj ) {
975 createOptions function createOptions( options ) {
977 null 	jQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) {
1005 null jQuery.Callbacks = function( options ) {
1030 null 		fire = function( data ) {
1059 null 			add: function() {
1063 add 					(function add( args ) {
1064 null 						jQuery.each( args, function( _, arg ) {
1090 null 			remove: function() {
1092 null 					jQuery.each( arguments, function( _, arg ) {
1112 null 			has: function( fn ) {
1116 null 			empty: function() {
1121 null 			disable: function() {
1126 null 			disabled: function() {
1130 null 			lock: function() {
1138 null 			locked: function() {
1142 null 			fireWith: function( context, args ) {
1155 null 			fire: function() {
1160 null 			fired: function() {
1169 null 	Deferred: function( func ) {
1178 null 				state: function() {
1181 null 				always: function() {
1185 null 				then: function( /* fnDone, fnFail, fnProgress */ ) {
1187 null 					return jQuery.Deferred(function( newDefer ) {
1188 null 						jQuery.each( tuples, function( i, tuple ) {
1192 null 							deferred[ tuple[1] ](function() {
1209 null 				promise: function( obj ) {
1219 null 		jQuery.each( tuples, function( i, tuple ) {
1228 null 				list.add(function() {
1237 null 			deferred[ tuple[0] ] = function() {
1257 null 	when: function( subordinate /* , ..., subordinateN */ ) {
1269 null 			updateFunc = function( i, contexts, values ) {
1270 null 				return function( value ) {
1308 null jQuery.support = (function() {
1435 null 		div.attachEvent( "onclick", function() {
1455 null 	jQuery(function() {
1552 internalData function internalData( elem, name, data, pvt /* Internal Use Only */ ){
1646 internalRemoveData function internalRemoveData( elem, name, pvt ) {
1749 null 	hasData: function( elem ) {
1754 null 	data: function( elem, name, data ) {
1758 null 	removeData: function( elem, name ) {
1763 null 	_data: function( elem, name, data ) {
1767 null 	_removeData: function( elem, name ) {
1772 null 	acceptData: function( elem ) {
1786 null 	data: function( key, value ) {
1817 null 			return this.each(function() {
1822 null 		return jQuery.access( this, function( value ) {
1829 null 			this.each(function() {
1835 null 	removeData: function( key ) {
1836 null 		return this.each(function() {
1842 dataAttr function dataAttr( elem, key, data ) {
1874 isEmptyDataObject function isEmptyDataObject( obj ) {
1890 null 	queue: function( elem, type, data ) {
1909 null 	dequeue: function( elem, type ) {
1916 null 			next = function() {
1946 null 	_queueHooks: function( elem, type ) {
1949 null 			empty: jQuery.Callbacks("once memory").add(function() {
1958 null 	queue: function( type, data ) {
1973 null 			this.each(function() {
1984 null 	dequeue: function( type ) {
1985 null 		return this.each(function() {
1991 null 	delay: function( time, type ) {
1995 null 		return this.queue( type, function( next, hooks ) {
1997 null 			hooks.stop = function() {
2002 null 	clearQueue: function( type ) {
2007 null 	promise: function( type, obj ) {
2013 null 			resolve = function() {
2047 null 	attr: function( name, value ) {
2051 null 	removeAttr: function( name ) {
2052 null 		return this.each(function() {
2057 null 	prop: function( name, value ) {
2061 null 	removeProp: function( name ) {
2063 null 		return this.each(function() {
2072 null 	addClass: function( value ) {
2079 null 			return this.each(function( j ) {
2111 null 	removeClass: function( value ) {
2118 null 			return this.each(function( j ) {
2149 null 	toggleClass: function( value, stateVal ) {
2154 null 			return this.each(function( i ) {
2159 null 		return this.each(function() {
2190 null 	hasClass: function( selector ) {
2203 null 	val: function( value ) {
2229 null 		return this.each(function( i ) {
2249 null 				val = jQuery.map(val, function ( value ) {
2267 null 			get: function( elem ) {
2275 null 			get: function( elem ) {
2312 null 			set: function( elem, value ) {
2315 null 				jQuery(elem).find("option").each(function() {
2327 null 	attr: function( elem, name, value ) {
2381 null 	removeAttr: function( elem, value ) {
2413 null 			set: function( elem, value ) {
2443 null 	prop: function( elem, name, value ) {
2480 null 			get: function( elem ) {
2497 null 	get: function( elem, name ) {
2521 null 	set: function( elem, value, name ) {
2541 null 		get: function( elem, name ) {
2550 null 		set: function( elem, value, name ) {
2568 null 		get: function( elem, name ) {
2574 null 		set: function( elem, value, name ) {
2596 null 		set: function( elem, value, name ) {
2603 null 	jQuery.each([ "width", "height" ], function( i, name ) {
2605 null 			set: function( elem, value ) {
2619 null 	jQuery.each([ "href", "src", "width", "height" ], function( i, name ) {
2621 null 			get: function( elem ) {
2629 null 	jQuery.each([ "href", "src" ], function( i, name ) {
2631 null 			get: function( elem ) {
2640 null 		get: function( elem ) {
2646 null 		set: function( elem, value ) {
2656 null 		get: function( elem ) {
2679 null 	jQuery.each([ "radio", "checkbox" ], function() {
2681 null 			get: function( elem ) {
2688 null jQuery.each([ "radio", "checkbox" ], function() {
2690 null 		set: function( elem, value ) {
2703 returnTrue function returnTrue() {
2707 returnFalse function returnFalse() {
2719 null 	add: function( elem, types, handler, data, selector ) {
2747 null 			eventHandle = elemData.handle = function( e ) {
2829 null 	remove: function( elem, types, handler, selector, mappedTypes ) {
2902 null 	trigger: function( event, data, elem, onlyHandlers ) {
3036 null 	dispatch: function( event ) {
3095 null 	handlers: function( event, handlers ) {
3142 null 	fix: function( event ) {
3195 null 		filter: function( event, original ) {
3208 null 		filter: function( event, original ) {
3245 null 			trigger: function() {
3254 null 			trigger: function() {
3269 null 			trigger: function() {
3279 null 			postDispatch: function( event ) {
3289 null 	simulate: function( type, elem, event, bubble ) {
3313 null 	function( elem, type, handle ) {
3318 null 	function( elem, type, handle ) {
3333 null jQuery.Event = function( src, props ) {
3373 null 	preventDefault: function() {
3391 null 	stopPropagation: function() {
3407 null 	stopImmediatePropagation: function() {
3417 null }, function( orig, fix ) {
3422 null 		handle: function( event ) {
3444 null 		setup: function() {
3451 null 			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
3456 null 					jQuery.event.add( form, "submit._submit", function( event ) {
3465 null 		postDispatch: function( event ) {
3475 null 		teardown: function() {
3492 null 		setup: function() {
3499 null 					jQuery.event.add( this, "propertychange._change", function( event ) {
3504 null 					jQuery.event.add( this, "click._change", function( event ) {
3515 null 			jQuery.event.add( this, "beforeactivate._change", function( e ) {
3519 null 					jQuery.event.add( elem, "change._change", function( event ) {
3529 null 		handle: function( event ) {
3538 null 		teardown: function() {
3548 null 	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {
3552 null 			handler = function( event ) {
3557 null 			setup: function() {
3562 null 			teardown: function() {
3573 null 	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
3614 null 			fn = function( event ) {
3622 null 		return this.each( function() {
3626 null 	one: function( types, selector, data, fn ) {
3629 null 	off: function( types, selector, fn ) {
3656 null 		return this.each(function() {
3661 null 	bind: function( types, data, fn ) {
3664 null 	unbind: function( types, fn ) {
3668 null 	delegate: function( selector, types, data, fn ) {
3671 null 	undelegate: function( selector, types, fn ) {
3676 null 	trigger: function( type, data ) {
3677 null 		return this.each(function() {
3681 null 	triggerHandler: function( type, data ) {
3694 null (function( window, undefined ) {
3736 null 	indexOf = arr.indexOf || function( elem ) {
3812 null 	funescape = function( _, escaped ) {
3828 null 	slice = function( i ) {
3842 isNative function isNative( fn ) {
3852 createCache function createCache() {
3856 null 	return (cache = function( key, value ) {
3870 markFunction function markFunction( fn ) {
3879 assert function assert( fn ) {
3892 Sizzle function Sizzle( selector, context, results, seed ) {
4006 null isXML = Sizzle.isXML = function( elem ) {
4018 null setDocument = Sizzle.setDocument = function( node ) {
4034 null 	support.tagNameNoComments = assert(function( div ) {
4040 null 	support.attributes = assert(function( div ) {
4048 null 	support.getByClassName = assert(function( div ) {
4062 null 	support.getByName = assert(function( div ) {
4083 null 	Expr.attrHandle = assert(function( div ) {
4090 null 			"href": function( elem ) {
4093 null 			"type": function( elem ) {
4100 null 		Expr.find["ID"] = function( id, context ) {
4108 null 		Expr.filter["ID"] = function( id ) {
4110 null 			return function( elem ) {
4115 null 		Expr.find["ID"] = function( id, context ) {
4126 null 		Expr.filter["ID"] =  function( id ) {
4128 null 			return function( elem ) {
4137 null 		function( tag, context ) {
4142 null 		function( tag, context ) {
4162 null 	Expr.find["NAME"] = support.getByName && function( tag, context ) {
4169 null 	Expr.find["CLASS"] = support.getByClassName && function( className, context ) {
4188 null 		assert(function( div ) {
4209 null 		assert(function( div ) {
4236 null 		assert(function( div ) {
4255 null 		function( a, b ) {
4264 null 		function( a, b ) {
4277 null 	function( a, b ) {
4300 null 	function( a, b ) {
4360 null Sizzle.matches = function( expr, elements ) {
4364 null Sizzle.matchesSelector = function( elem, expr ) {
4391 null Sizzle.contains = function( context, elem ) {
4399 null Sizzle.attr = function( elem, name ) {
4421 null Sizzle.error = function( msg ) {
4426 null Sizzle.uniqueSort = function( results ) {
4450 siblingCheck function siblingCheck( a, b ) {
4472 createInputPseudo function createInputPseudo( type ) {
4473 null 	return function( elem ) {
4480 createButtonPseudo function createButtonPseudo( type ) {
4481 null 	return function( elem ) {
4488 createPositionalPseudo function createPositionalPseudo( fn ) {
4489 null 	return markFunction(function( argument ) {
4491 null 		return markFunction(function( seed, matches ) {
4510 null getText = Sizzle.getText = function( elem ) {
4560 null 		"ATTR": function( match ) {
4573 null 		"CHILD": function( match ) {
4605 null 		"PSEUDO": function( match ) {
4636 null 		"TAG": function( nodeName ) {
4638 null 				return function() { return true; };
4642 null 			return function( elem ) {
4647 null 		"CLASS": function( className ) {
4652 null 				classCache( className, function( elem ) {
4657 null 		"ATTR": function( name, operator, check ) {
4658 null 			return function( elem ) {
4681 null 		"CHILD": function( type, what, argument, first, last ) {
4689 null 				function( elem ) {
4693 null 				function( elem, context, xml ) {
4770 null 		"PSEUDO": function( pseudo, argument ) {
4790 null 					markFunction(function( seed, matches ) {
4799 null 					function( elem ) {
4810 null 		"not": markFunction(function( selector ) {
4819 null 				markFunction(function( seed, matches, context, xml ) {
4831 null 				function( elem, context, xml ) {
4838 null 		"has": markFunction(function( selector ) {
4839 null 			return function( elem ) {
4844 null 		"contains": markFunction(function( text ) {
4845 null 			return function( elem ) {
4857 null 		"lang": markFunction( function( lang ) {
4863 null 			return function( elem ) {
4879 null 		"target": function( elem ) {
4884 null 		"root": function( elem ) {
4888 null 		"focus": function( elem ) {
4893 null 		"enabled": function( elem ) {
4897 null 		"disabled": function( elem ) {
4901 null 		"checked": function( elem ) {
4908 null 		"selected": function( elem ) {
4919 null 		"empty": function( elem ) {
4933 null 		"parent": function( elem ) {
4938 null 		"header": function( elem ) {
4942 null 		"input": function( elem ) {
4946 null 		"button": function( elem ) {
4951 null 		"text": function( elem ) {
4961 null 		"first": createPositionalPseudo(function() {
4965 null 		"last": createPositionalPseudo(function( matchIndexes, length ) {
4969 null 		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
4973 null 		"even": createPositionalPseudo(function( matchIndexes, length ) {
4981 null 		"odd": createPositionalPseudo(function( matchIndexes, length ) {
4989 null 		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
4997 null 		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
5015 tokenize function tokenize( selector, parseOnly ) {
5082 toSelector function toSelector( tokens ) {
5092 addCombinator function addCombinator( matcher, combinator, base ) {
5099 null 		function( elem, context, xml ) {
5108 null 		function( elem, context, xml ) {
5142 elementMatcher function elementMatcher( matchers ) {
5144 null 		function( elem, context, xml ) {
5156 condense function condense( unmatched, map, filter, context, xml ) {
5177 setMatcher function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
5184 null 	return markFunction(function( seed, results, context, xml ) {
5270 matcherFromTokens function matcherFromTokens( tokens ) {
5278 null 		matchContext = addCombinator( function( elem ) {
5281 null 		matchAnyContext = addCombinator( function( elem ) {
5284 null 		matchers = [ function( elem, context, xml ) {
5322 matcherFromGroupMatchers function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
5327 null 		superMatcher = function( seed, context, xml, results, expandContext ) {
5423 null compile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {
5450 multipleContexts function multipleContexts( selector, contexts, results ) {
5459 select function select( selector, context, results, seed ) {
5528 setFilters function setFilters() {}
5560 null 	find: function( selector ) {
5566 null 			return this.pushStack( jQuery( selector ).filter(function() {
5586 null 	has: function( target ) {
5591 null 		return this.filter(function() {
5600 null 	not: function( selector ) {
5604 null 	filter: function( selector ) {
5608 null 	is: function( selector ) {
5619 null 	closest: function( selectors, context ) {
5645 null 	index: function( elem ) {
5663 null 	add: function( selector, context ) {
5672 null 	addBack: function( selector ) {
5681 sibling function sibling( cur, dir ) {
5690 null 	parent: function( elem ) {
5694 null 	parents: function( elem ) {
5697 null 	parentsUntil: function( elem, i, until ) {
5700 null 	next: function( elem ) {
5703 null 	prev: function( elem ) {
5706 null 	nextAll: function( elem ) {
5709 null 	prevAll: function( elem ) {
5712 null 	nextUntil: function( elem, i, until ) {
5715 null 	prevUntil: function( elem, i, until ) {
5718 null 	siblings: function( elem ) {
5721 null 	children: function( elem ) {
5724 null 	contents: function( elem ) {
5729 null }, function( name, fn ) {
5730 null 	jQuery.fn[ name ] = function( until, selector ) {
5752 null 	filter: function( expr, elems, not ) {
5762 null 	dir: function( elem, dir, until ) {
5775 null 	sibling: function( n, elem ) {
5789 winnow function winnow( elements, qualifier, keep ) {
5796 null 		return jQuery.grep(elements, function( elem, i ) {
5802 null 		return jQuery.grep(elements, function( elem ) {
5807 null 		var filtered = jQuery.grep(elements, function( elem ) {
5818 null 	return jQuery.grep(elements, function( elem ) {
5822 createSafeFragment function createSafeFragment( document ) {
5876 null 	text: function( value ) {
5877 null 		return jQuery.access( this, function( value ) {
5884 null 	wrapAll: function( html ) {
5886 null 			return this.each(function(i) {
5899 null 			wrap.map(function() {
5913 null 	wrapInner: function( html ) {
5915 null 			return this.each(function(i) {
5920 null 		return this.each(function() {
5933 null 	wrap: function( html ) {
5936 null 		return this.each(function(i) {
5941 null 	unwrap: function() {
5942 null 		return this.parent().each(function() {
5949 null 	append: function() {
5950 null 		return this.domManip(arguments, true, function( elem ) {
5957 null 	prepend: function() {
5958 null 		return this.domManip(arguments, true, function( elem ) {
5965 null 	before: function() {
5966 null 		return this.domManip( arguments, false, function( elem ) {
5973 null 	after: function() {
5974 null 		return this.domManip( arguments, false, function( elem ) {
5982 null 	remove: function( selector, keepData ) {
6004 null 	empty: function() {
6029 null 	clone: function( dataAndEvents, deepDataAndEvents ) {
6033 null 		return this.map( function () {
6038 null 	html: function( value ) {
6039 null 		return jQuery.access( this, function( value ) {
6080 null 	replaceWith: function( value ) {
6089 null 		return this.domManip( [ value ], true, function( elem ) {
6100 null 	detach: function( selector ) {
6104 null 	domManip: function( args, table, callback ) {
6120 null 			return this.each(function( index ) {
6203 findOrAppend function findOrAppend( elem, tag ) {
6208 disableScript function disableScript( elem ) {
6213 restoreScript function restoreScript( elem ) {
6224 setGlobalEval function setGlobalEval( elems, refElements ) {
6232 cloneCopyEvent function cloneCopyEvent( src, dest ) {
6260 fixCloneNodeIssues function fixCloneNodeIssues( src, dest ) {
6333 null }, function( name, original ) {
6334 null 	jQuery.fn[ name ] = function( selector ) {
6353 getAll function getAll( context, tag ) {
6376 fixDefaultChecked function fixDefaultChecked( elem ) {
6383 null 	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
6438 null 	buildFragment: function( elems, context, scripts, selection ) {
6565 null 	cleanData: function( elems, /* internal */ acceptData ) {
6641 vendorPropName function vendorPropName( style, name ) {
6663 isHidden function isHidden( elem, el ) {
6670 showHide function showHide( elements, show ) {
6725 null 	css: function( name, value ) {
6726 null 		return jQuery.access( this, function( elem, name, value ) {
6747 null 	show: function() {
6750 null 	hide: function() {
6753 null 	toggle: function( state ) {
6756 null 		return this.each(function() {
6771 null 			get: function( elem, computed ) {
6802 null 	style: function( elem, name, value, extra ) {
6867 null 	css: function( elem, name, extra, styles ) {
6902 null 	swap: function( elem, options, callback, args ) {
6926 null 	getStyles = function( elem ) {
6930 null 	curCSS = function( elem, name, _computed ) {
6969 null 	getStyles = function( elem ) {
6973 null 	curCSS = function( elem, name, _computed ) {
7017 setPositiveNumber function setPositiveNumber( elem, value, subtract ) {
7025 augmentWidthOrHeight function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
7064 getWidthOrHeight function getWidthOrHeight( elem, name, extra ) {
7108 css_defaultDisplay function css_defaultDisplay( nodeName ) {
7140 actualDisplay function actualDisplay( name, doc ) {
7147 null jQuery.each([ "height", "width" ], function( i, name ) {
7149 null 		get: function( elem, computed, extra ) {
7154 null 					jQuery.swap( elem, cssShow, function() {
7161 null 		set: function( elem, value, extra ) {
7178 null 		get: function( elem, computed ) {
7185 null 		set: function( elem, value ) {
7222 null jQuery(function() {
7225 null 			get: function( elem, computed ) {
7240 null 		jQuery.each( [ "top", "left" ], function( i, prop ) {
7242 null 				get: function( elem, computed ) {
7258 null 	jQuery.expr.filters.hidden = function( elem ) {
7265 null 	jQuery.expr.filters.visible = function( elem ) {
7275 null }, function( prefix, suffix ) {
7277 null 		expand: function( value ) {
7304 null 	serialize: function() {
7307 null 	serializeArray: function() {
7308 null 		return this.map(function(){
7313 null 		.filter(function(){
7320 null 		.map(function( i, elem ){
7326 null 					jQuery.map( val, function( val ){
7336 null jQuery.param = function( a, traditional ) {
7339 null 		add = function( key, value ) {
7353 null 		jQuery.each( a, function() {
7369 buildParams function buildParams( prefix, obj, traditional, add ) {
7374 null 		jQuery.each( obj, function( i, v ) {
7398 null 	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {
7401 null 	jQuery.fn[ name ] = function( data, fn ) {
7408 null jQuery.fn.hover = function( fnOver, fnOut ) {
7467 addToPrefiltersOrTransports function addToPrefiltersOrTransports( structure ) {
7470 null 	return function( dataTypeExpression, func ) {
7499 inspectPrefiltersOrTransports function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {
7504 inspect 	function inspect( dataType ) {
7507 null 		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
7526 ajaxExtend function ajaxExtend( target, src ) {
7542 null jQuery.fn.load = function( url, params, callback ) {
7577 null 		}).done(function( responseText ) {
7591 null 		}).complete( callback && function( jqXHR, status ) {
7600 null jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ){
7601 null 	jQuery.fn[ type ] = function( fn ){
7606 null jQuery.each( [ "get", "post" ], function( i, method ) {
7607 null 	jQuery[ method ] = function( url, data, callback, type ) {
7703 null 	ajaxSetup: function( target, settings ) {
7717 null 	ajax: function( url, options ) {
7770 null 				getResponseHeader: function( key ) {
7785 null 				getAllResponseHeaders: function() {
7790 null 				setRequestHeader: function( name, value ) {
7800 null 				overrideMimeType: function( type ) {
7808 null 				statusCode: function( map ) {
7825 null 				abort: function( statusText ) {
7972 null 				timeoutTimer = setTimeout(function() {
7992 done 		function done( status, nativeStatusText, responses, headers ) {
8104 null 	getScript: function( url, callback ) {
8108 null 	getJSON: function( url, data, callback ) {
8118 ajaxHandleResponses function ajaxHandleResponses( s, jqXHR, responses ) {
8179 ajaxConvert function ajaxConvert( s, response ) {
8271 null 		"text script": function( text ) {
8279 null jQuery.ajaxPrefilter( "script", function( s ) {
8290 null jQuery.ajaxTransport( "script", function(s) {
8300 null 			send: function( _, callback ) {
8313 null 				script.onload = script.onreadystatechange = function( _, isAbort ) {
8340 null 			abort: function() {
8354 null 	jsonpCallback: function() {
8362 null jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {
8386 null 		s.converters["script json"] = function() {
8398 null 		window[ callbackName ] = function() {
8403 null 		jqXHR.always(function() {
8431 null 	xhrOnUnloadAbort = window.ActiveXObject && function() {
8440 createStandardXHR function createStandardXHR() {
8446 createActiveXHR function createActiveXHR() {
8461 null 	function() {
8475 null 	jQuery.ajaxTransport(function( s ) {
8482 null 				send: function( headers, complete ) {
8530 null 					callback = function( _, isAbort ) {
8626 null 				abort: function() {
8641 null 		"*": [function( prop, value ) {
8685 createFxNow function createFxNow() {
8686 null 	setTimeout(function() {
8692 createTweens function createTweens( animation, props ) {
8693 null 	jQuery.each( props, function( prop, value ) {
8707 Animation function Animation( elem, properties, options ) {
8712 null 		deferred = jQuery.Deferred().always( function() {
8716 null 		tick = function() {
8750 null 			createTween: function( prop, end ) {
8756 null 			stop: function( gotoEnd ) {
8811 propFilter function propFilter( props, specialEasing ) {
8850 null 	tweener: function( props, callback ) {
8869 null 	prefilter: function( callback, prepend ) {
8878 defaultPrefilter function defaultPrefilter( elem, props, opts ) {
8895 null 			hooks.empty.fire = function() {
8903 null 		anim.always(function() {
8906 null 			anim.always(function() {
8942 null 			anim.always(function() {
8978 null 			anim.done(function() {
8982 null 		anim.done(function() {
9005 Tween function Tween( elem, options, prop, end, easing ) {
9012 null 	init: function( elem, options, prop, end, easing, unit ) {
9021 null 	cur: function() {
9028 null 	run: function( percent ) {
9058 null 		get: function( tween ) {
9074 null 		set: function( tween ) {
9092 null 	set: function( tween ) {
9099 null jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
9101 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9109 null 	fadeTo: function( speed, to, easing, callback ) {
9117 null 	animate: function( prop, speed, easing, callback ) {
9120 null 			doAnimation = function() {
9123 null 				doAnimation.finish = function() {
9137 null 	stop: function( type, clearQueue, gotoEnd ) {
9138 null 		var stopQueue = function( hooks ) {
9153 null 		return this.each(function() {
9187 null 	finish: function( type ) {
9191 null 		return this.each(function() {
9231 genFx function genFx( type, includeWidth ) {
9259 null }, function( name, props ) {
9260 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9265 null jQuery.speed = function( speed, easing, fn ) {
9284 null 	opt.complete = function() {
9298 null 	linear: function( p ) {
9301 null 	swing: function( p ) {
9308 null jQuery.fx.tick = function() {
9329 null jQuery.fx.timer = function( timer ) {
9337 null jQuery.fx.start = function() {
9343 null jQuery.fx.stop = function() {
9359 null 	jQuery.expr.filters.animated = function( elem ) {
9360 null 		return jQuery.grep(jQuery.timers, function( fn ) {
9365 null jQuery.fn.offset = function( options ) {
9369 null 			this.each(function( i ) {
9404 null 	setOffset: function( elem, options, i ) {
9451 null 	position: function() {
9488 null 	offsetParent: function() {
9489 null 		return this.map(function() {
9501 null jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
9504 null 	jQuery.fn[ method ] = function( val ) {
9505 null 		return jQuery.access( this, function( elem, method, val ) {
9527 getWindow function getWindow( elem ) {
9535 null jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
9536 null 	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
9538 null 		jQuery.fn[ funcName ] = function( margin, value ) {
9542 null 			return jQuery.access( this, function( elem, type, value ) {
9595 null 	define( "jquery", [], function () { return jQuery; } );
3 input  * http://jquery.com/
9 form  * Released under the MIT license
13 onSubmit  */
17 checkform // the stack via arguments.caller.callee and Firefox dies if
22 main 	// The deferred used on DOM ready
5 A  * Includes Sizzle.js
11 B  *
15 C 
6 A  * http://sizzlejs.com/
15 B 
19 C // Support: Firefox 18+
3 A  * http://jquery.com/
9 B  * Released under the MIT license
2 main  * jQuery JavaScript Library v1.9.1
3 main  * http://jquery.com/
1 main /*!
3 main  * http://jquery.com/
3 main  * http://jquery.com/
1 f /*!
2 g  * jQuery JavaScript Library v1.9.1
1 f /*!
2 g  * jQuery JavaScript Library v1.9.1
3 f  * http://jquery.com/
3 f  * http://jquery.com/
12 a  * Date: 2013-2-4
17 f // the stack via arguments.caller.callee and Firefox dies if
4 A  *
8 main  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
4 A  *
8 main  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
3 f  * http://jquery.com/
5 h  * Includes Sizzle.js
7 A  *
11 main  *
3 f  * http://jquery.com/
5 h  * Includes Sizzle.js
7 A  *
11 main  *
1 f /*!
3 f  * http://jquery.com/
3 f  * http://jquery.com/
3 f  * http://jquery.com/
7 main  *
5 f  * Includes Sizzle.js
9 main  * Released under the MIT license
4 main  *
1 A /*!
5 f  * Includes Sizzle.js
9 main  * Released under the MIT license
3 A  * http://jquery.com/
7 f  *
11 main  *
4 A  *
8 f  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
12 main  * Date: 2013-2-4
2 A  * jQuery JavaScript Library v1.9.1
8 f  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
12 B  * Date: 2013-2-4
16 main // Can't do this because several apps including ASP.NET trace
2 outer  * jQuery JavaScript Library v1.9.1
5 inner1  * Includes Sizzle.js
9 null  * Released under the MIT license
2 testSwitch  * jQuery JavaScript Library v1.9.1
24 testIfConvertedSwitch 
46 testDoWhile 	core_deletedIds = [],
59 testWhile 	// Define a local copy of jQuery
72 testFor 	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
84 testReturn 	rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g,
91 testDeadLoop 
2 outer  * jQuery JavaScript Library v1.9.1
6 inner  * http://sizzlejs.com/
14 inner2 (function( window, undefined ) {
19 inner3 // Support: Firefox 18+
33 level1 	document = window.document,
31 indirect 
35 level5 
40 level4 	_$ = window.$,
44 level3 
51 level2 	core_concat = core_deletedIds.concat,
2 getOp  * jQuery JavaScript Library v1.9.1
6 plusNum  * http://sizzlejs.com/
1 testForIn /*!
10 testForIn1  * http://jquery.org/license
11 testForIn2  *
2 Polygon  * jQuery JavaScript Library v1.9.1
9 objectMasquerading  * Released under the MIT license
24 sharedClassObject 
11 Rectangle  *
5 shape  * Includes Sizzle.js
6 area  * http://sizzlejs.com/
18 area // you try to trace through "use strict" call chains. (#13335)
26 Rectangle 	rootjQuery,
30 area 	core_strundefined = typeof undefined,
2 null  * jQuery JavaScript Library v1.9.1
4 null  *
6 null  * http://sizzlejs.com/
2 objects_are_fun  * jQuery JavaScript Library v1.9.1
22 whatever 	// The deferred used on DOM ready
27 other 
31 something 
9 nothing  * Released under the MIT license
2 trivial  * jQuery JavaScript Library v1.9.1
11 silly  *
52 bad 	core_push = core_deletedIds.push,
74 rubbish 	// A simple way to check for HTML strings
23 weirder 	readyList,
35 stranger 
48 fib 	core_version = "1.9.1",
7 inc  *
2 trivial  * jQuery JavaScript Library v1.9.1
11 silly  *
23 weirder 	readyList,
35 stranger 
50 fib 	// Save a reference to some core methods
54 bad 	core_indexOf = core_deletedIds.indexOf,
76 rubbish 	// Strict HTML recognition (#11290: must start with <)
2 targetOne  * jQuery JavaScript Library v1.9.1
6 targetTwo  * http://sizzlejs.com/
10 tryCatch  * http://jquery.org/license
21 tryFinally var
33 tryFinallyLoop 	document = window.document,
46 tryCatchFinally 	core_deletedIds = [],
59 tryCatchFinally2 	// Define a local copy of jQuery
75 two 	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
79 three 	// Match a standalone tag
1 Obj /*!
11 tester1  *
4 set  *
6 get  * http://sizzlejs.com/
15 tester2 
1 a /*!
10 x  * http://jquery.org/license
14 y (function( window, undefined ) {
18 z // you try to trace through "use strict" call chains. (#13335)
22 wrong 	// The deferred used on DOM ready
1 P /*!
2 S  * jQuery JavaScript Library v1.9.1
14 null (function( window, undefined ) {
20 null //"use strict";
1 fooo /*!
1 null /*!
1 f /*!
5 null  * Includes Sizzle.js
1 foo /*!
1 f1 /*!
6 f2  * http://sizzlejs.com/
11 f3  *
16 f4 // Can't do this because several apps including ASP.NET trace
21 f5 var
26 f6 	rootjQuery,
31 f7 
34 g 	location = window.location,
1 person /*!
6 test  * http://sizzlejs.com/
1 person /*!
10 foo  * http://jquery.org/license
12 qwerty  * Date: 2013-2-4
3 Error  * http://jquery.com/
7 kast  *
1 foo /*!
4 foo2  *
7 foo3  *
11 foo4  *
36 bar 	// Map over jQuery in case of overwrite
3 MyError  * http://jquery.com/
7 dummy  *
11 level1  *
15 level2 
19 et // Support: Firefox 18+
1 f /*!
1 foo /*!
1 bar1 /*!
5 bar2  * Includes Sizzle.js
4 f  *
8 gg  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
1 f /*!
2 null  * jQuery JavaScript Library v1.9.1
3 null  * http://jquery.com/
1 f /*!
2 null  * jQuery JavaScript Library v1.9.1
1 f /*!
3 null  * http://jquery.com/
1 f /*!
3 g  * http://jquery.com/
6 Qwe  * http://sizzlejs.com/
1 foo /*!
5 bar  * Includes Sizzle.js
9 baz  * Released under the MIT license
3 q  * http://jquery.com/
1 foo /*!
3 foo  * http://jquery.com/
5 bar  * Includes Sizzle.js
3 f  * http://jquery.com/
1 null /*!
2 q  * jQuery JavaScript Library v1.9.1
2 Polygon  * jQuery JavaScript Library v1.9.1
6 Rectangle  * http://sizzlejs.com/
11 objectMasquerading  *
15 Rectangle2 
18 sharedClassObject // you try to trace through "use strict" call chains. (#13335)
3 null  * http://jquery.com/
2 Polygon  * jQuery JavaScript Library v1.9.1
6 objectMasquerading  * http://sizzlejs.com/
17 sharedClassObject // the stack via arguments.caller.callee and Firefox dies if
8 Rectangle  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
19 Rectangle // Support: Firefox 18+
23 area 	readyList,
1 Polygon /*!
3 objectMasquerading  * http://jquery.com/
4 Rectangle  *
5 f  * Includes Sizzle.js
2 f1  * jQuery JavaScript Library v1.9.1
3 f2  * http://jquery.com/
7 f3  *
13 indirect  */
1 qw /*!
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
12 null  * Date: 2013-2-4
1 f /*!
1 yell /*!
23 id 	readyList,
1 f /*!
16 r // Can't do this because several apps including ASP.NET trace
34 F 	location = window.location,
39 F2 	// Map over the $ in case of overwrite
7 X  *
10 f  * http://jquery.org/license
3 f  * http://jquery.com/
1 null /*!
4 null  *
1 null /*!
2 ex  * jQuery JavaScript Library v1.9.1
16 f // Can't do this because several apps including ASP.NET trace
1 F /*!
3 foo  * http://jquery.com/
1 f /*!
3 f  * http://jquery.com/
1 Polygon /*!
4 Rectangle  *
1 g /*!
5 h  * Includes Sizzle.js
1 tak /*!
1 f /*!
1 g /*!
3 g  * http://jquery.com/
7 h  *
3 g  * http://jquery.com/
1 f /*!
8 g  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
13 h  */
1 f /*!
8 g  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
13 h  */
1 f /*!
8 g  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
13 h  */
10 null  * http://jquery.org/license
11 null  *
12 null  * Date: 2013-2-4
1 F /*!
1 product /*!
9 prod_dept  * Released under the MIT license
1 product /*!
9 prod_dept  * Released under the MIT license
1 f /*!
7 g  *
1 f /*!
5 null  * Includes Sizzle.js
1 empty /*!
3 recursive  * http://jquery.com/
1 fail /*!
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
7 g  *
7 null  *
7 f  *
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
1 A /*!
3 B  * http://jquery.com/
3 f1  * http://jquery.com/
4 f2  *
5 f3  * Includes Sizzle.js
6 f4  * http://sizzlejs.com/
7 f5  *
8 f6  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
9 f7  * Released under the MIT license
10 f8  * http://jquery.org/license
1 foo /*!
2 f  * jQuery JavaScript Library v1.9.1
3 f  * http://jquery.com/
9 g  * Released under the MIT license
1 f /*!
4 g  *
1 make /*!
1 doPermute /*!
1 null /*!
2 null  * jQuery JavaScript Library v1.9.1
1 g /*!
7 h  *
3 null  * http://jquery.com/
10 null  * http://jquery.org/license
3 f  * http://jquery.com/
3 f  * http://jquery.com/
4 null  *
4 null  *
9 null  * Released under the MIT license
14 null (function( window, undefined ) {
7 f  *
1 f1 /*!
2 f2  * jQuery JavaScript Library v1.9.1
3 f3  * http://jquery.com/
4 f4  *
1 make /*!
5 f  * Includes Sizzle.js
1 make /*!
5 f  * Includes Sizzle.js
1 null /*!
5 null  * Includes Sizzle.js
1 null /*!
5 null  * Includes Sizzle.js
1 recursive /*!
1 B /*!
3 time  * http://jquery.com/
3 f  * http://jquery.com/
2 f  * jQuery JavaScript Library v1.9.1
1 f1 /*!
4 f2  *
10 g1  * http://jquery.org/license
13 g2  */
1 aaaAAA /*!
2 aaaBBB  * jQuery JavaScript Library v1.9.1
4 foo  *
9 init  * Released under the MIT license
9 Cell  * Released under the MIT license
1 f /*!
8 g  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
1 f /*!
8 g  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
2 null  * jQuery JavaScript Library v1.9.1
1 highest /*!
5 makeArray  * Includes Sizzle.js
3 TowersDisk  * http://jquery.com/
7 towersPush  *
17 towersPop // the stack via arguments.caller.callee and Firefox dies if
27 towersMoveTop 
34 towersMove 	location = window.location,
48 towersBuild 	core_version = "1.9.1",
1 f /*!
7 g  *
8 x  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
25 f 	// A central reference to the root jQuery(document)
13 null  */
1 null /*!
3 null  * http://jquery.com/
15 null 
1 null /*!
3 null  * http://jquery.com/
15 null 
1 null /*!
6 null  * http://sizzlejs.com/
1 f /*!
1 f /*!
3 callback  * http://jquery.com/
4 null  *
3 W  * http://jquery.com/
11 callback  *
6 on  * http://sizzlejs.com/
12 null  * Date: 2013-2-4
34 null 	location = window.location,
35 null 
36 null 	// Map over jQuery in case of overwrite
4 f  *
4 f  *
5 f  * Includes Sizzle.js
17 g // the stack via arguments.caller.callee and Firefox dies if
3 Person  * http://jquery.com/
26 Singer 	rootjQuery,
53 Rockstar 	core_slice = core_deletedIds.slice,
7 null  *
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
10 null  * http://jquery.org/license
34 null 	location = window.location,
58 null 
2 g  * jQuery JavaScript Library v1.9.1
1 null /*!
3 null  * http://jquery.com/
4 null  *
2 f  * jQuery JavaScript Library v1.9.1
9 g  * Released under the MIT license
16 h // Can't do this because several apps including ASP.NET trace
1 Person /*!
7 Student  *
6 null  * http://sizzlejs.com/
2 testForIn1  * jQuery JavaScript Library v1.9.1
3 testForIn2  * http://jquery.com/
1 eachSimple /*!
12 eachWithCall  * Date: 2013-2-4
24 null 
32 null 	// Use the correct document accordingly with window argument (sandbox)
1 null /*!
6 null  * http://sizzlejs.com/
1 null /*!
1 null /*!
1 null /*!
1 f /*!
1 f /*!
1 f /*!
1 null /*!
1 null /*!
1 f /*!
1 id /*!
1 f /*!
1 f /*!
1 f /*!
1 null /*!
1 null /*!
1 null /*!
1 null /*!
1 f /*!
1 f /*!
1 f /*!
1 fooo /*!
1 f /*!
1 fooo /*!
1 fooo /*!
1 f /*!
5 null  * Includes Sizzle.js
1 f /*!
3 g  * http://jquery.com/
1 f /*!
3 g  * http://jquery.com/
1 f /*!
2 gg  * jQuery JavaScript Library v1.9.1
1 g /*!
1 f /*!
1 g /*!
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
1 f /*!
1 f /*!
1 f /*!
1 f /*!
1 PB /*!
7 g  *
1 null /*!
11 f  *
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
1 f /*!
1 f /*!
7 position_CM  *
10 CSlider  * http://jquery.org/license
1 null /*!
10 CSlider  * http://jquery.org/license
12 null  * Date: 2013-2-4
16 null // Can't do this because several apps including ASP.NET trace
26 null 	rootjQuery,
1 null /*!
10 null  * http://jquery.org/license
10 null  * http://jquery.org/license
7 Board  *
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
7 Board  *
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
9 null  * Released under the MIT license
1 null /*!
1 f /*!
5 g  * Includes Sizzle.js
1 tryFinallyLoop /*!
2 BigInteger  * jQuery JavaScript Library v1.9.1
8 bnpDAddOffset  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
10 CSlider  * http://jquery.org/license
12 null  * Date: 2013-2-4
16 null // Can't do this because several apps including ASP.NET trace
26 null 	rootjQuery,
1 null /*!
10 null  * http://jquery.org/license
9 f  * Released under the MIT license
9 f  * Released under the MIT license
3 input  * http://jquery.com/
9 form  * Released under the MIT license
13 onSubmit  */
17 checkform // the stack via arguments.caller.callee and Firefox dies if
22 main 	// The deferred used on DOM ready
14 null (function( window, undefined ) {
60 null 	jQuery = function( selector, context ) {
94 null 	fcamelCase = function( all, letter ) {
99 null 	completed = function( event ) {
108 null 	detach = function() {
124 null 	init: function( selector, context, rootjQuery ) {
232 null 	size: function() {
236 null 	toArray: function() {
242 null 	get: function( num ) {
254 null 	pushStack: function( elems ) {
270 null 	each: function( callback, args ) {
274 null 	ready: function( fn ) {
281 null 	slice: function() {
285 null 	first: function() {
289 null 	last: function() {
293 null 	eq: function( i ) {
299 null 	map: function( callback ) {
300 null 		return this.pushStack( jQuery.map(this, function( elem, i ) {
305 null 	end: function() {
319 null jQuery.extend = jQuery.fn.extend = function() {
384 null 	noConflict: function( deep ) {
404 null 	holdReady: function( hold ) {
413 null 	ready: function( wait ) {
445 null 	isFunction: function( obj ) {
449 null 	isArray: Array.isArray || function( obj ) {
453 null 	isWindow: function( obj ) {
457 null 	isNumeric: function( obj ) {
461 null 	type: function( obj ) {
470 null 	isPlainObject: function( obj ) {
499 null 	isEmptyObject: function( obj ) {
507 null 	error: function( msg ) {
514 null 	parseHTML: function( data, context, keepScripts ) {
539 null 	parseJSON: function( data ) {
570 null 	parseXML: function( data ) {
593 null 	noop: function() {},
598 null 	globalEval: function( data ) {
603 null 			( window.execScript || function( data ) {
611 null 	camelCase: function( string ) {
615 null 	nodeName: function( elem, name ) {
620 null 	each: function( obj, callback, args ) {
671 null 		function( text ) {
678 null 		function( text ) {
685 null 	makeArray: function( arr, results ) {
702 null 	inArray: function( elem, arr, i ) {
724 null 	merge: function( first, second ) {
744 null 	grep: function( elems, callback, inv ) {
764 null 	map: function( elems, callback, arg ) {
801 null 	proxy: function( fn, context ) {
818 null 		proxy = function() {
830 null 	access: function( elems, fn, key, value, chainable, emptyGet, raw ) {
859 null 					fn = function( elem, key, value ) {
881 null 	now: function() {
886 null jQuery.ready.promise = function( obj ) {
923 doScrollCheck 				(function doScrollCheck() {
948 null jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
952 isArraylike function isArraylike( obj ) {
975 createOptions function createOptions( options ) {
977 null 	jQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) {
1005 null jQuery.Callbacks = function( options ) {
1030 null 		fire = function( data ) {
1059 null 			add: function() {
1063 add 					(function add( args ) {
1064 null 						jQuery.each( args, function( _, arg ) {
1090 null 			remove: function() {
1092 null 					jQuery.each( arguments, function( _, arg ) {
1112 null 			has: function( fn ) {
1116 null 			empty: function() {
1121 null 			disable: function() {
1126 null 			disabled: function() {
1130 null 			lock: function() {
1138 null 			locked: function() {
1142 null 			fireWith: function( context, args ) {
1155 null 			fire: function() {
1160 null 			fired: function() {
1169 null 	Deferred: function( func ) {
1178 null 				state: function() {
1181 null 				always: function() {
1185 null 				then: function( /* fnDone, fnFail, fnProgress */ ) {
1187 null 					return jQuery.Deferred(function( newDefer ) {
1188 null 						jQuery.each( tuples, function( i, tuple ) {
1192 null 							deferred[ tuple[1] ](function() {
1209 null 				promise: function( obj ) {
1219 null 		jQuery.each( tuples, function( i, tuple ) {
1228 null 				list.add(function() {
1237 null 			deferred[ tuple[0] ] = function() {
1257 null 	when: function( subordinate /* , ..., subordinateN */ ) {
1269 null 			updateFunc = function( i, contexts, values ) {
1270 null 				return function( value ) {
1308 null jQuery.support = (function() {
1435 null 		div.attachEvent( "onclick", function() {
1455 null 	jQuery(function() {
1552 internalData function internalData( elem, name, data, pvt /* Internal Use Only */ ){
1646 internalRemoveData function internalRemoveData( elem, name, pvt ) {
1749 null 	hasData: function( elem ) {
1754 null 	data: function( elem, name, data ) {
1758 null 	removeData: function( elem, name ) {
1763 null 	_data: function( elem, name, data ) {
1767 null 	_removeData: function( elem, name ) {
1772 null 	acceptData: function( elem ) {
1786 null 	data: function( key, value ) {
1817 null 			return this.each(function() {
1822 null 		return jQuery.access( this, function( value ) {
1829 null 			this.each(function() {
1835 null 	removeData: function( key ) {
1836 null 		return this.each(function() {
1842 dataAttr function dataAttr( elem, key, data ) {
1874 isEmptyDataObject function isEmptyDataObject( obj ) {
1890 null 	queue: function( elem, type, data ) {
1909 null 	dequeue: function( elem, type ) {
1916 null 			next = function() {
1946 null 	_queueHooks: function( elem, type ) {
1949 null 			empty: jQuery.Callbacks("once memory").add(function() {
1958 null 	queue: function( type, data ) {
1973 null 			this.each(function() {
1984 null 	dequeue: function( type ) {
1985 null 		return this.each(function() {
1991 null 	delay: function( time, type ) {
1995 null 		return this.queue( type, function( next, hooks ) {
1997 null 			hooks.stop = function() {
2002 null 	clearQueue: function( type ) {
2007 null 	promise: function( type, obj ) {
2013 null 			resolve = function() {
2047 null 	attr: function( name, value ) {
2051 null 	removeAttr: function( name ) {
2052 null 		return this.each(function() {
2057 null 	prop: function( name, value ) {
2061 null 	removeProp: function( name ) {
2063 null 		return this.each(function() {
2072 null 	addClass: function( value ) {
2079 null 			return this.each(function( j ) {
2111 null 	removeClass: function( value ) {
2118 null 			return this.each(function( j ) {
2149 null 	toggleClass: function( value, stateVal ) {
2154 null 			return this.each(function( i ) {
2159 null 		return this.each(function() {
2190 null 	hasClass: function( selector ) {
2203 null 	val: function( value ) {
2229 null 		return this.each(function( i ) {
2249 null 				val = jQuery.map(val, function ( value ) {
2267 null 			get: function( elem ) {
2275 null 			get: function( elem ) {
2312 null 			set: function( elem, value ) {
2315 null 				jQuery(elem).find("option").each(function() {
2327 null 	attr: function( elem, name, value ) {
2381 null 	removeAttr: function( elem, value ) {
2413 null 			set: function( elem, value ) {
2443 null 	prop: function( elem, name, value ) {
2480 null 			get: function( elem ) {
2497 null 	get: function( elem, name ) {
2521 null 	set: function( elem, value, name ) {
2541 null 		get: function( elem, name ) {
2550 null 		set: function( elem, value, name ) {
2568 null 		get: function( elem, name ) {
2574 null 		set: function( elem, value, name ) {
2596 null 		set: function( elem, value, name ) {
2603 null 	jQuery.each([ "width", "height" ], function( i, name ) {
2605 null 			set: function( elem, value ) {
2619 null 	jQuery.each([ "href", "src", "width", "height" ], function( i, name ) {
2621 null 			get: function( elem ) {
2629 null 	jQuery.each([ "href", "src" ], function( i, name ) {
2631 null 			get: function( elem ) {
2640 null 		get: function( elem ) {
2646 null 		set: function( elem, value ) {
2656 null 		get: function( elem ) {
2679 null 	jQuery.each([ "radio", "checkbox" ], function() {
2681 null 			get: function( elem ) {
2688 null jQuery.each([ "radio", "checkbox" ], function() {
2690 null 		set: function( elem, value ) {
2703 returnTrue function returnTrue() {
2707 returnFalse function returnFalse() {
2719 null 	add: function( elem, types, handler, data, selector ) {
2747 null 			eventHandle = elemData.handle = function( e ) {
2829 null 	remove: function( elem, types, handler, selector, mappedTypes ) {
2902 null 	trigger: function( event, data, elem, onlyHandlers ) {
3036 null 	dispatch: function( event ) {
3095 null 	handlers: function( event, handlers ) {
3142 null 	fix: function( event ) {
3195 null 		filter: function( event, original ) {
3208 null 		filter: function( event, original ) {
3245 null 			trigger: function() {
3254 null 			trigger: function() {
3269 null 			trigger: function() {
3279 null 			postDispatch: function( event ) {
3289 null 	simulate: function( type, elem, event, bubble ) {
3313 null 	function( elem, type, handle ) {
3318 null 	function( elem, type, handle ) {
3333 null jQuery.Event = function( src, props ) {
3373 null 	preventDefault: function() {
3391 null 	stopPropagation: function() {
3407 null 	stopImmediatePropagation: function() {
3417 null }, function( orig, fix ) {
3422 null 		handle: function( event ) {
3444 null 		setup: function() {
3451 null 			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
3456 null 					jQuery.event.add( form, "submit._submit", function( event ) {
3465 null 		postDispatch: function( event ) {
3475 null 		teardown: function() {
3492 null 		setup: function() {
3499 null 					jQuery.event.add( this, "propertychange._change", function( event ) {
3504 null 					jQuery.event.add( this, "click._change", function( event ) {
3515 null 			jQuery.event.add( this, "beforeactivate._change", function( e ) {
3519 null 					jQuery.event.add( elem, "change._change", function( event ) {
3529 null 		handle: function( event ) {
3538 null 		teardown: function() {
3548 null 	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {
3552 null 			handler = function( event ) {
3557 null 			setup: function() {
3562 null 			teardown: function() {
3573 null 	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
3614 null 			fn = function( event ) {
3622 null 		return this.each( function() {
3626 null 	one: function( types, selector, data, fn ) {
3629 null 	off: function( types, selector, fn ) {
3656 null 		return this.each(function() {
3661 null 	bind: function( types, data, fn ) {
3664 null 	unbind: function( types, fn ) {
3668 null 	delegate: function( selector, types, data, fn ) {
3671 null 	undelegate: function( selector, types, fn ) {
3676 null 	trigger: function( type, data ) {
3677 null 		return this.each(function() {
3681 null 	triggerHandler: function( type, data ) {
3694 null (function( window, undefined ) {
3736 null 	indexOf = arr.indexOf || function( elem ) {
3812 null 	funescape = function( _, escaped ) {
3828 null 	slice = function( i ) {
3842 isNative function isNative( fn ) {
3852 createCache function createCache() {
3856 null 	return (cache = function( key, value ) {
3870 markFunction function markFunction( fn ) {
3879 assert function assert( fn ) {
3892 Sizzle function Sizzle( selector, context, results, seed ) {
4006 null isXML = Sizzle.isXML = function( elem ) {
4018 null setDocument = Sizzle.setDocument = function( node ) {
4034 null 	support.tagNameNoComments = assert(function( div ) {
4040 null 	support.attributes = assert(function( div ) {
4048 null 	support.getByClassName = assert(function( div ) {
4062 null 	support.getByName = assert(function( div ) {
4083 null 	Expr.attrHandle = assert(function( div ) {
4090 null 			"href": function( elem ) {
4093 null 			"type": function( elem ) {
4100 null 		Expr.find["ID"] = function( id, context ) {
4108 null 		Expr.filter["ID"] = function( id ) {
4110 null 			return function( elem ) {
4115 null 		Expr.find["ID"] = function( id, context ) {
4126 null 		Expr.filter["ID"] =  function( id ) {
4128 null 			return function( elem ) {
4137 null 		function( tag, context ) {
4142 null 		function( tag, context ) {
4162 null 	Expr.find["NAME"] = support.getByName && function( tag, context ) {
4169 null 	Expr.find["CLASS"] = support.getByClassName && function( className, context ) {
4188 null 		assert(function( div ) {
4209 null 		assert(function( div ) {
4236 null 		assert(function( div ) {
4255 null 		function( a, b ) {
4264 null 		function( a, b ) {
4277 null 	function( a, b ) {
4300 null 	function( a, b ) {
4360 null Sizzle.matches = function( expr, elements ) {
4364 null Sizzle.matchesSelector = function( elem, expr ) {
4391 null Sizzle.contains = function( context, elem ) {
4399 null Sizzle.attr = function( elem, name ) {
4421 null Sizzle.error = function( msg ) {
4426 null Sizzle.uniqueSort = function( results ) {
4450 siblingCheck function siblingCheck( a, b ) {
4472 createInputPseudo function createInputPseudo( type ) {
4473 null 	return function( elem ) {
4480 createButtonPseudo function createButtonPseudo( type ) {
4481 null 	return function( elem ) {
4488 createPositionalPseudo function createPositionalPseudo( fn ) {
4489 null 	return markFunction(function( argument ) {
4491 null 		return markFunction(function( seed, matches ) {
4510 null getText = Sizzle.getText = function( elem ) {
4560 null 		"ATTR": function( match ) {
4573 null 		"CHILD": function( match ) {
4605 null 		"PSEUDO": function( match ) {
4636 null 		"TAG": function( nodeName ) {
4638 null 				return function() { return true; };
4642 null 			return function( elem ) {
4647 null 		"CLASS": function( className ) {
4652 null 				classCache( className, function( elem ) {
4657 null 		"ATTR": function( name, operator, check ) {
4658 null 			return function( elem ) {
4681 null 		"CHILD": function( type, what, argument, first, last ) {
4689 null 				function( elem ) {
4693 null 				function( elem, context, xml ) {
4770 null 		"PSEUDO": function( pseudo, argument ) {
4790 null 					markFunction(function( seed, matches ) {
4799 null 					function( elem ) {
4810 null 		"not": markFunction(function( selector ) {
4819 null 				markFunction(function( seed, matches, context, xml ) {
4831 null 				function( elem, context, xml ) {
4838 null 		"has": markFunction(function( selector ) {
4839 null 			return function( elem ) {
4844 null 		"contains": markFunction(function( text ) {
4845 null 			return function( elem ) {
4857 null 		"lang": markFunction( function( lang ) {
4863 null 			return function( elem ) {
4879 null 		"target": function( elem ) {
4884 null 		"root": function( elem ) {
4888 null 		"focus": function( elem ) {
4893 null 		"enabled": function( elem ) {
4897 null 		"disabled": function( elem ) {
4901 null 		"checked": function( elem ) {
4908 null 		"selected": function( elem ) {
4919 null 		"empty": function( elem ) {
4933 null 		"parent": function( elem ) {
4938 null 		"header": function( elem ) {
4942 null 		"input": function( elem ) {
4946 null 		"button": function( elem ) {
4951 null 		"text": function( elem ) {
4961 null 		"first": createPositionalPseudo(function() {
4965 null 		"last": createPositionalPseudo(function( matchIndexes, length ) {
4969 null 		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
4973 null 		"even": createPositionalPseudo(function( matchIndexes, length ) {
4981 null 		"odd": createPositionalPseudo(function( matchIndexes, length ) {
4989 null 		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
4997 null 		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
5015 tokenize function tokenize( selector, parseOnly ) {
5082 toSelector function toSelector( tokens ) {
5092 addCombinator function addCombinator( matcher, combinator, base ) {
5099 null 		function( elem, context, xml ) {
5108 null 		function( elem, context, xml ) {
5142 elementMatcher function elementMatcher( matchers ) {
5144 null 		function( elem, context, xml ) {
5156 condense function condense( unmatched, map, filter, context, xml ) {
5177 setMatcher function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
5184 null 	return markFunction(function( seed, results, context, xml ) {
5270 matcherFromTokens function matcherFromTokens( tokens ) {
5278 null 		matchContext = addCombinator( function( elem ) {
5281 null 		matchAnyContext = addCombinator( function( elem ) {
5284 null 		matchers = [ function( elem, context, xml ) {
5322 matcherFromGroupMatchers function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
5327 null 		superMatcher = function( seed, context, xml, results, expandContext ) {
5423 null compile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {
5450 multipleContexts function multipleContexts( selector, contexts, results ) {
5459 select function select( selector, context, results, seed ) {
5528 setFilters function setFilters() {}
5560 null 	find: function( selector ) {
5566 null 			return this.pushStack( jQuery( selector ).filter(function() {
5586 null 	has: function( target ) {
5591 null 		return this.filter(function() {
5600 null 	not: function( selector ) {
5604 null 	filter: function( selector ) {
5608 null 	is: function( selector ) {
5619 null 	closest: function( selectors, context ) {
5645 null 	index: function( elem ) {
5663 null 	add: function( selector, context ) {
5672 null 	addBack: function( selector ) {
5681 sibling function sibling( cur, dir ) {
5690 null 	parent: function( elem ) {
5694 null 	parents: function( elem ) {
5697 null 	parentsUntil: function( elem, i, until ) {
5700 null 	next: function( elem ) {
5703 null 	prev: function( elem ) {
5706 null 	nextAll: function( elem ) {
5709 null 	prevAll: function( elem ) {
5712 null 	nextUntil: function( elem, i, until ) {
5715 null 	prevUntil: function( elem, i, until ) {
5718 null 	siblings: function( elem ) {
5721 null 	children: function( elem ) {
5724 null 	contents: function( elem ) {
5729 null }, function( name, fn ) {
5730 null 	jQuery.fn[ name ] = function( until, selector ) {
5752 null 	filter: function( expr, elems, not ) {
5762 null 	dir: function( elem, dir, until ) {
5775 null 	sibling: function( n, elem ) {
5789 winnow function winnow( elements, qualifier, keep ) {
5796 null 		return jQuery.grep(elements, function( elem, i ) {
5802 null 		return jQuery.grep(elements, function( elem ) {
5807 null 		var filtered = jQuery.grep(elements, function( elem ) {
5818 null 	return jQuery.grep(elements, function( elem ) {
5822 createSafeFragment function createSafeFragment( document ) {
5876 null 	text: function( value ) {
5877 null 		return jQuery.access( this, function( value ) {
5884 null 	wrapAll: function( html ) {
5886 null 			return this.each(function(i) {
5899 null 			wrap.map(function() {
5913 null 	wrapInner: function( html ) {
5915 null 			return this.each(function(i) {
5920 null 		return this.each(function() {
5933 null 	wrap: function( html ) {
5936 null 		return this.each(function(i) {
5941 null 	unwrap: function() {
5942 null 		return this.parent().each(function() {
5949 null 	append: function() {
5950 null 		return this.domManip(arguments, true, function( elem ) {
5957 null 	prepend: function() {
5958 null 		return this.domManip(arguments, true, function( elem ) {
5965 null 	before: function() {
5966 null 		return this.domManip( arguments, false, function( elem ) {
5973 null 	after: function() {
5974 null 		return this.domManip( arguments, false, function( elem ) {
5982 null 	remove: function( selector, keepData ) {
6004 null 	empty: function() {
6029 null 	clone: function( dataAndEvents, deepDataAndEvents ) {
6033 null 		return this.map( function () {
6038 null 	html: function( value ) {
6039 null 		return jQuery.access( this, function( value ) {
6080 null 	replaceWith: function( value ) {
6089 null 		return this.domManip( [ value ], true, function( elem ) {
6100 null 	detach: function( selector ) {
6104 null 	domManip: function( args, table, callback ) {
6120 null 			return this.each(function( index ) {
6203 findOrAppend function findOrAppend( elem, tag ) {
6208 disableScript function disableScript( elem ) {
6213 restoreScript function restoreScript( elem ) {
6224 setGlobalEval function setGlobalEval( elems, refElements ) {
6232 cloneCopyEvent function cloneCopyEvent( src, dest ) {
6260 fixCloneNodeIssues function fixCloneNodeIssues( src, dest ) {
6333 null }, function( name, original ) {
6334 null 	jQuery.fn[ name ] = function( selector ) {
6353 getAll function getAll( context, tag ) {
6376 fixDefaultChecked function fixDefaultChecked( elem ) {
6383 null 	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
6438 null 	buildFragment: function( elems, context, scripts, selection ) {
6565 null 	cleanData: function( elems, /* internal */ acceptData ) {
6641 vendorPropName function vendorPropName( style, name ) {
6663 isHidden function isHidden( elem, el ) {
6670 showHide function showHide( elements, show ) {
6725 null 	css: function( name, value ) {
6726 null 		return jQuery.access( this, function( elem, name, value ) {
6747 null 	show: function() {
6750 null 	hide: function() {
6753 null 	toggle: function( state ) {
6756 null 		return this.each(function() {
6771 null 			get: function( elem, computed ) {
6802 null 	style: function( elem, name, value, extra ) {
6867 null 	css: function( elem, name, extra, styles ) {
6902 null 	swap: function( elem, options, callback, args ) {
6926 null 	getStyles = function( elem ) {
6930 null 	curCSS = function( elem, name, _computed ) {
6969 null 	getStyles = function( elem ) {
6973 null 	curCSS = function( elem, name, _computed ) {
7017 setPositiveNumber function setPositiveNumber( elem, value, subtract ) {
7025 augmentWidthOrHeight function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
7064 getWidthOrHeight function getWidthOrHeight( elem, name, extra ) {
7108 css_defaultDisplay function css_defaultDisplay( nodeName ) {
7140 actualDisplay function actualDisplay( name, doc ) {
7147 null jQuery.each([ "height", "width" ], function( i, name ) {
7149 null 		get: function( elem, computed, extra ) {
7154 null 					jQuery.swap( elem, cssShow, function() {
7161 null 		set: function( elem, value, extra ) {
7178 null 		get: function( elem, computed ) {
7185 null 		set: function( elem, value ) {
7222 null jQuery(function() {
7225 null 			get: function( elem, computed ) {
7240 null 		jQuery.each( [ "top", "left" ], function( i, prop ) {
7242 null 				get: function( elem, computed ) {
7258 null 	jQuery.expr.filters.hidden = function( elem ) {
7265 null 	jQuery.expr.filters.visible = function( elem ) {
7275 null }, function( prefix, suffix ) {
7277 null 		expand: function( value ) {
7304 null 	serialize: function() {
7307 null 	serializeArray: function() {
7308 null 		return this.map(function(){
7313 null 		.filter(function(){
7320 null 		.map(function( i, elem ){
7326 null 					jQuery.map( val, function( val ){
7336 null jQuery.param = function( a, traditional ) {
7339 null 		add = function( key, value ) {
7353 null 		jQuery.each( a, function() {
7369 buildParams function buildParams( prefix, obj, traditional, add ) {
7374 null 		jQuery.each( obj, function( i, v ) {
7398 null 	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {
7401 null 	jQuery.fn[ name ] = function( data, fn ) {
7408 null jQuery.fn.hover = function( fnOver, fnOut ) {
7467 addToPrefiltersOrTransports function addToPrefiltersOrTransports( structure ) {
7470 null 	return function( dataTypeExpression, func ) {
7499 inspectPrefiltersOrTransports function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {
7504 inspect 	function inspect( dataType ) {
7507 null 		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
7526 ajaxExtend function ajaxExtend( target, src ) {
7542 null jQuery.fn.load = function( url, params, callback ) {
7577 null 		}).done(function( responseText ) {
7591 null 		}).complete( callback && function( jqXHR, status ) {
7600 null jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ){
7601 null 	jQuery.fn[ type ] = function( fn ){
7606 null jQuery.each( [ "get", "post" ], function( i, method ) {
7607 null 	jQuery[ method ] = function( url, data, callback, type ) {
7703 null 	ajaxSetup: function( target, settings ) {
7717 null 	ajax: function( url, options ) {
7770 null 				getResponseHeader: function( key ) {
7785 null 				getAllResponseHeaders: function() {
7790 null 				setRequestHeader: function( name, value ) {
7800 null 				overrideMimeType: function( type ) {
7808 null 				statusCode: function( map ) {
7825 null 				abort: function( statusText ) {
7972 null 				timeoutTimer = setTimeout(function() {
7992 done 		function done( status, nativeStatusText, responses, headers ) {
8104 null 	getScript: function( url, callback ) {
8108 null 	getJSON: function( url, data, callback ) {
8118 ajaxHandleResponses function ajaxHandleResponses( s, jqXHR, responses ) {
8179 ajaxConvert function ajaxConvert( s, response ) {
8271 null 		"text script": function( text ) {
8279 null jQuery.ajaxPrefilter( "script", function( s ) {
8290 null jQuery.ajaxTransport( "script", function(s) {
8300 null 			send: function( _, callback ) {
8313 null 				script.onload = script.onreadystatechange = function( _, isAbort ) {
8340 null 			abort: function() {
8354 null 	jsonpCallback: function() {
8362 null jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {
8386 null 		s.converters["script json"] = function() {
8398 null 		window[ callbackName ] = function() {
8403 null 		jqXHR.always(function() {
8431 null 	xhrOnUnloadAbort = window.ActiveXObject && function() {
8440 createStandardXHR function createStandardXHR() {
8446 createActiveXHR function createActiveXHR() {
8461 null 	function() {
8475 null 	jQuery.ajaxTransport(function( s ) {
8482 null 				send: function( headers, complete ) {
8530 null 					callback = function( _, isAbort ) {
8626 null 				abort: function() {
8641 null 		"*": [function( prop, value ) {
8685 createFxNow function createFxNow() {
8686 null 	setTimeout(function() {
8692 createTweens function createTweens( animation, props ) {
8693 null 	jQuery.each( props, function( prop, value ) {
8707 Animation function Animation( elem, properties, options ) {
8712 null 		deferred = jQuery.Deferred().always( function() {
8716 null 		tick = function() {
8750 null 			createTween: function( prop, end ) {
8756 null 			stop: function( gotoEnd ) {
8811 propFilter function propFilter( props, specialEasing ) {
8850 null 	tweener: function( props, callback ) {
8869 null 	prefilter: function( callback, prepend ) {
8878 defaultPrefilter function defaultPrefilter( elem, props, opts ) {
8895 null 			hooks.empty.fire = function() {
8903 null 		anim.always(function() {
8906 null 			anim.always(function() {
8942 null 			anim.always(function() {
8978 null 			anim.done(function() {
8982 null 		anim.done(function() {
9005 Tween function Tween( elem, options, prop, end, easing ) {
9012 null 	init: function( elem, options, prop, end, easing, unit ) {
9021 null 	cur: function() {
9028 null 	run: function( percent ) {
9058 null 		get: function( tween ) {
9074 null 		set: function( tween ) {
9092 null 	set: function( tween ) {
9099 null jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
9101 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9109 null 	fadeTo: function( speed, to, easing, callback ) {
9117 null 	animate: function( prop, speed, easing, callback ) {
9120 null 			doAnimation = function() {
9123 null 				doAnimation.finish = function() {
9137 null 	stop: function( type, clearQueue, gotoEnd ) {
9138 null 		var stopQueue = function( hooks ) {
9153 null 		return this.each(function() {
9187 null 	finish: function( type ) {
9191 null 		return this.each(function() {
9231 genFx function genFx( type, includeWidth ) {
9259 null }, function( name, props ) {
9260 null 	jQuery.fn[ name ] = function( speed, easing, callback ) {
9265 null jQuery.speed = function( speed, easing, fn ) {
9284 null 	opt.complete = function() {
9298 null 	linear: function( p ) {
9301 null 	swing: function( p ) {
9308 null jQuery.fx.tick = function() {
9329 null jQuery.fx.timer = function( timer ) {
9337 null jQuery.fx.start = function() {
9343 null jQuery.fx.stop = function() {
9359 null 	jQuery.expr.filters.animated = function( elem ) {
9360 null 		return jQuery.grep(jQuery.timers, function( fn ) {
9365 null jQuery.fn.offset = function( options ) {
9369 null 			this.each(function( i ) {
9404 null 	setOffset: function( elem, options, i ) {
9451 null 	position: function() {
9488 null 	offsetParent: function() {
9489 null 		return this.map(function() {
9501 null jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
9504 null 	jQuery.fn[ method ] = function( val ) {
9505 null 		return jQuery.access( this, function( elem, method, val ) {
9527 getWindow function getWindow( elem ) {
9535 null jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
9536 null 	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
9538 null 		jQuery.fn[ funcName ] = function( margin, value ) {
9542 null 			return jQuery.access( this, function( elem, type, value ) {
9595 null 	define( "jquery", [], function () { return jQuery; } );
5 A  * Includes Sizzle.js
11 B  *
15 C 
6 A  * http://sizzlejs.com/
15 B 
19 C // Support: Firefox 18+
3 A  * http://jquery.com/
9 B  * Released under the MIT license
2 main  * jQuery JavaScript Library v1.9.1
3 main  * http://jquery.com/
1 main /*!
3 main  * http://jquery.com/
3 main  * http://jquery.com/
1 f /*!
2 g  * jQuery JavaScript Library v1.9.1
1 f /*!
2 g  * jQuery JavaScript Library v1.9.1
3 f  * http://jquery.com/
3 f  * http://jquery.com/
12 a  * Date: 2013-2-4
17 f // the stack via arguments.caller.callee and Firefox dies if
4 A  *
8 main  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
4 A  *
8 main  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
3 f  * http://jquery.com/
5 h  * Includes Sizzle.js
7 A  *
11 main  *
3 f  * http://jquery.com/
5 h  * Includes Sizzle.js
7 A  *
11 main  *
1 f /*!
3 f  * http://jquery.com/
3 f  * http://jquery.com/
3 f  * http://jquery.com/
7 main  *
5 f  * Includes Sizzle.js
9 main  * Released under the MIT license
4 main  *
1 A /*!
5 f  * Includes Sizzle.js
9 main  * Released under the MIT license
3 A  * http://jquery.com/
7 f  *
11 main  *
4 A  *
8 f  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
12 main  * Date: 2013-2-4
2 A  * jQuery JavaScript Library v1.9.1
8 f  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
12 B  * Date: 2013-2-4
16 main // Can't do this because several apps including ASP.NET trace
2 null  * jQuery JavaScript Library v1.9.1
2 null  * jQuery JavaScript Library v1.9.1
2 yell  * jQuery JavaScript Library v1.9.1
2 null  * jQuery JavaScript Library v1.9.1
2 null  * jQuery JavaScript Library v1.9.1
2 null  * jQuery JavaScript Library v1.9.1
1 getElements /*!
1 isPrime /*!
1 isPrime /*!
3 null  * http://jquery.com/
1 katana /*!
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
2 fn  * jQuery JavaScript Library v1.9.1
1 add /*!
1 loop /*!
6 null  * http://sizzlejs.com/
1 Ninja /*!
1 Ninja /*!
5 null  * Includes Sizzle.js
1 Ninja /*!
2 null  * jQuery JavaScript Library v1.9.1
1 User /*!
1 User /*!
1 User /*!
1 User /*!
1 smallest /*!
4 largest  *
1 smallest /*!
4 largest  *
1 highest /*!
3 null  * http://jquery.com/
1 multiMax /*!
3 addNum  * http://jquery.com/
3 addNum  * http://jquery.com/
1 Ninja /*!
4 null  *
7 null  *
1 Ninja /*!
3 null  * http://jquery.com/
1 Ninja /*!
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
2 null  * jQuery JavaScript Library v1.9.1
1 Ninja /*!
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
1 Ninja /*!
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
1 Ninja /*!
1 Ninja /*!
1 null /*!
2 Ninja  * jQuery JavaScript Library v1.9.1
1 Person /*!
4 Ninja  *
2 null  * jQuery JavaScript Library v1.9.1
1 Person /*!
6 Me  * http://sizzlejs.com/
2 null  * jQuery JavaScript Library v1.9.1
9 null  * Released under the MIT license
18 null // you try to trace through "use strict" call chains. (#13335)
25 null 	// A central reference to the root jQuery(document)
2 null  * jQuery JavaScript Library v1.9.1
2 null  * jQuery JavaScript Library v1.9.1
9 null  * Released under the MIT license
1 makeNinja /*!
2 makeSamurai  * jQuery JavaScript Library v1.9.1
1 addMethod /*!
22 Ninjas 	// The deferred used on DOM ready
24 null 
9 null  * Released under the MIT license
27 null 
34 null 	location = window.location,
1 testForIn /*!
10 testForIn1  * http://jquery.org/license
11 testForIn2  *
2 Polygon  * jQuery JavaScript Library v1.9.1
9 objectMasquerading  * Released under the MIT license
24 sharedClassObject 
11 Rectangle  *
5 shape  * Includes Sizzle.js
6 area  * http://sizzlejs.com/
18 area // you try to trace through "use strict" call chains. (#13335)
26 Rectangle 	rootjQuery,
30 area 	core_strundefined = typeof undefined,
2 null  * jQuery JavaScript Library v1.9.1
4 null  *
6 null  * http://sizzlejs.com/
2 objects_are_fun  * jQuery JavaScript Library v1.9.1
22 whatever 	// The deferred used on DOM ready
27 other 
31 something 
9 nothing  * Released under the MIT license
2 trivial  * jQuery JavaScript Library v1.9.1
11 silly  *
52 bad 	core_push = core_deletedIds.push,
74 rubbish 	// A simple way to check for HTML strings
23 weirder 	readyList,
35 stranger 
48 fib 	core_version = "1.9.1",
7 inc  *
2 trivial  * jQuery JavaScript Library v1.9.1
11 silly  *
23 weirder 	readyList,
35 stranger 
50 fib 	// Save a reference to some core methods
54 bad 	core_indexOf = core_deletedIds.indexOf,
76 rubbish 	// Strict HTML recognition (#11290: must start with <)
2 targetOne  * jQuery JavaScript Library v1.9.1
6 targetTwo  * http://sizzlejs.com/
10 tryCatch  * http://jquery.org/license
21 tryFinally var
33 tryFinallyLoop 	document = window.document,
46 tryCatchFinally 	core_deletedIds = [],
59 tryCatchFinally2 	// Define a local copy of jQuery
75 two 	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
79 three 	// Match a standalone tag
1 Obj /*!
11 tester1  *
4 set  *
6 get  * http://sizzlejs.com/
15 tester2 
1 a /*!
10 x  * http://jquery.org/license
14 y (function( window, undefined ) {
18 z // you try to trace through "use strict" call chains. (#13335)
22 wrong 	// The deferred used on DOM ready
2 outer  * jQuery JavaScript Library v1.9.1
5 inner1  * Includes Sizzle.js
9 null  * Released under the MIT license
2 testSwitch  * jQuery JavaScript Library v1.9.1
24 testIfConvertedSwitch 
46 testDoWhile 	core_deletedIds = [],
59 testWhile 	// Define a local copy of jQuery
72 testFor 	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
84 testReturn 	rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g,
91 testDeadLoop 
2 outer  * jQuery JavaScript Library v1.9.1
6 inner  * http://sizzlejs.com/
14 inner2 (function( window, undefined ) {
19 inner3 // Support: Firefox 18+
33 level1 	document = window.document,
31 indirect 
35 level5 
40 level4 	_$ = window.$,
44 level3 
51 level2 	core_concat = core_deletedIds.concat,
2 getOp  * jQuery JavaScript Library v1.9.1
6 plusNum  * http://sizzlejs.com/
2 null  * jQuery JavaScript Library v1.9.1
1 f /*!
3 func  * http://jquery.com/
2 f  * jQuery JavaScript Library v1.9.1
2 as  * jQuery JavaScript Library v1.9.1
5 null  * Includes Sizzle.js
7 f  *
1 null /*!
7 f  *
1 null /*!
4 f  *
1 f /*!
1 f /*!
3 g  * http://jquery.com/
85 null 	rvalidescape = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,
86 null 	rvalidtokens = /"[^"\\\r\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g,
87 null 
88 null 	// Matches dashed string for camelizing
89 null 	rmsPrefix = /^-ms-/,
90 null 	rdashAlpha = /-([\da-z])/gi,
91 null 
92 null 
93 null 	// Used by jQuery.camelCase as callback to replace()
94 null 	fcamelCase = function( all, letter ) {
95 null 		return letter.toUpperCase();
96 null 	},
97 null 
98 null 	// The ready event handler
99 null 	completed = function( event ) {
100 null 
101 null 		// readyState === "complete" is good enough for us to call the dom ready in oldIE
102 null 		if ( document.addEventListener || event.type === "load" || document.readyState === "complete" ) {
103 null 			detach();
104 null 			jQuery.ready();
105 null 		}
106 null 	},
107 null 	// Clean-up method for dom ready events
108 null 	detach = function() {
109 null 		if ( document.addEventListener ) {
110 null 			document.removeEventListener( "DOMContentLoaded", completed, false );
111 null 			window.removeEventListener( "load", completed, false );
112 null 
113 null 		} else {
114 null 			document.detachEvent( "onreadystatechange", completed );
115 null 			window.detachEvent( "onload", completed );
116 null 		}
117 null 	};
118 null 
119 null jQuery.fn = jQuery.prototype = {
120 null 	// The current version of jQuery being used
121 null 	jquery: core_version,
122 null 
123 null 	constructor: jQuery,
124 null 	init: function( selector, context, rootjQuery ) {
125 null 		var match, elem;
126 null 
127 null 		// HANDLE: $(""), $(null), $(undefined), $(false)
128 null 		if ( !selector ) {
129 null 			return this;
130 null 		}
131 null 
132 null 		// Handle HTML strings
133 null 		if ( typeof selector === "string" ) {
134 null 			if ( selector.charAt(0) === "<" && selector.charAt( selector.length - 1 ) === ">" && selector.length >= 3 ) {
135 null 				// Assume that strings that start and end with <> are HTML and skip the regex check
136 null 				match = [ null, selector, null ];
137 null 
138 null 			} else {
139 null 				match = rquickExpr.exec( selector );
140 null 			}
141 null 
142 null 			// Match html or make sure no context is specified for #id
143 null 			if ( match && (match[1] || !context) ) {
144 null 
7 decodeURIComponent  *
9 null  * Released under the MIT license
10 null  * http://jquery.org/license
10 CSlider  * http://jquery.org/license
28 null 	// Support: IE<9
66 null 	core_pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
67 null 
74 null 	// A simple way to check for HTML strings
77 null 	rquickExpr = /^(?:(<[\w\W]+>)[^>]*|#([\w-]*))$/,
1 null /*!
102 null 		if ( document.addEventListener || event.type === "load" || document.readyState === "complete" ) {
1 null /*!
7 null  *
32 null 	// Use the correct document accordingly with window argument (sandbox)
18 _SoAD_Paraminit // you try to trace through "use strict" call chains. (#13335)
22 _SoAD_init 	// The deferred used on DOM ready
38 _SoAD_exec 
43 AddSchedule 	class2type = {},
74 FULL_main 	// A simple way to check for HTML strings
75 BEITOU_main 	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
78 ADM 
30 null 	core_strundefined = typeof undefined,
10 tmgAdsInitAdsData  * http://jquery.org/license
10 tmgAdsInitAdsData  * http://jquery.org/license
7 NPB  *
86 PWAjel 	rvalidtokens = /"[^"\\\r\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g,
109 PB 		if ( document.addEventListener ) {
22 point_DrawTable 	// The deferred used on DOM ready
47 showHidePoints 
22 point_DrawTable 	// The deferred used on DOM ready
47 showHidePoints 
8 B1  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
7 g  *
12 ff  * Date: 2013-2-4
7 g  *
12 ff  * Date: 2013-2-4
1 f /*!
1 f /*!
1 null /*!
1 null /*!
1 null /*!
1 f /*!
5 g  * Includes Sizzle.js
1 f /*!
5 g  * Includes Sizzle.js
1 f /*!
5 g  * Includes Sizzle.js
1 f /*!
5 g  * Includes Sizzle.js
1 f /*!
1 f /*!
6 g  * http://sizzlejs.com/
1 X /*!
1 null /*!
9 TreeNode  * Released under the MIT license
20 bottomUpTree //"use strict";
15 null 
9 fast3bitlookup  * Released under the MIT license
30 TimeFunc 	core_strundefined = typeof undefined,
9 ack  * Released under the MIT license
15 fib 
20 tak //"use strict";
21 DrawLine var
74 CalcCross 	// A simple way to check for HTML strings
82 CalcNormal 	// JSON RegExp
95 CreateP 		return letter.toUpperCase();
100 MMulti 
112 VMulti 
119 VMulti2 jQuery.fn = jQuery.prototype = {
127 MAdd 		// HANDLE: $(""), $(null), $(undefined), $(false)
138 Translate 			} else {
148 RotateX 
162 RotateY 
176 RotateZ 					// Check parentNode to catch when Blackberry 4.6 returns
190 DrawQube 					this.context = document;
236 Loop 	toArray: function() {
255 Init 
34 morph 	location = window.location,
30 createVector 	core_strundefined = typeof undefined,
34 sqrLengthVector 	location = window.location,
38 lengthVector 
42 addVector 	// [[Class]] -> type pairs
49 subVector 
56 scaleVector 	core_hasOwn = class2type.hasOwnProperty,
63 normaliseVector 	},
71 add 	// Make sure we trim BOM and NBSP (here's looking at you, Safari 5.0 and IE)
75 sub 	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
79 scalev 	// Match a standalone tag
83 dot 	rvalidchars = /^[\],:{}\s]*$/,
87 scale 
91 cross 
98 normalise 	// The ready event handler
103 transformMatrix 			detach();
111 invertMatrix 			window.removeEventListener( "load", completed, false );
129 Triangle 			return this;
185 Scene 						// Otherwise, we inject the element directly into the jQuery object
265 Camera 	},
296 renderRows 		return this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );
317 raytraceScene jQuery.fn.init.prototype = jQuery.fn;
409 arrayToCanvasCommands 		}
164 null 							} else {
193 null 				}
248 null 			// Return just the object
287 null 	},
309 null 	// For internal use only.
361 null 						copyIsArray = false;
9 fannkuch  * Released under the MIT license
13 Body  */
30 Jupiter 	core_strundefined = typeof undefined,
42 Saturn 	// [[Class]] -> type pairs
54 Uranus 	core_indexOf = core_deletedIds.indexOf,
66 Neptune 	core_pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
78 Sun 
83 NBodySystem 	rvalidchars = /^[\],:{}\s]*$/,
23 null 	readyList,
99 null 	completed = function( event ) {
132 null 		// Handle HTML strings
161 null 								this[ match ]( context[ match ] );
10 pad  * http://jquery.org/license
19 nsieve // Support: Firefox 18+
34 sieve 	location = window.location,
10 pad  * http://jquery.org/license
16 primes // Can't do this because several apps including ASP.NET trace
29 sieve 	// For `typeof node.method` instead of `node.method !== undefined`
26 hex_md5 	rootjQuery,
27 b64_md5 
28 str_md5 	// Support: IE<9
29 hex_hmac_md5 	// For `typeof node.method` instead of `node.method !== undefined`
30 b64_hmac_md5 	core_strundefined = typeof undefined,
31 str_hmac_md5 
36 md5_vm_test 	// Map over jQuery in case of overwrite
44 core_md5 
142 md5_cmn 			// Match html or make sure no context is specified for #id
146 md5_ff 				if ( match[1] ) {
150 md5_gg 					jQuery.merge( this, jQuery.parseHTML(
154 md5_hh 					) );
158 md5_ii 						for ( match in context ) {
166 core_hmac_md5 							}
186 safe_add 						this.length = 1;
196 bit_rol 			} else if ( !context || context.jquery ) {
205 str2binl 		// HANDLE: $(DOMElement)
217 binl2str 		if ( selector.selector !== undefined ) {
229 binl2hex 	length: 0,
244 binl2b64 
26 hex_sha1 	rootjQuery,
27 b64_sha1 
28 str_sha1 	// Support: IE<9
29 hex_hmac_sha1 	// For `typeof node.method` instead of `node.method !== undefined`
30 b64_hmac_sha1 	core_strundefined = typeof undefined,
31 str_hmac_sha1 
36 sha1_vm_test 	// Map over jQuery in case of overwrite
44 core_sha1 
92 sha1_ft 
103 sha1_kt 			detach();
112 core_hmac_sha1 
132 safe_add 		// Handle HTML strings
142 rol 			// Match html or make sure no context is specified for #id
151 str2binb 						match[1],
163 binb2str 							// ...and otherwise set as attributes
175 binb2hex 
190 binb2b64 					this.context = document;
34 FIXED 	location = window.location,
39 FLOAT 	// Map over the $ in case of overwrite
44 DEG2RAD 
57 cordicsincos 	core_trim = core_version.trim,
87 cordic 
9 partial  * Released under the MIT license
10 A  * http://jquery.org/license
14 Au (function( window, undefined ) {
23 Atu 	readyList,
32 AtAu 	// Use the correct document accordingly with window argument (sandbox)
37 spectralnorm 	_jQuery = window.jQuery,
49 toBase64 
90 base64ToString 	rdashAlpha = /-([\da-z])/gi,
12 rand  * Date: 2013-2-4
40 makeCumulative 	_$ = window.$,
48 fastaRepeat 	core_version = "1.9.1",
64 fastaRandom 
30 foo 	core_strundefined = typeof undefined,
36 constructor 	// Map over jQuery in case of overwrite
47 assertHasOwnProperties 
58 runTest 
89 null 	rmsPrefix = /^-ms-/,
120 null 	// The current version of jQuery being used
150 null 					jQuery.merge( this, jQuery.parseHTML(
29 f1 	// For `typeof node.method` instead of `node.method !== undefined`
30 f2 	core_strundefined = typeof undefined,
31 f3 
32 f4 	// Use the correct document accordingly with window argument (sandbox)
28 foo 	// Support: IE<9
30 null 	core_strundefined = typeof undefined,
38 safeEval 
47 testArguments 
58 listener 
99 g 	completed = function( event ) {
34 listener 	location = window.location,
44 f 
45 g 	// List of deleted data cache ids, so we can reuse them
46 h 	core_deletedIds = [],
35 listener 
45 f 	// List of deleted data cache ids, so we can reuse them
35 listener 
45 f 	// List of deleted data cache ids, so we can reuse them
35 listener 
45 f 	// List of deleted data cache ids, so we can reuse them
46 g 	core_deletedIds = [],
47 h 
33 f 	document = window.document,
33 null 	document = window.document,
31 LargeObject 
290 ExpectAllFields 		return this.eq( -1 );
29 null 	// For `typeof node.method` instead of `node.method !== undefined`
84 check_case 	rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g,
31 testString 
53 testNumber 	core_slice = core_deletedIds.slice,
75 testBoolean 	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
32 f 	// Use the correct document accordingly with window argument (sandbox)
42 null 	// [[Class]] -> type pairs
54 null 	core_indexOf = core_deletedIds.indexOf,
56 f 	core_hasOwn = class2type.hasOwnProperty,
65 null 	// Used for matching numbers
76 null 	// Strict HTML recognition (#11290: must start with <)
78 f 
87 null 
28 f0 	// Support: IE<9
52 f1 	core_push = core_deletedIds.push,
63 f2 	},
77 fn 	rquickExpr = /^(?:(<[\w\W]+>)[^>]*|#([\w-]*))$/,
28 f0 	// Support: IE<9
32 f1 	// Use the correct document accordingly with window argument (sandbox)
76 j 	// Strict HTML recognition (#11290: must start with <)
90 f 	rdashAlpha = /-([\da-z])/gi,
100 s 
110 al 			document.removeEventListener( "DOMContentLoaded", completed, false );
141 isPrime 
129 testToLocaleTimeString 			return this;
30 Object 	core_strundefined = typeof undefined,
34 Array 	location = window.location,
28 null 	// Support: IE<9
28 A 	// Support: IE<9
29 B 	// For `typeof node.method` instead of `node.method !== undefined`
30 C 	core_strundefined = typeof undefined,
32 NewC 	// Use the correct document accordingly with window argument (sandbox)
63 D 	},
77 X 	rquickExpr = /^(?:(<[\w\W]+>)[^>]*|#([\w-]*))$/,
78 Y 
80 null 	rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
28 CheckMatch 	// Support: IE<9
82 check_case 	// JSON RegExp
121 f 	jquery: core_version,
28 testEscape 	// Support: IE<9
224 lazyLiteral 
61 DoOrDont 		// The jQuery object is actually just the init constructor 'enhanced'
28 toNumber 	// Support: IE<9
36 null 	// Map over jQuery in case of overwrite
37 null 	_jQuery = window.jQuery,
44 null 
45 null 	// List of deleted data cache ids, so we can reuse them
28 f0 	// Support: IE<9
36 f1 	// Map over jQuery in case of overwrite
47 f2 
96 f3 	},
132 f4 		// Handle HTML strings
152 f5 						context && context.nodeType ? context.ownerDocument || context : document,
173 f6 				} else {
34 cp 	location = window.location,
42 r 	// [[Class]] -> type pairs
28 f 	// Support: IE<9
34 null 	location = window.location,
28 ToUInt32 	// Support: IE<9
28 f 	// Support: IE<9
9050 get_most_popular 		return this;
29 f 	// For `typeof node.method` instead of `node.method !== undefined`
38 g 
39 h 	// Map over the $ in case of overwrite
30 null 	core_strundefined = typeof undefined,
28 sum 	// Support: IE<9
28 countArguments 	// Support: IE<9
35 setArgumentCount 
28 f1 	// Support: IE<9
32 f2 	// Use the correct document accordingly with window argument (sandbox)
39 g 	// Map over the $ in case of overwrite
28 argc0 	// Support: IE<9
32 argc1 	// Use the correct document accordingly with window argument (sandbox)
36 argc2 	// Map over jQuery in case of overwrite
57 argv0 	core_trim = core_version.trim,
61 argv1 		// The jQuery object is actually just the init constructor 'enhanced'
65 argv2 	// Used for matching numbers
96 f 	},
39 null 	// Map over the $ in case of overwrite
42 null 	// [[Class]] -> type pairs
48 null 	core_version = "1.9.1",
52 null 	core_push = core_deletedIds.push,
58 null 
67 null 
77 null 	rquickExpr = /^(?:(<[\w\W]+>)[^>]*|#([\w-]*))$/,
81 null 
87 null 
93 null 	// Used by jQuery.camelCase as callback to replace()
101 null 		// readyState === "complete" is good enough for us to call the dom ready in oldIE
109 null 		if ( document.addEventListener ) {
118 null 
121 null 	jquery: core_version,
123 null 	constructor: jQuery,
124 null 	init: function( selector, context, rootjQuery ) {
129 null 			return this;
131 null 
135 null 				// Assume that strings that start and end with <> are HTML and skip the regex check
141 null 
149 null 					// scripts is true for back-compat
157 null 					if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
162 null 
168 null 					}
173 null 				} else {
180 null 						// by name instead of ID
186 null 						this.length = 1;
194 null 
198 null 
199 null 			// HANDLE: $(expr, context)
204 null 
206 null 		} else if ( selector.nodeType ) {
210 null 
215 null 		}
224 null 
37 null 	_jQuery = window.jQuery,
40 null 	_$ = window.$,
43 null 	class2type = {},
44 PseudoArray 
91 null 
97 null 
101 null 		// readyState === "complete" is good enough for us to call the dom ready in oldIE
104 null 			jQuery.ready();
107 null 	// Clean-up method for dom ready events
110 null 			document.removeEventListener( "DOMContentLoaded", completed, false );
113 null 		} else {
116 null 		}
119 null jQuery.fn = jQuery.prototype = {
60 null 	jQuery = function( selector, context ) {
64 null 
67 null 
70 null 
73 null 
76 null 	// Strict HTML recognition (#11290: must start with <)
79 null 	// Match a standalone tag
82 null 	// JSON RegExp
85 null 	rvalidescape = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,
33 null 	document = window.document,
28 TryCall 	// Support: IE<9
36 code 	// Map over jQuery in case of overwrite
30 f 	core_strundefined = typeof undefined,
31 null 
31 CheckException 
43 TestLocal 	class2type = {},
55 TestGlobal 	core_toString = class2type.toString,
83 TestContext 	rvalidchars = /^[\],:{}\s]*$/,
96 TestAll 	},
106 TestConflict 	},
34 testDateParse 	location = window.location,
42 testDateParseLocalTime 	// [[Class]] -> type pairs
48 testDateParseMisc 	core_version = "1.9.1",
265 null 	},
31 f 
35 g 
46 safeEval 	core_deletedIds = [],
54 listener 	core_indexOf = core_deletedIds.indexOf,
32 f 	// Use the correct document accordingly with window argument (sandbox)
33 g 	document = window.document,
38 safeEval 
47 testArguments 
58 listener 
92 g 
33 Point 	document = window.document,
34 listener 	location = window.location,
46 a 	core_deletedIds = [],
50 b 	// Save a reference to some core methods
55 c 	core_toString = class2type.toString,
60 d 	jQuery = function( selector, context ) {
38 safeEval 
47 testArguments 
65 listener 	// Used for matching numbers
99 f 	completed = function( event ) {
103 g 			detach();
38 safeEval 
47 testRequest 
65 listener 	// Used for matching numbers
100 f 
104 g 			jQuery.ready();
34 listener 	location = window.location,
63 a 	},
50 f 	// Save a reference to some core methods
53 d 	core_slice = core_deletedIds.slice,
61 closure_simple 		// The jQuery object is actually just the init constructor 'enhanced'
73 closure_eval 
62 null 		return new jQuery.fn.init( selector, context, rootjQuery );
77 e 	rquickExpr = /^(?:(<[\w\W]+>)[^>]*|#([\w-]*))$/,
38 safeEval 
47 testArguments 
59 listener 	// Define a local copy of jQuery
106 f 	},
110 g 			document.removeEventListener( "DOMContentLoaded", completed, false );
30 a 	core_strundefined = typeof undefined,
31 b 
34 c 	location = window.location,
38 listener 
58 f 
35 newdeep 
30 null 	core_strundefined = typeof undefined,
30 null 	core_strundefined = typeof undefined,
30 has 	core_strundefined = typeof undefined,
111 Wrapper 			window.removeEventListener( "load", completed, false );
68 null 	// Used for splitting on whitespace
74 null 	// A simple way to check for HTML strings
80 null 	rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
113 null 		} else {
28 f 	// Support: IE<9
32 g 	// Use the correct document accordingly with window argument (sandbox)
28 assertSyntaxError 	// Support: IE<9
30 for_in_null 	core_strundefined = typeof undefined,
41 for_in_undefined 
29 Funky 	// For `typeof node.method` instead of `node.method !== undefined`
28 strip 	// Support: IE<9
32 null 	// Use the correct document accordingly with window argument (sandbox)
28 f 	// Support: IE<9
32 g 	// Use the correct document accordingly with window argument (sandbox)
38 h 
29 TestFunctionNames 	// For `typeof node.method` instead of `node.method !== undefined`
28 f 	// Support: IE<9
31 TestNonObjectPrototype 
45 F 	// List of deleted data cache ids, so we can reuse them
62 GetPrototypeOf 		return new jQuery.fn.init( selector, context, rootjQuery );
73 NoPrototypeYet 
77 NonObjectPrototype 	rquickExpr = /^(?:(<[\w\W]+>)[^>]*|#([\w-]*))$/,
81 NoInitialMap 
32 F 	// Use the correct document accordingly with window argument (sandbox)
33 f 	document = window.document,
40 g 	_$ = window.$,
34 h 	location = window.location,
41 h 
74 null 	// A simple way to check for HTML strings
75 null 	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
76 null 	// Strict HTML recognition (#11290: must start with <)
32 getAnException 	// Use the correct document accordingly with window argument (sandbox)
40 getSpecialObjects 	_$ = window.$,
68 runTest 	// Used for splitting on whitespace
54 null 	core_indexOf = core_deletedIds.indexOf,
84 null 	rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g,
42 null 	// [[Class]] -> type pairs
85 null 	rvalidescape = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,
30 IterativeFib 	core_strundefined = typeof undefined,
39 RecursiveFib 	// Map over the $ in case of overwrite
44 Check 
30 CheckSimple 	core_strundefined = typeof undefined,
40 CheckCompound 	_$ = window.$,
34 TestChains 	location = window.location,
61 TestExceptions 		// The jQuery object is actually just the init constructor 'enhanced'
41 F 
62 F 		return new jQuery.fn.init( selector, context, rootjQuery );
88 G 	// Matches dashed string for camelizing
28 TestIntToString 	// Support: IE<9
33 null 	document = window.document,
40 prototypeTest 	_$ = window.$,
38 null 
65 null 	// Used for matching numbers
72 arrayLengthTest 	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
93 null 	// Used by jQuery.camelCase as callback to replace()
100 stringLengthTest 
121 null 	jquery: core_version,
128 fieldTest 		if ( !selector ) {
150 null 					jQuery.merge( this, jQuery.parseHTML(
151 fun 						match[1],
161 constantFunctionTest 								this[ match ]( context[ match ] );
183 null 						}
190 fieldTest 					this.context = document;
28 F 	// Support: IE<9
30 GrowNamed 	core_strundefined = typeof undefined,
39 GrowKeyed 	// Map over the $ in case of overwrite
33 fac 	document = window.document,
38 testFac 
42 testRegExp 	// [[Class]] -> type pairs
48 main 	core_version = "1.9.1",
39 null 	// Map over the $ in case of overwrite
63 null 	},
28 load 	// Support: IE<9
32 store 	// Use the correct document accordingly with window argument (sandbox)
36 call 	// Map over jQuery in case of overwrite
41 null 
54 null 	core_indexOf = core_deletedIds.indexOf,
55 null 	core_toString = class2type.toString,
56 null 	core_hasOwn = class2type.hasOwnProperty,
56 null 	core_hasOwn = class2type.hasOwnProperty,
31 testArrayMirror 
97 null 
105 null 		}
31 testBooleanMirror 
31 testDateMirror 
31 testErrorMirror 
31 testFunctionMirror 
74 null 	// A simple way to check for HTML strings
75 a 	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
31 testNumberMirror 
31 testObjectMirror 
127 Point 		// HANDLE: $(""), $(null), $(undefined), $(false)
136 pow 				match = [ null, selector, null ];
155 null 
156 null 					// HANDLE: $(html, props)
157 null 					if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
158 null 						for ( match in context ) {
42 testRegExpMirror 	// [[Class]] -> type pairs
31 testStringMirror 
28 IsNegativeZero 	// Support: IE<9
28 Construct 	// Support: IE<9
54 null 	core_indexOf = core_deletedIds.indexOf,
31 f 
33 g 	document = window.document,
29 testLimits 	// For `typeof node.method` instead of `node.method !== undefined`
9 GeneratePayloadTree  * Released under the MIT license
24 GenerateKey 
31 InsertNewNode 
43 SplaySetup 	class2type = {},
49 SplayTearDown 
71 SplayRun 	// Make sure we trim BOM and NBSP (here's looking at you, Safari 5.0 and IE)
90 SplayTree 	rdashAlpha = /-([\da-z])/gi,
106 null 	},
119 null jQuery.fn = jQuery.prototype = {
152 null 						context && context.nodeType ? context.ownerDocument || context : document,
183 null 						}
196 null 			} else if ( !context || context.jquery ) {
218 null 			this.selector = selector.selector;
237 null 		return core_slice.call( this );
305 null 	end: function() {
330 null 		// skip the boolean and the target
221 null 
19 runRichards // Support: Firefox 18+
73 getTime 
88 Scheduler 	// Matches dashed string for camelizing
249 TaskControlBlock 			( num < 0 ? this[ this.length + num ] : this[ num ] );
357 IdleTask 
385 DeviceTask 		if ( window.$ === jQuery ) {
413 WorkerTask 	ready: function( wait ) {
448 HandlerTask 
504 Packet 		return true;
115 null 			window.detachEvent( "onload", completed );
125 null 		var match, elem;
135 null 				// Assume that strings that start and end with <> are HTML and skip the regex check
145 null 				// HANDLE: $(html) -> $(array)
156 null 					// HANDLE: $(html, props)
168 null 					}
177 null 					// nodes that are no longer in the document #6963
193 null 				}
209 null 			return this;
219 null 			this.context = selector.context;
230 null 
286 null 		return this.eq( 0 );
290 null 		return this.eq( -1 );
294 null 		var len = this.length,
298 null 
302 null 		}));
306 null 		return this.prevObject || this.constructor(null);
313 null 	splice: [].splice
334 null 	// Handle case when target is a string or something (possible in deep copy)
345 null 	for ( ; i < length; i++ ) {
363 null 
375 null 			}
390 null 			window.jQuery = _jQuery;
402 null 
419 null 
439 null 		}
454 null 		return obj != null && obj == obj.window;
482 null 				!core_hasOwn.call(obj.constructor.prototype, "isPrototypeOf") ) {
516 null 			return null;
526 null 
9 Benchmark  * Released under the MIT license
15 time 
27 error 
35 doFib 
40 fib 	_$ = window.$,
51 loop 	core_concat = core_deletedIds.concat,
69 TowersDisk 	core_rnotwhite = /\S+/g,
74 towersPush 	// A simple way to check for HTML strings
82 towersPop 	// JSON RegExp
90 towersMoveTop 	rdashAlpha = /-([\da-z])/gi,
95 towersMove 		return letter.toUpperCase();
106 towersBuild 	},
112 towers 
127 doSieve 		// HANDLE: $(""), $(null), $(undefined), $(false)
139 sieve 				match = rquickExpr.exec( selector );
154 swap 					) );
160 doPermute 							if ( jQuery.isFunction( this[ match ] ) ) {
172 permute 				// HANDLE: $(#id)
186 tryQueens 						this.length = 1;
211 queens 		// HANDLE: $(function)
232 recurse 	size: function() {
244 doSum 
250 sum 	},
263 random 		// Return the newly-formed element set
268 SortData 	// (You can seed the arguments with an array of args, but this is
287 check 	},
301 doBubblesort 			return callback.call( elem, i, elem );
313 bubblesort 	splice: [].splice
325 doQuicksort 
344 quicksort 
356 TreeNode 				}
378 treesort 
393 tak 		return jQuery;
404 ListElement 	holdReady: function( hold ) {
409 makeList 		}
414 isShorter 
424 doTakl 
434 takl 		readyList.resolveWith( document, [ jQuery ] );
238 null 	},
362 null 						clone = src && jQuery.isArray(src) ? src : [];
372 null 				} else if ( copy !== undefined ) {
398 null 
52 BigInteger 	core_push = core_deletedIds.push,
61 nbi 		// The jQuery object is actually just the init constructor 'enhanced'
71 am1 	// Make sure we trim BOM and NBSP (here's looking at you, Safari 5.0 and IE)
85 am2 	rvalidescape = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,
102 am3 		if ( document.addEventListener || event.type === "load" || document.readyState === "complete" ) {
120 am4 	// The current version of jQuery being used
194 int2char 
195 intAt 			// HANDLE: $(expr, $(...))
201 bnpCopyTo 			} else {
211 bnpFromInt 		// HANDLE: $(function)
222 nbv 		return jQuery.makeArray( selector, this );
225 bnpFromString 	// Start with an empty selector
265 bnpClamp 	},
272 bnToString 	},
303 bnNegate 	},
306 bnAbs 		return this.prevObject || this.constructor(null);
309 bnCompareTo 	// For internal use only.
323 nbits 		length = arguments.length,
334 bnBitLength 	// Handle case when target is a string or something (possible in deep copy)
341 bnpDLShiftTo 		target = this;
352 bnpDRShiftTo 
361 bnpLShiftTo 						copyIsArray = false;
380 bnpRShiftTo 	return target;
400 bnpSubTo 	// the ready event fires. See #6781
437 bnpMultiplyTo 		if ( jQuery.fn.trigger ) {
453 bnpSquareTo 	isWindow: function( obj ) {
474 bnpDivRemTo 		if ( !obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
527 bnMod 		// Single tag
535 Classic 		}
536 cConvert 		return jQuery.merge( [], parsed.childNodes );
540 cRevert 		// Attempt to parse using the native JSON parser first
541 cReduce 		if ( window.JSON && window.JSON.parse ) {
542 cMulTo 			return window.JSON.parse( data );
543 cSqrTo 		}
561 bnpInvDigit 					return ( new Function( "return " + data ) )();
578 Montgomery 				xml = tmp.parseFromString( data , "text/xml" );
588 montConvert 			jQuery.error( "Invalid XML: " + data );
597 montRevert 	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context
605 montReduce 			} )( data );
625 montSqrTo 
628 montMulTo 				for ( ; i < length; i++ ) {
637 bnpIsEven 					value = callback.apply( obj[ i ], args );
643 bnpExp 			}
656 bnModPowInt 				for ( i in obj ) {
698 bnClone 
701 bnIntValue 
714 bnByteValue 				// Skip accessing in sparse arrays
720 bnShortValue 
726 bnpChunkSize 			i = first.length,
729 bnSigNum 		if ( typeof l === "number" ) {
737 bnpToRadix 		}
752 bnpFromRadix 		// that pass the validator function
779 bnpFromNumber 			}
805 bnToByteArray 			tmp = fn[ context ];
830 bnEquals 	access: function( elems, fn, key, value, chainable, emptyGet, raw ) {
831 bnMin 		var i = 0,
832 bnMax 			length = elems.length,
835 bnpBitwiseTo 		// Sets many values
856 op_and 				// ...except when executing function values
857 bnAnd 				} else {
860 op_or 						return bulk.call( jQuery( elem ), value );
861 bnOr 					};
864 op_xor 
865 bnXor 			if ( fn ) {
868 op_andnot 				}
869 bnAndNot 			}
872 bnNot 		return chainable ?
884 bnShiftLeft });
891 bnShiftRight 		// Catch cases where $(document).ready() is called after the browser event has already occurred.
898 lbit 		// Standards-based browsers support DOMContentLoaded
910 bnGetLowestSetBit 
919 cbit 				top = window.frameElement == null && document.documentElement;
926 bnBitCount 						try {
933 bnTestBit 
941 bnpChangeBit 			}
948 bnSetBit jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
951 bnClearBit 
954 bnFlipBit 		type = jQuery.type( obj );
957 bnpAddTo 		return false;
993 bnAdd  *
996 bnSubtract  *	memory:			will keep track of previous values and will call any callback added
999 bnMultiply  *
1002 bnDivide  *	stopOnFalse:	interrupt callings when a callback returns false
1005 bnRemainder jQuery.Callbacks = function( options ) {
1008 bnDivideAndRemainder 	// (we check in cache first)
1015 bnpDMultiply 		// Last fire value (for non-forgettable lists)
1023 bnpDAddOffset 		// First callback to fire (used internally by add and fireWith)
1035 NullExp 			firingLength = list.length;
1036 nNop 			firing = true;
1037 nMulTo 			for ( ; list && firingIndex < firingLength; firingIndex++ ) {
1038 nSqrTo 				if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {
1046 bnPow 					if ( stack.length ) {
1050 bnpMultiplyLowerTo 					list = [];
1065 bnpMultiplyUpperTo 							var type = jQuery.type( arg );
1079 Barrett 						firingLength = list.length;
1088 barrettConvert 			},
1094 barrettRevert 						while( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
1097 barrettReduce 							if ( firing ) {
1108 barrettSqrTo 				return this;
1111 barrettMulTo 			// If no argument is given, return whether or not list has callbacks attached.
1120 bnModPow 			// Have the list do nothing anymore
1180 bnGCD 				},
1208 bnpModInt 				// If obj is provided, the promise aspect is added to the object
1219 bnModInverse 		jQuery.each( tuples, function( i, tuple ) {
1264 bnIsProbablePrime 
1284 bnpMillerRabin 		if ( length > 1 ) {
1367 Arcfour 		// Make sure that a selected-by-default option has a working selected property.
1374 ARC4init 		// Makes sure cloning an html5 element does not cause problems
1389 ARC4next 	};
1403 prng_newstate 	} catch( e ) {
1421 rng_seed_int 	fragment = document.createDocumentFragment();
1430 rng_seed_time 
1450 rng_get_byte 	div.style.backgroundClip = "content-box";
1464 rng_get_bytes 
1469 SecureRandom 
1475 parseBigInt 		// display:none (it is still safe to use offsets if a parent element is
1479 linebrk 		tds[ 0 ].style.cssText = "padding:0;margin:0;border:0;display:none";
1489 byte2Hex 		// Check box-sizing and margin behavior
1497 pkcs1pad2 			support.pixelPosition = ( window.getComputedStyle( div, null ) || {} ).top !== "1%";
1519 RSAKey 			div.style.cssText = divReset + "width:1px;padding:1px;display:inline;zoom:1";
1531 RSASetPublic 				// Prevent IE from shrinking the body in IE 7 mode #12869
1541 RSADoPublic 	});
1546 RSAEncrypt 	return support;
1571 pkcs1unpad2 		id = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey;
1587 RSASetPrivate 	}
1598 RSASetPrivateEx 
1614 RSAGenerate 	if ( !pvt ) {
1648 RSADoPrivate 		return;
1663 RSADecrypt 
1707 encrypt 
1718 decrypt 
141 null 
159 null 							// Properties of context are called as methods if possible
32 Vector 	// Use the correct document accordingly with window argument (sandbox)
77 Strength 	rquickExpr = /^(?:(<[\w\W]+>)[^>]*|#([\w-]*))$/,
129 Constraint 			return this;
188 UnaryConstraint 					}
269 StayConstraint 	// only used internally.)
287 EditConstraint 	},
317 BinaryConstraint jQuery.fn.init.prototype = jQuery.fn;
431 ScaleConstraint 		}
490 EqualityConstraint 		// Own properties are enumerated firstly, so to speed up,
513 Variable 	// keepScripts (optional): If true, will include scripts passed in the html string
546 Planner 			return data;
733 Plan 		} else {
773 chainTest 			for ( ; i < length; i++ ) {
807 projectionTest 			fn = tmp;
838 change 			for ( i in key ) {
853 deltaBlue 					fn.call( elems, value );
25 null 	// A central reference to the root jQuery(document)
36 null 	// Map over jQuery in case of overwrite
40 null 	_$ = window.$,
44 null 
48 null 	core_version = "1.9.1",
52 null 	core_push = core_deletedIds.push,
82 null 	// JSON RegExp
86 null 	rvalidtokens = /"[^"\\\r\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g,
90 null 	rdashAlpha = /-([\da-z])/gi,
94 null 	fcamelCase = function( all, letter ) {
98 null 	// The ready event handler
136 null 				match = [ null, selector, null ];
148 null 
166 null 							}
176 null 					// Check parentNode to catch when Blackberry 4.6 returns
26 Inheriter 	rootjQuery,
200 null 			// (which is just equivalent to: $(context).find(expr)
209 null 			return this;
217 null 		if ( selector.selector !== undefined ) {
221 null 
228 null 	// The default length of a jQuery object is 0
237 null 		return core_slice.call( this );
246 null 			this.toArray() :
250 null 	},
254 null 	pushStack: function( elems ) {
275 null 		// Add the callback
296 null 		return this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );
300 null 		return this.pushStack( jQuery.map(this, function( elem, i ) {
332 null 	}
357 null 
366 null 					}
373 null 					target[ name ] = copy;
380 null 	return target;
387 null 		}
396 null 	// Is the DOM ready to be used? Set to true once it occurs.
406 null 			jQuery.readyWait++;
410 null 	},
415 null 		// Abort if there are pending holds or we're already ready
443 null 	// Since version 1.3, DOM methods and functions like alert
449 null 	isArray: Array.isArray || function( obj ) {
455 null 	},
463 null 			return String( obj );
476 null 		}
499 null 	isEmptyObject: function( obj ) {
527 null 		// Single tag
534 null 			jQuery( scripts ).remove();
564 null 		}
582 null 				xml.loadXML( data );
601 null 			// We use an anonymous function so that context is window
624 null 			isArray = isArraylike( obj );
643 null 			}
667 null 	},
688 null 		if ( arr != null ) {
714 null 				// Skip accessing in sparse arrays
737 null 		}
741 null 		return first;
745 null 		var retVal,
749 null 		inv = !!inv;
51 d 	core_concat = core_deletedIds.concat,
54 Time 	core_indexOf = core_deletedIds.indexOf,
57 isObject 	core_trim = core_version.trim,
60 Floor 	jQuery = function( selector, context ) {
63 Random 	},
66 Message 	core_pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
69 timer 	core_rnotwhite = /\S+/g,
84 GenName 	rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g,
93 World 	// Used by jQuery.camelCase as callback to replace()
146 Generator 				if ( match[1] ) {
168 Creature 					}
418 l 		}
422 r 			return setTimeout( jQuery.ready );
413 null 	ready: function( wait ) {
95 null 		return letter.toUpperCase();
102 null 		if ( document.addEventListener || event.type === "load" || document.readyState === "complete" ) {
105 null 		}
108 null 	detach = function() {
111 null 			window.removeEventListener( "load", completed, false );
121 null 	jquery: core_version,
125 null 		var match, elem;
131 null 
141 null 
169 a 
187 e 						this[0] = elem;
204 h 
209 q 			return this;
213 B 		} else if ( jQuery.isFunction( selector ) ) {
261 f 		ret.context = this.context;
278 null 		return this;
295 null 			j = +i + ( i < 0 ? len : 0 );
298 null 
301 null 			return callback.call( elem, i, elem );
304 null 
307 null 	},
321 null 		target = arguments[0] || {},
324 null 		deep = false;
327 null 	if ( typeof target === "boolean" ) {
335 null 	if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
338 null 
341 null 		target = this;
147 a 					context = context instanceof jQuery ? context[0] : context;
159 null 							// Properties of context are called as methods if possible
1 null /*!
1 null /*!
35 null 
36 null 	// Map over jQuery in case of overwrite
37 null 	_jQuery = window.jQuery,
18 c // you try to trace through "use strict" call chains. (#13335)
26 Point2D 	rootjQuery,
33 Matrix3D 	document = window.document,
111 x2px 			window.removeEventListener( "load", completed, false );
114 y2px 			document.detachEvent( "onreadystatechange", completed );
118 px2x 
121 px2y 	jquery: core_version,
125 drawLine 		var match, elem;
130 redraw 		}
273 getPos 
285 getPath 	first: function() {
326 drawPoints 	// Handle a deep copy situation
362 factorial 						clone = src && jQuery.isArray(src) ? src : [];
369 binomial 					target[ name ] = jQuery.extend( deep, clone, copy );
372 myPow 				} else if ( copy !== undefined ) {
376 b 		}
384 main 	noConflict: function( deep ) {
170 null 					return this;
398 null 
296 null 		return this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );
309 null 	// For internal use only.
318 null 
28 null 	// Support: IE<9
40 null 	_$ = window.$,
49 null 
80 null 	rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
85 null 	rvalidescape = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,
104 null 			jQuery.ready();
89 $ 	rmsPrefix = /^-ms-/,
92 cc 
96 get_time 	},
101 rr 		// readyState === "complete" is good enough for us to call the dom ready in oldIE
105 col 		}
108 hex 	detach = function() {
112 clamp 
115 pxl 			window.detachEvent( "onload", completed );
121 precompute 	jquery: core_version,
134 blur_box 			if ( selector.charAt(0) === "<" && selector.charAt( selector.length - 1 ) === ">" && selector.length >= 3 ) {
164 composite 							} else {
185 render_gradient 						// Otherwise, we inject the element directly into the jQuery object
203 render_shape_offline 			}
244 generate_parameters 
299 ef 	map: function( callback ) {
307 ef2 	},
316 er // Give the init function the jQuery prototype for later instantiation
320 ed 	var src, copyIsArray, copy, name, options, clone,
327 df 	if ( typeof target === "boolean" ) {
330 df2 		// skip the boolean and the target
333 dr 
336 dd 		target = {};
340 decode_pars 	if ( length === i ) {
348 encode_pars 			// Extend the base object
352 test_attractor 
384 render_attractor_canvas 	noConflict: function( deep ) {
392 go 
408 get_hash 			jQuery.ready( true );
413 set_url 	ready: function( wait ) {
418 start 		}
432 null 
422 null 			return setTimeout( jQuery.ready );
425 null 		// Remember that the DOM is ready
31 l 
37 m 	_jQuery = window.jQuery,
40 n 	_$ = window.$,
48 p 	core_version = "1.9.1",
82 t 	// JSON RegExp
124 x 	init: function( selector, context, rootjQuery ) {
161 z 								this[ match ]( context[ match ] );
169 A 
191 D 					this.selector = selector;
204 E 
243 F 		return num == null ?
365 q 						clone = src && jQuery.isPlainObject(src) ? src : {};
368 s 					// Never move original objects, clone them
407 O 		} else {
53 null 	core_slice = core_deletedIds.slice,
78 null 
97 null 
117 null 	};
135 null 				// Assume that strings that start and end with <> are HTML and skip the regex check
150 null 					jQuery.merge( this, jQuery.parseHTML(
166 null 							}
256 null 		// Build a new jQuery matched element set
329 null 		target = arguments[1] || {};
375 null 			}
44 null 
42 null 	// [[Class]] -> type pairs
389 null 		if ( deep && window.jQuery === jQuery ) {
158 $ 						for ( match in context ) {
161 randInt 								this[ match ]( context[ match ] );
245 mousedown 			// Return a 'clean' array
248 mouseup 			// Return just the object
251 mousemove 
255 keydown 
261 keyup 		ret.context = this.context;
270 bg 	each: function( callback, args ) {
274 addBall 	ready: function( fn ) {
288 addBullet 
330 drawBalls 		// skip the boolean and the target
337 drawScene 	}
363 drawBullets 
370 drawAmmo 
377 drawScore 	}
383 outOfBounds jQuery.extend({
396 collide 	// Is the DOM ready to be used? Set to true once it occurs.
417 testEndGame 			return;
433 updateScoreChart 		// If there are functions bound, to execute
454 saveHighScore 		return obj != null && obj == obj.window;
461 endGame 	type: function( obj ) {
472 main 		// Because of IE, we also have to check the presence of the constructor property.
151 null 						match[1],
164 null 							} else {
213 null 		} else if ( jQuery.isFunction( selector ) ) {
222 null 		return jQuery.makeArray( selector, this );
229 null 	length: 0,
232 null 	size: function() {
434 null 		readyList.resolveWith( document, [ jQuery ] );
503 null 		}
507 null 	error: function( msg ) {
23 l 	readyList,
86 randomPos 	rvalidtokens = /"[^"\\\r\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g,
91 sch 
98 h2r 	// The ready event handler
120 pto 	// The current version of jQuery being used
123 uf 	constructor: jQuery,
129 null 			return this;
49 blurdisk 
60 go 	jQuery = function( selector, context ) {
29 null 	// For `typeof node.method` instead of `node.method !== undefined`
82 null 	// JSON RegExp
61 null 		// The jQuery object is actually just the init constructor 'enhanced'
103 h2r 			detach();
253 N 	// (returning the new matched element set)
256 O 		// Build a new jQuery matched element set
260 T 		ret.prevObject = this;
264 U 		return ret;
267 ka 	// Execute a callback for every element in the matched set.
270 sa 	each: function( callback, args ) {
273 gm 
277 la 
280 V 
403 $ 	// Hold (or release) the ready event
572 pa 		if ( !data || typeof data !== "string" ) {
582 Y 				xml.loadXML( data );
585 X 			xml = undefined;
591 oa 	},
603 na 			( window.execScript || function( data ) {
613 ma 	},
627 qa 			if ( isArray ) {
283 null 	},
406 null 			jQuery.readyWait++;
411 null 
417 null 			return;
425 null 		// Remember that the DOM is ready
429 null 		if ( wait !== true && --jQuery.readyWait > 0 ) {
431 null 		}
442 null 	// See test/unit/core.js for details concerning isFunction.
444 null 	// aren't supported. They return false on IE (#2968).
446 null 		return jQuery.type(obj) === "function";
459 null 	},
468 null 	},
472 null 		// Because of IE, we also have to check the presence of the constructor property.
478 null 		try {
481 null 				!core_hasOwn.call(obj, "constructor") &&
485 null 		} catch ( e ) {
556 null 				// Logic borrowed from http://json.org/json2.js
563 null 			}
569 null 	// Cross-browser xml parsing
284 null 
287 b 	},
326 null 	// Handle a deep copy situation
331 null 		i = 2;
337 null 	}
341 null 		target = this;
370 null 
371 null 				// Don't bring in undefined values
372 null 				} else if ( copy !== undefined ) {
374 null 				}
386 null 			window.$ = _$;
389 null 		if ( deep && window.jQuery === jQuery ) {
392 null 
396 null 	// Is the DOM ready to be used? Set to true once it occurs.
628 h 				for ( ; i < length; i++ ) {
632 null 						break;
651 null 					if ( value === false ) {
660 null 						break;
34 $ 	location = window.location,
37 aB 	_jQuery = window.jQuery,
48 dG 	core_version = "1.9.1",
59 dB 	// Define a local copy of jQuery
75 rPU 	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
83 cir 	rvalidchars = /^[\],:{}\s]*$/,
95 d2r 		return letter.toUpperCase();
98 rand 	// The ready event handler
101 round 		// readyState === "complete" is good enough for us to call the dom ready in oldIE
105 dist 		}
110 draw 			document.removeEventListener( "DOMContentLoaded", completed, false );
392 init 
16 mouseMove // Can't do this because several apps including ASP.NET trace
20 mouseDown //"use strict";
23 mouseUp 	readyList,
26 keyDown 	rootjQuery,
31 keyUp 
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
16 null // Can't do this because several apps including ASP.NET trace
51 d 	core_concat = core_deletedIds.concat,
63 u 	},
69 q 	core_rnotwhite = /\S+/g,
75 b 	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
294 D 		var len = this.length,
336 n 		target = {};
357 y 
361 a 						copyIsArray = false;
365 A 						clone = src && jQuery.isPlainObject(src) ? src : {};
373 F 					target[ name ] = copy;
38 null 
92 null 
161 null 								this[ match ]( context[ match ] );
164 null 							} else {
170 null 					return this;
176 null 					// Check parentNode to catch when Blackberry 4.6 returns
217 null 		if ( selector.selector !== undefined ) {
226 null 	selector: "",
230 null 
233 null 		return this.length;
241 null 	// Get the whole matched element set as a clean array
247 null 
254 null 	pushStack: function( elems ) {
270 null 	each: function( callback, args ) {
278 null 		return this;
285 null 	first: function() {
300 null 		return this.pushStack( jQuery.map(this, function( elem, i ) {
303 null 	},
306 null 		return this.prevObject || this.constructor(null);
310 null 	// Behaves like an Array's method, not like a jQuery method.
313 null 	splice: [].splice
316 null // Give the init function the jQuery prototype for later instantiation
321 null 		target = arguments[0] || {},
326 null 	// Handle a deep copy situation
331 null 		i = 2;
348 null 			// Extend the base object
271 null 		return jQuery.each( this, callback, args );
10 createTerrain  * http://jquery.org/license
41 animatedDraw 
52 fractalize 	core_push = core_deletedIds.push,
74 drawLandscape 	// A simple way to check for HTML strings
112 null 
162 null 
1 null /*!
30 null 	core_strundefined = typeof undefined,
41 circle 
63 null 	},
99 null 	completed = function( event ) {
119 gvect jQuery.fn = jQuery.prototype = {
130 rvect 		}
135 add 				// Assume that strings that start and end with <> are HTML and skip the regex check
144 next 
39 null 	// Map over the $ in case of overwrite
113 null 		} else {
117 null 	};
121 null 	jquery: core_version,
124 null 	init: function( selector, context, rootjQuery ) {
127 null 		// HANDLE: $(""), $(null), $(undefined), $(false)
130 null 		}
133 null 		if ( typeof selector === "string" ) {
139 null 				match = rquickExpr.exec( selector );
142 null 			// Match html or make sure no context is specified for #id
145 null 				// HANDLE: $(html) -> $(array)
149 null 					// scripts is true for back-compat
170 null 					return this;
171 loremIpsum 
182 $ 							return rootjQuery.find( selector );
191 idle 					this.selector = selector;
196 add 			} else if ( !context || context.jquery ) {
55 add 	core_toString = class2type.toString,
75 preload 	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
85 redraw 	rvalidescape = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,
101 setScheme 		// readyState === "complete" is good enough for us to call the dom ready in oldIE
43 null 	class2type = {},
78 null 
46 null 	core_deletedIds = [],
49 null 
225 null 	// Start with an empty selector
231 null 	// The number of elements contained in the matched element set
235 null 
238 null 	},
48 q 	core_version = "1.9.1",
70 r 
94 s 	fcamelCase = function( all, letter ) {
120 t 	// The current version of jQuery being used
60 null 	jQuery = function( selector, context ) {
67 null 
80 null 	rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
89 null 	rmsPrefix = /^-ms-/,
91 null 
104 null 			jQuery.ready();
115 null 			window.detachEvent( "onload", completed );
117 null 	};
124 null 	init: function( selector, context, rootjQuery ) {
174 null 					elem = document.getElementById( match[2] );
182 null 							return rootjQuery.find( selector );
194 null 
203 null 			}
212 null 		// Shortcut for document ready
227 null 
237 null 		return core_slice.call( this );
248 null 			// Return just the object
258 null 
135 null 				// Assume that strings that start and end with <> are HTML and skip the regex check
140 null 			}
145 null 				// HANDLE: $(html) -> $(array)
151 null 						match[1],
154 null 					) );
157 null 					if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
161 null 								this[ match ]( context[ match ] );
164 null 							} else {
141 null 
136 null 				match = [ null, selector, null ];
63 null 	},
66 J 	core_pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
81 U 
171 O 
194 aa 
204 H 
208 Z 			this.length = 1;
229 $ 	length: 0,
268 L 	// (You can seed the arguments with an array of args, but this is
293 ba 	eq: function( i ) {
344 ea 
355 V 					continue;
367 da 
375 K 			}
387 fa 		}
405 W 		if ( hold ) {
434 ca 		readyList.resolveWith( document, [ jQuery ] );
441 Y 
94 null 	fcamelCase = function( all, letter ) {
160 null 							if ( jQuery.isFunction( this[ match ] ) ) {
166 null 							}
43 u 	class2type = {},
68 v 	// Used for splitting on whitespace
77 z 	rquickExpr = /^(?:(<[\w\W]+>)[^>]*|#([\w-]*))$/,
101 w 		// readyState === "complete" is good enough for us to call the dom ready in oldIE
124 C 	init: function( selector, context, rootjQuery ) {
129 H 			return this;
143 A 			if ( match && (match[1] || !context) ) {
153 K 						true
105 null 		}
108 null 	detach = function() {
111 null 			window.removeEventListener( "load", completed, false );
35 null 
36 null 	// Map over jQuery in case of overwrite
37 null 	_jQuery = window.jQuery,
63 clear_history 	},
79 normal 	// Match a standalone tag
88 draw_line 	// Matches dashed string for camelizing
133 draw_ray 		if ( typeof selector === "string" ) {
203 draw_ray_3 			}
245 draw_rectangle_4 			// Return a 'clean' array
257 draw_rectangle_1 		var ret = jQuery.merge( this.constructor(), elems );
304 clone 
315 particles_init 
324 particle_draw 		deep = false;
356 updatePhysx 				}
402 update 
449 setup 	isArray: Array.isArray || function( obj ) {
479 null 			// Not own constructor property must be Object
1 null /*!
71 ge 	// Make sure we trim BOM and NBSP (here's looking at you, Safari 5.0 and IE)
74 cs 	// A simple way to check for HTML strings
77 rad 	rquickExpr = /^(?:(<[\w\W]+>)[^>]*|#([\w-]*))$/,
80 sel 	rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
84 Point 	rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g,
105 hex 		}
109 colorStr 		if ( document.addEventListener ) {
115 crossHair 			window.detachEvent( "onload", completed );
128 drawCursor 		if ( !selector ) {
150 compute 					jQuery.merge( this, jQuery.parseHTML(
167 drawWheel 						}
193 getColor 				}
200 showColor 			// (which is just equivalent to: $(context).find(expr)
207 findOtherPoints 			this.context = this[0] = selector;
236 getClickPoint 	toArray: function() {
271 setLight 		return jQuery.each( this, callback, args );
281 showSquare 	slice: function() {
286 setTest 		return this.eq( 0 );
317 rect jQuery.fn.init.prototype = jQuery.fn;
323 setTextMenu 		length = arguments.length,
337 newScheme 	}
357 newAngle 
372 tchoose 				} else if ( copy !== undefined ) {
379 init 	// Return the modified object
96 null 	},
100 null 
399 null 	// A counter to track how many items to wait for before
405 null 		if ( hold ) {
406 null 			jQuery.readyWait++;
416 null 		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
417 null 			return;
421 null 		if ( !document.body ) {
426 null 		jQuery.isReady = true;
428 null 		// If a normal DOM Ready event fired, decrement, and wait if need be
433 null 		// If there are functions bound, to execute
441 null 
400 null 	// the ready event fires. See #6781
307 Point 	},
318 Player 
325 Enemy 
331 Boost 		i = 2;
337 Particle 	}
28 null 	// Support: IE<9
82 j 	// JSON RegExp
99 o 	completed = function( event ) {
105 c 		}
110 l 			document.removeEventListener( "DOMContentLoaded", completed, false );
114 I 			document.detachEvent( "onreadystatechange", completed );
118 i 
127 q 		// HANDLE: $(""), $(null), $(undefined), $(false)
135 v 				// Assume that strings that start and end with <> are HTML and skip the regex check
139 a 				match = rquickExpr.exec( selector );
162 g 
174 G 					elem = document.getElementById( match[2] );
296 F 		return this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );
51 null 	core_concat = core_deletedIds.concat,
310 null 	// Behaves like an Array's method, not like a jQuery method.
315 null 
59 null 	// Define a local copy of jQuery
60 initSnowPos 	jQuery = function( selector, context ) {
112 circle 
123 dist 	constructor: jQuery,
129 rand 			return this;
134 $ 			if ( selector.charAt(0) === "<" && selector.charAt( selector.length - 1 ) === ">" && selector.length >= 3 ) {
139 fixPositions 				match = rquickExpr.exec( selector );
150 randomize 					jQuery.merge( this, jQuery.parseHTML(
242 moveSnow 	get: function( num ) {
257 moveFlake 		var ret = jQuery.merge( this.constructor(), elems );
276 drawSnow 		jQuery.ready.promise().done( fn );
282 drawGraph 		return this.pushStack( core_slice.apply( this, arguments ) );
300 drawOLines 		return this.pushStack( jQuery.map(this, function( elem, i ) {
315 drawPoints 
320 drawRects 	var src, copyIsArray, copy, name, options, clone,
324 draw 		deep = false;
171 mouseMove 
199 keyDown 			// HANDLE: $(expr, context)
340 null 	if ( length === i ) {
29 null 	// For `typeof node.method` instead of `node.method !== undefined`
31 null 
33 null 	document = window.document,
36 null 	// Map over jQuery in case of overwrite
38 null 
41 null 
44 null 
46 null 	core_deletedIds = [],
52 null 	core_push = core_deletedIds.push,
52 null 	core_push = core_deletedIds.push,
26 null 	rootjQuery,
26 null 	rootjQuery,
29 null 	// For `typeof node.method` instead of `node.method !== undefined`
36 null 	// Map over jQuery in case of overwrite
37 r 	_jQuery = window.jQuery,
46 x 	core_deletedIds = [],
70 null 
83 null 	rvalidchars = /^[\],:{}\s]*$/,
91 null 
99 null 	completed = function( event ) {
106 null 	},
128 null 		if ( !selector ) {
140 null 			}
146 null 				if ( match[1] ) {
150 null 					jQuery.merge( this, jQuery.parseHTML(
170 null 					return this;
176 null 					// Check parentNode to catch when Blackberry 4.6 returns
179 null 						// Handle the case where IE and Opera return items
184 null 
193 null 				}
201 null 			} else {
206 null 		} else if ( selector.nodeType ) {
209 null 			return this;
115 null 			window.detachEvent( "onload", completed );
202 null 				return this.constructor( context ).find( selector );
53 null 	core_slice = core_deletedIds.slice,
73 null 
12 null  * Date: 2013-2-4
36 gs 	// Map over jQuery in case of overwrite
40 $ 	_$ = window.$,
43 x 	class2type = {},
47 y 
51 sx 	core_concat = core_deletedIds.concat,
55 sy 	core_toString = class2type.toString,
59 cs 	// Define a local copy of jQuery
63 c 	},
67 sc 
71 init 	// Make sure we trim BOM and NBSP (here's looking at you, Safari 5.0 and IE)
84 repro 	rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g,
90 unset 	rdashAlpha = /-([\da-z])/gi,
95 improbable 		return letter.toUpperCase();
101 set 		// readyState === "complete" is good enough for us to call the dom ready in oldIE
114 solved 			document.detachEvent( "onreadystatechange", completed );
138 null 			} else {
142 null 			// Match html or make sure no context is specified for #id
150 null 					jQuery.merge( this, jQuery.parseHTML(
170 null 					return this;
182 refresh 							return rootjQuery.find( selector );
193 loadGame 				}
199 has 			// HANDLE: $(expr, context)
205 randomNumber 		// HANDLE: $(DOMElement)
210 fill 
224 create 
236 unSolve 	toArray: function() {
237 null 		return core_slice.call( this );
254 busy 	pushStack: function( elems ) {
260 free 		ret.prevObject = this;
266 newGame 
273 blankGame 
52 B 	core_push = core_deletedIds.push,
55 A 	core_toString = class2type.toString,
81 z 
95 F 		return letter.toUpperCase();
143 H 			if ( match && (match[1] || !context) ) {
154 C 					) );
158 J 						for ( match in context ) {
165 K 								this.attr( match, context[ match ] );
179 L 						// Handle the case where IE and Opera return items
198 M 
217 G 		if ( selector.selector !== undefined ) {
223 N 	},
232 I 	size: function() {
241 y 	// Get the whole matched element set as a clean array
251 E 
257 D 		var ret = jQuery.merge( this.constructor(), elems );
12 null  * Date: 2013-2-4
13 null  */
29 b_bor 	// For `typeof node.method` instead of `node.method !== undefined`
47 menu 
62 about 		return new jQuery.fn.init( selector, context, rootjQuery );
72 shd 	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
78 offsetPosition 
87 drw 
133 checkSupported 		if ( typeof selector === "string" ) {
140 start 			}
161 restart 								this[ match ]( context[ match ] );
165 pause 								this.attr( match, context[ match ] );
169 play 
173 drawSnake 				} else {
192 lP 					return this;
195 rP 			// HANDLE: $(expr, $(...))
198 upP 
201 dP 			} else {
204 moveUp 
211 moveDown 		// HANDLE: $(function)
218 moveLeft 			this.selector = selector.selector;
225 moveRight 	// Start with an empty selector
232 executeMove 	size: function() {
237 makeFoodItem 		return core_slice.call( this );
251 hasPoint 
254 hasEatenItself 	pushStack: function( elems ) {
257 gameOver 		var ret = jQuery.merge( this.constructor(), elems );
272 upL 	},
278 upS 		return this;
283 udL 	},
331 moveSnake 		i = 2;
13 null  */
295 null 			j = +i + ( i < 0 ? len : 0 );
338 null 
94 null 	fcamelCase = function( all, letter ) {
501 Point 		for ( name in obj ) {
519 Player 			keepScripts = context;
566 Enemy 		jQuery.error( "Invalid JSON: " + data );
581 Energy 				xml.async = "false";
186 null 						this.length = 1;
187 d 						this[0] = elem;
200 h 			// (which is just equivalent to: $(context).find(expr)
208 x 			this.length = 1;
215 R 		}
219 S 			this.context = selector.context;
220 T 		}
221 U 
228 V 	// The default length of a jQuery object is 0
235 W 
236 K 	toArray: function() {
265 L 	},
279 M 	},
413 O 	ready: function( wait ) {
463 null 			return String( obj );
507 null 	error: function( msg ) {
512 null 	// context (optional): If specified, the fragment will be created in this context, defaults to document
533 null 		if ( scripts ) {
449 Region 	isArray: Array.isArray || function( obj ) {
464 Blob 		}
587 Joint 		if ( !xml || !xml.documentElement || xml.getElementsByTagName( "parsererror" ).length ) {
596 getArrayIndexByOffset 	// Workarounds based on findings by Jim Driscoll
601 getArrayElementByOffset 			// We use an anonymous function so that context is window
604 getTime 				window[ "eval" ].call( window, data );
607 distanceBetween 	},
54 null 	core_indexOf = core_deletedIds.indexOf,
55 b 	core_toString = class2type.toString,
64 e 
68 i 	// Used for splitting on whitespace
73 k 
80 s 	rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
90 z 	rdashAlpha = /-([\da-z])/gi,
97 L 
104 M 			jQuery.ready();
107 E 	// Clean-up method for dom ready events
117 G 	};
125 N 		var match, elem;
145 O 				// HANDLE: $(html) -> $(array)
148 P 
151 Q 						match[1],
154 R 					) );
157 B 					if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
163 A 							// ...and otherwise set as attributes
173 D 				} else {
186 H 						this.length = 1;
196 S 			} else if ( !context || context.jquery ) {
413 null 	ready: function( wait ) {
453 null 	isWindow: function( obj ) {
457 null 	isNumeric: function( obj ) {
484 null 			}
512 null 	// context (optional): If specified, the fragment will be created in this context, defaults to document
528 null 		if ( parsed ) {
545 null 		if ( data === null ) {
575 null 		try {
83 init 	rvalidchars = /^[\],:{}\s]*$/,
106 createParticles 	},
125 documentMouseMoveHandler 		var match, elem;
130 documentMouseDownHandler 		}
134 documentMouseUpHandler 			if ( selector.charAt(0) === "<" && selector.charAt( selector.length - 1 ) === ">" && selector.length >= 3 ) {
138 canvasTouchStartHandler 			} else {
147 canvasTouchMoveHandler 					context = context instanceof jQuery ? context[0] : context;
156 windowResizeHandler 					// HANDLE: $(html, props)
168 loop 					}
51 null 	core_concat = core_deletedIds.concat,
52 aG 	core_push = core_deletedIds.push,
59 t 	// Define a local copy of jQuery
66 ay 	core_pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
72 ax 	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
76 aE 	// Strict HTML recognition (#11290: must start with <)
80 ao 	rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
84 u 	rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g,
88 b 	// Matches dashed string for camelizing
92 z 
98 C 	// The ready event handler
105 a 		}
109 aD 		if ( document.addEventListener ) {
113 aa 		} else {
119 ab jQuery.fn = jQuery.prototype = {
126 aq 
130 ae 		}
134 al 			if ( selector.charAt(0) === "<" && selector.charAt( selector.length - 1 ) === ">" && selector.length >= 3 ) {
139 X 				match = rquickExpr.exec( selector );
144 am 
148 Z 
152 aA 						context && context.nodeType ? context.ownerDocument || context : document,
167 J 						}
171 Q 
179 A 						// Handle the case where IE and Opera return items
183 k 						}
189 j 
195 i 			// HANDLE: $(expr, $(...))
201 x 			} else {
205 ar 		// HANDLE: $(DOMElement)
209 O 			return this;
215 d 		}
224 P 
239 e 
243 f 		return num == null ?
249 ag 			( num < 0 ? this[ this.length + num ] : this[ num ] );
260 ai 		ret.prevObject = this;
280 w 
293 V 	eq: function( i ) {
297 ad 	},
302 az 		}));
336 aB 		target = {};
354 l 				if ( target === copy ) {
366 L 					}
393 B 		return jQuery;
731 W 				first[ i++ ] = second[ j ];
769 aC 			ret = [];
979 ah 	});
306 v 		return this.prevObject || this.constructor(null);
309 Y 	// For internal use only.
312 p 	sort: [].sort,
315 o 
318 n 
321 r 		target = arguments[0] || {},
324 I 		deep = false;
327 aw 	if ( typeof target === "boolean" ) {
330 aF 		// skip the boolean and the target
333 aH 
340 null 	if ( length === i ) {
346 null 		// Only deal with non-null/undefined values
349 null 			for ( name in options ) {
378 null 
381 null };
387 null 		}
400 af 	// the ready event fires. See #6781
408 an 			jQuery.ready( true );
413 c 	ready: function( wait ) {
419 N 
422 au 			return setTimeout( jQuery.ready );
425 g 		// Remember that the DOM is ready
428 y 		// If a normal DOM Ready event fired, decrement, and wait if need be
431 H 		}
493 U 		var key;
535 ak 		}
574 ap 		}
603 null 			( window.execScript || function( data ) {
606 null 		}
609 null 	// Convert dashed to camelCase; used by the css and data modules
617 G 	},
624 av 			isArray = isArraylike( obj );
627 M 			if ( isArray ) {
643 ac 			}
683 S 
696 F 			}
739 null 		first.length = i;
742 null 	},
753 null 		for ( ; i < length; i++ ) {
760 null 		return ret;
763 null 	// arg is for internal usage only
766 null 			i = 0,
793 m 		return core_concat.apply( [], ret );
799 T 	// Bind a function to a context, optionally partially applying any
807 null 			fn = tmp;
816 aI 		// Simulated bind
819 E 			return fn.apply( context || this, args.concat( core_slice.call( arguments ) ) );
822 at 		// Set the guid of unique handler to the same of original handler, so it can be removed
874 D 
917 R 
931 s 							return setTimeout( doScrollCheck, 50 );
985 aj  *
1113 null 				return fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );
1131 a 				stack = undefined;
780 aM 
786 aL 				if ( value != null ) {
879 aN 	},
887 null 	if ( !readyList ) {
832 aL 			length = elems.length,
846 null 			if ( !jQuery.isFunction( value ) ) {
852 null 				if ( raw ) {
855 null 
858 null 					bulk = fn;
1138 null 			locked: function() {
909 null 			document.attachEvent( "onreadystatechange", completed );
281 null 	slice: function() {
409 null 		}
415 null 		// Abort if there are pending holds or we're already ready
556 null 				// Logic borrowed from http://json.org/json2.js
747 null 			i = 0,
934 null 						// detach all dom ready events
938 null 						jQuery.ready();
942 null 		}
946 null 
950 null });
954 null 		type = jQuery.type( obj );
1395 onPause 	// Make sure that the options inside disabled selects aren't marked as disabled
280 null 
321 null 		target = arguments[0] || {},
338 null 
347 null 		if ( (options = arguments[ i ]) != null ) {
355 null 					continue;
360 null 					if ( copyIsArray ) {
367 null 
373 null 					target[ name ] = copy;
378 null 
390 null 			window.jQuery = _jQuery;
413 null 	ready: function( wait ) {
420 null 		// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
427 null 
470 null 	isPlainObject: function( obj ) {
486 null 			// IE8,9 Will throw exceptions on certain host objects #9897
502 null 			return false;
507 null 	error: function( msg ) {
538 null 
594 null 
607 null 	},
612 null 		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
620 null 	each: function( obj, callback, args ) {
641 null 					}
663 null 			}
690 null 				jQuery.merge( ret,
700 null 	},
712 null 
1091 null 				if ( list ) {
1111 null 			// If no argument is given, return whether or not list has callbacks attached.
1133 null 					self.disable();
1157 null 				return this;
1174 null 				[ "notify", "progress", jQuery.Callbacks("memory") ]
1186 null 					var fns = arguments;
1232 null 				// [ reject_list | resolve_list ].disable; progress_list.lock
1275 null 					} else if ( !( --remaining ) ) {
1318 null 
1330 null 
1362 null 		cssFloat: !!a.style.cssFloat,
1367 null 		// Make sure that a selected-by-default option has a working selected property.
1351 null 		// Make sure that URLs aren't manipulated
1352 null 		// (IE normalizes it by default)
1359 null 
1385 null 		shrinkWrapBlocks: false,
21 DrawLine var
74 CalcCross 	// A simple way to check for HTML strings
82 CalcNormal 	// JSON RegExp
95 CreateP 		return letter.toUpperCase();
100 MMulti 
112 VMulti 
119 VMulti2 jQuery.fn = jQuery.prototype = {
127 MAdd 		// HANDLE: $(""), $(null), $(undefined), $(false)
138 Translate 			} else {
148 RotateX 
162 RotateY 
176 RotateZ 					// Check parentNode to catch when Blackberry 4.6 returns
190 DrawQube 					this.context = document;
236 Loop 	toArray: function() {
255 Init 
34 morph 	location = window.location,
30 createVector 	core_strundefined = typeof undefined,
34 sqrLengthVector 	location = window.location,
38 lengthVector 
42 addVector 	// [[Class]] -> type pairs
49 subVector 
56 scaleVector 	core_hasOwn = class2type.hasOwnProperty,
63 normaliseVector 	},
71 add 	// Make sure we trim BOM and NBSP (here's looking at you, Safari 5.0 and IE)
75 sub 	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
79 scalev 	// Match a standalone tag
83 dot 	rvalidchars = /^[\],:{}\s]*$/,
87 scale 
91 cross 
98 normalise 	// The ready event handler
103 transformMatrix 			detach();
111 invertMatrix 			window.removeEventListener( "load", completed, false );
129 Triangle 			return this;
185 Scene 						// Otherwise, we inject the element directly into the jQuery object
265 Camera 	},
296 renderRows 		return this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );
317 raytraceScene jQuery.fn.init.prototype = jQuery.fn;
409 arrayToCanvasCommands 		}
164 null 							} else {
193 null 				}
248 null 			// Return just the object
287 null 	},
309 null 	// For internal use only.
361 null 						copyIsArray = false;
9 fannkuch  * Released under the MIT license
13 Body  */
30 Jupiter 	core_strundefined = typeof undefined,
42 Saturn 	// [[Class]] -> type pairs
54 Uranus 	core_indexOf = core_deletedIds.indexOf,
66 Neptune 	core_pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
78 Sun 
83 NBodySystem 	rvalidchars = /^[\],:{}\s]*$/,
23 null 	readyList,
99 null 	completed = function( event ) {
132 null 		// Handle HTML strings
161 null 								this[ match ]( context[ match ] );
10 pad  * http://jquery.org/license
19 nsieve // Support: Firefox 18+
34 sieve 	location = window.location,
10 pad  * http://jquery.org/license
16 primes // Can't do this because several apps including ASP.NET trace
29 sieve 	// For `typeof node.method` instead of `node.method !== undefined`
26 hex_md5 	rootjQuery,
27 b64_md5 
28 str_md5 	// Support: IE<9
29 hex_hmac_md5 	// For `typeof node.method` instead of `node.method !== undefined`
30 b64_hmac_md5 	core_strundefined = typeof undefined,
31 str_hmac_md5 
36 md5_vm_test 	// Map over jQuery in case of overwrite
44 core_md5 
142 md5_cmn 			// Match html or make sure no context is specified for #id
146 md5_ff 				if ( match[1] ) {
150 md5_gg 					jQuery.merge( this, jQuery.parseHTML(
154 md5_hh 					) );
158 md5_ii 						for ( match in context ) {
166 core_hmac_md5 							}
186 safe_add 						this.length = 1;
196 bit_rol 			} else if ( !context || context.jquery ) {
205 str2binl 		// HANDLE: $(DOMElement)
217 binl2str 		if ( selector.selector !== undefined ) {
229 binl2hex 	length: 0,
244 binl2b64 
26 hex_sha1 	rootjQuery,
27 b64_sha1 
28 str_sha1 	// Support: IE<9
29 hex_hmac_sha1 	// For `typeof node.method` instead of `node.method !== undefined`
30 b64_hmac_sha1 	core_strundefined = typeof undefined,
31 str_hmac_sha1 
36 sha1_vm_test 	// Map over jQuery in case of overwrite
44 core_sha1 
92 sha1_ft 
103 sha1_kt 			detach();
112 core_hmac_sha1 
132 safe_add 		// Handle HTML strings
142 rol 			// Match html or make sure no context is specified for #id
151 str2binb 						match[1],
163 binb2str 							// ...and otherwise set as attributes
175 binb2hex 
190 binb2b64 					this.context = document;
34 FIXED 	location = window.location,
39 FLOAT 	// Map over the $ in case of overwrite
44 DEG2RAD 
57 cordicsincos 	core_trim = core_version.trim,
87 cordic 
9 partial  * Released under the MIT license
10 A  * http://jquery.org/license
14 Au (function( window, undefined ) {
23 Atu 	readyList,
32 AtAu 	// Use the correct document accordingly with window argument (sandbox)
37 spectralnorm 	_jQuery = window.jQuery,
49 toBase64 
90 base64ToString 	rdashAlpha = /-([\da-z])/gi,
12 rand  * Date: 2013-2-4
40 makeCumulative 	_$ = window.$,
48 fastaRepeat 	core_version = "1.9.1",
64 fastaRandom 
9 TreeNode  * Released under the MIT license
20 bottomUpTree //"use strict";
15 null 
9 fast3bitlookup  * Released under the MIT license
30 TimeFunc 	core_strundefined = typeof undefined,
9 ack  * Released under the MIT license
15 fib 
20 tak //"use strict";
5 fA  * Includes Sizzle.js
19 fB // Support: Firefox 18+
33 fC 	document = window.document,
44 fD 
7 fA  *
22 fB 	// The deferred used on DOM ready
36 fC 	// Map over jQuery in case of overwrite
47 fD 
7 fA  *
23 fB 	readyList,
37 fC 	_jQuery = window.jQuery,
48 fD 	core_version = "1.9.1",
7 fA  *
24 fB 
38 fC 
49 fD 
7 fA  *
23 fB 	readyList,
37 fC 	_jQuery = window.jQuery,
48 fD 	core_version = "1.9.1",
7 fA  *
24 fB 
38 fC 
49 fD 
7 fA  *
24 fB 
38 fC 
49 fD 
7 fA  *
24 fB 
38 fC 
49 fD 
7 fA  *
31 fB 
45 fC 	// List of deleted data cache ids, so we can reuse them
56 fD 	core_hasOwn = class2type.hasOwnProperty,
7 fA  *
31 fB 
45 fC 	// List of deleted data cache ids, so we can reuse them
56 fD 	core_hasOwn = class2type.hasOwnProperty,
7 fA  *
31 fB 
45 fC 	// List of deleted data cache ids, so we can reuse them
56 fD 	core_hasOwn = class2type.hasOwnProperty,
7 fA  *
28 fB 	// Support: IE<9
42 fC 	// [[Class]] -> type pairs
53 fD 	core_slice = core_deletedIds.slice,
7 fA  *
28 fB 	// Support: IE<9
42 fC 	// [[Class]] -> type pairs
53 fD 	core_slice = core_deletedIds.slice,
7 fA  *
28 fB 	// Support: IE<9
42 fC 	// [[Class]] -> type pairs
53 fD 	core_slice = core_deletedIds.slice,
7 fA  *
28 fB 	// Support: IE<9
42 fC 	// [[Class]] -> type pairs
53 fD 	core_slice = core_deletedIds.slice,
5 fA  * Includes Sizzle.js
26 fB 	rootjQuery,
40 fC 	_$ = window.$,
51 fD 	core_concat = core_deletedIds.concat,
5 fA  * Includes Sizzle.js
26 fB 	rootjQuery,
40 fC 	_$ = window.$,
51 fD 	core_concat = core_deletedIds.concat,
5 fA  * Includes Sizzle.js
26 fB 	rootjQuery,
40 fC 	_$ = window.$,
51 fD 	core_concat = core_deletedIds.concat,
5 fA  * Includes Sizzle.js
26 fB 	rootjQuery,
40 fC 	_$ = window.$,
51 fD 	core_concat = core_deletedIds.concat,
1 null /*!
5 fA  * Includes Sizzle.js
26 fB 	rootjQuery,
40 fC 	_$ = window.$,
51 fD 	core_concat = core_deletedIds.concat,
5 fA  * Includes Sizzle.js
26 fB 	rootjQuery,
40 fC 	_$ = window.$,
51 fD 	core_concat = core_deletedIds.concat,
3 f1  * http://jquery.com/
11 fA  *
32 fB 	// Use the correct document accordingly with window argument (sandbox)
46 fC 	core_deletedIds = [],
57 fD 	core_trim = core_version.trim,
1 f1 /*!
9 fA  * Released under the MIT license
30 fB 	core_strundefined = typeof undefined,
44 fC 
55 fD 	core_toString = class2type.toString,
2 f1  * jQuery JavaScript Library v1.9.1
5 fA  * Includes Sizzle.js
26 fB 	rootjQuery,
40 fC 	_$ = window.$,
51 fD 	core_concat = core_deletedIds.concat,
10 null  * http://jquery.org/license
9 f  * Released under the MIT license
9 f  * Released under the MIT license
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
10 CSlider  * http://jquery.org/license
12 null  * Date: 2013-2-4
16 null // Can't do this because several apps including ASP.NET trace
26 null 	rootjQuery,
1 null /*!
10 null  * http://jquery.org/license
9 f  * Released under the MIT license
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
10 CSlider  * http://jquery.org/license
12 null  * Date: 2013-2-4
16 null // Can't do this because several apps including ASP.NET trace
26 null 	rootjQuery,
1 null /*!
9 f  * Released under the MIT license
10 null  * http://jquery.org/license
9 f  * Released under the MIT license
9 f  * Released under the MIT license
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
10 CSlider  * http://jquery.org/license
12 null  * Date: 2013-2-4
16 null // Can't do this because several apps including ASP.NET trace
26 null 	rootjQuery,
1 null /*!
2 f1  * jQuery JavaScript Library v1.9.1
5 fA  * Includes Sizzle.js
26 fB 	rootjQuery,
40 fC 	_$ = window.$,
51 fD 	core_concat = core_deletedIds.concat,
10 null  * http://jquery.org/license
9 f  * Released under the MIT license
9 f  * Released under the MIT license
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
10 CSlider  * http://jquery.org/license
12 null  * Date: 2013-2-4
16 null // Can't do this because several apps including ASP.NET trace
26 null 	rootjQuery,
1 null /*!
10 fA  * http://jquery.org/license
26 fB 	rootjQuery,
42 fC 	// [[Class]] -> type pairs
53 fD 	core_slice = core_deletedIds.slice,
9 f  * Released under the MIT license
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
10 CSlider  * http://jquery.org/license
12 null  * Date: 2013-2-4
16 null // Can't do this because several apps including ASP.NET trace
26 null 	rootjQuery,
1 null /*!
10 null  * http://jquery.org/license
9 f  * Released under the MIT license
10 fA  * http://jquery.org/license
26 fB 	rootjQuery,
42 fC 	// [[Class]] -> type pairs
53 fD 	core_slice = core_deletedIds.slice,
1 fA /*!
15 fB 
29 fC 	// For `typeof node.method` instead of `node.method !== undefined`
40 fD 	_$ = window.$,
10 null  * http://jquery.org/license
9 f  * Released under the MIT license
9 f  * Released under the MIT license
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
10 CSlider  * http://jquery.org/license
12 null  * Date: 2013-2-4
16 null // Can't do this because several apps including ASP.NET trace
26 null 	rootjQuery,
1 null /*!
10 fA  * http://jquery.org/license
26 fB 	rootjQuery,
42 fC 	// [[Class]] -> type pairs
53 fD 	core_slice = core_deletedIds.slice,
1 fA /*!
15 fB 
29 fC 	// For `typeof node.method` instead of `node.method !== undefined`
40 fD 	_$ = window.$,
10 null  * http://jquery.org/license
9 f  * Released under the MIT license
9 f  * Released under the MIT license
8 null  * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors
10 CSlider  * http://jquery.org/license
12 null  * Date: 2013-2-4
16 null // Can't do this because several apps including ASP.NET trace
26 null 	rootjQuery,
1 null /*!
10 fA  * http://jquery.org/license
26 fB 	rootjQuery,
42 fC 	// [[Class]] -> type pairs
53 fD 	core_slice = core_deletedIds.slice,
1 fA /*!
18 fB // you try to trace through "use strict" call chains. (#13335)
34 fC 	location = window.location,
47 fD 
